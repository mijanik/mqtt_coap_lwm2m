
embenet_node_demo.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000138  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002bd4c  08000140  08000140  00010140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005c68  0802be90  0802be90  0003be90  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08031af8  08031af8  0005031c  2**0
                  CONTENTS
  4 .ARM          00000008  08031af8  08031af8  00041af8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08031b00  08031b00  0005031c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08031b00  08031b00  00041b00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08031b04  08031b04  00041b04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000031c  20000000  08031b08  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00003dc0  20000320  08031e24  00050320  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200040e0  08031e24  000540e0  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0005031c  2**0
                  CONTENTS, READONLY
 12 .comment      00000088  00000000  00000000  00050346  2**0
                  CONTENTS, READONLY
 13 .debug_info   00023801  00000000  00000000  000503ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000671e  00000000  00000000  00073bcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001e48  00000000  00000000  0007a2f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000016ac  00000000  00000000  0007c138  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00025792  00000000  00000000  0007d7e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00026bbe  00000000  00000000  000a2f76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000c3077  00000000  00000000  000c9b34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000086f0  00000000  00000000  0018cbac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000060  00000000  00000000  0019529c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000320 	.word	0x20000320
 800015c:	00000000 	.word	0x00000000
 8000160:	0802be74 	.word	0x0802be74

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000324 	.word	0x20000324
 800017c:	0802be74 	.word	0x0802be74

08000180 <memchr>:
 8000180:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000184:	2a10      	cmp	r2, #16
 8000186:	db2b      	blt.n	80001e0 <memchr+0x60>
 8000188:	f010 0f07 	tst.w	r0, #7
 800018c:	d008      	beq.n	80001a0 <memchr+0x20>
 800018e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000192:	3a01      	subs	r2, #1
 8000194:	428b      	cmp	r3, r1
 8000196:	d02d      	beq.n	80001f4 <memchr+0x74>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	b342      	cbz	r2, 80001f0 <memchr+0x70>
 800019e:	d1f6      	bne.n	800018e <memchr+0xe>
 80001a0:	b4f0      	push	{r4, r5, r6, r7}
 80001a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001aa:	f022 0407 	bic.w	r4, r2, #7
 80001ae:	f07f 0700 	mvns.w	r7, #0
 80001b2:	2300      	movs	r3, #0
 80001b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001b8:	3c08      	subs	r4, #8
 80001ba:	ea85 0501 	eor.w	r5, r5, r1
 80001be:	ea86 0601 	eor.w	r6, r6, r1
 80001c2:	fa85 f547 	uadd8	r5, r5, r7
 80001c6:	faa3 f587 	sel	r5, r3, r7
 80001ca:	fa86 f647 	uadd8	r6, r6, r7
 80001ce:	faa5 f687 	sel	r6, r5, r7
 80001d2:	b98e      	cbnz	r6, 80001f8 <memchr+0x78>
 80001d4:	d1ee      	bne.n	80001b4 <memchr+0x34>
 80001d6:	bcf0      	pop	{r4, r5, r6, r7}
 80001d8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001dc:	f002 0207 	and.w	r2, r2, #7
 80001e0:	b132      	cbz	r2, 80001f0 <memchr+0x70>
 80001e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e6:	3a01      	subs	r2, #1
 80001e8:	ea83 0301 	eor.w	r3, r3, r1
 80001ec:	b113      	cbz	r3, 80001f4 <memchr+0x74>
 80001ee:	d1f8      	bne.n	80001e2 <memchr+0x62>
 80001f0:	2000      	movs	r0, #0
 80001f2:	4770      	bx	lr
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr
 80001f8:	2d00      	cmp	r5, #0
 80001fa:	bf06      	itte	eq
 80001fc:	4635      	moveq	r5, r6
 80001fe:	3803      	subeq	r0, #3
 8000200:	3807      	subne	r0, #7
 8000202:	f015 0f01 	tst.w	r5, #1
 8000206:	d107      	bne.n	8000218 <memchr+0x98>
 8000208:	3001      	adds	r0, #1
 800020a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800020e:	bf02      	ittt	eq
 8000210:	3001      	addeq	r0, #1
 8000212:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000216:	3001      	addeq	r0, #1
 8000218:	bcf0      	pop	{r4, r5, r6, r7}
 800021a:	3801      	subs	r0, #1
 800021c:	4770      	bx	lr
 800021e:	bf00      	nop

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <__aeabi_dmul>:
 8000230:	b570      	push	{r4, r5, r6, lr}
 8000232:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000236:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800023a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800023e:	bf1d      	ittte	ne
 8000240:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000244:	ea94 0f0c 	teqne	r4, ip
 8000248:	ea95 0f0c 	teqne	r5, ip
 800024c:	f000 f8de 	bleq	800040c <__aeabi_dmul+0x1dc>
 8000250:	442c      	add	r4, r5
 8000252:	ea81 0603 	eor.w	r6, r1, r3
 8000256:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800025a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800025e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000262:	bf18      	it	ne
 8000264:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000268:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800026c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000270:	d038      	beq.n	80002e4 <__aeabi_dmul+0xb4>
 8000272:	fba0 ce02 	umull	ip, lr, r0, r2
 8000276:	f04f 0500 	mov.w	r5, #0
 800027a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800027e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000282:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000286:	f04f 0600 	mov.w	r6, #0
 800028a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800028e:	f09c 0f00 	teq	ip, #0
 8000292:	bf18      	it	ne
 8000294:	f04e 0e01 	orrne.w	lr, lr, #1
 8000298:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800029c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80002a0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80002a4:	d204      	bcs.n	80002b0 <__aeabi_dmul+0x80>
 80002a6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80002aa:	416d      	adcs	r5, r5
 80002ac:	eb46 0606 	adc.w	r6, r6, r6
 80002b0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80002b4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80002b8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80002bc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80002c0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80002c4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80002c8:	bf88      	it	hi
 80002ca:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80002ce:	d81e      	bhi.n	800030e <__aeabi_dmul+0xde>
 80002d0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80002d4:	bf08      	it	eq
 80002d6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80002da:	f150 0000 	adcs.w	r0, r0, #0
 80002de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002e2:	bd70      	pop	{r4, r5, r6, pc}
 80002e4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80002e8:	ea46 0101 	orr.w	r1, r6, r1
 80002ec:	ea40 0002 	orr.w	r0, r0, r2
 80002f0:	ea81 0103 	eor.w	r1, r1, r3
 80002f4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002f8:	bfc2      	ittt	gt
 80002fa:	ebd4 050c 	rsbsgt	r5, r4, ip
 80002fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000302:	bd70      	popgt	{r4, r5, r6, pc}
 8000304:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000308:	f04f 0e00 	mov.w	lr, #0
 800030c:	3c01      	subs	r4, #1
 800030e:	f300 80ab 	bgt.w	8000468 <__aeabi_dmul+0x238>
 8000312:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000316:	bfde      	ittt	le
 8000318:	2000      	movle	r0, #0
 800031a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800031e:	bd70      	pople	{r4, r5, r6, pc}
 8000320:	f1c4 0400 	rsb	r4, r4, #0
 8000324:	3c20      	subs	r4, #32
 8000326:	da35      	bge.n	8000394 <__aeabi_dmul+0x164>
 8000328:	340c      	adds	r4, #12
 800032a:	dc1b      	bgt.n	8000364 <__aeabi_dmul+0x134>
 800032c:	f104 0414 	add.w	r4, r4, #20
 8000330:	f1c4 0520 	rsb	r5, r4, #32
 8000334:	fa00 f305 	lsl.w	r3, r0, r5
 8000338:	fa20 f004 	lsr.w	r0, r0, r4
 800033c:	fa01 f205 	lsl.w	r2, r1, r5
 8000340:	ea40 0002 	orr.w	r0, r0, r2
 8000344:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000348:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800034c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000350:	fa21 f604 	lsr.w	r6, r1, r4
 8000354:	eb42 0106 	adc.w	r1, r2, r6
 8000358:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800035c:	bf08      	it	eq
 800035e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000362:	bd70      	pop	{r4, r5, r6, pc}
 8000364:	f1c4 040c 	rsb	r4, r4, #12
 8000368:	f1c4 0520 	rsb	r5, r4, #32
 800036c:	fa00 f304 	lsl.w	r3, r0, r4
 8000370:	fa20 f005 	lsr.w	r0, r0, r5
 8000374:	fa01 f204 	lsl.w	r2, r1, r4
 8000378:	ea40 0002 	orr.w	r0, r0, r2
 800037c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000380:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000384:	f141 0100 	adc.w	r1, r1, #0
 8000388:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800038c:	bf08      	it	eq
 800038e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000392:	bd70      	pop	{r4, r5, r6, pc}
 8000394:	f1c4 0520 	rsb	r5, r4, #32
 8000398:	fa00 f205 	lsl.w	r2, r0, r5
 800039c:	ea4e 0e02 	orr.w	lr, lr, r2
 80003a0:	fa20 f304 	lsr.w	r3, r0, r4
 80003a4:	fa01 f205 	lsl.w	r2, r1, r5
 80003a8:	ea43 0302 	orr.w	r3, r3, r2
 80003ac:	fa21 f004 	lsr.w	r0, r1, r4
 80003b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003b4:	fa21 f204 	lsr.w	r2, r1, r4
 80003b8:	ea20 0002 	bic.w	r0, r0, r2
 80003bc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80003c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003c4:	bf08      	it	eq
 80003c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003ca:	bd70      	pop	{r4, r5, r6, pc}
 80003cc:	f094 0f00 	teq	r4, #0
 80003d0:	d10f      	bne.n	80003f2 <__aeabi_dmul+0x1c2>
 80003d2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80003d6:	0040      	lsls	r0, r0, #1
 80003d8:	eb41 0101 	adc.w	r1, r1, r1
 80003dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003e0:	bf08      	it	eq
 80003e2:	3c01      	subeq	r4, #1
 80003e4:	d0f7      	beq.n	80003d6 <__aeabi_dmul+0x1a6>
 80003e6:	ea41 0106 	orr.w	r1, r1, r6
 80003ea:	f095 0f00 	teq	r5, #0
 80003ee:	bf18      	it	ne
 80003f0:	4770      	bxne	lr
 80003f2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80003f6:	0052      	lsls	r2, r2, #1
 80003f8:	eb43 0303 	adc.w	r3, r3, r3
 80003fc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000400:	bf08      	it	eq
 8000402:	3d01      	subeq	r5, #1
 8000404:	d0f7      	beq.n	80003f6 <__aeabi_dmul+0x1c6>
 8000406:	ea43 0306 	orr.w	r3, r3, r6
 800040a:	4770      	bx	lr
 800040c:	ea94 0f0c 	teq	r4, ip
 8000410:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000414:	bf18      	it	ne
 8000416:	ea95 0f0c 	teqne	r5, ip
 800041a:	d00c      	beq.n	8000436 <__aeabi_dmul+0x206>
 800041c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000420:	bf18      	it	ne
 8000422:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000426:	d1d1      	bne.n	80003cc <__aeabi_dmul+0x19c>
 8000428:	ea81 0103 	eor.w	r1, r1, r3
 800042c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000430:	f04f 0000 	mov.w	r0, #0
 8000434:	bd70      	pop	{r4, r5, r6, pc}
 8000436:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800043a:	bf06      	itte	eq
 800043c:	4610      	moveq	r0, r2
 800043e:	4619      	moveq	r1, r3
 8000440:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000444:	d019      	beq.n	800047a <__aeabi_dmul+0x24a>
 8000446:	ea94 0f0c 	teq	r4, ip
 800044a:	d102      	bne.n	8000452 <__aeabi_dmul+0x222>
 800044c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000450:	d113      	bne.n	800047a <__aeabi_dmul+0x24a>
 8000452:	ea95 0f0c 	teq	r5, ip
 8000456:	d105      	bne.n	8000464 <__aeabi_dmul+0x234>
 8000458:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800045c:	bf1c      	itt	ne
 800045e:	4610      	movne	r0, r2
 8000460:	4619      	movne	r1, r3
 8000462:	d10a      	bne.n	800047a <__aeabi_dmul+0x24a>
 8000464:	ea81 0103 	eor.w	r1, r1, r3
 8000468:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800046c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000470:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000474:	f04f 0000 	mov.w	r0, #0
 8000478:	bd70      	pop	{r4, r5, r6, pc}
 800047a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800047e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000482:	bd70      	pop	{r4, r5, r6, pc}

08000484 <__aeabi_drsub>:
 8000484:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000488:	e002      	b.n	8000490 <__adddf3>
 800048a:	bf00      	nop

0800048c <__aeabi_dsub>:
 800048c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000490 <__adddf3>:
 8000490:	b530      	push	{r4, r5, lr}
 8000492:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000496:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800049a:	ea94 0f05 	teq	r4, r5
 800049e:	bf08      	it	eq
 80004a0:	ea90 0f02 	teqeq	r0, r2
 80004a4:	bf1f      	itttt	ne
 80004a6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80004aa:	ea55 0c02 	orrsne.w	ip, r5, r2
 80004ae:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80004b2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b6:	f000 80e2 	beq.w	800067e <__adddf3+0x1ee>
 80004ba:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80004be:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80004c2:	bfb8      	it	lt
 80004c4:	426d      	neglt	r5, r5
 80004c6:	dd0c      	ble.n	80004e2 <__adddf3+0x52>
 80004c8:	442c      	add	r4, r5
 80004ca:	ea80 0202 	eor.w	r2, r0, r2
 80004ce:	ea81 0303 	eor.w	r3, r1, r3
 80004d2:	ea82 0000 	eor.w	r0, r2, r0
 80004d6:	ea83 0101 	eor.w	r1, r3, r1
 80004da:	ea80 0202 	eor.w	r2, r0, r2
 80004de:	ea81 0303 	eor.w	r3, r1, r3
 80004e2:	2d36      	cmp	r5, #54	; 0x36
 80004e4:	bf88      	it	hi
 80004e6:	bd30      	pophi	{r4, r5, pc}
 80004e8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80004ec:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80004f0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80004f4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80004f8:	d002      	beq.n	8000500 <__adddf3+0x70>
 80004fa:	4240      	negs	r0, r0
 80004fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000500:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000504:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000508:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800050c:	d002      	beq.n	8000514 <__adddf3+0x84>
 800050e:	4252      	negs	r2, r2
 8000510:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000514:	ea94 0f05 	teq	r4, r5
 8000518:	f000 80a7 	beq.w	800066a <__adddf3+0x1da>
 800051c:	f1a4 0401 	sub.w	r4, r4, #1
 8000520:	f1d5 0e20 	rsbs	lr, r5, #32
 8000524:	db0d      	blt.n	8000542 <__adddf3+0xb2>
 8000526:	fa02 fc0e 	lsl.w	ip, r2, lr
 800052a:	fa22 f205 	lsr.w	r2, r2, r5
 800052e:	1880      	adds	r0, r0, r2
 8000530:	f141 0100 	adc.w	r1, r1, #0
 8000534:	fa03 f20e 	lsl.w	r2, r3, lr
 8000538:	1880      	adds	r0, r0, r2
 800053a:	fa43 f305 	asr.w	r3, r3, r5
 800053e:	4159      	adcs	r1, r3
 8000540:	e00e      	b.n	8000560 <__adddf3+0xd0>
 8000542:	f1a5 0520 	sub.w	r5, r5, #32
 8000546:	f10e 0e20 	add.w	lr, lr, #32
 800054a:	2a01      	cmp	r2, #1
 800054c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000550:	bf28      	it	cs
 8000552:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000556:	fa43 f305 	asr.w	r3, r3, r5
 800055a:	18c0      	adds	r0, r0, r3
 800055c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000560:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000564:	d507      	bpl.n	8000576 <__adddf3+0xe6>
 8000566:	f04f 0e00 	mov.w	lr, #0
 800056a:	f1dc 0c00 	rsbs	ip, ip, #0
 800056e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000572:	eb6e 0101 	sbc.w	r1, lr, r1
 8000576:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800057a:	d31b      	bcc.n	80005b4 <__adddf3+0x124>
 800057c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000580:	d30c      	bcc.n	800059c <__adddf3+0x10c>
 8000582:	0849      	lsrs	r1, r1, #1
 8000584:	ea5f 0030 	movs.w	r0, r0, rrx
 8000588:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800058c:	f104 0401 	add.w	r4, r4, #1
 8000590:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000594:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000598:	f080 809a 	bcs.w	80006d0 <__adddf3+0x240>
 800059c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80005a0:	bf08      	it	eq
 80005a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80005a6:	f150 0000 	adcs.w	r0, r0, #0
 80005aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005ae:	ea41 0105 	orr.w	r1, r1, r5
 80005b2:	bd30      	pop	{r4, r5, pc}
 80005b4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80005b8:	4140      	adcs	r0, r0
 80005ba:	eb41 0101 	adc.w	r1, r1, r1
 80005be:	3c01      	subs	r4, #1
 80005c0:	bf28      	it	cs
 80005c2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80005c6:	d2e9      	bcs.n	800059c <__adddf3+0x10c>
 80005c8:	f091 0f00 	teq	r1, #0
 80005cc:	bf04      	itt	eq
 80005ce:	4601      	moveq	r1, r0
 80005d0:	2000      	moveq	r0, #0
 80005d2:	fab1 f381 	clz	r3, r1
 80005d6:	bf08      	it	eq
 80005d8:	3320      	addeq	r3, #32
 80005da:	f1a3 030b 	sub.w	r3, r3, #11
 80005de:	f1b3 0220 	subs.w	r2, r3, #32
 80005e2:	da0c      	bge.n	80005fe <__adddf3+0x16e>
 80005e4:	320c      	adds	r2, #12
 80005e6:	dd08      	ble.n	80005fa <__adddf3+0x16a>
 80005e8:	f102 0c14 	add.w	ip, r2, #20
 80005ec:	f1c2 020c 	rsb	r2, r2, #12
 80005f0:	fa01 f00c 	lsl.w	r0, r1, ip
 80005f4:	fa21 f102 	lsr.w	r1, r1, r2
 80005f8:	e00c      	b.n	8000614 <__adddf3+0x184>
 80005fa:	f102 0214 	add.w	r2, r2, #20
 80005fe:	bfd8      	it	le
 8000600:	f1c2 0c20 	rsble	ip, r2, #32
 8000604:	fa01 f102 	lsl.w	r1, r1, r2
 8000608:	fa20 fc0c 	lsr.w	ip, r0, ip
 800060c:	bfdc      	itt	le
 800060e:	ea41 010c 	orrle.w	r1, r1, ip
 8000612:	4090      	lslle	r0, r2
 8000614:	1ae4      	subs	r4, r4, r3
 8000616:	bfa2      	ittt	ge
 8000618:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800061c:	4329      	orrge	r1, r5
 800061e:	bd30      	popge	{r4, r5, pc}
 8000620:	ea6f 0404 	mvn.w	r4, r4
 8000624:	3c1f      	subs	r4, #31
 8000626:	da1c      	bge.n	8000662 <__adddf3+0x1d2>
 8000628:	340c      	adds	r4, #12
 800062a:	dc0e      	bgt.n	800064a <__adddf3+0x1ba>
 800062c:	f104 0414 	add.w	r4, r4, #20
 8000630:	f1c4 0220 	rsb	r2, r4, #32
 8000634:	fa20 f004 	lsr.w	r0, r0, r4
 8000638:	fa01 f302 	lsl.w	r3, r1, r2
 800063c:	ea40 0003 	orr.w	r0, r0, r3
 8000640:	fa21 f304 	lsr.w	r3, r1, r4
 8000644:	ea45 0103 	orr.w	r1, r5, r3
 8000648:	bd30      	pop	{r4, r5, pc}
 800064a:	f1c4 040c 	rsb	r4, r4, #12
 800064e:	f1c4 0220 	rsb	r2, r4, #32
 8000652:	fa20 f002 	lsr.w	r0, r0, r2
 8000656:	fa01 f304 	lsl.w	r3, r1, r4
 800065a:	ea40 0003 	orr.w	r0, r0, r3
 800065e:	4629      	mov	r1, r5
 8000660:	bd30      	pop	{r4, r5, pc}
 8000662:	fa21 f004 	lsr.w	r0, r1, r4
 8000666:	4629      	mov	r1, r5
 8000668:	bd30      	pop	{r4, r5, pc}
 800066a:	f094 0f00 	teq	r4, #0
 800066e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000672:	bf06      	itte	eq
 8000674:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000678:	3401      	addeq	r4, #1
 800067a:	3d01      	subne	r5, #1
 800067c:	e74e      	b.n	800051c <__adddf3+0x8c>
 800067e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000682:	bf18      	it	ne
 8000684:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000688:	d029      	beq.n	80006de <__adddf3+0x24e>
 800068a:	ea94 0f05 	teq	r4, r5
 800068e:	bf08      	it	eq
 8000690:	ea90 0f02 	teqeq	r0, r2
 8000694:	d005      	beq.n	80006a2 <__adddf3+0x212>
 8000696:	ea54 0c00 	orrs.w	ip, r4, r0
 800069a:	bf04      	itt	eq
 800069c:	4619      	moveq	r1, r3
 800069e:	4610      	moveq	r0, r2
 80006a0:	bd30      	pop	{r4, r5, pc}
 80006a2:	ea91 0f03 	teq	r1, r3
 80006a6:	bf1e      	ittt	ne
 80006a8:	2100      	movne	r1, #0
 80006aa:	2000      	movne	r0, #0
 80006ac:	bd30      	popne	{r4, r5, pc}
 80006ae:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80006b2:	d105      	bne.n	80006c0 <__adddf3+0x230>
 80006b4:	0040      	lsls	r0, r0, #1
 80006b6:	4149      	adcs	r1, r1
 80006b8:	bf28      	it	cs
 80006ba:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80006be:	bd30      	pop	{r4, r5, pc}
 80006c0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80006c4:	bf3c      	itt	cc
 80006c6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80006ca:	bd30      	popcc	{r4, r5, pc}
 80006cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80006d0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80006d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd30      	pop	{r4, r5, pc}
 80006de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006e2:	bf1a      	itte	ne
 80006e4:	4619      	movne	r1, r3
 80006e6:	4610      	movne	r0, r2
 80006e8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80006ec:	bf1c      	itt	ne
 80006ee:	460b      	movne	r3, r1
 80006f0:	4602      	movne	r2, r0
 80006f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80006f6:	bf06      	itte	eq
 80006f8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80006fc:	ea91 0f03 	teqeq	r1, r3
 8000700:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000704:	bd30      	pop	{r4, r5, pc}
 8000706:	bf00      	nop

08000708 <__aeabi_ui2d>:
 8000708:	f090 0f00 	teq	r0, #0
 800070c:	bf04      	itt	eq
 800070e:	2100      	moveq	r1, #0
 8000710:	4770      	bxeq	lr
 8000712:	b530      	push	{r4, r5, lr}
 8000714:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000718:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800071c:	f04f 0500 	mov.w	r5, #0
 8000720:	f04f 0100 	mov.w	r1, #0
 8000724:	e750      	b.n	80005c8 <__adddf3+0x138>
 8000726:	bf00      	nop

08000728 <__aeabi_i2d>:
 8000728:	f090 0f00 	teq	r0, #0
 800072c:	bf04      	itt	eq
 800072e:	2100      	moveq	r1, #0
 8000730:	4770      	bxeq	lr
 8000732:	b530      	push	{r4, r5, lr}
 8000734:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000738:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800073c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000740:	bf48      	it	mi
 8000742:	4240      	negmi	r0, r0
 8000744:	f04f 0100 	mov.w	r1, #0
 8000748:	e73e      	b.n	80005c8 <__adddf3+0x138>
 800074a:	bf00      	nop

0800074c <__aeabi_f2d>:
 800074c:	0042      	lsls	r2, r0, #1
 800074e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000752:	ea4f 0131 	mov.w	r1, r1, rrx
 8000756:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800075a:	bf1f      	itttt	ne
 800075c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000760:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000764:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000768:	4770      	bxne	lr
 800076a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800076e:	bf08      	it	eq
 8000770:	4770      	bxeq	lr
 8000772:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000776:	bf04      	itt	eq
 8000778:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800077c:	4770      	bxeq	lr
 800077e:	b530      	push	{r4, r5, lr}
 8000780:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000784:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000788:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800078c:	e71c      	b.n	80005c8 <__adddf3+0x138>
 800078e:	bf00      	nop

08000790 <__aeabi_ul2d>:
 8000790:	ea50 0201 	orrs.w	r2, r0, r1
 8000794:	bf08      	it	eq
 8000796:	4770      	bxeq	lr
 8000798:	b530      	push	{r4, r5, lr}
 800079a:	f04f 0500 	mov.w	r5, #0
 800079e:	e00a      	b.n	80007b6 <__aeabi_l2d+0x16>

080007a0 <__aeabi_l2d>:
 80007a0:	ea50 0201 	orrs.w	r2, r0, r1
 80007a4:	bf08      	it	eq
 80007a6:	4770      	bxeq	lr
 80007a8:	b530      	push	{r4, r5, lr}
 80007aa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80007ae:	d502      	bpl.n	80007b6 <__aeabi_l2d+0x16>
 80007b0:	4240      	negs	r0, r0
 80007b2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80007b6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007ba:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007be:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80007c2:	f43f aed8 	beq.w	8000576 <__adddf3+0xe6>
 80007c6:	f04f 0203 	mov.w	r2, #3
 80007ca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007ce:	bf18      	it	ne
 80007d0:	3203      	addne	r2, #3
 80007d2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80007d6:	bf18      	it	ne
 80007d8:	3203      	addne	r2, #3
 80007da:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80007de:	f1c2 0320 	rsb	r3, r2, #32
 80007e2:	fa00 fc03 	lsl.w	ip, r0, r3
 80007e6:	fa20 f002 	lsr.w	r0, r0, r2
 80007ea:	fa01 fe03 	lsl.w	lr, r1, r3
 80007ee:	ea40 000e 	orr.w	r0, r0, lr
 80007f2:	fa21 f102 	lsr.w	r1, r1, r2
 80007f6:	4414      	add	r4, r2
 80007f8:	e6bd      	b.n	8000576 <__adddf3+0xe6>
 80007fa:	bf00      	nop

080007fc <__gedf2>:
 80007fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000800:	e006      	b.n	8000810 <__cmpdf2+0x4>
 8000802:	bf00      	nop

08000804 <__ledf2>:
 8000804:	f04f 0c01 	mov.w	ip, #1
 8000808:	e002      	b.n	8000810 <__cmpdf2+0x4>
 800080a:	bf00      	nop

0800080c <__cmpdf2>:
 800080c:	f04f 0c01 	mov.w	ip, #1
 8000810:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000814:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000818:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800081c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000820:	bf18      	it	ne
 8000822:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000826:	d01b      	beq.n	8000860 <__cmpdf2+0x54>
 8000828:	b001      	add	sp, #4
 800082a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800082e:	bf0c      	ite	eq
 8000830:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000834:	ea91 0f03 	teqne	r1, r3
 8000838:	bf02      	ittt	eq
 800083a:	ea90 0f02 	teqeq	r0, r2
 800083e:	2000      	moveq	r0, #0
 8000840:	4770      	bxeq	lr
 8000842:	f110 0f00 	cmn.w	r0, #0
 8000846:	ea91 0f03 	teq	r1, r3
 800084a:	bf58      	it	pl
 800084c:	4299      	cmppl	r1, r3
 800084e:	bf08      	it	eq
 8000850:	4290      	cmpeq	r0, r2
 8000852:	bf2c      	ite	cs
 8000854:	17d8      	asrcs	r0, r3, #31
 8000856:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800085a:	f040 0001 	orr.w	r0, r0, #1
 800085e:	4770      	bx	lr
 8000860:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000864:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000868:	d102      	bne.n	8000870 <__cmpdf2+0x64>
 800086a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800086e:	d107      	bne.n	8000880 <__cmpdf2+0x74>
 8000870:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000874:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000878:	d1d6      	bne.n	8000828 <__cmpdf2+0x1c>
 800087a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800087e:	d0d3      	beq.n	8000828 <__cmpdf2+0x1c>
 8000880:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000884:	4770      	bx	lr
 8000886:	bf00      	nop

08000888 <__aeabi_cdrcmple>:
 8000888:	4684      	mov	ip, r0
 800088a:	4610      	mov	r0, r2
 800088c:	4662      	mov	r2, ip
 800088e:	468c      	mov	ip, r1
 8000890:	4619      	mov	r1, r3
 8000892:	4663      	mov	r3, ip
 8000894:	e000      	b.n	8000898 <__aeabi_cdcmpeq>
 8000896:	bf00      	nop

08000898 <__aeabi_cdcmpeq>:
 8000898:	b501      	push	{r0, lr}
 800089a:	f7ff ffb7 	bl	800080c <__cmpdf2>
 800089e:	2800      	cmp	r0, #0
 80008a0:	bf48      	it	mi
 80008a2:	f110 0f00 	cmnmi.w	r0, #0
 80008a6:	bd01      	pop	{r0, pc}

080008a8 <__aeabi_dcmpeq>:
 80008a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008ac:	f7ff fff4 	bl	8000898 <__aeabi_cdcmpeq>
 80008b0:	bf0c      	ite	eq
 80008b2:	2001      	moveq	r0, #1
 80008b4:	2000      	movne	r0, #0
 80008b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80008ba:	bf00      	nop

080008bc <__aeabi_dcmplt>:
 80008bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008c0:	f7ff ffea 	bl	8000898 <__aeabi_cdcmpeq>
 80008c4:	bf34      	ite	cc
 80008c6:	2001      	movcc	r0, #1
 80008c8:	2000      	movcs	r0, #0
 80008ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80008ce:	bf00      	nop

080008d0 <__aeabi_dcmple>:
 80008d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008d4:	f7ff ffe0 	bl	8000898 <__aeabi_cdcmpeq>
 80008d8:	bf94      	ite	ls
 80008da:	2001      	movls	r0, #1
 80008dc:	2000      	movhi	r0, #0
 80008de:	f85d fb08 	ldr.w	pc, [sp], #8
 80008e2:	bf00      	nop

080008e4 <__aeabi_dcmpge>:
 80008e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008e8:	f7ff ffce 	bl	8000888 <__aeabi_cdrcmple>
 80008ec:	bf94      	ite	ls
 80008ee:	2001      	movls	r0, #1
 80008f0:	2000      	movhi	r0, #0
 80008f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80008f6:	bf00      	nop

080008f8 <__aeabi_dcmpgt>:
 80008f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008fc:	f7ff ffc4 	bl	8000888 <__aeabi_cdrcmple>
 8000900:	bf34      	ite	cc
 8000902:	2001      	movcc	r0, #1
 8000904:	2000      	movcs	r0, #0
 8000906:	f85d fb08 	ldr.w	pc, [sp], #8
 800090a:	bf00      	nop

0800090c <__aeabi_d2iz>:
 800090c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000910:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000914:	d215      	bcs.n	8000942 <__aeabi_d2iz+0x36>
 8000916:	d511      	bpl.n	800093c <__aeabi_d2iz+0x30>
 8000918:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800091c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000920:	d912      	bls.n	8000948 <__aeabi_d2iz+0x3c>
 8000922:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000926:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800092a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800092e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000932:	fa23 f002 	lsr.w	r0, r3, r2
 8000936:	bf18      	it	ne
 8000938:	4240      	negne	r0, r0
 800093a:	4770      	bx	lr
 800093c:	f04f 0000 	mov.w	r0, #0
 8000940:	4770      	bx	lr
 8000942:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000946:	d105      	bne.n	8000954 <__aeabi_d2iz+0x48>
 8000948:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800094c:	bf08      	it	eq
 800094e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000952:	4770      	bx	lr
 8000954:	f04f 0000 	mov.w	r0, #0
 8000958:	4770      	bx	lr
 800095a:	bf00      	nop

0800095c <__aeabi_d2uiz>:
 800095c:	004a      	lsls	r2, r1, #1
 800095e:	d211      	bcs.n	8000984 <__aeabi_d2uiz+0x28>
 8000960:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000964:	d211      	bcs.n	800098a <__aeabi_d2uiz+0x2e>
 8000966:	d50d      	bpl.n	8000984 <__aeabi_d2uiz+0x28>
 8000968:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800096c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000970:	d40e      	bmi.n	8000990 <__aeabi_d2uiz+0x34>
 8000972:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000976:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800097a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800097e:	fa23 f002 	lsr.w	r0, r3, r2
 8000982:	4770      	bx	lr
 8000984:	f04f 0000 	mov.w	r0, #0
 8000988:	4770      	bx	lr
 800098a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 800098e:	d102      	bne.n	8000996 <__aeabi_d2uiz+0x3a>
 8000990:	f04f 30ff 	mov.w	r0, #4294967295
 8000994:	4770      	bx	lr
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	4770      	bx	lr

0800099c <__aeabi_ldivmod>:
 800099c:	b97b      	cbnz	r3, 80009be <__aeabi_ldivmod+0x22>
 800099e:	b972      	cbnz	r2, 80009be <__aeabi_ldivmod+0x22>
 80009a0:	2900      	cmp	r1, #0
 80009a2:	bfbe      	ittt	lt
 80009a4:	2000      	movlt	r0, #0
 80009a6:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 80009aa:	e006      	blt.n	80009ba <__aeabi_ldivmod+0x1e>
 80009ac:	bf08      	it	eq
 80009ae:	2800      	cmpeq	r0, #0
 80009b0:	bf1c      	itt	ne
 80009b2:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 80009b6:	f04f 30ff 	movne.w	r0, #4294967295
 80009ba:	f000 b9bb 	b.w	8000d34 <__aeabi_idiv0>
 80009be:	f1ad 0c08 	sub.w	ip, sp, #8
 80009c2:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009c6:	2900      	cmp	r1, #0
 80009c8:	db09      	blt.n	80009de <__aeabi_ldivmod+0x42>
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	db1a      	blt.n	8000a04 <__aeabi_ldivmod+0x68>
 80009ce:	f000 f84d 	bl	8000a6c <__udivmoddi4>
 80009d2:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009d6:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009da:	b004      	add	sp, #16
 80009dc:	4770      	bx	lr
 80009de:	4240      	negs	r0, r0
 80009e0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	db1b      	blt.n	8000a20 <__aeabi_ldivmod+0x84>
 80009e8:	f000 f840 	bl	8000a6c <__udivmoddi4>
 80009ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009f4:	b004      	add	sp, #16
 80009f6:	4240      	negs	r0, r0
 80009f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80009fc:	4252      	negs	r2, r2
 80009fe:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000a02:	4770      	bx	lr
 8000a04:	4252      	negs	r2, r2
 8000a06:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000a0a:	f000 f82f 	bl	8000a6c <__udivmoddi4>
 8000a0e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a12:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a16:	b004      	add	sp, #16
 8000a18:	4240      	negs	r0, r0
 8000a1a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000a1e:	4770      	bx	lr
 8000a20:	4252      	negs	r2, r2
 8000a22:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000a26:	f000 f821 	bl	8000a6c <__udivmoddi4>
 8000a2a:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a2e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a32:	b004      	add	sp, #16
 8000a34:	4252      	negs	r2, r2
 8000a36:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000a3a:	4770      	bx	lr

08000a3c <__aeabi_uldivmod>:
 8000a3c:	b953      	cbnz	r3, 8000a54 <__aeabi_uldivmod+0x18>
 8000a3e:	b94a      	cbnz	r2, 8000a54 <__aeabi_uldivmod+0x18>
 8000a40:	2900      	cmp	r1, #0
 8000a42:	bf08      	it	eq
 8000a44:	2800      	cmpeq	r0, #0
 8000a46:	bf1c      	itt	ne
 8000a48:	f04f 31ff 	movne.w	r1, #4294967295
 8000a4c:	f04f 30ff 	movne.w	r0, #4294967295
 8000a50:	f000 b970 	b.w	8000d34 <__aeabi_idiv0>
 8000a54:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a58:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a5c:	f000 f806 	bl	8000a6c <__udivmoddi4>
 8000a60:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a64:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a68:	b004      	add	sp, #16
 8000a6a:	4770      	bx	lr

08000a6c <__udivmoddi4>:
 8000a6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a70:	9e08      	ldr	r6, [sp, #32]
 8000a72:	460d      	mov	r5, r1
 8000a74:	4604      	mov	r4, r0
 8000a76:	460f      	mov	r7, r1
 8000a78:	2b00      	cmp	r3, #0
 8000a7a:	d14a      	bne.n	8000b12 <__udivmoddi4+0xa6>
 8000a7c:	428a      	cmp	r2, r1
 8000a7e:	4694      	mov	ip, r2
 8000a80:	d965      	bls.n	8000b4e <__udivmoddi4+0xe2>
 8000a82:	fab2 f382 	clz	r3, r2
 8000a86:	b143      	cbz	r3, 8000a9a <__udivmoddi4+0x2e>
 8000a88:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a8c:	f1c3 0220 	rsb	r2, r3, #32
 8000a90:	409f      	lsls	r7, r3
 8000a92:	fa20 f202 	lsr.w	r2, r0, r2
 8000a96:	4317      	orrs	r7, r2
 8000a98:	409c      	lsls	r4, r3
 8000a9a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a9e:	fa1f f58c 	uxth.w	r5, ip
 8000aa2:	fbb7 f1fe 	udiv	r1, r7, lr
 8000aa6:	0c22      	lsrs	r2, r4, #16
 8000aa8:	fb0e 7711 	mls	r7, lr, r1, r7
 8000aac:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000ab0:	fb01 f005 	mul.w	r0, r1, r5
 8000ab4:	4290      	cmp	r0, r2
 8000ab6:	d90a      	bls.n	8000ace <__udivmoddi4+0x62>
 8000ab8:	eb1c 0202 	adds.w	r2, ip, r2
 8000abc:	f101 37ff 	add.w	r7, r1, #4294967295
 8000ac0:	f080 811b 	bcs.w	8000cfa <__udivmoddi4+0x28e>
 8000ac4:	4290      	cmp	r0, r2
 8000ac6:	f240 8118 	bls.w	8000cfa <__udivmoddi4+0x28e>
 8000aca:	3902      	subs	r1, #2
 8000acc:	4462      	add	r2, ip
 8000ace:	1a12      	subs	r2, r2, r0
 8000ad0:	b2a4      	uxth	r4, r4
 8000ad2:	fbb2 f0fe 	udiv	r0, r2, lr
 8000ad6:	fb0e 2210 	mls	r2, lr, r0, r2
 8000ada:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000ade:	fb00 f505 	mul.w	r5, r0, r5
 8000ae2:	42a5      	cmp	r5, r4
 8000ae4:	d90a      	bls.n	8000afc <__udivmoddi4+0x90>
 8000ae6:	eb1c 0404 	adds.w	r4, ip, r4
 8000aea:	f100 32ff 	add.w	r2, r0, #4294967295
 8000aee:	f080 8106 	bcs.w	8000cfe <__udivmoddi4+0x292>
 8000af2:	42a5      	cmp	r5, r4
 8000af4:	f240 8103 	bls.w	8000cfe <__udivmoddi4+0x292>
 8000af8:	4464      	add	r4, ip
 8000afa:	3802      	subs	r0, #2
 8000afc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000b00:	1b64      	subs	r4, r4, r5
 8000b02:	2100      	movs	r1, #0
 8000b04:	b11e      	cbz	r6, 8000b0e <__udivmoddi4+0xa2>
 8000b06:	40dc      	lsrs	r4, r3
 8000b08:	2300      	movs	r3, #0
 8000b0a:	e9c6 4300 	strd	r4, r3, [r6]
 8000b0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b12:	428b      	cmp	r3, r1
 8000b14:	d908      	bls.n	8000b28 <__udivmoddi4+0xbc>
 8000b16:	2e00      	cmp	r6, #0
 8000b18:	f000 80ec 	beq.w	8000cf4 <__udivmoddi4+0x288>
 8000b1c:	2100      	movs	r1, #0
 8000b1e:	e9c6 0500 	strd	r0, r5, [r6]
 8000b22:	4608      	mov	r0, r1
 8000b24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b28:	fab3 f183 	clz	r1, r3
 8000b2c:	2900      	cmp	r1, #0
 8000b2e:	d149      	bne.n	8000bc4 <__udivmoddi4+0x158>
 8000b30:	42ab      	cmp	r3, r5
 8000b32:	d302      	bcc.n	8000b3a <__udivmoddi4+0xce>
 8000b34:	4282      	cmp	r2, r0
 8000b36:	f200 80f7 	bhi.w	8000d28 <__udivmoddi4+0x2bc>
 8000b3a:	1a84      	subs	r4, r0, r2
 8000b3c:	eb65 0203 	sbc.w	r2, r5, r3
 8000b40:	2001      	movs	r0, #1
 8000b42:	4617      	mov	r7, r2
 8000b44:	2e00      	cmp	r6, #0
 8000b46:	d0e2      	beq.n	8000b0e <__udivmoddi4+0xa2>
 8000b48:	e9c6 4700 	strd	r4, r7, [r6]
 8000b4c:	e7df      	b.n	8000b0e <__udivmoddi4+0xa2>
 8000b4e:	b902      	cbnz	r2, 8000b52 <__udivmoddi4+0xe6>
 8000b50:	deff      	udf	#255	; 0xff
 8000b52:	fab2 f382 	clz	r3, r2
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	f040 808f 	bne.w	8000c7a <__udivmoddi4+0x20e>
 8000b5c:	1a8a      	subs	r2, r1, r2
 8000b5e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000b62:	fa1f fe8c 	uxth.w	lr, ip
 8000b66:	2101      	movs	r1, #1
 8000b68:	fbb2 f5f7 	udiv	r5, r2, r7
 8000b6c:	fb07 2015 	mls	r0, r7, r5, r2
 8000b70:	0c22      	lsrs	r2, r4, #16
 8000b72:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000b76:	fb0e f005 	mul.w	r0, lr, r5
 8000b7a:	4290      	cmp	r0, r2
 8000b7c:	d908      	bls.n	8000b90 <__udivmoddi4+0x124>
 8000b7e:	eb1c 0202 	adds.w	r2, ip, r2
 8000b82:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b86:	d202      	bcs.n	8000b8e <__udivmoddi4+0x122>
 8000b88:	4290      	cmp	r0, r2
 8000b8a:	f200 80ca 	bhi.w	8000d22 <__udivmoddi4+0x2b6>
 8000b8e:	4645      	mov	r5, r8
 8000b90:	1a12      	subs	r2, r2, r0
 8000b92:	b2a4      	uxth	r4, r4
 8000b94:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b98:	fb07 2210 	mls	r2, r7, r0, r2
 8000b9c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000ba0:	fb0e fe00 	mul.w	lr, lr, r0
 8000ba4:	45a6      	cmp	lr, r4
 8000ba6:	d908      	bls.n	8000bba <__udivmoddi4+0x14e>
 8000ba8:	eb1c 0404 	adds.w	r4, ip, r4
 8000bac:	f100 32ff 	add.w	r2, r0, #4294967295
 8000bb0:	d202      	bcs.n	8000bb8 <__udivmoddi4+0x14c>
 8000bb2:	45a6      	cmp	lr, r4
 8000bb4:	f200 80ba 	bhi.w	8000d2c <__udivmoddi4+0x2c0>
 8000bb8:	4610      	mov	r0, r2
 8000bba:	eba4 040e 	sub.w	r4, r4, lr
 8000bbe:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000bc2:	e79f      	b.n	8000b04 <__udivmoddi4+0x98>
 8000bc4:	f1c1 0720 	rsb	r7, r1, #32
 8000bc8:	408b      	lsls	r3, r1
 8000bca:	fa22 fc07 	lsr.w	ip, r2, r7
 8000bce:	ea4c 0c03 	orr.w	ip, ip, r3
 8000bd2:	fa05 f401 	lsl.w	r4, r5, r1
 8000bd6:	fa20 f307 	lsr.w	r3, r0, r7
 8000bda:	40fd      	lsrs	r5, r7
 8000bdc:	4323      	orrs	r3, r4
 8000bde:	fa00 f901 	lsl.w	r9, r0, r1
 8000be2:	ea4f 401c 	mov.w	r0, ip, lsr #16
 8000be6:	fa1f fe8c 	uxth.w	lr, ip
 8000bea:	fbb5 f8f0 	udiv	r8, r5, r0
 8000bee:	0c1c      	lsrs	r4, r3, #16
 8000bf0:	fb00 5518 	mls	r5, r0, r8, r5
 8000bf4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000bf8:	fb08 f50e 	mul.w	r5, r8, lr
 8000bfc:	42a5      	cmp	r5, r4
 8000bfe:	fa02 f201 	lsl.w	r2, r2, r1
 8000c02:	d90b      	bls.n	8000c1c <__udivmoddi4+0x1b0>
 8000c04:	eb1c 0404 	adds.w	r4, ip, r4
 8000c08:	f108 3aff 	add.w	sl, r8, #4294967295
 8000c0c:	f080 8087 	bcs.w	8000d1e <__udivmoddi4+0x2b2>
 8000c10:	42a5      	cmp	r5, r4
 8000c12:	f240 8084 	bls.w	8000d1e <__udivmoddi4+0x2b2>
 8000c16:	f1a8 0802 	sub.w	r8, r8, #2
 8000c1a:	4464      	add	r4, ip
 8000c1c:	1b64      	subs	r4, r4, r5
 8000c1e:	b29d      	uxth	r5, r3
 8000c20:	fbb4 f3f0 	udiv	r3, r4, r0
 8000c24:	fb00 4413 	mls	r4, r0, r3, r4
 8000c28:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000c2c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000c30:	45a6      	cmp	lr, r4
 8000c32:	d908      	bls.n	8000c46 <__udivmoddi4+0x1da>
 8000c34:	eb1c 0404 	adds.w	r4, ip, r4
 8000c38:	f103 30ff 	add.w	r0, r3, #4294967295
 8000c3c:	d26b      	bcs.n	8000d16 <__udivmoddi4+0x2aa>
 8000c3e:	45a6      	cmp	lr, r4
 8000c40:	d969      	bls.n	8000d16 <__udivmoddi4+0x2aa>
 8000c42:	3b02      	subs	r3, #2
 8000c44:	4464      	add	r4, ip
 8000c46:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8000c4a:	fba0 8302 	umull	r8, r3, r0, r2
 8000c4e:	eba4 040e 	sub.w	r4, r4, lr
 8000c52:	429c      	cmp	r4, r3
 8000c54:	46c6      	mov	lr, r8
 8000c56:	461d      	mov	r5, r3
 8000c58:	d355      	bcc.n	8000d06 <__udivmoddi4+0x29a>
 8000c5a:	d052      	beq.n	8000d02 <__udivmoddi4+0x296>
 8000c5c:	b156      	cbz	r6, 8000c74 <__udivmoddi4+0x208>
 8000c5e:	ebb9 030e 	subs.w	r3, r9, lr
 8000c62:	eb64 0405 	sbc.w	r4, r4, r5
 8000c66:	fa04 f707 	lsl.w	r7, r4, r7
 8000c6a:	40cb      	lsrs	r3, r1
 8000c6c:	40cc      	lsrs	r4, r1
 8000c6e:	431f      	orrs	r7, r3
 8000c70:	e9c6 7400 	strd	r7, r4, [r6]
 8000c74:	2100      	movs	r1, #0
 8000c76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c7a:	f1c3 0120 	rsb	r1, r3, #32
 8000c7e:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c82:	fa20 f201 	lsr.w	r2, r0, r1
 8000c86:	fa25 f101 	lsr.w	r1, r5, r1
 8000c8a:	409d      	lsls	r5, r3
 8000c8c:	432a      	orrs	r2, r5
 8000c8e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c92:	fa1f fe8c 	uxth.w	lr, ip
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1510 	mls	r5, r7, r0, r1
 8000c9e:	0c11      	lsrs	r1, r2, #16
 8000ca0:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000ca4:	fb00 f50e 	mul.w	r5, r0, lr
 8000ca8:	428d      	cmp	r5, r1
 8000caa:	fa04 f403 	lsl.w	r4, r4, r3
 8000cae:	d908      	bls.n	8000cc2 <__udivmoddi4+0x256>
 8000cb0:	eb1c 0101 	adds.w	r1, ip, r1
 8000cb4:	f100 38ff 	add.w	r8, r0, #4294967295
 8000cb8:	d22f      	bcs.n	8000d1a <__udivmoddi4+0x2ae>
 8000cba:	428d      	cmp	r5, r1
 8000cbc:	d92d      	bls.n	8000d1a <__udivmoddi4+0x2ae>
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	4461      	add	r1, ip
 8000cc2:	1b49      	subs	r1, r1, r5
 8000cc4:	b292      	uxth	r2, r2
 8000cc6:	fbb1 f5f7 	udiv	r5, r1, r7
 8000cca:	fb07 1115 	mls	r1, r7, r5, r1
 8000cce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000cd2:	fb05 f10e 	mul.w	r1, r5, lr
 8000cd6:	4291      	cmp	r1, r2
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x280>
 8000cda:	eb1c 0202 	adds.w	r2, ip, r2
 8000cde:	f105 38ff 	add.w	r8, r5, #4294967295
 8000ce2:	d216      	bcs.n	8000d12 <__udivmoddi4+0x2a6>
 8000ce4:	4291      	cmp	r1, r2
 8000ce6:	d914      	bls.n	8000d12 <__udivmoddi4+0x2a6>
 8000ce8:	3d02      	subs	r5, #2
 8000cea:	4462      	add	r2, ip
 8000cec:	1a52      	subs	r2, r2, r1
 8000cee:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000cf2:	e739      	b.n	8000b68 <__udivmoddi4+0xfc>
 8000cf4:	4631      	mov	r1, r6
 8000cf6:	4630      	mov	r0, r6
 8000cf8:	e709      	b.n	8000b0e <__udivmoddi4+0xa2>
 8000cfa:	4639      	mov	r1, r7
 8000cfc:	e6e7      	b.n	8000ace <__udivmoddi4+0x62>
 8000cfe:	4610      	mov	r0, r2
 8000d00:	e6fc      	b.n	8000afc <__udivmoddi4+0x90>
 8000d02:	45c1      	cmp	r9, r8
 8000d04:	d2aa      	bcs.n	8000c5c <__udivmoddi4+0x1f0>
 8000d06:	ebb8 0e02 	subs.w	lr, r8, r2
 8000d0a:	eb63 050c 	sbc.w	r5, r3, ip
 8000d0e:	3801      	subs	r0, #1
 8000d10:	e7a4      	b.n	8000c5c <__udivmoddi4+0x1f0>
 8000d12:	4645      	mov	r5, r8
 8000d14:	e7ea      	b.n	8000cec <__udivmoddi4+0x280>
 8000d16:	4603      	mov	r3, r0
 8000d18:	e795      	b.n	8000c46 <__udivmoddi4+0x1da>
 8000d1a:	4640      	mov	r0, r8
 8000d1c:	e7d1      	b.n	8000cc2 <__udivmoddi4+0x256>
 8000d1e:	46d0      	mov	r8, sl
 8000d20:	e77c      	b.n	8000c1c <__udivmoddi4+0x1b0>
 8000d22:	3d02      	subs	r5, #2
 8000d24:	4462      	add	r2, ip
 8000d26:	e733      	b.n	8000b90 <__udivmoddi4+0x124>
 8000d28:	4608      	mov	r0, r1
 8000d2a:	e70b      	b.n	8000b44 <__udivmoddi4+0xd8>
 8000d2c:	4464      	add	r4, ip
 8000d2e:	3802      	subs	r0, #2
 8000d30:	e743      	b.n	8000bba <__udivmoddi4+0x14e>
 8000d32:	bf00      	nop

08000d34 <__aeabi_idiv0>:
 8000d34:	4770      	bx	lr
 8000d36:	bf00      	nop

08000d38 <generateRandom>:
const NetEp_t serverEp = { .NetType = IPV4, .NetPort = 5683, .NetAddr = { .IPv4 = { .u8 = { 224, 0, 1, 187 } } } };
//const NetEp_t serverEp = { .NetType = IPV4, .NetPort = 1234, .NetAddr = { .IPv6 = { .u8 = { 224, 0, 1, 187 } } } };
//const NetEp_t NetEp_IPv6_mulitcast = { .NetType = IPV6, .NetPort = 5683, .NetAddr = { .IPv6 = {.u8 = {0xff, 0x02, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 } } } };

int generateRandom()
{
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	af00      	add	r7, sp, #0
	return (int)EMBENET_NODE_GetRandomValue(0, UINT32_MAX);
 8000d3c:	f04f 31ff 	mov.w	r1, #4294967295
 8000d40:	2000      	movs	r0, #0
 8000d42:	f00c f853 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8000d46:	4603      	mov	r3, r0
}
 8000d48:	4618      	mov	r0, r3
 8000d4a:	bd80      	pop	{r7, pc}

08000d4c <debugPuts>:

void debugPuts(const char* s)
{
 8000d4c:	b580      	push	{r7, lr}
 8000d4e:	b082      	sub	sp, #8
 8000d50:	af00      	add	r7, sp, #0
 8000d52:	6078      	str	r0, [r7, #4]
	printf("%s", s);
 8000d54:	6879      	ldr	r1, [r7, #4]
 8000d56:	4803      	ldr	r0, [pc, #12]	; (8000d64 <debugPuts+0x18>)
 8000d58:	f02a f83e 	bl	802add8 <iprintf>
}
 8000d5c:	bf00      	nop
 8000d5e:	3708      	adds	r7, #8
 8000d60:	46bd      	mov	sp, r7
 8000d62:	bd80      	pop	{r7, pc}
 8000d64:	0802be90 	.word	0x0802be90

08000d68 <elapsedTime_seconds>:

uint32_t elapsedTime_seconds()
{
 8000d68:	b580      	push	{r7, lr}
 8000d6a:	b082      	sub	sp, #8
 8000d6c:	af00      	add	r7, sp, #0
	uint64_t current_time = EMBENET_NODE_GetLocalTime(); // returns time in ms
 8000d6e:	f00b fd27 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 8000d72:	e9c7 0100 	strd	r0, r1, [r7]
	return (uint32_t)(current_time/1000);
 8000d76:	e9d7 0100 	ldrd	r0, r1, [r7]
 8000d7a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000d7e:	f04f 0300 	mov.w	r3, #0
 8000d82:	f7ff fe5b 	bl	8000a3c <__aeabi_uldivmod>
 8000d86:	4602      	mov	r2, r0
 8000d88:	460b      	mov	r3, r1
 8000d8a:	4613      	mov	r3, r2
}
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	3708      	adds	r7, #8
 8000d90:	46bd      	mov	sp, r7
 8000d92:	bd80      	pop	{r7, pc}

08000d94 <CoAP_Posix_SendDatagram>:

// Function to send a packet to the network interface
bool CoAP_Posix_SendDatagram(SocketHandle_t socketHandle, NetPacket_t *pckt)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b08a      	sub	sp, #40	; 0x28
 8000d98:	af02      	add	r7, sp, #8
 8000d9a:	6078      	str	r0, [r7, #4]
 8000d9c:	6039      	str	r1, [r7, #0]
	 // prepare destination IPv6 address
	//EMBENET_IPV6 destinationAddress = EMBENET_AssembleUnicastIpv6(0x20010db800000000, 0x0000000012345678);

	EMBENET_UDP_SocketDescriptor *socket_ptr = (EMBENET_UDP_SocketDescriptor *)socketHandle;
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	61fb      	str	r3, [r7, #28]

	// get border router address
	EMBENET_IPV6 borderRouterAddress;
	EMBENET_NODE_GetBorderRouterAddress(&borderRouterAddress);
 8000da2:	f107 030c 	add.w	r3, r7, #12
 8000da6:	4618      	mov	r0, r3
 8000da8:	f00b fff8 	bl	800cd9c <EMBENET_NODE_GetBorderRouterAddress>
	// send UDP packet using port 1234
	if (EMBENET_RESULT_OK != EMBENET_UDP_Send(socket_ptr, &borderRouterAddress, 1234, pckt->pData, pckt->size)) {
 8000dac:	683b      	ldr	r3, [r7, #0]
 8000dae:	681a      	ldr	r2, [r3, #0]
 8000db0:	683b      	ldr	r3, [r7, #0]
 8000db2:	889b      	ldrh	r3, [r3, #4]
 8000db4:	f107 010c 	add.w	r1, r7, #12
 8000db8:	9300      	str	r3, [sp, #0]
 8000dba:	4613      	mov	r3, r2
 8000dbc:	f240 42d2 	movw	r2, #1234	; 0x4d2
 8000dc0:	69f8      	ldr	r0, [r7, #28]
 8000dc2:	f00b fcaf 	bl	800c724 <EMBENET_UDP_Send>
 8000dc6:	4603      	mov	r3, r0
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d004      	beq.n	8000dd6 <CoAP_Posix_SendDatagram+0x42>
		printf("CUSTOM_SERVICE: Failed to send UDP packet\n");
 8000dcc:	4804      	ldr	r0, [pc, #16]	; (8000de0 <CoAP_Posix_SendDatagram+0x4c>)
 8000dce:	f02a f869 	bl	802aea4 <puts>
		return false;
 8000dd2:	2300      	movs	r3, #0
 8000dd4:	e000      	b.n	8000dd8 <CoAP_Posix_SendDatagram+0x44>
	}
	return true;
 8000dd6:	2301      	movs	r3, #1
}
 8000dd8:	4618      	mov	r0, r3
 8000dda:	3720      	adds	r7, #32
 8000ddc:	46bd      	mov	sp, r7
 8000dde:	bd80      	pop	{r7, pc}
 8000de0:	0802be94 	.word	0x0802be94

08000de4 <CoAP_RespHandler_fn>:

// Response handler function
CoAP_Result_t CoAP_RespHandler_fn(CoAP_Message_t* pRespMsg, CoAP_Message_t* pReqMsg, NetEp_t* sender)
{
 8000de4:	b580      	push	{r7, lr}
 8000de6:	b084      	sub	sp, #16
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	60f8      	str	r0, [r7, #12]
 8000dec:	60b9      	str	r1, [r7, #8]
 8000dee:	607a      	str	r2, [r7, #4]
	if(pRespMsg == NULL) {
 8000df0:	68fb      	ldr	r3, [r7, #12]
 8000df2:	2b00      	cmp	r3, #0
 8000df4:	d107      	bne.n	8000e06 <CoAP_RespHandler_fn+0x22>
		printf("CoAP message transmission failed after all retries (timeout) for MessageId %d", pReqMsg->MessageID);
 8000df6:	68bb      	ldr	r3, [r7, #8]
 8000df8:	88db      	ldrh	r3, [r3, #6]
 8000dfa:	4619      	mov	r1, r3
 8000dfc:	4809      	ldr	r0, [pc, #36]	; (8000e24 <CoAP_RespHandler_fn+0x40>)
 8000dfe:	f029 ffeb 	bl	802add8 <iprintf>
		return COAP_OK;
 8000e02:	2300      	movs	r3, #0
 8000e04:	e009      	b.n	8000e1a <CoAP_RespHandler_fn+0x36>
	}

	printf("Got a reply for MiD: %d", pRespMsg->MessageID);
 8000e06:	68fb      	ldr	r3, [r7, #12]
 8000e08:	88db      	ldrh	r3, [r3, #6]
 8000e0a:	4619      	mov	r1, r3
 8000e0c:	4806      	ldr	r0, [pc, #24]	; (8000e28 <CoAP_RespHandler_fn+0x44>)
 8000e0e:	f029 ffe3 	bl	802add8 <iprintf>
	CoAP_PrintMsg(pRespMsg);
 8000e12:	68f8      	ldr	r0, [r7, #12]
 8000e14:	f009 f874 	bl	8009f00 <CoAP_PrintMsg>

	return COAP_OK;
 8000e18:	2300      	movs	r3, #0
}
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	3710      	adds	r7, #16
 8000e1e:	46bd      	mov	sp, r7
 8000e20:	bd80      	pop	{r7, pc}
 8000e22:	bf00      	nop
 8000e24:	0802bec0 	.word	0x0802bec0
 8000e28:	0802bf10 	.word	0x0802bf10

08000e2c <customServiceTask>:
 * @param[in] taskId id of the task
 * @param[in] timeSource time source (local time or network time)
 * @param[in] t time at which the task was scheduled to run
 * @param[in] context generic, user-defined context
 */
static void customServiceTask(EMBENET_TaskId taskId, EMBENET_NODE_TimeSource timeSource, uint64_t t, void *context) {
 8000e2c:	b5b0      	push	{r4, r5, r7, lr}
 8000e2e:	b08c      	sub	sp, #48	; 0x30
 8000e30:	af04      	add	r7, sp, #16
 8000e32:	60f8      	str	r0, [r7, #12]
 8000e34:	e9c7 2300 	strd	r2, r3, [r7]
 8000e38:	460b      	mov	r3, r1
 8000e3a:	72fb      	strb	r3, [r7, #11]
    // Process any pending work
    CoAP_doWork();
 8000e3c:	f008 fa80 	bl	8009340 <CoAP_doWork>

    uint8_t* data = "Test Coap";
 8000e40:	4b12      	ldr	r3, [pc, #72]	; (8000e8c <customServiceTask+0x60>)
 8000e42:	61fb      	str	r3, [r7, #28]
    size_t length = strlen(data);
 8000e44:	69f8      	ldr	r0, [r7, #28]
 8000e46:	f7ff f9eb 	bl	8000220 <strlen>
 8000e4a:	61b8      	str	r0, [r7, #24]

	// Send a CoAP message
	CoAP_Result_t result = CoAP_StartNewRequest(
 8000e4c:	69bb      	ldr	r3, [r7, #24]
 8000e4e:	9302      	str	r3, [sp, #8]
 8000e50:	69fb      	ldr	r3, [r7, #28]
 8000e52:	9301      	str	r3, [sp, #4]
 8000e54:	4b0e      	ldr	r3, [pc, #56]	; (8000e90 <customServiceTask+0x64>)
 8000e56:	9300      	str	r3, [sp, #0]
 8000e58:	4b0e      	ldr	r3, [pc, #56]	; (8000e94 <customServiceTask+0x68>)
 8000e5a:	4a0f      	ldr	r2, [pc, #60]	; (8000e98 <customServiceTask+0x6c>)
 8000e5c:	490f      	ldr	r1, [pc, #60]	; (8000e9c <customServiceTask+0x70>)
 8000e5e:	2002      	movs	r0, #2
 8000e60:	f006 ffac 	bl	8007dbc <CoAP_StartNewRequest>
 8000e64:	4603      	mov	r3, r0
 8000e66:	75fb      	strb	r3, [r7, #23]
		data,					// Message data buffer (uint8_t *)
		length					// Message data length (size_t)
	);

    // Schedule next invocation of this task after 100 miliseconds
    EMBENET_NODE_TaskSchedule(taskId, timeSource, t + 5000);
 8000e68:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000e6c:	f241 3188 	movw	r1, #5000	; 0x1388
 8000e70:	1854      	adds	r4, r2, r1
 8000e72:	f143 0500 	adc.w	r5, r3, #0
 8000e76:	7af9      	ldrb	r1, [r7, #11]
 8000e78:	4622      	mov	r2, r4
 8000e7a:	462b      	mov	r3, r5
 8000e7c:	68f8      	ldr	r0, [r7, #12]
 8000e7e:	f00b fd95 	bl	800c9ac <EMBENET_NODE_TaskSchedule>
}
 8000e82:	bf00      	nop
 8000e84:	3720      	adds	r7, #32
 8000e86:	46bd      	mov	sp, r7
 8000e88:	bdb0      	pop	{r4, r5, r7, pc}
 8000e8a:	bf00      	nop
 8000e8c:	0802bf28 	.word	0x0802bf28
 8000e90:	08000de5 	.word	0x08000de5
 8000e94:	08031574 	.word	0x08031574
 8000e98:	2000033c 	.word	0x2000033c
 8000e9c:	0802bf34 	.word	0x0802bf34

08000ea0 <customServiceReceptionHandler>:
 * @param[in] data pointer to datagram's payload
 * @param[in] dataSize size of datagram's payload
 */
static void customServiceReceptionHandler(EMBENET_UDP_SocketDescriptor const *socket,
        EMBENET_IPV6 const *sourceAddress, uint16_t sourcePort,
        void const *data, size_t dataSize) {
 8000ea0:	b580      	push	{r7, lr}
 8000ea2:	b090      	sub	sp, #64	; 0x40
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	60f8      	str	r0, [r7, #12]
 8000ea8:	60b9      	str	r1, [r7, #8]
 8000eaa:	603b      	str	r3, [r7, #0]
 8000eac:	4613      	mov	r3, r2
 8000eae:	80fb      	strh	r3, [r7, #6]

	printf("New packet received on interface, bytes read = %d", dataSize);
 8000eb0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8000eb2:	4819      	ldr	r0, [pc, #100]	; (8000f18 <customServiceReceptionHandler+0x78>)
 8000eb4:	f029 ff90 	bl	802add8 <iprintf>

	// Format the packet to the proper structure
	NetPacket_t pckt;
	memset(&pckt, 0, sizeof(pckt));
 8000eb8:	f107 0314 	add.w	r3, r7, #20
 8000ebc:	222c      	movs	r2, #44	; 0x2c
 8000ebe:	2100      	movs	r1, #0
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	f02a f919 	bl	802b0f8 <memset>
	pckt.pData = data;
 8000ec6:	683b      	ldr	r3, [r7, #0]
 8000ec8:	617b      	str	r3, [r7, #20]
	pckt.size = dataSize;
 8000eca:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000ecc:	b29b      	uxth	r3, r3
 8000ece:	833b      	strh	r3, [r7, #24]
	pckt.remoteEp = serverEp;
 8000ed0:	f107 031c 	add.w	r3, r7, #28
 8000ed4:	2200      	movs	r2, #0
 8000ed6:	601a      	str	r2, [r3, #0]
 8000ed8:	605a      	str	r2, [r3, #4]
 8000eda:	609a      	str	r2, [r3, #8]
 8000edc:	60da      	str	r2, [r3, #12]
 8000ede:	611a      	str	r2, [r3, #16]
 8000ee0:	615a      	str	r2, [r3, #20]
 8000ee2:	2302      	movs	r3, #2
 8000ee4:	773b      	strb	r3, [r7, #28]
 8000ee6:	23e0      	movs	r3, #224	; 0xe0
 8000ee8:	f887 3020 	strb.w	r3, [r7, #32]
 8000eec:	2301      	movs	r3, #1
 8000eee:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8000ef2:	23bb      	movs	r3, #187	; 0xbb
 8000ef4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8000ef8:	f241 6333 	movw	r3, #5683	; 0x1633
 8000efc:	863b      	strh	r3, [r7, #48]	; 0x30
	CoAP_HandleIncomingPacket(&socket, &pckt); 	// Feed the received packet to the CoAP library
 8000efe:	f107 0214 	add.w	r2, r7, #20
 8000f02:	f107 030c 	add.w	r3, r7, #12
 8000f06:	4611      	mov	r1, r2
 8000f08:	4618      	mov	r0, r3
 8000f0a:	f007 f987 	bl	800821c <CoAP_HandleIncomingPacket>
//            printf("CUSTOM_SERVICE: Unrecognized command with size: %d\n", (int)dataSize);
//        }
//    } else {
//        printf("CUSTOM_SERVICE: Unrecognized command with size: %d\n", (int)dataSize);
//    }
}
 8000f0e:	bf00      	nop
 8000f10:	3740      	adds	r7, #64	; 0x40
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bd80      	pop	{r7, pc}
 8000f16:	bf00      	nop
 8000f18:	0802bf48 	.word	0x0802bf48

08000f1c <custom_service_init>:

void custom_service_init(void) {
 8000f1c:	b5b0      	push	{r4, r5, r7, lr}
 8000f1e:	b08e      	sub	sp, #56	; 0x38
 8000f20:	af02      	add	r7, sp, #8
	// Bind system functions to the CoAP library
	CoAP_API_t api = {
 8000f22:	4b37      	ldr	r3, [pc, #220]	; (8001000 <custom_service_init+0xe4>)
 8000f24:	f107 0414 	add.w	r4, r7, #20
 8000f28:	461d      	mov	r5, r3
 8000f2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000f2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000f2e:	682b      	ldr	r3, [r5, #0]
 8000f30:	6023      	str	r3, [r4, #0]
		.rtc1HzCnt = elapsedTime_seconds,	// Function that returns a time in seconds
		.rand = generateRandom,				// Function to generate random numbers
		.debugPuts = debugPuts,				// Function to print info for debugging
	};

	CoAP_Init(api);
 8000f32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000f34:	9300      	str	r3, [sp, #0]
 8000f36:	f107 0314 	add.w	r3, r7, #20
 8000f3a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000f3c:	f00a fb8c 	bl	800b658 <CoAP_Init>
	printf("CUSTOM_SERVICE: CoAP Initialized\n");
 8000f40:	4830      	ldr	r0, [pc, #192]	; (8001004 <custom_service_init+0xe8>)
 8000f42:	f029 ffaf 	bl	802aea4 <puts>

//    // Initialize UDP socket on node's unicast address, and port 1234. Upon datagram reception, customServiceReceptionHandler will be called)
    customServiceSocket = (EMBENET_UDP_SocketDescriptor ) {
 8000f46:	4b30      	ldr	r3, [pc, #192]	; (8001008 <custom_service_init+0xec>)
 8000f48:	461a      	mov	r2, r3
 8000f4a:	2300      	movs	r3, #0
 8000f4c:	6013      	str	r3, [r2, #0]
 8000f4e:	6053      	str	r3, [r2, #4]
 8000f50:	6093      	str	r3, [r2, #8]
 8000f52:	60d3      	str	r3, [r2, #12]
 8000f54:	6113      	str	r3, [r2, #16]
 8000f56:	4b2c      	ldr	r3, [pc, #176]	; (8001008 <custom_service_init+0xec>)
 8000f58:	f241 6233 	movw	r2, #5683	; 0x1633
 8000f5c:	801a      	strh	r2, [r3, #0]
 8000f5e:	4b2a      	ldr	r3, [pc, #168]	; (8001008 <custom_service_init+0xec>)
 8000f60:	4a2a      	ldr	r2, [pc, #168]	; (800100c <custom_service_init+0xf0>)
 8000f62:	609a      	str	r2, [r3, #8]
        .rxDataHandler = customServiceReceptionHandler,
        .userContext = NULL // userContext is not needed in this example, however user may pass it to callback invocation
    };

    // Register UDP socket. Registering socket enables datagram reception/transmission
    EMBENET_Result customServiceSocketRegistrationStatus = EMBENET_UDP_RegisterSocket(&customServiceSocket);
 8000f64:	4828      	ldr	r0, [pc, #160]	; (8001008 <custom_service_init+0xec>)
 8000f66:	f00b fbbd 	bl	800c6e4 <EMBENET_UDP_RegisterSocket>
 8000f6a:	4603      	mov	r3, r0
 8000f6c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    if (EMBENET_RESULT_OK == customServiceSocketRegistrationStatus) {
 8000f70:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	d10c      	bne.n	8000f92 <custom_service_init+0x76>
        printf("CUSTOM_SERVICE: Socket %d registered successfully\n", (int)customServiceSocket.port);
 8000f78:	4b23      	ldr	r3, [pc, #140]	; (8001008 <custom_service_init+0xec>)
 8000f7a:	881b      	ldrh	r3, [r3, #0]
 8000f7c:	4619      	mov	r1, r3
 8000f7e:	4824      	ldr	r0, [pc, #144]	; (8001010 <custom_service_init+0xf4>)
 8000f80:	f029 ff2a 	bl	802add8 <iprintf>
        printf("CUSTOM_SERVICE: Registering socket failed with status %d\n", (int)customServiceSocketRegistrationStatus);
        return;
    }

	// Allocate a new CoAP_Socket_t space for this socket
	CoAP_Socket_t *newSocket = AllocSocket();
 8000f84:	f00a fc4e 	bl	800b824 <AllocSocket>
 8000f88:	62b8      	str	r0, [r7, #40]	; 0x28

	if(newSocket == NULL) {
 8000f8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000f8c:	2b00      	cmp	r3, #0
 8000f8e:	d118      	bne.n	8000fc2 <custom_service_init+0xa6>
 8000f90:	e006      	b.n	8000fa0 <custom_service_init+0x84>
        printf("CUSTOM_SERVICE: Registering socket failed with status %d\n", (int)customServiceSocketRegistrationStatus);
 8000f92:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8000f96:	4619      	mov	r1, r3
 8000f98:	481e      	ldr	r0, [pc, #120]	; (8001014 <custom_service_init+0xf8>)
 8000f9a:	f029 ff1d 	bl	802add8 <iprintf>
 8000f9e:	e02c      	b.n	8000ffa <custom_service_init+0xde>
		ERROR("Could not allocate memory for new socket");
 8000fa0:	491d      	ldr	r1, [pc, #116]	; (8001018 <custom_service_init+0xfc>)
 8000fa2:	481e      	ldr	r0, [pc, #120]	; (800101c <custom_service_init+0x100>)
 8000fa4:	f029 ff86 	bl	802aeb4 <siprintf>
 8000fa8:	481c      	ldr	r0, [pc, #112]	; (800101c <custom_service_init+0x100>)
 8000faa:	f007 f925 	bl	80081f8 <hal_debug_puts>
 8000fae:	491c      	ldr	r1, [pc, #112]	; (8001020 <custom_service_init+0x104>)
 8000fb0:	481a      	ldr	r0, [pc, #104]	; (800101c <custom_service_init+0x100>)
 8000fb2:	f029 ff7f 	bl	802aeb4 <siprintf>
 8000fb6:	4819      	ldr	r0, [pc, #100]	; (800101c <custom_service_init+0x100>)
 8000fb8:	f007 f91e 	bl	80081f8 <hal_debug_puts>
		EMBENET_UDP_UnregisterSocket(&customServiceSocket);
 8000fbc:	4812      	ldr	r0, [pc, #72]	; (8001008 <custom_service_init+0xec>)
 8000fbe:	f00b fba1 	bl	800c704 <EMBENET_UDP_UnregisterSocket>
	}

	newSocket->Handle = &customServiceSocket;
 8000fc2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fc4:	4a10      	ldr	r2, [pc, #64]	; (8001008 <custom_service_init+0xec>)
 8000fc6:	601a      	str	r2, [r3, #0]
	newSocket->Tx = CoAP_Posix_SendDatagram; // Function to transmit packets
 8000fc8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fca:	4a16      	ldr	r2, [pc, #88]	; (8001024 <custom_service_init+0x108>)
 8000fcc:	605a      	str	r2, [r3, #4]
	newSocket->Alive = true; // UDP sockets don't need to be connected
 8000fce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fd0:	2201      	movs	r2, #1
 8000fd2:	721a      	strb	r2, [r3, #8]

	// Create a task using built-in scheduler
	customServiceTaskId = EMBENET_NODE_TaskCreate(customServiceTask, NULL);
 8000fd4:	2100      	movs	r1, #0
 8000fd6:	4814      	ldr	r0, [pc, #80]	; (8001028 <custom_service_init+0x10c>)
 8000fd8:	f00b fc58 	bl	800c88c <EMBENET_NODE_TaskCreate>
 8000fdc:	4603      	mov	r3, r0
 8000fde:	4a13      	ldr	r2, [pc, #76]	; (800102c <custom_service_init+0x110>)
 8000fe0:	6013      	str	r3, [r2, #0]
	if (EMBENET_TASKID_INVALID == customServiceTaskId) {
 8000fe2:	4b12      	ldr	r3, [pc, #72]	; (800102c <custom_service_init+0x110>)
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000fea:	d103      	bne.n	8000ff4 <custom_service_init+0xd8>
		printf("CUSTOM_SERVICE: Unable to create task\n");
 8000fec:	4810      	ldr	r0, [pc, #64]	; (8001030 <custom_service_init+0x114>)
 8000fee:	f029 ff59 	bl	802aea4 <puts>
 8000ff2:	e002      	b.n	8000ffa <custom_service_init+0xde>
	} else {
		printf("CUSTOM_SERVICE: Service initialized, task created\n");
 8000ff4:	480f      	ldr	r0, [pc, #60]	; (8001034 <custom_service_init+0x118>)
 8000ff6:	f029 ff55 	bl	802aea4 <puts>
	}
}
 8000ffa:	3730      	adds	r7, #48	; 0x30
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	bdb0      	pop	{r4, r5, r7, pc}
 8001000:	0802c0a4 	.word	0x0802c0a4
 8001004:	0802bf7c 	.word	0x0802bf7c
 8001008:	2000033c 	.word	0x2000033c
 800100c:	08000ea1 	.word	0x08000ea1
 8001010:	0802bfa0 	.word	0x0802bfa0
 8001014:	0802bfd4 	.word	0x0802bfd4
 8001018:	0802c010 	.word	0x0802c010
 800101c:	20000b54 	.word	0x20000b54
 8001020:	0802c01c 	.word	0x0802c01c
 8001024:	08000d95 	.word	0x08000d95
 8001028:	08000e2d 	.word	0x08000e2d
 800102c:	20000000 	.word	0x20000000
 8001030:	0802c048 	.word	0x0802c048
 8001034:	0802c070 	.word	0x0802c070

08001038 <custom_service_start>:

void custom_service_start(void) {
 8001038:	b5b0      	push	{r4, r5, r7, lr}
 800103a:	b082      	sub	sp, #8
 800103c:	af00      	add	r7, sp, #0
    printf("CUSTOM_SERVICE: Starting CoAP Task\n");
 800103e:	480c      	ldr	r0, [pc, #48]	; (8001070 <custom_service_start+0x38>)
 8001040:	f029 ff30 	bl	802aea4 <puts>
    // Get current time
    uint64_t current_time = EMBENET_NODE_GetLocalTime();
 8001044:	f00b fbbc 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 8001048:	e9c7 0100 	strd	r0, r1, [r7]
    // Schedule task using node's local time (invoke it after 2 seconds)
    EMBENET_NODE_TaskSchedule(customServiceTaskId, EMBENET_NODE_TIME_SOURCE_LOCAL, current_time + 2000);
 800104c:	4b09      	ldr	r3, [pc, #36]	; (8001074 <custom_service_start+0x3c>)
 800104e:	6818      	ldr	r0, [r3, #0]
 8001050:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001054:	f512 64fa 	adds.w	r4, r2, #2000	; 0x7d0
 8001058:	f143 0500 	adc.w	r5, r3, #0
 800105c:	4622      	mov	r2, r4
 800105e:	462b      	mov	r3, r5
 8001060:	2100      	movs	r1, #0
 8001062:	f00b fca3 	bl	800c9ac <EMBENET_NODE_TaskSchedule>
}
 8001066:	bf00      	nop
 8001068:	3708      	adds	r7, #8
 800106a:	46bd      	mov	sp, r7
 800106c:	bdb0      	pop	{r4, r5, r7, pc}
 800106e:	bf00      	nop
 8001070:	0802c0b8 	.word	0x0802c0b8
 8001074:	20000000 	.word	0x20000000

08001078 <custom_service_stop>:

void custom_service_stop(void) {
 8001078:	b580      	push	{r7, lr}
 800107a:	af00      	add	r7, sp, #0
    printf("CUSTOM_SERVICE: Stopping service\n");
 800107c:	4804      	ldr	r0, [pc, #16]	; (8001090 <custom_service_stop+0x18>)
 800107e:	f029 ff11 	bl	802aea4 <puts>
    // Cancel scheduled task
    EMBENET_NODE_TaskCancel(customServiceTaskId);
 8001082:	4b04      	ldr	r3, [pc, #16]	; (8001094 <custom_service_stop+0x1c>)
 8001084:	681b      	ldr	r3, [r3, #0]
 8001086:	4618      	mov	r0, r3
 8001088:	f00b fe5e 	bl	800cd48 <EMBENET_NODE_TaskCancel>
}
 800108c:	bf00      	nop
 800108e:	bd80      	pop	{r7, pc}
 8001090:	0802c0dc 	.word	0x0802c0dc
 8001094:	20000000 	.word	0x20000000

08001098 <LL_AHB2_GRP1_EnableClock>:
  *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOC
  *         @arg @ref LL_AHB2_GRP1_PERIPH_GPIOH
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
 8001098:	b480      	push	{r7}
 800109a:	b085      	sub	sp, #20
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 80010a0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80010a4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80010a6:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	4313      	orrs	r3, r2
 80010ae:	64cb      	str	r3, [r1, #76]	; 0x4c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 80010b0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80010b4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	4013      	ands	r3, r2
 80010ba:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 80010bc:	68fb      	ldr	r3, [r7, #12]
}
 80010be:	bf00      	nop
 80010c0:	3714      	adds	r7, #20
 80010c2:	46bd      	mov	sp, r7
 80010c4:	bc80      	pop	{r7}
 80010c6:	4770      	bx	lr

080010c8 <LL_GPIO_ResetOutputPin>:
  *         @arg @ref LL_GPIO_PIN_15
  *         @arg @ref LL_GPIO_PIN_ALL
  * @retval None
  */
__STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
{
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
 80010d0:	6039      	str	r1, [r7, #0]
  WRITE_REG(GPIOx->BRR, PinMask);
 80010d2:	687b      	ldr	r3, [r7, #4]
 80010d4:	683a      	ldr	r2, [r7, #0]
 80010d6:	629a      	str	r2, [r3, #40]	; 0x28
}
 80010d8:	bf00      	nop
 80010da:	370c      	adds	r7, #12
 80010dc:	46bd      	mov	sp, r7
 80010de:	bc80      	pop	{r7}
 80010e0:	4770      	bx	lr
	...

080010e4 <MX_GPIO_Init>:
        * EXTI
        * Free pins are configured automatically as Analog (this feature is enabled through
        * the Code Generation settings)
*/
void MX_GPIO_Init(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b086      	sub	sp, #24
 80010e8:	af00      	add	r7, sp, #0

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010ea:	463b      	mov	r3, r7
 80010ec:	2200      	movs	r2, #0
 80010ee:	601a      	str	r2, [r3, #0]
 80010f0:	605a      	str	r2, [r3, #4]
 80010f2:	609a      	str	r2, [r3, #8]
 80010f4:	60da      	str	r2, [r3, #12]
 80010f6:	611a      	str	r2, [r3, #16]
 80010f8:	615a      	str	r2, [r3, #20]

  /* GPIO Ports Clock Enable */
  LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 80010fa:	2001      	movs	r0, #1
 80010fc:	f7ff ffcc 	bl	8001098 <LL_AHB2_GRP1_EnableClock>
  LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOB);
 8001100:	2002      	movs	r0, #2
 8001102:	f7ff ffc9 	bl	8001098 <LL_AHB2_GRP1_EnableClock>
  LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOC);
 8001106:	2004      	movs	r0, #4
 8001108:	f7ff ffc6 	bl	8001098 <LL_AHB2_GRP1_EnableClock>
  LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOH);
 800110c:	2080      	movs	r0, #128	; 0x80
 800110e:	f7ff ffc3 	bl	8001098 <LL_AHB2_GRP1_EnableClock>

  /**/
  LL_GPIO_ResetOutputPin(GPIOB, LED1_Pin|LED2_Pin|LED3_Pin);
 8001112:	f44f 410a 	mov.w	r1, #35328	; 0x8a00
 8001116:	482f      	ldr	r0, [pc, #188]	; (80011d4 <MX_GPIO_Init+0xf0>)
 8001118:	f7ff ffd6 	bl	80010c8 <LL_GPIO_ResetOutputPin>

  /**/
  GPIO_InitStruct.Pin = LL_GPIO_PIN_12|LL_GPIO_PIN_15|LL_GPIO_PIN_11|LL_GPIO_PIN_10
 800111c:	f649 73f0 	movw	r3, #40944	; 0x9ff0
 8001120:	603b      	str	r3, [r7, #0]
                          |LL_GPIO_PIN_9|LL_GPIO_PIN_6|LL_GPIO_PIN_7|LL_GPIO_PIN_4
                          |LL_GPIO_PIN_5|LL_GPIO_PIN_8;
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 8001122:	2303      	movs	r3, #3
 8001124:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001126:	2300      	movs	r3, #0
 8001128:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800112a:	463b      	mov	r3, r7
 800112c:	4619      	mov	r1, r3
 800112e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001132:	f003 fb3c 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin;
 8001136:	f44f 430a 	mov.w	r3, #35328	; 0x8a00
 800113a:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 800113c:	2301      	movs	r3, #1
 800113e:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8001140:	2300      	movs	r3, #0
 8001142:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001144:	2300      	movs	r3, #0
 8001146:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001148:	2300      	movs	r3, #0
 800114a:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800114c:	463b      	mov	r3, r7
 800114e:	4619      	mov	r1, r3
 8001150:	4820      	ldr	r0, [pc, #128]	; (80011d4 <MX_GPIO_Init+0xf0>)
 8001152:	f003 fb2c 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = LL_GPIO_PIN_4|LL_GPIO_PIN_14|LL_GPIO_PIN_5|LL_GPIO_PIN_8
 8001156:	f247 5336 	movw	r3, #30006	; 0x7536
 800115a:	603b      	str	r3, [r7, #0]
                          |LL_GPIO_PIN_13|LL_GPIO_PIN_2|LL_GPIO_PIN_12|LL_GPIO_PIN_1
                          |LL_GPIO_PIN_10;
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 800115c:	2303      	movs	r3, #3
 800115e:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001160:	2300      	movs	r3, #0
 8001162:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001164:	463b      	mov	r3, r7
 8001166:	4619      	mov	r1, r3
 8001168:	481a      	ldr	r0, [pc, #104]	; (80011d4 <MX_GPIO_Init+0xf0>)
 800116a:	f003 fb20 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = LL_GPIO_PIN_13|LL_GPIO_PIN_2|LL_GPIO_PIN_1|LL_GPIO_PIN_0;
 800116e:	f242 0307 	movw	r3, #8199	; 0x2007
 8001172:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 8001174:	2303      	movs	r3, #3
 8001176:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001178:	2300      	movs	r3, #0
 800117a:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800117c:	463b      	mov	r3, r7
 800117e:	4619      	mov	r1, r3
 8001180:	4815      	ldr	r0, [pc, #84]	; (80011d8 <MX_GPIO_Init+0xf4>)
 8001182:	f003 fb14 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = B1_Pin|B2_Pin;
 8001186:	2303      	movs	r3, #3
 8001188:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 800118a:	2300      	movs	r3, #0
 800118c:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 800118e:	2301      	movs	r3, #1
 8001190:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001192:	463b      	mov	r3, r7
 8001194:	4619      	mov	r1, r3
 8001196:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800119a:	f003 fb08 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = B3_Pin;
 800119e:	2340      	movs	r3, #64	; 0x40
 80011a0:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_INPUT;
 80011a2:	2300      	movs	r3, #0
 80011a4:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_UP;
 80011a6:	2301      	movs	r3, #1
 80011a8:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(B3_GPIO_Port, &GPIO_InitStruct);
 80011aa:	463b      	mov	r3, r7
 80011ac:	4619      	mov	r1, r3
 80011ae:	480a      	ldr	r0, [pc, #40]	; (80011d8 <MX_GPIO_Init+0xf4>)
 80011b0:	f003 fafd 	bl	80047ae <LL_GPIO_Init>

  /**/
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3;
 80011b4:	2308      	movs	r3, #8
 80011b6:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 80011b8:	2303      	movs	r3, #3
 80011ba:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 80011bc:	2300      	movs	r3, #0
 80011be:	613b      	str	r3, [r7, #16]
  LL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80011c0:	463b      	mov	r3, r7
 80011c2:	4619      	mov	r1, r3
 80011c4:	4805      	ldr	r0, [pc, #20]	; (80011dc <MX_GPIO_Init+0xf8>)
 80011c6:	f003 faf2 	bl	80047ae <LL_GPIO_Init>

}
 80011ca:	bf00      	nop
 80011cc:	3718      	adds	r7, #24
 80011ce:	46bd      	mov	sp, r7
 80011d0:	bd80      	pop	{r7, pc}
 80011d2:	bf00      	nop
 80011d4:	48000400 	.word	0x48000400
 80011d8:	48000800 	.word	0x48000800
 80011dc:	48001c00 	.word	0x48001c00

080011e0 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
 80011e0:	b480      	push	{r7}
 80011e2:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80011e4:	f3bf 8f4f 	dsb	sy
}
 80011e8:	bf00      	nop
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 80011ea:	4b06      	ldr	r3, [pc, #24]	; (8001204 <__NVIC_SystemReset+0x24>)
 80011ec:	68db      	ldr	r3, [r3, #12]
 80011ee:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 80011f2:	4904      	ldr	r1, [pc, #16]	; (8001204 <__NVIC_SystemReset+0x24>)
 80011f4:	4b04      	ldr	r3, [pc, #16]	; (8001208 <__NVIC_SystemReset+0x28>)
 80011f6:	4313      	orrs	r3, r2
 80011f8:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80011fa:	f3bf 8f4f 	dsb	sy
}
 80011fe:	bf00      	nop
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
 8001200:	bf00      	nop
 8001202:	e7fd      	b.n	8001200 <__NVIC_SystemReset+0x20>
 8001204:	e000ed00 	.word	0xe000ed00
 8001208:	05fa0004 	.word	0x05fa0004

0800120c <LL_PWR_SetRegulVoltageScaling>:
  *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
  *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
{
 800120c:	b480      	push	{r7}
 800120e:	b083      	sub	sp, #12
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8001214:	4b06      	ldr	r3, [pc, #24]	; (8001230 <LL_PWR_SetRegulVoltageScaling+0x24>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	f423 62c0 	bic.w	r2, r3, #1536	; 0x600
 800121c:	4904      	ldr	r1, [pc, #16]	; (8001230 <LL_PWR_SetRegulVoltageScaling+0x24>)
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	4313      	orrs	r3, r2
 8001222:	600b      	str	r3, [r1, #0]
}
 8001224:	bf00      	nop
 8001226:	370c      	adds	r7, #12
 8001228:	46bd      	mov	sp, r7
 800122a:	bc80      	pop	{r7}
 800122c:	4770      	bx	lr
 800122e:	bf00      	nop
 8001230:	58000400 	.word	0x58000400

08001234 <LL_RCC_HSE_EnableTcxo>:
  * @note PB0 must be configured in analog mode prior enabling VDDTCXO supply
  * @rmtoll CR           HSEBYPPWR        LL_RCC_HSE_EnableTcxo
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSE_EnableTcxo(void)
{
 8001234:	b480      	push	{r7}
 8001236:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSEBYPPWR);
 8001238:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8001242:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001246:	6013      	str	r3, [r2, #0]
}
 8001248:	bf00      	nop
 800124a:	46bd      	mov	sp, r7
 800124c:	bc80      	pop	{r7}
 800124e:	4770      	bx	lr

08001250 <LL_RCC_HSE_Enable>:
  * @brief  Enable HSE crystal oscillator (HSE ON)
  * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSE_Enable(void)
{
 8001250:	b480      	push	{r7}
 8001252:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSEON);
 8001254:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001258:	681b      	ldr	r3, [r3, #0]
 800125a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800125e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001262:	6013      	str	r3, [r2, #0]
}
 8001264:	bf00      	nop
 8001266:	46bd      	mov	sp, r7
 8001268:	bc80      	pop	{r7}
 800126a:	4770      	bx	lr

0800126c <LL_RCC_HSE_IsReady>:
  * @brief  Check if HSE oscillator Ready
  * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
{
 800126c:	b480      	push	{r7}
 800126e:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY)) ? 1UL : 0UL);
 8001270:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800127a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800127e:	d101      	bne.n	8001284 <LL_RCC_HSE_IsReady+0x18>
 8001280:	2301      	movs	r3, #1
 8001282:	e000      	b.n	8001286 <LL_RCC_HSE_IsReady+0x1a>
 8001284:	2300      	movs	r3, #0
}
 8001286:	4618      	mov	r0, r3
 8001288:	46bd      	mov	sp, r7
 800128a:	bc80      	pop	{r7}
 800128c:	4770      	bx	lr

0800128e <LL_RCC_SetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
{
 800128e:	b480      	push	{r7}
 8001290:	b083      	sub	sp, #12
 8001292:	af00      	add	r7, sp, #0
 8001294:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
 8001296:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800129a:	689b      	ldr	r3, [r3, #8]
 800129c:	f023 0203 	bic.w	r2, r3, #3
 80012a0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80012a4:	687b      	ldr	r3, [r7, #4]
 80012a6:	4313      	orrs	r3, r2
 80012a8:	608b      	str	r3, [r1, #8]
}
 80012aa:	bf00      	nop
 80012ac:	370c      	adds	r7, #12
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bc80      	pop	{r7}
 80012b2:	4770      	bx	lr

080012b4 <LL_RCC_GetSysClkSource>:
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
  *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
  */
__STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
{
 80012b4:	b480      	push	{r7}
 80012b6:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 80012b8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80012bc:	689b      	ldr	r3, [r3, #8]
 80012be:	f003 030c 	and.w	r3, r3, #12
}
 80012c2:	4618      	mov	r0, r3
 80012c4:	46bd      	mov	sp, r7
 80012c6:	bc80      	pop	{r7}
 80012c8:	4770      	bx	lr

080012ca <LL_RCC_SetAHBPrescaler>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
{
 80012ca:	b480      	push	{r7}
 80012cc:	b083      	sub	sp, #12
 80012ce:	af00      	add	r7, sp, #0
 80012d0:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 80012d2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80012d6:	689b      	ldr	r3, [r3, #8]
 80012d8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80012dc:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80012e0:	687b      	ldr	r3, [r7, #4]
 80012e2:	4313      	orrs	r3, r2
 80012e4:	608b      	str	r3, [r1, #8]
}
 80012e6:	bf00      	nop
 80012e8:	370c      	adds	r7, #12
 80012ea:	46bd      	mov	sp, r7
 80012ec:	bc80      	pop	{r7}
 80012ee:	4770      	bx	lr

080012f0 <LL_RCC_SetAHB3Prescaler>:
  *         @arg @ref LL_RCC_SYSCLK_DIV_256
  *         @arg @ref LL_RCC_SYSCLK_DIV_512
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAHB3Prescaler(uint32_t Prescaler)
{
 80012f0:	b480      	push	{r7}
 80012f2:	b083      	sub	sp, #12
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->EXTCFGR, RCC_EXTCFGR_SHDHPRE, Prescaler >> 4);
 80012f8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80012fc:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8001300:	f023 020f 	bic.w	r2, r3, #15
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	091b      	lsrs	r3, r3, #4
 8001308:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800130c:	4313      	orrs	r3, r2
 800130e:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
}
 8001312:	bf00      	nop
 8001314:	370c      	adds	r7, #12
 8001316:	46bd      	mov	sp, r7
 8001318:	bc80      	pop	{r7}
 800131a:	4770      	bx	lr

0800131c <LL_RCC_SetAPB1Prescaler>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
{
 800131c:	b480      	push	{r7}
 800131e:	b083      	sub	sp, #12
 8001320:	af00      	add	r7, sp, #0
 8001322:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
 8001324:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001328:	689b      	ldr	r3, [r3, #8]
 800132a:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800132e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	4313      	orrs	r3, r2
 8001336:	608b      	str	r3, [r1, #8]
}
 8001338:	bf00      	nop
 800133a:	370c      	adds	r7, #12
 800133c:	46bd      	mov	sp, r7
 800133e:	bc80      	pop	{r7}
 8001340:	4770      	bx	lr

08001342 <LL_RCC_SetAPB2Prescaler>:
  *         @arg @ref LL_RCC_APB2_DIV_8
  *         @arg @ref LL_RCC_APB2_DIV_16
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
{
 8001342:	b480      	push	{r7}
 8001344:	b083      	sub	sp, #12
 8001346:	af00      	add	r7, sp, #0
 8001348:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
 800134a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800134e:	689b      	ldr	r3, [r3, #8]
 8001350:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001354:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	4313      	orrs	r3, r2
 800135c:	608b      	str	r3, [r1, #8]
}
 800135e:	bf00      	nop
 8001360:	370c      	adds	r7, #12
 8001362:	46bd      	mov	sp, r7
 8001364:	bc80      	pop	{r7}
 8001366:	4770      	bx	lr

08001368 <LL_RCC_PLL_Enable>:
  * @brief  Enable PLL
  * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_PLL_Enable(void)
{
 8001368:	b480      	push	{r7}
 800136a:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_PLLON);
 800136c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8001376:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800137a:	6013      	str	r3, [r2, #0]
}
 800137c:	bf00      	nop
 800137e:	46bd      	mov	sp, r7
 8001380:	bc80      	pop	{r7}
 8001382:	4770      	bx	lr

08001384 <LL_RCC_PLL_IsReady>:
  * @brief  Check if PLL Ready
  * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
{
 8001384:	b480      	push	{r7}
 8001386:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY)) ? 1UL : 0UL);
 8001388:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001392:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8001396:	d101      	bne.n	800139c <LL_RCC_PLL_IsReady+0x18>
 8001398:	2301      	movs	r3, #1
 800139a:	e000      	b.n	800139e <LL_RCC_PLL_IsReady+0x1a>
 800139c:	2300      	movs	r3, #0
}
 800139e:	4618      	mov	r0, r3
 80013a0:	46bd      	mov	sp, r7
 80013a2:	bc80      	pop	{r7}
 80013a4:	4770      	bx	lr
	...

080013a8 <LL_RCC_PLL_ConfigDomain_SYS>:
  *         @arg @ref LL_RCC_PLLR_DIV_7
  *         @arg @ref LL_RCC_PLLR_DIV_8
  * @retval None
  */
__STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLM, uint32_t PLLN, uint32_t PLLR)
{
 80013a8:	b480      	push	{r7}
 80013aa:	b085      	sub	sp, #20
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	60f8      	str	r0, [r7, #12]
 80013b0:	60b9      	str	r1, [r7, #8]
 80013b2:	607a      	str	r2, [r7, #4]
 80013b4:	603b      	str	r3, [r7, #0]
  MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM | RCC_PLLCFGR_PLLN | RCC_PLLCFGR_PLLR,
 80013b6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80013ba:	68da      	ldr	r2, [r3, #12]
 80013bc:	4b09      	ldr	r3, [pc, #36]	; (80013e4 <LL_RCC_PLL_ConfigDomain_SYS+0x3c>)
 80013be:	4013      	ands	r3, r2
 80013c0:	68f9      	ldr	r1, [r7, #12]
 80013c2:	68ba      	ldr	r2, [r7, #8]
 80013c4:	4311      	orrs	r1, r2
 80013c6:	687a      	ldr	r2, [r7, #4]
 80013c8:	0212      	lsls	r2, r2, #8
 80013ca:	4311      	orrs	r1, r2
 80013cc:	683a      	ldr	r2, [r7, #0]
 80013ce:	430a      	orrs	r2, r1
 80013d0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80013d4:	4313      	orrs	r3, r2
 80013d6:	60cb      	str	r3, [r1, #12]
             Source | PLLM | (PLLN << RCC_PLLCFGR_PLLN_Pos) | PLLR);
}
 80013d8:	bf00      	nop
 80013da:	3714      	adds	r7, #20
 80013dc:	46bd      	mov	sp, r7
 80013de:	bc80      	pop	{r7}
 80013e0:	4770      	bx	lr
 80013e2:	bf00      	nop
 80013e4:	1fff808c 	.word	0x1fff808c

080013e8 <LL_RCC_PLL_EnableDomain_SYS>:
  * @brief  Enable PLL output mapped on SYSCLK domain
  * @rmtoll PLLCFGR      PLLREN        LL_RCC_PLL_EnableDomain_SYS
  * @retval None
  */
__STATIC_INLINE void LL_RCC_PLL_EnableDomain_SYS(void)
{
 80013e8:	b480      	push	{r7}
 80013ea:	af00      	add	r7, sp, #0
  SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLREN);
 80013ec:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80013f0:	68db      	ldr	r3, [r3, #12]
 80013f2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80013f6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80013fa:	60d3      	str	r3, [r2, #12]
}
 80013fc:	bf00      	nop
 80013fe:	46bd      	mov	sp, r7
 8001400:	bc80      	pop	{r7}
 8001402:	4770      	bx	lr

08001404 <LL_FLASH_SetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  * @retval None
  */
__STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
{
 8001404:	b480      	push	{r7}
 8001406:	b083      	sub	sp, #12
 8001408:	af00      	add	r7, sp, #0
 800140a:	6078      	str	r0, [r7, #4]
  MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 800140c:	4b06      	ldr	r3, [pc, #24]	; (8001428 <LL_FLASH_SetLatency+0x24>)
 800140e:	681b      	ldr	r3, [r3, #0]
 8001410:	f023 0207 	bic.w	r2, r3, #7
 8001414:	4904      	ldr	r1, [pc, #16]	; (8001428 <LL_FLASH_SetLatency+0x24>)
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	4313      	orrs	r3, r2
 800141a:	600b      	str	r3, [r1, #0]
}
 800141c:	bf00      	nop
 800141e:	370c      	adds	r7, #12
 8001420:	46bd      	mov	sp, r7
 8001422:	bc80      	pop	{r7}
 8001424:	4770      	bx	lr
 8001426:	bf00      	nop
 8001428:	58004000 	.word	0x58004000

0800142c <LL_FLASH_GetLatency>:
  *         @arg @ref LL_FLASH_LATENCY_0
  *         @arg @ref LL_FLASH_LATENCY_1
  *         @arg @ref LL_FLASH_LATENCY_2
  */
__STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
{
 800142c:	b480      	push	{r7}
 800142e:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 8001430:	4b03      	ldr	r3, [pc, #12]	; (8001440 <LL_FLASH_GetLatency+0x14>)
 8001432:	681b      	ldr	r3, [r3, #0]
 8001434:	f003 0307 	and.w	r3, r3, #7
}
 8001438:	4618      	mov	r0, r3
 800143a:	46bd      	mov	sp, r7
 800143c:	bc80      	pop	{r7}
 800143e:	4770      	bx	lr
 8001440:	58004000 	.word	0x58004000

08001444 <onJoined>:
/**
 * User-defined callback that will be called, when the node joins the network.
 * @param[in] panId Identifier of the Network that node joined
 * @param[in] quickJoinCredentials pointer to the Quick Join Credentials that MAY be stored by the user to facilitate rejoining process.
 */
static void onJoined(EMBENET_PANID panId, const EMBENET_NODE_QuickJoinCredentials *quickJoinCredentials) {
 8001444:	b580      	push	{r7, lr}
 8001446:	b084      	sub	sp, #16
 8001448:	af00      	add	r7, sp, #0
 800144a:	4603      	mov	r3, r0
 800144c:	6039      	str	r1, [r7, #0]
 800144e:	80fb      	strh	r3, [r7, #6]
    printf("Joined network with PANID: 0x%04" PRIx16 "\n", panId);
 8001450:	88fb      	ldrh	r3, [r7, #6]
 8001452:	4619      	mov	r1, r3
 8001454:	480c      	ldr	r0, [pc, #48]	; (8001488 <onJoined+0x44>)
 8001456:	f029 fcbf 	bl	802add8 <iprintf>

    // Start ENMS Service that provides network-wide telemetry information
    EnmsNodeResult enmsStartStatus = ENMS_NODE_Start(&enmsNode);
 800145a:	480c      	ldr	r0, [pc, #48]	; (800148c <onJoined+0x48>)
 800145c:	f013 fc1a 	bl	8014c94 <ENMS_NODE_Start>
 8001460:	4603      	mov	r3, r0
 8001462:	73fb      	strb	r3, [r7, #15]
    if (ENMS_NODE_RESULT_OK == enmsStartStatus) {
 8001464:	7bfb      	ldrb	r3, [r7, #15]
 8001466:	2b00      	cmp	r3, #0
 8001468:	d103      	bne.n	8001472 <onJoined+0x2e>
        printf("ENMS service started\n");
 800146a:	4809      	ldr	r0, [pc, #36]	; (8001490 <onJoined+0x4c>)
 800146c:	f029 fd1a 	bl	802aea4 <puts>
 8001470:	e004      	b.n	800147c <onJoined+0x38>
    } else {
        printf("ENMS service failed to start with status: %d\n", (int)enmsStartStatus);
 8001472:	7bfb      	ldrb	r3, [r7, #15]
 8001474:	4619      	mov	r1, r3
 8001476:	4807      	ldr	r0, [pc, #28]	; (8001494 <onJoined+0x50>)
 8001478:	f029 fcae 	bl	802add8 <iprintf>
    }

#if 1 != IS_ROOT
    // Start exemplary, user-defined custom service
    custom_service_start();
 800147c:	f7ff fddc 	bl	8001038 <custom_service_start>
    // Start MQTT-SN demo service
    //mqttsn_client_service_start();
#endif
}
 8001480:	bf00      	nop
 8001482:	3710      	adds	r7, #16
 8001484:	46bd      	mov	sp, r7
 8001486:	bd80      	pop	{r7, pc}
 8001488:	0802c100 	.word	0x0802c100
 800148c:	20000350 	.word	0x20000350
 8001490:	0802c124 	.word	0x0802c124
 8001494:	0802c13c 	.word	0x0802c13c

08001498 <onLeft>:

/**
 * @brief User-defined callback, that will be called after the node leaves the network
 */
static void onLeft(void) {
 8001498:	b580      	push	{r7, lr}
 800149a:	b082      	sub	sp, #8
 800149c:	af00      	add	r7, sp, #0
    printf("Node has left the network\n");
 800149e:	480d      	ldr	r0, [pc, #52]	; (80014d4 <onLeft+0x3c>)
 80014a0:	f029 fd00 	bl	802aea4 <puts>
    // Stop ENMS service
    EnmsNodeResult enmsStopStatus = ENMS_NODE_Stop(&enmsNode);
 80014a4:	480c      	ldr	r0, [pc, #48]	; (80014d8 <onLeft+0x40>)
 80014a6:	f013 fd57 	bl	8014f58 <ENMS_NODE_Stop>
 80014aa:	4603      	mov	r3, r0
 80014ac:	71fb      	strb	r3, [r7, #7]
    if (ENMS_NODE_RESULT_OK == enmsStopStatus) {
 80014ae:	79fb      	ldrb	r3, [r7, #7]
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d103      	bne.n	80014bc <onLeft+0x24>
        printf("ENMS service stopped\n");
 80014b4:	4809      	ldr	r0, [pc, #36]	; (80014dc <onLeft+0x44>)
 80014b6:	f029 fcf5 	bl	802aea4 <puts>
 80014ba:	e004      	b.n	80014c6 <onLeft+0x2e>
    } else {
        printf("ENMS service failed to stop with status: %d\n", (int)enmsStopStatus);
 80014bc:	79fb      	ldrb	r3, [r7, #7]
 80014be:	4619      	mov	r1, r3
 80014c0:	4807      	ldr	r0, [pc, #28]	; (80014e0 <onLeft+0x48>)
 80014c2:	f029 fc89 	bl	802add8 <iprintf>
    }

#if 1 != IS_ROOT
    // Stop exemplary, user-defined custom service
    custom_service_stop();
 80014c6:	f7ff fdd7 	bl	8001078 <custom_service_stop>
    // Stop MQTT-SN demo service
    //mqttsn_client_service_stop();
#endif

}
 80014ca:	bf00      	nop
 80014cc:	3708      	adds	r7, #8
 80014ce:	46bd      	mov	sp, r7
 80014d0:	bd80      	pop	{r7, pc}
 80014d2:	bf00      	nop
 80014d4:	0802c16c 	.word	0x0802c16c
 80014d8:	20000350 	.word	0x20000350
 80014dc:	0802c188 	.word	0x0802c188
 80014e0:	0802c1a0 	.word	0x0802c1a0

080014e4 <onJoinAttempt>:
/**
 * @brief User-defined callback, that will be called when node tries to join the network
 *
 * NOTE: This callback is included in this demo only for debugging purposes
 */
static void onJoinAttempt(EMBENET_PANID panId, const void *panData, size_t panDataSize) {
 80014e4:	b580      	push	{r7, lr}
 80014e6:	b084      	sub	sp, #16
 80014e8:	af00      	add	r7, sp, #0
 80014ea:	4603      	mov	r3, r0
 80014ec:	60b9      	str	r1, [r7, #8]
 80014ee:	607a      	str	r2, [r7, #4]
 80014f0:	81fb      	strh	r3, [r7, #14]
    printf("Node is attempting to join the network with PANID 0x%04" PRIx16 "\n", panId);
 80014f2:	89fb      	ldrh	r3, [r7, #14]
 80014f4:	4619      	mov	r1, r3
 80014f6:	4805      	ldr	r0, [pc, #20]	; (800150c <onJoinAttempt+0x28>)
 80014f8:	f029 fc6e 	bl	802add8 <iprintf>
    printf("Network-wide data (%uB)\n", (unsigned)panDataSize);
 80014fc:	6879      	ldr	r1, [r7, #4]
 80014fe:	4804      	ldr	r0, [pc, #16]	; (8001510 <onJoinAttempt+0x2c>)
 8001500:	f029 fc6a 	bl	802add8 <iprintf>
}
 8001504:	bf00      	nop
 8001506:	3710      	adds	r7, #16
 8001508:	46bd      	mov	sp, r7
 800150a:	bd80      	pop	{r7, pc}
 800150c:	0802c1d0 	.word	0x0802c1d0
 8001510:	0802c20c 	.word	0x0802c20c

08001514 <dataOnUregisteredPort>:
/**
 * @brief User-defined callback, that will be called when the node receives UDP datagram on closed port
 *
 * NOTE: This callback is included for purely debugging purposes. It should be Never used as a method of reliable data transfer
 */
static void dataOnUregisteredPort(uint16_t port) {
 8001514:	b580      	push	{r7, lr}
 8001516:	b082      	sub	sp, #8
 8001518:	af00      	add	r7, sp, #0
 800151a:	4603      	mov	r3, r0
 800151c:	80fb      	strh	r3, [r7, #6]
    printf("Got UDP datagram on unregistered port no: %" PRIu16 "\n", port);
 800151e:	88fb      	ldrh	r3, [r7, #6]
 8001520:	4619      	mov	r1, r3
 8001522:	4803      	ldr	r0, [pc, #12]	; (8001530 <dataOnUregisteredPort+0x1c>)
 8001524:	f029 fc58 	bl	802add8 <iprintf>
}
 8001528:	bf00      	nop
 800152a:	3708      	adds	r7, #8
 800152c:	46bd      	mov	sp, r7
 800152e:	bd80      	pop	{r7, pc}
 8001530:	0802c228 	.word	0x0802c228

08001534 <onQuickJoinCredentialsObsolete>:
 * @brief User-defined callback, that will be called when provided quick join credentials become obsolete.
 *
 * If the quick join feature is used, user should delete the stored data and store new data, when onJoined callback will be called again.
 * This demo application does not use the quick join feature.
 */
static void onQuickJoinCredentialsObsolete(void) {
 8001534:	b580      	push	{r7, lr}
 8001536:	af00      	add	r7, sp, #0
    printf("Quick join credentials became obsolete\n");
 8001538:	4802      	ldr	r0, [pc, #8]	; (8001544 <onQuickJoinCredentialsObsolete+0x10>)
 800153a:	f029 fcb3 	bl	802aea4 <puts>
}
 800153e:	bf00      	nop
 8001540:	bd80      	pop	{r7, pc}
 8001542:	bf00      	nop
 8001544:	0802c258 	.word	0x0802c258

08001548 <main>:

/**
  * @brief  The application entry point.
  */
int main(void)
{
 8001548:	b5b0      	push	{r4, r5, r7, lr}
 800154a:	b092      	sub	sp, #72	; 0x48
 800154c:	af00      	add	r7, sp, #0
    /* USER CODE END 1 */

    /* MCU Configuration--------------------------------------------------------*/

    /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
    HAL_Init();
 800154e:	f000 fd75 	bl	800203c <HAL_Init>
    /* USER CODE BEGIN Init */

    /* USER CODE END Init */

    /* Configure the system clock */
    SystemClock_Config();
 8001552:	f000 f88b 	bl	800166c <SystemClock_Config>
    /* USER CODE BEGIN SysInit */

    /* USER CODE END SysInit */

    /* Initialize all configured peripherals */
    MX_GPIO_Init();
 8001556:	f7ff fdc5 	bl	80010e4 <MX_GPIO_Init>
    /* USER CODE BEGIN 2 */

    LOGGER_UART_Init();
 800155a:	f000 fca7 	bl	8001eac <LOGGER_UART_Init>
    printf("\n"
 800155e:	4836      	ldr	r0, [pc, #216]	; (8001638 <main+0xf0>)
 8001560:	f029 fca0 	bl	802aea4 <puts>
            "+---------------------------------------------+\n"
            "   embeNET Node demo for nucleo-wl55jc board   \n"
            "+---------------------------------------------+\n");

    // Initialize structure with user-defined event handlers
    EMBENET_NODE_EventHandlers handlers = {
 8001564:	4b35      	ldr	r3, [pc, #212]	; (800163c <main+0xf4>)
 8001566:	f107 0434 	add.w	r4, r7, #52	; 0x34
 800156a:	461d      	mov	r5, r3
 800156c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800156e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001570:	682b      	ldr	r3, [r5, #0]
 8001572:	6023      	str	r3, [r4, #0]
        .onQuickJoinCredentialsObsolete = onQuickJoinCredentialsObsolete,
        .onDataOnUnregisteredPort = dataOnUregisteredPort
    };

    // Initialize network stack
    if (EMBENET_RESULT_OK == EMBENET_NODE_Init(&handlers)) {
 8001574:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8001578:	4618      	mov	r0, r3
 800157a:	f00a ff6f 	bl	800c45c <EMBENET_NODE_Init>
 800157e:	4603      	mov	r3, r0
 8001580:	2b00      	cmp	r3, #0
 8001582:	d103      	bne.n	800158c <main+0x44>
        printf("embeNET Node initialized\n");
 8001584:	482e      	ldr	r0, [pc, #184]	; (8001640 <main+0xf8>)
 8001586:	f029 fc8d 	bl	802aea4 <puts>
 800158a:	e002      	b.n	8001592 <main+0x4a>
    } else {
        printf("Failed to initialize embeNET Node\n");
 800158c:	482d      	ldr	r0, [pc, #180]	; (8001644 <main+0xfc>)
 800158e:	f029 fc89 	bl	802aea4 <puts>
    }
    
    // Get hardware ID using 96-bit CPU uid
    uint8_t hardwareId[16] = { 0x00 };
 8001592:	2300      	movs	r3, #0
 8001594:	627b      	str	r3, [r7, #36]	; 0x24
 8001596:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800159a:	2200      	movs	r2, #0
 800159c:	601a      	str	r2, [r3, #0]
 800159e:	605a      	str	r2, [r3, #4]
 80015a0:	609a      	str	r2, [r3, #8]
    memcpy(hardwareId, (void const*) UID_BASE, 12);
 80015a2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80015a6:	220c      	movs	r2, #12
 80015a8:	4927      	ldr	r1, [pc, #156]	; (8001648 <main+0x100>)
 80015aa:	4618      	mov	r0, r3
 80015ac:	f029 fe43 	bl	802b236 <memcpy>
    // Initialize ENMS service on its default port. You may specify custom Hardware Identifier
    if (ENMS_NODE_RESULT_OK == ENMS_NODE_Init(&enmsNode, ENMS_DEFAULT_PORT, hardwareId, NULL)) {
 80015b0:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80015b4:	2300      	movs	r3, #0
 80015b6:	f24f 01b1 	movw	r1, #61617	; 0xf0b1
 80015ba:	4824      	ldr	r0, [pc, #144]	; (800164c <main+0x104>)
 80015bc:	f013 fa32 	bl	8014a24 <ENMS_NODE_Init>
 80015c0:	4603      	mov	r3, r0
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	d103      	bne.n	80015ce <main+0x86>
        printf("ENMS service initialized\n");
 80015c6:	4822      	ldr	r0, [pc, #136]	; (8001650 <main+0x108>)
 80015c8:	f029 fc6c 	bl	802aea4 <puts>
 80015cc:	e002      	b.n	80015d4 <main+0x8c>
    } else {
        printf("Failed to initialize ENMS service!\n");
 80015ce:	4821      	ldr	r0, [pc, #132]	; (8001654 <main+0x10c>)
 80015d0:	f029 fc68 	bl	802aea4 <puts>
#if 1 == IS_ROOT
    printf("Acting as root with UID: 0x%x%08x\n", (unsigned)(EMBENET_NODE_GetUID()>>32), (unsigned)(EMBENET_NODE_GetUID()));
    // When the application is built for Root node, start as root instead of joining the network
    EMBENET_NODE_RootStart(NULL, 0);
#else
    printf("Acting as node with UID: 0x%x%08x\n", (unsigned)(EMBENET_NODE_GetUID()>>32), (unsigned)(EMBENET_NODE_GetUID()));
 80015d4:	f00b fbf6 	bl	800cdc4 <EMBENET_NODE_GetUID>
 80015d8:	f04f 0200 	mov.w	r2, #0
 80015dc:	f04f 0300 	mov.w	r3, #0
 80015e0:	000a      	movs	r2, r1
 80015e2:	2300      	movs	r3, #0
 80015e4:	4614      	mov	r4, r2
 80015e6:	f00b fbed 	bl	800cdc4 <EMBENET_NODE_GetUID>
 80015ea:	4602      	mov	r2, r0
 80015ec:	460b      	mov	r3, r1
 80015ee:	4613      	mov	r3, r2
 80015f0:	461a      	mov	r2, r3
 80015f2:	4621      	mov	r1, r4
 80015f4:	4818      	ldr	r0, [pc, #96]	; (8001658 <main+0x110>)
 80015f6:	f029 fbef 	bl	802add8 <iprintf>

    // Initialize exemplary, user-defined custom service
    custom_service_init();
 80015fa:	f7ff fc8f 	bl	8000f1c <custom_service_init>
    // Initialize MQTT-SN service
    //mqttsn_client_service_init();

    // Additionally tell the ENMS what services are running
    (void) ENMS_NODE_RegisterService(&enmsNode, "custom", 1);
 80015fe:	2201      	movs	r2, #1
 8001600:	4916      	ldr	r1, [pc, #88]	; (800165c <main+0x114>)
 8001602:	4812      	ldr	r0, [pc, #72]	; (800164c <main+0x104>)
 8001604:	f013 fcd8 	bl	8014fb8 <ENMS_NODE_RegisterService>
    (void) ENMS_NODE_RegisterService(&enmsNode, "mqttsn", 1);
 8001608:	2201      	movs	r2, #1
 800160a:	4915      	ldr	r1, [pc, #84]	; (8001660 <main+0x118>)
 800160c:	480f      	ldr	r0, [pc, #60]	; (800164c <main+0x104>)
 800160e:	f013 fcd3 	bl	8014fb8 <ENMS_NODE_RegisterService>

    // embeNET network configuration:
    // K1 key, used to authenticate the network node should join and
    // PSK - Node's secret key.
    // Note that the psk value should be preferably stored in secure memory, or be preloaded using custom bootloader.
    EMBENET_NODE_Config config = {
 8001612:	4b14      	ldr	r3, [pc, #80]	; (8001664 <main+0x11c>)
 8001614:	1d3c      	adds	r4, r7, #4
 8001616:	461d      	mov	r5, r3
 8001618:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800161a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800161c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001620:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        .k1.val = { 0xc0, 0x8b, 0x76, 0x62, 0x77, 0x09, 0x9e, 0x7d, 0x7e, 0x9c, 0x02, 0x22, 0xf1, 0x68, 0xcc, 0x9e },
        .psk.val = {0x46, 0xd7, 0xdc, 0x94, 0xe8, 0xee, 0x74, 0x96, 0xce, 0xaf, 0x54, 0xa3, 0xab, 0x64, 0xcb, 0xeb },
    };

    printf("Trying to join a network...\n");
 8001624:	4810      	ldr	r0, [pc, #64]	; (8001668 <main+0x120>)
 8001626:	f029 fc3d 	bl	802aea4 <puts>
    // Make the node join the network
    EMBENET_NODE_Join(&config);
 800162a:	1d3b      	adds	r3, r7, #4
 800162c:	4618      	mov	r0, r3
 800162e:	f00b f81f 	bl	800c670 <EMBENET_NODE_Join>

    /* Infinite loop */
    /* USER CODE BEGIN WHILE */
    while (1) {
        // Periodically call embeNET Node process function
        EMBENET_NODE_Proc();
 8001632:	f00b f899 	bl	800c768 <EMBENET_NODE_Proc>
 8001636:	e7fc      	b.n	8001632 <main+0xea>
 8001638:	0802c280 	.word	0x0802c280
 800163c:	0802c3e4 	.word	0x0802c3e4
 8001640:	0802c314 	.word	0x0802c314
 8001644:	0802c330 	.word	0x0802c330
 8001648:	1fff7590 	.word	0x1fff7590
 800164c:	20000350 	.word	0x20000350
 8001650:	0802c354 	.word	0x0802c354
 8001654:	0802c370 	.word	0x0802c370
 8001658:	0802c394 	.word	0x0802c394
 800165c:	0802c3b8 	.word	0x0802c3b8
 8001660:	0802c3c0 	.word	0x0802c3c0
 8001664:	0802c3f8 	.word	0x0802c3f8
 8001668:	0802c3c8 	.word	0x0802c3c8

0800166c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800166c:	b580      	push	{r7, lr}
 800166e:	af00      	add	r7, sp, #0
  LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 8001670:	2002      	movs	r0, #2
 8001672:	f7ff fec7 	bl	8001404 <LL_FLASH_SetLatency>
  while(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_2)
 8001676:	bf00      	nop
 8001678:	f7ff fed8 	bl	800142c <LL_FLASH_GetLatency>
 800167c:	4603      	mov	r3, r0
 800167e:	2b02      	cmp	r3, #2
 8001680:	d1fa      	bne.n	8001678 <SystemClock_Config+0xc>
  {
  }

  LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 8001682:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001686:	f7ff fdc1 	bl	800120c <LL_PWR_SetRegulVoltageScaling>
  LL_RCC_HSE_EnableTcxo();
 800168a:	f7ff fdd3 	bl	8001234 <LL_RCC_HSE_EnableTcxo>
  LL_RCC_HSE_Enable();
 800168e:	f7ff fddf 	bl	8001250 <LL_RCC_HSE_Enable>

   /* Wait till HSE is ready */
  while(LL_RCC_HSE_IsReady() != 1)
 8001692:	bf00      	nop
 8001694:	f7ff fdea 	bl	800126c <LL_RCC_HSE_IsReady>
 8001698:	4603      	mov	r3, r0
 800169a:	2b01      	cmp	r3, #1
 800169c:	d1fa      	bne.n	8001694 <SystemClock_Config+0x28>
  {
  }

  LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE, LL_RCC_PLLM_DIV_2, 12, LL_RCC_PLLR_DIV_4);
 800169e:	f04f 43c0 	mov.w	r3, #1610612736	; 0x60000000
 80016a2:	220c      	movs	r2, #12
 80016a4:	2110      	movs	r1, #16
 80016a6:	2003      	movs	r0, #3
 80016a8:	f7ff fe7e 	bl	80013a8 <LL_RCC_PLL_ConfigDomain_SYS>
  LL_RCC_PLL_EnableDomain_SYS();
 80016ac:	f7ff fe9c 	bl	80013e8 <LL_RCC_PLL_EnableDomain_SYS>
  LL_RCC_PLL_Enable();
 80016b0:	f7ff fe5a 	bl	8001368 <LL_RCC_PLL_Enable>

   /* Wait till PLL is ready */
  while(LL_RCC_PLL_IsReady() != 1)
 80016b4:	bf00      	nop
 80016b6:	f7ff fe65 	bl	8001384 <LL_RCC_PLL_IsReady>
 80016ba:	4603      	mov	r3, r0
 80016bc:	2b01      	cmp	r3, #1
 80016be:	d1fa      	bne.n	80016b6 <SystemClock_Config+0x4a>
  {
  }

  LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 80016c0:	2003      	movs	r0, #3
 80016c2:	f7ff fde4 	bl	800128e <LL_RCC_SetSysClkSource>

   /* Wait till System clock is ready */
  while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 80016c6:	bf00      	nop
 80016c8:	f7ff fdf4 	bl	80012b4 <LL_RCC_GetSysClkSource>
 80016cc:	4603      	mov	r3, r0
 80016ce:	2b0c      	cmp	r3, #12
 80016d0:	d1fa      	bne.n	80016c8 <SystemClock_Config+0x5c>
  {
  }

  LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 80016d2:	2000      	movs	r0, #0
 80016d4:	f7ff fdf9 	bl	80012ca <LL_RCC_SetAHBPrescaler>
  LL_RCC_SetAHB3Prescaler(LL_RCC_SYSCLK_DIV_1);
 80016d8:	2000      	movs	r0, #0
 80016da:	f7ff fe09 	bl	80012f0 <LL_RCC_SetAHB3Prescaler>
  LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 80016de:	2000      	movs	r0, #0
 80016e0:	f7ff fe1c 	bl	800131c <LL_RCC_SetAPB1Prescaler>
  LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 80016e4:	2000      	movs	r0, #0
 80016e6:	f7ff fe2c 	bl	8001342 <LL_RCC_SetAPB2Prescaler>
  /* Update CMSIS variable (which can be updated also through SystemCoreClockUpdate function) */
  LL_SetSystemCoreClock(48000000);
 80016ea:	4806      	ldr	r0, [pc, #24]	; (8001704 <SystemClock_Config+0x98>)
 80016ec:	f004 f904 	bl	80058f8 <LL_SetSystemCoreClock>

   /* Update the time base */
  if (HAL_InitTick (TICK_INT_PRIORITY) != HAL_OK)
 80016f0:	200f      	movs	r0, #15
 80016f2:	f000 fcc3 	bl	800207c <HAL_InitTick>
 80016f6:	4603      	mov	r3, r0
 80016f8:	2b00      	cmp	r3, #0
 80016fa:	d001      	beq.n	8001700 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80016fc:	f000 f823 	bl	8001746 <Error_Handler>
  }
}
 8001700:	bf00      	nop
 8001702:	bd80      	pop	{r7, pc}
 8001704:	02dc6c00 	.word	0x02dc6c00

08001708 <EXPECT_OnAbortHandler>:
/* USER CODE BEGIN 4 */

/**
 * This hander is called by the embeNET stack when a critical error aborts operation.
 */
__attribute__((noreturn)) void EXPECT_OnAbortHandler(char const *why, char const *file, int line) {
 8001708:	b580      	push	{r7, lr}
 800170a:	b084      	sub	sp, #16
 800170c:	af00      	add	r7, sp, #0
 800170e:	60f8      	str	r0, [r7, #12]
 8001710:	60b9      	str	r1, [r7, #8]
 8001712:	607a      	str	r2, [r7, #4]
    printf("Program aborted: %s %s:%i\n", why, file, line);
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	68ba      	ldr	r2, [r7, #8]
 8001718:	68f9      	ldr	r1, [r7, #12]
 800171a:	4802      	ldr	r0, [pc, #8]	; (8001724 <EXPECT_OnAbortHandler+0x1c>)
 800171c:	f029 fb5c 	bl	802add8 <iprintf>
    while(1) {
 8001720:	e7fe      	b.n	8001720 <EXPECT_OnAbortHandler+0x18>
 8001722:	bf00      	nop
 8001724:	0802c418 	.word	0x0802c418

08001728 <_write>:
        ;
    }
    __builtin_unreachable();
}

_ssize_t _write(int file, const void *ptr, size_t len) {
 8001728:	b580      	push	{r7, lr}
 800172a:	b084      	sub	sp, #16
 800172c:	af00      	add	r7, sp, #0
 800172e:	60f8      	str	r0, [r7, #12]
 8001730:	60b9      	str	r1, [r7, #8]
 8001732:	607a      	str	r2, [r7, #4]
    (void) file; /* Not used, avoid warning */
    LOGGER_UART_Write(ptr, len);
 8001734:	6879      	ldr	r1, [r7, #4]
 8001736:	68b8      	ldr	r0, [r7, #8]
 8001738:	f000 fbbe 	bl	8001eb8 <LOGGER_UART_Write>
    return len;
 800173c:	687b      	ldr	r3, [r7, #4]
}
 800173e:	4618      	mov	r0, r3
 8001740:	3710      	adds	r7, #16
 8001742:	46bd      	mov	sp, r7
 8001744:	bd80      	pop	{r7, pc}

08001746 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001746:	b580      	push	{r7, lr}
 8001748:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 800174a:	b672      	cpsid	i
}
 800174c:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
    /* User can add his own implementation to report the HAL error return state */
    __disable_irq();
    while (1) {
        NVIC_SystemReset();
 800174e:	f7ff fd47 	bl	80011e0 <__NVIC_SystemReset>

08001752 <RingBuffer_Init>:
This module implements a basic, general-purpose ring buffer.
*/

#include "ring_buffer.h"

bool RingBuffer_Init(RingBuffer* ringBuffer, uint8_t* dataBuffer, size_t dataBufferSize) {
 8001752:	b480      	push	{r7}
 8001754:	b085      	sub	sp, #20
 8001756:	af00      	add	r7, sp, #0
 8001758:	60f8      	str	r0, [r7, #12]
 800175a:	60b9      	str	r1, [r7, #8]
 800175c:	607a      	str	r2, [r7, #4]
    if ((ringBuffer) && (dataBuffer) && (dataBufferSize > 0)) {
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	2b00      	cmp	r3, #0
 8001762:	d016      	beq.n	8001792 <RingBuffer_Init+0x40>
 8001764:	68bb      	ldr	r3, [r7, #8]
 8001766:	2b00      	cmp	r3, #0
 8001768:	d013      	beq.n	8001792 <RingBuffer_Init+0x40>
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	2b00      	cmp	r3, #0
 800176e:	d010      	beq.n	8001792 <RingBuffer_Init+0x40>
        ringBuffer->dataBuffer     = dataBuffer;
 8001770:	68fb      	ldr	r3, [r7, #12]
 8001772:	68ba      	ldr	r2, [r7, #8]
 8001774:	601a      	str	r2, [r3, #0]
        ringBuffer->dataBufferSize = dataBufferSize;
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	687a      	ldr	r2, [r7, #4]
 800177a:	605a      	str	r2, [r3, #4]
        ringBuffer->count          = 0;
 800177c:	68fb      	ldr	r3, [r7, #12]
 800177e:	2200      	movs	r2, #0
 8001780:	609a      	str	r2, [r3, #8]
        ringBuffer->head           = dataBuffer;
 8001782:	68fb      	ldr	r3, [r7, #12]
 8001784:	68ba      	ldr	r2, [r7, #8]
 8001786:	60da      	str	r2, [r3, #12]
        ringBuffer->tail           = dataBuffer;
 8001788:	68fb      	ldr	r3, [r7, #12]
 800178a:	68ba      	ldr	r2, [r7, #8]
 800178c:	611a      	str	r2, [r3, #16]
        return true;
 800178e:	2301      	movs	r3, #1
 8001790:	e000      	b.n	8001794 <RingBuffer_Init+0x42>
    }

    return false;
 8001792:	2300      	movs	r3, #0
}
 8001794:	4618      	mov	r0, r3
 8001796:	3714      	adds	r7, #20
 8001798:	46bd      	mov	sp, r7
 800179a:	bc80      	pop	{r7}
 800179c:	4770      	bx	lr

0800179e <RingBuffer_GetLen>:
    }

    return true;
}

size_t RingBuffer_GetLen(const RingBuffer* ringBuffer) {
 800179e:	b480      	push	{r7}
 80017a0:	b083      	sub	sp, #12
 80017a2:	af00      	add	r7, sp, #0
 80017a4:	6078      	str	r0, [r7, #4]
    if (ringBuffer) {
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	2b00      	cmp	r3, #0
 80017aa:	d002      	beq.n	80017b2 <RingBuffer_GetLen+0x14>
        return ringBuffer->count;
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	689b      	ldr	r3, [r3, #8]
 80017b0:	e000      	b.n	80017b4 <RingBuffer_GetLen+0x16>
    }
    return 0;
 80017b2:	2300      	movs	r3, #0
}
 80017b4:	4618      	mov	r0, r3
 80017b6:	370c      	adds	r7, #12
 80017b8:	46bd      	mov	sp, r7
 80017ba:	bc80      	pop	{r7}
 80017bc:	4770      	bx	lr

080017be <RingBuffer_PutChar>:
        return ringBuffer->dataBufferSize - ringBuffer->count;
    }
    return 0;
}

bool RingBuffer_PutChar(RingBuffer* ringBuffer, uint8_t c) {
 80017be:	b480      	push	{r7}
 80017c0:	b083      	sub	sp, #12
 80017c2:	af00      	add	r7, sp, #0
 80017c4:	6078      	str	r0, [r7, #4]
 80017c6:	460b      	mov	r3, r1
 80017c8:	70fb      	strb	r3, [r7, #3]
    if ((ringBuffer) && (ringBuffer->count < ringBuffer->dataBufferSize)) {
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d022      	beq.n	8001816 <RingBuffer_PutChar+0x58>
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	689a      	ldr	r2, [r3, #8]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	685b      	ldr	r3, [r3, #4]
 80017d8:	429a      	cmp	r2, r3
 80017da:	d21c      	bcs.n	8001816 <RingBuffer_PutChar+0x58>
        *ringBuffer->head = c;
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	68db      	ldr	r3, [r3, #12]
 80017e0:	78fa      	ldrb	r2, [r7, #3]
 80017e2:	701a      	strb	r2, [r3, #0]
        ringBuffer->count++;
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	689b      	ldr	r3, [r3, #8]
 80017e8:	1c5a      	adds	r2, r3, #1
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	609a      	str	r2, [r3, #8]
        ringBuffer->head++;
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	68db      	ldr	r3, [r3, #12]
 80017f2:	1c5a      	adds	r2, r3, #1
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	60da      	str	r2, [r3, #12]
        if (ringBuffer->head >= ringBuffer->dataBuffer + ringBuffer->dataBufferSize) {
 80017f8:	687b      	ldr	r3, [r7, #4]
 80017fa:	68da      	ldr	r2, [r3, #12]
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	6819      	ldr	r1, [r3, #0]
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	685b      	ldr	r3, [r3, #4]
 8001804:	440b      	add	r3, r1
 8001806:	429a      	cmp	r2, r3
 8001808:	d303      	bcc.n	8001812 <RingBuffer_PutChar+0x54>
            ringBuffer->head = ringBuffer->dataBuffer;
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	681a      	ldr	r2, [r3, #0]
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	60da      	str	r2, [r3, #12]
        }
        return true;
 8001812:	2301      	movs	r3, #1
 8001814:	e000      	b.n	8001818 <RingBuffer_PutChar+0x5a>
    }
    return false;
 8001816:	2300      	movs	r3, #0
}
 8001818:	4618      	mov	r0, r3
 800181a:	370c      	adds	r7, #12
 800181c:	46bd      	mov	sp, r7
 800181e:	bc80      	pop	{r7}
 8001820:	4770      	bx	lr

08001822 <RingBuffer_GetChar>:

bool RingBuffer_GetChar(RingBuffer* ringBuffer, uint8_t* c) {
 8001822:	b480      	push	{r7}
 8001824:	b083      	sub	sp, #12
 8001826:	af00      	add	r7, sp, #0
 8001828:	6078      	str	r0, [r7, #4]
 800182a:	6039      	str	r1, [r7, #0]
    if ((ringBuffer) && (c) && (ringBuffer->count)) {
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	2b00      	cmp	r3, #0
 8001830:	d024      	beq.n	800187c <RingBuffer_GetChar+0x5a>
 8001832:	683b      	ldr	r3, [r7, #0]
 8001834:	2b00      	cmp	r3, #0
 8001836:	d021      	beq.n	800187c <RingBuffer_GetChar+0x5a>
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	689b      	ldr	r3, [r3, #8]
 800183c:	2b00      	cmp	r3, #0
 800183e:	d01d      	beq.n	800187c <RingBuffer_GetChar+0x5a>
        *c = *ringBuffer->tail;
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	691b      	ldr	r3, [r3, #16]
 8001844:	781a      	ldrb	r2, [r3, #0]
 8001846:	683b      	ldr	r3, [r7, #0]
 8001848:	701a      	strb	r2, [r3, #0]
        ringBuffer->count--;
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	689b      	ldr	r3, [r3, #8]
 800184e:	1e5a      	subs	r2, r3, #1
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	609a      	str	r2, [r3, #8]
        ringBuffer->tail++;
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	691b      	ldr	r3, [r3, #16]
 8001858:	1c5a      	adds	r2, r3, #1
 800185a:	687b      	ldr	r3, [r7, #4]
 800185c:	611a      	str	r2, [r3, #16]
        if (ringBuffer->tail >= ringBuffer->dataBuffer + ringBuffer->dataBufferSize) {
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	691a      	ldr	r2, [r3, #16]
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	6819      	ldr	r1, [r3, #0]
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	440b      	add	r3, r1
 800186c:	429a      	cmp	r2, r3
 800186e:	d303      	bcc.n	8001878 <RingBuffer_GetChar+0x56>
            ringBuffer->tail = ringBuffer->dataBuffer;
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	681a      	ldr	r2, [r3, #0]
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	611a      	str	r2, [r3, #16]
        }
        return true;
 8001878:	2301      	movs	r3, #1
 800187a:	e000      	b.n	800187e <RingBuffer_GetChar+0x5c>
    }
    return false;
 800187c:	2300      	movs	r3, #0
}
 800187e:	4618      	mov	r0, r3
 8001880:	370c      	adds	r7, #12
 8001882:	46bd      	mov	sp, r7
 8001884:	bc80      	pop	{r7}
 8001886:	4770      	bx	lr

08001888 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001888:	b480      	push	{r7}
 800188a:	af00      	add	r7, sp, #0
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800188c:	bf00      	nop
 800188e:	46bd      	mov	sp, r7
 8001890:	bc80      	pop	{r7}
 8001892:	4770      	bx	lr

08001894 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001894:	b580      	push	{r7, lr}
 8001896:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
	EXPECT_OnAbortHandler(__func__, __FILE__, __LINE__);
 8001898:	224b      	movs	r2, #75	; 0x4b
 800189a:	4902      	ldr	r1, [pc, #8]	; (80018a4 <NMI_Handler+0x10>)
 800189c:	4802      	ldr	r0, [pc, #8]	; (80018a8 <NMI_Handler+0x14>)
 800189e:	f7ff ff33 	bl	8001708 <EXPECT_OnAbortHandler>
 80018a2:	bf00      	nop
 80018a4:	0802c434 	.word	0x0802c434
 80018a8:	0803158c 	.word	0x0803158c

080018ac <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80018ac:	b580      	push	{r7, lr}
 80018ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */
	EXPECT_OnAbortHandler(__func__, __FILE__, __LINE__);
 80018b0:	2255      	movs	r2, #85	; 0x55
 80018b2:	4902      	ldr	r1, [pc, #8]	; (80018bc <HardFault_Handler+0x10>)
 80018b4:	4802      	ldr	r0, [pc, #8]	; (80018c0 <HardFault_Handler+0x14>)
 80018b6:	f7ff ff27 	bl	8001708 <EXPECT_OnAbortHandler>
 80018ba:	bf00      	nop
 80018bc:	0802c434 	.word	0x0802c434
 80018c0:	08031598 	.word	0x08031598

080018c4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80018c4:	b580      	push	{r7, lr}
 80018c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
	EXPECT_OnAbortHandler(__func__, __FILE__, __LINE__);
 80018c8:	2264      	movs	r2, #100	; 0x64
 80018ca:	4902      	ldr	r1, [pc, #8]	; (80018d4 <MemManage_Handler+0x10>)
 80018cc:	4802      	ldr	r0, [pc, #8]	; (80018d8 <MemManage_Handler+0x14>)
 80018ce:	f7ff ff1b 	bl	8001708 <EXPECT_OnAbortHandler>
 80018d2:	bf00      	nop
 80018d4:	0802c434 	.word	0x0802c434
 80018d8:	080315ac 	.word	0x080315ac

080018dc <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */
	EXPECT_OnAbortHandler(__func__, __FILE__, __LINE__);
 80018e0:	2273      	movs	r2, #115	; 0x73
 80018e2:	4902      	ldr	r1, [pc, #8]	; (80018ec <BusFault_Handler+0x10>)
 80018e4:	4802      	ldr	r0, [pc, #8]	; (80018f0 <BusFault_Handler+0x14>)
 80018e6:	f7ff ff0f 	bl	8001708 <EXPECT_OnAbortHandler>
 80018ea:	bf00      	nop
 80018ec:	0802c434 	.word	0x0802c434
 80018f0:	080315c0 	.word	0x080315c0

080018f4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */
	EXPECT_OnAbortHandler(__func__, __FILE__, __LINE__);
 80018f8:	2282      	movs	r2, #130	; 0x82
 80018fa:	4902      	ldr	r1, [pc, #8]	; (8001904 <UsageFault_Handler+0x10>)
 80018fc:	4802      	ldr	r0, [pc, #8]	; (8001908 <UsageFault_Handler+0x14>)
 80018fe:	f7ff ff03 	bl	8001708 <EXPECT_OnAbortHandler>
 8001902:	bf00      	nop
 8001904:	0802c434 	.word	0x0802c434
 8001908:	080315d4 	.word	0x080315d4

0800190c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800190c:	b480      	push	{r7}
 800190e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001910:	bf00      	nop
 8001912:	46bd      	mov	sp, r7
 8001914:	bc80      	pop	{r7}
 8001916:	4770      	bx	lr

08001918 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001918:	b480      	push	{r7}
 800191a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800191c:	bf00      	nop
 800191e:	46bd      	mov	sp, r7
 8001920:	bc80      	pop	{r7}
 8001922:	4770      	bx	lr

08001924 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001924:	b480      	push	{r7}
 8001926:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001928:	bf00      	nop
 800192a:	46bd      	mov	sp, r7
 800192c:	bc80      	pop	{r7}
 800192e:	4770      	bx	lr

08001930 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001930:	b480      	push	{r7}
 8001932:	af00      	add	r7, sp, #0

  /* USER CODE END SysTick_IRQn 0 */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001934:	bf00      	nop
 8001936:	46bd      	mov	sp, r7
 8001938:	bc80      	pop	{r7}
 800193a:	4770      	bx	lr

0800193c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800193c:	b480      	push	{r7}
 800193e:	af00      	add	r7, sp, #0

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << (10UL*2UL))|(3UL << (11UL*2UL)));  /* set CP10 and CP11 Full Access */
#endif
}
 8001940:	bf00      	nop
 8001942:	46bd      	mov	sp, r7
 8001944:	bc80      	pop	{r7}
 8001946:	4770      	bx	lr

08001948 <__NVIC_GetPriorityGrouping>:
{
 8001948:	b480      	push	{r7}
 800194a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800194c:	4b04      	ldr	r3, [pc, #16]	; (8001960 <__NVIC_GetPriorityGrouping+0x18>)
 800194e:	68db      	ldr	r3, [r3, #12]
 8001950:	0a1b      	lsrs	r3, r3, #8
 8001952:	f003 0307 	and.w	r3, r3, #7
}
 8001956:	4618      	mov	r0, r3
 8001958:	46bd      	mov	sp, r7
 800195a:	bc80      	pop	{r7}
 800195c:	4770      	bx	lr
 800195e:	bf00      	nop
 8001960:	e000ed00 	.word	0xe000ed00

08001964 <__NVIC_EnableIRQ>:
{
 8001964:	b480      	push	{r7}
 8001966:	b083      	sub	sp, #12
 8001968:	af00      	add	r7, sp, #0
 800196a:	4603      	mov	r3, r0
 800196c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800196e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001972:	2b00      	cmp	r3, #0
 8001974:	db0b      	blt.n	800198e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001976:	79fb      	ldrb	r3, [r7, #7]
 8001978:	f003 021f 	and.w	r2, r3, #31
 800197c:	4906      	ldr	r1, [pc, #24]	; (8001998 <__NVIC_EnableIRQ+0x34>)
 800197e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001982:	095b      	lsrs	r3, r3, #5
 8001984:	2001      	movs	r0, #1
 8001986:	fa00 f202 	lsl.w	r2, r0, r2
 800198a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800198e:	bf00      	nop
 8001990:	370c      	adds	r7, #12
 8001992:	46bd      	mov	sp, r7
 8001994:	bc80      	pop	{r7}
 8001996:	4770      	bx	lr
 8001998:	e000e100 	.word	0xe000e100

0800199c <__NVIC_SetPriority>:
{
 800199c:	b480      	push	{r7}
 800199e:	b083      	sub	sp, #12
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	4603      	mov	r3, r0
 80019a4:	6039      	str	r1, [r7, #0]
 80019a6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80019a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019ac:	2b00      	cmp	r3, #0
 80019ae:	db0a      	blt.n	80019c6 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	b2da      	uxtb	r2, r3
 80019b4:	490c      	ldr	r1, [pc, #48]	; (80019e8 <__NVIC_SetPriority+0x4c>)
 80019b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80019ba:	0112      	lsls	r2, r2, #4
 80019bc:	b2d2      	uxtb	r2, r2
 80019be:	440b      	add	r3, r1
 80019c0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80019c4:	e00a      	b.n	80019dc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019c6:	683b      	ldr	r3, [r7, #0]
 80019c8:	b2da      	uxtb	r2, r3
 80019ca:	4908      	ldr	r1, [pc, #32]	; (80019ec <__NVIC_SetPriority+0x50>)
 80019cc:	79fb      	ldrb	r3, [r7, #7]
 80019ce:	f003 030f 	and.w	r3, r3, #15
 80019d2:	3b04      	subs	r3, #4
 80019d4:	0112      	lsls	r2, r2, #4
 80019d6:	b2d2      	uxtb	r2, r2
 80019d8:	440b      	add	r3, r1
 80019da:	761a      	strb	r2, [r3, #24]
}
 80019dc:	bf00      	nop
 80019de:	370c      	adds	r7, #12
 80019e0:	46bd      	mov	sp, r7
 80019e2:	bc80      	pop	{r7}
 80019e4:	4770      	bx	lr
 80019e6:	bf00      	nop
 80019e8:	e000e100 	.word	0xe000e100
 80019ec:	e000ed00 	.word	0xe000ed00

080019f0 <NVIC_EncodePriority>:
{
 80019f0:	b480      	push	{r7}
 80019f2:	b089      	sub	sp, #36	; 0x24
 80019f4:	af00      	add	r7, sp, #0
 80019f6:	60f8      	str	r0, [r7, #12]
 80019f8:	60b9      	str	r1, [r7, #8]
 80019fa:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80019fc:	68fb      	ldr	r3, [r7, #12]
 80019fe:	f003 0307 	and.w	r3, r3, #7
 8001a02:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001a04:	69fb      	ldr	r3, [r7, #28]
 8001a06:	f1c3 0307 	rsb	r3, r3, #7
 8001a0a:	2b04      	cmp	r3, #4
 8001a0c:	bf28      	it	cs
 8001a0e:	2304      	movcs	r3, #4
 8001a10:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001a12:	69fb      	ldr	r3, [r7, #28]
 8001a14:	3304      	adds	r3, #4
 8001a16:	2b06      	cmp	r3, #6
 8001a18:	d902      	bls.n	8001a20 <NVIC_EncodePriority+0x30>
 8001a1a:	69fb      	ldr	r3, [r7, #28]
 8001a1c:	3b03      	subs	r3, #3
 8001a1e:	e000      	b.n	8001a22 <NVIC_EncodePriority+0x32>
 8001a20:	2300      	movs	r3, #0
 8001a22:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a24:	f04f 32ff 	mov.w	r2, #4294967295
 8001a28:	69bb      	ldr	r3, [r7, #24]
 8001a2a:	fa02 f303 	lsl.w	r3, r2, r3
 8001a2e:	43da      	mvns	r2, r3
 8001a30:	68bb      	ldr	r3, [r7, #8]
 8001a32:	401a      	ands	r2, r3
 8001a34:	697b      	ldr	r3, [r7, #20]
 8001a36:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001a38:	f04f 31ff 	mov.w	r1, #4294967295
 8001a3c:	697b      	ldr	r3, [r7, #20]
 8001a3e:	fa01 f303 	lsl.w	r3, r1, r3
 8001a42:	43d9      	mvns	r1, r3
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001a48:	4313      	orrs	r3, r2
}
 8001a4a:	4618      	mov	r0, r3
 8001a4c:	3724      	adds	r7, #36	; 0x24
 8001a4e:	46bd      	mov	sp, r7
 8001a50:	bc80      	pop	{r7}
 8001a52:	4770      	bx	lr

08001a54 <LL_RCC_SetLPUARTClockSource>:
{
 8001a54:	b480      	push	{r7}
 8001a56:	b083      	sub	sp, #12
 8001a58:	af00      	add	r7, sp, #0
 8001a5a:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CCIPR, RCC_CCIPR_LPUART1SEL, LPUARTxSource);
 8001a5c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001a60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001a64:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8001a68:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	4313      	orrs	r3, r2
 8001a70:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
}
 8001a74:	bf00      	nop
 8001a76:	370c      	adds	r7, #12
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bc80      	pop	{r7}
 8001a7c:	4770      	bx	lr

08001a7e <LL_AHB2_GRP1_EnableClock>:
{
 8001a7e:	b480      	push	{r7}
 8001a80:	b085      	sub	sp, #20
 8001a82:	af00      	add	r7, sp, #0
 8001a84:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 8001a86:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001a8a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8001a8c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	4313      	orrs	r3, r2
 8001a94:	64cb      	str	r3, [r1, #76]	; 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8001a96:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001a9a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	4013      	ands	r3, r2
 8001aa0:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001aa2:	68fb      	ldr	r3, [r7, #12]
}
 8001aa4:	bf00      	nop
 8001aa6:	3714      	adds	r7, #20
 8001aa8:	46bd      	mov	sp, r7
 8001aaa:	bc80      	pop	{r7}
 8001aac:	4770      	bx	lr

08001aae <LL_APB1_GRP2_EnableClock>:
  *         @arg @ref LL_APB1_GRP2_PERIPH_LPTIM3

  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP2_EnableClock(uint32_t Periphs)
{
 8001aae:	b480      	push	{r7}
 8001ab0:	b085      	sub	sp, #20
 8001ab2:	af00      	add	r7, sp, #0
 8001ab4:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB1ENR2, Periphs);
 8001ab6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001aba:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001abc:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	4313      	orrs	r3, r2
 8001ac4:	65cb      	str	r3, [r1, #92]	; 0x5c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB1ENR2, Periphs);
 8001ac6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8001aca:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	4013      	ands	r3, r2
 8001ad0:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8001ad2:	68fb      	ldr	r3, [r7, #12]
}
 8001ad4:	bf00      	nop
 8001ad6:	3714      	adds	r7, #20
 8001ad8:	46bd      	mov	sp, r7
 8001ada:	bc80      	pop	{r7}
 8001adc:	4770      	bx	lr

08001ade <LL_LPUART_Enable>:
  * @rmtoll CR1          UE            LL_LPUART_Enable
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_Enable(USART_TypeDef *LPUARTx)
{
 8001ade:	b480      	push	{r7}
 8001ae0:	b083      	sub	sp, #12
 8001ae2:	af00      	add	r7, sp, #0
 8001ae4:	6078      	str	r0, [r7, #4]
  SET_BIT(LPUARTx->CR1, USART_CR1_UE);
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	f043 0201 	orr.w	r2, r3, #1
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	601a      	str	r2, [r3, #0]
}
 8001af2:	bf00      	nop
 8001af4:	370c      	adds	r7, #12
 8001af6:	46bd      	mov	sp, r7
 8001af8:	bc80      	pop	{r7}
 8001afa:	4770      	bx	lr

08001afc <LL_LPUART_SetTXFIFOThreshold>:
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_SetTXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
{
 8001afc:	b480      	push	{r7}
 8001afe:	b089      	sub	sp, #36	; 0x24
 8001b00:	af00      	add	r7, sp, #0
 8001b02:	6078      	str	r0, [r7, #4]
 8001b04:	6039      	str	r1, [r7, #0]
  ATOMIC_MODIFY_REG(LPUARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	3308      	adds	r3, #8
 8001b0a:	60fb      	str	r3, [r7, #12]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001b0c:	68fb      	ldr	r3, [r7, #12]
 8001b0e:	e853 3f00 	ldrex	r3, [r3]
 8001b12:	60bb      	str	r3, [r7, #8]
   return(result);
 8001b14:	68bb      	ldr	r3, [r7, #8]
 8001b16:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8001b1a:	683b      	ldr	r3, [r7, #0]
 8001b1c:	075b      	lsls	r3, r3, #29
 8001b1e:	4313      	orrs	r3, r2
 8001b20:	61fb      	str	r3, [r7, #28]
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	3308      	adds	r3, #8
 8001b26:	69fa      	ldr	r2, [r7, #28]
 8001b28:	61ba      	str	r2, [r7, #24]
 8001b2a:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001b2c:	6979      	ldr	r1, [r7, #20]
 8001b2e:	69ba      	ldr	r2, [r7, #24]
 8001b30:	e841 2300 	strex	r3, r2, [r1]
 8001b34:	613b      	str	r3, [r7, #16]
   return(result);
 8001b36:	693b      	ldr	r3, [r7, #16]
 8001b38:	2b00      	cmp	r3, #0
 8001b3a:	d1e4      	bne.n	8001b06 <LL_LPUART_SetTXFIFOThreshold+0xa>
}
 8001b3c:	bf00      	nop
 8001b3e:	bf00      	nop
 8001b40:	3724      	adds	r7, #36	; 0x24
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bc80      	pop	{r7}
 8001b46:	4770      	bx	lr

08001b48 <LL_LPUART_SetRXFIFOThreshold>:
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
  *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_SetRXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
{
 8001b48:	b480      	push	{r7}
 8001b4a:	b089      	sub	sp, #36	; 0x24
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	6078      	str	r0, [r7, #4]
 8001b50:	6039      	str	r1, [r7, #0]
  ATOMIC_MODIFY_REG(LPUARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	3308      	adds	r3, #8
 8001b56:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001b58:	68fb      	ldr	r3, [r7, #12]
 8001b5a:	e853 3f00 	ldrex	r3, [r3]
 8001b5e:	60bb      	str	r3, [r7, #8]
   return(result);
 8001b60:	68bb      	ldr	r3, [r7, #8]
 8001b62:	f023 6260 	bic.w	r2, r3, #234881024	; 0xe000000
 8001b66:	683b      	ldr	r3, [r7, #0]
 8001b68:	065b      	lsls	r3, r3, #25
 8001b6a:	4313      	orrs	r3, r2
 8001b6c:	61fb      	str	r3, [r7, #28]
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	3308      	adds	r3, #8
 8001b72:	69fa      	ldr	r2, [r7, #28]
 8001b74:	61ba      	str	r2, [r7, #24]
 8001b76:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001b78:	6979      	ldr	r1, [r7, #20]
 8001b7a:	69ba      	ldr	r2, [r7, #24]
 8001b7c:	e841 2300 	strex	r3, r2, [r1]
 8001b80:	613b      	str	r3, [r7, #16]
   return(result);
 8001b82:	693b      	ldr	r3, [r7, #16]
 8001b84:	2b00      	cmp	r3, #0
 8001b86:	d1e4      	bne.n	8001b52 <LL_LPUART_SetRXFIFOThreshold+0xa>
}
 8001b88:	bf00      	nop
 8001b8a:	bf00      	nop
 8001b8c:	3724      	adds	r7, #36	; 0x24
 8001b8e:	46bd      	mov	sp, r7
 8001b90:	bc80      	pop	{r7}
 8001b92:	4770      	bx	lr

08001b94 <LL_LPUART_EnableOverrunDetect>:
  * @rmtoll CR3          OVRDIS        LL_LPUART_EnableOverrunDetect
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_EnableOverrunDetect(USART_TypeDef *LPUARTx)
{
 8001b94:	b480      	push	{r7}
 8001b96:	b083      	sub	sp, #12
 8001b98:	af00      	add	r7, sp, #0
 8001b9a:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(LPUARTx->CR3, USART_CR3_OVRDIS);
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	689b      	ldr	r3, [r3, #8]
 8001ba0:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	609a      	str	r2, [r3, #8]
}
 8001ba8:	bf00      	nop
 8001baa:	370c      	adds	r7, #12
 8001bac:	46bd      	mov	sp, r7
 8001bae:	bc80      	pop	{r7}
 8001bb0:	4770      	bx	lr

08001bb2 <LL_LPUART_IsActiveFlag_PE>:
  * @rmtoll ISR          PE            LL_LPUART_IsActiveFlag_PE
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_PE(const USART_TypeDef *LPUARTx)
{
 8001bb2:	b480      	push	{r7}
 8001bb4:	b083      	sub	sp, #12
 8001bb6:	af00      	add	r7, sp, #0
 8001bb8:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	69db      	ldr	r3, [r3, #28]
 8001bbe:	f003 0301 	and.w	r3, r3, #1
 8001bc2:	2b01      	cmp	r3, #1
 8001bc4:	d101      	bne.n	8001bca <LL_LPUART_IsActiveFlag_PE+0x18>
 8001bc6:	2301      	movs	r3, #1
 8001bc8:	e000      	b.n	8001bcc <LL_LPUART_IsActiveFlag_PE+0x1a>
 8001bca:	2300      	movs	r3, #0
}
 8001bcc:	4618      	mov	r0, r3
 8001bce:	370c      	adds	r7, #12
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bc80      	pop	{r7}
 8001bd4:	4770      	bx	lr

08001bd6 <LL_LPUART_IsActiveFlag_FE>:
  * @rmtoll ISR          FE            LL_LPUART_IsActiveFlag_FE
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_FE(const USART_TypeDef *LPUARTx)
{
 8001bd6:	b480      	push	{r7}
 8001bd8:	b083      	sub	sp, #12
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	69db      	ldr	r3, [r3, #28]
 8001be2:	f003 0302 	and.w	r3, r3, #2
 8001be6:	2b02      	cmp	r3, #2
 8001be8:	d101      	bne.n	8001bee <LL_LPUART_IsActiveFlag_FE+0x18>
 8001bea:	2301      	movs	r3, #1
 8001bec:	e000      	b.n	8001bf0 <LL_LPUART_IsActiveFlag_FE+0x1a>
 8001bee:	2300      	movs	r3, #0
}
 8001bf0:	4618      	mov	r0, r3
 8001bf2:	370c      	adds	r7, #12
 8001bf4:	46bd      	mov	sp, r7
 8001bf6:	bc80      	pop	{r7}
 8001bf8:	4770      	bx	lr

08001bfa <LL_LPUART_IsActiveFlag_NE>:
  * @rmtoll ISR          NE            LL_LPUART_IsActiveFlag_NE
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_NE(const USART_TypeDef *LPUARTx)
{
 8001bfa:	b480      	push	{r7}
 8001bfc:	b083      	sub	sp, #12
 8001bfe:	af00      	add	r7, sp, #0
 8001c00:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	69db      	ldr	r3, [r3, #28]
 8001c06:	f003 0304 	and.w	r3, r3, #4
 8001c0a:	2b04      	cmp	r3, #4
 8001c0c:	d101      	bne.n	8001c12 <LL_LPUART_IsActiveFlag_NE+0x18>
 8001c0e:	2301      	movs	r3, #1
 8001c10:	e000      	b.n	8001c14 <LL_LPUART_IsActiveFlag_NE+0x1a>
 8001c12:	2300      	movs	r3, #0
}
 8001c14:	4618      	mov	r0, r3
 8001c16:	370c      	adds	r7, #12
 8001c18:	46bd      	mov	sp, r7
 8001c1a:	bc80      	pop	{r7}
 8001c1c:	4770      	bx	lr

08001c1e <LL_LPUART_IsActiveFlag_ORE>:
  * @rmtoll ISR          ORE           LL_LPUART_IsActiveFlag_ORE
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_ORE(const USART_TypeDef *LPUARTx)
{
 8001c1e:	b480      	push	{r7}
 8001c20:	b083      	sub	sp, #12
 8001c22:	af00      	add	r7, sp, #0
 8001c24:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	69db      	ldr	r3, [r3, #28]
 8001c2a:	f003 0308 	and.w	r3, r3, #8
 8001c2e:	2b08      	cmp	r3, #8
 8001c30:	d101      	bne.n	8001c36 <LL_LPUART_IsActiveFlag_ORE+0x18>
 8001c32:	2301      	movs	r3, #1
 8001c34:	e000      	b.n	8001c38 <LL_LPUART_IsActiveFlag_ORE+0x1a>
 8001c36:	2300      	movs	r3, #0
}
 8001c38:	4618      	mov	r0, r3
 8001c3a:	370c      	adds	r7, #12
 8001c3c:	46bd      	mov	sp, r7
 8001c3e:	bc80      	pop	{r7}
 8001c40:	4770      	bx	lr

08001c42 <LL_LPUART_IsActiveFlag_TXE_TXFNF>:
  * @rmtoll ISR          TXE_TXFNF     LL_LPUART_IsActiveFlag_TXE_TXFNF
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TXE_TXFNF(const USART_TypeDef *LPUARTx)
{
 8001c42:	b480      	push	{r7}
 8001c44:	b083      	sub	sp, #12
 8001c46:	af00      	add	r7, sp, #0
 8001c48:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_TXE_TXFNF) == (USART_ISR_TXE_TXFNF)) ? 1UL : 0UL);
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	69db      	ldr	r3, [r3, #28]
 8001c4e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c52:	2b80      	cmp	r3, #128	; 0x80
 8001c54:	d101      	bne.n	8001c5a <LL_LPUART_IsActiveFlag_TXE_TXFNF+0x18>
 8001c56:	2301      	movs	r3, #1
 8001c58:	e000      	b.n	8001c5c <LL_LPUART_IsActiveFlag_TXE_TXFNF+0x1a>
 8001c5a:	2300      	movs	r3, #0
}
 8001c5c:	4618      	mov	r0, r3
 8001c5e:	370c      	adds	r7, #12
 8001c60:	46bd      	mov	sp, r7
 8001c62:	bc80      	pop	{r7}
 8001c64:	4770      	bx	lr

08001c66 <LL_LPUART_IsActiveFlag_TEACK>:
  * @rmtoll ISR          TEACK         LL_LPUART_IsActiveFlag_TEACK
  * @param  LPUARTx LPUART Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TEACK(const USART_TypeDef *LPUARTx)
{
 8001c66:	b480      	push	{r7}
 8001c68:	b083      	sub	sp, #12
 8001c6a:	af00      	add	r7, sp, #0
 8001c6c:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	69db      	ldr	r3, [r3, #28]
 8001c72:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001c76:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8001c7a:	d101      	bne.n	8001c80 <LL_LPUART_IsActiveFlag_TEACK+0x1a>
 8001c7c:	2301      	movs	r3, #1
 8001c7e:	e000      	b.n	8001c82 <LL_LPUART_IsActiveFlag_TEACK+0x1c>
 8001c80:	2300      	movs	r3, #0
}
 8001c82:	4618      	mov	r0, r3
 8001c84:	370c      	adds	r7, #12
 8001c86:	46bd      	mov	sp, r7
 8001c88:	bc80      	pop	{r7}
 8001c8a:	4770      	bx	lr

08001c8c <LL_LPUART_ClearFlag_PE>:
  * @rmtoll ICR          PECF          LL_LPUART_ClearFlag_PE
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_ClearFlag_PE(USART_TypeDef *LPUARTx)
{
 8001c8c:	b480      	push	{r7}
 8001c8e:	b083      	sub	sp, #12
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	6078      	str	r0, [r7, #4]
  WRITE_REG(LPUARTx->ICR, USART_ICR_PECF);
 8001c94:	687b      	ldr	r3, [r7, #4]
 8001c96:	2201      	movs	r2, #1
 8001c98:	621a      	str	r2, [r3, #32]
}
 8001c9a:	bf00      	nop
 8001c9c:	370c      	adds	r7, #12
 8001c9e:	46bd      	mov	sp, r7
 8001ca0:	bc80      	pop	{r7}
 8001ca2:	4770      	bx	lr

08001ca4 <LL_LPUART_ClearFlag_FE>:
  * @rmtoll ICR          FECF          LL_LPUART_ClearFlag_FE
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_ClearFlag_FE(USART_TypeDef *LPUARTx)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	b083      	sub	sp, #12
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	6078      	str	r0, [r7, #4]
  WRITE_REG(LPUARTx->ICR, USART_ICR_FECF);
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	2202      	movs	r2, #2
 8001cb0:	621a      	str	r2, [r3, #32]
}
 8001cb2:	bf00      	nop
 8001cb4:	370c      	adds	r7, #12
 8001cb6:	46bd      	mov	sp, r7
 8001cb8:	bc80      	pop	{r7}
 8001cba:	4770      	bx	lr

08001cbc <LL_LPUART_ClearFlag_NE>:
  * @rmtoll ICR          NECF          LL_LPUART_ClearFlag_NE
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_ClearFlag_NE(USART_TypeDef *LPUARTx)
{
 8001cbc:	b480      	push	{r7}
 8001cbe:	b083      	sub	sp, #12
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	6078      	str	r0, [r7, #4]
  WRITE_REG(LPUARTx->ICR, USART_ICR_NECF);
 8001cc4:	687b      	ldr	r3, [r7, #4]
 8001cc6:	2204      	movs	r2, #4
 8001cc8:	621a      	str	r2, [r3, #32]
}
 8001cca:	bf00      	nop
 8001ccc:	370c      	adds	r7, #12
 8001cce:	46bd      	mov	sp, r7
 8001cd0:	bc80      	pop	{r7}
 8001cd2:	4770      	bx	lr

08001cd4 <LL_LPUART_ClearFlag_ORE>:
  * @rmtoll ICR          ORECF         LL_LPUART_ClearFlag_ORE
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_ClearFlag_ORE(USART_TypeDef *LPUARTx)
{
 8001cd4:	b480      	push	{r7}
 8001cd6:	b083      	sub	sp, #12
 8001cd8:	af00      	add	r7, sp, #0
 8001cda:	6078      	str	r0, [r7, #4]
  WRITE_REG(LPUARTx->ICR, USART_ICR_ORECF);
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	2208      	movs	r2, #8
 8001ce0:	621a      	str	r2, [r3, #32]
}
 8001ce2:	bf00      	nop
 8001ce4:	370c      	adds	r7, #12
 8001ce6:	46bd      	mov	sp, r7
 8001ce8:	bc80      	pop	{r7}
 8001cea:	4770      	bx	lr

08001cec <LL_LPUART_EnableIT_TXE_TXFNF>:
  * @rmtoll CR1         TXEIE_TXFNFIE  LL_LPUART_EnableIT_TXE_TXFNF
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_EnableIT_TXE_TXFNF(USART_TypeDef *LPUARTx)
{
 8001cec:	b480      	push	{r7}
 8001cee:	b089      	sub	sp, #36	; 0x24
 8001cf0:	af00      	add	r7, sp, #0
 8001cf2:	6078      	str	r0, [r7, #4]
  ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
 8001cf4:	687b      	ldr	r3, [r7, #4]
 8001cf6:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001cf8:	68fb      	ldr	r3, [r7, #12]
 8001cfa:	e853 3f00 	ldrex	r3, [r3]
 8001cfe:	60bb      	str	r3, [r7, #8]
   return(result);
 8001d00:	68bb      	ldr	r3, [r7, #8]
 8001d02:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d06:	61fb      	str	r3, [r7, #28]
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	69fa      	ldr	r2, [r7, #28]
 8001d0c:	61ba      	str	r2, [r7, #24]
 8001d0e:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001d10:	6979      	ldr	r1, [r7, #20]
 8001d12:	69ba      	ldr	r2, [r7, #24]
 8001d14:	e841 2300 	strex	r3, r2, [r1]
 8001d18:	613b      	str	r3, [r7, #16]
   return(result);
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	2b00      	cmp	r3, #0
 8001d1e:	d1e9      	bne.n	8001cf4 <LL_LPUART_EnableIT_TXE_TXFNF+0x8>
}
 8001d20:	bf00      	nop
 8001d22:	bf00      	nop
 8001d24:	3724      	adds	r7, #36	; 0x24
 8001d26:	46bd      	mov	sp, r7
 8001d28:	bc80      	pop	{r7}
 8001d2a:	4770      	bx	lr

08001d2c <LL_LPUART_DisableIT_TXE_TXFNF>:
  * @rmtoll CR1        TXEIE_TXFNFIE  LL_LPUART_DisableIT_TXE_TXFNF
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_DisableIT_TXE_TXFNF(USART_TypeDef *LPUARTx)
{
 8001d2c:	b480      	push	{r7}
 8001d2e:	b089      	sub	sp, #36	; 0x24
 8001d30:	af00      	add	r7, sp, #0
 8001d32:	6078      	str	r0, [r7, #4]
  ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001d38:	68fb      	ldr	r3, [r7, #12]
 8001d3a:	e853 3f00 	ldrex	r3, [r3]
 8001d3e:	60bb      	str	r3, [r7, #8]
   return(result);
 8001d40:	68bb      	ldr	r3, [r7, #8]
 8001d42:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001d46:	61fb      	str	r3, [r7, #28]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	69fa      	ldr	r2, [r7, #28]
 8001d4c:	61ba      	str	r2, [r7, #24]
 8001d4e:	617b      	str	r3, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001d50:	6979      	ldr	r1, [r7, #20]
 8001d52:	69ba      	ldr	r2, [r7, #24]
 8001d54:	e841 2300 	strex	r3, r2, [r1]
 8001d58:	613b      	str	r3, [r7, #16]
   return(result);
 8001d5a:	693b      	ldr	r3, [r7, #16]
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d1e9      	bne.n	8001d34 <LL_LPUART_DisableIT_TXE_TXFNF+0x8>
}
 8001d60:	bf00      	nop
 8001d62:	bf00      	nop
 8001d64:	3724      	adds	r7, #36	; 0x24
 8001d66:	46bd      	mov	sp, r7
 8001d68:	bc80      	pop	{r7}
 8001d6a:	4770      	bx	lr

08001d6c <LL_LPUART_EnableDMADeactOnRxErr>:
  * @rmtoll CR3          DDRE          LL_LPUART_EnableDMADeactOnRxErr
  * @param  LPUARTx LPUART Instance
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_EnableDMADeactOnRxErr(USART_TypeDef *LPUARTx)
{
 8001d6c:	b480      	push	{r7}
 8001d6e:	b083      	sub	sp, #12
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	6078      	str	r0, [r7, #4]
  SET_BIT(LPUARTx->CR3, USART_CR3_DDRE);
 8001d74:	687b      	ldr	r3, [r7, #4]
 8001d76:	689b      	ldr	r3, [r3, #8]
 8001d78:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	609a      	str	r2, [r3, #8]
}
 8001d80:	bf00      	nop
 8001d82:	370c      	adds	r7, #12
 8001d84:	46bd      	mov	sp, r7
 8001d86:	bc80      	pop	{r7}
 8001d88:	4770      	bx	lr

08001d8a <LL_LPUART_TransmitData8>:
  * @param  LPUARTx LPUART Instance
  * @param  Value between Min_Data=0x00 and Max_Data=0xFF
  * @retval None
  */
__STATIC_INLINE void LL_LPUART_TransmitData8(USART_TypeDef *LPUARTx, uint8_t Value)
{
 8001d8a:	b480      	push	{r7}
 8001d8c:	b083      	sub	sp, #12
 8001d8e:	af00      	add	r7, sp, #0
 8001d90:	6078      	str	r0, [r7, #4]
 8001d92:	460b      	mov	r3, r1
 8001d94:	70fb      	strb	r3, [r7, #3]
  LPUARTx->TDR = Value;
 8001d96:	78fa      	ldrb	r2, [r7, #3]
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	629a      	str	r2, [r3, #40]	; 0x28
}
 8001d9c:	bf00      	nop
 8001d9e:	370c      	adds	r7, #12
 8001da0:	46bd      	mov	sp, r7
 8001da2:	bc80      	pop	{r7}
 8001da4:	4770      	bx	lr
	...

08001da8 <MX_LPUART1_UART_Init>:
/* USER CODE END 0 */

/* LPUART1 init function */

void MX_LPUART1_UART_Init(void)
{
 8001da8:	b580      	push	{r7, lr}
 8001daa:	b08e      	sub	sp, #56	; 0x38
 8001dac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LPUART1_Init 0 */
	RingBuffer_Init(&txRingBuffer, txRingBufferSpace, sizeof(txRingBufferSpace));
 8001dae:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001db2:	493a      	ldr	r1, [pc, #232]	; (8001e9c <MX_LPUART1_UART_Init+0xf4>)
 8001db4:	483a      	ldr	r0, [pc, #232]	; (8001ea0 <MX_LPUART1_UART_Init+0xf8>)
 8001db6:	f7ff fccc 	bl	8001752 <RingBuffer_Init>
  /* USER CODE END LPUART1_Init 0 */

  LL_LPUART_InitTypeDef LPUART_InitStruct = {0};
 8001dba:	f107 031c 	add.w	r3, r7, #28
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	601a      	str	r2, [r3, #0]
 8001dc2:	605a      	str	r2, [r3, #4]
 8001dc4:	609a      	str	r2, [r3, #8]
 8001dc6:	60da      	str	r2, [r3, #12]
 8001dc8:	611a      	str	r2, [r3, #16]
 8001dca:	615a      	str	r2, [r3, #20]
 8001dcc:	619a      	str	r2, [r3, #24]

  LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dce:	1d3b      	adds	r3, r7, #4
 8001dd0:	2200      	movs	r2, #0
 8001dd2:	601a      	str	r2, [r3, #0]
 8001dd4:	605a      	str	r2, [r3, #4]
 8001dd6:	609a      	str	r2, [r3, #8]
 8001dd8:	60da      	str	r2, [r3, #12]
 8001dda:	611a      	str	r2, [r3, #16]
 8001ddc:	615a      	str	r2, [r3, #20]

  LL_RCC_SetLPUARTClockSource(LL_RCC_LPUART1_CLKSOURCE_PCLK1);
 8001dde:	2000      	movs	r0, #0
 8001de0:	f7ff fe38 	bl	8001a54 <LL_RCC_SetLPUARTClockSource>

  /* Peripheral clock enable */
  LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_LPUART1);
 8001de4:	2001      	movs	r0, #1
 8001de6:	f7ff fe62 	bl	8001aae <LL_APB1_GRP2_EnableClock>

  LL_AHB2_GRP1_EnableClock(LL_AHB2_GRP1_PERIPH_GPIOA);
 8001dea:	2001      	movs	r0, #1
 8001dec:	f7ff fe47 	bl	8001a7e <LL_AHB2_GRP1_EnableClock>
  /**LPUART1 GPIO Configuration
  PA3   ------> LPUART1_RX
  PA2   ------> LPUART1_TX
  */
  GPIO_InitStruct.Pin = LL_GPIO_PIN_3|LL_GPIO_PIN_2;
 8001df0:	230c      	movs	r3, #12
 8001df2:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 8001df4:	2302      	movs	r3, #2
 8001df6:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 8001df8:	2300      	movs	r3, #0
 8001dfa:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 8001e00:	2300      	movs	r3, #0
 8001e02:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Alternate = LL_GPIO_AF_8;
 8001e04:	2308      	movs	r3, #8
 8001e06:	61bb      	str	r3, [r7, #24]
  LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e08:	1d3b      	adds	r3, r7, #4
 8001e0a:	4619      	mov	r1, r3
 8001e0c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001e10:	f002 fccd 	bl	80047ae <LL_GPIO_Init>

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  LPUART_InitStruct.PrescalerValue = LL_LPUART_PRESCALER_DIV1;
 8001e14:	2300      	movs	r3, #0
 8001e16:	61fb      	str	r3, [r7, #28]
  LPUART_InitStruct.BaudRate = 115200;
 8001e18:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8001e1c:	623b      	str	r3, [r7, #32]
  LPUART_InitStruct.DataWidth = LL_LPUART_DATAWIDTH_8B;
 8001e1e:	2300      	movs	r3, #0
 8001e20:	627b      	str	r3, [r7, #36]	; 0x24
  LPUART_InitStruct.StopBits = LL_LPUART_STOPBITS_1;
 8001e22:	2300      	movs	r3, #0
 8001e24:	62bb      	str	r3, [r7, #40]	; 0x28
  LPUART_InitStruct.Parity = LL_LPUART_PARITY_NONE;
 8001e26:	2300      	movs	r3, #0
 8001e28:	62fb      	str	r3, [r7, #44]	; 0x2c
  LPUART_InitStruct.TransferDirection = LL_LPUART_DIRECTION_TX;
 8001e2a:	2308      	movs	r3, #8
 8001e2c:	633b      	str	r3, [r7, #48]	; 0x30
  LPUART_InitStruct.HardwareFlowControl = LL_LPUART_HWCONTROL_NONE;
 8001e2e:	2300      	movs	r3, #0
 8001e30:	637b      	str	r3, [r7, #52]	; 0x34
  LL_LPUART_Init(LPUART1, &LPUART_InitStruct);
 8001e32:	f107 031c 	add.w	r3, r7, #28
 8001e36:	4619      	mov	r1, r3
 8001e38:	481a      	ldr	r0, [pc, #104]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e3a:	f002 fdc1 	bl	80049c0 <LL_LPUART_Init>
  LL_LPUART_SetTXFIFOThreshold(LPUART1, LL_LPUART_FIFOTHRESHOLD_8_8);
 8001e3e:	2105      	movs	r1, #5
 8001e40:	4818      	ldr	r0, [pc, #96]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e42:	f7ff fe5b 	bl	8001afc <LL_LPUART_SetTXFIFOThreshold>
  LL_LPUART_SetRXFIFOThreshold(LPUART1, LL_LPUART_FIFOTHRESHOLD_8_8);
 8001e46:	2105      	movs	r1, #5
 8001e48:	4816      	ldr	r0, [pc, #88]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e4a:	f7ff fe7d 	bl	8001b48 <LL_LPUART_SetRXFIFOThreshold>
  LL_LPUART_EnableOverrunDetect(LPUART1);
 8001e4e:	4815      	ldr	r0, [pc, #84]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e50:	f7ff fea0 	bl	8001b94 <LL_LPUART_EnableOverrunDetect>
  LL_LPUART_EnableDMADeactOnRxErr(LPUART1);
 8001e54:	4813      	ldr	r0, [pc, #76]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e56:	f7ff ff89 	bl	8001d6c <LL_LPUART_EnableDMADeactOnRxErr>

  /* USER CODE BEGIN WKUPType LPUART1 */

  /* USER CODE END WKUPType LPUART1 */

  LL_LPUART_Enable(LPUART1);
 8001e5a:	4812      	ldr	r0, [pc, #72]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e5c:	f7ff fe3f 	bl	8001ade <LL_LPUART_Enable>

  /* Polling LPUART1 initialisation */
  while(!(LL_LPUART_IsActiveFlag_TEACK(LPUART1)))
 8001e60:	bf00      	nop
 8001e62:	4810      	ldr	r0, [pc, #64]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e64:	f7ff feff 	bl	8001c66 <LL_LPUART_IsActiveFlag_TEACK>
 8001e68:	4603      	mov	r3, r0
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d0f9      	beq.n	8001e62 <MX_LPUART1_UART_Init+0xba>
  {
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

	/* USART1 interrupt Init */
	NVIC_SetPriority(LPUART1_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 4, 0));
 8001e6e:	f7ff fd6b 	bl	8001948 <__NVIC_GetPriorityGrouping>
 8001e72:	4603      	mov	r3, r0
 8001e74:	2200      	movs	r2, #0
 8001e76:	2104      	movs	r1, #4
 8001e78:	4618      	mov	r0, r3
 8001e7a:	f7ff fdb9 	bl	80019f0 <NVIC_EncodePriority>
 8001e7e:	4603      	mov	r3, r0
 8001e80:	4619      	mov	r1, r3
 8001e82:	2026      	movs	r0, #38	; 0x26
 8001e84:	f7ff fd8a 	bl	800199c <__NVIC_SetPriority>
	NVIC_EnableIRQ(LPUART1_IRQn);
 8001e88:	2026      	movs	r0, #38	; 0x26
 8001e8a:	f7ff fd6b 	bl	8001964 <__NVIC_EnableIRQ>
	uart = LPUART1;
 8001e8e:	4b06      	ldr	r3, [pc, #24]	; (8001ea8 <MX_LPUART1_UART_Init+0x100>)
 8001e90:	4a04      	ldr	r2, [pc, #16]	; (8001ea4 <MX_LPUART1_UART_Init+0xfc>)
 8001e92:	601a      	str	r2, [r3, #0]
  /* USER CODE END LPUART1_Init 2 */

}
 8001e94:	bf00      	nop
 8001e96:	3738      	adds	r7, #56	; 0x38
 8001e98:	46bd      	mov	sp, r7
 8001e9a:	bd80      	pop	{r7, pc}
 8001e9c:	2000049c 	.word	0x2000049c
 8001ea0:	20000488 	.word	0x20000488
 8001ea4:	40008000 	.word	0x40008000
 8001ea8:	2000089c 	.word	0x2000089c

08001eac <LOGGER_UART_Init>:

}

/* USER CODE BEGIN 1 */

void LOGGER_UART_Init() {
 8001eac:	b580      	push	{r7, lr}
 8001eae:	af00      	add	r7, sp, #0
#if 1 == IS_ROOT
	MX_USART1_UART_Init();
#else
	MX_LPUART1_UART_Init();
 8001eb0:	f7ff ff7a 	bl	8001da8 <MX_LPUART1_UART_Init>
#endif
}
 8001eb4:	bf00      	nop
 8001eb6:	bd80      	pop	{r7, pc}

08001eb8 <LOGGER_UART_Write>:

void LOGGER_UART_Write(const void *ptr, size_t len) {
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b086      	sub	sp, #24
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	6078      	str	r0, [r7, #4]
 8001ec0:	6039      	str	r1, [r7, #0]
	if (ptr && len) {
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d026      	beq.n	8001f16 <LOGGER_UART_Write+0x5e>
 8001ec8:	683b      	ldr	r3, [r7, #0]
 8001eca:	2b00      	cmp	r3, #0
 8001ecc:	d023      	beq.n	8001f16 <LOGGER_UART_Write+0x5e>
		for (size_t l = 0; l < len; ++l) {
 8001ece:	2300      	movs	r3, #0
 8001ed0:	617b      	str	r3, [r7, #20]
 8001ed2:	e01c      	b.n	8001f0e <LOGGER_UART_Write+0x56>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8001ed4:	f3ef 8310 	mrs	r3, PRIMASK
 8001ed8:	60bb      	str	r3, [r7, #8]
  return(result);
 8001eda:	68bb      	ldr	r3, [r7, #8]
			// enter critical section
			uint32_t primaskBit = __get_PRIMASK();
 8001edc:	613b      	str	r3, [r7, #16]
  __ASM volatile ("cpsid i" : : : "memory");
 8001ede:	b672      	cpsid	i
}
 8001ee0:	bf00      	nop
			__disable_irq();
			// put data to ring buffer
			RingBuffer_PutChar(&txRingBuffer, ((const uint8_t*) ptr)[l]);
 8001ee2:	687a      	ldr	r2, [r7, #4]
 8001ee4:	697b      	ldr	r3, [r7, #20]
 8001ee6:	4413      	add	r3, r2
 8001ee8:	781b      	ldrb	r3, [r3, #0]
 8001eea:	4619      	mov	r1, r3
 8001eec:	480c      	ldr	r0, [pc, #48]	; (8001f20 <LOGGER_UART_Write+0x68>)
 8001eee:	f7ff fc66 	bl	80017be <RingBuffer_PutChar>
 8001ef2:	693b      	ldr	r3, [r7, #16]
 8001ef4:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8001ef6:	68fb      	ldr	r3, [r7, #12]
 8001ef8:	f383 8810 	msr	PRIMASK, r3
}
 8001efc:	bf00      	nop
			__set_PRIMASK(primaskBit);
			// trigger IRQ-driven transmission
#if 1 == IS_ROOT
			LL_USART_EnableIT_TXE(uart);
#else
			LL_LPUART_EnableIT_TXE(uart);
 8001efe:	4b09      	ldr	r3, [pc, #36]	; (8001f24 <LOGGER_UART_Write+0x6c>)
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	4618      	mov	r0, r3
 8001f04:	f7ff fef2 	bl	8001cec <LL_LPUART_EnableIT_TXE_TXFNF>
		for (size_t l = 0; l < len; ++l) {
 8001f08:	697b      	ldr	r3, [r7, #20]
 8001f0a:	3301      	adds	r3, #1
 8001f0c:	617b      	str	r3, [r7, #20]
 8001f0e:	697a      	ldr	r2, [r7, #20]
 8001f10:	683b      	ldr	r3, [r7, #0]
 8001f12:	429a      	cmp	r2, r3
 8001f14:	d3de      	bcc.n	8001ed4 <LOGGER_UART_Write+0x1c>
#endif
		}
	}
}
 8001f16:	bf00      	nop
 8001f18:	3718      	adds	r7, #24
 8001f1a:	46bd      	mov	sp, r7
 8001f1c:	bd80      	pop	{r7, pc}
 8001f1e:	bf00      	nop
 8001f20:	20000488 	.word	0x20000488
 8001f24:	2000089c 	.word	0x2000089c

08001f28 <LPUART1_IRQHandler>:
}
#else
/**
 * @brief This function handles LPUART1 Interrupt.
 */
void LPUART1_IRQHandler(void) {
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	b082      	sub	sp, #8
 8001f2c:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN LPUART1_IRQn 0 */
	if (LL_LPUART_IsActiveFlag_TXE(uart)) {
 8001f2e:	4b2c      	ldr	r3, [pc, #176]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	4618      	mov	r0, r3
 8001f34:	f7ff fe85 	bl	8001c42 <LL_LPUART_IsActiveFlag_TXE_TXFNF>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d015      	beq.n	8001f6a <LPUART1_IRQHandler+0x42>
		uint8_t c;
		if (true == RingBuffer_GetChar(&txRingBuffer, &c)) {
 8001f3e:	1dfb      	adds	r3, r7, #7
 8001f40:	4619      	mov	r1, r3
 8001f42:	4828      	ldr	r0, [pc, #160]	; (8001fe4 <LPUART1_IRQHandler+0xbc>)
 8001f44:	f7ff fc6d 	bl	8001822 <RingBuffer_GetChar>
 8001f48:	4603      	mov	r3, r0
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d007      	beq.n	8001f5e <LPUART1_IRQHandler+0x36>
			LL_LPUART_TransmitData8(uart, c);
 8001f4e:	4b24      	ldr	r3, [pc, #144]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	79fa      	ldrb	r2, [r7, #7]
 8001f54:	4611      	mov	r1, r2
 8001f56:	4618      	mov	r0, r3
 8001f58:	f7ff ff17 	bl	8001d8a <LL_LPUART_TransmitData8>

	/* USER CODE END LPUART1_IRQn 0 */
	/* USER CODE BEGIN LPUART1_IRQn 1 */

	/* USER CODE END LPUART1_IRQn 1 */
}
 8001f5c:	e03c      	b.n	8001fd8 <LPUART1_IRQHandler+0xb0>
			LL_LPUART_DisableIT_TXE(uart);
 8001f5e:	4b20      	ldr	r3, [pc, #128]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	4618      	mov	r0, r3
 8001f64:	f7ff fee2 	bl	8001d2c <LL_LPUART_DisableIT_TXE_TXFNF>
}
 8001f68:	e036      	b.n	8001fd8 <LPUART1_IRQHandler+0xb0>
	} else if (LL_LPUART_IsActiveFlag_PE(uart)) {
 8001f6a:	4b1d      	ldr	r3, [pc, #116]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f7ff fe1f 	bl	8001bb2 <LL_LPUART_IsActiveFlag_PE>
 8001f74:	4603      	mov	r3, r0
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d005      	beq.n	8001f86 <LPUART1_IRQHandler+0x5e>
		LL_LPUART_ClearFlag_PE(uart);
 8001f7a:	4b19      	ldr	r3, [pc, #100]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	4618      	mov	r0, r3
 8001f80:	f7ff fe84 	bl	8001c8c <LL_LPUART_ClearFlag_PE>
}
 8001f84:	e028      	b.n	8001fd8 <LPUART1_IRQHandler+0xb0>
	} else if (LL_LPUART_IsActiveFlag_FE(uart)) {
 8001f86:	4b16      	ldr	r3, [pc, #88]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	f7ff fe23 	bl	8001bd6 <LL_LPUART_IsActiveFlag_FE>
 8001f90:	4603      	mov	r3, r0
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d005      	beq.n	8001fa2 <LPUART1_IRQHandler+0x7a>
		LL_LPUART_ClearFlag_FE(uart);
 8001f96:	4b12      	ldr	r3, [pc, #72]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f7ff fe82 	bl	8001ca4 <LL_LPUART_ClearFlag_FE>
}
 8001fa0:	e01a      	b.n	8001fd8 <LPUART1_IRQHandler+0xb0>
	} else if (LL_LPUART_IsActiveFlag_NE(uart)) {
 8001fa2:	4b0f      	ldr	r3, [pc, #60]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	4618      	mov	r0, r3
 8001fa8:	f7ff fe27 	bl	8001bfa <LL_LPUART_IsActiveFlag_NE>
 8001fac:	4603      	mov	r3, r0
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	d005      	beq.n	8001fbe <LPUART1_IRQHandler+0x96>
		LL_LPUART_ClearFlag_NE(uart);
 8001fb2:	4b0b      	ldr	r3, [pc, #44]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001fb4:	681b      	ldr	r3, [r3, #0]
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	f7ff fe80 	bl	8001cbc <LL_LPUART_ClearFlag_NE>
}
 8001fbc:	e00c      	b.n	8001fd8 <LPUART1_IRQHandler+0xb0>
	} else if (LL_LPUART_IsActiveFlag_ORE(uart)) {
 8001fbe:	4b08      	ldr	r3, [pc, #32]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001fc0:	681b      	ldr	r3, [r3, #0]
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	f7ff fe2b 	bl	8001c1e <LL_LPUART_IsActiveFlag_ORE>
 8001fc8:	4603      	mov	r3, r0
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	d004      	beq.n	8001fd8 <LPUART1_IRQHandler+0xb0>
		LL_LPUART_ClearFlag_ORE(uart);
 8001fce:	4b04      	ldr	r3, [pc, #16]	; (8001fe0 <LPUART1_IRQHandler+0xb8>)
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	4618      	mov	r0, r3
 8001fd4:	f7ff fe7e 	bl	8001cd4 <LL_LPUART_ClearFlag_ORE>
}
 8001fd8:	bf00      	nop
 8001fda:	3708      	adds	r7, #8
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	bd80      	pop	{r7, pc}
 8001fe0:	2000089c 	.word	0x2000089c
 8001fe4:	20000488 	.word	0x20000488

08001fe8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001fe8:	480d      	ldr	r0, [pc, #52]	; (8002020 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001fea:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8001fec:	f7ff fca6 	bl	800193c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001ff0:	480c      	ldr	r0, [pc, #48]	; (8002024 <LoopForever+0x6>)
  ldr r1, =_edata
 8001ff2:	490d      	ldr	r1, [pc, #52]	; (8002028 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001ff4:	4a0d      	ldr	r2, [pc, #52]	; (800202c <LoopForever+0xe>)
  movs r3, #0
 8001ff6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ff8:	e002      	b.n	8002000 <LoopCopyDataInit>

08001ffa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001ffa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001ffc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001ffe:	3304      	adds	r3, #4

08002000 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002000:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002002:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002004:	d3f9      	bcc.n	8001ffa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002006:	4a0a      	ldr	r2, [pc, #40]	; (8002030 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002008:	4c0a      	ldr	r4, [pc, #40]	; (8002034 <LoopForever+0x16>)
  movs r3, #0
 800200a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800200c:	e001      	b.n	8002012 <LoopFillZerobss>

0800200e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800200e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002010:	3204      	adds	r2, #4

08002012 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002012:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002014:	d3fb      	bcc.n	800200e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8002016:	f029 f8df 	bl	802b1d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800201a:	f7ff fa95 	bl	8001548 <main>

0800201e <LoopForever>:

LoopForever:
    b LoopForever
 800201e:	e7fe      	b.n	800201e <LoopForever>
  ldr   r0, =_estack
 8002020:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8002024:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002028:	2000031c 	.word	0x2000031c
  ldr r2, =_sidata
 800202c:	08031b08 	.word	0x08031b08
  ldr r2, =_sbss
 8002030:	20000320 	.word	0x20000320
  ldr r4, =_ebss
 8002034:	200040e0 	.word	0x200040e0

08002038 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002038:	e7fe      	b.n	8002038 <ADC_IRQHandler>
	...

0800203c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800203c:	b580      	push	{r7, lr}
 800203e:	b082      	sub	sp, #8
 8002040:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8002042:	2300      	movs	r3, #0
 8002044:	71fb      	strb	r3, [r7, #7]
#endif /* PREFETCH_ENABLE */

#ifdef CORE_CM0PLUS
#else
  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002046:	2003      	movs	r0, #3
 8002048:	f000 f94c 	bl	80022e4 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(DUAL_CORE) && defined(CORE_CM0PLUS)
  SystemCoreClock = HAL_RCC_GetHCLK2Freq();
#else
  SystemCoreClock = HAL_RCC_GetHCLKFreq();
 800204c:	f001 fe10 	bl	8003c70 <HAL_RCC_GetHCLKFreq>
 8002050:	4603      	mov	r3, r0
 8002052:	4a09      	ldr	r2, [pc, #36]	; (8002078 <HAL_Init+0x3c>)
 8002054:	6013      	str	r3, [r2, #0]
#endif

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002056:	200f      	movs	r0, #15
 8002058:	f000 f810 	bl	800207c <HAL_InitTick>
 800205c:	4603      	mov	r3, r0
 800205e:	2b00      	cmp	r3, #0
 8002060:	d002      	beq.n	8002068 <HAL_Init+0x2c>
  {
    status = HAL_ERROR;
 8002062:	2301      	movs	r3, #1
 8002064:	71fb      	strb	r3, [r7, #7]
 8002066:	e001      	b.n	800206c <HAL_Init+0x30>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8002068:	f7ff fc0e 	bl	8001888 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 800206c:	79fb      	ldrb	r3, [r7, #7]
}
 800206e:	4618      	mov	r0, r3
 8002070:	3708      	adds	r7, #8
 8002072:	46bd      	mov	sp, r7
 8002074:	bd80      	pop	{r7, pc}
 8002076:	bf00      	nop
 8002078:	20000004 	.word	0x20000004

0800207c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800207c:	b580      	push	{r7, lr}
 800207e:	b084      	sub	sp, #16
 8002080:	af00      	add	r7, sp, #0
 8002082:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 8002084:	2300      	movs	r3, #0
 8002086:	73fb      	strb	r3, [r7, #15]

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 8002088:	4b17      	ldr	r3, [pc, #92]	; (80020e8 <HAL_InitTick+0x6c>)
 800208a:	781b      	ldrb	r3, [r3, #0]
 800208c:	2b00      	cmp	r3, #0
 800208e:	d024      	beq.n	80020da <HAL_InitTick+0x5e>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
#ifdef CORE_CM0PLUS
    if (HAL_SYSTICK_Config(HAL_RCC_GetHCLK2Freq() / (1000U / (uint32_t)uwTickFreq)) == 0U)
#else
    if (HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / (1000U / (uint32_t)uwTickFreq)) == 0U)
 8002090:	f001 fdee 	bl	8003c70 <HAL_RCC_GetHCLKFreq>
 8002094:	4602      	mov	r2, r0
 8002096:	4b14      	ldr	r3, [pc, #80]	; (80020e8 <HAL_InitTick+0x6c>)
 8002098:	781b      	ldrb	r3, [r3, #0]
 800209a:	4619      	mov	r1, r3
 800209c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80020a0:	fbb3 f3f1 	udiv	r3, r3, r1
 80020a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80020a8:	4618      	mov	r0, r3
 80020aa:	f000 f95c 	bl	8002366 <HAL_SYSTICK_Config>
 80020ae:	4603      	mov	r3, r0
 80020b0:	2b00      	cmp	r3, #0
 80020b2:	d10f      	bne.n	80020d4 <HAL_InitTick+0x58>
#endif
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	2b0f      	cmp	r3, #15
 80020b8:	d809      	bhi.n	80020ce <HAL_InitTick+0x52>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80020ba:	2200      	movs	r2, #0
 80020bc:	6879      	ldr	r1, [r7, #4]
 80020be:	f04f 30ff 	mov.w	r0, #4294967295
 80020c2:	f000 f91a 	bl	80022fa <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80020c6:	4a09      	ldr	r2, [pc, #36]	; (80020ec <HAL_InitTick+0x70>)
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	6013      	str	r3, [r2, #0]
 80020cc:	e007      	b.n	80020de <HAL_InitTick+0x62>
      }
      else
      {
        status = HAL_ERROR;
 80020ce:	2301      	movs	r3, #1
 80020d0:	73fb      	strb	r3, [r7, #15]
 80020d2:	e004      	b.n	80020de <HAL_InitTick+0x62>
      }
    }
    else
    {
      status = HAL_ERROR;
 80020d4:	2301      	movs	r3, #1
 80020d6:	73fb      	strb	r3, [r7, #15]
 80020d8:	e001      	b.n	80020de <HAL_InitTick+0x62>
    }
  }
  else
  {
    status = HAL_ERROR;
 80020da:	2301      	movs	r3, #1
 80020dc:	73fb      	strb	r3, [r7, #15]
  }

  /* Return function status */
  return status;
 80020de:	7bfb      	ldrb	r3, [r7, #15]
}
 80020e0:	4618      	mov	r0, r3
 80020e2:	3710      	adds	r7, #16
 80020e4:	46bd      	mov	sp, r7
 80020e6:	bd80      	pop	{r7, pc}
 80020e8:	2000000c 	.word	0x2000000c
 80020ec:	20000008 	.word	0x20000008

080020f0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80020f0:	b480      	push	{r7}
 80020f2:	af00      	add	r7, sp, #0
  return uwTick;
 80020f4:	4b02      	ldr	r3, [pc, #8]	; (8002100 <HAL_GetTick+0x10>)
 80020f6:	681b      	ldr	r3, [r3, #0]
}
 80020f8:	4618      	mov	r0, r3
 80020fa:	46bd      	mov	sp, r7
 80020fc:	bc80      	pop	{r7}
 80020fe:	4770      	bx	lr
 8002100:	200008a0 	.word	0x200008a0

08002104 <__NVIC_SetPriorityGrouping>:
{
 8002104:	b480      	push	{r7}
 8002106:	b085      	sub	sp, #20
 8002108:	af00      	add	r7, sp, #0
 800210a:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	f003 0307 	and.w	r3, r3, #7
 8002112:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002114:	4b0c      	ldr	r3, [pc, #48]	; (8002148 <__NVIC_SetPriorityGrouping+0x44>)
 8002116:	68db      	ldr	r3, [r3, #12]
 8002118:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800211a:	68ba      	ldr	r2, [r7, #8]
 800211c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002120:	4013      	ands	r3, r2
 8002122:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002128:	68bb      	ldr	r3, [r7, #8]
 800212a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800212c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002130:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002134:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002136:	4a04      	ldr	r2, [pc, #16]	; (8002148 <__NVIC_SetPriorityGrouping+0x44>)
 8002138:	68bb      	ldr	r3, [r7, #8]
 800213a:	60d3      	str	r3, [r2, #12]
}
 800213c:	bf00      	nop
 800213e:	3714      	adds	r7, #20
 8002140:	46bd      	mov	sp, r7
 8002142:	bc80      	pop	{r7}
 8002144:	4770      	bx	lr
 8002146:	bf00      	nop
 8002148:	e000ed00 	.word	0xe000ed00

0800214c <__NVIC_GetPriorityGrouping>:
{
 800214c:	b480      	push	{r7}
 800214e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002150:	4b04      	ldr	r3, [pc, #16]	; (8002164 <__NVIC_GetPriorityGrouping+0x18>)
 8002152:	68db      	ldr	r3, [r3, #12]
 8002154:	0a1b      	lsrs	r3, r3, #8
 8002156:	f003 0307 	and.w	r3, r3, #7
}
 800215a:	4618      	mov	r0, r3
 800215c:	46bd      	mov	sp, r7
 800215e:	bc80      	pop	{r7}
 8002160:	4770      	bx	lr
 8002162:	bf00      	nop
 8002164:	e000ed00 	.word	0xe000ed00

08002168 <__NVIC_EnableIRQ>:
{
 8002168:	b480      	push	{r7}
 800216a:	b083      	sub	sp, #12
 800216c:	af00      	add	r7, sp, #0
 800216e:	4603      	mov	r3, r0
 8002170:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002172:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002176:	2b00      	cmp	r3, #0
 8002178:	db0b      	blt.n	8002192 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800217a:	79fb      	ldrb	r3, [r7, #7]
 800217c:	f003 021f 	and.w	r2, r3, #31
 8002180:	4906      	ldr	r1, [pc, #24]	; (800219c <__NVIC_EnableIRQ+0x34>)
 8002182:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002186:	095b      	lsrs	r3, r3, #5
 8002188:	2001      	movs	r0, #1
 800218a:	fa00 f202 	lsl.w	r2, r0, r2
 800218e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8002192:	bf00      	nop
 8002194:	370c      	adds	r7, #12
 8002196:	46bd      	mov	sp, r7
 8002198:	bc80      	pop	{r7}
 800219a:	4770      	bx	lr
 800219c:	e000e100 	.word	0xe000e100

080021a0 <__NVIC_DisableIRQ>:
{
 80021a0:	b480      	push	{r7}
 80021a2:	b083      	sub	sp, #12
 80021a4:	af00      	add	r7, sp, #0
 80021a6:	4603      	mov	r3, r0
 80021a8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80021aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021ae:	2b00      	cmp	r3, #0
 80021b0:	db12      	blt.n	80021d8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80021b2:	79fb      	ldrb	r3, [r7, #7]
 80021b4:	f003 021f 	and.w	r2, r3, #31
 80021b8:	490a      	ldr	r1, [pc, #40]	; (80021e4 <__NVIC_DisableIRQ+0x44>)
 80021ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021be:	095b      	lsrs	r3, r3, #5
 80021c0:	2001      	movs	r0, #1
 80021c2:	fa00 f202 	lsl.w	r2, r0, r2
 80021c6:	3320      	adds	r3, #32
 80021c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80021cc:	f3bf 8f4f 	dsb	sy
}
 80021d0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80021d2:	f3bf 8f6f 	isb	sy
}
 80021d6:	bf00      	nop
}
 80021d8:	bf00      	nop
 80021da:	370c      	adds	r7, #12
 80021dc:	46bd      	mov	sp, r7
 80021de:	bc80      	pop	{r7}
 80021e0:	4770      	bx	lr
 80021e2:	bf00      	nop
 80021e4:	e000e100 	.word	0xe000e100

080021e8 <__NVIC_SetPriority>:
{
 80021e8:	b480      	push	{r7}
 80021ea:	b083      	sub	sp, #12
 80021ec:	af00      	add	r7, sp, #0
 80021ee:	4603      	mov	r3, r0
 80021f0:	6039      	str	r1, [r7, #0]
 80021f2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80021f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021f8:	2b00      	cmp	r3, #0
 80021fa:	db0a      	blt.n	8002212 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80021fc:	683b      	ldr	r3, [r7, #0]
 80021fe:	b2da      	uxtb	r2, r3
 8002200:	490c      	ldr	r1, [pc, #48]	; (8002234 <__NVIC_SetPriority+0x4c>)
 8002202:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002206:	0112      	lsls	r2, r2, #4
 8002208:	b2d2      	uxtb	r2, r2
 800220a:	440b      	add	r3, r1
 800220c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8002210:	e00a      	b.n	8002228 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002212:	683b      	ldr	r3, [r7, #0]
 8002214:	b2da      	uxtb	r2, r3
 8002216:	4908      	ldr	r1, [pc, #32]	; (8002238 <__NVIC_SetPriority+0x50>)
 8002218:	79fb      	ldrb	r3, [r7, #7]
 800221a:	f003 030f 	and.w	r3, r3, #15
 800221e:	3b04      	subs	r3, #4
 8002220:	0112      	lsls	r2, r2, #4
 8002222:	b2d2      	uxtb	r2, r2
 8002224:	440b      	add	r3, r1
 8002226:	761a      	strb	r2, [r3, #24]
}
 8002228:	bf00      	nop
 800222a:	370c      	adds	r7, #12
 800222c:	46bd      	mov	sp, r7
 800222e:	bc80      	pop	{r7}
 8002230:	4770      	bx	lr
 8002232:	bf00      	nop
 8002234:	e000e100 	.word	0xe000e100
 8002238:	e000ed00 	.word	0xe000ed00

0800223c <NVIC_EncodePriority>:
{
 800223c:	b480      	push	{r7}
 800223e:	b089      	sub	sp, #36	; 0x24
 8002240:	af00      	add	r7, sp, #0
 8002242:	60f8      	str	r0, [r7, #12]
 8002244:	60b9      	str	r1, [r7, #8]
 8002246:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002248:	68fb      	ldr	r3, [r7, #12]
 800224a:	f003 0307 	and.w	r3, r3, #7
 800224e:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002250:	69fb      	ldr	r3, [r7, #28]
 8002252:	f1c3 0307 	rsb	r3, r3, #7
 8002256:	2b04      	cmp	r3, #4
 8002258:	bf28      	it	cs
 800225a:	2304      	movcs	r3, #4
 800225c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800225e:	69fb      	ldr	r3, [r7, #28]
 8002260:	3304      	adds	r3, #4
 8002262:	2b06      	cmp	r3, #6
 8002264:	d902      	bls.n	800226c <NVIC_EncodePriority+0x30>
 8002266:	69fb      	ldr	r3, [r7, #28]
 8002268:	3b03      	subs	r3, #3
 800226a:	e000      	b.n	800226e <NVIC_EncodePriority+0x32>
 800226c:	2300      	movs	r3, #0
 800226e:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002270:	f04f 32ff 	mov.w	r2, #4294967295
 8002274:	69bb      	ldr	r3, [r7, #24]
 8002276:	fa02 f303 	lsl.w	r3, r2, r3
 800227a:	43da      	mvns	r2, r3
 800227c:	68bb      	ldr	r3, [r7, #8]
 800227e:	401a      	ands	r2, r3
 8002280:	697b      	ldr	r3, [r7, #20]
 8002282:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002284:	f04f 31ff 	mov.w	r1, #4294967295
 8002288:	697b      	ldr	r3, [r7, #20]
 800228a:	fa01 f303 	lsl.w	r3, r1, r3
 800228e:	43d9      	mvns	r1, r3
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002294:	4313      	orrs	r3, r2
}
 8002296:	4618      	mov	r0, r3
 8002298:	3724      	adds	r7, #36	; 0x24
 800229a:	46bd      	mov	sp, r7
 800229c:	bc80      	pop	{r7}
 800229e:	4770      	bx	lr

080022a0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b082      	sub	sp, #8
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80022a8:	687b      	ldr	r3, [r7, #4]
 80022aa:	3b01      	subs	r3, #1
 80022ac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80022b0:	d301      	bcc.n	80022b6 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80022b2:	2301      	movs	r3, #1
 80022b4:	e00f      	b.n	80022d6 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80022b6:	4a0a      	ldr	r2, [pc, #40]	; (80022e0 <SysTick_Config+0x40>)
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	3b01      	subs	r3, #1
 80022bc:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80022be:	210f      	movs	r1, #15
 80022c0:	f04f 30ff 	mov.w	r0, #4294967295
 80022c4:	f7ff ff90 	bl	80021e8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80022c8:	4b05      	ldr	r3, [pc, #20]	; (80022e0 <SysTick_Config+0x40>)
 80022ca:	2200      	movs	r2, #0
 80022cc:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80022ce:	4b04      	ldr	r3, [pc, #16]	; (80022e0 <SysTick_Config+0x40>)
 80022d0:	2207      	movs	r2, #7
 80022d2:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80022d4:	2300      	movs	r3, #0
}
 80022d6:	4618      	mov	r0, r3
 80022d8:	3708      	adds	r7, #8
 80022da:	46bd      	mov	sp, r7
 80022dc:	bd80      	pop	{r7, pc}
 80022de:	bf00      	nop
 80022e0:	e000e010 	.word	0xe000e010

080022e4 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b082      	sub	sp, #8
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80022ec:	6878      	ldr	r0, [r7, #4]
 80022ee:	f7ff ff09 	bl	8002104 <__NVIC_SetPriorityGrouping>
}
 80022f2:	bf00      	nop
 80022f4:	3708      	adds	r7, #8
 80022f6:	46bd      	mov	sp, r7
 80022f8:	bd80      	pop	{r7, pc}

080022fa <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80022fa:	b580      	push	{r7, lr}
 80022fc:	b086      	sub	sp, #24
 80022fe:	af00      	add	r7, sp, #0
 8002300:	4603      	mov	r3, r0
 8002302:	60b9      	str	r1, [r7, #8]
 8002304:	607a      	str	r2, [r7, #4]
 8002306:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8002308:	f7ff ff20 	bl	800214c <__NVIC_GetPriorityGrouping>
 800230c:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800230e:	687a      	ldr	r2, [r7, #4]
 8002310:	68b9      	ldr	r1, [r7, #8]
 8002312:	6978      	ldr	r0, [r7, #20]
 8002314:	f7ff ff92 	bl	800223c <NVIC_EncodePriority>
 8002318:	4602      	mov	r2, r0
 800231a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800231e:	4611      	mov	r1, r2
 8002320:	4618      	mov	r0, r3
 8002322:	f7ff ff61 	bl	80021e8 <__NVIC_SetPriority>
}
 8002326:	bf00      	nop
 8002328:	3718      	adds	r7, #24
 800232a:	46bd      	mov	sp, r7
 800232c:	bd80      	pop	{r7, pc}

0800232e <HAL_NVIC_EnableIRQ>:
  *         (For the complete STM32 Devices IRQ Channels list, please refer
  *          to the appropriate CMSIS device file (stm32wlxxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800232e:	b580      	push	{r7, lr}
 8002330:	b082      	sub	sp, #8
 8002332:	af00      	add	r7, sp, #0
 8002334:	4603      	mov	r3, r0
 8002336:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8002338:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800233c:	4618      	mov	r0, r3
 800233e:	f7ff ff13 	bl	8002168 <__NVIC_EnableIRQ>
}
 8002342:	bf00      	nop
 8002344:	3708      	adds	r7, #8
 8002346:	46bd      	mov	sp, r7
 8002348:	bd80      	pop	{r7, pc}

0800234a <HAL_NVIC_DisableIRQ>:
  *         (For the complete STM32 Devices IRQ Channels list, please refer
  *          to the appropriate CMSIS device file (stm32wlxxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800234a:	b580      	push	{r7, lr}
 800234c:	b082      	sub	sp, #8
 800234e:	af00      	add	r7, sp, #0
 8002350:	4603      	mov	r3, r0
 8002352:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8002354:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002358:	4618      	mov	r0, r3
 800235a:	f7ff ff21 	bl	80021a0 <__NVIC_DisableIRQ>
}
 800235e:	bf00      	nop
 8002360:	3708      	adds	r7, #8
 8002362:	46bd      	mov	sp, r7
 8002364:	bd80      	pop	{r7, pc}

08002366 <HAL_SYSTICK_Config>:
  * @param TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002366:	b580      	push	{r7, lr}
 8002368:	b082      	sub	sp, #8
 800236a:	af00      	add	r7, sp, #0
 800236c:	6078      	str	r0, [r7, #4]
  return SysTick_Config(TicksNumb);
 800236e:	6878      	ldr	r0, [r7, #4]
 8002370:	f7ff ff96 	bl	80022a0 <SysTick_Config>
 8002374:	4603      	mov	r3, r0
}
 8002376:	4618      	mov	r0, r3
 8002378:	3708      	adds	r7, #8
 800237a:	46bd      	mov	sp, r7
 800237c:	bd80      	pop	{r7, pc}

0800237e <HAL_CRYP_Init>:
  * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
  *         the configuration information for CRYP module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRYP_Init(CRYP_HandleTypeDef *hcryp)
{
 800237e:	b580      	push	{r7, lr}
 8002380:	b082      	sub	sp, #8
 8002382:	af00      	add	r7, sp, #0
 8002384:	6078      	str	r0, [r7, #4]
  /* Check the CRYP handle allocation */
  if (hcryp == NULL)
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	2b00      	cmp	r3, #0
 800238a:	d101      	bne.n	8002390 <HAL_CRYP_Init+0x12>
  {
    return HAL_ERROR;
 800238c:	2301      	movs	r3, #1
 800238e:	e02d      	b.n	80023ec <HAL_CRYP_Init+0x6e>

    /* Init the low level hardware */
    hcryp->MspInitCallback(hcryp);
  }
#else
  if (hcryp->State == HAL_CRYP_STATE_RESET)
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002396:	b2db      	uxtb	r3, r3
 8002398:	2b00      	cmp	r3, #0
 800239a:	d106      	bne.n	80023aa <HAL_CRYP_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hcryp->Lock = HAL_UNLOCKED;
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	2200      	movs	r2, #0
 80023a0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware */
    HAL_CRYP_MspInit(hcryp);
 80023a4:	6878      	ldr	r0, [r7, #4]
 80023a6:	f003 fb9f 	bl	8005ae8 <HAL_CRYP_MspInit>
  }
#endif /* (USE_HAL_CRYP_REGISTER_CALLBACKS) */

  /* Set the key size (This bit field is do not care in the DES or TDES modes), data type and Algorithm */
  MODIFY_REG(hcryp->Instance->CR, AES_CR_DATATYPE | AES_CR_KEYSIZE | AES_CR_CHMOD, hcryp->Init.DataType | hcryp->Init.KeySize | hcryp->Init.Algorithm);
 80023aa:	687b      	ldr	r3, [r7, #4]
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	f423 23a0 	bic.w	r3, r3, #327680	; 0x50000
 80023b4:	f023 0366 	bic.w	r3, r3, #102	; 0x66
 80023b8:	687a      	ldr	r2, [r7, #4]
 80023ba:	6851      	ldr	r1, [r2, #4]
 80023bc:	687a      	ldr	r2, [r7, #4]
 80023be:	6892      	ldr	r2, [r2, #8]
 80023c0:	4311      	orrs	r1, r2
 80023c2:	687a      	ldr	r2, [r7, #4]
 80023c4:	6952      	ldr	r2, [r2, #20]
 80023c6:	4311      	orrs	r1, r2
 80023c8:	687a      	ldr	r2, [r7, #4]
 80023ca:	6812      	ldr	r2, [r2, #0]
 80023cc:	430b      	orrs	r3, r1
 80023ce:	6013      	str	r3, [r2, #0]

  /* Reset Error Code field */
  hcryp->ErrorCode = HAL_CRYP_ERROR_NONE;
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	2200      	movs	r2, #0
 80023d4:	655a      	str	r2, [r3, #84]	; 0x54

  /* Reset peripheral Key and IV configuration flag */
  hcryp->KeyIVConfig = 0U;
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	2200      	movs	r2, #0
 80023da:	659a      	str	r2, [r3, #88]	; 0x58

  /* Change the CRYP state */
  hcryp->State = HAL_CRYP_STATE_READY;
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	2201      	movs	r2, #1
 80023e0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Set the default CRYP phase */
  hcryp->Phase = CRYP_PHASE_READY;
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	2201      	movs	r2, #1
 80023e8:	645a      	str	r2, [r3, #68]	; 0x44

  /* Return function status */
  return HAL_OK;
 80023ea:	2300      	movs	r3, #0
}
 80023ec:	4618      	mov	r0, r3
 80023ee:	3708      	adds	r7, #8
 80023f0:	46bd      	mov	sp, r7
 80023f2:	bd80      	pop	{r7, pc}

080023f4 <HAL_CRYP_DeInit>:
  * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
  *         the configuration information for CRYP module
  * @retval HAL status
*/
HAL_StatusTypeDef HAL_CRYP_DeInit(CRYP_HandleTypeDef *hcryp)
{
 80023f4:	b580      	push	{r7, lr}
 80023f6:	b082      	sub	sp, #8
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	6078      	str	r0, [r7, #4]
  /* Check the CRYP handle allocation */
  if (hcryp == NULL)
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d101      	bne.n	8002406 <HAL_CRYP_DeInit+0x12>
  {
    return HAL_ERROR;
 8002402:	2301      	movs	r3, #1
 8002404:	e020      	b.n	8002448 <HAL_CRYP_DeInit+0x54>
  }

  /* Set the default CRYP phase */
  hcryp->Phase = CRYP_PHASE_READY;
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	2201      	movs	r2, #1
 800240a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset CrypInCount and CrypOutCount */
  hcryp->CrypInCount = 0;
 800240c:	687b      	ldr	r3, [r7, #4]
 800240e:	2200      	movs	r2, #0
 8002410:	87da      	strh	r2, [r3, #62]	; 0x3e
  hcryp->CrypOutCount = 0;
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	2200      	movs	r2, #0
 8002416:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
  hcryp->CrypHeaderCount = 0;
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	2200      	movs	r2, #0
 800241e:	879a      	strh	r2, [r3, #60]	; 0x3c

  /* Disable the CRYP peripheral clock */
  __HAL_CRYP_DISABLE(hcryp);
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	681a      	ldr	r2, [r3, #0]
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	f022 0201 	bic.w	r2, r2, #1
 800242e:	601a      	str	r2, [r3, #0]
  hcryp->MspDeInitCallback(hcryp);

#else

  /* DeInit the low level hardware: CLOCK, NVIC.*/
  HAL_CRYP_MspDeInit(hcryp);
 8002430:	6878      	ldr	r0, [r7, #4]
 8002432:	f003 fb75 	bl	8005b20 <HAL_CRYP_MspDeInit>

#endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */

  /* Change the CRYP state */
  hcryp->State = HAL_CRYP_STATE_RESET;
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	2200      	movs	r2, #0
 800243a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Release Lock */
  __HAL_UNLOCK(hcryp);
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	2200      	movs	r2, #0
 8002442:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Return function status */
  return HAL_OK;
 8002446:	2300      	movs	r3, #0
}
 8002448:	4618      	mov	r0, r3
 800244a:	3708      	adds	r7, #8
 800244c:	46bd      	mov	sp, r7
 800244e:	bd80      	pop	{r7, pc}

08002450 <HAL_CRYP_Encrypt>:
  * @param  Output Pointer to the output buffer(ciphertext)
  * @param  Timeout Specify Timeout value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRYP_Encrypt(CRYP_HandleTypeDef *hcryp, uint32_t *Input, uint16_t Size, uint32_t *Output, uint32_t Timeout)
{
 8002450:	b580      	push	{r7, lr}
 8002452:	b086      	sub	sp, #24
 8002454:	af00      	add	r7, sp, #0
 8002456:	60f8      	str	r0, [r7, #12]
 8002458:	60b9      	str	r1, [r7, #8]
 800245a:	603b      	str	r3, [r7, #0]
 800245c:	4613      	mov	r3, r2
 800245e:	80fb      	strh	r3, [r7, #6]

  /* Check input buffer size */
  assert_param(IS_CRYP_BUFFERSIZE(algo_assert, hcryp->Init.DataWidthUnit, Size));
#endif /* USE_FULL_ASSERT */

  if (hcryp->State == HAL_CRYP_STATE_READY)
 8002460:	68fb      	ldr	r3, [r7, #12]
 8002462:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8002466:	b2db      	uxtb	r3, r3
 8002468:	2b01      	cmp	r3, #1
 800246a:	d17c      	bne.n	8002566 <HAL_CRYP_Encrypt+0x116>
  {
    /* Change state Busy */
    hcryp->State = HAL_CRYP_STATE_BUSY;
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	2202      	movs	r2, #2
 8002470:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    /* Process locked */
    __HAL_LOCK(hcryp);
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800247a:	2b01      	cmp	r3, #1
 800247c:	d101      	bne.n	8002482 <HAL_CRYP_Encrypt+0x32>
 800247e:	2302      	movs	r3, #2
 8002480:	e07a      	b.n	8002578 <HAL_CRYP_Encrypt+0x128>
 8002482:	68fb      	ldr	r3, [r7, #12]
 8002484:	2201      	movs	r2, #1
 8002486:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /*  Reset CrypInCount, CrypOutCount and Initialize pCrypInBuffPtr and pCrypOutBuffPtr parameters*/
    hcryp->CrypInCount = 0U;
 800248a:	68fb      	ldr	r3, [r7, #12]
 800248c:	2200      	movs	r2, #0
 800248e:	87da      	strh	r2, [r3, #62]	; 0x3e
    hcryp->CrypOutCount = 0U;
 8002490:	68fb      	ldr	r3, [r7, #12]
 8002492:	2200      	movs	r2, #0
 8002494:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    hcryp->pCrypInBuffPtr = Input;
 8002498:	68fb      	ldr	r3, [r7, #12]
 800249a:	68ba      	ldr	r2, [r7, #8]
 800249c:	635a      	str	r2, [r3, #52]	; 0x34
    hcryp->pCrypOutBuffPtr = Output;
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	683a      	ldr	r2, [r7, #0]
 80024a2:	639a      	str	r2, [r3, #56]	; 0x38

    /*  Calculate Size parameter in Byte*/
    if (hcryp->Init.DataWidthUnit == CRYP_DATAWIDTHUNIT_WORD)
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d106      	bne.n	80024ba <HAL_CRYP_Encrypt+0x6a>
    {
      hcryp->Size = Size * 4U;
 80024ac:	88fb      	ldrh	r3, [r7, #6]
 80024ae:	009b      	lsls	r3, r3, #2
 80024b0:	b29a      	uxth	r2, r3
 80024b2:	68fb      	ldr	r3, [r7, #12]
 80024b4:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 80024b8:	e003      	b.n	80024c2 <HAL_CRYP_Encrypt+0x72>
    }
    else
    {
      hcryp->Size = Size;
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	88fa      	ldrh	r2, [r7, #6]
 80024be:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
    }

    /* Set the operating mode*/
    MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_ENCRYPT);
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	681a      	ldr	r2, [r3, #0]
 80024c8:	68fb      	ldr	r3, [r7, #12]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	f022 0218 	bic.w	r2, r2, #24
 80024d0:	601a      	str	r2, [r3, #0]

    /* algo get algorithm selected */
    algo = hcryp->Instance->CR & AES_CR_CHMOD;
 80024d2:	68fb      	ldr	r3, [r7, #12]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	681a      	ldr	r2, [r3, #0]
 80024d8:	4b29      	ldr	r3, [pc, #164]	; (8002580 <HAL_CRYP_Encrypt+0x130>)
 80024da:	4013      	ands	r3, r2
 80024dc:	613b      	str	r3, [r7, #16]

    switch (algo)
 80024de:	693b      	ldr	r3, [r7, #16]
 80024e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024e4:	d023      	beq.n	800252e <HAL_CRYP_Encrypt+0xde>
 80024e6:	693b      	ldr	r3, [r7, #16]
 80024e8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024ec:	d826      	bhi.n	800253c <HAL_CRYP_Encrypt+0xec>
 80024ee:	693b      	ldr	r3, [r7, #16]
 80024f0:	2b60      	cmp	r3, #96	; 0x60
 80024f2:	d015      	beq.n	8002520 <HAL_CRYP_Encrypt+0xd0>
 80024f4:	693b      	ldr	r3, [r7, #16]
 80024f6:	2b60      	cmp	r3, #96	; 0x60
 80024f8:	d820      	bhi.n	800253c <HAL_CRYP_Encrypt+0xec>
 80024fa:	693b      	ldr	r3, [r7, #16]
 80024fc:	2b40      	cmp	r3, #64	; 0x40
 80024fe:	d008      	beq.n	8002512 <HAL_CRYP_Encrypt+0xc2>
 8002500:	693b      	ldr	r3, [r7, #16]
 8002502:	2b40      	cmp	r3, #64	; 0x40
 8002504:	d81a      	bhi.n	800253c <HAL_CRYP_Encrypt+0xec>
 8002506:	693b      	ldr	r3, [r7, #16]
 8002508:	2b00      	cmp	r3, #0
 800250a:	d002      	beq.n	8002512 <HAL_CRYP_Encrypt+0xc2>
 800250c:	693b      	ldr	r3, [r7, #16]
 800250e:	2b20      	cmp	r3, #32
 8002510:	d114      	bne.n	800253c <HAL_CRYP_Encrypt+0xec>
      case CRYP_AES_ECB:
      case CRYP_AES_CBC:
      case CRYP_AES_CTR:

        /* AES encryption */
        status = CRYP_AES_Encrypt(hcryp, Timeout);
 8002512:	6a39      	ldr	r1, [r7, #32]
 8002514:	68f8      	ldr	r0, [r7, #12]
 8002516:	f000 f8da 	bl	80026ce <CRYP_AES_Encrypt>
 800251a:	4603      	mov	r3, r0
 800251c:	75fb      	strb	r3, [r7, #23]
        break;
 800251e:	e016      	b.n	800254e <HAL_CRYP_Encrypt+0xfe>

      case CRYP_AES_GCM_GMAC:

        /* AES GCM encryption */
        status = CRYP_AESGCM_Process(hcryp, Timeout) ;
 8002520:	6a39      	ldr	r1, [r7, #32]
 8002522:	68f8      	ldr	r0, [r7, #12]
 8002524:	f000 fbc1 	bl	8002caa <CRYP_AESGCM_Process>
 8002528:	4603      	mov	r3, r0
 800252a:	75fb      	strb	r3, [r7, #23]
        break;
 800252c:	e00f      	b.n	800254e <HAL_CRYP_Encrypt+0xfe>

      case CRYP_AES_CCM:

        /* AES CCM encryption */
        status = CRYP_AESCCM_Process(hcryp, Timeout);
 800252e:	6a39      	ldr	r1, [r7, #32]
 8002530:	68f8      	ldr	r0, [r7, #12]
 8002532:	f000 fd62 	bl	8002ffa <CRYP_AESCCM_Process>
 8002536:	4603      	mov	r3, r0
 8002538:	75fb      	strb	r3, [r7, #23]
        break;
 800253a:	e008      	b.n	800254e <HAL_CRYP_Encrypt+0xfe>

      default:
        hcryp->ErrorCode |= HAL_CRYP_ERROR_NOT_SUPPORTED;
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002540:	f043 0220 	orr.w	r2, r3, #32
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	655a      	str	r2, [r3, #84]	; 0x54
        status = HAL_ERROR;
 8002548:	2301      	movs	r3, #1
 800254a:	75fb      	strb	r3, [r7, #23]
        break;
 800254c:	bf00      	nop
    }

    if (status == HAL_OK)
 800254e:	7dfb      	ldrb	r3, [r7, #23]
 8002550:	2b00      	cmp	r3, #0
 8002552:	d110      	bne.n	8002576 <HAL_CRYP_Encrypt+0x126>
    {
      /* Change the CRYP peripheral state */
      hcryp->State = HAL_CRYP_STATE_READY;
 8002554:	68fb      	ldr	r3, [r7, #12]
 8002556:	2201      	movs	r2, #1
 8002558:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

      /* Process unlocked */
      __HAL_UNLOCK(hcryp);
 800255c:	68fb      	ldr	r3, [r7, #12]
 800255e:	2200      	movs	r2, #0
 8002560:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8002564:	e007      	b.n	8002576 <HAL_CRYP_Encrypt+0x126>
    }
  }
  else
  {
    /* Busy error code field */
    hcryp->ErrorCode |= HAL_CRYP_ERROR_BUSY;
 8002566:	68fb      	ldr	r3, [r7, #12]
 8002568:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800256a:	f043 0208 	orr.w	r2, r3, #8
 800256e:	68fb      	ldr	r3, [r7, #12]
 8002570:	655a      	str	r2, [r3, #84]	; 0x54
    status = HAL_ERROR;
 8002572:	2301      	movs	r3, #1
 8002574:	75fb      	strb	r3, [r7, #23]
  }

  /* Return function status */
  return status;
 8002576:	7dfb      	ldrb	r3, [r7, #23]
}
 8002578:	4618      	mov	r0, r3
 800257a:	3718      	adds	r7, #24
 800257c:	46bd      	mov	sp, r7
 800257e:	bd80      	pop	{r7, pc}
 8002580:	00010060 	.word	0x00010060

08002584 <HAL_CRYP_Decrypt>:
  * @param  Output Pointer to the output buffer(plaintext)
  * @param  Timeout Specify Timeout value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRYP_Decrypt(CRYP_HandleTypeDef *hcryp, uint32_t *Input, uint16_t Size, uint32_t *Output, uint32_t Timeout)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	b086      	sub	sp, #24
 8002588:	af00      	add	r7, sp, #0
 800258a:	60f8      	str	r0, [r7, #12]
 800258c:	60b9      	str	r1, [r7, #8]
 800258e:	603b      	str	r3, [r7, #0]
 8002590:	4613      	mov	r3, r2
 8002592:	80fb      	strh	r3, [r7, #6]

  /* Check input buffer size */
  assert_param(IS_CRYP_BUFFERSIZE(algo_assert, hcryp->Init.DataWidthUnit, Size));
#endif /* USE_FULL_ASSERT */

  if (hcryp->State == HAL_CRYP_STATE_READY)
 8002594:	68fb      	ldr	r3, [r7, #12]
 8002596:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800259a:	b2db      	uxtb	r3, r3
 800259c:	2b01      	cmp	r3, #1
 800259e:	d17e      	bne.n	800269e <HAL_CRYP_Decrypt+0x11a>
  {
    /* Change state Busy */
    hcryp->State = HAL_CRYP_STATE_BUSY;
 80025a0:	68fb      	ldr	r3, [r7, #12]
 80025a2:	2202      	movs	r2, #2
 80025a4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    /* Process locked */
    __HAL_LOCK(hcryp);
 80025a8:	68fb      	ldr	r3, [r7, #12]
 80025aa:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80025ae:	2b01      	cmp	r3, #1
 80025b0:	d101      	bne.n	80025b6 <HAL_CRYP_Decrypt+0x32>
 80025b2:	2302      	movs	r3, #2
 80025b4:	e07c      	b.n	80026b0 <HAL_CRYP_Decrypt+0x12c>
 80025b6:	68fb      	ldr	r3, [r7, #12]
 80025b8:	2201      	movs	r2, #1
 80025ba:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /*  Reset CrypInCount, CrypOutCount and Initialize pCrypInBuffPtr and pCrypOutBuffPtr  parameters*/
    hcryp->CrypInCount = 0U;
 80025be:	68fb      	ldr	r3, [r7, #12]
 80025c0:	2200      	movs	r2, #0
 80025c2:	87da      	strh	r2, [r3, #62]	; 0x3e
    hcryp->CrypOutCount = 0U;
 80025c4:	68fb      	ldr	r3, [r7, #12]
 80025c6:	2200      	movs	r2, #0
 80025c8:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    hcryp->pCrypInBuffPtr = Input;
 80025cc:	68fb      	ldr	r3, [r7, #12]
 80025ce:	68ba      	ldr	r2, [r7, #8]
 80025d0:	635a      	str	r2, [r3, #52]	; 0x34
    hcryp->pCrypOutBuffPtr = Output;
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	683a      	ldr	r2, [r7, #0]
 80025d6:	639a      	str	r2, [r3, #56]	; 0x38

    /*  Calculate Size parameter in Byte*/
    if (hcryp->Init.DataWidthUnit == CRYP_DATAWIDTHUNIT_WORD)
 80025d8:	68fb      	ldr	r3, [r7, #12]
 80025da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d106      	bne.n	80025ee <HAL_CRYP_Decrypt+0x6a>
    {
      hcryp->Size = Size * 4U;
 80025e0:	88fb      	ldrh	r3, [r7, #6]
 80025e2:	009b      	lsls	r3, r3, #2
 80025e4:	b29a      	uxth	r2, r3
 80025e6:	68fb      	ldr	r3, [r7, #12]
 80025e8:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 80025ec:	e003      	b.n	80025f6 <HAL_CRYP_Decrypt+0x72>
    }
    else
    {
      hcryp->Size = Size;
 80025ee:	68fb      	ldr	r3, [r7, #12]
 80025f0:	88fa      	ldrh	r2, [r7, #6]
 80025f2:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
    }

    /* Set Decryption operating mode*/
    MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_DECRYPT);
 80025f6:	68fb      	ldr	r3, [r7, #12]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	f023 0218 	bic.w	r2, r3, #24
 8002600:	68fb      	ldr	r3, [r7, #12]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	f042 0210 	orr.w	r2, r2, #16
 8002608:	601a      	str	r2, [r3, #0]

    /* algo get algorithm selected */
    algo = hcryp->Instance->CR & AES_CR_CHMOD;
 800260a:	68fb      	ldr	r3, [r7, #12]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	681a      	ldr	r2, [r3, #0]
 8002610:	4b29      	ldr	r3, [pc, #164]	; (80026b8 <HAL_CRYP_Decrypt+0x134>)
 8002612:	4013      	ands	r3, r2
 8002614:	613b      	str	r3, [r7, #16]

    switch (algo)
 8002616:	693b      	ldr	r3, [r7, #16]
 8002618:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800261c:	d023      	beq.n	8002666 <HAL_CRYP_Decrypt+0xe2>
 800261e:	693b      	ldr	r3, [r7, #16]
 8002620:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002624:	d826      	bhi.n	8002674 <HAL_CRYP_Decrypt+0xf0>
 8002626:	693b      	ldr	r3, [r7, #16]
 8002628:	2b60      	cmp	r3, #96	; 0x60
 800262a:	d015      	beq.n	8002658 <HAL_CRYP_Decrypt+0xd4>
 800262c:	693b      	ldr	r3, [r7, #16]
 800262e:	2b60      	cmp	r3, #96	; 0x60
 8002630:	d820      	bhi.n	8002674 <HAL_CRYP_Decrypt+0xf0>
 8002632:	693b      	ldr	r3, [r7, #16]
 8002634:	2b40      	cmp	r3, #64	; 0x40
 8002636:	d008      	beq.n	800264a <HAL_CRYP_Decrypt+0xc6>
 8002638:	693b      	ldr	r3, [r7, #16]
 800263a:	2b40      	cmp	r3, #64	; 0x40
 800263c:	d81a      	bhi.n	8002674 <HAL_CRYP_Decrypt+0xf0>
 800263e:	693b      	ldr	r3, [r7, #16]
 8002640:	2b00      	cmp	r3, #0
 8002642:	d002      	beq.n	800264a <HAL_CRYP_Decrypt+0xc6>
 8002644:	693b      	ldr	r3, [r7, #16]
 8002646:	2b20      	cmp	r3, #32
 8002648:	d114      	bne.n	8002674 <HAL_CRYP_Decrypt+0xf0>
      case CRYP_AES_ECB:
      case CRYP_AES_CBC:
      case CRYP_AES_CTR:

        /* AES decryption */
        status = CRYP_AES_Decrypt(hcryp, Timeout);
 800264a:	6a39      	ldr	r1, [r7, #32]
 800264c:	68f8      	ldr	r0, [r7, #12]
 800264e:	f000 f8c6 	bl	80027de <CRYP_AES_Decrypt>
 8002652:	4603      	mov	r3, r0
 8002654:	75fb      	strb	r3, [r7, #23]
        break;
 8002656:	e016      	b.n	8002686 <HAL_CRYP_Decrypt+0x102>

      case CRYP_AES_GCM_GMAC:

        /* AES GCM decryption */
        status = CRYP_AESGCM_Process(hcryp, Timeout) ;
 8002658:	6a39      	ldr	r1, [r7, #32]
 800265a:	68f8      	ldr	r0, [r7, #12]
 800265c:	f000 fb25 	bl	8002caa <CRYP_AESGCM_Process>
 8002660:	4603      	mov	r3, r0
 8002662:	75fb      	strb	r3, [r7, #23]
        break;
 8002664:	e00f      	b.n	8002686 <HAL_CRYP_Decrypt+0x102>

      case CRYP_AES_CCM:

        /* AES CCM decryption */
        status = CRYP_AESCCM_Process(hcryp, Timeout);
 8002666:	6a39      	ldr	r1, [r7, #32]
 8002668:	68f8      	ldr	r0, [r7, #12]
 800266a:	f000 fcc6 	bl	8002ffa <CRYP_AESCCM_Process>
 800266e:	4603      	mov	r3, r0
 8002670:	75fb      	strb	r3, [r7, #23]
        break;
 8002672:	e008      	b.n	8002686 <HAL_CRYP_Decrypt+0x102>

      default:
        hcryp->ErrorCode |= HAL_CRYP_ERROR_NOT_SUPPORTED;
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002678:	f043 0220 	orr.w	r2, r3, #32
 800267c:	68fb      	ldr	r3, [r7, #12]
 800267e:	655a      	str	r2, [r3, #84]	; 0x54
        status = HAL_ERROR;
 8002680:	2301      	movs	r3, #1
 8002682:	75fb      	strb	r3, [r7, #23]
        break;
 8002684:	bf00      	nop
    }

    if (status == HAL_OK)
 8002686:	7dfb      	ldrb	r3, [r7, #23]
 8002688:	2b00      	cmp	r3, #0
 800268a:	d110      	bne.n	80026ae <HAL_CRYP_Decrypt+0x12a>
    {
      /* Change the CRYP peripheral state */
      hcryp->State = HAL_CRYP_STATE_READY;
 800268c:	68fb      	ldr	r3, [r7, #12]
 800268e:	2201      	movs	r2, #1
 8002690:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

      /* Process unlocked */
      __HAL_UNLOCK(hcryp);
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	2200      	movs	r2, #0
 8002698:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800269c:	e007      	b.n	80026ae <HAL_CRYP_Decrypt+0x12a>
    }
  }
  else
  {
    /* Busy error code field */
    hcryp->ErrorCode |= HAL_CRYP_ERROR_BUSY;
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026a2:	f043 0208 	orr.w	r2, r3, #8
 80026a6:	68fb      	ldr	r3, [r7, #12]
 80026a8:	655a      	str	r2, [r3, #84]	; 0x54
    status = HAL_ERROR;
 80026aa:	2301      	movs	r3, #1
 80026ac:	75fb      	strb	r3, [r7, #23]
  }

  /* Return function status */
  return status;
 80026ae:	7dfb      	ldrb	r3, [r7, #23]
}
 80026b0:	4618      	mov	r0, r3
 80026b2:	3718      	adds	r7, #24
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}
 80026b8:	00010060 	.word	0x00010060

080026bc <HAL_CRYP_ErrorCallback>:
  * @param  hcryp pointer to a CRYP_HandleTypeDef structure that contains
  *         the configuration information for CRYP module.
  * @retval None
  */
__weak void HAL_CRYP_ErrorCallback(CRYP_HandleTypeDef *hcryp)
{
 80026bc:	b480      	push	{r7}
 80026be:	b083      	sub	sp, #12
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
  UNUSED(hcryp);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_CRYP_ErrorCallback can be implemented in the user file
   */
}
 80026c4:	bf00      	nop
 80026c6:	370c      	adds	r7, #12
 80026c8:	46bd      	mov	sp, r7
 80026ca:	bc80      	pop	{r7}
 80026cc:	4770      	bx	lr

080026ce <CRYP_AES_Encrypt>:
  * @param  hcryp pointer to a CRYP_HandleTypeDef structure
  * @param  Timeout specify Timeout value
  * @retval HAL status
  */
static HAL_StatusTypeDef CRYP_AES_Encrypt(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 80026ce:	b580      	push	{r7, lr}
 80026d0:	b084      	sub	sp, #16
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
 80026d6:	6039      	str	r1, [r7, #0]
  uint16_t incount;  /* Temporary CrypInCount Value */
  uint16_t outcount;  /* Temporary CrypOutCount Value */
  uint32_t DoKeyIVConfig = 1U; /* By default, carry out peripheral Key and IV configuration */
 80026d8:	2301      	movs	r3, #1
 80026da:	60bb      	str	r3, [r7, #8]

  if ((hcryp->Init.KeyIVConfigSkip == CRYP_KEYIVCONFIG_ONCE)|| (hcryp->Init.KeyIVConfigSkip == CRYP_IVCONFIG_ONCE))
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026e0:	2b01      	cmp	r3, #1
 80026e2:	d003      	beq.n	80026ec <CRYP_AES_Encrypt+0x1e>
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026e8:	2b04      	cmp	r3, #4
 80026ea:	d109      	bne.n	8002700 <CRYP_AES_Encrypt+0x32>
  {
    if (hcryp->KeyIVConfig == 1U)
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80026f0:	2b01      	cmp	r3, #1
 80026f2:	d102      	bne.n	80026fa <CRYP_AES_Encrypt+0x2c>
    {
      /* If the Key and IV configuration has to be done only once
         and if it has already been done, skip it */
      DoKeyIVConfig = 0U;
 80026f4:	2300      	movs	r3, #0
 80026f6:	60bb      	str	r3, [r7, #8]
 80026f8:	e002      	b.n	8002700 <CRYP_AES_Encrypt+0x32>
    else
    {
      /* If the Key and IV configuration has to be done only once
         and if it has not been done already, do it and set KeyIVConfig
         to keep track it won't have to be done again next time */
      hcryp->KeyIVConfig = 1U;
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	2201      	movs	r2, #1
 80026fe:	659a      	str	r2, [r3, #88]	; 0x58
    }
  }

  if (DoKeyIVConfig == 1U)
 8002700:	68bb      	ldr	r3, [r7, #8]
 8002702:	2b01      	cmp	r3, #1
 8002704:	d122      	bne.n	800274c <CRYP_AES_Encrypt+0x7e>
  {
    /*  Set the Key*/
    CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	689b      	ldr	r3, [r3, #8]
 800270a:	4619      	mov	r1, r3
 800270c:	6878      	ldr	r0, [r7, #4]
 800270e:	f000 fa6c 	bl	8002bea <CRYP_SetKey>

    if (hcryp->Init.Algorithm != CRYP_AES_ECB)
 8002712:	687b      	ldr	r3, [r7, #4]
 8002714:	695b      	ldr	r3, [r3, #20]
 8002716:	2b00      	cmp	r3, #0
 8002718:	d022      	beq.n	8002760 <CRYP_AES_Encrypt+0x92>
    {
      /* Set the Initialization Vector*/
      hcryp->Instance->IVR3 = *(uint32_t *)(hcryp->Init.pInitVect);
 800271a:	687b      	ldr	r3, [r7, #4]
 800271c:	691a      	ldr	r2, [r3, #16]
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	6812      	ldr	r2, [r2, #0]
 8002724:	62da      	str	r2, [r3, #44]	; 0x2c
      hcryp->Instance->IVR2 = *(uint32_t *)(hcryp->Init.pInitVect + 1U);
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	691a      	ldr	r2, [r3, #16]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	6852      	ldr	r2, [r2, #4]
 8002730:	629a      	str	r2, [r3, #40]	; 0x28
      hcryp->Instance->IVR1 = *(uint32_t *)(hcryp->Init.pInitVect + 2U);
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	691a      	ldr	r2, [r3, #16]
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	681b      	ldr	r3, [r3, #0]
 800273a:	6892      	ldr	r2, [r2, #8]
 800273c:	625a      	str	r2, [r3, #36]	; 0x24
      hcryp->Instance->IVR0 = *(uint32_t *)(hcryp->Init.pInitVect + 3U);
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	691a      	ldr	r2, [r3, #16]
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	68d2      	ldr	r2, [r2, #12]
 8002748:	621a      	str	r2, [r3, #32]
 800274a:	e009      	b.n	8002760 <CRYP_AES_Encrypt+0x92>
    }
  } /* if (DoKeyIVConfig == 1U) */
  else
  {
    /* interleave mode Key configuration  */
    if (hcryp->Init.KeyIVConfigSkip == CRYP_IVCONFIG_ONCE)
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002750:	2b04      	cmp	r3, #4
 8002752:	d105      	bne.n	8002760 <CRYP_AES_Encrypt+0x92>
    {
      /* Set the Key */
      CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	689b      	ldr	r3, [r3, #8]
 8002758:	4619      	mov	r1, r3
 800275a:	6878      	ldr	r0, [r7, #4]
 800275c:	f000 fa45 	bl	8002bea <CRYP_SetKey>
    }
  }
  /* Set the phase */
  hcryp->Phase = CRYP_PHASE_PROCESS;
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	2202      	movs	r2, #2
 8002764:	645a      	str	r2, [r3, #68]	; 0x44

  /* Enable CRYP */
  __HAL_CRYP_ENABLE(hcryp);
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	681a      	ldr	r2, [r3, #0]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f042 0201 	orr.w	r2, r2, #1
 8002774:	601a      	str	r2, [r3, #0]

  incount = hcryp->CrypInCount;
 8002776:	687b      	ldr	r3, [r7, #4]
 8002778:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800277a:	81fb      	strh	r3, [r7, #14]
  outcount = hcryp->CrypOutCount;
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002782:	81bb      	strh	r3, [r7, #12]
  while ((incount < (hcryp->Size / 4U)) && (outcount < (hcryp->Size / 4U)))
 8002784:	e00a      	b.n	800279c <CRYP_AES_Encrypt+0xce>
  {
    /* Write plain Ddta and get cipher data */
    CRYP_AES_ProcessData(hcryp, Timeout);
 8002786:	6839      	ldr	r1, [r7, #0]
 8002788:	6878      	ldr	r0, [r7, #4]
 800278a:	f000 f976 	bl	8002a7a <CRYP_AES_ProcessData>
    incount = hcryp->CrypInCount;
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002792:	81fb      	strh	r3, [r7, #14]
    outcount = hcryp->CrypOutCount;
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 800279a:	81bb      	strh	r3, [r7, #12]
  while ((incount < (hcryp->Size / 4U)) && (outcount < (hcryp->Size / 4U)))
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 80027a2:	089b      	lsrs	r3, r3, #2
 80027a4:	b29b      	uxth	r3, r3
 80027a6:	89fa      	ldrh	r2, [r7, #14]
 80027a8:	429a      	cmp	r2, r3
 80027aa:	d207      	bcs.n	80027bc <CRYP_AES_Encrypt+0xee>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 80027b2:	089b      	lsrs	r3, r3, #2
 80027b4:	b29b      	uxth	r3, r3
 80027b6:	89ba      	ldrh	r2, [r7, #12]
 80027b8:	429a      	cmp	r2, r3
 80027ba:	d3e4      	bcc.n	8002786 <CRYP_AES_Encrypt+0xb8>
  }

  /* Disable CRYP */
  __HAL_CRYP_DISABLE(hcryp);
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	681a      	ldr	r2, [r3, #0]
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	f022 0201 	bic.w	r2, r2, #1
 80027ca:	601a      	str	r2, [r3, #0]

  /* Change the CRYP state */
  hcryp->State = HAL_CRYP_STATE_READY;
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	2201      	movs	r2, #1
 80027d0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Return function status */
  return HAL_OK;
 80027d4:	2300      	movs	r3, #0
}
 80027d6:	4618      	mov	r0, r3
 80027d8:	3710      	adds	r7, #16
 80027da:	46bd      	mov	sp, r7
 80027dc:	bd80      	pop	{r7, pc}

080027de <CRYP_AES_Decrypt>:
  * @param  hcryp pointer to a CRYP_HandleTypeDef structure
  * @param  Timeout Specify Timeout value
  * @retval HAL status
*/
static HAL_StatusTypeDef CRYP_AES_Decrypt(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 80027de:	b580      	push	{r7, lr}
 80027e0:	b084      	sub	sp, #16
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	6078      	str	r0, [r7, #4]
 80027e6:	6039      	str	r1, [r7, #0]
  uint16_t incount;  /* Temporary CrypInCount Value */
  uint16_t outcount;  /* Temporary CrypOutCount Value */
  uint32_t DoKeyIVConfig = 1U; /* By default, carry out peripheral Key and IV configuration */
 80027e8:	2301      	movs	r3, #1
 80027ea:	60bb      	str	r3, [r7, #8]

  if ((hcryp->Init.KeyIVConfigSkip == CRYP_KEYIVCONFIG_ONCE) || (hcryp->Init.KeyIVConfigSkip == CRYP_IVCONFIG_ONCE))
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80027f0:	2b01      	cmp	r3, #1
 80027f2:	d003      	beq.n	80027fc <CRYP_AES_Decrypt+0x1e>
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80027f8:	2b04      	cmp	r3, #4
 80027fa:	d109      	bne.n	8002810 <CRYP_AES_Decrypt+0x32>
  {
    if (hcryp->KeyIVConfig == 1U)
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002800:	2b01      	cmp	r3, #1
 8002802:	d102      	bne.n	800280a <CRYP_AES_Decrypt+0x2c>
    {
      /* If the Key and IV configuration has to be done only once
         and if it has already been done, skip it */
      DoKeyIVConfig = 0U;
 8002804:	2300      	movs	r3, #0
 8002806:	60bb      	str	r3, [r7, #8]
 8002808:	e002      	b.n	8002810 <CRYP_AES_Decrypt+0x32>
    else
    {
      /* If the Key and IV configuration has to be done only once
         and if it has not been done already, do it and set KeyIVConfig
         to keep track it won't have to be done again next time */
      hcryp->KeyIVConfig = 1U;
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	2201      	movs	r2, #1
 800280e:	659a      	str	r2, [r3, #88]	; 0x58
    }
  }

  if (DoKeyIVConfig == 1U)
 8002810:	68bb      	ldr	r3, [r7, #8]
 8002812:	2b01      	cmp	r3, #1
 8002814:	f040 8086 	bne.w	8002924 <CRYP_AES_Decrypt+0x146>
  {
    /*  Key preparation for ECB/CBC */
    if (hcryp->Init.Algorithm != CRYP_AES_CTR)   /*ECB or CBC*/
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	695b      	ldr	r3, [r3, #20]
 800281c:	2b40      	cmp	r3, #64	; 0x40
 800281e:	d05d      	beq.n	80028dc <CRYP_AES_Decrypt+0xfe>
    {
      if (hcryp->AutoKeyDerivation == DISABLE)/*Mode 2 Key preparation*/
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8002826:	2b00      	cmp	r3, #0
 8002828:	d149      	bne.n	80028be <CRYP_AES_Decrypt+0xe0>
      {
        /* Set key preparation for decryption operating mode*/
        MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_KEYDERIVATION);
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	f023 0218 	bic.w	r2, r3, #24
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	f042 0208 	orr.w	r2, r2, #8
 800283c:	601a      	str	r2, [r3, #0]

        /*  Set the Key*/
        CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	689b      	ldr	r3, [r3, #8]
 8002842:	4619      	mov	r1, r3
 8002844:	6878      	ldr	r0, [r7, #4]
 8002846:	f000 f9d0 	bl	8002bea <CRYP_SetKey>

        /* Enable CRYP */
        __HAL_CRYP_ENABLE(hcryp);
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	681a      	ldr	r2, [r3, #0]
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	f042 0201 	orr.w	r2, r2, #1
 8002858:	601a      	str	r2, [r3, #0]

        /* Wait for CCF flag to be raised */
        if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 800285a:	6839      	ldr	r1, [r7, #0]
 800285c:	6878      	ldr	r0, [r7, #4]
 800285e:	f000 ff4f 	bl	8003700 <CRYP_WaitOnCCFlag>
 8002862:	4603      	mov	r3, r0
 8002864:	2b00      	cmp	r3, #0
 8002866:	d017      	beq.n	8002898 <CRYP_AES_Decrypt+0xba>
        {
          /* Disable the CRYP peripheral clock */
          __HAL_CRYP_DISABLE(hcryp);
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	681a      	ldr	r2, [r3, #0]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	681b      	ldr	r3, [r3, #0]
 8002872:	f022 0201 	bic.w	r2, r2, #1
 8002876:	601a      	str	r2, [r3, #0]

          /* Change state & error code*/
          hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800287c:	f043 0210 	orr.w	r2, r3, #16
 8002880:	687b      	ldr	r3, [r7, #4]
 8002882:	655a      	str	r2, [r3, #84]	; 0x54
          hcryp->State = HAL_CRYP_STATE_READY;
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	2201      	movs	r2, #1
 8002888:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

          /* Process unlocked */
          __HAL_UNLOCK(hcryp);
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	2200      	movs	r2, #0
 8002890:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
          return HAL_ERROR;
 8002894:	2301      	movs	r3, #1
 8002896:	e0ec      	b.n	8002a72 <CRYP_AES_Decrypt+0x294>
        }
        /* Clear CCF Flag */
        __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	681a      	ldr	r2, [r3, #0]
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80028a6:	601a      	str	r2, [r3, #0]

        /* Return to decryption operating mode(Mode 3)*/
        MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_DECRYPT);
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	f023 0218 	bic.w	r2, r3, #24
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	f042 0210 	orr.w	r2, r2, #16
 80028ba:	601a      	str	r2, [r3, #0]
 80028bc:	e014      	b.n	80028e8 <CRYP_AES_Decrypt+0x10a>
      }
      else /*Mode 4 : decryption & Key preparation*/
      {
        /*  Set the Key*/
        CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	689b      	ldr	r3, [r3, #8]
 80028c2:	4619      	mov	r1, r3
 80028c4:	6878      	ldr	r0, [r7, #4]
 80028c6:	f000 f990 	bl	8002bea <CRYP_SetKey>

        /* Set decryption & Key preparation operating mode*/
        MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_KEYDERIVATION_DECRYPT);
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	681a      	ldr	r2, [r3, #0]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	f042 0218 	orr.w	r2, r2, #24
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	e005      	b.n	80028e8 <CRYP_AES_Decrypt+0x10a>
      }
    }
    else  /*Algorithm CTR */
    {
      /*  Set the Key*/
      CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	689b      	ldr	r3, [r3, #8]
 80028e0:	4619      	mov	r1, r3
 80028e2:	6878      	ldr	r0, [r7, #4]
 80028e4:	f000 f981 	bl	8002bea <CRYP_SetKey>
    }

    /* Set IV */
    if (hcryp->Init.Algorithm != CRYP_AES_ECB)
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	695b      	ldr	r3, [r3, #20]
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	f000 8085 	beq.w	80029fc <CRYP_AES_Decrypt+0x21e>
    {
      /* Set the Initialization Vector*/
      hcryp->Instance->IVR3 = *(uint32_t *)(hcryp->Init.pInitVect);
 80028f2:	687b      	ldr	r3, [r7, #4]
 80028f4:	691a      	ldr	r2, [r3, #16]
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	6812      	ldr	r2, [r2, #0]
 80028fc:	62da      	str	r2, [r3, #44]	; 0x2c
      hcryp->Instance->IVR2 = *(uint32_t *)(hcryp->Init.pInitVect + 1U);
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	691a      	ldr	r2, [r3, #16]
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	6852      	ldr	r2, [r2, #4]
 8002908:	629a      	str	r2, [r3, #40]	; 0x28
      hcryp->Instance->IVR1 = *(uint32_t *)(hcryp->Init.pInitVect + 2U);
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	691a      	ldr	r2, [r3, #16]
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	6892      	ldr	r2, [r2, #8]
 8002914:	625a      	str	r2, [r3, #36]	; 0x24
      hcryp->Instance->IVR0 = *(uint32_t *)(hcryp->Init.pInitVect + 3U);
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	691a      	ldr	r2, [r3, #16]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	68d2      	ldr	r2, [r2, #12]
 8002920:	621a      	str	r2, [r3, #32]
 8002922:	e06b      	b.n	80029fc <CRYP_AES_Decrypt+0x21e>
    }
  } /* if (DoKeyIVConfig == 1U) */
  else /* if (dokeyivconfig == 0U) */
  {
    /* interleave mode Key configuration  */
    if (hcryp->Init.KeyIVConfigSkip == CRYP_IVCONFIG_ONCE)
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002928:	2b04      	cmp	r3, #4
 800292a:	d167      	bne.n	80029fc <CRYP_AES_Decrypt+0x21e>
    {
      /*  Key preparation for ECB/CBC */
      if (hcryp->Init.Algorithm != CRYP_AES_CTR)   /*ECB or CBC*/
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	695b      	ldr	r3, [r3, #20]
 8002930:	2b40      	cmp	r3, #64	; 0x40
 8002932:	d05d      	beq.n	80029f0 <CRYP_AES_Decrypt+0x212>
      {
        if (hcryp->AutoKeyDerivation == DISABLE)/*Mode 2 Key preparation*/
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800293a:	2b00      	cmp	r3, #0
 800293c:	d149      	bne.n	80029d2 <CRYP_AES_Decrypt+0x1f4>
        {
          /* Set key preparation for decryption operating mode*/
          MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_KEYDERIVATION);
 800293e:	687b      	ldr	r3, [r7, #4]
 8002940:	681b      	ldr	r3, [r3, #0]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	f023 0218 	bic.w	r2, r3, #24
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	f042 0208 	orr.w	r2, r2, #8
 8002950:	601a      	str	r2, [r3, #0]
          
          /*  Set the Key*/
          CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	689b      	ldr	r3, [r3, #8]
 8002956:	4619      	mov	r1, r3
 8002958:	6878      	ldr	r0, [r7, #4]
 800295a:	f000 f946 	bl	8002bea <CRYP_SetKey>
          
          /* Enable CRYP */
          __HAL_CRYP_ENABLE(hcryp);
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	681a      	ldr	r2, [r3, #0]
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	f042 0201 	orr.w	r2, r2, #1
 800296c:	601a      	str	r2, [r3, #0]
          
          /* Wait for CCF flag to be raised */
          if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 800296e:	6839      	ldr	r1, [r7, #0]
 8002970:	6878      	ldr	r0, [r7, #4]
 8002972:	f000 fec5 	bl	8003700 <CRYP_WaitOnCCFlag>
 8002976:	4603      	mov	r3, r0
 8002978:	2b00      	cmp	r3, #0
 800297a:	d017      	beq.n	80029ac <CRYP_AES_Decrypt+0x1ce>
          {
            /* Disable the CRYP peripheral clock */
            __HAL_CRYP_DISABLE(hcryp);
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	681a      	ldr	r2, [r3, #0]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	f022 0201 	bic.w	r2, r2, #1
 800298a:	601a      	str	r2, [r3, #0]
            
            /* Change state & error code*/
            hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002990:	f043 0210 	orr.w	r2, r3, #16
 8002994:	687b      	ldr	r3, [r7, #4]
 8002996:	655a      	str	r2, [r3, #84]	; 0x54
            hcryp->State = HAL_CRYP_STATE_READY;
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	2201      	movs	r2, #1
 800299c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
            
            /* Process unlocked */
            __HAL_UNLOCK(hcryp);
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	2200      	movs	r2, #0
 80029a4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
            return HAL_ERROR;
 80029a8:	2301      	movs	r3, #1
 80029aa:	e062      	b.n	8002a72 <CRYP_AES_Decrypt+0x294>
          }
          /* Clear CCF Flag */
          __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	681a      	ldr	r2, [r3, #0]
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80029ba:	601a      	str	r2, [r3, #0]
          
          /* Return to decryption operating mode(Mode 3)*/
          MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_DECRYPT);
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	681b      	ldr	r3, [r3, #0]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	f023 0218 	bic.w	r2, r3, #24
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	f042 0210 	orr.w	r2, r2, #16
 80029ce:	601a      	str	r2, [r3, #0]
 80029d0:	e014      	b.n	80029fc <CRYP_AES_Decrypt+0x21e>
        }
        else /*Mode 4 : decryption & Key preparation*/
        {
          /*  Set the Key*/
          CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	689b      	ldr	r3, [r3, #8]
 80029d6:	4619      	mov	r1, r3
 80029d8:	6878      	ldr	r0, [r7, #4]
 80029da:	f000 f906 	bl	8002bea <CRYP_SetKey>
          
          /* Set decryption & Key preparation operating mode*/
          MODIFY_REG(hcryp->Instance->CR, AES_CR_MODE, CRYP_OPERATINGMODE_KEYDERIVATION_DECRYPT);
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	681a      	ldr	r2, [r3, #0]
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	681b      	ldr	r3, [r3, #0]
 80029e8:	f042 0218 	orr.w	r2, r2, #24
 80029ec:	601a      	str	r2, [r3, #0]
 80029ee:	e005      	b.n	80029fc <CRYP_AES_Decrypt+0x21e>
        }
      }
      else  /*Algorithm CTR */
      {
        /*  Set the Key*/
        CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	689b      	ldr	r3, [r3, #8]
 80029f4:	4619      	mov	r1, r3
 80029f6:	6878      	ldr	r0, [r7, #4]
 80029f8:	f000 f8f7 	bl	8002bea <CRYP_SetKey>
      }
    }
  }
 
  /* Set the phase */
  hcryp->Phase = CRYP_PHASE_PROCESS;
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	2202      	movs	r2, #2
 8002a00:	645a      	str	r2, [r3, #68]	; 0x44

  /* Enable CRYP */
  __HAL_CRYP_ENABLE(hcryp);
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	681a      	ldr	r2, [r3, #0]
 8002a08:	687b      	ldr	r3, [r7, #4]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f042 0201 	orr.w	r2, r2, #1
 8002a10:	601a      	str	r2, [r3, #0]

  incount = hcryp->CrypInCount;
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a16:	81fb      	strh	r3, [r7, #14]
  outcount = hcryp->CrypOutCount;
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002a1e:	81bb      	strh	r3, [r7, #12]
  while ((incount < (hcryp->Size / 4U)) && (outcount < (hcryp->Size / 4U)))
 8002a20:	e00a      	b.n	8002a38 <CRYP_AES_Decrypt+0x25a>
  {
    /* Write plain data and get cipher data */
    CRYP_AES_ProcessData(hcryp, Timeout);
 8002a22:	6839      	ldr	r1, [r7, #0]
 8002a24:	6878      	ldr	r0, [r7, #4]
 8002a26:	f000 f828 	bl	8002a7a <CRYP_AES_ProcessData>
    incount = hcryp->CrypInCount;
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a2e:	81fb      	strh	r3, [r7, #14]
    outcount = hcryp->CrypOutCount;
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002a36:	81bb      	strh	r3, [r7, #12]
  while ((incount < (hcryp->Size / 4U)) && (outcount < (hcryp->Size / 4U)))
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002a3e:	089b      	lsrs	r3, r3, #2
 8002a40:	b29b      	uxth	r3, r3
 8002a42:	89fa      	ldrh	r2, [r7, #14]
 8002a44:	429a      	cmp	r2, r3
 8002a46:	d207      	bcs.n	8002a58 <CRYP_AES_Decrypt+0x27a>
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002a4e:	089b      	lsrs	r3, r3, #2
 8002a50:	b29b      	uxth	r3, r3
 8002a52:	89ba      	ldrh	r2, [r7, #12]
 8002a54:	429a      	cmp	r2, r3
 8002a56:	d3e4      	bcc.n	8002a22 <CRYP_AES_Decrypt+0x244>
  }

  /* Disable CRYP */
  __HAL_CRYP_DISABLE(hcryp);
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	681a      	ldr	r2, [r3, #0]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	f022 0201 	bic.w	r2, r2, #1
 8002a66:	601a      	str	r2, [r3, #0]

  /* Change the CRYP state */
  hcryp->State = HAL_CRYP_STATE_READY;
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	2201      	movs	r2, #1
 8002a6c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Return function status */
  return HAL_OK;
 8002a70:	2300      	movs	r3, #0
}
 8002a72:	4618      	mov	r0, r3
 8002a74:	3710      	adds	r7, #16
 8002a76:	46bd      	mov	sp, r7
 8002a78:	bd80      	pop	{r7, pc}

08002a7a <CRYP_AES_ProcessData>:
  *         the configuration information for CRYP module
  * @param  Timeout Specify Timeout value
  * @retval None
  */
static void CRYP_AES_ProcessData(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 8002a7a:	b580      	push	{r7, lr}
 8002a7c:	b088      	sub	sp, #32
 8002a7e:	af00      	add	r7, sp, #0
 8002a80:	6078      	str	r0, [r7, #4]
 8002a82:	6039      	str	r1, [r7, #0]

  uint32_t temp[4];  /* Temporary CrypOutBuff */
  uint32_t i;

  /* Write the input block in the IN FIFO */
  hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a8c:	b29b      	uxth	r3, r3
 8002a8e:	009b      	lsls	r3, r3, #2
 8002a90:	441a      	add	r2, r3
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	6812      	ldr	r2, [r2, #0]
 8002a98:	609a      	str	r2, [r3, #8]
  hcryp->CrypInCount++;
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002a9e:	b29b      	uxth	r3, r3
 8002aa0:	3301      	adds	r3, #1
 8002aa2:	b29a      	uxth	r2, r3
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	87da      	strh	r2, [r3, #62]	; 0x3e
  hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ab0:	b29b      	uxth	r3, r3
 8002ab2:	009b      	lsls	r3, r3, #2
 8002ab4:	441a      	add	r2, r3
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	6812      	ldr	r2, [r2, #0]
 8002abc:	609a      	str	r2, [r3, #8]
  hcryp->CrypInCount++;
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ac2:	b29b      	uxth	r3, r3
 8002ac4:	3301      	adds	r3, #1
 8002ac6:	b29a      	uxth	r2, r3
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	87da      	strh	r2, [r3, #62]	; 0x3e
  hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ad4:	b29b      	uxth	r3, r3
 8002ad6:	009b      	lsls	r3, r3, #2
 8002ad8:	441a      	add	r2, r3
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	6812      	ldr	r2, [r2, #0]
 8002ae0:	609a      	str	r2, [r3, #8]
  hcryp->CrypInCount++;
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002ae6:	b29b      	uxth	r3, r3
 8002ae8:	3301      	adds	r3, #1
 8002aea:	b29a      	uxth	r2, r3
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	87da      	strh	r2, [r3, #62]	; 0x3e
  hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002af8:	b29b      	uxth	r3, r3
 8002afa:	009b      	lsls	r3, r3, #2
 8002afc:	441a      	add	r2, r3
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	6812      	ldr	r2, [r2, #0]
 8002b04:	609a      	str	r2, [r3, #8]
  hcryp->CrypInCount++;
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002b0a:	b29b      	uxth	r3, r3
 8002b0c:	3301      	adds	r3, #1
 8002b0e:	b29a      	uxth	r2, r3
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	87da      	strh	r2, [r3, #62]	; 0x3e

  /* Wait for CCF flag to be raised */
  if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 8002b14:	6839      	ldr	r1, [r7, #0]
 8002b16:	6878      	ldr	r0, [r7, #4]
 8002b18:	f000 fdf2 	bl	8003700 <CRYP_WaitOnCCFlag>
 8002b1c:	4603      	mov	r3, r0
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d018      	beq.n	8002b54 <CRYP_AES_ProcessData+0xda>
  {
    /* Disable the CRYP peripheral clock */
    __HAL_CRYP_DISABLE(hcryp);
 8002b22:	687b      	ldr	r3, [r7, #4]
 8002b24:	681b      	ldr	r3, [r3, #0]
 8002b26:	681a      	ldr	r2, [r3, #0]
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	f022 0201 	bic.w	r2, r2, #1
 8002b30:	601a      	str	r2, [r3, #0]

    /* Change state */
    hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002b36:	f043 0210 	orr.w	r2, r3, #16
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	655a      	str	r2, [r3, #84]	; 0x54
    hcryp->State = HAL_CRYP_STATE_READY;
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	2201      	movs	r2, #1
 8002b42:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

    /* Process unlocked */
    __HAL_UNLOCK(hcryp);
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	2200      	movs	r2, #0
 8002b4a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
    /*Call registered error callback*/
#if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1U)
    hcryp->ErrorCallback(hcryp);
#else
    /*Call legacy weak error callback*/
    HAL_CRYP_ErrorCallback(hcryp);
 8002b4e:	6878      	ldr	r0, [r7, #4]
 8002b50:	f7ff fdb4 	bl	80026bc <HAL_CRYP_ErrorCallback>
#endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
  }

  /* Clear CCF Flag */
  __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	681a      	ldr	r2, [r3, #0]
 8002b5a:	687b      	ldr	r3, [r7, #4]
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002b62:	601a      	str	r2, [r3, #0]

  /* Read the output block from the output FIFO and put them in temporary buffer then get CrypOutBuff from temporary buffer*/
  for (i = 0U; i < 4U; i++)
 8002b64:	2300      	movs	r3, #0
 8002b66:	61fb      	str	r3, [r7, #28]
 8002b68:	e00b      	b.n	8002b82 <CRYP_AES_ProcessData+0x108>
  {
    temp[i] = hcryp->Instance->DOUTR;
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	68da      	ldr	r2, [r3, #12]
 8002b70:	69fb      	ldr	r3, [r7, #28]
 8002b72:	009b      	lsls	r3, r3, #2
 8002b74:	3320      	adds	r3, #32
 8002b76:	443b      	add	r3, r7
 8002b78:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < 4U; i++)
 8002b7c:	69fb      	ldr	r3, [r7, #28]
 8002b7e:	3301      	adds	r3, #1
 8002b80:	61fb      	str	r3, [r7, #28]
 8002b82:	69fb      	ldr	r3, [r7, #28]
 8002b84:	2b03      	cmp	r3, #3
 8002b86:	d9f0      	bls.n	8002b6a <CRYP_AES_ProcessData+0xf0>
  }
  i= 0U;
 8002b88:	2300      	movs	r3, #0
 8002b8a:	61fb      	str	r3, [r7, #28]
  while((hcryp->CrypOutCount < ((hcryp->Size + 3U)/4U)) && (i<4U))
 8002b8c:	e01a      	b.n	8002bc4 <CRYP_AES_ProcessData+0x14a>
  {
    *(uint32_t *)(hcryp->pCrypOutBuffPtr + hcryp->CrypOutCount) = temp[i];
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002b98:	b29b      	uxth	r3, r3
 8002b9a:	009b      	lsls	r3, r3, #2
 8002b9c:	441a      	add	r2, r3
 8002b9e:	69fb      	ldr	r3, [r7, #28]
 8002ba0:	009b      	lsls	r3, r3, #2
 8002ba2:	3320      	adds	r3, #32
 8002ba4:	443b      	add	r3, r7
 8002ba6:	f853 3c14 	ldr.w	r3, [r3, #-20]
 8002baa:	6013      	str	r3, [r2, #0]
    hcryp->CrypOutCount++;
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002bb2:	b29b      	uxth	r3, r3
 8002bb4:	3301      	adds	r3, #1
 8002bb6:	b29a      	uxth	r2, r3
 8002bb8:	687b      	ldr	r3, [r7, #4]
 8002bba:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    i++;
 8002bbe:	69fb      	ldr	r3, [r7, #28]
 8002bc0:	3301      	adds	r3, #1
 8002bc2:	61fb      	str	r3, [r7, #28]
  while((hcryp->CrypOutCount < ((hcryp->Size + 3U)/4U)) && (i<4U))
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002bca:	b29b      	uxth	r3, r3
 8002bcc:	461a      	mov	r2, r3
 8002bce:	687b      	ldr	r3, [r7, #4]
 8002bd0:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002bd4:	3303      	adds	r3, #3
 8002bd6:	089b      	lsrs	r3, r3, #2
 8002bd8:	429a      	cmp	r2, r3
 8002bda:	d202      	bcs.n	8002be2 <CRYP_AES_ProcessData+0x168>
 8002bdc:	69fb      	ldr	r3, [r7, #28]
 8002bde:	2b03      	cmp	r3, #3
 8002be0:	d9d5      	bls.n	8002b8e <CRYP_AES_ProcessData+0x114>
  }
}
 8002be2:	bf00      	nop
 8002be4:	3720      	adds	r7, #32
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bd80      	pop	{r7, pc}

08002bea <CRYP_SetKey>:
  * @note   If pKey is NULL, the Key registers are not written. This configuration
  *         occurs when the key is written out of HAL scope.
  * @retval None
  */
static void CRYP_SetKey(CRYP_HandleTypeDef *hcryp, uint32_t KeySize)
{
 8002bea:	b480      	push	{r7}
 8002bec:	b083      	sub	sp, #12
 8002bee:	af00      	add	r7, sp, #0
 8002bf0:	6078      	str	r0, [r7, #4]
 8002bf2:	6039      	str	r1, [r7, #0]
  if (hcryp->Init.pKey != NULL)
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	68db      	ldr	r3, [r3, #12]
 8002bf8:	2b00      	cmp	r3, #0
 8002bfa:	d051      	beq.n	8002ca0 <CRYP_SetKey+0xb6>
  {
    switch (KeySize)
 8002bfc:	683b      	ldr	r3, [r7, #0]
 8002bfe:	2b00      	cmp	r3, #0
 8002c00:	d034      	beq.n	8002c6c <CRYP_SetKey+0x82>
 8002c02:	683b      	ldr	r3, [r7, #0]
 8002c04:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8002c08:	d149      	bne.n	8002c9e <CRYP_SetKey+0xb4>
    {
      case CRYP_KEYSIZE_256B:
        hcryp->Instance->KEYR7 = *(uint32_t *)(hcryp->Init.pKey);
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	68da      	ldr	r2, [r3, #12]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	6812      	ldr	r2, [r2, #0]
 8002c14:	63da      	str	r2, [r3, #60]	; 0x3c
        hcryp->Instance->KEYR6 = *(uint32_t *)(hcryp->Init.pKey + 1U);
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	68da      	ldr	r2, [r3, #12]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	6852      	ldr	r2, [r2, #4]
 8002c20:	639a      	str	r2, [r3, #56]	; 0x38
        hcryp->Instance->KEYR5 = *(uint32_t *)(hcryp->Init.pKey + 2U);
 8002c22:	687b      	ldr	r3, [r7, #4]
 8002c24:	68da      	ldr	r2, [r3, #12]
 8002c26:	687b      	ldr	r3, [r7, #4]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	6892      	ldr	r2, [r2, #8]
 8002c2c:	635a      	str	r2, [r3, #52]	; 0x34
        hcryp->Instance->KEYR4 = *(uint32_t *)(hcryp->Init.pKey + 3U);
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	68da      	ldr	r2, [r3, #12]
 8002c32:	687b      	ldr	r3, [r7, #4]
 8002c34:	681b      	ldr	r3, [r3, #0]
 8002c36:	68d2      	ldr	r2, [r2, #12]
 8002c38:	631a      	str	r2, [r3, #48]	; 0x30
        hcryp->Instance->KEYR3 = *(uint32_t *)(hcryp->Init.pKey + 4U);
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	68da      	ldr	r2, [r3, #12]
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	6912      	ldr	r2, [r2, #16]
 8002c44:	61da      	str	r2, [r3, #28]
        hcryp->Instance->KEYR2 = *(uint32_t *)(hcryp->Init.pKey + 5U);
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	68da      	ldr	r2, [r3, #12]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	6952      	ldr	r2, [r2, #20]
 8002c50:	619a      	str	r2, [r3, #24]
        hcryp->Instance->KEYR1 = *(uint32_t *)(hcryp->Init.pKey + 6U);
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	68da      	ldr	r2, [r3, #12]
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	6992      	ldr	r2, [r2, #24]
 8002c5c:	615a      	str	r2, [r3, #20]
        hcryp->Instance->KEYR0 = *(uint32_t *)(hcryp->Init.pKey + 7U);
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	68da      	ldr	r2, [r3, #12]
 8002c62:	687b      	ldr	r3, [r7, #4]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	69d2      	ldr	r2, [r2, #28]
 8002c68:	611a      	str	r2, [r3, #16]
        break;
 8002c6a:	e019      	b.n	8002ca0 <CRYP_SetKey+0xb6>
      case CRYP_KEYSIZE_128B:
        hcryp->Instance->KEYR3 = *(uint32_t *)(hcryp->Init.pKey);
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	68da      	ldr	r2, [r3, #12]
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	6812      	ldr	r2, [r2, #0]
 8002c76:	61da      	str	r2, [r3, #28]
        hcryp->Instance->KEYR2 = *(uint32_t *)(hcryp->Init.pKey + 1U);
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	68da      	ldr	r2, [r3, #12]
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	6852      	ldr	r2, [r2, #4]
 8002c82:	619a      	str	r2, [r3, #24]
        hcryp->Instance->KEYR1 = *(uint32_t *)(hcryp->Init.pKey + 2U);
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	68da      	ldr	r2, [r3, #12]
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	6892      	ldr	r2, [r2, #8]
 8002c8e:	615a      	str	r2, [r3, #20]
        hcryp->Instance->KEYR0 = *(uint32_t *)(hcryp->Init.pKey + 3U);
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	68da      	ldr	r2, [r3, #12]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	68d2      	ldr	r2, [r2, #12]
 8002c9a:	611a      	str	r2, [r3, #16]

        break;
 8002c9c:	e000      	b.n	8002ca0 <CRYP_SetKey+0xb6>
      default:
        break;
 8002c9e:	bf00      	nop
    }
  }
}
 8002ca0:	bf00      	nop
 8002ca2:	370c      	adds	r7, #12
 8002ca4:	46bd      	mov	sp, r7
 8002ca6:	bc80      	pop	{r7}
 8002ca8:	4770      	bx	lr

08002caa <CRYP_AESGCM_Process>:
  *         the configuration information for CRYP module
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef CRYP_AESGCM_Process(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 8002caa:	b580      	push	{r7, lr}
 8002cac:	b08e      	sub	sp, #56	; 0x38
 8002cae:	af00      	add	r7, sp, #0
 8002cb0:	6078      	str	r0, [r7, #4]
 8002cb2:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  uint32_t wordsize = ((uint32_t)hcryp->Size / 4U) ;
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002cba:	089b      	lsrs	r3, r3, #2
 8002cbc:	b29b      	uxth	r3, r3
 8002cbe:	637b      	str	r3, [r7, #52]	; 0x34
  uint32_t temp[4];  /* Temporary CrypOutBuff */
  uint32_t index;
  uint32_t lastwordsize;
  uint32_t incount;  /* Temporary CrypInCount Value */
  uint32_t outcount;  /* Temporary CrypOutCount Value */
  uint32_t DoKeyIVConfig = 1U; /* By default, carry out peripheral Key and IV configuration */
 8002cc0:	2301      	movs	r3, #1
 8002cc2:	623b      	str	r3, [r7, #32]

  if (hcryp->Init.KeyIVConfigSkip == CRYP_KEYIVCONFIG_ONCE)
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cc8:	2b01      	cmp	r3, #1
 8002cca:	d118      	bne.n	8002cfe <CRYP_AESGCM_Process+0x54>
  {
    if (hcryp->KeyIVConfig == 1U)
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002cd0:	2b01      	cmp	r3, #1
 8002cd2:	d10a      	bne.n	8002cea <CRYP_AESGCM_Process+0x40>
    {
      /* If the Key and IV configuration has to be done only once
         and if it has already been done, skip it */
      DoKeyIVConfig = 0U;
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	623b      	str	r3, [r7, #32]
      hcryp->SizesSum += hcryp->Size; /* Compute message total payload length */
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002cdc:	687a      	ldr	r2, [r7, #4]
 8002cde:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 8002ce2:	441a      	add	r2, r3
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	65da      	str	r2, [r3, #92]	; 0x5c
 8002ce8:	e00f      	b.n	8002d0a <CRYP_AESGCM_Process+0x60>
    else
    {
      /* If the Key and IV configuration has to be done only once
         and if it has not been done already, do it and set KeyIVConfig
         to keep track it won't have to be done again next time */
      hcryp->KeyIVConfig = 1U;
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	2201      	movs	r2, #1
 8002cee:	659a      	str	r2, [r3, #88]	; 0x58
      hcryp->SizesSum = hcryp->Size; /* Merely store payload length */
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002cf6:	461a      	mov	r2, r3
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	65da      	str	r2, [r3, #92]	; 0x5c
 8002cfc:	e005      	b.n	8002d0a <CRYP_AESGCM_Process+0x60>
    }
  }
  else
  {
    hcryp->SizesSum = hcryp->Size;
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002d04:	461a      	mov	r2, r3
 8002d06:	687b      	ldr	r3, [r7, #4]
 8002d08:	65da      	str	r2, [r3, #92]	; 0x5c
  }

  if (DoKeyIVConfig == 1U)
 8002d0a:	6a3b      	ldr	r3, [r7, #32]
 8002d0c:	2b01      	cmp	r3, #1
 8002d0e:	d16d      	bne.n	8002dec <CRYP_AESGCM_Process+0x142>
  {

    /*  Reset CrypHeaderCount */
    hcryp->CrypHeaderCount = 0U;
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	2200      	movs	r2, #0
 8002d14:	879a      	strh	r2, [r3, #60]	; 0x3c

    /****************************** Init phase **********************************/

    CRYP_SET_PHASE(hcryp, CRYP_PHASE_INIT);
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	681a      	ldr	r2, [r3, #0]
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8002d24:	601a      	str	r2, [r3, #0]

    /* Set the key */
    CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	689b      	ldr	r3, [r3, #8]
 8002d2a:	4619      	mov	r1, r3
 8002d2c:	6878      	ldr	r0, [r7, #4]
 8002d2e:	f7ff ff5c 	bl	8002bea <CRYP_SetKey>

    /* Set the initialization vector and the counter : Initial Counter Block (ICB)*/
    hcryp->Instance->IVR3 = *(uint32_t *)(hcryp->Init.pInitVect);
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	691a      	ldr	r2, [r3, #16]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	6812      	ldr	r2, [r2, #0]
 8002d3c:	62da      	str	r2, [r3, #44]	; 0x2c
    hcryp->Instance->IVR2 = *(uint32_t *)(hcryp->Init.pInitVect + 1U);
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	691a      	ldr	r2, [r3, #16]
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	6852      	ldr	r2, [r2, #4]
 8002d48:	629a      	str	r2, [r3, #40]	; 0x28
    hcryp->Instance->IVR1 = *(uint32_t *)(hcryp->Init.pInitVect + 2U);
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	691a      	ldr	r2, [r3, #16]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	6892      	ldr	r2, [r2, #8]
 8002d54:	625a      	str	r2, [r3, #36]	; 0x24
    hcryp->Instance->IVR0 = *(uint32_t *)(hcryp->Init.pInitVect + 3U);
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	691a      	ldr	r2, [r3, #16]
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	68d2      	ldr	r2, [r2, #12]
 8002d60:	621a      	str	r2, [r3, #32]

    /* Enable the CRYP peripheral */
    __HAL_CRYP_ENABLE(hcryp);
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	681a      	ldr	r2, [r3, #0]
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	f042 0201 	orr.w	r2, r2, #1
 8002d70:	601a      	str	r2, [r3, #0]

    /* just wait for hash computation */
    if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 8002d72:	6839      	ldr	r1, [r7, #0]
 8002d74:	6878      	ldr	r0, [r7, #4]
 8002d76:	f000 fcc3 	bl	8003700 <CRYP_WaitOnCCFlag>
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d00f      	beq.n	8002da0 <CRYP_AESGCM_Process+0xf6>
    {
      /* Change state */
      hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002d84:	f043 0210 	orr.w	r2, r3, #16
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	655a      	str	r2, [r3, #84]	; 0x54
      hcryp->State = HAL_CRYP_STATE_READY;
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	2201      	movs	r2, #1
 8002d90:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

      /* Process unlocked & return error */
      __HAL_UNLOCK(hcryp);
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	2200      	movs	r2, #0
 8002d98:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
      return HAL_ERROR;
 8002d9c:	2301      	movs	r3, #1
 8002d9e:	e128      	b.n	8002ff2 <CRYP_AESGCM_Process+0x348>
    }
    /* Clear CCF flag */
    __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	681a      	ldr	r2, [r3, #0]
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002dae:	601a      	str	r2, [r3, #0]

    /************************ Header phase *************************************/

    if (CRYP_GCMCCM_SetHeaderPhase(hcryp,  Timeout) != HAL_OK)
 8002db0:	6839      	ldr	r1, [r7, #0]
 8002db2:	6878      	ldr	r0, [r7, #4]
 8002db4:	f000 face 	bl	8003354 <CRYP_GCMCCM_SetHeaderPhase>
 8002db8:	4603      	mov	r3, r0
 8002dba:	2b00      	cmp	r3, #0
 8002dbc:	d001      	beq.n	8002dc2 <CRYP_AESGCM_Process+0x118>
    {
      return HAL_ERROR;
 8002dbe:	2301      	movs	r3, #1
 8002dc0:	e117      	b.n	8002ff2 <CRYP_AESGCM_Process+0x348>
    }

    /*************************Payload phase ************************************/

    /* Set the phase */
    hcryp->Phase = CRYP_PHASE_PROCESS;
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	2202      	movs	r2, #2
 8002dc6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Select payload phase once the header phase is performed */
    CRYP_SET_PHASE(hcryp, CRYP_PHASE_PAYLOAD);
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002dda:	601a      	str	r2, [r3, #0]

    /* Set to 0 the number of non-valid bytes using NPBLB register*/
    MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, 0U);
 8002ddc:	687b      	ldr	r3, [r7, #4]
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	681a      	ldr	r2, [r3, #0]
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002dea:	601a      	str	r2, [r3, #0]

  } /* if (DoKeyIVConfig == 1U) */

  if ((hcryp->Size % 16U) != 0U)
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002df2:	f003 030f 	and.w	r3, r3, #15
 8002df6:	b29b      	uxth	r3, r3
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d003      	beq.n	8002e04 <CRYP_AESGCM_Process+0x15a>
  {
    /* recalculate  wordsize */
    wordsize = ((wordsize / 4U) * 4U) ;
 8002dfc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002dfe:	f023 0303 	bic.w	r3, r3, #3
 8002e02:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Get tick */
  tickstart = HAL_GetTick();
 8002e04:	f7ff f974 	bl	80020f0 <HAL_GetTick>
 8002e08:	61f8      	str	r0, [r7, #28]

  /* Write input data and get output Data */
  incount = hcryp->CrypInCount;
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002e0e:	b29b      	uxth	r3, r3
 8002e10:	62bb      	str	r3, [r7, #40]	; 0x28
  outcount = hcryp->CrypOutCount;
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002e18:	b29b      	uxth	r3, r3
 8002e1a:	627b      	str	r3, [r7, #36]	; 0x24
  while ((incount < wordsize) && (outcount < wordsize))
 8002e1c:	e033      	b.n	8002e86 <CRYP_AESGCM_Process+0x1dc>
  {
    /* Write plain data and get cipher data */
    CRYP_AES_ProcessData(hcryp, Timeout);
 8002e1e:	6839      	ldr	r1, [r7, #0]
 8002e20:	6878      	ldr	r0, [r7, #4]
 8002e22:	f7ff fe2a 	bl	8002a7a <CRYP_AES_ProcessData>

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8002e26:	683b      	ldr	r3, [r7, #0]
 8002e28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e2c:	d022      	beq.n	8002e74 <CRYP_AESGCM_Process+0x1ca>
    {
      if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8002e2e:	f7ff f95f 	bl	80020f0 <HAL_GetTick>
 8002e32:	4602      	mov	r2, r0
 8002e34:	69fb      	ldr	r3, [r7, #28]
 8002e36:	1ad3      	subs	r3, r2, r3
 8002e38:	683a      	ldr	r2, [r7, #0]
 8002e3a:	429a      	cmp	r2, r3
 8002e3c:	d302      	bcc.n	8002e44 <CRYP_AESGCM_Process+0x19a>
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d117      	bne.n	8002e74 <CRYP_AESGCM_Process+0x1ca>
      {
        /* Disable the CRYP peripheral clock */
        __HAL_CRYP_DISABLE(hcryp);
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	681b      	ldr	r3, [r3, #0]
 8002e48:	681a      	ldr	r2, [r3, #0]
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	681b      	ldr	r3, [r3, #0]
 8002e4e:	f022 0201 	bic.w	r2, r2, #1
 8002e52:	601a      	str	r2, [r3, #0]

        /* Change state & error code */
        hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002e58:	f043 0210 	orr.w	r2, r3, #16
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	655a      	str	r2, [r3, #84]	; 0x54
        hcryp->State = HAL_CRYP_STATE_READY;
 8002e60:	687b      	ldr	r3, [r7, #4]
 8002e62:	2201      	movs	r2, #1
 8002e64:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process unlocked */
        __HAL_UNLOCK(hcryp);
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	2200      	movs	r2, #0
 8002e6c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        return HAL_ERROR;
 8002e70:	2301      	movs	r3, #1
 8002e72:	e0be      	b.n	8002ff2 <CRYP_AESGCM_Process+0x348>
      }
    }
    incount = hcryp->CrypInCount;
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002e78:	b29b      	uxth	r3, r3
 8002e7a:	62bb      	str	r3, [r7, #40]	; 0x28
    outcount = hcryp->CrypOutCount;
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002e82:	b29b      	uxth	r3, r3
 8002e84:	627b      	str	r3, [r7, #36]	; 0x24
  while ((incount < wordsize) && (outcount < wordsize))
 8002e86:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002e88:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e8a:	429a      	cmp	r2, r3
 8002e8c:	d203      	bcs.n	8002e96 <CRYP_AESGCM_Process+0x1ec>
 8002e8e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002e90:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e92:	429a      	cmp	r2, r3
 8002e94:	d3c3      	bcc.n	8002e1e <CRYP_AESGCM_Process+0x174>
  }

  if ((hcryp->Size % 16U) != 0U)
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002e9c:	f003 030f 	and.w	r3, r3, #15
 8002ea0:	b29b      	uxth	r3, r3
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	f000 80a4 	beq.w	8002ff0 <CRYP_AESGCM_Process+0x346>
  {
    /* Compute the number of padding bytes in last block of payload */
    npblb = ((((uint32_t)hcryp->Size / 16U) + 1U) * 16U) - ((uint32_t)hcryp->Size);
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8002eae:	091b      	lsrs	r3, r3, #4
 8002eb0:	b29b      	uxth	r3, r3
 8002eb2:	3301      	adds	r3, #1
 8002eb4:	011b      	lsls	r3, r3, #4
 8002eb6:	687a      	ldr	r2, [r7, #4]
 8002eb8:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 8002ebc:	1a9b      	subs	r3, r3, r2
 8002ebe:	61bb      	str	r3, [r7, #24]

    /*  Set Npblb in case of AES GCM payload encryption to get right tag*/
    if ((hcryp->Instance->CR & AES_CR_MODE) == CRYP_OPERATINGMODE_ENCRYPT)
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	f003 0318 	and.w	r3, r3, #24
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d10a      	bne.n	8002ee4 <CRYP_AESGCM_Process+0x23a>
    {
      /* Set to 0 the number of non-valid bytes using NPBLB register*/
      MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, npblb << 20U);
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 8002ed8:	69bb      	ldr	r3, [r7, #24]
 8002eda:	051a      	lsls	r2, r3, #20
 8002edc:	687b      	ldr	r3, [r7, #4]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	430a      	orrs	r2, r1
 8002ee2:	601a      	str	r2, [r3, #0]
    }
    /* Number of valid words (lastwordsize) in last block */
    if ((npblb % 4U) == 0U)
 8002ee4:	69bb      	ldr	r3, [r7, #24]
 8002ee6:	f003 0303 	and.w	r3, r3, #3
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d105      	bne.n	8002efa <CRYP_AESGCM_Process+0x250>
    {
      lastwordsize = (16U - npblb) / 4U;
 8002eee:	69bb      	ldr	r3, [r7, #24]
 8002ef0:	f1c3 0310 	rsb	r3, r3, #16
 8002ef4:	089b      	lsrs	r3, r3, #2
 8002ef6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002ef8:	e005      	b.n	8002f06 <CRYP_AESGCM_Process+0x25c>
    }
    else
    {
      lastwordsize = ((16U - npblb) / 4U) + 1U;
 8002efa:	69bb      	ldr	r3, [r7, #24]
 8002efc:	f1c3 0310 	rsb	r3, r3, #16
 8002f00:	089b      	lsrs	r3, r3, #2
 8002f02:	3301      	adds	r3, #1
 8002f04:	62fb      	str	r3, [r7, #44]	; 0x2c
    }
    /*  last block optionally pad the data with zeros*/
    for (index = 0U; index < lastwordsize; index ++)
 8002f06:	2300      	movs	r3, #0
 8002f08:	633b      	str	r3, [r7, #48]	; 0x30
 8002f0a:	e014      	b.n	8002f36 <CRYP_AESGCM_Process+0x28c>
    {
      /* Write the last Input block in the IN FIFO */
      hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002f14:	b29b      	uxth	r3, r3
 8002f16:	009b      	lsls	r3, r3, #2
 8002f18:	441a      	add	r2, r3
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	6812      	ldr	r2, [r2, #0]
 8002f20:	609a      	str	r2, [r3, #8]
      hcryp->CrypInCount++;
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8002f26:	b29b      	uxth	r3, r3
 8002f28:	3301      	adds	r3, #1
 8002f2a:	b29a      	uxth	r2, r3
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	87da      	strh	r2, [r3, #62]	; 0x3e
    for (index = 0U; index < lastwordsize; index ++)
 8002f30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f32:	3301      	adds	r3, #1
 8002f34:	633b      	str	r3, [r7, #48]	; 0x30
 8002f36:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002f38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002f3a:	429a      	cmp	r2, r3
 8002f3c:	d3e6      	bcc.n	8002f0c <CRYP_AESGCM_Process+0x262>
    }
    while (index < 4U)
 8002f3e:	e006      	b.n	8002f4e <CRYP_AESGCM_Process+0x2a4>
    {
      /* pad the data with zeros to have a complete block */
      hcryp->Instance->DINR  = 0U;
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	2200      	movs	r2, #0
 8002f46:	609a      	str	r2, [r3, #8]
      index++;
 8002f48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f4a:	3301      	adds	r3, #1
 8002f4c:	633b      	str	r3, [r7, #48]	; 0x30
    while (index < 4U)
 8002f4e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f50:	2b03      	cmp	r3, #3
 8002f52:	d9f5      	bls.n	8002f40 <CRYP_AESGCM_Process+0x296>
    }
    /* Wait for CCF flag to be raised */
    if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 8002f54:	6839      	ldr	r1, [r7, #0]
 8002f56:	6878      	ldr	r0, [r7, #4]
 8002f58:	f000 fbd2 	bl	8003700 <CRYP_WaitOnCCFlag>
 8002f5c:	4603      	mov	r3, r0
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	d00a      	beq.n	8002f78 <CRYP_AESGCM_Process+0x2ce>
    {
      hcryp->State = HAL_CRYP_STATE_READY;
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	2201      	movs	r2, #1
 8002f66:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
      __HAL_UNLOCK(hcryp);
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
#if (USE_HAL_CRYP_REGISTER_CALLBACKS == 1U)
      /*Call registered error callback*/
      hcryp->ErrorCallback(hcryp);
#else
      /*Call legacy weak error callback*/
      HAL_CRYP_ErrorCallback(hcryp);
 8002f72:	6878      	ldr	r0, [r7, #4]
 8002f74:	f7ff fba2 	bl	80026bc <HAL_CRYP_ErrorCallback>
#endif /* USE_HAL_CRYP_REGISTER_CALLBACKS */
    }

    /* Clear CCF Flag */
    __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	681b      	ldr	r3, [r3, #0]
 8002f7c:	681a      	ldr	r2, [r3, #0]
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002f86:	601a      	str	r2, [r3, #0]

    /*Read the output block from the output FIFO */
    for (index = 0U; index < 4U; index++)
 8002f88:	2300      	movs	r3, #0
 8002f8a:	633b      	str	r3, [r7, #48]	; 0x30
 8002f8c:	e00b      	b.n	8002fa6 <CRYP_AESGCM_Process+0x2fc>
    {
      /* Read the output block from the output FIFO and put them in temporary buffer then get CrypOutBuff from temporary buffer */
      temp[index] = hcryp->Instance->DOUTR;
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	68da      	ldr	r2, [r3, #12]
 8002f94:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f96:	009b      	lsls	r3, r3, #2
 8002f98:	3338      	adds	r3, #56	; 0x38
 8002f9a:	443b      	add	r3, r7
 8002f9c:	f843 2c30 	str.w	r2, [r3, #-48]
    for (index = 0U; index < 4U; index++)
 8002fa0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002fa2:	3301      	adds	r3, #1
 8002fa4:	633b      	str	r3, [r7, #48]	; 0x30
 8002fa6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002fa8:	2b03      	cmp	r3, #3
 8002faa:	d9f0      	bls.n	8002f8e <CRYP_AESGCM_Process+0x2e4>
    }
    for (index = 0U; index < lastwordsize; index++)
 8002fac:	2300      	movs	r3, #0
 8002fae:	633b      	str	r3, [r7, #48]	; 0x30
 8002fb0:	e01a      	b.n	8002fe8 <CRYP_AESGCM_Process+0x33e>
    {
      *(uint32_t *)(hcryp->pCrypOutBuffPtr + (hcryp->CrypOutCount)) = temp[index];
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002fbc:	b29b      	uxth	r3, r3
 8002fbe:	009b      	lsls	r3, r3, #2
 8002fc0:	441a      	add	r2, r3
 8002fc2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002fc4:	009b      	lsls	r3, r3, #2
 8002fc6:	3338      	adds	r3, #56	; 0x38
 8002fc8:	443b      	add	r3, r7
 8002fca:	f853 3c30 	ldr.w	r3, [r3, #-48]
 8002fce:	6013      	str	r3, [r2, #0]
      hcryp->CrypOutCount++;
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002fd6:	b29b      	uxth	r3, r3
 8002fd8:	3301      	adds	r3, #1
 8002fda:	b29a      	uxth	r2, r3
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    for (index = 0U; index < lastwordsize; index++)
 8002fe2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002fe4:	3301      	adds	r3, #1
 8002fe6:	633b      	str	r3, [r7, #48]	; 0x30
 8002fe8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002fea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002fec:	429a      	cmp	r2, r3
 8002fee:	d3e0      	bcc.n	8002fb2 <CRYP_AESGCM_Process+0x308>
    }
  }

  /* Return function status */
  return HAL_OK;
 8002ff0:	2300      	movs	r3, #0
}
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	3738      	adds	r7, #56	; 0x38
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}

08002ffa <CRYP_AESCCM_Process>:
  *         the configuration information for CRYP module
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef CRYP_AESCCM_Process(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 8002ffa:	b580      	push	{r7, lr}
 8002ffc:	b08e      	sub	sp, #56	; 0x38
 8002ffe:	af00      	add	r7, sp, #0
 8003000:	6078      	str	r0, [r7, #4]
 8003002:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  uint32_t wordsize = ((uint32_t)hcryp->Size / 4U) ;
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 800300a:	089b      	lsrs	r3, r3, #2
 800300c:	b29b      	uxth	r3, r3
 800300e:	637b      	str	r3, [r7, #52]	; 0x34
  uint32_t npblb;
  uint32_t lastwordsize;
  uint32_t temp[4] ;  /* Temporary CrypOutBuff */
  uint32_t incount;  /* Temporary CrypInCount Value */
  uint32_t outcount;  /* Temporary CrypOutCount Value */
  uint32_t DoKeyIVConfig = 1U; /* By default, carry out peripheral Key and IV configuration */
 8003010:	2301      	movs	r3, #1
 8003012:	623b      	str	r3, [r7, #32]

  if (hcryp->Init.KeyIVConfigSkip == CRYP_KEYIVCONFIG_ONCE)
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003018:	2b01      	cmp	r3, #1
 800301a:	d118      	bne.n	800304e <CRYP_AESCCM_Process+0x54>
  {
    if (hcryp->KeyIVConfig == 1U)
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003020:	2b01      	cmp	r3, #1
 8003022:	d10a      	bne.n	800303a <CRYP_AESCCM_Process+0x40>
    {
      /* If the Key and IV configuration has to be done only once
         and if it has already been done, skip it */
      DoKeyIVConfig = 0U;
 8003024:	2300      	movs	r3, #0
 8003026:	623b      	str	r3, [r7, #32]
      hcryp->SizesSum += hcryp->Size; /* Compute message total payload length */
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800302c:	687a      	ldr	r2, [r7, #4]
 800302e:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 8003032:	441a      	add	r2, r3
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	65da      	str	r2, [r3, #92]	; 0x5c
 8003038:	e00f      	b.n	800305a <CRYP_AESCCM_Process+0x60>
    else
    {
      /* If the Key and IV configuration has to be done only once
         and if it has not been done already, do it and set KeyIVConfig
         to keep track it won't have to be done again next time */
      hcryp->KeyIVConfig = 1U;
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	2201      	movs	r2, #1
 800303e:	659a      	str	r2, [r3, #88]	; 0x58
      hcryp->SizesSum = hcryp->Size; /* Merely store payload length */
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8003046:	461a      	mov	r2, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	65da      	str	r2, [r3, #92]	; 0x5c
 800304c:	e005      	b.n	800305a <CRYP_AESCCM_Process+0x60>
    }
  }
  else
  {
    hcryp->SizesSum = hcryp->Size;
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8003054:	461a      	mov	r2, r3
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	65da      	str	r2, [r3, #92]	; 0x5c
  }

  if (DoKeyIVConfig == 1U)
 800305a:	6a3b      	ldr	r3, [r7, #32]
 800305c:	2b01      	cmp	r3, #1
 800305e:	d16d      	bne.n	800313c <CRYP_AESCCM_Process+0x142>
  {
    /*  Reset CrypHeaderCount */
    hcryp->CrypHeaderCount = 0U;
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	2200      	movs	r2, #0
 8003064:	879a      	strh	r2, [r3, #60]	; 0x3c

    /********************** Init phase ******************************************/

    CRYP_SET_PHASE(hcryp, CRYP_PHASE_INIT);
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	681a      	ldr	r2, [r3, #0]
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	f422 42c0 	bic.w	r2, r2, #24576	; 0x6000
 8003074:	601a      	str	r2, [r3, #0]

    /* Set the key */
    CRYP_SetKey(hcryp, hcryp->Init.KeySize);
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	689b      	ldr	r3, [r3, #8]
 800307a:	4619      	mov	r1, r3
 800307c:	6878      	ldr	r0, [r7, #4]
 800307e:	f7ff fdb4 	bl	8002bea <CRYP_SetKey>

    /* Set the initialization vector (IV) with B0 */
    hcryp->Instance->IVR3 = *(uint32_t *)(hcryp->Init.B0);
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	6a1a      	ldr	r2, [r3, #32]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	6812      	ldr	r2, [r2, #0]
 800308c:	62da      	str	r2, [r3, #44]	; 0x2c
    hcryp->Instance->IVR2 = *(uint32_t *)(hcryp->Init.B0 + 1U);
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	6a1a      	ldr	r2, [r3, #32]
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	6852      	ldr	r2, [r2, #4]
 8003098:	629a      	str	r2, [r3, #40]	; 0x28
    hcryp->Instance->IVR1 = *(uint32_t *)(hcryp->Init.B0 + 2U);
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	6a1a      	ldr	r2, [r3, #32]
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	6892      	ldr	r2, [r2, #8]
 80030a4:	625a      	str	r2, [r3, #36]	; 0x24
    hcryp->Instance->IVR0 = *(uint32_t *)(hcryp->Init.B0 + 3U);
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	6a1a      	ldr	r2, [r3, #32]
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	68d2      	ldr	r2, [r2, #12]
 80030b0:	621a      	str	r2, [r3, #32]

    /* Enable the CRYP peripheral */
    __HAL_CRYP_ENABLE(hcryp);
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	681a      	ldr	r2, [r3, #0]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	f042 0201 	orr.w	r2, r2, #1
 80030c0:	601a      	str	r2, [r3, #0]

    /* just wait for hash computation */
    if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 80030c2:	6839      	ldr	r1, [r7, #0]
 80030c4:	6878      	ldr	r0, [r7, #4]
 80030c6:	f000 fb1b 	bl	8003700 <CRYP_WaitOnCCFlag>
 80030ca:	4603      	mov	r3, r0
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d00f      	beq.n	80030f0 <CRYP_AESCCM_Process+0xf6>
    {
      /* Change state */
      hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80030d4:	f043 0210 	orr.w	r2, r3, #16
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	655a      	str	r2, [r3, #84]	; 0x54
      hcryp->State = HAL_CRYP_STATE_READY;
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	2201      	movs	r2, #1
 80030e0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

      /* Process unlocked & return error */
      __HAL_UNLOCK(hcryp);
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	2200      	movs	r2, #0
 80030e8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
      return HAL_ERROR;
 80030ec:	2301      	movs	r3, #1
 80030ee:	e12d      	b.n	800334c <CRYP_AESCCM_Process+0x352>
    }
    /* Clear CCF flag */
    __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	681a      	ldr	r2, [r3, #0]
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80030fe:	601a      	str	r2, [r3, #0]

    /************************ Header phase *************************************/
    /* Header block(B1) : associated data length expressed in bytes concatenated
    with Associated Data (A)*/
    if (CRYP_GCMCCM_SetHeaderPhase(hcryp,  Timeout) != HAL_OK)
 8003100:	6839      	ldr	r1, [r7, #0]
 8003102:	6878      	ldr	r0, [r7, #4]
 8003104:	f000 f926 	bl	8003354 <CRYP_GCMCCM_SetHeaderPhase>
 8003108:	4603      	mov	r3, r0
 800310a:	2b00      	cmp	r3, #0
 800310c:	d001      	beq.n	8003112 <CRYP_AESCCM_Process+0x118>
    {
      return HAL_ERROR;
 800310e:	2301      	movs	r3, #1
 8003110:	e11c      	b.n	800334c <CRYP_AESCCM_Process+0x352>
    }

    /*************************Payload phase ************************************/

    /* Set the phase */
    hcryp->Phase = CRYP_PHASE_PROCESS;
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	2202      	movs	r2, #2
 8003116:	645a      	str	r2, [r3, #68]	; 0x44

    /* Select payload phase once the header phase is performed */
    MODIFY_REG(hcryp->Instance->CR, AES_CR_GCMPH, CRYP_PHASE_PAYLOAD);
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800312a:	601a      	str	r2, [r3, #0]

    /* Set to 0 the number of non-valid bytes using NPBLB register*/
    MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, 0U);
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	681a      	ldr	r2, [r3, #0]
 8003132:	687b      	ldr	r3, [r7, #4]
 8003134:	681b      	ldr	r3, [r3, #0]
 8003136:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800313a:	601a      	str	r2, [r3, #0]

  } /* if (DoKeyIVConfig == 1U) */

  if ((hcryp->Size % 16U) != 0U)
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8003142:	f003 030f 	and.w	r3, r3, #15
 8003146:	b29b      	uxth	r3, r3
 8003148:	2b00      	cmp	r3, #0
 800314a:	d003      	beq.n	8003154 <CRYP_AESCCM_Process+0x15a>
  {
    /* recalculate  wordsize */
    wordsize = ((wordsize / 4U) * 4U) ;
 800314c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800314e:	f023 0303 	bic.w	r3, r3, #3
 8003152:	637b      	str	r3, [r7, #52]	; 0x34
  }
  /* Get tick */
  tickstart = HAL_GetTick();
 8003154:	f7fe ffcc 	bl	80020f0 <HAL_GetTick>
 8003158:	61f8      	str	r0, [r7, #28]

  /* Write input data and get output data */
  incount = hcryp->CrypInCount;
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800315e:	b29b      	uxth	r3, r3
 8003160:	62bb      	str	r3, [r7, #40]	; 0x28
  outcount = hcryp->CrypOutCount;
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8003168:	b29b      	uxth	r3, r3
 800316a:	627b      	str	r3, [r7, #36]	; 0x24
  while ((incount < wordsize) && (outcount < wordsize))
 800316c:	e033      	b.n	80031d6 <CRYP_AESCCM_Process+0x1dc>
  {
    /* Write plain data and get cipher data */
    CRYP_AES_ProcessData(hcryp, Timeout);
 800316e:	6839      	ldr	r1, [r7, #0]
 8003170:	6878      	ldr	r0, [r7, #4]
 8003172:	f7ff fc82 	bl	8002a7a <CRYP_AES_ProcessData>

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003176:	683b      	ldr	r3, [r7, #0]
 8003178:	f1b3 3fff 	cmp.w	r3, #4294967295
 800317c:	d022      	beq.n	80031c4 <CRYP_AESCCM_Process+0x1ca>
    {
      if (((HAL_GetTick() - tickstart) > Timeout) ||(Timeout == 0U))
 800317e:	f7fe ffb7 	bl	80020f0 <HAL_GetTick>
 8003182:	4602      	mov	r2, r0
 8003184:	69fb      	ldr	r3, [r7, #28]
 8003186:	1ad3      	subs	r3, r2, r3
 8003188:	683a      	ldr	r2, [r7, #0]
 800318a:	429a      	cmp	r2, r3
 800318c:	d302      	bcc.n	8003194 <CRYP_AESCCM_Process+0x19a>
 800318e:	683b      	ldr	r3, [r7, #0]
 8003190:	2b00      	cmp	r3, #0
 8003192:	d117      	bne.n	80031c4 <CRYP_AESCCM_Process+0x1ca>
      {
        /* Disable the CRYP peripheral clock */
        __HAL_CRYP_DISABLE(hcryp);
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	681a      	ldr	r2, [r3, #0]
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	f022 0201 	bic.w	r2, r2, #1
 80031a2:	601a      	str	r2, [r3, #0]

        /* Change state */
        hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031a8:	f043 0210 	orr.w	r2, r3, #16
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	655a      	str	r2, [r3, #84]	; 0x54
        hcryp->State = HAL_CRYP_STATE_READY;
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2201      	movs	r2, #1
 80031b4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process unlocked */
        __HAL_UNLOCK(hcryp);
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	2200      	movs	r2, #0
 80031bc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        return HAL_ERROR;
 80031c0:	2301      	movs	r3, #1
 80031c2:	e0c3      	b.n	800334c <CRYP_AESCCM_Process+0x352>
      }
    }
    incount = hcryp->CrypInCount;
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80031c8:	b29b      	uxth	r3, r3
 80031ca:	62bb      	str	r3, [r7, #40]	; 0x28
    outcount = hcryp->CrypOutCount;
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 80031d2:	b29b      	uxth	r3, r3
 80031d4:	627b      	str	r3, [r7, #36]	; 0x24
  while ((incount < wordsize) && (outcount < wordsize))
 80031d6:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80031d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031da:	429a      	cmp	r2, r3
 80031dc:	d203      	bcs.n	80031e6 <CRYP_AESCCM_Process+0x1ec>
 80031de:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80031e0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80031e2:	429a      	cmp	r2, r3
 80031e4:	d3c3      	bcc.n	800316e <CRYP_AESCCM_Process+0x174>
  }

  if ((hcryp->Size % 16U) != 0U)
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 80031ec:	f003 030f 	and.w	r3, r3, #15
 80031f0:	b29b      	uxth	r3, r3
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	f000 80a9 	beq.w	800334a <CRYP_AESCCM_Process+0x350>
  {
    /* Compute the number of padding bytes in last block of payload */
    npblb = ((((uint32_t)hcryp->Size / 16U) + 1U) * 16U) - ((uint32_t)hcryp->Size);
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 80031fe:	091b      	lsrs	r3, r3, #4
 8003200:	b29b      	uxth	r3, r3
 8003202:	3301      	adds	r3, #1
 8003204:	011b      	lsls	r3, r3, #4
 8003206:	687a      	ldr	r2, [r7, #4]
 8003208:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
 800320c:	1a9b      	subs	r3, r3, r2
 800320e:	61bb      	str	r3, [r7, #24]

    if ((hcryp->Instance->CR & AES_CR_MODE) == CRYP_OPERATINGMODE_DECRYPT)
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	f003 0318 	and.w	r3, r3, #24
 800321a:	2b10      	cmp	r3, #16
 800321c:	d10a      	bne.n	8003234 <CRYP_AESCCM_Process+0x23a>
    {
      /* Set Npblb in case of AES CCM payload decryption to get right tag  */
      MODIFY_REG(hcryp->Instance->CR, AES_CR_NPBLB, npblb << 20);
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	681b      	ldr	r3, [r3, #0]
 8003224:	f423 0170 	bic.w	r1, r3, #15728640	; 0xf00000
 8003228:	69bb      	ldr	r3, [r7, #24]
 800322a:	051a      	lsls	r2, r3, #20
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	430a      	orrs	r2, r1
 8003232:	601a      	str	r2, [r3, #0]

    }
    /* Number of valid words (lastwordsize) in last block */
    if ((npblb % 4U) == 0U)
 8003234:	69bb      	ldr	r3, [r7, #24]
 8003236:	f003 0303 	and.w	r3, r3, #3
 800323a:	2b00      	cmp	r3, #0
 800323c:	d105      	bne.n	800324a <CRYP_AESCCM_Process+0x250>
    {
      lastwordsize = (16U - npblb) / 4U;
 800323e:	69bb      	ldr	r3, [r7, #24]
 8003240:	f1c3 0310 	rsb	r3, r3, #16
 8003244:	089b      	lsrs	r3, r3, #2
 8003246:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003248:	e005      	b.n	8003256 <CRYP_AESCCM_Process+0x25c>
    }
    else
    {
      lastwordsize = ((16U - npblb) / 4U) + 1U;
 800324a:	69bb      	ldr	r3, [r7, #24]
 800324c:	f1c3 0310 	rsb	r3, r3, #16
 8003250:	089b      	lsrs	r3, r3, #2
 8003252:	3301      	adds	r3, #1
 8003254:	62fb      	str	r3, [r7, #44]	; 0x2c
    }

    /* Write the last input block in the IN FIFO */
    for (loopcounter = 0U; loopcounter < lastwordsize; loopcounter ++)
 8003256:	2300      	movs	r3, #0
 8003258:	633b      	str	r3, [r7, #48]	; 0x30
 800325a:	e014      	b.n	8003286 <CRYP_AESCCM_Process+0x28c>
    {
      hcryp->Instance->DINR  = *(uint32_t *)(hcryp->pCrypInBuffPtr + hcryp->CrypInCount);
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003264:	b29b      	uxth	r3, r3
 8003266:	009b      	lsls	r3, r3, #2
 8003268:	441a      	add	r2, r3
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	6812      	ldr	r2, [r2, #0]
 8003270:	609a      	str	r2, [r3, #8]
      hcryp->CrypInCount++;
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8003276:	b29b      	uxth	r3, r3
 8003278:	3301      	adds	r3, #1
 800327a:	b29a      	uxth	r2, r3
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	87da      	strh	r2, [r3, #62]	; 0x3e
    for (loopcounter = 0U; loopcounter < lastwordsize; loopcounter ++)
 8003280:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003282:	3301      	adds	r3, #1
 8003284:	633b      	str	r3, [r7, #48]	; 0x30
 8003286:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003288:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800328a:	429a      	cmp	r2, r3
 800328c:	d3e6      	bcc.n	800325c <CRYP_AESCCM_Process+0x262>
    }

    /* Pad the data with zeros to have a complete block */
    while (loopcounter < 4U)
 800328e:	e006      	b.n	800329e <CRYP_AESCCM_Process+0x2a4>
    {
      hcryp->Instance->DINR  = 0U;
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	2200      	movs	r2, #0
 8003296:	609a      	str	r2, [r3, #8]
      loopcounter++;
 8003298:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800329a:	3301      	adds	r3, #1
 800329c:	633b      	str	r3, [r7, #48]	; 0x30
    while (loopcounter < 4U)
 800329e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80032a0:	2b03      	cmp	r3, #3
 80032a2:	d9f5      	bls.n	8003290 <CRYP_AESCCM_Process+0x296>
    }
    /* just wait for hash computation */
    if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 80032a4:	6839      	ldr	r1, [r7, #0]
 80032a6:	6878      	ldr	r0, [r7, #4]
 80032a8:	f000 fa2a 	bl	8003700 <CRYP_WaitOnCCFlag>
 80032ac:	4603      	mov	r3, r0
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	d00f      	beq.n	80032d2 <CRYP_AESCCM_Process+0x2d8>
    {
      /* Change state */
      hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80032b6:	f043 0210 	orr.w	r2, r3, #16
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	655a      	str	r2, [r3, #84]	; 0x54
      hcryp->State = HAL_CRYP_STATE_READY;
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	2201      	movs	r2, #1
 80032c2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

      /* Process unlocked & return error */
      __HAL_UNLOCK(hcryp);
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	2200      	movs	r2, #0
 80032ca:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
      return HAL_ERROR;
 80032ce:	2301      	movs	r3, #1
 80032d0:	e03c      	b.n	800334c <CRYP_AESCCM_Process+0x352>
    }
    /* Clear CCF flag */
    __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	681a      	ldr	r2, [r3, #0]
 80032d8:	687b      	ldr	r3, [r7, #4]
 80032da:	681b      	ldr	r3, [r3, #0]
 80032dc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80032e0:	601a      	str	r2, [r3, #0]

    for (loopcounter = 0U; loopcounter < 4U; loopcounter++)
 80032e2:	2300      	movs	r3, #0
 80032e4:	633b      	str	r3, [r7, #48]	; 0x30
 80032e6:	e00b      	b.n	8003300 <CRYP_AESCCM_Process+0x306>
    {
      /* Read the output block from the output FIFO and put them in temporary buffer then get CrypOutBuff from temporary buffer */
      temp[loopcounter] = hcryp->Instance->DOUTR;
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	68da      	ldr	r2, [r3, #12]
 80032ee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80032f0:	009b      	lsls	r3, r3, #2
 80032f2:	3338      	adds	r3, #56	; 0x38
 80032f4:	443b      	add	r3, r7
 80032f6:	f843 2c30 	str.w	r2, [r3, #-48]
    for (loopcounter = 0U; loopcounter < 4U; loopcounter++)
 80032fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80032fc:	3301      	adds	r3, #1
 80032fe:	633b      	str	r3, [r7, #48]	; 0x30
 8003300:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003302:	2b03      	cmp	r3, #3
 8003304:	d9f0      	bls.n	80032e8 <CRYP_AESCCM_Process+0x2ee>
    }
    for (loopcounter = 0U; loopcounter<lastwordsize; loopcounter++)
 8003306:	2300      	movs	r3, #0
 8003308:	633b      	str	r3, [r7, #48]	; 0x30
 800330a:	e01a      	b.n	8003342 <CRYP_AESCCM_Process+0x348>
    {
      *(uint32_t *)(hcryp->pCrypOutBuffPtr + hcryp->CrypOutCount) = temp[loopcounter];
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8003316:	b29b      	uxth	r3, r3
 8003318:	009b      	lsls	r3, r3, #2
 800331a:	441a      	add	r2, r3
 800331c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800331e:	009b      	lsls	r3, r3, #2
 8003320:	3338      	adds	r3, #56	; 0x38
 8003322:	443b      	add	r3, r7
 8003324:	f853 3c30 	ldr.w	r3, [r3, #-48]
 8003328:	6013      	str	r3, [r2, #0]
      hcryp->CrypOutCount++;
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8003330:	b29b      	uxth	r3, r3
 8003332:	3301      	adds	r3, #1
 8003334:	b29a      	uxth	r2, r3
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
    for (loopcounter = 0U; loopcounter<lastwordsize; loopcounter++)
 800333c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800333e:	3301      	adds	r3, #1
 8003340:	633b      	str	r3, [r7, #48]	; 0x30
 8003342:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003344:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003346:	429a      	cmp	r2, r3
 8003348:	d3e0      	bcc.n	800330c <CRYP_AESCCM_Process+0x312>
    }
  }

  /* Return function status */
  return HAL_OK;
 800334a:	2300      	movs	r3, #0
}
 800334c:	4618      	mov	r0, r3
 800334e:	3738      	adds	r7, #56	; 0x38
 8003350:	46bd      	mov	sp, r7
 8003352:	bd80      	pop	{r7, pc}

08003354 <CRYP_GCMCCM_SetHeaderPhase>:
  *         the configuration information for CRYP module(Header & HeaderSize)
  * @param  Timeout Timeout value
  * @retval state
  */
static HAL_StatusTypeDef CRYP_GCMCCM_SetHeaderPhase(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 8003354:	b5b0      	push	{r4, r5, r7, lr}
 8003356:	b092      	sub	sp, #72	; 0x48
 8003358:	af00      	add	r7, sp, #0
 800335a:	6078      	str	r0, [r7, #4]
 800335c:	6039      	str	r1, [r7, #0]
  uint32_t loopcounter;
  uint32_t size_in_bytes;
  uint32_t tmp;
  uint32_t mask[12] = {0x0U, 0xFF000000U, 0xFFFF0000U, 0xFFFFFF00U,  /* 32-bit data type */
 800335e:	4b8c      	ldr	r3, [pc, #560]	; (8003590 <CRYP_GCMCCM_SetHeaderPhase+0x23c>)
 8003360:	f107 040c 	add.w	r4, r7, #12
 8003364:	461d      	mov	r5, r3
 8003366:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003368:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800336a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800336c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800336e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8003372:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
                       0x0U, 0x0000FF00U, 0x0000FFFFU, 0xFF00FFFFU,  /* 16-bit data type */
                       0x0U, 0x000000FFU, 0x0000FFFFU, 0x00FFFFFFU}; /*  8-bit data type */

  /***************************** Header phase for GCM/GMAC or CCM *********************************/
  if (hcryp->Init.HeaderWidthUnit == CRYP_HEADERWIDTHUNIT_WORD)
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800337a:	2b00      	cmp	r3, #0
 800337c:	d104      	bne.n	8003388 <CRYP_GCMCCM_SetHeaderPhase+0x34>
  {
    size_in_bytes = hcryp->Init.HeaderSize * 4U;
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	69db      	ldr	r3, [r3, #28]
 8003382:	009b      	lsls	r3, r3, #2
 8003384:	643b      	str	r3, [r7, #64]	; 0x40
 8003386:	e002      	b.n	800338e <CRYP_GCMCCM_SetHeaderPhase+0x3a>
  }
  else
  {
    size_in_bytes = hcryp->Init.HeaderSize;
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	69db      	ldr	r3, [r3, #28]
 800338c:	643b      	str	r3, [r7, #64]	; 0x40
  }

  if ((size_in_bytes != 0U))
 800338e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003390:	2b00      	cmp	r3, #0
 8003392:	f000 8192 	beq.w	80036ba <CRYP_GCMCCM_SetHeaderPhase+0x366>
  {
    /* Select header phase */
    CRYP_SET_PHASE(hcryp, CRYP_PHASE_HEADER);
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80033a8:	601a      	str	r2, [r3, #0]

    /* Enable the CRYP peripheral */
    __HAL_CRYP_ENABLE(hcryp);
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	681a      	ldr	r2, [r3, #0]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	f042 0201 	orr.w	r2, r2, #1
 80033b8:	601a      	str	r2, [r3, #0]

    /* If size_in_bytes is a multiple of blocks (a multiple of four 32-bits words ) */
    if ((size_in_bytes % 16U) == 0U)
 80033ba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80033bc:	f003 030f 	and.w	r3, r3, #15
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d17a      	bne.n	80034ba <CRYP_GCMCCM_SetHeaderPhase+0x166>
    {
      /*  No padding */
      for (loopcounter = 0U; (loopcounter < (size_in_bytes / 4U)); loopcounter += 4U)
 80033c4:	2300      	movs	r3, #0
 80033c6:	647b      	str	r3, [r7, #68]	; 0x44
 80033c8:	e071      	b.n	80034ae <CRYP_GCMCCM_SetHeaderPhase+0x15a>
      {
        /* Write the input block in the data input register */
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	699a      	ldr	r2, [r3, #24]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80033d2:	b29b      	uxth	r3, r3
 80033d4:	009b      	lsls	r3, r3, #2
 80033d6:	441a      	add	r2, r3
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	6812      	ldr	r2, [r2, #0]
 80033de:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80033e4:	b29b      	uxth	r3, r3
 80033e6:	3301      	adds	r3, #1
 80033e8:	b29a      	uxth	r2, r3
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	699a      	ldr	r2, [r3, #24]
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80033f6:	b29b      	uxth	r3, r3
 80033f8:	009b      	lsls	r3, r3, #2
 80033fa:	441a      	add	r2, r3
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	6812      	ldr	r2, [r2, #0]
 8003402:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003408:	b29b      	uxth	r3, r3
 800340a:	3301      	adds	r3, #1
 800340c:	b29a      	uxth	r2, r3
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR  = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	699a      	ldr	r2, [r3, #24]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 800341a:	b29b      	uxth	r3, r3
 800341c:	009b      	lsls	r3, r3, #2
 800341e:	441a      	add	r2, r3
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	6812      	ldr	r2, [r2, #0]
 8003426:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 800342c:	b29b      	uxth	r3, r3
 800342e:	3301      	adds	r3, #1
 8003430:	b29a      	uxth	r2, r3
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	699a      	ldr	r2, [r3, #24]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 800343e:	b29b      	uxth	r3, r3
 8003440:	009b      	lsls	r3, r3, #2
 8003442:	441a      	add	r2, r3
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	6812      	ldr	r2, [r2, #0]
 800344a:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003450:	b29b      	uxth	r3, r3
 8003452:	3301      	adds	r3, #1
 8003454:	b29a      	uxth	r2, r3
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	879a      	strh	r2, [r3, #60]	; 0x3c

        if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 800345a:	6839      	ldr	r1, [r7, #0]
 800345c:	6878      	ldr	r0, [r7, #4]
 800345e:	f000 f94f 	bl	8003700 <CRYP_WaitOnCCFlag>
 8003462:	4603      	mov	r3, r0
 8003464:	2b00      	cmp	r3, #0
 8003466:	d017      	beq.n	8003498 <CRYP_GCMCCM_SetHeaderPhase+0x144>
        {
          /* Disable the CRYP peripheral clock */
          __HAL_CRYP_DISABLE(hcryp);
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	681b      	ldr	r3, [r3, #0]
 800346c:	681a      	ldr	r2, [r3, #0]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	f022 0201 	bic.w	r2, r2, #1
 8003476:	601a      	str	r2, [r3, #0]

          /* Change state */
          hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800347c:	f043 0210 	orr.w	r2, r3, #16
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	655a      	str	r2, [r3, #84]	; 0x54
          hcryp->State = HAL_CRYP_STATE_READY;
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	2201      	movs	r2, #1
 8003488:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

          /* Process unlocked */
          __HAL_UNLOCK(hcryp);
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	2200      	movs	r2, #0
 8003490:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
          return HAL_ERROR;
 8003494:	2301      	movs	r3, #1
 8003496:	e12e      	b.n	80036f6 <CRYP_GCMCCM_SetHeaderPhase+0x3a2>
        }
        /* Clear CCF flag */
        __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8003498:	687b      	ldr	r3, [r7, #4]
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	681a      	ldr	r2, [r3, #0]
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80034a6:	601a      	str	r2, [r3, #0]
      for (loopcounter = 0U; (loopcounter < (size_in_bytes / 4U)); loopcounter += 4U)
 80034a8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80034aa:	3304      	adds	r3, #4
 80034ac:	647b      	str	r3, [r7, #68]	; 0x44
 80034ae:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80034b0:	089b      	lsrs	r3, r3, #2
 80034b2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80034b4:	429a      	cmp	r2, r3
 80034b6:	d388      	bcc.n	80033ca <CRYP_GCMCCM_SetHeaderPhase+0x76>
 80034b8:	e11c      	b.n	80036f4 <CRYP_GCMCCM_SetHeaderPhase+0x3a0>
      }
    }
    else
    {
      /* Write header block in the IN FIFO without last block */
      for (loopcounter = 0U; (loopcounter < ((size_in_bytes / 16U) * 4U)); loopcounter += 4U)
 80034ba:	2300      	movs	r3, #0
 80034bc:	647b      	str	r3, [r7, #68]	; 0x44
 80034be:	e074      	b.n	80035aa <CRYP_GCMCCM_SetHeaderPhase+0x256>
      {
        /* Write the input block in the data input register */
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	699a      	ldr	r2, [r3, #24]
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80034c8:	b29b      	uxth	r3, r3
 80034ca:	009b      	lsls	r3, r3, #2
 80034cc:	441a      	add	r2, r3
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	681b      	ldr	r3, [r3, #0]
 80034d2:	6812      	ldr	r2, [r2, #0]
 80034d4:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80034da:	b29b      	uxth	r3, r3
 80034dc:	3301      	adds	r3, #1
 80034de:	b29a      	uxth	r2, r3
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	699a      	ldr	r2, [r3, #24]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80034ec:	b29b      	uxth	r3, r3
 80034ee:	009b      	lsls	r3, r3, #2
 80034f0:	441a      	add	r2, r3
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	6812      	ldr	r2, [r2, #0]
 80034f8:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80034fe:	b29b      	uxth	r3, r3
 8003500:	3301      	adds	r3, #1
 8003502:	b29a      	uxth	r2, r3
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR  = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	699a      	ldr	r2, [r3, #24]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003510:	b29b      	uxth	r3, r3
 8003512:	009b      	lsls	r3, r3, #2
 8003514:	441a      	add	r2, r3
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	6812      	ldr	r2, [r2, #0]
 800351c:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003522:	b29b      	uxth	r3, r3
 8003524:	3301      	adds	r3, #1
 8003526:	b29a      	uxth	r2, r3
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	879a      	strh	r2, [r3, #60]	; 0x3c
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 800352c:	687b      	ldr	r3, [r7, #4]
 800352e:	699a      	ldr	r2, [r3, #24]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003534:	b29b      	uxth	r3, r3
 8003536:	009b      	lsls	r3, r3, #2
 8003538:	441a      	add	r2, r3
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	6812      	ldr	r2, [r2, #0]
 8003540:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8003546:	b29b      	uxth	r3, r3
 8003548:	3301      	adds	r3, #1
 800354a:	b29a      	uxth	r2, r3
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	879a      	strh	r2, [r3, #60]	; 0x3c

        if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 8003550:	6839      	ldr	r1, [r7, #0]
 8003552:	6878      	ldr	r0, [r7, #4]
 8003554:	f000 f8d4 	bl	8003700 <CRYP_WaitOnCCFlag>
 8003558:	4603      	mov	r3, r0
 800355a:	2b00      	cmp	r3, #0
 800355c:	d01a      	beq.n	8003594 <CRYP_GCMCCM_SetHeaderPhase+0x240>
        {
          /* Disable the CRYP peripheral clock */
          __HAL_CRYP_DISABLE(hcryp);
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	681a      	ldr	r2, [r3, #0]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	681b      	ldr	r3, [r3, #0]
 8003568:	f022 0201 	bic.w	r2, r2, #1
 800356c:	601a      	str	r2, [r3, #0]

          /* Change state */
          hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003572:	f043 0210 	orr.w	r2, r3, #16
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	655a      	str	r2, [r3, #84]	; 0x54
          hcryp->State = HAL_CRYP_STATE_READY;
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	2201      	movs	r2, #1
 800357e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

          /* Process unlocked */
          __HAL_UNLOCK(hcryp);
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	2200      	movs	r2, #0
 8003586:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
          return HAL_ERROR;
 800358a:	2301      	movs	r3, #1
 800358c:	e0b3      	b.n	80036f6 <CRYP_GCMCCM_SetHeaderPhase+0x3a2>
 800358e:	bf00      	nop
 8003590:	0802c450 	.word	0x0802c450
        }
        /* Clear CCF flag */
        __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	681a      	ldr	r2, [r3, #0]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80035a2:	601a      	str	r2, [r3, #0]
      for (loopcounter = 0U; (loopcounter < ((size_in_bytes / 16U) * 4U)); loopcounter += 4U)
 80035a4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80035a6:	3304      	adds	r3, #4
 80035a8:	647b      	str	r3, [r7, #68]	; 0x44
 80035aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80035ac:	091b      	lsrs	r3, r3, #4
 80035ae:	009b      	lsls	r3, r3, #2
 80035b0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80035b2:	429a      	cmp	r2, r3
 80035b4:	d384      	bcc.n	80034c0 <CRYP_GCMCCM_SetHeaderPhase+0x16c>
      }
      /* Write last complete words */
      for (loopcounter = 0U; (loopcounter < ((size_in_bytes / 4U) % 4U)); loopcounter++)
 80035b6:	2300      	movs	r3, #0
 80035b8:	647b      	str	r3, [r7, #68]	; 0x44
 80035ba:	e014      	b.n	80035e6 <CRYP_GCMCCM_SetHeaderPhase+0x292>
      {
        hcryp->Instance->DINR = *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	699a      	ldr	r2, [r3, #24]
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80035c4:	b29b      	uxth	r3, r3
 80035c6:	009b      	lsls	r3, r3, #2
 80035c8:	441a      	add	r2, r3
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	6812      	ldr	r2, [r2, #0]
 80035d0:	609a      	str	r2, [r3, #8]
        hcryp->CrypHeaderCount++ ;
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80035d6:	b29b      	uxth	r3, r3
 80035d8:	3301      	adds	r3, #1
 80035da:	b29a      	uxth	r2, r3
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	879a      	strh	r2, [r3, #60]	; 0x3c
      for (loopcounter = 0U; (loopcounter < ((size_in_bytes / 4U) % 4U)); loopcounter++)
 80035e0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80035e2:	3301      	adds	r3, #1
 80035e4:	647b      	str	r3, [r7, #68]	; 0x44
 80035e6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80035e8:	089b      	lsrs	r3, r3, #2
 80035ea:	f003 0303 	and.w	r3, r3, #3
 80035ee:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80035f0:	429a      	cmp	r2, r3
 80035f2:	d3e3      	bcc.n	80035bc <CRYP_GCMCCM_SetHeaderPhase+0x268>
      }
      /* If the header size is a multiple of words */
      if ((size_in_bytes % 4U) == 0U)
 80035f4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80035f6:	f003 0303 	and.w	r3, r3, #3
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d10b      	bne.n	8003616 <CRYP_GCMCCM_SetHeaderPhase+0x2c2>
      {
        /* Pad the data with zeros to have a complete block */
        while (loopcounter < 4U)
 80035fe:	e006      	b.n	800360e <CRYP_GCMCCM_SetHeaderPhase+0x2ba>
        {
          hcryp->Instance->DINR = 0x0U;
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	2200      	movs	r2, #0
 8003606:	609a      	str	r2, [r3, #8]
          loopcounter++;
 8003608:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800360a:	3301      	adds	r3, #1
 800360c:	647b      	str	r3, [r7, #68]	; 0x44
        while (loopcounter < 4U)
 800360e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003610:	2b03      	cmp	r3, #3
 8003612:	d9f5      	bls.n	8003600 <CRYP_GCMCCM_SetHeaderPhase+0x2ac>
 8003614:	e029      	b.n	800366a <CRYP_GCMCCM_SetHeaderPhase+0x316>
        }
      }
      else
      {
         /* Enter last bytes, padded with zeros */
         tmp =  *(uint32_t *)(hcryp->Init.Header + hcryp->CrypHeaderCount);
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	699a      	ldr	r2, [r3, #24]
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 800361e:	b29b      	uxth	r3, r3
 8003620:	009b      	lsls	r3, r3, #2
 8003622:	4413      	add	r3, r2
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	63fb      	str	r3, [r7, #60]	; 0x3c
         tmp &= mask[(hcryp->Init.DataType * 2U) + (size_in_bytes % 4U)];
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	685b      	ldr	r3, [r3, #4]
 800362c:	005a      	lsls	r2, r3, #1
 800362e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003630:	f003 0303 	and.w	r3, r3, #3
 8003634:	4413      	add	r3, r2
 8003636:	009b      	lsls	r3, r3, #2
 8003638:	3348      	adds	r3, #72	; 0x48
 800363a:	443b      	add	r3, r7
 800363c:	f853 3c3c 	ldr.w	r3, [r3, #-60]
 8003640:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8003642:	4013      	ands	r3, r2
 8003644:	63fb      	str	r3, [r7, #60]	; 0x3c
         hcryp->Instance->DINR = tmp;
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800364c:	609a      	str	r2, [r3, #8]
         loopcounter++;
 800364e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003650:	3301      	adds	r3, #1
 8003652:	647b      	str	r3, [r7, #68]	; 0x44
         /* Pad the data with zeros to have a complete block */
         while (loopcounter < 4U)
 8003654:	e006      	b.n	8003664 <CRYP_GCMCCM_SetHeaderPhase+0x310>
         {
           hcryp->Instance->DINR = 0x0U;
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	681b      	ldr	r3, [r3, #0]
 800365a:	2200      	movs	r2, #0
 800365c:	609a      	str	r2, [r3, #8]
           loopcounter++;
 800365e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003660:	3301      	adds	r3, #1
 8003662:	647b      	str	r3, [r7, #68]	; 0x44
         while (loopcounter < 4U)
 8003664:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003666:	2b03      	cmp	r3, #3
 8003668:	d9f5      	bls.n	8003656 <CRYP_GCMCCM_SetHeaderPhase+0x302>
         }
      }

      if (CRYP_WaitOnCCFlag(hcryp, Timeout) != HAL_OK)
 800366a:	6839      	ldr	r1, [r7, #0]
 800366c:	6878      	ldr	r0, [r7, #4]
 800366e:	f000 f847 	bl	8003700 <CRYP_WaitOnCCFlag>
 8003672:	4603      	mov	r3, r0
 8003674:	2b00      	cmp	r3, #0
 8003676:	d017      	beq.n	80036a8 <CRYP_GCMCCM_SetHeaderPhase+0x354>
      {
        /* Disable the CRYP peripheral clock */
        __HAL_CRYP_DISABLE(hcryp);
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	681b      	ldr	r3, [r3, #0]
 800367c:	681a      	ldr	r2, [r3, #0]
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	f022 0201 	bic.w	r2, r2, #1
 8003686:	601a      	str	r2, [r3, #0]

        /* Change state */
        hcryp->ErrorCode |= HAL_CRYP_ERROR_TIMEOUT;
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800368c:	f043 0210 	orr.w	r2, r3, #16
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	655a      	str	r2, [r3, #84]	; 0x54
        hcryp->State = HAL_CRYP_STATE_READY;
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	2201      	movs	r2, #1
 8003698:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process unlocked */
        __HAL_UNLOCK(hcryp);
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	2200      	movs	r2, #0
 80036a0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
        return HAL_ERROR;
 80036a4:	2301      	movs	r3, #1
 80036a6:	e026      	b.n	80036f6 <CRYP_GCMCCM_SetHeaderPhase+0x3a2>
      }
      /* Clear CCF flag */
      __HAL_CRYP_CLEAR_FLAG(hcryp, CRYP_CCF_CLEAR);
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	681b      	ldr	r3, [r3, #0]
 80036ac:	681a      	ldr	r2, [r3, #0]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80036b6:	601a      	str	r2, [r3, #0]
 80036b8:	e01c      	b.n	80036f4 <CRYP_GCMCCM_SetHeaderPhase+0x3a0>
    }
  }
  else
  {
    /*Workaround 1: only AES, before re-enabling the peripheral, datatype can be configured.*/
    MODIFY_REG(hcryp->Instance->CR, AES_CR_DATATYPE, hcryp->Init.DataType);
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	f023 0106 	bic.w	r1, r3, #6
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	685a      	ldr	r2, [r3, #4]
 80036c8:	687b      	ldr	r3, [r7, #4]
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	430a      	orrs	r2, r1
 80036ce:	601a      	str	r2, [r3, #0]

    /* Select header phase */
    CRYP_SET_PHASE(hcryp, CRYP_PHASE_HEADER);
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	681b      	ldr	r3, [r3, #0]
 80036de:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80036e2:	601a      	str	r2, [r3, #0]

    /* Enable the CRYP peripheral */
    __HAL_CRYP_ENABLE(hcryp);
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	681b      	ldr	r3, [r3, #0]
 80036e8:	681a      	ldr	r2, [r3, #0]
 80036ea:	687b      	ldr	r3, [r7, #4]
 80036ec:	681b      	ldr	r3, [r3, #0]
 80036ee:	f042 0201 	orr.w	r2, r2, #1
 80036f2:	601a      	str	r2, [r3, #0]
  }
  /* Return function status */
  return HAL_OK;
 80036f4:	2300      	movs	r3, #0
}
 80036f6:	4618      	mov	r0, r3
 80036f8:	3748      	adds	r7, #72	; 0x48
 80036fa:	46bd      	mov	sp, r7
 80036fc:	bdb0      	pop	{r4, r5, r7, pc}
 80036fe:	bf00      	nop

08003700 <CRYP_WaitOnCCFlag>:
  * @param  Timeout Timeout duration.
  * @note   This function can only be used in thread mode.
  * @retval HAL status
  */
static HAL_StatusTypeDef CRYP_WaitOnCCFlag(CRYP_HandleTypeDef *hcryp, uint32_t Timeout)
{
 8003700:	b580      	push	{r7, lr}
 8003702:	b084      	sub	sp, #16
 8003704:	af00      	add	r7, sp, #0
 8003706:	6078      	str	r0, [r7, #4]
 8003708:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Get timeout */
  tickstart = HAL_GetTick();
 800370a:	f7fe fcf1 	bl	80020f0 <HAL_GetTick>
 800370e:	60f8      	str	r0, [r7, #12]

  while (HAL_IS_BIT_CLR(hcryp->Instance->SR, AES_SR_CCF))
 8003710:	e010      	b.n	8003734 <CRYP_WaitOnCCFlag+0x34>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003712:	683b      	ldr	r3, [r7, #0]
 8003714:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003718:	d00c      	beq.n	8003734 <CRYP_WaitOnCCFlag+0x34>
    {
      if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800371a:	f7fe fce9 	bl	80020f0 <HAL_GetTick>
 800371e:	4602      	mov	r2, r0
 8003720:	68fb      	ldr	r3, [r7, #12]
 8003722:	1ad3      	subs	r3, r2, r3
 8003724:	683a      	ldr	r2, [r7, #0]
 8003726:	429a      	cmp	r2, r3
 8003728:	d302      	bcc.n	8003730 <CRYP_WaitOnCCFlag+0x30>
 800372a:	683b      	ldr	r3, [r7, #0]
 800372c:	2b00      	cmp	r3, #0
 800372e:	d101      	bne.n	8003734 <CRYP_WaitOnCCFlag+0x34>
      {
        return HAL_ERROR;
 8003730:	2301      	movs	r3, #1
 8003732:	e007      	b.n	8003744 <CRYP_WaitOnCCFlag+0x44>
  while (HAL_IS_BIT_CLR(hcryp->Instance->SR, AES_SR_CCF))
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	685b      	ldr	r3, [r3, #4]
 800373a:	f003 0301 	and.w	r3, r3, #1
 800373e:	2b00      	cmp	r3, #0
 8003740:	d0e7      	beq.n	8003712 <CRYP_WaitOnCCFlag+0x12>
      }
    }
  }
  return HAL_OK;
 8003742:	2300      	movs	r3, #0
}
 8003744:	4618      	mov	r0, r3
 8003746:	3710      	adds	r7, #16
 8003748:	46bd      	mov	sp, r7
 800374a:	bd80      	pop	{r7, pc}

0800374c <HAL_GPIO_Init>:
  * @param GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800374c:	b480      	push	{r7}
 800374e:	b087      	sub	sp, #28
 8003750:	af00      	add	r7, sp, #0
 8003752:	6078      	str	r0, [r7, #4]
 8003754:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8003756:	2300      	movs	r3, #0
 8003758:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800375a:	e140      	b.n	80039de <HAL_GPIO_Init+0x292>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 800375c:	683b      	ldr	r3, [r7, #0]
 800375e:	681a      	ldr	r2, [r3, #0]
 8003760:	2101      	movs	r1, #1
 8003762:	697b      	ldr	r3, [r7, #20]
 8003764:	fa01 f303 	lsl.w	r3, r1, r3
 8003768:	4013      	ands	r3, r2
 800376a:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	2b00      	cmp	r3, #0
 8003770:	f000 8132 	beq.w	80039d8 <HAL_GPIO_Init+0x28c>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003774:	683b      	ldr	r3, [r7, #0]
 8003776:	685b      	ldr	r3, [r3, #4]
 8003778:	f003 0303 	and.w	r3, r3, #3
 800377c:	2b01      	cmp	r3, #1
 800377e:	d005      	beq.n	800378c <HAL_GPIO_Init+0x40>
 8003780:	683b      	ldr	r3, [r7, #0]
 8003782:	685b      	ldr	r3, [r3, #4]
 8003784:	f003 0303 	and.w	r3, r3, #3
 8003788:	2b02      	cmp	r3, #2
 800378a:	d130      	bne.n	80037ee <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	689b      	ldr	r3, [r3, #8]
 8003790:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8003792:	697b      	ldr	r3, [r7, #20]
 8003794:	005b      	lsls	r3, r3, #1
 8003796:	2203      	movs	r2, #3
 8003798:	fa02 f303 	lsl.w	r3, r2, r3
 800379c:	43db      	mvns	r3, r3
 800379e:	693a      	ldr	r2, [r7, #16]
 80037a0:	4013      	ands	r3, r2
 80037a2:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80037a4:	683b      	ldr	r3, [r7, #0]
 80037a6:	68da      	ldr	r2, [r3, #12]
 80037a8:	697b      	ldr	r3, [r7, #20]
 80037aa:	005b      	lsls	r3, r3, #1
 80037ac:	fa02 f303 	lsl.w	r3, r2, r3
 80037b0:	693a      	ldr	r2, [r7, #16]
 80037b2:	4313      	orrs	r3, r2
 80037b4:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80037b6:	687b      	ldr	r3, [r7, #4]
 80037b8:	693a      	ldr	r2, [r7, #16]
 80037ba:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	685b      	ldr	r3, [r3, #4]
 80037c0:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 80037c2:	2201      	movs	r2, #1
 80037c4:	697b      	ldr	r3, [r7, #20]
 80037c6:	fa02 f303 	lsl.w	r3, r2, r3
 80037ca:	43db      	mvns	r3, r3
 80037cc:	693a      	ldr	r2, [r7, #16]
 80037ce:	4013      	ands	r3, r2
 80037d0:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80037d2:	683b      	ldr	r3, [r7, #0]
 80037d4:	685b      	ldr	r3, [r3, #4]
 80037d6:	091b      	lsrs	r3, r3, #4
 80037d8:	f003 0201 	and.w	r2, r3, #1
 80037dc:	697b      	ldr	r3, [r7, #20]
 80037de:	fa02 f303 	lsl.w	r3, r2, r3
 80037e2:	693a      	ldr	r2, [r7, #16]
 80037e4:	4313      	orrs	r3, r2
 80037e6:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	693a      	ldr	r2, [r7, #16]
 80037ec:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80037ee:	683b      	ldr	r3, [r7, #0]
 80037f0:	685b      	ldr	r3, [r3, #4]
 80037f2:	f003 0303 	and.w	r3, r3, #3
 80037f6:	2b03      	cmp	r3, #3
 80037f8:	d017      	beq.n	800382a <HAL_GPIO_Init+0xde>
      {
        temp = GPIOx->PUPDR;
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	68db      	ldr	r3, [r3, #12]
 80037fe:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003800:	697b      	ldr	r3, [r7, #20]
 8003802:	005b      	lsls	r3, r3, #1
 8003804:	2203      	movs	r2, #3
 8003806:	fa02 f303 	lsl.w	r3, r2, r3
 800380a:	43db      	mvns	r3, r3
 800380c:	693a      	ldr	r2, [r7, #16]
 800380e:	4013      	ands	r3, r2
 8003810:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003812:	683b      	ldr	r3, [r7, #0]
 8003814:	689a      	ldr	r2, [r3, #8]
 8003816:	697b      	ldr	r3, [r7, #20]
 8003818:	005b      	lsls	r3, r3, #1
 800381a:	fa02 f303 	lsl.w	r3, r2, r3
 800381e:	693a      	ldr	r2, [r7, #16]
 8003820:	4313      	orrs	r3, r2
 8003822:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	693a      	ldr	r2, [r7, #16]
 8003828:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800382a:	683b      	ldr	r3, [r7, #0]
 800382c:	685b      	ldr	r3, [r3, #4]
 800382e:	f003 0303 	and.w	r3, r3, #3
 8003832:	2b02      	cmp	r3, #2
 8003834:	d123      	bne.n	800387e <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003836:	697b      	ldr	r3, [r7, #20]
 8003838:	08da      	lsrs	r2, r3, #3
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	3208      	adds	r2, #8
 800383e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003842:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8003844:	697b      	ldr	r3, [r7, #20]
 8003846:	f003 0307 	and.w	r3, r3, #7
 800384a:	009b      	lsls	r3, r3, #2
 800384c:	220f      	movs	r2, #15
 800384e:	fa02 f303 	lsl.w	r3, r2, r3
 8003852:	43db      	mvns	r3, r3
 8003854:	693a      	ldr	r2, [r7, #16]
 8003856:	4013      	ands	r3, r2
 8003858:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 800385a:	683b      	ldr	r3, [r7, #0]
 800385c:	691a      	ldr	r2, [r3, #16]
 800385e:	697b      	ldr	r3, [r7, #20]
 8003860:	f003 0307 	and.w	r3, r3, #7
 8003864:	009b      	lsls	r3, r3, #2
 8003866:	fa02 f303 	lsl.w	r3, r2, r3
 800386a:	693a      	ldr	r2, [r7, #16]
 800386c:	4313      	orrs	r3, r2
 800386e:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003870:	697b      	ldr	r3, [r7, #20]
 8003872:	08da      	lsrs	r2, r3, #3
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	3208      	adds	r2, #8
 8003878:	6939      	ldr	r1, [r7, #16]
 800387a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8003884:	697b      	ldr	r3, [r7, #20]
 8003886:	005b      	lsls	r3, r3, #1
 8003888:	2203      	movs	r2, #3
 800388a:	fa02 f303 	lsl.w	r3, r2, r3
 800388e:	43db      	mvns	r3, r3
 8003890:	693a      	ldr	r2, [r7, #16]
 8003892:	4013      	ands	r3, r2
 8003894:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	685b      	ldr	r3, [r3, #4]
 800389a:	f003 0203 	and.w	r2, r3, #3
 800389e:	697b      	ldr	r3, [r7, #20]
 80038a0:	005b      	lsls	r3, r3, #1
 80038a2:	fa02 f303 	lsl.w	r3, r2, r3
 80038a6:	693a      	ldr	r2, [r7, #16]
 80038a8:	4313      	orrs	r3, r2
 80038aa:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	693a      	ldr	r2, [r7, #16]
 80038b0:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80038b2:	683b      	ldr	r3, [r7, #0]
 80038b4:	685b      	ldr	r3, [r3, #4]
 80038b6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	f000 808c 	beq.w	80039d8 <HAL_GPIO_Init+0x28c>
      {
        temp = SYSCFG->EXTICR[position >> 2u];
 80038c0:	4a4e      	ldr	r2, [pc, #312]	; (80039fc <HAL_GPIO_Init+0x2b0>)
 80038c2:	697b      	ldr	r3, [r7, #20]
 80038c4:	089b      	lsrs	r3, r3, #2
 80038c6:	3302      	adds	r3, #2
 80038c8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80038cc:	613b      	str	r3, [r7, #16]
        temp &= ~(0x07uL << (4U * (position & 0x03U)));
 80038ce:	697b      	ldr	r3, [r7, #20]
 80038d0:	f003 0303 	and.w	r3, r3, #3
 80038d4:	009b      	lsls	r3, r3, #2
 80038d6:	2207      	movs	r2, #7
 80038d8:	fa02 f303 	lsl.w	r3, r2, r3
 80038dc:	43db      	mvns	r3, r3
 80038de:	693a      	ldr	r2, [r7, #16]
 80038e0:	4013      	ands	r3, r2
 80038e2:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80038ea:	d00d      	beq.n	8003908 <HAL_GPIO_Init+0x1bc>
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	4a44      	ldr	r2, [pc, #272]	; (8003a00 <HAL_GPIO_Init+0x2b4>)
 80038f0:	4293      	cmp	r3, r2
 80038f2:	d007      	beq.n	8003904 <HAL_GPIO_Init+0x1b8>
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	4a43      	ldr	r2, [pc, #268]	; (8003a04 <HAL_GPIO_Init+0x2b8>)
 80038f8:	4293      	cmp	r3, r2
 80038fa:	d101      	bne.n	8003900 <HAL_GPIO_Init+0x1b4>
 80038fc:	2302      	movs	r3, #2
 80038fe:	e004      	b.n	800390a <HAL_GPIO_Init+0x1be>
 8003900:	2307      	movs	r3, #7
 8003902:	e002      	b.n	800390a <HAL_GPIO_Init+0x1be>
 8003904:	2301      	movs	r3, #1
 8003906:	e000      	b.n	800390a <HAL_GPIO_Init+0x1be>
 8003908:	2300      	movs	r3, #0
 800390a:	697a      	ldr	r2, [r7, #20]
 800390c:	f002 0203 	and.w	r2, r2, #3
 8003910:	0092      	lsls	r2, r2, #2
 8003912:	4093      	lsls	r3, r2
 8003914:	693a      	ldr	r2, [r7, #16]
 8003916:	4313      	orrs	r3, r2
 8003918:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 800391a:	4938      	ldr	r1, [pc, #224]	; (80039fc <HAL_GPIO_Init+0x2b0>)
 800391c:	697b      	ldr	r3, [r7, #20]
 800391e:	089b      	lsrs	r3, r3, #2
 8003920:	3302      	adds	r3, #2
 8003922:	693a      	ldr	r2, [r7, #16]
 8003924:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8003928:	4b37      	ldr	r3, [pc, #220]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 800392a:	681b      	ldr	r3, [r3, #0]
 800392c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800392e:	68fb      	ldr	r3, [r7, #12]
 8003930:	43db      	mvns	r3, r3
 8003932:	693a      	ldr	r2, [r7, #16]
 8003934:	4013      	ands	r3, r2
 8003936:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8003938:	683b      	ldr	r3, [r7, #0]
 800393a:	685b      	ldr	r3, [r3, #4]
 800393c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003940:	2b00      	cmp	r3, #0
 8003942:	d003      	beq.n	800394c <HAL_GPIO_Init+0x200>
        {
          temp |= iocurrent;
 8003944:	693a      	ldr	r2, [r7, #16]
 8003946:	68fb      	ldr	r3, [r7, #12]
 8003948:	4313      	orrs	r3, r2
 800394a:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 800394c:	4a2e      	ldr	r2, [pc, #184]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 800394e:	693b      	ldr	r3, [r7, #16]
 8003950:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8003952:	4b2d      	ldr	r3, [pc, #180]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 8003954:	685b      	ldr	r3, [r3, #4]
 8003956:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003958:	68fb      	ldr	r3, [r7, #12]
 800395a:	43db      	mvns	r3, r3
 800395c:	693a      	ldr	r2, [r7, #16]
 800395e:	4013      	ands	r3, r2
 8003960:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003962:	683b      	ldr	r3, [r7, #0]
 8003964:	685b      	ldr	r3, [r3, #4]
 8003966:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800396a:	2b00      	cmp	r3, #0
 800396c:	d003      	beq.n	8003976 <HAL_GPIO_Init+0x22a>
        {
          temp |= iocurrent;
 800396e:	693a      	ldr	r2, [r7, #16]
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	4313      	orrs	r3, r2
 8003974:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8003976:	4a24      	ldr	r2, [pc, #144]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 8003978:	693b      	ldr	r3, [r7, #16]
 800397a:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
#ifdef CORE_CM0PLUS
        temp = EXTI->C2IMR1;
#else
        temp = EXTI->IMR1;
 800397c:	4b22      	ldr	r3, [pc, #136]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 800397e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003982:	613b      	str	r3, [r7, #16]
#endif /* CORE_CM0PLUS */
        temp &= ~(iocurrent);
 8003984:	68fb      	ldr	r3, [r7, #12]
 8003986:	43db      	mvns	r3, r3
 8003988:	693a      	ldr	r2, [r7, #16]
 800398a:	4013      	ands	r3, r2
 800398c:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800398e:	683b      	ldr	r3, [r7, #0]
 8003990:	685b      	ldr	r3, [r3, #4]
 8003992:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003996:	2b00      	cmp	r3, #0
 8003998:	d003      	beq.n	80039a2 <HAL_GPIO_Init+0x256>
        {
          temp |= iocurrent;
 800399a:	693a      	ldr	r2, [r7, #16]
 800399c:	68fb      	ldr	r3, [r7, #12]
 800399e:	4313      	orrs	r3, r2
 80039a0:	613b      	str	r3, [r7, #16]
        }
#ifdef CORE_CM0PLUS
        EXTI->C2IMR1 = temp;
#else
        EXTI->IMR1 = temp;
 80039a2:	4a19      	ldr	r2, [pc, #100]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 80039a4:	693b      	ldr	r3, [r7, #16]
 80039a6:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
#endif /* CORE_CM0PLUS */

#ifdef CORE_CM0PLUS
        temp = EXTI->C2EMR1;
#else
        temp = EXTI->EMR1;
 80039aa:	4b17      	ldr	r3, [pc, #92]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 80039ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80039b0:	613b      	str	r3, [r7, #16]
#endif /* CORE_CM0PLUS */
        temp &= ~(iocurrent);
 80039b2:	68fb      	ldr	r3, [r7, #12]
 80039b4:	43db      	mvns	r3, r3
 80039b6:	693a      	ldr	r2, [r7, #16]
 80039b8:	4013      	ands	r3, r2
 80039ba:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80039bc:	683b      	ldr	r3, [r7, #0]
 80039be:	685b      	ldr	r3, [r3, #4]
 80039c0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d003      	beq.n	80039d0 <HAL_GPIO_Init+0x284>
        {
          temp |= iocurrent;
 80039c8:	693a      	ldr	r2, [r7, #16]
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	4313      	orrs	r3, r2
 80039ce:	613b      	str	r3, [r7, #16]
        }
#ifdef CORE_CM0PLUS
        EXTI->C2EMR1 = temp;
#else
        EXTI->EMR1 = temp;
 80039d0:	4a0d      	ldr	r2, [pc, #52]	; (8003a08 <HAL_GPIO_Init+0x2bc>)
 80039d2:	693b      	ldr	r3, [r7, #16]
 80039d4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
#endif /* CORE_CM0PLUS */
      }
    }

    position++;
 80039d8:	697b      	ldr	r3, [r7, #20]
 80039da:	3301      	adds	r3, #1
 80039dc:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80039de:	683b      	ldr	r3, [r7, #0]
 80039e0:	681a      	ldr	r2, [r3, #0]
 80039e2:	697b      	ldr	r3, [r7, #20]
 80039e4:	fa22 f303 	lsr.w	r3, r2, r3
 80039e8:	2b00      	cmp	r3, #0
 80039ea:	f47f aeb7 	bne.w	800375c <HAL_GPIO_Init+0x10>
  }
}
 80039ee:	bf00      	nop
 80039f0:	bf00      	nop
 80039f2:	371c      	adds	r7, #28
 80039f4:	46bd      	mov	sp, r7
 80039f6:	bc80      	pop	{r7}
 80039f8:	4770      	bx	lr
 80039fa:	bf00      	nop
 80039fc:	40010000 	.word	0x40010000
 8003a00:	48000400 	.word	0x48000400
 8003a04:	48000800 	.word	0x48000800
 8003a08:	58000800 	.word	0x58000800

08003a0c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003a0c:	b480      	push	{r7}
 8003a0e:	b083      	sub	sp, #12
 8003a10:	af00      	add	r7, sp, #0
 8003a12:	6078      	str	r0, [r7, #4]
 8003a14:	460b      	mov	r3, r1
 8003a16:	807b      	strh	r3, [r7, #2]
 8003a18:	4613      	mov	r3, r2
 8003a1a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003a1c:	787b      	ldrb	r3, [r7, #1]
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d003      	beq.n	8003a2a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8003a22:	887a      	ldrh	r2, [r7, #2]
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8003a28:	e002      	b.n	8003a30 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8003a2a:	887a      	ldrh	r2, [r7, #2]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	629a      	str	r2, [r3, #40]	; 0x28
}
 8003a30:	bf00      	nop
 8003a32:	370c      	adds	r7, #12
 8003a34:	46bd      	mov	sp, r7
 8003a36:	bc80      	pop	{r7}
 8003a38:	4770      	bx	lr

08003a3a <LL_RCC_HSE_IsEnabledDiv2>:
{
 8003a3a:	b480      	push	{r7}
 8003a3c:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSEPRE) == (RCC_CR_HSEPRE)) ? 1UL : 0UL);
 8003a3e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003a48:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8003a4c:	d101      	bne.n	8003a52 <LL_RCC_HSE_IsEnabledDiv2+0x18>
 8003a4e:	2301      	movs	r3, #1
 8003a50:	e000      	b.n	8003a54 <LL_RCC_HSE_IsEnabledDiv2+0x1a>
 8003a52:	2300      	movs	r3, #0
}
 8003a54:	4618      	mov	r0, r3
 8003a56:	46bd      	mov	sp, r7
 8003a58:	bc80      	pop	{r7}
 8003a5a:	4770      	bx	lr

08003a5c <LL_RCC_MSI_IsEnabledRangeSelect>:
{
 8003a5c:	b480      	push	{r7}
 8003a5e:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == (RCC_CR_MSIRGSEL)) ? 1UL : 0UL);
 8003a60:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	f003 0308 	and.w	r3, r3, #8
 8003a6a:	2b08      	cmp	r3, #8
 8003a6c:	d101      	bne.n	8003a72 <LL_RCC_MSI_IsEnabledRangeSelect+0x16>
 8003a6e:	2301      	movs	r3, #1
 8003a70:	e000      	b.n	8003a74 <LL_RCC_MSI_IsEnabledRangeSelect+0x18>
 8003a72:	2300      	movs	r3, #0
}
 8003a74:	4618      	mov	r0, r3
 8003a76:	46bd      	mov	sp, r7
 8003a78:	bc80      	pop	{r7}
 8003a7a:	4770      	bx	lr

08003a7c <LL_RCC_MSI_GetRange>:
{
 8003a7c:	b480      	push	{r7}
 8003a7e:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_MSIRANGE));
 8003a80:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8003a8a:	4618      	mov	r0, r3
 8003a8c:	46bd      	mov	sp, r7
 8003a8e:	bc80      	pop	{r7}
 8003a90:	4770      	bx	lr

08003a92 <LL_RCC_MSI_GetRangeAfterStandby>:
{
 8003a92:	b480      	push	{r7}
 8003a94:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE));
 8003a96:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003a9a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a9e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
}
 8003aa2:	4618      	mov	r0, r3
 8003aa4:	46bd      	mov	sp, r7
 8003aa6:	bc80      	pop	{r7}
 8003aa8:	4770      	bx	lr

08003aaa <LL_RCC_GetSysClkSource>:
{
 8003aaa:	b480      	push	{r7}
 8003aac:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 8003aae:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003ab2:	689b      	ldr	r3, [r3, #8]
 8003ab4:	f003 030c 	and.w	r3, r3, #12
}
 8003ab8:	4618      	mov	r0, r3
 8003aba:	46bd      	mov	sp, r7
 8003abc:	bc80      	pop	{r7}
 8003abe:	4770      	bx	lr

08003ac0 <LL_RCC_GetAHBPrescaler>:
{
 8003ac0:	b480      	push	{r7}
 8003ac2:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
 8003ac4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003ac8:	689b      	ldr	r3, [r3, #8]
 8003aca:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8003ace:	4618      	mov	r0, r3
 8003ad0:	46bd      	mov	sp, r7
 8003ad2:	bc80      	pop	{r7}
 8003ad4:	4770      	bx	lr

08003ad6 <LL_RCC_PLL_GetN>:
{
 8003ad6:	b480      	push	{r7}
 8003ad8:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
 8003ada:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003ade:	68db      	ldr	r3, [r3, #12]
 8003ae0:	0a1b      	lsrs	r3, r3, #8
 8003ae2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
}
 8003ae6:	4618      	mov	r0, r3
 8003ae8:	46bd      	mov	sp, r7
 8003aea:	bc80      	pop	{r7}
 8003aec:	4770      	bx	lr

08003aee <LL_RCC_PLL_GetR>:
{
 8003aee:	b480      	push	{r7}
 8003af0:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR));
 8003af2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003af6:	68db      	ldr	r3, [r3, #12]
 8003af8:	f003 4360 	and.w	r3, r3, #3758096384	; 0xe0000000
}
 8003afc:	4618      	mov	r0, r3
 8003afe:	46bd      	mov	sp, r7
 8003b00:	bc80      	pop	{r7}
 8003b02:	4770      	bx	lr

08003b04 <LL_RCC_PLL_GetDivider>:
{
 8003b04:	b480      	push	{r7}
 8003b06:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM));
 8003b08:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003b0c:	68db      	ldr	r3, [r3, #12]
 8003b0e:	f003 0370 	and.w	r3, r3, #112	; 0x70
}
 8003b12:	4618      	mov	r0, r3
 8003b14:	46bd      	mov	sp, r7
 8003b16:	bc80      	pop	{r7}
 8003b18:	4770      	bx	lr

08003b1a <LL_RCC_PLL_GetMainSource>:
  *         @arg @ref LL_RCC_PLLSOURCE_MSI
  *         @arg @ref LL_RCC_PLLSOURCE_HSI
  *         @arg @ref LL_RCC_PLLSOURCE_HSE
  */
__STATIC_INLINE uint32_t LL_RCC_PLL_GetMainSource(void)
{
 8003b1a:	b480      	push	{r7}
 8003b1c:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC));
 8003b1e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003b22:	68db      	ldr	r3, [r3, #12]
 8003b24:	f003 0303 	and.w	r3, r3, #3
}
 8003b28:	4618      	mov	r0, r3
 8003b2a:	46bd      	mov	sp, r7
 8003b2c:	bc80      	pop	{r7}
 8003b2e:	4770      	bx	lr

08003b30 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8003b30:	b590      	push	{r4, r7, lr}
 8003b32:	b087      	sub	sp, #28
 8003b34:	af00      	add	r7, sp, #0
  uint32_t sysclk_source;
  uint32_t pllsource;
  uint32_t sysclockfreq = 0U;
 8003b36:	2300      	movs	r3, #0
 8003b38:	617b      	str	r3, [r7, #20]
  uint32_t msifreq = 0U;
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	613b      	str	r3, [r7, #16]
  uint32_t pllinputfreq;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8003b3e:	f7ff ffb4 	bl	8003aaa <LL_RCC_GetSysClkSource>
 8003b42:	60b8      	str	r0, [r7, #8]
  pllsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8003b44:	f7ff ffe9 	bl	8003b1a <LL_RCC_PLL_GetMainSource>
 8003b48:	6078      	str	r0, [r7, #4]

  if ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI) ||
 8003b4a:	68bb      	ldr	r3, [r7, #8]
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d005      	beq.n	8003b5c <HAL_RCC_GetSysClockFreq+0x2c>
 8003b50:	68bb      	ldr	r3, [r7, #8]
 8003b52:	2b0c      	cmp	r3, #12
 8003b54:	d139      	bne.n	8003bca <HAL_RCC_GetSysClockFreq+0x9a>
      ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pllsource == RCC_PLLSOURCE_MSI)))
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	2b01      	cmp	r3, #1
 8003b5a:	d136      	bne.n	8003bca <HAL_RCC_GetSysClockFreq+0x9a>
  {
    /* MSI or PLL with MSI source used as system clock source */
    /* Retrieve MSI frequency range in Hz */
    msifreq = __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
 8003b5c:	f7ff ff7e 	bl	8003a5c <LL_RCC_MSI_IsEnabledRangeSelect>
 8003b60:	4603      	mov	r3, r0
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d115      	bne.n	8003b92 <HAL_RCC_GetSysClockFreq+0x62>
 8003b66:	f7ff ff79 	bl	8003a5c <LL_RCC_MSI_IsEnabledRangeSelect>
 8003b6a:	4603      	mov	r3, r0
 8003b6c:	2b01      	cmp	r3, #1
 8003b6e:	d106      	bne.n	8003b7e <HAL_RCC_GetSysClockFreq+0x4e>
 8003b70:	f7ff ff84 	bl	8003a7c <LL_RCC_MSI_GetRange>
 8003b74:	4603      	mov	r3, r0
 8003b76:	0a1b      	lsrs	r3, r3, #8
 8003b78:	f003 030f 	and.w	r3, r3, #15
 8003b7c:	e005      	b.n	8003b8a <HAL_RCC_GetSysClockFreq+0x5a>
 8003b7e:	f7ff ff88 	bl	8003a92 <LL_RCC_MSI_GetRangeAfterStandby>
 8003b82:	4603      	mov	r3, r0
 8003b84:	0a1b      	lsrs	r3, r3, #8
 8003b86:	f003 030f 	and.w	r3, r3, #15
 8003b8a:	4a36      	ldr	r2, [pc, #216]	; (8003c64 <HAL_RCC_GetSysClockFreq+0x134>)
 8003b8c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003b90:	e014      	b.n	8003bbc <HAL_RCC_GetSysClockFreq+0x8c>
 8003b92:	f7ff ff63 	bl	8003a5c <LL_RCC_MSI_IsEnabledRangeSelect>
 8003b96:	4603      	mov	r3, r0
 8003b98:	2b01      	cmp	r3, #1
 8003b9a:	d106      	bne.n	8003baa <HAL_RCC_GetSysClockFreq+0x7a>
 8003b9c:	f7ff ff6e 	bl	8003a7c <LL_RCC_MSI_GetRange>
 8003ba0:	4603      	mov	r3, r0
 8003ba2:	091b      	lsrs	r3, r3, #4
 8003ba4:	f003 030f 	and.w	r3, r3, #15
 8003ba8:	e005      	b.n	8003bb6 <HAL_RCC_GetSysClockFreq+0x86>
 8003baa:	f7ff ff72 	bl	8003a92 <LL_RCC_MSI_GetRangeAfterStandby>
 8003bae:	4603      	mov	r3, r0
 8003bb0:	091b      	lsrs	r3, r3, #4
 8003bb2:	f003 030f 	and.w	r3, r3, #15
 8003bb6:	4a2b      	ldr	r2, [pc, #172]	; (8003c64 <HAL_RCC_GetSysClockFreq+0x134>)
 8003bb8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003bbc:	613b      	str	r3, [r7, #16]
                                     ((LL_RCC_MSI_IsEnabledRangeSelect() == 1U) ?
                                      LL_RCC_MSI_GetRange() :
                                      LL_RCC_MSI_GetRangeAfterStandby()));

    /* Get SYSCLK source */
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8003bbe:	68bb      	ldr	r3, [r7, #8]
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d115      	bne.n	8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>
    {
      /* MSI used as system clock source */
      sysclockfreq = msifreq;
 8003bc4:	693b      	ldr	r3, [r7, #16]
 8003bc6:	617b      	str	r3, [r7, #20]
    if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_MSI)
 8003bc8:	e012      	b.n	8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>
    }
  }
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8003bca:	68bb      	ldr	r3, [r7, #8]
 8003bcc:	2b04      	cmp	r3, #4
 8003bce:	d102      	bne.n	8003bd6 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 8003bd0:	4b25      	ldr	r3, [pc, #148]	; (8003c68 <HAL_RCC_GetSysClockFreq+0x138>)
 8003bd2:	617b      	str	r3, [r7, #20]
 8003bd4:	e00c      	b.n	8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>
  }
  else if (sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 8003bd6:	68bb      	ldr	r3, [r7, #8]
 8003bd8:	2b08      	cmp	r3, #8
 8003bda:	d109      	bne.n	8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>
  {
    /* HSE used as system clock source */
    if (LL_RCC_HSE_IsEnabledDiv2() == 1U)
 8003bdc:	f7ff ff2d 	bl	8003a3a <LL_RCC_HSE_IsEnabledDiv2>
 8003be0:	4603      	mov	r3, r0
 8003be2:	2b01      	cmp	r3, #1
 8003be4:	d102      	bne.n	8003bec <HAL_RCC_GetSysClockFreq+0xbc>
    {
      sysclockfreq = HSE_VALUE / 2U;
 8003be6:	4b20      	ldr	r3, [pc, #128]	; (8003c68 <HAL_RCC_GetSysClockFreq+0x138>)
 8003be8:	617b      	str	r3, [r7, #20]
 8003bea:	e001      	b.n	8003bf0 <HAL_RCC_GetSysClockFreq+0xc0>
    }
    else
    {
      sysclockfreq = HSE_VALUE;
 8003bec:	4b1f      	ldr	r3, [pc, #124]	; (8003c6c <HAL_RCC_GetSysClockFreq+0x13c>)
 8003bee:	617b      	str	r3, [r7, #20]
  else
  {
    /* Nothing to do */
  }

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003bf0:	f7ff ff5b 	bl	8003aaa <LL_RCC_GetSysClkSource>
 8003bf4:	4603      	mov	r3, r0
 8003bf6:	2b0c      	cmp	r3, #12
 8003bf8:	d12f      	bne.n	8003c5a <HAL_RCC_GetSysClockFreq+0x12a>
  {
    /* PLL used as system clock  source */
    pllsource = LL_RCC_PLL_GetMainSource();
 8003bfa:	f7ff ff8e 	bl	8003b1a <LL_RCC_PLL_GetMainSource>
 8003bfe:	6078      	str	r0, [r7, #4]

    switch (pllsource)
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	2b02      	cmp	r3, #2
 8003c04:	d003      	beq.n	8003c0e <HAL_RCC_GetSysClockFreq+0xde>
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	2b03      	cmp	r3, #3
 8003c0a:	d003      	beq.n	8003c14 <HAL_RCC_GetSysClockFreq+0xe4>
 8003c0c:	e00d      	b.n	8003c2a <HAL_RCC_GetSysClockFreq+0xfa>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
        pllinputfreq = HSI_VALUE;
 8003c0e:	4b16      	ldr	r3, [pc, #88]	; (8003c68 <HAL_RCC_GetSysClockFreq+0x138>)
 8003c10:	60fb      	str	r3, [r7, #12]
        break;
 8003c12:	e00d      	b.n	8003c30 <HAL_RCC_GetSysClockFreq+0x100>
      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        if (LL_RCC_HSE_IsEnabledDiv2() == 1U)
 8003c14:	f7ff ff11 	bl	8003a3a <LL_RCC_HSE_IsEnabledDiv2>
 8003c18:	4603      	mov	r3, r0
 8003c1a:	2b01      	cmp	r3, #1
 8003c1c:	d102      	bne.n	8003c24 <HAL_RCC_GetSysClockFreq+0xf4>
        {
          pllinputfreq = HSE_VALUE / 2U;
 8003c1e:	4b12      	ldr	r3, [pc, #72]	; (8003c68 <HAL_RCC_GetSysClockFreq+0x138>)
 8003c20:	60fb      	str	r3, [r7, #12]
        }
        else
        {
          pllinputfreq = HSE_VALUE;
        }
        break;
 8003c22:	e005      	b.n	8003c30 <HAL_RCC_GetSysClockFreq+0x100>
          pllinputfreq = HSE_VALUE;
 8003c24:	4b11      	ldr	r3, [pc, #68]	; (8003c6c <HAL_RCC_GetSysClockFreq+0x13c>)
 8003c26:	60fb      	str	r3, [r7, #12]
        break;
 8003c28:	e002      	b.n	8003c30 <HAL_RCC_GetSysClockFreq+0x100>
      case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      default:
        pllinputfreq = msifreq;
 8003c2a:	693b      	ldr	r3, [r7, #16]
 8003c2c:	60fb      	str	r3, [r7, #12]
        break;
 8003c2e:	bf00      	nop
    }
    sysclockfreq = __LL_RCC_CALC_PLLCLK_FREQ(pllinputfreq, LL_RCC_PLL_GetDivider(),
 8003c30:	f7ff ff51 	bl	8003ad6 <LL_RCC_PLL_GetN>
 8003c34:	4602      	mov	r2, r0
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	fb03 f402 	mul.w	r4, r3, r2
 8003c3c:	f7ff ff62 	bl	8003b04 <LL_RCC_PLL_GetDivider>
 8003c40:	4603      	mov	r3, r0
 8003c42:	091b      	lsrs	r3, r3, #4
 8003c44:	3301      	adds	r3, #1
 8003c46:	fbb4 f4f3 	udiv	r4, r4, r3
 8003c4a:	f7ff ff50 	bl	8003aee <LL_RCC_PLL_GetR>
 8003c4e:	4603      	mov	r3, r0
 8003c50:	0f5b      	lsrs	r3, r3, #29
 8003c52:	3301      	adds	r3, #1
 8003c54:	fbb4 f3f3 	udiv	r3, r4, r3
 8003c58:	617b      	str	r3, [r7, #20]
                                             LL_RCC_PLL_GetN(), LL_RCC_PLL_GetR());
  }

  return sysclockfreq;
 8003c5a:	697b      	ldr	r3, [r7, #20]
}
 8003c5c:	4618      	mov	r0, r3
 8003c5e:	371c      	adds	r7, #28
 8003c60:	46bd      	mov	sp, r7
 8003c62:	bd90      	pop	{r4, r7, pc}
 8003c64:	08031648 	.word	0x08031648
 8003c68:	00f42400 	.word	0x00f42400
 8003c6c:	01e84800 	.word	0x01e84800

08003c70 <HAL_RCC_GetHCLKFreq>:
/**
  * @brief  Return the HCLK frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8003c70:	b598      	push	{r3, r4, r7, lr}
 8003c72:	af00      	add	r7, sp, #0
  /* Get SysClock and Compute HCLK1 frequency --------------------------------*/
  return ((uint32_t)(__LL_RCC_CALC_HCLK1_FREQ(HAL_RCC_GetSysClockFreq(), LL_RCC_GetAHBPrescaler())));
 8003c74:	f7ff ff5c 	bl	8003b30 <HAL_RCC_GetSysClockFreq>
 8003c78:	4604      	mov	r4, r0
 8003c7a:	f7ff ff21 	bl	8003ac0 <LL_RCC_GetAHBPrescaler>
 8003c7e:	4603      	mov	r3, r0
 8003c80:	091b      	lsrs	r3, r3, #4
 8003c82:	f003 030f 	and.w	r3, r3, #15
 8003c86:	4a03      	ldr	r2, [pc, #12]	; (8003c94 <HAL_RCC_GetHCLKFreq+0x24>)
 8003c88:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003c8c:	fbb4 f3f3 	udiv	r3, r4, r3
}
 8003c90:	4618      	mov	r0, r3
 8003c92:	bd98      	pop	{r3, r4, r7, pc}
 8003c94:	080315e8 	.word	0x080315e8

08003c98 <LL_PWR_SetRadioBusyTrigger>:
  *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_NONE
  *         @arg @ref LL_PWR_RADIO_BUSY_TRIGGER_WU_IT
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SetRadioBusyTrigger(uint32_t RadioBusyTrigger)
{
 8003c98:	b480      	push	{r7}
 8003c9a:	b083      	sub	sp, #12
 8003c9c:	af00      	add	r7, sp, #0
 8003c9e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(PWR->CR3, PWR_CR3_EWRFBUSY, RadioBusyTrigger);
 8003ca0:	4b06      	ldr	r3, [pc, #24]	; (8003cbc <LL_PWR_SetRadioBusyTrigger+0x24>)
 8003ca2:	689b      	ldr	r3, [r3, #8]
 8003ca4:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8003ca8:	4904      	ldr	r1, [pc, #16]	; (8003cbc <LL_PWR_SetRadioBusyTrigger+0x24>)
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	4313      	orrs	r3, r2
 8003cae:	608b      	str	r3, [r1, #8]
}
 8003cb0:	bf00      	nop
 8003cb2:	370c      	adds	r7, #12
 8003cb4:	46bd      	mov	sp, r7
 8003cb6:	bc80      	pop	{r7}
 8003cb8:	4770      	bx	lr
 8003cba:	bf00      	nop
 8003cbc:	58000400 	.word	0x58000400

08003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>:
  * @brief  Set sub-GHz radio SPI NSS at logical level high.
  * @rmtoll SUBGHZSPICR  NSS           LL_PWR_UnselectSUBGHZSPI_NSS
  * @retval None
  */
__STATIC_INLINE void LL_PWR_UnselectSUBGHZSPI_NSS(void)
{
 8003cc0:	b480      	push	{r7}
 8003cc2:	af00      	add	r7, sp, #0
  SET_BIT(PWR->SUBGHZSPICR, PWR_SUBGHZSPICR_NSS);
 8003cc4:	4b05      	ldr	r3, [pc, #20]	; (8003cdc <LL_PWR_UnselectSUBGHZSPI_NSS+0x1c>)
 8003cc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003cca:	4a04      	ldr	r2, [pc, #16]	; (8003cdc <LL_PWR_UnselectSUBGHZSPI_NSS+0x1c>)
 8003ccc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003cd0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
}
 8003cd4:	bf00      	nop
 8003cd6:	46bd      	mov	sp, r7
 8003cd8:	bc80      	pop	{r7}
 8003cda:	4770      	bx	lr
 8003cdc:	58000400 	.word	0x58000400

08003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>:
  * @brief  Set sub-GHz radio SPI NSS at logical level low.
  * @rmtoll SUBGHZSPICR  NSS           LL_PWR_SelectSUBGHZSPI_NSS
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SelectSUBGHZSPI_NSS(void)
{
 8003ce0:	b480      	push	{r7}
 8003ce2:	af00      	add	r7, sp, #0
  CLEAR_BIT(PWR->SUBGHZSPICR, PWR_SUBGHZSPICR_NSS);
 8003ce4:	4b05      	ldr	r3, [pc, #20]	; (8003cfc <LL_PWR_SelectSUBGHZSPI_NSS+0x1c>)
 8003ce6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003cea:	4a04      	ldr	r2, [pc, #16]	; (8003cfc <LL_PWR_SelectSUBGHZSPI_NSS+0x1c>)
 8003cec:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8003cf0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
}
 8003cf4:	bf00      	nop
 8003cf6:	46bd      	mov	sp, r7
 8003cf8:	bc80      	pop	{r7}
 8003cfa:	4770      	bx	lr
 8003cfc:	58000400 	.word	0x58000400

08003d00 <LL_PWR_ClearFlag_RFBUSY>:
  * @brief  Clear radio busy flag
  * @rmtoll SCR          CRFBUSYF      LL_PWR_ClearFlag_RFBUSY
  * @retval None
  */
__STATIC_INLINE void LL_PWR_ClearFlag_RFBUSY(void)
{
 8003d00:	b480      	push	{r7}
 8003d02:	af00      	add	r7, sp, #0
  WRITE_REG(PWR->SCR, PWR_SCR_CWRFBUSYF);
 8003d04:	4b03      	ldr	r3, [pc, #12]	; (8003d14 <LL_PWR_ClearFlag_RFBUSY+0x14>)
 8003d06:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003d0a:	619a      	str	r2, [r3, #24]
}
 8003d0c:	bf00      	nop
 8003d0e:	46bd      	mov	sp, r7
 8003d10:	bc80      	pop	{r7}
 8003d12:	4770      	bx	lr
 8003d14:	58000400 	.word	0x58000400

08003d18 <LL_PWR_IsActiveFlag_RFBUSYS>:
  *         @ref LL_PWR_IsActiveFlag_RFBUSY()
  * @rmtoll SR2          RFBUSYS       LL_PWR_IsActiveFlag_RFBUSYS
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_RFBUSYS(void)
{
 8003d18:	b480      	push	{r7}
 8003d1a:	af00      	add	r7, sp, #0
  return ((READ_BIT(PWR->SR2, PWR_SR2_RFBUSYS) == (PWR_SR2_RFBUSYS)) ? 1UL : 0UL);
 8003d1c:	4b06      	ldr	r3, [pc, #24]	; (8003d38 <LL_PWR_IsActiveFlag_RFBUSYS+0x20>)
 8003d1e:	695b      	ldr	r3, [r3, #20]
 8003d20:	f003 0302 	and.w	r3, r3, #2
 8003d24:	2b02      	cmp	r3, #2
 8003d26:	d101      	bne.n	8003d2c <LL_PWR_IsActiveFlag_RFBUSYS+0x14>
 8003d28:	2301      	movs	r3, #1
 8003d2a:	e000      	b.n	8003d2e <LL_PWR_IsActiveFlag_RFBUSYS+0x16>
 8003d2c:	2300      	movs	r3, #0
}
 8003d2e:	4618      	mov	r0, r3
 8003d30:	46bd      	mov	sp, r7
 8003d32:	bc80      	pop	{r7}
 8003d34:	4770      	bx	lr
 8003d36:	bf00      	nop
 8003d38:	58000400 	.word	0x58000400

08003d3c <LL_PWR_IsActiveFlag_RFBUSYMS>:
  *         @ref LL_PWR_IsActiveFlag_RFBUSY()
  * @rmtoll SR2          RFBUSYMS      LL_PWR_IsActiveFlag_RFBUSYMS
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_PWR_IsActiveFlag_RFBUSYMS(void)
{
 8003d3c:	b480      	push	{r7}
 8003d3e:	af00      	add	r7, sp, #0
  return ((READ_BIT(PWR->SR2, PWR_SR2_RFBUSYMS) == (PWR_SR2_RFBUSYMS)) ? 1UL : 0UL);
 8003d40:	4b06      	ldr	r3, [pc, #24]	; (8003d5c <LL_PWR_IsActiveFlag_RFBUSYMS+0x20>)
 8003d42:	695b      	ldr	r3, [r3, #20]
 8003d44:	f003 0304 	and.w	r3, r3, #4
 8003d48:	2b04      	cmp	r3, #4
 8003d4a:	d101      	bne.n	8003d50 <LL_PWR_IsActiveFlag_RFBUSYMS+0x14>
 8003d4c:	2301      	movs	r3, #1
 8003d4e:	e000      	b.n	8003d52 <LL_PWR_IsActiveFlag_RFBUSYMS+0x16>
 8003d50:	2300      	movs	r3, #0
}
 8003d52:	4618      	mov	r0, r3
 8003d54:	46bd      	mov	sp, r7
 8003d56:	bc80      	pop	{r7}
 8003d58:	4770      	bx	lr
 8003d5a:	bf00      	nop
 8003d5c:	58000400 	.word	0x58000400

08003d60 <LL_RCC_RF_DisableReset>:
{
 8003d60:	b480      	push	{r7}
 8003d62:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CSR, RCC_CSR_RFRST);
 8003d64:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003d68:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003d6c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8003d70:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8003d74:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
}
 8003d78:	bf00      	nop
 8003d7a:	46bd      	mov	sp, r7
 8003d7c:	bc80      	pop	{r7}
 8003d7e:	4770      	bx	lr

08003d80 <LL_RCC_IsRFUnderReset>:
{
 8003d80:	b480      	push	{r7}
 8003d82:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CSR, RCC_CSR_RFRSTF) == (RCC_CSR_RFRSTF)) ? 1UL : 0UL);
 8003d84:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8003d88:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003d8c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003d90:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003d94:	d101      	bne.n	8003d9a <LL_RCC_IsRFUnderReset+0x1a>
 8003d96:	2301      	movs	r3, #1
 8003d98:	e000      	b.n	8003d9c <LL_RCC_IsRFUnderReset+0x1c>
 8003d9a:	2300      	movs	r3, #0
}
 8003d9c:	4618      	mov	r0, r3
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	bc80      	pop	{r7}
 8003da2:	4770      	bx	lr

08003da4 <LL_EXTI_EnableIT_32_63>:
  *         @arg @ref LL_EXTI_LINE_ALL_32_63
  *         (*) value not defined in all devices
  * @retval None
  */
__STATIC_INLINE void LL_EXTI_EnableIT_32_63(uint32_t ExtiLine)
{
 8003da4:	b480      	push	{r7}
 8003da6:	b083      	sub	sp, #12
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	6078      	str	r0, [r7, #4]
  SET_BIT(EXTI->IMR2, ExtiLine);
 8003dac:	4b06      	ldr	r3, [pc, #24]	; (8003dc8 <LL_EXTI_EnableIT_32_63+0x24>)
 8003dae:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8003db2:	4905      	ldr	r1, [pc, #20]	; (8003dc8 <LL_EXTI_EnableIT_32_63+0x24>)
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	4313      	orrs	r3, r2
 8003db8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
}
 8003dbc:	bf00      	nop
 8003dbe:	370c      	adds	r7, #12
 8003dc0:	46bd      	mov	sp, r7
 8003dc2:	bc80      	pop	{r7}
 8003dc4:	4770      	bx	lr
 8003dc6:	bf00      	nop
 8003dc8:	58000800 	.word	0x58000800

08003dcc <HAL_SUBGHZ_Init>:
  *         set the state to HAL_SUBGHZ_STATE_RESET_RF_READY with __HAL_SUBGHZ_RESET_HANDLE_STATE_RF_READY
  *         to avoid the reset of Radio peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SUBGHZ_Init(SUBGHZ_HandleTypeDef *hsubghz)
{
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b084      	sub	sp, #16
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  __IO uint32_t count;
  HAL_SUBGHZ_StateTypeDef subghz_state;

  /* Check the hsubghz handle allocation */
  if (hsubghz == NULL)
 8003dd4:	687b      	ldr	r3, [r7, #4]
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	d103      	bne.n	8003de2 <HAL_SUBGHZ_Init+0x16>
  {
    status = HAL_ERROR;
 8003dda:	2301      	movs	r3, #1
 8003ddc:	73fb      	strb	r3, [r7, #15]
    return status;
 8003dde:	7bfb      	ldrb	r3, [r7, #15]
 8003de0:	e052      	b.n	8003e88 <HAL_SUBGHZ_Init+0xbc>
  }
  else
  {
    status = HAL_OK;
 8003de2:	2300      	movs	r3, #0
 8003de4:	73fb      	strb	r3, [r7, #15]
  }

  assert_param(IS_SUBGHZSPI_BAUDRATE_PRESCALER(hsubghz->Init.BaudratePrescaler));

  subghz_state = hsubghz->State;
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	799b      	ldrb	r3, [r3, #6]
 8003dea:	73bb      	strb	r3, [r7, #14]
  if ((subghz_state == HAL_SUBGHZ_STATE_RESET) ||
 8003dec:	7bbb      	ldrb	r3, [r7, #14]
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	d002      	beq.n	8003df8 <HAL_SUBGHZ_Init+0x2c>
 8003df2:	7bbb      	ldrb	r3, [r7, #14]
 8003df4:	2b03      	cmp	r3, #3
 8003df6:	d109      	bne.n	8003e0c <HAL_SUBGHZ_Init+0x40>
      (subghz_state == HAL_SUBGHZ_STATE_RESET_RF_READY))
  {
    /* Allocate lock resource and initialize it */
    hsubghz->Lock = HAL_UNLOCKED;
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	2200      	movs	r2, #0
 8003dfc:	715a      	strb	r2, [r3, #5]

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hsubghz->MspInitCallback(hsubghz);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SUBGHZ_MspInit(hsubghz);
 8003dfe:	6878      	ldr	r0, [r7, #4]
 8003e00:	f000 f848 	bl	8003e94 <HAL_SUBGHZ_MspInit>
#if defined(CM0PLUS)
    /* Enable EXTI 44 : Radio IRQ ITs for CPU2 */
    LL_C2_EXTI_EnableIT_32_63(LL_EXTI_LINE_44);
#else
    /* Enable EXTI 44 : Radio IRQ ITs for CPU1 */
    LL_EXTI_EnableIT_32_63(LL_EXTI_LINE_44);
 8003e04:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8003e08:	f7ff ffcc 	bl	8003da4 <LL_EXTI_EnableIT_32_63>
#endif /* CM0PLUS */
  }

  if (subghz_state == HAL_SUBGHZ_STATE_RESET)
 8003e0c:	7bbb      	ldrb	r3, [r7, #14]
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d126      	bne.n	8003e60 <HAL_SUBGHZ_Init+0x94>
  {
    /* Reinitialize Radio peripheral only if SUBGHZ is in full RESET state */
    hsubghz->State = HAL_SUBGHZ_STATE_BUSY;
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	2202      	movs	r2, #2
 8003e16:	719a      	strb	r2, [r3, #6]

    /* De-asserts the reset signal of the Radio peripheral */
    LL_RCC_RF_DisableReset();
 8003e18:	f7ff ffa2 	bl	8003d60 <LL_RCC_RF_DisableReset>

    /* Verify that Radio in reset status flag is set */
    count  = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_DEFAULT_LOOP_TIME;
 8003e1c:	4b1c      	ldr	r3, [pc, #112]	; (8003e90 <HAL_SUBGHZ_Init+0xc4>)
 8003e1e:	681a      	ldr	r2, [r3, #0]
 8003e20:	4613      	mov	r3, r2
 8003e22:	00db      	lsls	r3, r3, #3
 8003e24:	1a9b      	subs	r3, r3, r2
 8003e26:	009b      	lsls	r3, r3, #2
 8003e28:	0cdb      	lsrs	r3, r3, #19
 8003e2a:	2264      	movs	r2, #100	; 0x64
 8003e2c:	fb02 f303 	mul.w	r3, r2, r3
 8003e30:	60bb      	str	r3, [r7, #8]

    do
    {
      if (count == 0U)
 8003e32:	68bb      	ldr	r3, [r7, #8]
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d105      	bne.n	8003e44 <HAL_SUBGHZ_Init+0x78>
      {
        status  = HAL_ERROR;
 8003e38:	2301      	movs	r3, #1
 8003e3a:	73fb      	strb	r3, [r7, #15]
        hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_TIMEOUT;
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2201      	movs	r2, #1
 8003e40:	609a      	str	r2, [r3, #8]
        break;
 8003e42:	e007      	b.n	8003e54 <HAL_SUBGHZ_Init+0x88>
      }
      count--;
 8003e44:	68bb      	ldr	r3, [r7, #8]
 8003e46:	3b01      	subs	r3, #1
 8003e48:	60bb      	str	r3, [r7, #8]
    } while (LL_RCC_IsRFUnderReset() != 0UL);
 8003e4a:	f7ff ff99 	bl	8003d80 <LL_RCC_IsRFUnderReset>
 8003e4e:	4603      	mov	r3, r0
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d1ee      	bne.n	8003e32 <HAL_SUBGHZ_Init+0x66>

    /* Asserts the reset signal of the Radio peripheral */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 8003e54:	f7ff ff34 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>
#if defined(CM0PLUS)
    /* Enable wakeup signal of the Radio peripheral */
    LL_C2_PWR_SetRadioBusyTrigger(LL_PWR_RADIO_BUSY_TRIGGER_WU_IT);
#else
    /* Enable wakeup signal of the Radio peripheral */
    LL_PWR_SetRadioBusyTrigger(LL_PWR_RADIO_BUSY_TRIGGER_WU_IT);
 8003e58:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003e5c:	f7ff ff1c 	bl	8003c98 <LL_PWR_SetRadioBusyTrigger>
#endif /* CM0PLUS */
  }

  /* Clear Pending Flag */
  LL_PWR_ClearFlag_RFBUSY();
 8003e60:	f7ff ff4e 	bl	8003d00 <LL_PWR_ClearFlag_RFBUSY>

  if (status == HAL_OK)
 8003e64:	7bfb      	ldrb	r3, [r7, #15]
 8003e66:	2b00      	cmp	r3, #0
 8003e68:	d10a      	bne.n	8003e80 <HAL_SUBGHZ_Init+0xb4>
  {
    /* Initialize SUBGHZSPI Peripheral */
    SUBGHZSPI_Init(hsubghz->Init.BaudratePrescaler);
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	681b      	ldr	r3, [r3, #0]
 8003e6e:	4618      	mov	r0, r3
 8003e70:	f000 fa38 	bl	80042e4 <SUBGHZSPI_Init>

    hsubghz->DeepSleep = SUBGHZ_DEEP_SLEEP_ENABLE;
 8003e74:	687b      	ldr	r3, [r7, #4]
 8003e76:	2201      	movs	r2, #1
 8003e78:	711a      	strb	r2, [r3, #4]
    hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_NONE;
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	609a      	str	r2, [r3, #8]
  }

  hsubghz->State = HAL_SUBGHZ_STATE_READY;
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2201      	movs	r2, #1
 8003e84:	719a      	strb	r2, [r3, #6]

  return status;
 8003e86:	7bfb      	ldrb	r3, [r7, #15]
}
 8003e88:	4618      	mov	r0, r3
 8003e8a:	3710      	adds	r7, #16
 8003e8c:	46bd      	mov	sp, r7
 8003e8e:	bd80      	pop	{r7, pc}
 8003e90:	20000004 	.word	0x20000004

08003e94 <HAL_SUBGHZ_MspInit>:
  * @param  hsubghz pointer to a SUBGHZ_HandleTypeDef structure that contains
  *         the handle information for SUBGHZ module.
  * @retval None
  */
__weak void HAL_SUBGHZ_MspInit(SUBGHZ_HandleTypeDef *hsubghz)
{
 8003e94:	b480      	push	{r7}
 8003e96:	b083      	sub	sp, #12
 8003e98:	af00      	add	r7, sp, #0
 8003e9a:	6078      	str	r0, [r7, #4]
            the HAL_SUBGHZ_MspInit should be implemented in the user file
   */

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hsubghz);
}
 8003e9c:	bf00      	nop
 8003e9e:	370c      	adds	r7, #12
 8003ea0:	46bd      	mov	sp, r7
 8003ea2:	bc80      	pop	{r7}
 8003ea4:	4770      	bx	lr

08003ea6 <HAL_SUBGHZ_WriteRegisters>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_WriteRegisters(SUBGHZ_HandleTypeDef *hsubghz,
                                            uint16_t Address,
                                            uint8_t *pBuffer,
                                            uint16_t Size)
{
 8003ea6:	b580      	push	{r7, lr}
 8003ea8:	b086      	sub	sp, #24
 8003eaa:	af00      	add	r7, sp, #0
 8003eac:	60f8      	str	r0, [r7, #12]
 8003eae:	607a      	str	r2, [r7, #4]
 8003eb0:	461a      	mov	r2, r3
 8003eb2:	460b      	mov	r3, r1
 8003eb4:	817b      	strh	r3, [r7, #10]
 8003eb6:	4613      	mov	r3, r2
 8003eb8:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	799b      	ldrb	r3, [r3, #6]
 8003ebe:	b2db      	uxtb	r3, r3
 8003ec0:	2b01      	cmp	r3, #1
 8003ec2:	d14a      	bne.n	8003f5a <HAL_SUBGHZ_WriteRegisters+0xb4>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	795b      	ldrb	r3, [r3, #5]
 8003ec8:	2b01      	cmp	r3, #1
 8003eca:	d101      	bne.n	8003ed0 <HAL_SUBGHZ_WriteRegisters+0x2a>
 8003ecc:	2302      	movs	r3, #2
 8003ece:	e045      	b.n	8003f5c <HAL_SUBGHZ_WriteRegisters+0xb6>
 8003ed0:	68fb      	ldr	r3, [r7, #12]
 8003ed2:	2201      	movs	r2, #1
 8003ed4:	715a      	strb	r2, [r3, #5]

    hsubghz->State = HAL_SUBGHZ_STATE_BUSY;
 8003ed6:	68fb      	ldr	r3, [r7, #12]
 8003ed8:	2202      	movs	r2, #2
 8003eda:	719a      	strb	r2, [r3, #6]

    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 8003edc:	68f8      	ldr	r0, [r7, #12]
 8003ede:	f000 facf 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 8003ee2:	f7ff fefd 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, SUBGHZ_RADIO_WRITE_REGISTER);
 8003ee6:	210d      	movs	r1, #13
 8003ee8:	68f8      	ldr	r0, [r7, #12]
 8003eea:	f000 fa1b 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)((Address & 0xFF00U) >> 8U));
 8003eee:	897b      	ldrh	r3, [r7, #10]
 8003ef0:	0a1b      	lsrs	r3, r3, #8
 8003ef2:	b29b      	uxth	r3, r3
 8003ef4:	b2db      	uxtb	r3, r3
 8003ef6:	4619      	mov	r1, r3
 8003ef8:	68f8      	ldr	r0, [r7, #12]
 8003efa:	f000 fa13 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)(Address & 0x00FFU));
 8003efe:	897b      	ldrh	r3, [r7, #10]
 8003f00:	b2db      	uxtb	r3, r3
 8003f02:	4619      	mov	r1, r3
 8003f04:	68f8      	ldr	r0, [r7, #12]
 8003f06:	f000 fa0d 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 8003f0a:	2300      	movs	r3, #0
 8003f0c:	82bb      	strh	r3, [r7, #20]
 8003f0e:	e00a      	b.n	8003f26 <HAL_SUBGHZ_WriteRegisters+0x80>
    {
      (void)SUBGHZSPI_Transmit(hsubghz, pBuffer[i]);
 8003f10:	8abb      	ldrh	r3, [r7, #20]
 8003f12:	687a      	ldr	r2, [r7, #4]
 8003f14:	4413      	add	r3, r2
 8003f16:	781b      	ldrb	r3, [r3, #0]
 8003f18:	4619      	mov	r1, r3
 8003f1a:	68f8      	ldr	r0, [r7, #12]
 8003f1c:	f000 fa02 	bl	8004324 <SUBGHZSPI_Transmit>
    for (uint16_t i = 0U; i < Size; i++)
 8003f20:	8abb      	ldrh	r3, [r7, #20]
 8003f22:	3301      	adds	r3, #1
 8003f24:	82bb      	strh	r3, [r7, #20]
 8003f26:	8aba      	ldrh	r2, [r7, #20]
 8003f28:	893b      	ldrh	r3, [r7, #8]
 8003f2a:	429a      	cmp	r2, r3
 8003f2c:	d3f0      	bcc.n	8003f10 <HAL_SUBGHZ_WriteRegisters+0x6a>
    }

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 8003f2e:	f7ff fec7 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    (void)SUBGHZ_WaitOnBusy(hsubghz);
 8003f32:	68f8      	ldr	r0, [r7, #12]
 8003f34:	f000 fac8 	bl	80044c8 <SUBGHZ_WaitOnBusy>

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	689b      	ldr	r3, [r3, #8]
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d002      	beq.n	8003f46 <HAL_SUBGHZ_WriteRegisters+0xa0>
    {
      status = HAL_ERROR;
 8003f40:	2301      	movs	r3, #1
 8003f42:	75fb      	strb	r3, [r7, #23]
 8003f44:	e001      	b.n	8003f4a <HAL_SUBGHZ_WriteRegisters+0xa4>
    }
    else
    {
      status = HAL_OK;
 8003f46:	2300      	movs	r3, #0
 8003f48:	75fb      	strb	r3, [r7, #23]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 8003f4a:	68fb      	ldr	r3, [r7, #12]
 8003f4c:	2201      	movs	r2, #1
 8003f4e:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	2200      	movs	r2, #0
 8003f54:	715a      	strb	r2, [r3, #5]

    return status;
 8003f56:	7dfb      	ldrb	r3, [r7, #23]
 8003f58:	e000      	b.n	8003f5c <HAL_SUBGHZ_WriteRegisters+0xb6>
  }
  else
  {
    return HAL_BUSY;
 8003f5a:	2302      	movs	r3, #2
  }
}
 8003f5c:	4618      	mov	r0, r3
 8003f5e:	3718      	adds	r7, #24
 8003f60:	46bd      	mov	sp, r7
 8003f62:	bd80      	pop	{r7, pc}

08003f64 <HAL_SUBGHZ_ReadRegisters>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_ReadRegisters(SUBGHZ_HandleTypeDef *hsubghz,
                                           uint16_t Address,
                                           uint8_t *pBuffer,
                                           uint16_t Size)
{
 8003f64:	b580      	push	{r7, lr}
 8003f66:	b088      	sub	sp, #32
 8003f68:	af00      	add	r7, sp, #0
 8003f6a:	60f8      	str	r0, [r7, #12]
 8003f6c:	607a      	str	r2, [r7, #4]
 8003f6e:	461a      	mov	r2, r3
 8003f70:	460b      	mov	r3, r1
 8003f72:	817b      	strh	r3, [r7, #10]
 8003f74:	4613      	mov	r3, r2
 8003f76:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;
  uint8_t *pData = pBuffer;
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	61bb      	str	r3, [r7, #24]

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 8003f7c:	68fb      	ldr	r3, [r7, #12]
 8003f7e:	799b      	ldrb	r3, [r3, #6]
 8003f80:	b2db      	uxtb	r3, r3
 8003f82:	2b01      	cmp	r3, #1
 8003f84:	d14a      	bne.n	800401c <HAL_SUBGHZ_ReadRegisters+0xb8>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	795b      	ldrb	r3, [r3, #5]
 8003f8a:	2b01      	cmp	r3, #1
 8003f8c:	d101      	bne.n	8003f92 <HAL_SUBGHZ_ReadRegisters+0x2e>
 8003f8e:	2302      	movs	r3, #2
 8003f90:	e045      	b.n	800401e <HAL_SUBGHZ_ReadRegisters+0xba>
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	2201      	movs	r2, #1
 8003f96:	715a      	strb	r2, [r3, #5]

    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 8003f98:	68f8      	ldr	r0, [r7, #12]
 8003f9a:	f000 fa71 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 8003f9e:	f7ff fe9f 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, SUBGHZ_RADIO_READ_REGISTER);
 8003fa2:	211d      	movs	r1, #29
 8003fa4:	68f8      	ldr	r0, [r7, #12]
 8003fa6:	f000 f9bd 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)((Address & 0xFF00U) >> 8U));
 8003faa:	897b      	ldrh	r3, [r7, #10]
 8003fac:	0a1b      	lsrs	r3, r3, #8
 8003fae:	b29b      	uxth	r3, r3
 8003fb0:	b2db      	uxtb	r3, r3
 8003fb2:	4619      	mov	r1, r3
 8003fb4:	68f8      	ldr	r0, [r7, #12]
 8003fb6:	f000 f9b5 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)(Address & 0x00FFU));
 8003fba:	897b      	ldrh	r3, [r7, #10]
 8003fbc:	b2db      	uxtb	r3, r3
 8003fbe:	4619      	mov	r1, r3
 8003fc0:	68f8      	ldr	r0, [r7, #12]
 8003fc2:	f000 f9af 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, 0U);
 8003fc6:	2100      	movs	r1, #0
 8003fc8:	68f8      	ldr	r0, [r7, #12]
 8003fca:	f000 f9ab 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 8003fce:	2300      	movs	r3, #0
 8003fd0:	82fb      	strh	r3, [r7, #22]
 8003fd2:	e009      	b.n	8003fe8 <HAL_SUBGHZ_ReadRegisters+0x84>
    {
      (void)SUBGHZSPI_Receive(hsubghz, (pData));
 8003fd4:	69b9      	ldr	r1, [r7, #24]
 8003fd6:	68f8      	ldr	r0, [r7, #12]
 8003fd8:	f000 f9fa 	bl	80043d0 <SUBGHZSPI_Receive>
      pData++;
 8003fdc:	69bb      	ldr	r3, [r7, #24]
 8003fde:	3301      	adds	r3, #1
 8003fe0:	61bb      	str	r3, [r7, #24]
    for (uint16_t i = 0U; i < Size; i++)
 8003fe2:	8afb      	ldrh	r3, [r7, #22]
 8003fe4:	3301      	adds	r3, #1
 8003fe6:	82fb      	strh	r3, [r7, #22]
 8003fe8:	8afa      	ldrh	r2, [r7, #22]
 8003fea:	893b      	ldrh	r3, [r7, #8]
 8003fec:	429a      	cmp	r2, r3
 8003fee:	d3f1      	bcc.n	8003fd4 <HAL_SUBGHZ_ReadRegisters+0x70>
    }

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 8003ff0:	f7ff fe66 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    (void)SUBGHZ_WaitOnBusy(hsubghz);
 8003ff4:	68f8      	ldr	r0, [r7, #12]
 8003ff6:	f000 fa67 	bl	80044c8 <SUBGHZ_WaitOnBusy>

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	689b      	ldr	r3, [r3, #8]
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d002      	beq.n	8004008 <HAL_SUBGHZ_ReadRegisters+0xa4>
    {
      status = HAL_ERROR;
 8004002:	2301      	movs	r3, #1
 8004004:	77fb      	strb	r3, [r7, #31]
 8004006:	e001      	b.n	800400c <HAL_SUBGHZ_ReadRegisters+0xa8>
    }
    else
    {
      status = HAL_OK;
 8004008:	2300      	movs	r3, #0
 800400a:	77fb      	strb	r3, [r7, #31]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	2201      	movs	r2, #1
 8004010:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 8004012:	68fb      	ldr	r3, [r7, #12]
 8004014:	2200      	movs	r2, #0
 8004016:	715a      	strb	r2, [r3, #5]

    return status;
 8004018:	7ffb      	ldrb	r3, [r7, #31]
 800401a:	e000      	b.n	800401e <HAL_SUBGHZ_ReadRegisters+0xba>
  }
  else
  {
    return HAL_BUSY;
 800401c:	2302      	movs	r3, #2
  }
}
 800401e:	4618      	mov	r0, r3
 8004020:	3720      	adds	r7, #32
 8004022:	46bd      	mov	sp, r7
 8004024:	bd80      	pop	{r7, pc}

08004026 <HAL_SUBGHZ_ExecSetCmd>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_ExecSetCmd(SUBGHZ_HandleTypeDef *hsubghz,
                                        SUBGHZ_RadioSetCmd_t Command,
                                        uint8_t *pBuffer,
                                        uint16_t Size)
{
 8004026:	b580      	push	{r7, lr}
 8004028:	b086      	sub	sp, #24
 800402a:	af00      	add	r7, sp, #0
 800402c:	60f8      	str	r0, [r7, #12]
 800402e:	607a      	str	r2, [r7, #4]
 8004030:	461a      	mov	r2, r3
 8004032:	460b      	mov	r3, r1
 8004034:	72fb      	strb	r3, [r7, #11]
 8004036:	4613      	mov	r3, r2
 8004038:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;

  /* LORA Modulation not available on STM32WLx4xx devices */
  assert_param(IS_SUBGHZ_MODULATION_SUPPORTED(Command, pBuffer[0U]));

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 800403a:	68fb      	ldr	r3, [r7, #12]
 800403c:	799b      	ldrb	r3, [r3, #6]
 800403e:	b2db      	uxtb	r3, r3
 8004040:	2b01      	cmp	r3, #1
 8004042:	d14a      	bne.n	80040da <HAL_SUBGHZ_ExecSetCmd+0xb4>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	795b      	ldrb	r3, [r3, #5]
 8004048:	2b01      	cmp	r3, #1
 800404a:	d101      	bne.n	8004050 <HAL_SUBGHZ_ExecSetCmd+0x2a>
 800404c:	2302      	movs	r3, #2
 800404e:	e045      	b.n	80040dc <HAL_SUBGHZ_ExecSetCmd+0xb6>
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	2201      	movs	r2, #1
 8004054:	715a      	strb	r2, [r3, #5]

    /* Need to wakeup Radio if already in Sleep at startup */
    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 8004056:	68f8      	ldr	r0, [r7, #12]
 8004058:	f000 fa12 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    if ((Command == RADIO_SET_SLEEP) || (Command == RADIO_SET_RXDUTYCYCLE))
 800405c:	7afb      	ldrb	r3, [r7, #11]
 800405e:	2b84      	cmp	r3, #132	; 0x84
 8004060:	d002      	beq.n	8004068 <HAL_SUBGHZ_ExecSetCmd+0x42>
 8004062:	7afb      	ldrb	r3, [r7, #11]
 8004064:	2b94      	cmp	r3, #148	; 0x94
 8004066:	d103      	bne.n	8004070 <HAL_SUBGHZ_ExecSetCmd+0x4a>
    {
      hsubghz->DeepSleep = SUBGHZ_DEEP_SLEEP_ENABLE;
 8004068:	68fb      	ldr	r3, [r7, #12]
 800406a:	2201      	movs	r2, #1
 800406c:	711a      	strb	r2, [r3, #4]
 800406e:	e002      	b.n	8004076 <HAL_SUBGHZ_ExecSetCmd+0x50>
    }
    else
    {
      hsubghz->DeepSleep = SUBGHZ_DEEP_SLEEP_DISABLE;
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	2200      	movs	r2, #0
 8004074:	711a      	strb	r2, [r3, #4]
    }

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 8004076:	f7ff fe33 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)Command);
 800407a:	7afb      	ldrb	r3, [r7, #11]
 800407c:	4619      	mov	r1, r3
 800407e:	68f8      	ldr	r0, [r7, #12]
 8004080:	f000 f950 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 8004084:	2300      	movs	r3, #0
 8004086:	82bb      	strh	r3, [r7, #20]
 8004088:	e00a      	b.n	80040a0 <HAL_SUBGHZ_ExecSetCmd+0x7a>
    {
      (void)SUBGHZSPI_Transmit(hsubghz, pBuffer[i]);
 800408a:	8abb      	ldrh	r3, [r7, #20]
 800408c:	687a      	ldr	r2, [r7, #4]
 800408e:	4413      	add	r3, r2
 8004090:	781b      	ldrb	r3, [r3, #0]
 8004092:	4619      	mov	r1, r3
 8004094:	68f8      	ldr	r0, [r7, #12]
 8004096:	f000 f945 	bl	8004324 <SUBGHZSPI_Transmit>
    for (uint16_t i = 0U; i < Size; i++)
 800409a:	8abb      	ldrh	r3, [r7, #20]
 800409c:	3301      	adds	r3, #1
 800409e:	82bb      	strh	r3, [r7, #20]
 80040a0:	8aba      	ldrh	r2, [r7, #20]
 80040a2:	893b      	ldrh	r3, [r7, #8]
 80040a4:	429a      	cmp	r2, r3
 80040a6:	d3f0      	bcc.n	800408a <HAL_SUBGHZ_ExecSetCmd+0x64>
    }

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 80040a8:	f7ff fe0a 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    if (Command != RADIO_SET_SLEEP)
 80040ac:	7afb      	ldrb	r3, [r7, #11]
 80040ae:	2b84      	cmp	r3, #132	; 0x84
 80040b0:	d002      	beq.n	80040b8 <HAL_SUBGHZ_ExecSetCmd+0x92>
    {
      (void)SUBGHZ_WaitOnBusy(hsubghz);
 80040b2:	68f8      	ldr	r0, [r7, #12]
 80040b4:	f000 fa08 	bl	80044c8 <SUBGHZ_WaitOnBusy>
    }

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	689b      	ldr	r3, [r3, #8]
 80040bc:	2b00      	cmp	r3, #0
 80040be:	d002      	beq.n	80040c6 <HAL_SUBGHZ_ExecSetCmd+0xa0>
    {
      status = HAL_ERROR;
 80040c0:	2301      	movs	r3, #1
 80040c2:	75fb      	strb	r3, [r7, #23]
 80040c4:	e001      	b.n	80040ca <HAL_SUBGHZ_ExecSetCmd+0xa4>
    }
    else
    {
      status = HAL_OK;
 80040c6:	2300      	movs	r3, #0
 80040c8:	75fb      	strb	r3, [r7, #23]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	2201      	movs	r2, #1
 80040ce:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	2200      	movs	r2, #0
 80040d4:	715a      	strb	r2, [r3, #5]

    return status;
 80040d6:	7dfb      	ldrb	r3, [r7, #23]
 80040d8:	e000      	b.n	80040dc <HAL_SUBGHZ_ExecSetCmd+0xb6>
  }
  else
  {
    return HAL_BUSY;
 80040da:	2302      	movs	r3, #2
  }
}
 80040dc:	4618      	mov	r0, r3
 80040de:	3718      	adds	r7, #24
 80040e0:	46bd      	mov	sp, r7
 80040e2:	bd80      	pop	{r7, pc}

080040e4 <HAL_SUBGHZ_ExecGetCmd>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_ExecGetCmd(SUBGHZ_HandleTypeDef *hsubghz,
                                        SUBGHZ_RadioGetCmd_t Command,
                                        uint8_t *pBuffer,
                                        uint16_t Size)
{
 80040e4:	b580      	push	{r7, lr}
 80040e6:	b088      	sub	sp, #32
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	60f8      	str	r0, [r7, #12]
 80040ec:	607a      	str	r2, [r7, #4]
 80040ee:	461a      	mov	r2, r3
 80040f0:	460b      	mov	r3, r1
 80040f2:	72fb      	strb	r3, [r7, #11]
 80040f4:	4613      	mov	r3, r2
 80040f6:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;
  uint8_t *pData = pBuffer;
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	61bb      	str	r3, [r7, #24]

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 80040fc:	68fb      	ldr	r3, [r7, #12]
 80040fe:	799b      	ldrb	r3, [r3, #6]
 8004100:	b2db      	uxtb	r3, r3
 8004102:	2b01      	cmp	r3, #1
 8004104:	d13d      	bne.n	8004182 <HAL_SUBGHZ_ExecGetCmd+0x9e>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	795b      	ldrb	r3, [r3, #5]
 800410a:	2b01      	cmp	r3, #1
 800410c:	d101      	bne.n	8004112 <HAL_SUBGHZ_ExecGetCmd+0x2e>
 800410e:	2302      	movs	r3, #2
 8004110:	e038      	b.n	8004184 <HAL_SUBGHZ_ExecGetCmd+0xa0>
 8004112:	68fb      	ldr	r3, [r7, #12]
 8004114:	2201      	movs	r2, #1
 8004116:	715a      	strb	r2, [r3, #5]

    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 8004118:	68f8      	ldr	r0, [r7, #12]
 800411a:	f000 f9b1 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 800411e:	f7ff fddf 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, (uint8_t)Command);
 8004122:	7afb      	ldrb	r3, [r7, #11]
 8004124:	4619      	mov	r1, r3
 8004126:	68f8      	ldr	r0, [r7, #12]
 8004128:	f000 f8fc 	bl	8004324 <SUBGHZSPI_Transmit>

    /* Use to flush the Status (First byte) receive from SUBGHZ as not use */
    (void)SUBGHZSPI_Transmit(hsubghz, 0x00U);
 800412c:	2100      	movs	r1, #0
 800412e:	68f8      	ldr	r0, [r7, #12]
 8004130:	f000 f8f8 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 8004134:	2300      	movs	r3, #0
 8004136:	82fb      	strh	r3, [r7, #22]
 8004138:	e009      	b.n	800414e <HAL_SUBGHZ_ExecGetCmd+0x6a>
    {
      (void)SUBGHZSPI_Receive(hsubghz, (pData));
 800413a:	69b9      	ldr	r1, [r7, #24]
 800413c:	68f8      	ldr	r0, [r7, #12]
 800413e:	f000 f947 	bl	80043d0 <SUBGHZSPI_Receive>
      pData++;
 8004142:	69bb      	ldr	r3, [r7, #24]
 8004144:	3301      	adds	r3, #1
 8004146:	61bb      	str	r3, [r7, #24]
    for (uint16_t i = 0U; i < Size; i++)
 8004148:	8afb      	ldrh	r3, [r7, #22]
 800414a:	3301      	adds	r3, #1
 800414c:	82fb      	strh	r3, [r7, #22]
 800414e:	8afa      	ldrh	r2, [r7, #22]
 8004150:	893b      	ldrh	r3, [r7, #8]
 8004152:	429a      	cmp	r2, r3
 8004154:	d3f1      	bcc.n	800413a <HAL_SUBGHZ_ExecGetCmd+0x56>
    }

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 8004156:	f7ff fdb3 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    (void)SUBGHZ_WaitOnBusy(hsubghz);
 800415a:	68f8      	ldr	r0, [r7, #12]
 800415c:	f000 f9b4 	bl	80044c8 <SUBGHZ_WaitOnBusy>

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	689b      	ldr	r3, [r3, #8]
 8004164:	2b00      	cmp	r3, #0
 8004166:	d002      	beq.n	800416e <HAL_SUBGHZ_ExecGetCmd+0x8a>
    {
      status = HAL_ERROR;
 8004168:	2301      	movs	r3, #1
 800416a:	77fb      	strb	r3, [r7, #31]
 800416c:	e001      	b.n	8004172 <HAL_SUBGHZ_ExecGetCmd+0x8e>
    }
    else
    {
      status = HAL_OK;
 800416e:	2300      	movs	r3, #0
 8004170:	77fb      	strb	r3, [r7, #31]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	2201      	movs	r2, #1
 8004176:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 8004178:	68fb      	ldr	r3, [r7, #12]
 800417a:	2200      	movs	r2, #0
 800417c:	715a      	strb	r2, [r3, #5]

    return status;
 800417e:	7ffb      	ldrb	r3, [r7, #31]
 8004180:	e000      	b.n	8004184 <HAL_SUBGHZ_ExecGetCmd+0xa0>
  }
  else
  {
    return HAL_BUSY;
 8004182:	2302      	movs	r3, #2
  }
}
 8004184:	4618      	mov	r0, r3
 8004186:	3720      	adds	r7, #32
 8004188:	46bd      	mov	sp, r7
 800418a:	bd80      	pop	{r7, pc}

0800418c <HAL_SUBGHZ_WriteBuffer>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_WriteBuffer(SUBGHZ_HandleTypeDef *hsubghz,
                                         uint8_t Offset,
                                         uint8_t *pBuffer,
                                         uint16_t Size)
{
 800418c:	b580      	push	{r7, lr}
 800418e:	b086      	sub	sp, #24
 8004190:	af00      	add	r7, sp, #0
 8004192:	60f8      	str	r0, [r7, #12]
 8004194:	607a      	str	r2, [r7, #4]
 8004196:	461a      	mov	r2, r3
 8004198:	460b      	mov	r3, r1
 800419a:	72fb      	strb	r3, [r7, #11]
 800419c:	4613      	mov	r3, r2
 800419e:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	799b      	ldrb	r3, [r3, #6]
 80041a4:	b2db      	uxtb	r3, r3
 80041a6:	2b01      	cmp	r3, #1
 80041a8:	d13e      	bne.n	8004228 <HAL_SUBGHZ_WriteBuffer+0x9c>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 80041aa:	68fb      	ldr	r3, [r7, #12]
 80041ac:	795b      	ldrb	r3, [r3, #5]
 80041ae:	2b01      	cmp	r3, #1
 80041b0:	d101      	bne.n	80041b6 <HAL_SUBGHZ_WriteBuffer+0x2a>
 80041b2:	2302      	movs	r3, #2
 80041b4:	e039      	b.n	800422a <HAL_SUBGHZ_WriteBuffer+0x9e>
 80041b6:	68fb      	ldr	r3, [r7, #12]
 80041b8:	2201      	movs	r2, #1
 80041ba:	715a      	strb	r2, [r3, #5]

    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 80041bc:	68f8      	ldr	r0, [r7, #12]
 80041be:	f000 f95f 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 80041c2:	f7ff fd8d 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, SUBGHZ_RADIO_WRITE_BUFFER);
 80041c6:	210e      	movs	r1, #14
 80041c8:	68f8      	ldr	r0, [r7, #12]
 80041ca:	f000 f8ab 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, Offset);
 80041ce:	7afb      	ldrb	r3, [r7, #11]
 80041d0:	4619      	mov	r1, r3
 80041d2:	68f8      	ldr	r0, [r7, #12]
 80041d4:	f000 f8a6 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 80041d8:	2300      	movs	r3, #0
 80041da:	82bb      	strh	r3, [r7, #20]
 80041dc:	e00a      	b.n	80041f4 <HAL_SUBGHZ_WriteBuffer+0x68>
    {
      (void)SUBGHZSPI_Transmit(hsubghz, pBuffer[i]);
 80041de:	8abb      	ldrh	r3, [r7, #20]
 80041e0:	687a      	ldr	r2, [r7, #4]
 80041e2:	4413      	add	r3, r2
 80041e4:	781b      	ldrb	r3, [r3, #0]
 80041e6:	4619      	mov	r1, r3
 80041e8:	68f8      	ldr	r0, [r7, #12]
 80041ea:	f000 f89b 	bl	8004324 <SUBGHZSPI_Transmit>
    for (uint16_t i = 0U; i < Size; i++)
 80041ee:	8abb      	ldrh	r3, [r7, #20]
 80041f0:	3301      	adds	r3, #1
 80041f2:	82bb      	strh	r3, [r7, #20]
 80041f4:	8aba      	ldrh	r2, [r7, #20]
 80041f6:	893b      	ldrh	r3, [r7, #8]
 80041f8:	429a      	cmp	r2, r3
 80041fa:	d3f0      	bcc.n	80041de <HAL_SUBGHZ_WriteBuffer+0x52>
    }
    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 80041fc:	f7ff fd60 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    (void)SUBGHZ_WaitOnBusy(hsubghz);
 8004200:	68f8      	ldr	r0, [r7, #12]
 8004202:	f000 f961 	bl	80044c8 <SUBGHZ_WaitOnBusy>

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 8004206:	68fb      	ldr	r3, [r7, #12]
 8004208:	689b      	ldr	r3, [r3, #8]
 800420a:	2b00      	cmp	r3, #0
 800420c:	d002      	beq.n	8004214 <HAL_SUBGHZ_WriteBuffer+0x88>
    {
      status = HAL_ERROR;
 800420e:	2301      	movs	r3, #1
 8004210:	75fb      	strb	r3, [r7, #23]
 8004212:	e001      	b.n	8004218 <HAL_SUBGHZ_WriteBuffer+0x8c>
    }
    else
    {
      status = HAL_OK;
 8004214:	2300      	movs	r3, #0
 8004216:	75fb      	strb	r3, [r7, #23]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 8004218:	68fb      	ldr	r3, [r7, #12]
 800421a:	2201      	movs	r2, #1
 800421c:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	2200      	movs	r2, #0
 8004222:	715a      	strb	r2, [r3, #5]

    return status;
 8004224:	7dfb      	ldrb	r3, [r7, #23]
 8004226:	e000      	b.n	800422a <HAL_SUBGHZ_WriteBuffer+0x9e>
  }
  else
  {
    return HAL_BUSY;
 8004228:	2302      	movs	r3, #2
  }
}
 800422a:	4618      	mov	r0, r3
 800422c:	3718      	adds	r7, #24
 800422e:	46bd      	mov	sp, r7
 8004230:	bd80      	pop	{r7, pc}

08004232 <HAL_SUBGHZ_ReadBuffer>:
  */
HAL_StatusTypeDef HAL_SUBGHZ_ReadBuffer(SUBGHZ_HandleTypeDef *hsubghz,
                                        uint8_t Offset,
                                        uint8_t *pBuffer,
                                        uint16_t Size)
{
 8004232:	b580      	push	{r7, lr}
 8004234:	b088      	sub	sp, #32
 8004236:	af00      	add	r7, sp, #0
 8004238:	60f8      	str	r0, [r7, #12]
 800423a:	607a      	str	r2, [r7, #4]
 800423c:	461a      	mov	r2, r3
 800423e:	460b      	mov	r3, r1
 8004240:	72fb      	strb	r3, [r7, #11]
 8004242:	4613      	mov	r3, r2
 8004244:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef status;
  uint8_t *pData = pBuffer;
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	61bb      	str	r3, [r7, #24]

  if (hsubghz->State == HAL_SUBGHZ_STATE_READY)
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	799b      	ldrb	r3, [r3, #6]
 800424e:	b2db      	uxtb	r3, r3
 8004250:	2b01      	cmp	r3, #1
 8004252:	d141      	bne.n	80042d8 <HAL_SUBGHZ_ReadBuffer+0xa6>
  {
    /* Process Locked */
    __HAL_LOCK(hsubghz);
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	795b      	ldrb	r3, [r3, #5]
 8004258:	2b01      	cmp	r3, #1
 800425a:	d101      	bne.n	8004260 <HAL_SUBGHZ_ReadBuffer+0x2e>
 800425c:	2302      	movs	r3, #2
 800425e:	e03c      	b.n	80042da <HAL_SUBGHZ_ReadBuffer+0xa8>
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	2201      	movs	r2, #1
 8004264:	715a      	strb	r2, [r3, #5]

    (void)SUBGHZ_CheckDeviceReady(hsubghz);
 8004266:	68f8      	ldr	r0, [r7, #12]
 8004268:	f000 f90a 	bl	8004480 <SUBGHZ_CheckDeviceReady>

    /* NSS = 0 */
    LL_PWR_SelectSUBGHZSPI_NSS();
 800426c:	f7ff fd38 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    (void)SUBGHZSPI_Transmit(hsubghz, SUBGHZ_RADIO_READ_BUFFER);
 8004270:	211e      	movs	r1, #30
 8004272:	68f8      	ldr	r0, [r7, #12]
 8004274:	f000 f856 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, Offset);
 8004278:	7afb      	ldrb	r3, [r7, #11]
 800427a:	4619      	mov	r1, r3
 800427c:	68f8      	ldr	r0, [r7, #12]
 800427e:	f000 f851 	bl	8004324 <SUBGHZSPI_Transmit>
    (void)SUBGHZSPI_Transmit(hsubghz, 0x00U);
 8004282:	2100      	movs	r1, #0
 8004284:	68f8      	ldr	r0, [r7, #12]
 8004286:	f000 f84d 	bl	8004324 <SUBGHZSPI_Transmit>

    for (uint16_t i = 0U; i < Size; i++)
 800428a:	2300      	movs	r3, #0
 800428c:	82fb      	strh	r3, [r7, #22]
 800428e:	e009      	b.n	80042a4 <HAL_SUBGHZ_ReadBuffer+0x72>
    {
      (void)SUBGHZSPI_Receive(hsubghz, (pData));
 8004290:	69b9      	ldr	r1, [r7, #24]
 8004292:	68f8      	ldr	r0, [r7, #12]
 8004294:	f000 f89c 	bl	80043d0 <SUBGHZSPI_Receive>
      pData++;
 8004298:	69bb      	ldr	r3, [r7, #24]
 800429a:	3301      	adds	r3, #1
 800429c:	61bb      	str	r3, [r7, #24]
    for (uint16_t i = 0U; i < Size; i++)
 800429e:	8afb      	ldrh	r3, [r7, #22]
 80042a0:	3301      	adds	r3, #1
 80042a2:	82fb      	strh	r3, [r7, #22]
 80042a4:	8afa      	ldrh	r2, [r7, #22]
 80042a6:	893b      	ldrh	r3, [r7, #8]
 80042a8:	429a      	cmp	r2, r3
 80042aa:	d3f1      	bcc.n	8004290 <HAL_SUBGHZ_ReadBuffer+0x5e>
    }

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 80042ac:	f7ff fd08 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>

    (void)SUBGHZ_WaitOnBusy(hsubghz);
 80042b0:	68f8      	ldr	r0, [r7, #12]
 80042b2:	f000 f909 	bl	80044c8 <SUBGHZ_WaitOnBusy>

    if (hsubghz->ErrorCode != HAL_SUBGHZ_ERROR_NONE)
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	689b      	ldr	r3, [r3, #8]
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d002      	beq.n	80042c4 <HAL_SUBGHZ_ReadBuffer+0x92>
    {
      status = HAL_ERROR;
 80042be:	2301      	movs	r3, #1
 80042c0:	77fb      	strb	r3, [r7, #31]
 80042c2:	e001      	b.n	80042c8 <HAL_SUBGHZ_ReadBuffer+0x96>
    }
    else
    {
      status = HAL_OK;
 80042c4:	2300      	movs	r3, #0
 80042c6:	77fb      	strb	r3, [r7, #31]
    }

    hsubghz->State = HAL_SUBGHZ_STATE_READY;
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	2201      	movs	r2, #1
 80042cc:	719a      	strb	r2, [r3, #6]

    /* Process Unlocked */
    __HAL_UNLOCK(hsubghz);
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	2200      	movs	r2, #0
 80042d2:	715a      	strb	r2, [r3, #5]

    return status;
 80042d4:	7ffb      	ldrb	r3, [r7, #31]
 80042d6:	e000      	b.n	80042da <HAL_SUBGHZ_ReadBuffer+0xa8>
  }
  else
  {
    return HAL_BUSY;
 80042d8:	2302      	movs	r3, #2
  }
}
 80042da:	4618      	mov	r0, r3
 80042dc:	3720      	adds	r7, #32
 80042de:	46bd      	mov	sp, r7
 80042e0:	bd80      	pop	{r7, pc}
	...

080042e4 <SUBGHZSPI_Init>:
  * @brief  Initializes the SUBGHZSPI peripheral
  * @param  BaudratePrescaler SPI Baudrate prescaler
  * @retval None
  */
void SUBGHZSPI_Init(uint32_t BaudratePrescaler)
{
 80042e4:	b480      	push	{r7}
 80042e6:	b083      	sub	sp, #12
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_SUBGHZ_ALL_INSTANCE(SUBGHZSPI));

  /* Disable SUBGHZSPI Peripheral */
  CLEAR_BIT(SUBGHZSPI->CR1, SPI_CR1_SPE);
 80042ec:	4b0c      	ldr	r3, [pc, #48]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	4a0b      	ldr	r2, [pc, #44]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 80042f2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80042f6:	6013      	str	r3, [r2, #0]
   *       NSS management: Internal (Done with External bit inside PWR        *
   *  Communication speed: BaudratePrescaler                             *
   *            First bit: MSB                                                *
   *      CRC calculation: Disable                                            *
   *--------------------------------------------------------------------------*/
  WRITE_REG(SUBGHZSPI->CR1, (SPI_CR1_MSTR | SPI_CR1_SSI | BaudratePrescaler | SPI_CR1_SSM));
 80042f8:	4a09      	ldr	r2, [pc, #36]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	f443 7341 	orr.w	r3, r3, #772	; 0x304
 8004300:	6013      	str	r3, [r2, #0]
   *            Data Size: 8bits                                              *
   *              TI Mode: Disable                                            *
   *            NSS Pulse: Disable                                            *
   *    Rx FIFO Threshold: 8bits                                              *
   *--------------------------------------------------------------------------*/
  WRITE_REG(SUBGHZSPI->CR2, (SPI_CR2_FRXTH |  SPI_CR2_DS_0 | SPI_CR2_DS_1 | SPI_CR2_DS_2));
 8004302:	4b07      	ldr	r3, [pc, #28]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 8004304:	f44f 52b8 	mov.w	r2, #5888	; 0x1700
 8004308:	605a      	str	r2, [r3, #4]

  /* Enable SUBGHZSPI Peripheral */
  SET_BIT(SUBGHZSPI->CR1, SPI_CR1_SPE);
 800430a:	4b05      	ldr	r3, [pc, #20]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	4a04      	ldr	r2, [pc, #16]	; (8004320 <SUBGHZSPI_Init+0x3c>)
 8004310:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004314:	6013      	str	r3, [r2, #0]
}
 8004316:	bf00      	nop
 8004318:	370c      	adds	r7, #12
 800431a:	46bd      	mov	sp, r7
 800431c:	bc80      	pop	{r7}
 800431e:	4770      	bx	lr
 8004320:	58010000 	.word	0x58010000

08004324 <SUBGHZSPI_Transmit>:
  * @param  Data  data to transmit
  * @retval HAL status
  */
HAL_StatusTypeDef SUBGHZSPI_Transmit(SUBGHZ_HandleTypeDef *hsubghz,
                                     uint8_t Data)
{
 8004324:	b480      	push	{r7}
 8004326:	b087      	sub	sp, #28
 8004328:	af00      	add	r7, sp, #0
 800432a:	6078      	str	r0, [r7, #4]
 800432c:	460b      	mov	r3, r1
 800432e:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef status = HAL_OK;
 8004330:	2300      	movs	r3, #0
 8004332:	75fb      	strb	r3, [r7, #23]
  __IO uint32_t count;

  /* Handle Tx transmission from SUBGHZSPI peripheral to Radio ****************/
  /* Initialize Timeout */
  count = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_DEFAULT_LOOP_TIME;
 8004334:	4b23      	ldr	r3, [pc, #140]	; (80043c4 <SUBGHZSPI_Transmit+0xa0>)
 8004336:	681a      	ldr	r2, [r3, #0]
 8004338:	4613      	mov	r3, r2
 800433a:	00db      	lsls	r3, r3, #3
 800433c:	1a9b      	subs	r3, r3, r2
 800433e:	009b      	lsls	r3, r3, #2
 8004340:	0cdb      	lsrs	r3, r3, #19
 8004342:	2264      	movs	r2, #100	; 0x64
 8004344:	fb02 f303 	mul.w	r3, r2, r3
 8004348:	60fb      	str	r3, [r7, #12]

  /* Wait until TXE flag is set */
  do
  {
    if (count == 0U)
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	2b00      	cmp	r3, #0
 800434e:	d105      	bne.n	800435c <SUBGHZSPI_Transmit+0x38>
    {
      status = HAL_ERROR;
 8004350:	2301      	movs	r3, #1
 8004352:	75fb      	strb	r3, [r7, #23]
      hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_TIMEOUT;
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	2201      	movs	r2, #1
 8004358:	609a      	str	r2, [r3, #8]
      break;
 800435a:	e008      	b.n	800436e <SUBGHZSPI_Transmit+0x4a>
    }
    count--;
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	3b01      	subs	r3, #1
 8004360:	60fb      	str	r3, [r7, #12]
  } while (READ_BIT(SUBGHZSPI->SR, SPI_SR_TXE) != (SPI_SR_TXE));
 8004362:	4b19      	ldr	r3, [pc, #100]	; (80043c8 <SUBGHZSPI_Transmit+0xa4>)
 8004364:	689b      	ldr	r3, [r3, #8]
 8004366:	f003 0302 	and.w	r3, r3, #2
 800436a:	2b02      	cmp	r3, #2
 800436c:	d1ed      	bne.n	800434a <SUBGHZSPI_Transmit+0x26>

  /* Transmit Data*/
#if defined (__GNUC__)
  __IO uint8_t *spidr = ((__IO uint8_t *)&SUBGHZSPI->DR);
 800436e:	4b17      	ldr	r3, [pc, #92]	; (80043cc <SUBGHZSPI_Transmit+0xa8>)
 8004370:	613b      	str	r3, [r7, #16]
  *spidr = Data;
 8004372:	693b      	ldr	r3, [r7, #16]
 8004374:	78fa      	ldrb	r2, [r7, #3]
 8004376:	701a      	strb	r2, [r3, #0]
  *((__IO uint8_t *)&SUBGHZSPI->DR) = Data;
#endif /* __GNUC__ */

  /* Handle Rx transmission from SUBGHZSPI peripheral to Radio ****************/
  /* Initialize Timeout */
  count = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_DEFAULT_LOOP_TIME;
 8004378:	4b12      	ldr	r3, [pc, #72]	; (80043c4 <SUBGHZSPI_Transmit+0xa0>)
 800437a:	681a      	ldr	r2, [r3, #0]
 800437c:	4613      	mov	r3, r2
 800437e:	00db      	lsls	r3, r3, #3
 8004380:	1a9b      	subs	r3, r3, r2
 8004382:	009b      	lsls	r3, r3, #2
 8004384:	0cdb      	lsrs	r3, r3, #19
 8004386:	2264      	movs	r2, #100	; 0x64
 8004388:	fb02 f303 	mul.w	r3, r2, r3
 800438c:	60fb      	str	r3, [r7, #12]

  /* Wait until RXNE flag is set */
  do
  {
    if (count == 0U)
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	2b00      	cmp	r3, #0
 8004392:	d105      	bne.n	80043a0 <SUBGHZSPI_Transmit+0x7c>
    {
      status = HAL_ERROR;
 8004394:	2301      	movs	r3, #1
 8004396:	75fb      	strb	r3, [r7, #23]
      hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_TIMEOUT;
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	2201      	movs	r2, #1
 800439c:	609a      	str	r2, [r3, #8]
      break;
 800439e:	e008      	b.n	80043b2 <SUBGHZSPI_Transmit+0x8e>
    }
    count--;
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	3b01      	subs	r3, #1
 80043a4:	60fb      	str	r3, [r7, #12]
  } while (READ_BIT(SUBGHZSPI->SR, SPI_SR_RXNE) != (SPI_SR_RXNE));
 80043a6:	4b08      	ldr	r3, [pc, #32]	; (80043c8 <SUBGHZSPI_Transmit+0xa4>)
 80043a8:	689b      	ldr	r3, [r3, #8]
 80043aa:	f003 0301 	and.w	r3, r3, #1
 80043ae:	2b01      	cmp	r3, #1
 80043b0:	d1ed      	bne.n	800438e <SUBGHZSPI_Transmit+0x6a>

  /* Flush Rx data */
  READ_REG(SUBGHZSPI->DR);
 80043b2:	4b05      	ldr	r3, [pc, #20]	; (80043c8 <SUBGHZSPI_Transmit+0xa4>)
 80043b4:	68db      	ldr	r3, [r3, #12]

  return status;
 80043b6:	7dfb      	ldrb	r3, [r7, #23]
}
 80043b8:	4618      	mov	r0, r3
 80043ba:	371c      	adds	r7, #28
 80043bc:	46bd      	mov	sp, r7
 80043be:	bc80      	pop	{r7}
 80043c0:	4770      	bx	lr
 80043c2:	bf00      	nop
 80043c4:	20000004 	.word	0x20000004
 80043c8:	58010000 	.word	0x58010000
 80043cc:	5801000c 	.word	0x5801000c

080043d0 <SUBGHZSPI_Receive>:
  * @param  pData  pointer on data to receive
  * @retval HAL status
  */
HAL_StatusTypeDef SUBGHZSPI_Receive(SUBGHZ_HandleTypeDef *hsubghz,
                                    uint8_t *pData)
{
 80043d0:	b480      	push	{r7}
 80043d2:	b087      	sub	sp, #28
 80043d4:	af00      	add	r7, sp, #0
 80043d6:	6078      	str	r0, [r7, #4]
 80043d8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80043da:	2300      	movs	r3, #0
 80043dc:	75fb      	strb	r3, [r7, #23]
  __IO uint32_t count;

  /* Handle Tx transmission from SUBGHZSPI peripheral to Radio ****************/
  /* Initialize Timeout */
  count = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_DEFAULT_LOOP_TIME;
 80043de:	4b25      	ldr	r3, [pc, #148]	; (8004474 <SUBGHZSPI_Receive+0xa4>)
 80043e0:	681a      	ldr	r2, [r3, #0]
 80043e2:	4613      	mov	r3, r2
 80043e4:	00db      	lsls	r3, r3, #3
 80043e6:	1a9b      	subs	r3, r3, r2
 80043e8:	009b      	lsls	r3, r3, #2
 80043ea:	0cdb      	lsrs	r3, r3, #19
 80043ec:	2264      	movs	r2, #100	; 0x64
 80043ee:	fb02 f303 	mul.w	r3, r2, r3
 80043f2:	60fb      	str	r3, [r7, #12]

  /* Wait until TXE flag is set */
  do
  {
    if (count == 0U)
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d105      	bne.n	8004406 <SUBGHZSPI_Receive+0x36>
    {
      status = HAL_ERROR;
 80043fa:	2301      	movs	r3, #1
 80043fc:	75fb      	strb	r3, [r7, #23]
      hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_TIMEOUT;
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	2201      	movs	r2, #1
 8004402:	609a      	str	r2, [r3, #8]
      break;
 8004404:	e008      	b.n	8004418 <SUBGHZSPI_Receive+0x48>
    }
    count--;
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	3b01      	subs	r3, #1
 800440a:	60fb      	str	r3, [r7, #12]
  } while (READ_BIT(SUBGHZSPI->SR, SPI_SR_TXE) != (SPI_SR_TXE));
 800440c:	4b1a      	ldr	r3, [pc, #104]	; (8004478 <SUBGHZSPI_Receive+0xa8>)
 800440e:	689b      	ldr	r3, [r3, #8]
 8004410:	f003 0302 	and.w	r3, r3, #2
 8004414:	2b02      	cmp	r3, #2
 8004416:	d1ed      	bne.n	80043f4 <SUBGHZSPI_Receive+0x24>

  /* Transmit Data*/
#if defined (__GNUC__)
  __IO uint8_t *spidr = ((__IO uint8_t *)&SUBGHZSPI->DR);
 8004418:	4b18      	ldr	r3, [pc, #96]	; (800447c <SUBGHZSPI_Receive+0xac>)
 800441a:	613b      	str	r3, [r7, #16]
  *spidr = SUBGHZ_DUMMY_DATA;
 800441c:	693b      	ldr	r3, [r7, #16]
 800441e:	22ff      	movs	r2, #255	; 0xff
 8004420:	701a      	strb	r2, [r3, #0]
  *((__IO uint8_t *)&SUBGHZSPI->DR) = SUBGHZ_DUMMY_DATA;
#endif /* __GNUC__ */

  /* Handle Rx transmission from SUBGHZSPI peripheral to Radio ****************/
  /* Initialize Timeout */
  count = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_DEFAULT_LOOP_TIME;
 8004422:	4b14      	ldr	r3, [pc, #80]	; (8004474 <SUBGHZSPI_Receive+0xa4>)
 8004424:	681a      	ldr	r2, [r3, #0]
 8004426:	4613      	mov	r3, r2
 8004428:	00db      	lsls	r3, r3, #3
 800442a:	1a9b      	subs	r3, r3, r2
 800442c:	009b      	lsls	r3, r3, #2
 800442e:	0cdb      	lsrs	r3, r3, #19
 8004430:	2264      	movs	r2, #100	; 0x64
 8004432:	fb02 f303 	mul.w	r3, r2, r3
 8004436:	60fb      	str	r3, [r7, #12]

  /* Wait until RXNE flag is set */
  do
  {
    if (count == 0U)
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	2b00      	cmp	r3, #0
 800443c:	d105      	bne.n	800444a <SUBGHZSPI_Receive+0x7a>
    {
      status = HAL_ERROR;
 800443e:	2301      	movs	r3, #1
 8004440:	75fb      	strb	r3, [r7, #23]
      hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_TIMEOUT;
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	2201      	movs	r2, #1
 8004446:	609a      	str	r2, [r3, #8]
      break;
 8004448:	e008      	b.n	800445c <SUBGHZSPI_Receive+0x8c>
    }
    count--;
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	3b01      	subs	r3, #1
 800444e:	60fb      	str	r3, [r7, #12]
  } while (READ_BIT(SUBGHZSPI->SR, SPI_SR_RXNE) != (SPI_SR_RXNE));
 8004450:	4b09      	ldr	r3, [pc, #36]	; (8004478 <SUBGHZSPI_Receive+0xa8>)
 8004452:	689b      	ldr	r3, [r3, #8]
 8004454:	f003 0301 	and.w	r3, r3, #1
 8004458:	2b01      	cmp	r3, #1
 800445a:	d1ed      	bne.n	8004438 <SUBGHZSPI_Receive+0x68>

  /* Retrieve pData */
  *pData = (uint8_t)(READ_REG(SUBGHZSPI->DR));
 800445c:	4b06      	ldr	r3, [pc, #24]	; (8004478 <SUBGHZSPI_Receive+0xa8>)
 800445e:	68db      	ldr	r3, [r3, #12]
 8004460:	b2da      	uxtb	r2, r3
 8004462:	683b      	ldr	r3, [r7, #0]
 8004464:	701a      	strb	r2, [r3, #0]

  return status;
 8004466:	7dfb      	ldrb	r3, [r7, #23]
}
 8004468:	4618      	mov	r0, r3
 800446a:	371c      	adds	r7, #28
 800446c:	46bd      	mov	sp, r7
 800446e:	bc80      	pop	{r7}
 8004470:	4770      	bx	lr
 8004472:	bf00      	nop
 8004474:	20000004 	.word	0x20000004
 8004478:	58010000 	.word	0x58010000
 800447c:	5801000c 	.word	0x5801000c

08004480 <SUBGHZ_CheckDeviceReady>:
  * @param  hsubghz pointer to a SUBGHZ_HandleTypeDef structure that contains
  *         the handle information for SUBGHZ module.
  * @retval HAL status
  */
HAL_StatusTypeDef SUBGHZ_CheckDeviceReady(SUBGHZ_HandleTypeDef *hsubghz)
{
 8004480:	b580      	push	{r7, lr}
 8004482:	b084      	sub	sp, #16
 8004484:	af00      	add	r7, sp, #0
 8004486:	6078      	str	r0, [r7, #4]
  __IO uint32_t count;

  /* Wakeup radio in case of sleep mode: Select-Unselect radio */
  if (hsubghz->DeepSleep == SUBGHZ_DEEP_SLEEP_ENABLE)
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	791b      	ldrb	r3, [r3, #4]
 800448c:	2b01      	cmp	r3, #1
 800448e:	d111      	bne.n	80044b4 <SUBGHZ_CheckDeviceReady+0x34>
  {
    /* Initialize NSS switch Delay */
    count  = SUBGHZ_NSS_LOOP_TIME;
 8004490:	4b0c      	ldr	r3, [pc, #48]	; (80044c4 <SUBGHZ_CheckDeviceReady+0x44>)
 8004492:	681a      	ldr	r2, [r3, #0]
 8004494:	4613      	mov	r3, r2
 8004496:	005b      	lsls	r3, r3, #1
 8004498:	4413      	add	r3, r2
 800449a:	00db      	lsls	r3, r3, #3
 800449c:	0c1b      	lsrs	r3, r3, #16
 800449e:	60fb      	str	r3, [r7, #12]

    /* NSS = 0; */
    LL_PWR_SelectSUBGHZSPI_NSS();
 80044a0:	f7ff fc1e 	bl	8003ce0 <LL_PWR_SelectSUBGHZSPI_NSS>

    /* Wait Radio wakeup */
    do
    {
      count--;
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	3b01      	subs	r3, #1
 80044a8:	60fb      	str	r3, [r7, #12]
    } while (count != 0UL);
 80044aa:	68fb      	ldr	r3, [r7, #12]
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d1f9      	bne.n	80044a4 <SUBGHZ_CheckDeviceReady+0x24>

    /* NSS = 1 */
    LL_PWR_UnselectSUBGHZSPI_NSS();
 80044b0:	f7ff fc06 	bl	8003cc0 <LL_PWR_UnselectSUBGHZSPI_NSS>
  }
  return (SUBGHZ_WaitOnBusy(hsubghz));
 80044b4:	6878      	ldr	r0, [r7, #4]
 80044b6:	f000 f807 	bl	80044c8 <SUBGHZ_WaitOnBusy>
 80044ba:	4603      	mov	r3, r0
}
 80044bc:	4618      	mov	r0, r3
 80044be:	3710      	adds	r7, #16
 80044c0:	46bd      	mov	sp, r7
 80044c2:	bd80      	pop	{r7, pc}
 80044c4:	20000004 	.word	0x20000004

080044c8 <SUBGHZ_WaitOnBusy>:
  * @param  hsubghz pointer to a SUBGHZ_HandleTypeDef structure that contains
  *         the handle information for SUBGHZ module.
  * @retval HAL status
  */
HAL_StatusTypeDef SUBGHZ_WaitOnBusy(SUBGHZ_HandleTypeDef *hsubghz)
{
 80044c8:	b580      	push	{r7, lr}
 80044ca:	b086      	sub	sp, #24
 80044cc:	af00      	add	r7, sp, #0
 80044ce:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  __IO uint32_t count;
  uint32_t mask;

  status = HAL_OK;
 80044d0:	2300      	movs	r3, #0
 80044d2:	75fb      	strb	r3, [r7, #23]
  count  = SUBGHZ_DEFAULT_TIMEOUT * SUBGHZ_RFBUSY_LOOP_TIME;
 80044d4:	4b12      	ldr	r3, [pc, #72]	; (8004520 <SUBGHZ_WaitOnBusy+0x58>)
 80044d6:	681a      	ldr	r2, [r3, #0]
 80044d8:	4613      	mov	r3, r2
 80044da:	005b      	lsls	r3, r3, #1
 80044dc:	4413      	add	r3, r2
 80044de:	00db      	lsls	r3, r3, #3
 80044e0:	0d1b      	lsrs	r3, r3, #20
 80044e2:	2264      	movs	r2, #100	; 0x64
 80044e4:	fb02 f303 	mul.w	r3, r2, r3
 80044e8:	60fb      	str	r3, [r7, #12]

  /* Wait until Busy signal is set */
  do
  {
    mask = LL_PWR_IsActiveFlag_RFBUSYMS();
 80044ea:	f7ff fc27 	bl	8003d3c <LL_PWR_IsActiveFlag_RFBUSYMS>
 80044ee:	6138      	str	r0, [r7, #16]

    if (count == 0U)
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	d105      	bne.n	8004502 <SUBGHZ_WaitOnBusy+0x3a>
    {
      status  = HAL_ERROR;
 80044f6:	2301      	movs	r3, #1
 80044f8:	75fb      	strb	r3, [r7, #23]
      hsubghz->ErrorCode = HAL_SUBGHZ_ERROR_RF_BUSY;
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	2202      	movs	r2, #2
 80044fe:	609a      	str	r2, [r3, #8]
      break;
 8004500:	e009      	b.n	8004516 <SUBGHZ_WaitOnBusy+0x4e>
    }
    count--;
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	3b01      	subs	r3, #1
 8004506:	60fb      	str	r3, [r7, #12]
  } while ((LL_PWR_IsActiveFlag_RFBUSYS()& mask) == 1UL);
 8004508:	f7ff fc06 	bl	8003d18 <LL_PWR_IsActiveFlag_RFBUSYS>
 800450c:	4602      	mov	r2, r0
 800450e:	693b      	ldr	r3, [r7, #16]
 8004510:	4013      	ands	r3, r2
 8004512:	2b01      	cmp	r3, #1
 8004514:	d0e9      	beq.n	80044ea <SUBGHZ_WaitOnBusy+0x22>

  return status;
 8004516:	7dfb      	ldrb	r3, [r7, #23]
}
 8004518:	4618      	mov	r0, r3
 800451a:	3718      	adds	r7, #24
 800451c:	46bd      	mov	sp, r7
 800451e:	bd80      	pop	{r7, pc}
 8004520:	20000004 	.word	0x20000004

08004524 <LL_GPIO_SetPinMode>:
{
 8004524:	b480      	push	{r7}
 8004526:	b08b      	sub	sp, #44	; 0x2c
 8004528:	af00      	add	r7, sp, #0
 800452a:	60f8      	str	r0, [r7, #12]
 800452c:	60b9      	str	r1, [r7, #8]
 800452e:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(Pin) * 2U)));
 8004530:	68fb      	ldr	r3, [r7, #12]
 8004532:	681a      	ldr	r2, [r3, #0]
 8004534:	68bb      	ldr	r3, [r7, #8]
 8004536:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004538:	697b      	ldr	r3, [r7, #20]
 800453a:	fa93 f3a3 	rbit	r3, r3
 800453e:	613b      	str	r3, [r7, #16]
  return result;
 8004540:	693b      	ldr	r3, [r7, #16]
 8004542:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8004544:	69bb      	ldr	r3, [r7, #24]
 8004546:	2b00      	cmp	r3, #0
 8004548:	d101      	bne.n	800454e <LL_GPIO_SetPinMode+0x2a>
    return 32U;
 800454a:	2320      	movs	r3, #32
 800454c:	e003      	b.n	8004556 <LL_GPIO_SetPinMode+0x32>
  return __builtin_clz(value);
 800454e:	69bb      	ldr	r3, [r7, #24]
 8004550:	fab3 f383 	clz	r3, r3
 8004554:	b2db      	uxtb	r3, r3
 8004556:	005b      	lsls	r3, r3, #1
 8004558:	2103      	movs	r1, #3
 800455a:	fa01 f303 	lsl.w	r3, r1, r3
 800455e:	43db      	mvns	r3, r3
 8004560:	401a      	ands	r2, r3
 8004562:	68bb      	ldr	r3, [r7, #8]
 8004564:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004566:	6a3b      	ldr	r3, [r7, #32]
 8004568:	fa93 f3a3 	rbit	r3, r3
 800456c:	61fb      	str	r3, [r7, #28]
  return result;
 800456e:	69fb      	ldr	r3, [r7, #28]
 8004570:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8004572:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004574:	2b00      	cmp	r3, #0
 8004576:	d101      	bne.n	800457c <LL_GPIO_SetPinMode+0x58>
    return 32U;
 8004578:	2320      	movs	r3, #32
 800457a:	e003      	b.n	8004584 <LL_GPIO_SetPinMode+0x60>
  return __builtin_clz(value);
 800457c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800457e:	fab3 f383 	clz	r3, r3
 8004582:	b2db      	uxtb	r3, r3
 8004584:	005b      	lsls	r3, r3, #1
 8004586:	6879      	ldr	r1, [r7, #4]
 8004588:	fa01 f303 	lsl.w	r3, r1, r3
 800458c:	431a      	orrs	r2, r3
 800458e:	68fb      	ldr	r3, [r7, #12]
 8004590:	601a      	str	r2, [r3, #0]
}
 8004592:	bf00      	nop
 8004594:	372c      	adds	r7, #44	; 0x2c
 8004596:	46bd      	mov	sp, r7
 8004598:	bc80      	pop	{r7}
 800459a:	4770      	bx	lr

0800459c <LL_GPIO_SetPinOutputType>:
{
 800459c:	b480      	push	{r7}
 800459e:	b085      	sub	sp, #20
 80045a0:	af00      	add	r7, sp, #0
 80045a2:	60f8      	str	r0, [r7, #12]
 80045a4:	60b9      	str	r1, [r7, #8]
 80045a6:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 80045a8:	68fb      	ldr	r3, [r7, #12]
 80045aa:	685a      	ldr	r2, [r3, #4]
 80045ac:	68bb      	ldr	r3, [r7, #8]
 80045ae:	43db      	mvns	r3, r3
 80045b0:	401a      	ands	r2, r3
 80045b2:	68bb      	ldr	r3, [r7, #8]
 80045b4:	6879      	ldr	r1, [r7, #4]
 80045b6:	fb01 f303 	mul.w	r3, r1, r3
 80045ba:	431a      	orrs	r2, r3
 80045bc:	68fb      	ldr	r3, [r7, #12]
 80045be:	605a      	str	r2, [r3, #4]
}
 80045c0:	bf00      	nop
 80045c2:	3714      	adds	r7, #20
 80045c4:	46bd      	mov	sp, r7
 80045c6:	bc80      	pop	{r7}
 80045c8:	4770      	bx	lr

080045ca <LL_GPIO_SetPinSpeed>:
{
 80045ca:	b480      	push	{r7}
 80045cc:	b08b      	sub	sp, #44	; 0x2c
 80045ce:	af00      	add	r7, sp, #0
 80045d0:	60f8      	str	r0, [r7, #12]
 80045d2:	60b9      	str	r1, [r7, #8]
 80045d4:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 80045d6:	68fb      	ldr	r3, [r7, #12]
 80045d8:	689a      	ldr	r2, [r3, #8]
 80045da:	68bb      	ldr	r3, [r7, #8]
 80045dc:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80045de:	697b      	ldr	r3, [r7, #20]
 80045e0:	fa93 f3a3 	rbit	r3, r3
 80045e4:	613b      	str	r3, [r7, #16]
  return result;
 80045e6:	693b      	ldr	r3, [r7, #16]
 80045e8:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80045ea:	69bb      	ldr	r3, [r7, #24]
 80045ec:	2b00      	cmp	r3, #0
 80045ee:	d101      	bne.n	80045f4 <LL_GPIO_SetPinSpeed+0x2a>
    return 32U;
 80045f0:	2320      	movs	r3, #32
 80045f2:	e003      	b.n	80045fc <LL_GPIO_SetPinSpeed+0x32>
  return __builtin_clz(value);
 80045f4:	69bb      	ldr	r3, [r7, #24]
 80045f6:	fab3 f383 	clz	r3, r3
 80045fa:	b2db      	uxtb	r3, r3
 80045fc:	005b      	lsls	r3, r3, #1
 80045fe:	2103      	movs	r1, #3
 8004600:	fa01 f303 	lsl.w	r3, r1, r3
 8004604:	43db      	mvns	r3, r3
 8004606:	401a      	ands	r2, r3
 8004608:	68bb      	ldr	r3, [r7, #8]
 800460a:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800460c:	6a3b      	ldr	r3, [r7, #32]
 800460e:	fa93 f3a3 	rbit	r3, r3
 8004612:	61fb      	str	r3, [r7, #28]
  return result;
 8004614:	69fb      	ldr	r3, [r7, #28]
 8004616:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8004618:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800461a:	2b00      	cmp	r3, #0
 800461c:	d101      	bne.n	8004622 <LL_GPIO_SetPinSpeed+0x58>
    return 32U;
 800461e:	2320      	movs	r3, #32
 8004620:	e003      	b.n	800462a <LL_GPIO_SetPinSpeed+0x60>
  return __builtin_clz(value);
 8004622:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004624:	fab3 f383 	clz	r3, r3
 8004628:	b2db      	uxtb	r3, r3
 800462a:	005b      	lsls	r3, r3, #1
 800462c:	6879      	ldr	r1, [r7, #4]
 800462e:	fa01 f303 	lsl.w	r3, r1, r3
 8004632:	431a      	orrs	r2, r3
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	609a      	str	r2, [r3, #8]
}
 8004638:	bf00      	nop
 800463a:	372c      	adds	r7, #44	; 0x2c
 800463c:	46bd      	mov	sp, r7
 800463e:	bc80      	pop	{r7}
 8004640:	4770      	bx	lr

08004642 <LL_GPIO_SetPinPull>:
{
 8004642:	b480      	push	{r7}
 8004644:	b08b      	sub	sp, #44	; 0x2c
 8004646:	af00      	add	r7, sp, #0
 8004648:	60f8      	str	r0, [r7, #12]
 800464a:	60b9      	str	r1, [r7, #8]
 800464c:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(Pin) * 2U)));
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	68da      	ldr	r2, [r3, #12]
 8004652:	68bb      	ldr	r3, [r7, #8]
 8004654:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004656:	697b      	ldr	r3, [r7, #20]
 8004658:	fa93 f3a3 	rbit	r3, r3
 800465c:	613b      	str	r3, [r7, #16]
  return result;
 800465e:	693b      	ldr	r3, [r7, #16]
 8004660:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8004662:	69bb      	ldr	r3, [r7, #24]
 8004664:	2b00      	cmp	r3, #0
 8004666:	d101      	bne.n	800466c <LL_GPIO_SetPinPull+0x2a>
    return 32U;
 8004668:	2320      	movs	r3, #32
 800466a:	e003      	b.n	8004674 <LL_GPIO_SetPinPull+0x32>
  return __builtin_clz(value);
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	fab3 f383 	clz	r3, r3
 8004672:	b2db      	uxtb	r3, r3
 8004674:	005b      	lsls	r3, r3, #1
 8004676:	2103      	movs	r1, #3
 8004678:	fa01 f303 	lsl.w	r3, r1, r3
 800467c:	43db      	mvns	r3, r3
 800467e:	401a      	ands	r2, r3
 8004680:	68bb      	ldr	r3, [r7, #8]
 8004682:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004684:	6a3b      	ldr	r3, [r7, #32]
 8004686:	fa93 f3a3 	rbit	r3, r3
 800468a:	61fb      	str	r3, [r7, #28]
  return result;
 800468c:	69fb      	ldr	r3, [r7, #28]
 800468e:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8004690:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004692:	2b00      	cmp	r3, #0
 8004694:	d101      	bne.n	800469a <LL_GPIO_SetPinPull+0x58>
    return 32U;
 8004696:	2320      	movs	r3, #32
 8004698:	e003      	b.n	80046a2 <LL_GPIO_SetPinPull+0x60>
  return __builtin_clz(value);
 800469a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800469c:	fab3 f383 	clz	r3, r3
 80046a0:	b2db      	uxtb	r3, r3
 80046a2:	005b      	lsls	r3, r3, #1
 80046a4:	6879      	ldr	r1, [r7, #4]
 80046a6:	fa01 f303 	lsl.w	r3, r1, r3
 80046aa:	431a      	orrs	r2, r3
 80046ac:	68fb      	ldr	r3, [r7, #12]
 80046ae:	60da      	str	r2, [r3, #12]
}
 80046b0:	bf00      	nop
 80046b2:	372c      	adds	r7, #44	; 0x2c
 80046b4:	46bd      	mov	sp, r7
 80046b6:	bc80      	pop	{r7}
 80046b8:	4770      	bx	lr

080046ba <LL_GPIO_SetAFPin_0_7>:
{
 80046ba:	b480      	push	{r7}
 80046bc:	b08b      	sub	sp, #44	; 0x2c
 80046be:	af00      	add	r7, sp, #0
 80046c0:	60f8      	str	r0, [r7, #12]
 80046c2:	60b9      	str	r1, [r7, #8]
 80046c4:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	6a1a      	ldr	r2, [r3, #32]
 80046ca:	68bb      	ldr	r3, [r7, #8]
 80046cc:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80046ce:	697b      	ldr	r3, [r7, #20]
 80046d0:	fa93 f3a3 	rbit	r3, r3
 80046d4:	613b      	str	r3, [r7, #16]
  return result;
 80046d6:	693b      	ldr	r3, [r7, #16]
 80046d8:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 80046da:	69bb      	ldr	r3, [r7, #24]
 80046dc:	2b00      	cmp	r3, #0
 80046de:	d101      	bne.n	80046e4 <LL_GPIO_SetAFPin_0_7+0x2a>
    return 32U;
 80046e0:	2320      	movs	r3, #32
 80046e2:	e003      	b.n	80046ec <LL_GPIO_SetAFPin_0_7+0x32>
  return __builtin_clz(value);
 80046e4:	69bb      	ldr	r3, [r7, #24]
 80046e6:	fab3 f383 	clz	r3, r3
 80046ea:	b2db      	uxtb	r3, r3
 80046ec:	009b      	lsls	r3, r3, #2
 80046ee:	210f      	movs	r1, #15
 80046f0:	fa01 f303 	lsl.w	r3, r1, r3
 80046f4:	43db      	mvns	r3, r3
 80046f6:	401a      	ands	r2, r3
 80046f8:	68bb      	ldr	r3, [r7, #8]
 80046fa:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80046fc:	6a3b      	ldr	r3, [r7, #32]
 80046fe:	fa93 f3a3 	rbit	r3, r3
 8004702:	61fb      	str	r3, [r7, #28]
  return result;
 8004704:	69fb      	ldr	r3, [r7, #28]
 8004706:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8004708:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800470a:	2b00      	cmp	r3, #0
 800470c:	d101      	bne.n	8004712 <LL_GPIO_SetAFPin_0_7+0x58>
    return 32U;
 800470e:	2320      	movs	r3, #32
 8004710:	e003      	b.n	800471a <LL_GPIO_SetAFPin_0_7+0x60>
  return __builtin_clz(value);
 8004712:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004714:	fab3 f383 	clz	r3, r3
 8004718:	b2db      	uxtb	r3, r3
 800471a:	009b      	lsls	r3, r3, #2
 800471c:	6879      	ldr	r1, [r7, #4]
 800471e:	fa01 f303 	lsl.w	r3, r1, r3
 8004722:	431a      	orrs	r2, r3
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	621a      	str	r2, [r3, #32]
}
 8004728:	bf00      	nop
 800472a:	372c      	adds	r7, #44	; 0x2c
 800472c:	46bd      	mov	sp, r7
 800472e:	bc80      	pop	{r7}
 8004730:	4770      	bx	lr

08004732 <LL_GPIO_SetAFPin_8_15>:
{
 8004732:	b480      	push	{r7}
 8004734:	b08b      	sub	sp, #44	; 0x2c
 8004736:	af00      	add	r7, sp, #0
 8004738:	60f8      	str	r0, [r7, #12]
 800473a:	60b9      	str	r1, [r7, #8]
 800473c:	607a      	str	r2, [r7, #4]
  MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004742:	68bb      	ldr	r3, [r7, #8]
 8004744:	0a1b      	lsrs	r3, r3, #8
 8004746:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004748:	697b      	ldr	r3, [r7, #20]
 800474a:	fa93 f3a3 	rbit	r3, r3
 800474e:	613b      	str	r3, [r7, #16]
  return result;
 8004750:	693b      	ldr	r3, [r7, #16]
 8004752:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8004754:	69bb      	ldr	r3, [r7, #24]
 8004756:	2b00      	cmp	r3, #0
 8004758:	d101      	bne.n	800475e <LL_GPIO_SetAFPin_8_15+0x2c>
    return 32U;
 800475a:	2320      	movs	r3, #32
 800475c:	e003      	b.n	8004766 <LL_GPIO_SetAFPin_8_15+0x34>
  return __builtin_clz(value);
 800475e:	69bb      	ldr	r3, [r7, #24]
 8004760:	fab3 f383 	clz	r3, r3
 8004764:	b2db      	uxtb	r3, r3
 8004766:	009b      	lsls	r3, r3, #2
 8004768:	210f      	movs	r1, #15
 800476a:	fa01 f303 	lsl.w	r3, r1, r3
 800476e:	43db      	mvns	r3, r3
 8004770:	401a      	ands	r2, r3
 8004772:	68bb      	ldr	r3, [r7, #8]
 8004774:	0a1b      	lsrs	r3, r3, #8
 8004776:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004778:	6a3b      	ldr	r3, [r7, #32]
 800477a:	fa93 f3a3 	rbit	r3, r3
 800477e:	61fb      	str	r3, [r7, #28]
  return result;
 8004780:	69fb      	ldr	r3, [r7, #28]
 8004782:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8004784:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004786:	2b00      	cmp	r3, #0
 8004788:	d101      	bne.n	800478e <LL_GPIO_SetAFPin_8_15+0x5c>
    return 32U;
 800478a:	2320      	movs	r3, #32
 800478c:	e003      	b.n	8004796 <LL_GPIO_SetAFPin_8_15+0x64>
  return __builtin_clz(value);
 800478e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004790:	fab3 f383 	clz	r3, r3
 8004794:	b2db      	uxtb	r3, r3
 8004796:	009b      	lsls	r3, r3, #2
 8004798:	6879      	ldr	r1, [r7, #4]
 800479a:	fa01 f303 	lsl.w	r3, r1, r3
 800479e:	431a      	orrs	r2, r3
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	625a      	str	r2, [r3, #36]	; 0x24
}
 80047a4:	bf00      	nop
 80047a6:	372c      	adds	r7, #44	; 0x2c
 80047a8:	46bd      	mov	sp, r7
 80047aa:	bc80      	pop	{r7}
 80047ac:	4770      	bx	lr

080047ae <LL_GPIO_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: GPIO registers are initialized according to GPIO_InitStruct content
  *          - ERROR:   Not applicable
  */
ErrorStatus LL_GPIO_Init(GPIO_TypeDef *GPIOx, LL_GPIO_InitTypeDef *GPIO_InitStruct)
{
 80047ae:	b580      	push	{r7, lr}
 80047b0:	b088      	sub	sp, #32
 80047b2:	af00      	add	r7, sp, #0
 80047b4:	6078      	str	r0, [r7, #4]
 80047b6:	6039      	str	r1, [r7, #0]
  /* ------------------------- Configure the port pins ---------------- */
  /* Initialize  pinpos on first pin set */
#if defined(CORE_CM0PLUS)
  pinpos = 0;
#else
  pinpos = POSITION_VAL(GPIO_InitStruct->Pin);
 80047b8:	683b      	ldr	r3, [r7, #0]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	613b      	str	r3, [r7, #16]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80047be:	693b      	ldr	r3, [r7, #16]
 80047c0:	fa93 f3a3 	rbit	r3, r3
 80047c4:	60fb      	str	r3, [r7, #12]
  return result;
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	617b      	str	r3, [r7, #20]
  if (value == 0U)
 80047ca:	697b      	ldr	r3, [r7, #20]
 80047cc:	2b00      	cmp	r3, #0
 80047ce:	d101      	bne.n	80047d4 <LL_GPIO_Init+0x26>
    return 32U;
 80047d0:	2320      	movs	r3, #32
 80047d2:	e003      	b.n	80047dc <LL_GPIO_Init+0x2e>
  return __builtin_clz(value);
 80047d4:	697b      	ldr	r3, [r7, #20]
 80047d6:	fab3 f383 	clz	r3, r3
 80047da:	b2db      	uxtb	r3, r3
 80047dc:	61fb      	str	r3, [r7, #28]
#endif /* CORE_CM0PLUS */

  /* Configure the port pins */
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00u)
 80047de:	e04e      	b.n	800487e <LL_GPIO_Init+0xd0>
  {
    /* Get current io position */
    currentpin = (GPIO_InitStruct->Pin) & (0x00000001uL << pinpos);
 80047e0:	683b      	ldr	r3, [r7, #0]
 80047e2:	681a      	ldr	r2, [r3, #0]
 80047e4:	2101      	movs	r1, #1
 80047e6:	69fb      	ldr	r3, [r7, #28]
 80047e8:	fa01 f303 	lsl.w	r3, r1, r3
 80047ec:	4013      	ands	r3, r2
 80047ee:	61bb      	str	r3, [r7, #24]

    if (currentpin != 0x00u)
 80047f0:	69bb      	ldr	r3, [r7, #24]
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d040      	beq.n	8004878 <LL_GPIO_Init+0xca>
    {
      /* Pin Mode configuration */
      LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
 80047f6:	683b      	ldr	r3, [r7, #0]
 80047f8:	685b      	ldr	r3, [r3, #4]
 80047fa:	461a      	mov	r2, r3
 80047fc:	69b9      	ldr	r1, [r7, #24]
 80047fe:	6878      	ldr	r0, [r7, #4]
 8004800:	f7ff fe90 	bl	8004524 <LL_GPIO_SetPinMode>

      if ((GPIO_InitStruct->Mode == LL_GPIO_MODE_OUTPUT) || (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE))
 8004804:	683b      	ldr	r3, [r7, #0]
 8004806:	685b      	ldr	r3, [r3, #4]
 8004808:	2b01      	cmp	r3, #1
 800480a:	d003      	beq.n	8004814 <LL_GPIO_Init+0x66>
 800480c:	683b      	ldr	r3, [r7, #0]
 800480e:	685b      	ldr	r3, [r3, #4]
 8004810:	2b02      	cmp	r3, #2
 8004812:	d10d      	bne.n	8004830 <LL_GPIO_Init+0x82>
      {
        /* Check Speed mode parameters */
        assert_param(IS_LL_GPIO_SPEED(GPIO_InitStruct->Speed));

        /* Speed mode configuration */
        LL_GPIO_SetPinSpeed(GPIOx, currentpin, GPIO_InitStruct->Speed);
 8004814:	683b      	ldr	r3, [r7, #0]
 8004816:	689b      	ldr	r3, [r3, #8]
 8004818:	461a      	mov	r2, r3
 800481a:	69b9      	ldr	r1, [r7, #24]
 800481c:	6878      	ldr	r0, [r7, #4]
 800481e:	f7ff fed4 	bl	80045ca <LL_GPIO_SetPinSpeed>

        /* Check Output mode parameters */
        assert_param(IS_LL_GPIO_OUTPUT_TYPE(GPIO_InitStruct->OutputType));

        /* Output mode configuration*/
        LL_GPIO_SetPinOutputType(GPIOx, currentpin, GPIO_InitStruct->OutputType);
 8004822:	683b      	ldr	r3, [r7, #0]
 8004824:	68db      	ldr	r3, [r3, #12]
 8004826:	461a      	mov	r2, r3
 8004828:	69b9      	ldr	r1, [r7, #24]
 800482a:	6878      	ldr	r0, [r7, #4]
 800482c:	f7ff feb6 	bl	800459c <LL_GPIO_SetPinOutputType>
      }

      /* Pull-up Pull down resistor configuration*/
      LL_GPIO_SetPinPull(GPIOx, currentpin, GPIO_InitStruct->Pull);
 8004830:	683b      	ldr	r3, [r7, #0]
 8004832:	691b      	ldr	r3, [r3, #16]
 8004834:	461a      	mov	r2, r3
 8004836:	69b9      	ldr	r1, [r7, #24]
 8004838:	6878      	ldr	r0, [r7, #4]
 800483a:	f7ff ff02 	bl	8004642 <LL_GPIO_SetPinPull>

      if (GPIO_InitStruct->Mode == LL_GPIO_MODE_ALTERNATE)
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	685b      	ldr	r3, [r3, #4]
 8004842:	2b02      	cmp	r3, #2
 8004844:	d111      	bne.n	800486a <LL_GPIO_Init+0xbc>
      {
        /* Check Alternate parameter */
        assert_param(IS_LL_GPIO_ALTERNATE(GPIO_InitStruct->Alternate));

        /* Alternate function configuration mode configuration */
        if (currentpin < LL_GPIO_PIN_8)
 8004846:	69bb      	ldr	r3, [r7, #24]
 8004848:	2bff      	cmp	r3, #255	; 0xff
 800484a:	d807      	bhi.n	800485c <LL_GPIO_Init+0xae>
        {
          LL_GPIO_SetAFPin_0_7(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 800484c:	683b      	ldr	r3, [r7, #0]
 800484e:	695b      	ldr	r3, [r3, #20]
 8004850:	461a      	mov	r2, r3
 8004852:	69b9      	ldr	r1, [r7, #24]
 8004854:	6878      	ldr	r0, [r7, #4]
 8004856:	f7ff ff30 	bl	80046ba <LL_GPIO_SetAFPin_0_7>
 800485a:	e006      	b.n	800486a <LL_GPIO_Init+0xbc>
        }
        else
        {
          LL_GPIO_SetAFPin_8_15(GPIOx, currentpin, GPIO_InitStruct->Alternate);
 800485c:	683b      	ldr	r3, [r7, #0]
 800485e:	695b      	ldr	r3, [r3, #20]
 8004860:	461a      	mov	r2, r3
 8004862:	69b9      	ldr	r1, [r7, #24]
 8004864:	6878      	ldr	r0, [r7, #4]
 8004866:	f7ff ff64 	bl	8004732 <LL_GPIO_SetAFPin_8_15>
        }
      }

      /* Pin Mode configuration */
      LL_GPIO_SetPinMode(GPIOx, currentpin, GPIO_InitStruct->Mode);
 800486a:	683b      	ldr	r3, [r7, #0]
 800486c:	685b      	ldr	r3, [r3, #4]
 800486e:	461a      	mov	r2, r3
 8004870:	69b9      	ldr	r1, [r7, #24]
 8004872:	6878      	ldr	r0, [r7, #4]
 8004874:	f7ff fe56 	bl	8004524 <LL_GPIO_SetPinMode>
    }
    pinpos++;
 8004878:	69fb      	ldr	r3, [r7, #28]
 800487a:	3301      	adds	r3, #1
 800487c:	61fb      	str	r3, [r7, #28]
  while (((GPIO_InitStruct->Pin) >> pinpos) != 0x00u)
 800487e:	683b      	ldr	r3, [r7, #0]
 8004880:	681a      	ldr	r2, [r3, #0]
 8004882:	69fb      	ldr	r3, [r7, #28]
 8004884:	fa22 f303 	lsr.w	r3, r2, r3
 8004888:	2b00      	cmp	r3, #0
 800488a:	d1a9      	bne.n	80047e0 <LL_GPIO_Init+0x32>
  }

  return (SUCCESS);
 800488c:	2301      	movs	r3, #1
}
 800488e:	4618      	mov	r0, r3
 8004890:	3720      	adds	r7, #32
 8004892:	46bd      	mov	sp, r7
 8004894:	bd80      	pop	{r7, pc}

08004896 <LL_LPUART_IsEnabled>:
{
 8004896:	b480      	push	{r7}
 8004898:	b083      	sub	sp, #12
 800489a:	af00      	add	r7, sp, #0
 800489c:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(LPUARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f003 0301 	and.w	r3, r3, #1
 80048a6:	2b01      	cmp	r3, #1
 80048a8:	d101      	bne.n	80048ae <LL_LPUART_IsEnabled+0x18>
 80048aa:	2301      	movs	r3, #1
 80048ac:	e000      	b.n	80048b0 <LL_LPUART_IsEnabled+0x1a>
 80048ae:	2300      	movs	r3, #0
}
 80048b0:	4618      	mov	r0, r3
 80048b2:	370c      	adds	r7, #12
 80048b4:	46bd      	mov	sp, r7
 80048b6:	bc80      	pop	{r7}
 80048b8:	4770      	bx	lr

080048ba <LL_LPUART_SetPrescaler>:
{
 80048ba:	b480      	push	{r7}
 80048bc:	b083      	sub	sp, #12
 80048be:	af00      	add	r7, sp, #0
 80048c0:	6078      	str	r0, [r7, #4]
 80048c2:	6039      	str	r1, [r7, #0]
  MODIFY_REG(LPUARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80048c8:	f023 030f 	bic.w	r3, r3, #15
 80048cc:	683a      	ldr	r2, [r7, #0]
 80048ce:	b292      	uxth	r2, r2
 80048d0:	431a      	orrs	r2, r3
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	62da      	str	r2, [r3, #44]	; 0x2c
}
 80048d6:	bf00      	nop
 80048d8:	370c      	adds	r7, #12
 80048da:	46bd      	mov	sp, r7
 80048dc:	bc80      	pop	{r7}
 80048de:	4770      	bx	lr

080048e0 <LL_LPUART_SetStopBitsLength>:
{
 80048e0:	b480      	push	{r7}
 80048e2:	b083      	sub	sp, #12
 80048e4:	af00      	add	r7, sp, #0
 80048e6:	6078      	str	r0, [r7, #4]
 80048e8:	6039      	str	r1, [r7, #0]
  MODIFY_REG(LPUARTx->CR2, USART_CR2_STOP, StopBits);
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	685b      	ldr	r3, [r3, #4]
 80048ee:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80048f2:	683b      	ldr	r3, [r7, #0]
 80048f4:	431a      	orrs	r2, r3
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	605a      	str	r2, [r3, #4]
}
 80048fa:	bf00      	nop
 80048fc:	370c      	adds	r7, #12
 80048fe:	46bd      	mov	sp, r7
 8004900:	bc80      	pop	{r7}
 8004902:	4770      	bx	lr

08004904 <LL_LPUART_SetHWFlowCtrl>:
{
 8004904:	b480      	push	{r7}
 8004906:	b083      	sub	sp, #12
 8004908:	af00      	add	r7, sp, #0
 800490a:	6078      	str	r0, [r7, #4]
 800490c:	6039      	str	r1, [r7, #0]
  MODIFY_REG(LPUARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	689b      	ldr	r3, [r3, #8]
 8004912:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004916:	683b      	ldr	r3, [r7, #0]
 8004918:	431a      	orrs	r2, r3
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	609a      	str	r2, [r3, #8]
}
 800491e:	bf00      	nop
 8004920:	370c      	adds	r7, #12
 8004922:	46bd      	mov	sp, r7
 8004924:	bc80      	pop	{r7}
 8004926:	4770      	bx	lr

08004928 <LL_LPUART_SetBaudRate>:
{
 8004928:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800492c:	b088      	sub	sp, #32
 800492e:	af00      	add	r7, sp, #0
 8004930:	61f8      	str	r0, [r7, #28]
 8004932:	61b9      	str	r1, [r7, #24]
 8004934:	617a      	str	r2, [r7, #20]
 8004936:	613b      	str	r3, [r7, #16]
  if (BaudRate != 0U)
 8004938:	693b      	ldr	r3, [r7, #16]
 800493a:	2b00      	cmp	r3, #0
 800493c:	d039      	beq.n	80049b2 <LL_LPUART_SetBaudRate+0x8a>
    LPUARTx->BRR = __LL_LPUART_DIV(PeriphClk, PrescalerValue, BaudRate);
 800493e:	69bb      	ldr	r3, [r7, #24]
 8004940:	2200      	movs	r2, #0
 8004942:	60bb      	str	r3, [r7, #8]
 8004944:	60fa      	str	r2, [r7, #12]
 8004946:	697b      	ldr	r3, [r7, #20]
 8004948:	b29b      	uxth	r3, r3
 800494a:	461a      	mov	r2, r3
 800494c:	4b1b      	ldr	r3, [pc, #108]	; (80049bc <LL_LPUART_SetBaudRate+0x94>)
 800494e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8004952:	b29b      	uxth	r3, r3
 8004954:	2200      	movs	r2, #0
 8004956:	603b      	str	r3, [r7, #0]
 8004958:	607a      	str	r2, [r7, #4]
 800495a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800495e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8004962:	f7fc f86b 	bl	8000a3c <__aeabi_uldivmod>
 8004966:	4602      	mov	r2, r0
 8004968:	460b      	mov	r3, r1
 800496a:	4610      	mov	r0, r2
 800496c:	4619      	mov	r1, r3
 800496e:	f04f 0200 	mov.w	r2, #0
 8004972:	f04f 0300 	mov.w	r3, #0
 8004976:	020b      	lsls	r3, r1, #8
 8004978:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800497c:	0202      	lsls	r2, r0, #8
 800497e:	6939      	ldr	r1, [r7, #16]
 8004980:	0849      	lsrs	r1, r1, #1
 8004982:	2000      	movs	r0, #0
 8004984:	460c      	mov	r4, r1
 8004986:	4605      	mov	r5, r0
 8004988:	eb12 0804 	adds.w	r8, r2, r4
 800498c:	eb43 0905 	adc.w	r9, r3, r5
 8004990:	693b      	ldr	r3, [r7, #16]
 8004992:	2200      	movs	r2, #0
 8004994:	469a      	mov	sl, r3
 8004996:	4693      	mov	fp, r2
 8004998:	4652      	mov	r2, sl
 800499a:	465b      	mov	r3, fp
 800499c:	4640      	mov	r0, r8
 800499e:	4649      	mov	r1, r9
 80049a0:	f7fc f84c 	bl	8000a3c <__aeabi_uldivmod>
 80049a4:	4602      	mov	r2, r0
 80049a6:	460b      	mov	r3, r1
 80049a8:	4613      	mov	r3, r2
 80049aa:	f3c3 0213 	ubfx	r2, r3, #0, #20
 80049ae:	69fb      	ldr	r3, [r7, #28]
 80049b0:	60da      	str	r2, [r3, #12]
}
 80049b2:	bf00      	nop
 80049b4:	3720      	adds	r7, #32
 80049b6:	46bd      	mov	sp, r7
 80049b8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80049bc:	08031688 	.word	0x08031688

080049c0 <LL_LPUART_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: LPUART registers are initialized according to LPUART_InitStruct content
  *          - ERROR: Problem occurred during LPUART Registers initialization
  */
ErrorStatus LL_LPUART_Init(USART_TypeDef *LPUARTx, const LL_LPUART_InitTypeDef *LPUART_InitStruct)
{
 80049c0:	b580      	push	{r7, lr}
 80049c2:	b084      	sub	sp, #16
 80049c4:	af00      	add	r7, sp, #0
 80049c6:	6078      	str	r0, [r7, #4]
 80049c8:	6039      	str	r1, [r7, #0]
  ErrorStatus status = ERROR;
 80049ca:	2300      	movs	r3, #0
 80049cc:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_LL_LPUART_DIRECTION(LPUART_InitStruct->TransferDirection));
  assert_param(IS_LL_LPUART_HWCONTROL(LPUART_InitStruct->HardwareFlowControl));

  /* LPUART needs to be in disabled state, in order to be able to configure some bits in
     CRx registers. Otherwise (LPUART not in Disabled state) => return ERROR */
  if (LL_LPUART_IsEnabled(LPUARTx) == 0U)
 80049ce:	6878      	ldr	r0, [r7, #4]
 80049d0:	f7ff ff61 	bl	8004896 <LL_LPUART_IsEnabled>
 80049d4:	4603      	mov	r3, r0
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d136      	bne.n	8004a48 <LL_LPUART_Init+0x88>
     * Configure LPUARTx CR1 (LPUART Word Length, Parity and Transfer Direction bits) with parameters:
     * - DataWidth:          USART_CR1_M bits according to LPUART_InitStruct->DataWidth value
     * - Parity:             USART_CR1_PCE, USART_CR1_PS bits according to LPUART_InitStruct->Parity value
     * - TransferDirection:  USART_CR1_TE, USART_CR1_RE bits according to LPUART_InitStruct->TransferDirection value
     */
    MODIFY_REG(LPUARTx->CR1,
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	681a      	ldr	r2, [r3, #0]
 80049de:	4b1d      	ldr	r3, [pc, #116]	; (8004a54 <LL_LPUART_Init+0x94>)
 80049e0:	4013      	ands	r3, r2
 80049e2:	683a      	ldr	r2, [r7, #0]
 80049e4:	6891      	ldr	r1, [r2, #8]
 80049e6:	683a      	ldr	r2, [r7, #0]
 80049e8:	6912      	ldr	r2, [r2, #16]
 80049ea:	4311      	orrs	r1, r2
 80049ec:	683a      	ldr	r2, [r7, #0]
 80049ee:	6952      	ldr	r2, [r2, #20]
 80049f0:	430a      	orrs	r2, r1
 80049f2:	431a      	orrs	r2, r3
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	601a      	str	r2, [r3, #0]

    /*---------------------------- LPUART CR2 Configuration -----------------------
     * Configure LPUARTx CR2 (Stop bits) with parameters:
     * - Stop Bits:          USART_CR2_STOP bits according to LPUART_InitStruct->StopBits value.
     */
    LL_LPUART_SetStopBitsLength(LPUARTx, LPUART_InitStruct->StopBits);
 80049f8:	683b      	ldr	r3, [r7, #0]
 80049fa:	68db      	ldr	r3, [r3, #12]
 80049fc:	4619      	mov	r1, r3
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f7ff ff6e 	bl	80048e0 <LL_LPUART_SetStopBitsLength>
    /*---------------------------- LPUART CR3 Configuration -----------------------
     * Configure LPUARTx CR3 (Hardware Flow Control) with parameters:
     * - HardwareFlowControl: USART_CR3_RTSE, USART_CR3_CTSE bits according
     *   to LPUART_InitStruct->HardwareFlowControl value.
     */
    LL_LPUART_SetHWFlowCtrl(LPUARTx, LPUART_InitStruct->HardwareFlowControl);
 8004a04:	683b      	ldr	r3, [r7, #0]
 8004a06:	699b      	ldr	r3, [r3, #24]
 8004a08:	4619      	mov	r1, r3
 8004a0a:	6878      	ldr	r0, [r7, #4]
 8004a0c:	f7ff ff7a 	bl	8004904 <LL_LPUART_SetHWFlowCtrl>

    /*---------------------------- LPUART BRR Configuration -----------------------
     * Retrieve Clock frequency used for LPUART Peripheral
     */
    periphclk = LL_RCC_GetLPUARTClockFreq(LL_RCC_LPUART1_CLKSOURCE);
 8004a10:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8004a14:	f000 f930 	bl	8004c78 <LL_RCC_GetLPUARTClockFreq>
 8004a18:	60b8      	str	r0, [r7, #8]
    /* Configure the LPUART Baud Rate :
       - prescaler value is required
       - valid baud rate value (different from 0) is required
       - Peripheral clock as returned by RCC service, should be valid (different from 0).
    */
    if ((periphclk != LL_RCC_PERIPH_FREQUENCY_NO)
 8004a1a:	68bb      	ldr	r3, [r7, #8]
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	d00d      	beq.n	8004a3c <LL_LPUART_Init+0x7c>
        && (LPUART_InitStruct->BaudRate != 0U))
 8004a20:	683b      	ldr	r3, [r7, #0]
 8004a22:	685b      	ldr	r3, [r3, #4]
 8004a24:	2b00      	cmp	r3, #0
 8004a26:	d009      	beq.n	8004a3c <LL_LPUART_Init+0x7c>
    {
      status = SUCCESS;
 8004a28:	2301      	movs	r3, #1
 8004a2a:	73fb      	strb	r3, [r7, #15]
      LL_LPUART_SetBaudRate(LPUARTx,
                            periphclk,
                            LPUART_InitStruct->PrescalerValue,
 8004a2c:	683b      	ldr	r3, [r7, #0]
 8004a2e:	681a      	ldr	r2, [r3, #0]
                            LPUART_InitStruct->BaudRate);
 8004a30:	683b      	ldr	r3, [r7, #0]
 8004a32:	685b      	ldr	r3, [r3, #4]
      LL_LPUART_SetBaudRate(LPUARTx,
 8004a34:	68b9      	ldr	r1, [r7, #8]
 8004a36:	6878      	ldr	r0, [r7, #4]
 8004a38:	f7ff ff76 	bl	8004928 <LL_LPUART_SetBaudRate>

    /*---------------------------- LPUART PRESC Configuration -----------------------
     * Configure LPUARTx PRESC (Prescaler) with parameters:
     * - PrescalerValue: LPUART_PRESC_PRESCALER bits according to LPUART_InitStruct->PrescalerValue value.
     */
    LL_LPUART_SetPrescaler(LPUARTx, LPUART_InitStruct->PrescalerValue);
 8004a3c:	683b      	ldr	r3, [r7, #0]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	4619      	mov	r1, r3
 8004a42:	6878      	ldr	r0, [r7, #4]
 8004a44:	f7ff ff39 	bl	80048ba <LL_LPUART_SetPrescaler>
  }

  return (status);
 8004a48:	7bfb      	ldrb	r3, [r7, #15]
}
 8004a4a:	4618      	mov	r0, r3
 8004a4c:	3710      	adds	r7, #16
 8004a4e:	46bd      	mov	sp, r7
 8004a50:	bd80      	pop	{r7, pc}
 8004a52:	bf00      	nop
 8004a54:	efffe9f3 	.word	0xefffe9f3

08004a58 <LL_RCC_HSE_IsEnabledDiv2>:
{
 8004a58:	b480      	push	{r7}
 8004a5a:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSEPRE) == (RCC_CR_HSEPRE)) ? 1UL : 0UL);
 8004a5c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004a66:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004a6a:	d101      	bne.n	8004a70 <LL_RCC_HSE_IsEnabledDiv2+0x18>
 8004a6c:	2301      	movs	r3, #1
 8004a6e:	e000      	b.n	8004a72 <LL_RCC_HSE_IsEnabledDiv2+0x1a>
 8004a70:	2300      	movs	r3, #0
}
 8004a72:	4618      	mov	r0, r3
 8004a74:	46bd      	mov	sp, r7
 8004a76:	bc80      	pop	{r7}
 8004a78:	4770      	bx	lr

08004a7a <LL_RCC_HSI_IsReady>:
{
 8004a7a:	b480      	push	{r7}
 8004a7c:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY)) ? 1UL : 0UL);
 8004a7e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004a88:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004a8c:	d101      	bne.n	8004a92 <LL_RCC_HSI_IsReady+0x18>
 8004a8e:	2301      	movs	r3, #1
 8004a90:	e000      	b.n	8004a94 <LL_RCC_HSI_IsReady+0x1a>
 8004a92:	2300      	movs	r3, #0
}
 8004a94:	4618      	mov	r0, r3
 8004a96:	46bd      	mov	sp, r7
 8004a98:	bc80      	pop	{r7}
 8004a9a:	4770      	bx	lr

08004a9c <LL_RCC_LSE_IsReady>:
{
 8004a9c:	b480      	push	{r7}
 8004a9e:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY)) ? 1UL : 0UL);
 8004aa0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004aa4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004aa8:	f003 0302 	and.w	r3, r3, #2
 8004aac:	2b02      	cmp	r3, #2
 8004aae:	d101      	bne.n	8004ab4 <LL_RCC_LSE_IsReady+0x18>
 8004ab0:	2301      	movs	r3, #1
 8004ab2:	e000      	b.n	8004ab6 <LL_RCC_LSE_IsReady+0x1a>
 8004ab4:	2300      	movs	r3, #0
}
 8004ab6:	4618      	mov	r0, r3
 8004ab8:	46bd      	mov	sp, r7
 8004aba:	bc80      	pop	{r7}
 8004abc:	4770      	bx	lr

08004abe <LL_RCC_MSI_IsEnabledRangeSelect>:
{
 8004abe:	b480      	push	{r7}
 8004ac0:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == (RCC_CR_MSIRGSEL)) ? 1UL : 0UL);
 8004ac2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	f003 0308 	and.w	r3, r3, #8
 8004acc:	2b08      	cmp	r3, #8
 8004ace:	d101      	bne.n	8004ad4 <LL_RCC_MSI_IsEnabledRangeSelect+0x16>
 8004ad0:	2301      	movs	r3, #1
 8004ad2:	e000      	b.n	8004ad6 <LL_RCC_MSI_IsEnabledRangeSelect+0x18>
 8004ad4:	2300      	movs	r3, #0
}
 8004ad6:	4618      	mov	r0, r3
 8004ad8:	46bd      	mov	sp, r7
 8004ada:	bc80      	pop	{r7}
 8004adc:	4770      	bx	lr

08004ade <LL_RCC_MSI_GetRange>:
{
 8004ade:	b480      	push	{r7}
 8004ae0:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_MSIRANGE));
 8004ae2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8004aec:	4618      	mov	r0, r3
 8004aee:	46bd      	mov	sp, r7
 8004af0:	bc80      	pop	{r7}
 8004af2:	4770      	bx	lr

08004af4 <LL_RCC_MSI_GetRangeAfterStandby>:
{
 8004af4:	b480      	push	{r7}
 8004af6:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE));
 8004af8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004afc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004b00:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
}
 8004b04:	4618      	mov	r0, r3
 8004b06:	46bd      	mov	sp, r7
 8004b08:	bc80      	pop	{r7}
 8004b0a:	4770      	bx	lr

08004b0c <LL_RCC_GetSysClkSource>:
{
 8004b0c:	b480      	push	{r7}
 8004b0e:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
 8004b10:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b14:	689b      	ldr	r3, [r3, #8]
 8004b16:	f003 030c 	and.w	r3, r3, #12
}
 8004b1a:	4618      	mov	r0, r3
 8004b1c:	46bd      	mov	sp, r7
 8004b1e:	bc80      	pop	{r7}
 8004b20:	4770      	bx	lr

08004b22 <LL_RCC_GetAHBPrescaler>:
{
 8004b22:	b480      	push	{r7}
 8004b24:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
 8004b26:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b2a:	689b      	ldr	r3, [r3, #8]
 8004b2c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8004b30:	4618      	mov	r0, r3
 8004b32:	46bd      	mov	sp, r7
 8004b34:	bc80      	pop	{r7}
 8004b36:	4770      	bx	lr

08004b38 <LL_C2_RCC_GetAHBPrescaler>:
{
 8004b38:	b480      	push	{r7}
 8004b3a:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->EXTCFGR, RCC_EXTCFGR_C2HPRE));
 8004b3c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b40:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8004b44:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8004b48:	4618      	mov	r0, r3
 8004b4a:	46bd      	mov	sp, r7
 8004b4c:	bc80      	pop	{r7}
 8004b4e:	4770      	bx	lr

08004b50 <LL_RCC_GetAHB3Prescaler>:
{
 8004b50:	b480      	push	{r7}
 8004b52:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->EXTCFGR, RCC_EXTCFGR_SHDHPRE) << 4);
 8004b54:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b58:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8004b5c:	011b      	lsls	r3, r3, #4
 8004b5e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
}
 8004b62:	4618      	mov	r0, r3
 8004b64:	46bd      	mov	sp, r7
 8004b66:	bc80      	pop	{r7}
 8004b68:	4770      	bx	lr

08004b6a <LL_RCC_GetAPB1Prescaler>:
{
 8004b6a:	b480      	push	{r7}
 8004b6c:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
 8004b6e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b72:	689b      	ldr	r3, [r3, #8]
 8004b74:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
}
 8004b78:	4618      	mov	r0, r3
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	bc80      	pop	{r7}
 8004b7e:	4770      	bx	lr

08004b80 <LL_RCC_GetAPB2Prescaler>:
{
 8004b80:	b480      	push	{r7}
 8004b82:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
 8004b84:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004b88:	689b      	ldr	r3, [r3, #8]
 8004b8a:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
}
 8004b8e:	4618      	mov	r0, r3
 8004b90:	46bd      	mov	sp, r7
 8004b92:	bc80      	pop	{r7}
 8004b94:	4770      	bx	lr

08004b96 <LL_RCC_GetLPUARTClockSource>:
{
 8004b96:	b480      	push	{r7}
 8004b98:	b083      	sub	sp, #12
 8004b9a:	af00      	add	r7, sp, #0
 8004b9c:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(RCC->CCIPR, LPUARTx));
 8004b9e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ba2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	4013      	ands	r3, r2
}
 8004baa:	4618      	mov	r0, r3
 8004bac:	370c      	adds	r7, #12
 8004bae:	46bd      	mov	sp, r7
 8004bb0:	bc80      	pop	{r7}
 8004bb2:	4770      	bx	lr

08004bb4 <LL_RCC_PLL_GetN>:
{
 8004bb4:	b480      	push	{r7}
 8004bb6:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >>  RCC_PLLCFGR_PLLN_Pos);
 8004bb8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004bbc:	68db      	ldr	r3, [r3, #12]
 8004bbe:	0a1b      	lsrs	r3, r3, #8
 8004bc0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
}
 8004bc4:	4618      	mov	r0, r3
 8004bc6:	46bd      	mov	sp, r7
 8004bc8:	bc80      	pop	{r7}
 8004bca:	4770      	bx	lr

08004bcc <LL_RCC_PLL_GetR>:
{
 8004bcc:	b480      	push	{r7}
 8004bce:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR));
 8004bd0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004bd4:	68db      	ldr	r3, [r3, #12]
 8004bd6:	f003 4360 	and.w	r3, r3, #3758096384	; 0xe0000000
}
 8004bda:	4618      	mov	r0, r3
 8004bdc:	46bd      	mov	sp, r7
 8004bde:	bc80      	pop	{r7}
 8004be0:	4770      	bx	lr

08004be2 <LL_RCC_PLL_GetDivider>:
{
 8004be2:	b480      	push	{r7}
 8004be4:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM));
 8004be6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004bea:	68db      	ldr	r3, [r3, #12]
 8004bec:	f003 0370 	and.w	r3, r3, #112	; 0x70
}
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	46bd      	mov	sp, r7
 8004bf4:	bc80      	pop	{r7}
 8004bf6:	4770      	bx	lr

08004bf8 <LL_RCC_PLL_GetMainSource>:
{
 8004bf8:	b480      	push	{r7}
 8004bfa:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC));
 8004bfc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004c00:	68db      	ldr	r3, [r3, #12]
 8004c02:	f003 0303 	and.w	r3, r3, #3
}
 8004c06:	4618      	mov	r0, r3
 8004c08:	46bd      	mov	sp, r7
 8004c0a:	bc80      	pop	{r7}
 8004c0c:	4770      	bx	lr

08004c0e <LL_RCC_GetSystemClocksFreq>:
  *         configuration based on this function will be incorrect.
  * @param  RCC_Clocks pointer to a @ref LL_RCC_ClocksTypeDef structure which will hold the clocks frequencies
  * @retval None
  */
void LL_RCC_GetSystemClocksFreq(LL_RCC_ClocksTypeDef *RCC_Clocks)
{
 8004c0e:	b580      	push	{r7, lr}
 8004c10:	b082      	sub	sp, #8
 8004c12:	af00      	add	r7, sp, #0
 8004c14:	6078      	str	r0, [r7, #4]
  /* Get SYSCLK frequency */
  RCC_Clocks->SYSCLK_Frequency = RCC_GetSystemClockFreq();
 8004c16:	f000 f871 	bl	8004cfc <RCC_GetSystemClockFreq>
 8004c1a:	4602      	mov	r2, r0
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	601a      	str	r2, [r3, #0]

  /* HCLK1 clock frequency */
  RCC_Clocks->HCLK1_Frequency   = RCC_GetHCLK1ClockFreq(RCC_Clocks->SYSCLK_Frequency);
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	4618      	mov	r0, r3
 8004c26:	f000 f911 	bl	8004e4c <RCC_GetHCLK1ClockFreq>
 8004c2a:	4602      	mov	r2, r0
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	605a      	str	r2, [r3, #4]

#if defined(DUAL_CORE)
  /* HCLK2 clock frequency */
  RCC_Clocks->HCLK2_Frequency   = RCC_GetHCLK2ClockFreq(RCC_Clocks->SYSCLK_Frequency);
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	4618      	mov	r0, r3
 8004c36:	f000 f91f 	bl	8004e78 <RCC_GetHCLK2ClockFreq>
 8004c3a:	4602      	mov	r2, r0
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	609a      	str	r2, [r3, #8]
#endif /* DUAL_CORE */

  /* HCLK3 clock frequency */
  RCC_Clocks->HCLK3_Frequency   = RCC_GetHCLK3ClockFreq(RCC_Clocks->SYSCLK_Frequency);
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	4618      	mov	r0, r3
 8004c46:	f000 f92d 	bl	8004ea4 <RCC_GetHCLK3ClockFreq>
 8004c4a:	4602      	mov	r2, r0
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	60da      	str	r2, [r3, #12]

  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency  = RCC_GetPCLK1ClockFreq(RCC_Clocks->HCLK1_Frequency);
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	685b      	ldr	r3, [r3, #4]
 8004c54:	4618      	mov	r0, r3
 8004c56:	f000 f93b 	bl	8004ed0 <RCC_GetPCLK1ClockFreq>
 8004c5a:	4602      	mov	r2, r0
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	611a      	str	r2, [r3, #16]

  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency  = RCC_GetPCLK2ClockFreq(RCC_Clocks->HCLK1_Frequency);
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	685b      	ldr	r3, [r3, #4]
 8004c64:	4618      	mov	r0, r3
 8004c66:	f000 f947 	bl	8004ef8 <RCC_GetPCLK2ClockFreq>
 8004c6a:	4602      	mov	r2, r0
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	615a      	str	r2, [r3, #20]
}
 8004c70:	bf00      	nop
 8004c72:	3708      	adds	r7, #8
 8004c74:	46bd      	mov	sp, r7
 8004c76:	bd80      	pop	{r7, pc}

08004c78 <LL_RCC_GetLPUARTClockFreq>:
  *         @arg @ref LL_RCC_LPUART1_CLKSOURCE
  * @retval LPUART clock frequency (in Hz)
  *         - @ref  LL_RCC_PERIPH_FREQUENCY_NO indicates that oscillator (HSI or LSE) is not ready
  */
uint32_t LL_RCC_GetLPUARTClockFreq(uint32_t LPUARTxSource)
{
 8004c78:	b580      	push	{r7, lr}
 8004c7a:	b084      	sub	sp, #16
 8004c7c:	af00      	add	r7, sp, #0
 8004c7e:	6078      	str	r0, [r7, #4]
  uint32_t lpuart_frequency = LL_RCC_PERIPH_FREQUENCY_NO;
 8004c80:	2300      	movs	r3, #0
 8004c82:	60fb      	str	r3, [r7, #12]

  /* Check parameter */
  assert_param(IS_LL_RCC_LPUART_CLKSOURCE(LPUARTxSource));

  /* LPUART1CLK clock frequency */
  switch (LL_RCC_GetLPUARTClockSource(LPUARTxSource))
 8004c84:	6878      	ldr	r0, [r7, #4]
 8004c86:	f7ff ff86 	bl	8004b96 <LL_RCC_GetLPUARTClockSource>
 8004c8a:	4603      	mov	r3, r0
 8004c8c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8004c90:	d015      	beq.n	8004cbe <LL_RCC_GetLPUARTClockFreq+0x46>
 8004c92:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8004c96:	d81b      	bhi.n	8004cd0 <LL_RCC_GetLPUARTClockFreq+0x58>
 8004c98:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004c9c:	d003      	beq.n	8004ca6 <LL_RCC_GetLPUARTClockFreq+0x2e>
 8004c9e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004ca2:	d004      	beq.n	8004cae <LL_RCC_GetLPUARTClockFreq+0x36>
 8004ca4:	e014      	b.n	8004cd0 <LL_RCC_GetLPUARTClockFreq+0x58>
  {
    case LL_RCC_LPUART1_CLKSOURCE_SYSCLK: /* LPUART1 Clock is System Clock */
      lpuart_frequency = RCC_GetSystemClockFreq();
 8004ca6:	f000 f829 	bl	8004cfc <RCC_GetSystemClockFreq>
 8004caa:	60f8      	str	r0, [r7, #12]
      break;
 8004cac:	e01f      	b.n	8004cee <LL_RCC_GetLPUARTClockFreq+0x76>

    case LL_RCC_LPUART1_CLKSOURCE_HSI:    /* LPUART1 Clock is HSI Osc. */
      if (LL_RCC_HSI_IsReady() == 1U)
 8004cae:	f7ff fee4 	bl	8004a7a <LL_RCC_HSI_IsReady>
 8004cb2:	4603      	mov	r3, r0
 8004cb4:	2b01      	cmp	r3, #1
 8004cb6:	d117      	bne.n	8004ce8 <LL_RCC_GetLPUARTClockFreq+0x70>
      {
        lpuart_frequency = HSI_VALUE;
 8004cb8:	4b0f      	ldr	r3, [pc, #60]	; (8004cf8 <LL_RCC_GetLPUARTClockFreq+0x80>)
 8004cba:	60fb      	str	r3, [r7, #12]
      }
      break;
 8004cbc:	e014      	b.n	8004ce8 <LL_RCC_GetLPUARTClockFreq+0x70>

    case LL_RCC_LPUART1_CLKSOURCE_LSE:    /* LPUART1 Clock is LSE Osc. */
      if (LL_RCC_LSE_IsReady() == 1U)
 8004cbe:	f7ff feed 	bl	8004a9c <LL_RCC_LSE_IsReady>
 8004cc2:	4603      	mov	r3, r0
 8004cc4:	2b01      	cmp	r3, #1
 8004cc6:	d111      	bne.n	8004cec <LL_RCC_GetLPUARTClockFreq+0x74>
      {
        lpuart_frequency = LSE_VALUE;
 8004cc8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8004ccc:	60fb      	str	r3, [r7, #12]
      }
      break;
 8004cce:	e00d      	b.n	8004cec <LL_RCC_GetLPUARTClockFreq+0x74>

    case LL_RCC_LPUART1_CLKSOURCE_PCLK1:  /* LPUART1 Clock is PCLK1 */
    default:
      lpuart_frequency = RCC_GetPCLK1ClockFreq(RCC_GetHCLK1ClockFreq(RCC_GetSystemClockFreq()));
 8004cd0:	f000 f814 	bl	8004cfc <RCC_GetSystemClockFreq>
 8004cd4:	4603      	mov	r3, r0
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	f000 f8b8 	bl	8004e4c <RCC_GetHCLK1ClockFreq>
 8004cdc:	4603      	mov	r3, r0
 8004cde:	4618      	mov	r0, r3
 8004ce0:	f000 f8f6 	bl	8004ed0 <RCC_GetPCLK1ClockFreq>
 8004ce4:	60f8      	str	r0, [r7, #12]
      break;
 8004ce6:	e002      	b.n	8004cee <LL_RCC_GetLPUARTClockFreq+0x76>
      break;
 8004ce8:	bf00      	nop
 8004cea:	e000      	b.n	8004cee <LL_RCC_GetLPUARTClockFreq+0x76>
      break;
 8004cec:	bf00      	nop
  }

  return lpuart_frequency;
 8004cee:	68fb      	ldr	r3, [r7, #12]
}
 8004cf0:	4618      	mov	r0, r3
 8004cf2:	3710      	adds	r7, #16
 8004cf4:	46bd      	mov	sp, r7
 8004cf6:	bd80      	pop	{r7, pc}
 8004cf8:	00f42400 	.word	0x00f42400

08004cfc <RCC_GetSystemClockFreq>:
/**
  * @brief  Return SYSTEM clock (SYSCLK) frequency
  * @retval SYSTEM clock frequency (in Hz)
  */
static uint32_t RCC_GetSystemClockFreq(void)
{
 8004cfc:	b580      	push	{r7, lr}
 8004cfe:	b082      	sub	sp, #8
 8004d00:	af00      	add	r7, sp, #0
  uint32_t frequency;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (LL_RCC_GetSysClkSource())
 8004d02:	f7ff ff03 	bl	8004b0c <LL_RCC_GetSysClkSource>
 8004d06:	4603      	mov	r3, r0
 8004d08:	2b0c      	cmp	r3, #12
 8004d0a:	d861      	bhi.n	8004dd0 <RCC_GetSystemClockFreq+0xd4>
 8004d0c:	a201      	add	r2, pc, #4	; (adr r2, 8004d14 <RCC_GetSystemClockFreq+0x18>)
 8004d0e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004d12:	bf00      	nop
 8004d14:	08004d49 	.word	0x08004d49
 8004d18:	08004dd1 	.word	0x08004dd1
 8004d1c:	08004dd1 	.word	0x08004dd1
 8004d20:	08004dd1 	.word	0x08004dd1
 8004d24:	08004dad 	.word	0x08004dad
 8004d28:	08004dd1 	.word	0x08004dd1
 8004d2c:	08004dd1 	.word	0x08004dd1
 8004d30:	08004dd1 	.word	0x08004dd1
 8004d34:	08004db3 	.word	0x08004db3
 8004d38:	08004dd1 	.word	0x08004dd1
 8004d3c:	08004dd1 	.word	0x08004dd1
 8004d40:	08004dd1 	.word	0x08004dd1
 8004d44:	08004dc9 	.word	0x08004dc9
  {
    case LL_RCC_SYS_CLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
      frequency = __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
 8004d48:	f7ff feb9 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004d4c:	4603      	mov	r3, r0
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d115      	bne.n	8004d7e <RCC_GetSystemClockFreq+0x82>
 8004d52:	f7ff feb4 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004d56:	4603      	mov	r3, r0
 8004d58:	2b01      	cmp	r3, #1
 8004d5a:	d106      	bne.n	8004d6a <RCC_GetSystemClockFreq+0x6e>
 8004d5c:	f7ff febf 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004d60:	4603      	mov	r3, r0
 8004d62:	0a1b      	lsrs	r3, r3, #8
 8004d64:	f003 030f 	and.w	r3, r3, #15
 8004d68:	e005      	b.n	8004d76 <RCC_GetSystemClockFreq+0x7a>
 8004d6a:	f7ff fec3 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004d6e:	4603      	mov	r3, r0
 8004d70:	0a1b      	lsrs	r3, r3, #8
 8004d72:	f003 030f 	and.w	r3, r3, #15
 8004d76:	4a32      	ldr	r2, [pc, #200]	; (8004e40 <RCC_GetSystemClockFreq+0x144>)
 8004d78:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004d7c:	e014      	b.n	8004da8 <RCC_GetSystemClockFreq+0xac>
 8004d7e:	f7ff fe9e 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004d82:	4603      	mov	r3, r0
 8004d84:	2b01      	cmp	r3, #1
 8004d86:	d106      	bne.n	8004d96 <RCC_GetSystemClockFreq+0x9a>
 8004d88:	f7ff fea9 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004d8c:	4603      	mov	r3, r0
 8004d8e:	091b      	lsrs	r3, r3, #4
 8004d90:	f003 030f 	and.w	r3, r3, #15
 8004d94:	e005      	b.n	8004da2 <RCC_GetSystemClockFreq+0xa6>
 8004d96:	f7ff fead 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004d9a:	4603      	mov	r3, r0
 8004d9c:	091b      	lsrs	r3, r3, #4
 8004d9e:	f003 030f 	and.w	r3, r3, #15
 8004da2:	4a27      	ldr	r2, [pc, #156]	; (8004e40 <RCC_GetSystemClockFreq+0x144>)
 8004da4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004da8:	607b      	str	r3, [r7, #4]
                                         ((LL_RCC_MSI_IsEnabledRangeSelect()  == 1U) ?
                                          LL_RCC_MSI_GetRange() :
                                          LL_RCC_MSI_GetRangeAfterStandby()));
      break;
 8004daa:	e043      	b.n	8004e34 <RCC_GetSystemClockFreq+0x138>

    case LL_RCC_SYS_CLKSOURCE_STATUS_HSI:  /* HSI used as system clock  source */
      frequency = HSI_VALUE;
 8004dac:	4b25      	ldr	r3, [pc, #148]	; (8004e44 <RCC_GetSystemClockFreq+0x148>)
 8004dae:	607b      	str	r3, [r7, #4]
      break;
 8004db0:	e040      	b.n	8004e34 <RCC_GetSystemClockFreq+0x138>

    case LL_RCC_SYS_CLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
      if (LL_RCC_HSE_IsEnabledDiv2() == 1U)
 8004db2:	f7ff fe51 	bl	8004a58 <LL_RCC_HSE_IsEnabledDiv2>
 8004db6:	4603      	mov	r3, r0
 8004db8:	2b01      	cmp	r3, #1
 8004dba:	d102      	bne.n	8004dc2 <RCC_GetSystemClockFreq+0xc6>
      {
        frequency = HSE_VALUE / 2U;
 8004dbc:	4b21      	ldr	r3, [pc, #132]	; (8004e44 <RCC_GetSystemClockFreq+0x148>)
 8004dbe:	607b      	str	r3, [r7, #4]
      }
      else
      {
        frequency = HSE_VALUE;
      }
      break;
 8004dc0:	e038      	b.n	8004e34 <RCC_GetSystemClockFreq+0x138>
        frequency = HSE_VALUE;
 8004dc2:	4b21      	ldr	r3, [pc, #132]	; (8004e48 <RCC_GetSystemClockFreq+0x14c>)
 8004dc4:	607b      	str	r3, [r7, #4]
      break;
 8004dc6:	e035      	b.n	8004e34 <RCC_GetSystemClockFreq+0x138>


    case LL_RCC_SYS_CLKSOURCE_STATUS_PLL:  /* PLL used as system clock  source */
      frequency = RCC_PLL_GetFreqDomain_SYS();
 8004dc8:	f000 f8aa 	bl	8004f20 <RCC_PLL_GetFreqDomain_SYS>
 8004dcc:	6078      	str	r0, [r7, #4]
      break;
 8004dce:	e031      	b.n	8004e34 <RCC_GetSystemClockFreq+0x138>

    default:
      frequency = __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
 8004dd0:	f7ff fe75 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004dd4:	4603      	mov	r3, r0
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	d115      	bne.n	8004e06 <RCC_GetSystemClockFreq+0x10a>
 8004dda:	f7ff fe70 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004dde:	4603      	mov	r3, r0
 8004de0:	2b01      	cmp	r3, #1
 8004de2:	d106      	bne.n	8004df2 <RCC_GetSystemClockFreq+0xf6>
 8004de4:	f7ff fe7b 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004de8:	4603      	mov	r3, r0
 8004dea:	0a1b      	lsrs	r3, r3, #8
 8004dec:	f003 030f 	and.w	r3, r3, #15
 8004df0:	e005      	b.n	8004dfe <RCC_GetSystemClockFreq+0x102>
 8004df2:	f7ff fe7f 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004df6:	4603      	mov	r3, r0
 8004df8:	0a1b      	lsrs	r3, r3, #8
 8004dfa:	f003 030f 	and.w	r3, r3, #15
 8004dfe:	4a10      	ldr	r2, [pc, #64]	; (8004e40 <RCC_GetSystemClockFreq+0x144>)
 8004e00:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e04:	e014      	b.n	8004e30 <RCC_GetSystemClockFreq+0x134>
 8004e06:	f7ff fe5a 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004e0a:	4603      	mov	r3, r0
 8004e0c:	2b01      	cmp	r3, #1
 8004e0e:	d106      	bne.n	8004e1e <RCC_GetSystemClockFreq+0x122>
 8004e10:	f7ff fe65 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004e14:	4603      	mov	r3, r0
 8004e16:	091b      	lsrs	r3, r3, #4
 8004e18:	f003 030f 	and.w	r3, r3, #15
 8004e1c:	e005      	b.n	8004e2a <RCC_GetSystemClockFreq+0x12e>
 8004e1e:	f7ff fe69 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004e22:	4603      	mov	r3, r0
 8004e24:	091b      	lsrs	r3, r3, #4
 8004e26:	f003 030f 	and.w	r3, r3, #15
 8004e2a:	4a05      	ldr	r2, [pc, #20]	; (8004e40 <RCC_GetSystemClockFreq+0x144>)
 8004e2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e30:	607b      	str	r3, [r7, #4]
                                         ((LL_RCC_MSI_IsEnabledRangeSelect()  == 1U) ?
                                          LL_RCC_MSI_GetRange() :
                                          LL_RCC_MSI_GetRangeAfterStandby()));
      break;
 8004e32:	bf00      	nop
  }

  return frequency;
 8004e34:	687b      	ldr	r3, [r7, #4]
}
 8004e36:	4618      	mov	r0, r3
 8004e38:	3708      	adds	r7, #8
 8004e3a:	46bd      	mov	sp, r7
 8004e3c:	bd80      	pop	{r7, pc}
 8004e3e:	bf00      	nop
 8004e40:	08031648 	.word	0x08031648
 8004e44:	00f42400 	.word	0x00f42400
 8004e48:	01e84800 	.word	0x01e84800

08004e4c <RCC_GetHCLK1ClockFreq>:
  * @brief  Return HCLK1 clock frequency
  * @param  SYSCLK_Frequency SYSCLK clock frequency
  * @retval HCLK1 clock frequency (in Hz)
  */
static uint32_t RCC_GetHCLK1ClockFreq(uint32_t SYSCLK_Frequency)
{
 8004e4c:	b580      	push	{r7, lr}
 8004e4e:	b082      	sub	sp, #8
 8004e50:	af00      	add	r7, sp, #0
 8004e52:	6078      	str	r0, [r7, #4]
  /* HCLK clock frequency */
  return __LL_RCC_CALC_HCLK1_FREQ(SYSCLK_Frequency, LL_RCC_GetAHBPrescaler());
 8004e54:	f7ff fe65 	bl	8004b22 <LL_RCC_GetAHBPrescaler>
 8004e58:	4603      	mov	r3, r0
 8004e5a:	091b      	lsrs	r3, r3, #4
 8004e5c:	f003 030f 	and.w	r3, r3, #15
 8004e60:	4a04      	ldr	r2, [pc, #16]	; (8004e74 <RCC_GetHCLK1ClockFreq+0x28>)
 8004e62:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e66:	687a      	ldr	r2, [r7, #4]
 8004e68:	fbb2 f3f3 	udiv	r3, r2, r3
}
 8004e6c:	4618      	mov	r0, r3
 8004e6e:	3708      	adds	r7, #8
 8004e70:	46bd      	mov	sp, r7
 8004e72:	bd80      	pop	{r7, pc}
 8004e74:	080315e8 	.word	0x080315e8

08004e78 <RCC_GetHCLK2ClockFreq>:
  * @brief  Return HCLK2 clock frequency
  * @param  SYSCLK_Frequency SYSCLK clock frequency
  * @retval HCLK2 clock frequency (in Hz)
  */
static uint32_t RCC_GetHCLK2ClockFreq(uint32_t SYSCLK_Frequency)
{
 8004e78:	b580      	push	{r7, lr}
 8004e7a:	b082      	sub	sp, #8
 8004e7c:	af00      	add	r7, sp, #0
 8004e7e:	6078      	str	r0, [r7, #4]
  /* HCLK clock frequency */
  return __LL_RCC_CALC_HCLK2_FREQ(SYSCLK_Frequency, LL_C2_RCC_GetAHBPrescaler());
 8004e80:	f7ff fe5a 	bl	8004b38 <LL_C2_RCC_GetAHBPrescaler>
 8004e84:	4603      	mov	r3, r0
 8004e86:	091b      	lsrs	r3, r3, #4
 8004e88:	f003 030f 	and.w	r3, r3, #15
 8004e8c:	4a04      	ldr	r2, [pc, #16]	; (8004ea0 <RCC_GetHCLK2ClockFreq+0x28>)
 8004e8e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e92:	687a      	ldr	r2, [r7, #4]
 8004e94:	fbb2 f3f3 	udiv	r3, r2, r3
}
 8004e98:	4618      	mov	r0, r3
 8004e9a:	3708      	adds	r7, #8
 8004e9c:	46bd      	mov	sp, r7
 8004e9e:	bd80      	pop	{r7, pc}
 8004ea0:	080315e8 	.word	0x080315e8

08004ea4 <RCC_GetHCLK3ClockFreq>:
  * @brief  Return HCLK clock frequency
  * @param  SYSCLK_Frequency SYSCLK clock frequency
  * @retval HCLK3 clock frequency (in Hz)
  */
static uint32_t RCC_GetHCLK3ClockFreq(uint32_t SYSCLK_Frequency)
{
 8004ea4:	b580      	push	{r7, lr}
 8004ea6:	b082      	sub	sp, #8
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	6078      	str	r0, [r7, #4]
  /* HCLK clock frequency */
  return __LL_RCC_CALC_HCLK3_FREQ(SYSCLK_Frequency, LL_RCC_GetAHB3Prescaler());
 8004eac:	f7ff fe50 	bl	8004b50 <LL_RCC_GetAHB3Prescaler>
 8004eb0:	4603      	mov	r3, r0
 8004eb2:	091b      	lsrs	r3, r3, #4
 8004eb4:	f003 030f 	and.w	r3, r3, #15
 8004eb8:	4a04      	ldr	r2, [pc, #16]	; (8004ecc <RCC_GetHCLK3ClockFreq+0x28>)
 8004eba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004ebe:	687a      	ldr	r2, [r7, #4]
 8004ec0:	fbb2 f3f3 	udiv	r3, r2, r3
}
 8004ec4:	4618      	mov	r0, r3
 8004ec6:	3708      	adds	r7, #8
 8004ec8:	46bd      	mov	sp, r7
 8004eca:	bd80      	pop	{r7, pc}
 8004ecc:	080315e8 	.word	0x080315e8

08004ed0 <RCC_GetPCLK1ClockFreq>:
  * @brief  Return PCLK1 clock frequency
  * @param  HCLK_Frequency HCLK clock frequency
  * @retval PCLK1 clock frequency (in Hz)
  */
static uint32_t RCC_GetPCLK1ClockFreq(uint32_t HCLK_Frequency)
{
 8004ed0:	b580      	push	{r7, lr}
 8004ed2:	b082      	sub	sp, #8
 8004ed4:	af00      	add	r7, sp, #0
 8004ed6:	6078      	str	r0, [r7, #4]
  /* PCLK1 clock frequency */
  return __LL_RCC_CALC_PCLK1_FREQ(HCLK_Frequency, LL_RCC_GetAPB1Prescaler());
 8004ed8:	f7ff fe47 	bl	8004b6a <LL_RCC_GetAPB1Prescaler>
 8004edc:	4603      	mov	r3, r0
 8004ede:	0a1b      	lsrs	r3, r3, #8
 8004ee0:	4a04      	ldr	r2, [pc, #16]	; (8004ef4 <RCC_GetPCLK1ClockFreq+0x24>)
 8004ee2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004ee6:	687a      	ldr	r2, [r7, #4]
 8004ee8:	fa22 f303 	lsr.w	r3, r2, r3
}
 8004eec:	4618      	mov	r0, r3
 8004eee:	3708      	adds	r7, #8
 8004ef0:	46bd      	mov	sp, r7
 8004ef2:	bd80      	pop	{r7, pc}
 8004ef4:	08031628 	.word	0x08031628

08004ef8 <RCC_GetPCLK2ClockFreq>:
  * @brief  Return PCLK2 clock frequency
  * @param  HCLK_Frequency HCLK clock frequency
  * @retval PCLK2 clock frequency (in Hz)
  */
static uint32_t RCC_GetPCLK2ClockFreq(uint32_t HCLK_Frequency)
{
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b082      	sub	sp, #8
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	6078      	str	r0, [r7, #4]
  /* PCLK2 clock frequency */
  return __LL_RCC_CALC_PCLK2_FREQ(HCLK_Frequency, LL_RCC_GetAPB2Prescaler());
 8004f00:	f7ff fe3e 	bl	8004b80 <LL_RCC_GetAPB2Prescaler>
 8004f04:	4603      	mov	r3, r0
 8004f06:	0adb      	lsrs	r3, r3, #11
 8004f08:	4a04      	ldr	r2, [pc, #16]	; (8004f1c <RCC_GetPCLK2ClockFreq+0x24>)
 8004f0a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004f0e:	687a      	ldr	r2, [r7, #4]
 8004f10:	fa22 f303 	lsr.w	r3, r2, r3
}
 8004f14:	4618      	mov	r0, r3
 8004f16:	3708      	adds	r7, #8
 8004f18:	46bd      	mov	sp, r7
 8004f1a:	bd80      	pop	{r7, pc}
 8004f1c:	08031628 	.word	0x08031628

08004f20 <RCC_PLL_GetFreqDomain_SYS>:
/**
  * @brief  Return PLL clock (PLLRCLK) frequency used for system domain
  * @retval PLLRCLK clock frequency (in Hz)
  */
static uint32_t RCC_PLL_GetFreqDomain_SYS(void)
{
 8004f20:	b590      	push	{r4, r7, lr}
 8004f22:	b083      	sub	sp, #12
 8004f24:	af00      	add	r7, sp, #0
  uint32_t pllsource;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI Value/ PLLM) * PLLN
     SYSCLK = PLL_VCO / PLLR
  */
  pllsource = LL_RCC_PLL_GetMainSource();
 8004f26:	f7ff fe67 	bl	8004bf8 <LL_RCC_PLL_GetMainSource>
 8004f2a:	6038      	str	r0, [r7, #0]

  switch (pllsource)
 8004f2c:	683b      	ldr	r3, [r7, #0]
 8004f2e:	2b03      	cmp	r3, #3
 8004f30:	d03e      	beq.n	8004fb0 <RCC_PLL_GetFreqDomain_SYS+0x90>
 8004f32:	683b      	ldr	r3, [r7, #0]
 8004f34:	2b03      	cmp	r3, #3
 8004f36:	d846      	bhi.n	8004fc6 <RCC_PLL_GetFreqDomain_SYS+0xa6>
 8004f38:	683b      	ldr	r3, [r7, #0]
 8004f3a:	2b01      	cmp	r3, #1
 8004f3c:	d003      	beq.n	8004f46 <RCC_PLL_GetFreqDomain_SYS+0x26>
 8004f3e:	683b      	ldr	r3, [r7, #0]
 8004f40:	2b02      	cmp	r3, #2
 8004f42:	d032      	beq.n	8004faa <RCC_PLL_GetFreqDomain_SYS+0x8a>
 8004f44:	e03f      	b.n	8004fc6 <RCC_PLL_GetFreqDomain_SYS+0xa6>
  {
    case LL_RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
      pllinputfreq = __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
 8004f46:	f7ff fdba 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004f4a:	4603      	mov	r3, r0
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	d115      	bne.n	8004f7c <RCC_PLL_GetFreqDomain_SYS+0x5c>
 8004f50:	f7ff fdb5 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004f54:	4603      	mov	r3, r0
 8004f56:	2b01      	cmp	r3, #1
 8004f58:	d106      	bne.n	8004f68 <RCC_PLL_GetFreqDomain_SYS+0x48>
 8004f5a:	f7ff fdc0 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004f5e:	4603      	mov	r3, r0
 8004f60:	0a1b      	lsrs	r3, r3, #8
 8004f62:	f003 030f 	and.w	r3, r3, #15
 8004f66:	e005      	b.n	8004f74 <RCC_PLL_GetFreqDomain_SYS+0x54>
 8004f68:	f7ff fdc4 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004f6c:	4603      	mov	r3, r0
 8004f6e:	0a1b      	lsrs	r3, r3, #8
 8004f70:	f003 030f 	and.w	r3, r3, #15
 8004f74:	4a39      	ldr	r2, [pc, #228]	; (800505c <RCC_PLL_GetFreqDomain_SYS+0x13c>)
 8004f76:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004f7a:	e014      	b.n	8004fa6 <RCC_PLL_GetFreqDomain_SYS+0x86>
 8004f7c:	f7ff fd9f 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004f80:	4603      	mov	r3, r0
 8004f82:	2b01      	cmp	r3, #1
 8004f84:	d106      	bne.n	8004f94 <RCC_PLL_GetFreqDomain_SYS+0x74>
 8004f86:	f7ff fdaa 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004f8a:	4603      	mov	r3, r0
 8004f8c:	091b      	lsrs	r3, r3, #4
 8004f8e:	f003 030f 	and.w	r3, r3, #15
 8004f92:	e005      	b.n	8004fa0 <RCC_PLL_GetFreqDomain_SYS+0x80>
 8004f94:	f7ff fdae 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004f98:	4603      	mov	r3, r0
 8004f9a:	091b      	lsrs	r3, r3, #4
 8004f9c:	f003 030f 	and.w	r3, r3, #15
 8004fa0:	4a2e      	ldr	r2, [pc, #184]	; (800505c <RCC_PLL_GetFreqDomain_SYS+0x13c>)
 8004fa2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004fa6:	607b      	str	r3, [r7, #4]
                                            ((LL_RCC_MSI_IsEnabledRangeSelect()  == 1U) ?
                                             LL_RCC_MSI_GetRange() :
                                             LL_RCC_MSI_GetRangeAfterStandby()));
      break;
 8004fa8:	e03f      	b.n	800502a <RCC_PLL_GetFreqDomain_SYS+0x10a>

    case LL_RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pllinputfreq = HSI_VALUE;
 8004faa:	4b2d      	ldr	r3, [pc, #180]	; (8005060 <RCC_PLL_GetFreqDomain_SYS+0x140>)
 8004fac:	607b      	str	r3, [r7, #4]
      break;
 8004fae:	e03c      	b.n	800502a <RCC_PLL_GetFreqDomain_SYS+0x10a>

    case LL_RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      if (LL_RCC_HSE_IsEnabledDiv2() == 1U)
 8004fb0:	f7ff fd52 	bl	8004a58 <LL_RCC_HSE_IsEnabledDiv2>
 8004fb4:	4603      	mov	r3, r0
 8004fb6:	2b01      	cmp	r3, #1
 8004fb8:	d102      	bne.n	8004fc0 <RCC_PLL_GetFreqDomain_SYS+0xa0>
      {
        pllinputfreq = HSE_VALUE / 2U;
 8004fba:	4b29      	ldr	r3, [pc, #164]	; (8005060 <RCC_PLL_GetFreqDomain_SYS+0x140>)
 8004fbc:	607b      	str	r3, [r7, #4]
      }
      else
      {
        pllinputfreq = HSE_VALUE;
      }
      break;
 8004fbe:	e034      	b.n	800502a <RCC_PLL_GetFreqDomain_SYS+0x10a>
        pllinputfreq = HSE_VALUE;
 8004fc0:	4b28      	ldr	r3, [pc, #160]	; (8005064 <RCC_PLL_GetFreqDomain_SYS+0x144>)
 8004fc2:	607b      	str	r3, [r7, #4]
      break;
 8004fc4:	e031      	b.n	800502a <RCC_PLL_GetFreqDomain_SYS+0x10a>


    default:
      pllinputfreq = __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_IsEnabledRangeSelect(),
 8004fc6:	f7ff fd7a 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004fca:	4603      	mov	r3, r0
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	d115      	bne.n	8004ffc <RCC_PLL_GetFreqDomain_SYS+0xdc>
 8004fd0:	f7ff fd75 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8004fd4:	4603      	mov	r3, r0
 8004fd6:	2b01      	cmp	r3, #1
 8004fd8:	d106      	bne.n	8004fe8 <RCC_PLL_GetFreqDomain_SYS+0xc8>
 8004fda:	f7ff fd80 	bl	8004ade <LL_RCC_MSI_GetRange>
 8004fde:	4603      	mov	r3, r0
 8004fe0:	0a1b      	lsrs	r3, r3, #8
 8004fe2:	f003 030f 	and.w	r3, r3, #15
 8004fe6:	e005      	b.n	8004ff4 <RCC_PLL_GetFreqDomain_SYS+0xd4>
 8004fe8:	f7ff fd84 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8004fec:	4603      	mov	r3, r0
 8004fee:	0a1b      	lsrs	r3, r3, #8
 8004ff0:	f003 030f 	and.w	r3, r3, #15
 8004ff4:	4a19      	ldr	r2, [pc, #100]	; (800505c <RCC_PLL_GetFreqDomain_SYS+0x13c>)
 8004ff6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004ffa:	e014      	b.n	8005026 <RCC_PLL_GetFreqDomain_SYS+0x106>
 8004ffc:	f7ff fd5f 	bl	8004abe <LL_RCC_MSI_IsEnabledRangeSelect>
 8005000:	4603      	mov	r3, r0
 8005002:	2b01      	cmp	r3, #1
 8005004:	d106      	bne.n	8005014 <RCC_PLL_GetFreqDomain_SYS+0xf4>
 8005006:	f7ff fd6a 	bl	8004ade <LL_RCC_MSI_GetRange>
 800500a:	4603      	mov	r3, r0
 800500c:	091b      	lsrs	r3, r3, #4
 800500e:	f003 030f 	and.w	r3, r3, #15
 8005012:	e005      	b.n	8005020 <RCC_PLL_GetFreqDomain_SYS+0x100>
 8005014:	f7ff fd6e 	bl	8004af4 <LL_RCC_MSI_GetRangeAfterStandby>
 8005018:	4603      	mov	r3, r0
 800501a:	091b      	lsrs	r3, r3, #4
 800501c:	f003 030f 	and.w	r3, r3, #15
 8005020:	4a0e      	ldr	r2, [pc, #56]	; (800505c <RCC_PLL_GetFreqDomain_SYS+0x13c>)
 8005022:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005026:	607b      	str	r3, [r7, #4]
                                            ((LL_RCC_MSI_IsEnabledRangeSelect()  == 1U) ?
                                             LL_RCC_MSI_GetRange() :
                                             LL_RCC_MSI_GetRangeAfterStandby()));
      break;
 8005028:	bf00      	nop
  }
  return __LL_RCC_CALC_PLLCLK_FREQ(pllinputfreq, LL_RCC_PLL_GetDivider(),
 800502a:	f7ff fdc3 	bl	8004bb4 <LL_RCC_PLL_GetN>
 800502e:	4602      	mov	r2, r0
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	fb03 f402 	mul.w	r4, r3, r2
 8005036:	f7ff fdd4 	bl	8004be2 <LL_RCC_PLL_GetDivider>
 800503a:	4603      	mov	r3, r0
 800503c:	091b      	lsrs	r3, r3, #4
 800503e:	3301      	adds	r3, #1
 8005040:	fbb4 f4f3 	udiv	r4, r4, r3
 8005044:	f7ff fdc2 	bl	8004bcc <LL_RCC_PLL_GetR>
 8005048:	4603      	mov	r3, r0
 800504a:	0f5b      	lsrs	r3, r3, #29
 800504c:	3301      	adds	r3, #1
 800504e:	fbb4 f3f3 	udiv	r3, r4, r3
                                   LL_RCC_PLL_GetN(), LL_RCC_PLL_GetR());
}
 8005052:	4618      	mov	r0, r3
 8005054:	370c      	adds	r7, #12
 8005056:	46bd      	mov	sp, r7
 8005058:	bd90      	pop	{r4, r7, pc}
 800505a:	bf00      	nop
 800505c:	08031648 	.word	0x08031648
 8005060:	00f42400 	.word	0x00f42400
 8005064:	01e84800 	.word	0x01e84800

08005068 <LL_APB1_GRP1_ForceReset>:
  *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1

  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
{
 8005068:	b480      	push	{r7}
 800506a:	b083      	sub	sp, #12
 800506c:	af00      	add	r7, sp, #0
 800506e:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB1RSTR1, Periphs);
 8005070:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005074:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005076:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	4313      	orrs	r3, r2
 800507e:	638b      	str	r3, [r1, #56]	; 0x38
}
 8005080:	bf00      	nop
 8005082:	370c      	adds	r7, #12
 8005084:	46bd      	mov	sp, r7
 8005086:	bc80      	pop	{r7}
 8005088:	4770      	bx	lr

0800508a <LL_APB1_GRP1_ReleaseReset>:
  *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1

  * @retval None
  */
__STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
{
 800508a:	b480      	push	{r7}
 800508c:	b083      	sub	sp, #12
 800508e:	af00      	add	r7, sp, #0
 8005090:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB1RSTR1, Periphs);
 8005092:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005096:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	43db      	mvns	r3, r3
 800509c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80050a0:	4013      	ands	r3, r2
 80050a2:	638b      	str	r3, [r1, #56]	; 0x38
}
 80050a4:	bf00      	nop
 80050a6:	370c      	adds	r7, #12
 80050a8:	46bd      	mov	sp, r7
 80050aa:	bc80      	pop	{r7}
 80050ac:	4770      	bx	lr

080050ae <LL_APB2_GRP1_ForceReset>:
  *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
  *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
  * @retval None
  */
__STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
{
 80050ae:	b480      	push	{r7}
 80050b0:	b083      	sub	sp, #12
 80050b2:	af00      	add	r7, sp, #0
 80050b4:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2RSTR, Periphs);
 80050b6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80050ba:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80050bc:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	4313      	orrs	r3, r2
 80050c4:	640b      	str	r3, [r1, #64]	; 0x40
}
 80050c6:	bf00      	nop
 80050c8:	370c      	adds	r7, #12
 80050ca:	46bd      	mov	sp, r7
 80050cc:	bc80      	pop	{r7}
 80050ce:	4770      	bx	lr

080050d0 <LL_APB2_GRP1_ReleaseReset>:
  *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
  *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
  * @retval None
  */
__STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
{
 80050d0:	b480      	push	{r7}
 80050d2:	b083      	sub	sp, #12
 80050d4:	af00      	add	r7, sp, #0
 80050d6:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB2RSTR, Periphs);
 80050d8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80050dc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	43db      	mvns	r3, r3
 80050e2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80050e6:	4013      	ands	r3, r2
 80050e8:	640b      	str	r3, [r1, #64]	; 0x40
}
 80050ea:	bf00      	nop
 80050ec:	370c      	adds	r7, #12
 80050ee:	46bd      	mov	sp, r7
 80050f0:	bc80      	pop	{r7}
 80050f2:	4770      	bx	lr

080050f4 <LL_TIM_SetPrescaler>:
  * @param  TIMx Timer instance
  * @param  Prescaler between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
{
 80050f4:	b480      	push	{r7}
 80050f6:	b083      	sub	sp, #12
 80050f8:	af00      	add	r7, sp, #0
 80050fa:	6078      	str	r0, [r7, #4]
 80050fc:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	683a      	ldr	r2, [r7, #0]
 8005102:	629a      	str	r2, [r3, #40]	; 0x28
}
 8005104:	bf00      	nop
 8005106:	370c      	adds	r7, #12
 8005108:	46bd      	mov	sp, r7
 800510a:	bc80      	pop	{r7}
 800510c:	4770      	bx	lr

0800510e <LL_TIM_SetAutoReload>:
  * @param  TIMx Timer instance
  * @param  AutoReload between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
{
 800510e:	b480      	push	{r7}
 8005110:	b083      	sub	sp, #12
 8005112:	af00      	add	r7, sp, #0
 8005114:	6078      	str	r0, [r7, #4]
 8005116:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->ARR, AutoReload);
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	683a      	ldr	r2, [r7, #0]
 800511c:	62da      	str	r2, [r3, #44]	; 0x2c
}
 800511e:	bf00      	nop
 8005120:	370c      	adds	r7, #12
 8005122:	46bd      	mov	sp, r7
 8005124:	bc80      	pop	{r7}
 8005126:	4770      	bx	lr

08005128 <LL_TIM_SetRepetitionCounter>:
  * @param  TIMx Timer instance
  * @param  RepetitionCounter between Min_Data=0 and Max_Data=255 or 65535 for advanced timer.
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
{
 8005128:	b480      	push	{r7}
 800512a:	b083      	sub	sp, #12
 800512c:	af00      	add	r7, sp, #0
 800512e:	6078      	str	r0, [r7, #4]
 8005130:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->RCR, RepetitionCounter);
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	683a      	ldr	r2, [r7, #0]
 8005136:	631a      	str	r2, [r3, #48]	; 0x30
}
 8005138:	bf00      	nop
 800513a:	370c      	adds	r7, #12
 800513c:	46bd      	mov	sp, r7
 800513e:	bc80      	pop	{r7}
 8005140:	4770      	bx	lr

08005142 <LL_TIM_OC_SetCompareCH1>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 8005142:	b480      	push	{r7}
 8005144:	b083      	sub	sp, #12
 8005146:	af00      	add	r7, sp, #0
 8005148:	6078      	str	r0, [r7, #4]
 800514a:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR1, CompareValue);
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	683a      	ldr	r2, [r7, #0]
 8005150:	635a      	str	r2, [r3, #52]	; 0x34
}
 8005152:	bf00      	nop
 8005154:	370c      	adds	r7, #12
 8005156:	46bd      	mov	sp, r7
 8005158:	bc80      	pop	{r7}
 800515a:	4770      	bx	lr

0800515c <LL_TIM_OC_SetCompareCH2>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 800515c:	b480      	push	{r7}
 800515e:	b083      	sub	sp, #12
 8005160:	af00      	add	r7, sp, #0
 8005162:	6078      	str	r0, [r7, #4]
 8005164:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR2, CompareValue);
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	683a      	ldr	r2, [r7, #0]
 800516a:	639a      	str	r2, [r3, #56]	; 0x38
}
 800516c:	bf00      	nop
 800516e:	370c      	adds	r7, #12
 8005170:	46bd      	mov	sp, r7
 8005172:	bc80      	pop	{r7}
 8005174:	4770      	bx	lr

08005176 <LL_TIM_OC_SetCompareCH3>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 8005176:	b480      	push	{r7}
 8005178:	b083      	sub	sp, #12
 800517a:	af00      	add	r7, sp, #0
 800517c:	6078      	str	r0, [r7, #4]
 800517e:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR3, CompareValue);
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	683a      	ldr	r2, [r7, #0]
 8005184:	63da      	str	r2, [r3, #60]	; 0x3c
}
 8005186:	bf00      	nop
 8005188:	370c      	adds	r7, #12
 800518a:	46bd      	mov	sp, r7
 800518c:	bc80      	pop	{r7}
 800518e:	4770      	bx	lr

08005190 <LL_TIM_OC_SetCompareCH4>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 8005190:	b480      	push	{r7}
 8005192:	b083      	sub	sp, #12
 8005194:	af00      	add	r7, sp, #0
 8005196:	6078      	str	r0, [r7, #4]
 8005198:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR4, CompareValue);
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	683a      	ldr	r2, [r7, #0]
 800519e:	641a      	str	r2, [r3, #64]	; 0x40
}
 80051a0:	bf00      	nop
 80051a2:	370c      	adds	r7, #12
 80051a4:	46bd      	mov	sp, r7
 80051a6:	bc80      	pop	{r7}
 80051a8:	4770      	bx	lr

080051aa <LL_TIM_OC_SetCompareCH5>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 80051aa:	b480      	push	{r7}
 80051ac:	b083      	sub	sp, #12
 80051ae:	af00      	add	r7, sp, #0
 80051b0:	6078      	str	r0, [r7, #4]
 80051b2:	6039      	str	r1, [r7, #0]
  MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80051b8:	0c1b      	lsrs	r3, r3, #16
 80051ba:	041b      	lsls	r3, r3, #16
 80051bc:	683a      	ldr	r2, [r7, #0]
 80051be:	431a      	orrs	r2, r3
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	659a      	str	r2, [r3, #88]	; 0x58
}
 80051c4:	bf00      	nop
 80051c6:	370c      	adds	r7, #12
 80051c8:	46bd      	mov	sp, r7
 80051ca:	bc80      	pop	{r7}
 80051cc:	4770      	bx	lr

080051ce <LL_TIM_OC_SetCompareCH6>:
  * @param  TIMx Timer instance
  * @param  CompareValue between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
{
 80051ce:	b480      	push	{r7}
 80051d0:	b083      	sub	sp, #12
 80051d2:	af00      	add	r7, sp, #0
 80051d4:	6078      	str	r0, [r7, #4]
 80051d6:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR6, CompareValue);
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	683a      	ldr	r2, [r7, #0]
 80051dc:	65da      	str	r2, [r3, #92]	; 0x5c
}
 80051de:	bf00      	nop
 80051e0:	370c      	adds	r7, #12
 80051e2:	46bd      	mov	sp, r7
 80051e4:	bc80      	pop	{r7}
 80051e6:	4770      	bx	lr

080051e8 <LL_TIM_GenerateEvent_UPDATE>:
  * @rmtoll EGR          UG            LL_TIM_GenerateEvent_UPDATE
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_GenerateEvent_UPDATE(TIM_TypeDef *TIMx)
{
 80051e8:	b480      	push	{r7}
 80051ea:	b083      	sub	sp, #12
 80051ec:	af00      	add	r7, sp, #0
 80051ee:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->EGR, TIM_EGR_UG);
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	695b      	ldr	r3, [r3, #20]
 80051f4:	f043 0201 	orr.w	r2, r3, #1
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	615a      	str	r2, [r3, #20]
}
 80051fc:	bf00      	nop
 80051fe:	370c      	adds	r7, #12
 8005200:	46bd      	mov	sp, r7
 8005202:	bc80      	pop	{r7}
 8005204:	4770      	bx	lr
	...

08005208 <LL_TIM_DeInit>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: invalid TIMx instance
  */
ErrorStatus LL_TIM_DeInit(TIM_TypeDef *TIMx)
{
 8005208:	b580      	push	{r7, lr}
 800520a:	b084      	sub	sp, #16
 800520c:	af00      	add	r7, sp, #0
 800520e:	6078      	str	r0, [r7, #4]
  ErrorStatus result = SUCCESS;
 8005210:	2301      	movs	r3, #1
 8005212:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(TIMx));

  if (TIMx == TIM1)
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	4a1c      	ldr	r2, [pc, #112]	; (8005288 <LL_TIM_DeInit+0x80>)
 8005218:	4293      	cmp	r3, r2
 800521a:	d108      	bne.n	800522e <LL_TIM_DeInit+0x26>
  {
    LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_TIM1);
 800521c:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8005220:	f7ff ff45 	bl	80050ae <LL_APB2_GRP1_ForceReset>
    LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_TIM1);
 8005224:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8005228:	f7ff ff52 	bl	80050d0 <LL_APB2_GRP1_ReleaseReset>
 800522c:	e026      	b.n	800527c <LL_TIM_DeInit+0x74>
  }
  else if (TIMx == TIM2)
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005234:	d106      	bne.n	8005244 <LL_TIM_DeInit+0x3c>
  {
    LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_TIM2);
 8005236:	2001      	movs	r0, #1
 8005238:	f7ff ff16 	bl	8005068 <LL_APB1_GRP1_ForceReset>
    LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_TIM2);
 800523c:	2001      	movs	r0, #1
 800523e:	f7ff ff24 	bl	800508a <LL_APB1_GRP1_ReleaseReset>
 8005242:	e01b      	b.n	800527c <LL_TIM_DeInit+0x74>
  }
  else if (TIMx == TIM16)
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	4a11      	ldr	r2, [pc, #68]	; (800528c <LL_TIM_DeInit+0x84>)
 8005248:	4293      	cmp	r3, r2
 800524a:	d108      	bne.n	800525e <LL_TIM_DeInit+0x56>
  {
    LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_TIM16);
 800524c:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8005250:	f7ff ff2d 	bl	80050ae <LL_APB2_GRP1_ForceReset>
    LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_TIM16);
 8005254:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8005258:	f7ff ff3a 	bl	80050d0 <LL_APB2_GRP1_ReleaseReset>
 800525c:	e00e      	b.n	800527c <LL_TIM_DeInit+0x74>
  }
  else if (TIMx == TIM17)
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	4a0b      	ldr	r2, [pc, #44]	; (8005290 <LL_TIM_DeInit+0x88>)
 8005262:	4293      	cmp	r3, r2
 8005264:	d108      	bne.n	8005278 <LL_TIM_DeInit+0x70>
  {
    LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_TIM17);
 8005266:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 800526a:	f7ff ff20 	bl	80050ae <LL_APB2_GRP1_ForceReset>
    LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_TIM17);
 800526e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8005272:	f7ff ff2d 	bl	80050d0 <LL_APB2_GRP1_ReleaseReset>
 8005276:	e001      	b.n	800527c <LL_TIM_DeInit+0x74>
  }
  else
  {
    result = ERROR;
 8005278:	2300      	movs	r3, #0
 800527a:	73fb      	strb	r3, [r7, #15]
  }

  return result;
 800527c:	7bfb      	ldrb	r3, [r7, #15]
}
 800527e:	4618      	mov	r0, r3
 8005280:	3710      	adds	r7, #16
 8005282:	46bd      	mov	sp, r7
 8005284:	bd80      	pop	{r7, pc}
 8005286:	bf00      	nop
 8005288:	40012c00 	.word	0x40012c00
 800528c:	40014400 	.word	0x40014400
 8005290:	40014800 	.word	0x40014800

08005294 <LL_TIM_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
ErrorStatus LL_TIM_Init(TIM_TypeDef *TIMx, const LL_TIM_InitTypeDef *TIM_InitStruct)
{
 8005294:	b580      	push	{r7, lr}
 8005296:	b084      	sub	sp, #16
 8005298:	af00      	add	r7, sp, #0
 800529a:	6078      	str	r0, [r7, #4]
 800529c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(TIMx));
  assert_param(IS_LL_TIM_COUNTERMODE(TIM_InitStruct->CounterMode));
  assert_param(IS_LL_TIM_CLOCKDIVISION(TIM_InitStruct->ClockDivision));

  tmpcr1 = LL_TIM_ReadReg(TIMx, CR1);
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	60fb      	str	r3, [r7, #12]

  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	4a27      	ldr	r2, [pc, #156]	; (8005344 <LL_TIM_Init+0xb0>)
 80052a8:	4293      	cmp	r3, r2
 80052aa:	d003      	beq.n	80052b4 <LL_TIM_Init+0x20>
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80052b2:	d106      	bne.n	80052c2 <LL_TIM_Init+0x2e>
  {
    /* Select the Counter Mode */
    MODIFY_REG(tmpcr1, (TIM_CR1_DIR | TIM_CR1_CMS), TIM_InitStruct->CounterMode);
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80052ba:	683b      	ldr	r3, [r7, #0]
 80052bc:	685b      	ldr	r3, [r3, #4]
 80052be:	4313      	orrs	r3, r2
 80052c0:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	4a1f      	ldr	r2, [pc, #124]	; (8005344 <LL_TIM_Init+0xb0>)
 80052c6:	4293      	cmp	r3, r2
 80052c8:	d00b      	beq.n	80052e2 <LL_TIM_Init+0x4e>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80052d0:	d007      	beq.n	80052e2 <LL_TIM_Init+0x4e>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	4a1c      	ldr	r2, [pc, #112]	; (8005348 <LL_TIM_Init+0xb4>)
 80052d6:	4293      	cmp	r3, r2
 80052d8:	d003      	beq.n	80052e2 <LL_TIM_Init+0x4e>
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	4a1b      	ldr	r2, [pc, #108]	; (800534c <LL_TIM_Init+0xb8>)
 80052de:	4293      	cmp	r3, r2
 80052e0:	d106      	bne.n	80052f0 <LL_TIM_Init+0x5c>
  {
    /* Set the clock division */
    MODIFY_REG(tmpcr1, TIM_CR1_CKD, TIM_InitStruct->ClockDivision);
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80052e8:	683b      	ldr	r3, [r7, #0]
 80052ea:	68db      	ldr	r3, [r3, #12]
 80052ec:	4313      	orrs	r3, r2
 80052ee:	60fb      	str	r3, [r7, #12]
  }

  /* Write to TIMx CR1 */
  LL_TIM_WriteReg(TIMx, CR1, tmpcr1);
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	68fa      	ldr	r2, [r7, #12]
 80052f4:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  LL_TIM_SetAutoReload(TIMx, TIM_InitStruct->Autoreload);
 80052f6:	683b      	ldr	r3, [r7, #0]
 80052f8:	689b      	ldr	r3, [r3, #8]
 80052fa:	4619      	mov	r1, r3
 80052fc:	6878      	ldr	r0, [r7, #4]
 80052fe:	f7ff ff06 	bl	800510e <LL_TIM_SetAutoReload>

  /* Set the Prescaler value */
  LL_TIM_SetPrescaler(TIMx, TIM_InitStruct->Prescaler);
 8005302:	683b      	ldr	r3, [r7, #0]
 8005304:	881b      	ldrh	r3, [r3, #0]
 8005306:	4619      	mov	r1, r3
 8005308:	6878      	ldr	r0, [r7, #4]
 800530a:	f7ff fef3 	bl	80050f4 <LL_TIM_SetPrescaler>

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	4a0c      	ldr	r2, [pc, #48]	; (8005344 <LL_TIM_Init+0xb0>)
 8005312:	4293      	cmp	r3, r2
 8005314:	d007      	beq.n	8005326 <LL_TIM_Init+0x92>
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	4a0b      	ldr	r2, [pc, #44]	; (8005348 <LL_TIM_Init+0xb4>)
 800531a:	4293      	cmp	r3, r2
 800531c:	d003      	beq.n	8005326 <LL_TIM_Init+0x92>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	4a0a      	ldr	r2, [pc, #40]	; (800534c <LL_TIM_Init+0xb8>)
 8005322:	4293      	cmp	r3, r2
 8005324:	d105      	bne.n	8005332 <LL_TIM_Init+0x9e>
  {
    /* Set the Repetition Counter value */
    LL_TIM_SetRepetitionCounter(TIMx, TIM_InitStruct->RepetitionCounter);
 8005326:	683b      	ldr	r3, [r7, #0]
 8005328:	691b      	ldr	r3, [r3, #16]
 800532a:	4619      	mov	r1, r3
 800532c:	6878      	ldr	r0, [r7, #4]
 800532e:	f7ff fefb 	bl	8005128 <LL_TIM_SetRepetitionCounter>
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter value (if applicable) immediately */
  LL_TIM_GenerateEvent_UPDATE(TIMx);
 8005332:	6878      	ldr	r0, [r7, #4]
 8005334:	f7ff ff58 	bl	80051e8 <LL_TIM_GenerateEvent_UPDATE>

  return SUCCESS;
 8005338:	2301      	movs	r3, #1
}
 800533a:	4618      	mov	r0, r3
 800533c:	3710      	adds	r7, #16
 800533e:	46bd      	mov	sp, r7
 8005340:	bd80      	pop	{r7, pc}
 8005342:	bf00      	nop
 8005344:	40012c00 	.word	0x40012c00
 8005348:	40014400 	.word	0x40014400
 800534c:	40014800 	.word	0x40014800

08005350 <LL_TIM_OC_Init>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx output channel is initialized
  *          - ERROR: TIMx output channel is not initialized
  */
ErrorStatus LL_TIM_OC_Init(TIM_TypeDef *TIMx, uint32_t Channel, const LL_TIM_OC_InitTypeDef *TIM_OC_InitStruct)
{
 8005350:	b580      	push	{r7, lr}
 8005352:	b086      	sub	sp, #24
 8005354:	af00      	add	r7, sp, #0
 8005356:	60f8      	str	r0, [r7, #12]
 8005358:	60b9      	str	r1, [r7, #8]
 800535a:	607a      	str	r2, [r7, #4]
  ErrorStatus result = ERROR;
 800535c:	2300      	movs	r3, #0
 800535e:	75fb      	strb	r3, [r7, #23]

  switch (Channel)
 8005360:	68bb      	ldr	r3, [r7, #8]
 8005362:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005366:	d045      	beq.n	80053f4 <LL_TIM_OC_Init+0xa4>
 8005368:	68bb      	ldr	r3, [r7, #8]
 800536a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800536e:	d848      	bhi.n	8005402 <LL_TIM_OC_Init+0xb2>
 8005370:	68bb      	ldr	r3, [r7, #8]
 8005372:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005376:	d036      	beq.n	80053e6 <LL_TIM_OC_Init+0x96>
 8005378:	68bb      	ldr	r3, [r7, #8]
 800537a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800537e:	d840      	bhi.n	8005402 <LL_TIM_OC_Init+0xb2>
 8005380:	68bb      	ldr	r3, [r7, #8]
 8005382:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005386:	d027      	beq.n	80053d8 <LL_TIM_OC_Init+0x88>
 8005388:	68bb      	ldr	r3, [r7, #8]
 800538a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800538e:	d838      	bhi.n	8005402 <LL_TIM_OC_Init+0xb2>
 8005390:	68bb      	ldr	r3, [r7, #8]
 8005392:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8005396:	d018      	beq.n	80053ca <LL_TIM_OC_Init+0x7a>
 8005398:	68bb      	ldr	r3, [r7, #8]
 800539a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800539e:	d830      	bhi.n	8005402 <LL_TIM_OC_Init+0xb2>
 80053a0:	68bb      	ldr	r3, [r7, #8]
 80053a2:	2b01      	cmp	r3, #1
 80053a4:	d003      	beq.n	80053ae <LL_TIM_OC_Init+0x5e>
 80053a6:	68bb      	ldr	r3, [r7, #8]
 80053a8:	2b10      	cmp	r3, #16
 80053aa:	d007      	beq.n	80053bc <LL_TIM_OC_Init+0x6c>
      break;
    case LL_TIM_CHANNEL_CH6:
      result = OC6Config(TIMx, TIM_OC_InitStruct);
      break;
    default:
      break;
 80053ac:	e029      	b.n	8005402 <LL_TIM_OC_Init+0xb2>
      result = OC1Config(TIMx, TIM_OC_InitStruct);
 80053ae:	6879      	ldr	r1, [r7, #4]
 80053b0:	68f8      	ldr	r0, [r7, #12]
 80053b2:	f000 f82d 	bl	8005410 <OC1Config>
 80053b6:	4603      	mov	r3, r0
 80053b8:	75fb      	strb	r3, [r7, #23]
      break;
 80053ba:	e023      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      result = OC2Config(TIMx, TIM_OC_InitStruct);
 80053bc:	6879      	ldr	r1, [r7, #4]
 80053be:	68f8      	ldr	r0, [r7, #12]
 80053c0:	f000 f89a 	bl	80054f8 <OC2Config>
 80053c4:	4603      	mov	r3, r0
 80053c6:	75fb      	strb	r3, [r7, #23]
      break;
 80053c8:	e01c      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      result = OC3Config(TIMx, TIM_OC_InitStruct);
 80053ca:	6879      	ldr	r1, [r7, #4]
 80053cc:	68f8      	ldr	r0, [r7, #12]
 80053ce:	f000 f90b 	bl	80055e8 <OC3Config>
 80053d2:	4603      	mov	r3, r0
 80053d4:	75fb      	strb	r3, [r7, #23]
      break;
 80053d6:	e015      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      result = OC4Config(TIMx, TIM_OC_InitStruct);
 80053d8:	6879      	ldr	r1, [r7, #4]
 80053da:	68f8      	ldr	r0, [r7, #12]
 80053dc:	f000 f97c 	bl	80056d8 <OC4Config>
 80053e0:	4603      	mov	r3, r0
 80053e2:	75fb      	strb	r3, [r7, #23]
      break;
 80053e4:	e00e      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      result = OC5Config(TIMx, TIM_OC_InitStruct);
 80053e6:	6879      	ldr	r1, [r7, #4]
 80053e8:	68f8      	ldr	r0, [r7, #12]
 80053ea:	f000 f9d5 	bl	8005798 <OC5Config>
 80053ee:	4603      	mov	r3, r0
 80053f0:	75fb      	strb	r3, [r7, #23]
      break;
 80053f2:	e007      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      result = OC6Config(TIMx, TIM_OC_InitStruct);
 80053f4:	6879      	ldr	r1, [r7, #4]
 80053f6:	68f8      	ldr	r0, [r7, #12]
 80053f8:	f000 fa26 	bl	8005848 <OC6Config>
 80053fc:	4603      	mov	r3, r0
 80053fe:	75fb      	strb	r3, [r7, #23]
      break;
 8005400:	e000      	b.n	8005404 <LL_TIM_OC_Init+0xb4>
      break;
 8005402:	bf00      	nop
  }

  return result;
 8005404:	7dfb      	ldrb	r3, [r7, #23]
}
 8005406:	4618      	mov	r0, r3
 8005408:	3718      	adds	r7, #24
 800540a:	46bd      	mov	sp, r7
 800540c:	bd80      	pop	{r7, pc}
	...

08005410 <OC1Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC1Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 8005410:	b580      	push	{r7, lr}
 8005412:	b086      	sub	sp, #24
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
 8005418:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));

  /* Disable the Channel 1: Reset the CC1E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC1E);
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	6a1b      	ldr	r3, [r3, #32]
 800541e:	f023 0201 	bic.w	r2, r3, #1
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = LL_TIM_ReadReg(TIMx, CCER);
 8005426:	687b      	ldr	r3, [r7, #4]
 8005428:	6a1b      	ldr	r3, [r3, #32]
 800542a:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CR2 register value */
  tmpcr2 = LL_TIM_ReadReg(TIMx, CR2);
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	685b      	ldr	r3, [r3, #4]
 8005430:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = LL_TIM_ReadReg(TIMx, CCMR1);
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	699b      	ldr	r3, [r3, #24]
 8005436:	60fb      	str	r3, [r7, #12]

  /* Reset Capture/Compare selection Bits */
  CLEAR_BIT(tmpccmr1, TIM_CCMR1_CC1S);
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	f023 0303 	bic.w	r3, r3, #3
 800543e:	60fb      	str	r3, [r7, #12]

  /* Set the Output Compare Mode */
  MODIFY_REG(tmpccmr1, TIM_CCMR1_OC1M, TIM_OCInitStruct->OCMode);
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005446:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800544a:	683a      	ldr	r2, [r7, #0]
 800544c:	6812      	ldr	r2, [r2, #0]
 800544e:	4313      	orrs	r3, r2
 8005450:	60fb      	str	r3, [r7, #12]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC1P, TIM_OCInitStruct->OCPolarity);
 8005452:	697b      	ldr	r3, [r7, #20]
 8005454:	f023 0202 	bic.w	r2, r3, #2
 8005458:	683b      	ldr	r3, [r7, #0]
 800545a:	691b      	ldr	r3, [r3, #16]
 800545c:	4313      	orrs	r3, r2
 800545e:	617b      	str	r3, [r7, #20]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC1E, TIM_OCInitStruct->OCState);
 8005460:	697b      	ldr	r3, [r7, #20]
 8005462:	f023 0201 	bic.w	r2, r3, #1
 8005466:	683b      	ldr	r3, [r7, #0]
 8005468:	685b      	ldr	r3, [r3, #4]
 800546a:	4313      	orrs	r3, r2
 800546c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	4a1e      	ldr	r2, [pc, #120]	; (80054ec <OC1Config+0xdc>)
 8005472:	4293      	cmp	r3, r2
 8005474:	d007      	beq.n	8005486 <OC1Config+0x76>
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	4a1d      	ldr	r2, [pc, #116]	; (80054f0 <OC1Config+0xe0>)
 800547a:	4293      	cmp	r3, r2
 800547c:	d003      	beq.n	8005486 <OC1Config+0x76>
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	4a1c      	ldr	r2, [pc, #112]	; (80054f4 <OC1Config+0xe4>)
 8005482:	4293      	cmp	r3, r2
 8005484:	d11e      	bne.n	80054c4 <OC1Config+0xb4>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the complementary output Polarity */
    MODIFY_REG(tmpccer, TIM_CCER_CC1NP, TIM_OCInitStruct->OCNPolarity << 2U);
 8005486:	697b      	ldr	r3, [r7, #20]
 8005488:	f023 0208 	bic.w	r2, r3, #8
 800548c:	683b      	ldr	r3, [r7, #0]
 800548e:	695b      	ldr	r3, [r3, #20]
 8005490:	009b      	lsls	r3, r3, #2
 8005492:	4313      	orrs	r3, r2
 8005494:	617b      	str	r3, [r7, #20]

    /* Set the complementary output State */
    MODIFY_REG(tmpccer, TIM_CCER_CC1NE, TIM_OCInitStruct->OCNState << 2U);
 8005496:	697b      	ldr	r3, [r7, #20]
 8005498:	f023 0204 	bic.w	r2, r3, #4
 800549c:	683b      	ldr	r3, [r7, #0]
 800549e:	689b      	ldr	r3, [r3, #8]
 80054a0:	009b      	lsls	r3, r3, #2
 80054a2:	4313      	orrs	r3, r2
 80054a4:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS1, TIM_OCInitStruct->OCIdleState);
 80054a6:	693b      	ldr	r3, [r7, #16]
 80054a8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80054ac:	683b      	ldr	r3, [r7, #0]
 80054ae:	699b      	ldr	r3, [r3, #24]
 80054b0:	4313      	orrs	r3, r2
 80054b2:	613b      	str	r3, [r7, #16]

    /* Set the complementary output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS1N, TIM_OCInitStruct->OCNIdleState << 1U);
 80054b4:	693b      	ldr	r3, [r7, #16]
 80054b6:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 80054ba:	683b      	ldr	r3, [r7, #0]
 80054bc:	69db      	ldr	r3, [r3, #28]
 80054be:	005b      	lsls	r3, r3, #1
 80054c0:	4313      	orrs	r3, r2
 80054c2:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  LL_TIM_WriteReg(TIMx, CR2, tmpcr2);
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	693a      	ldr	r2, [r7, #16]
 80054c8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  LL_TIM_WriteReg(TIMx, CCMR1, tmpccmr1);
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	68fa      	ldr	r2, [r7, #12]
 80054ce:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH1(TIMx, TIM_OCInitStruct->CompareValue);
 80054d0:	683b      	ldr	r3, [r7, #0]
 80054d2:	68db      	ldr	r3, [r3, #12]
 80054d4:	4619      	mov	r1, r3
 80054d6:	6878      	ldr	r0, [r7, #4]
 80054d8:	f7ff fe33 	bl	8005142 <LL_TIM_OC_SetCompareCH1>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	697a      	ldr	r2, [r7, #20]
 80054e0:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 80054e2:	2301      	movs	r3, #1
}
 80054e4:	4618      	mov	r0, r3
 80054e6:	3718      	adds	r7, #24
 80054e8:	46bd      	mov	sp, r7
 80054ea:	bd80      	pop	{r7, pc}
 80054ec:	40012c00 	.word	0x40012c00
 80054f0:	40014400 	.word	0x40014400
 80054f4:	40014800 	.word	0x40014800

080054f8 <OC2Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC2Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 80054f8:	b580      	push	{r7, lr}
 80054fa:	b086      	sub	sp, #24
 80054fc:	af00      	add	r7, sp, #0
 80054fe:	6078      	str	r0, [r7, #4]
 8005500:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));

  /* Disable the Channel 2: Reset the CC2E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC2E);
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	6a1b      	ldr	r3, [r3, #32]
 8005506:	f023 0210 	bic.w	r2, r3, #16
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer =  LL_TIM_ReadReg(TIMx, CCER);
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	6a1b      	ldr	r3, [r3, #32]
 8005512:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CR2 register value */
  tmpcr2 = LL_TIM_ReadReg(TIMx, CR2);
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	685b      	ldr	r3, [r3, #4]
 8005518:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = LL_TIM_ReadReg(TIMx, CCMR1);
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	699b      	ldr	r3, [r3, #24]
 800551e:	60fb      	str	r3, [r7, #12]

  /* Reset Capture/Compare selection Bits */
  CLEAR_BIT(tmpccmr1, TIM_CCMR1_CC2S);
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005526:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  MODIFY_REG(tmpccmr1, TIM_CCMR1_OC2M, TIM_OCInitStruct->OCMode << 8U);
 8005528:	68fb      	ldr	r3, [r7, #12]
 800552a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800552e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005532:	683a      	ldr	r2, [r7, #0]
 8005534:	6812      	ldr	r2, [r2, #0]
 8005536:	0212      	lsls	r2, r2, #8
 8005538:	4313      	orrs	r3, r2
 800553a:	60fb      	str	r3, [r7, #12]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC2P, TIM_OCInitStruct->OCPolarity << 4U);
 800553c:	697b      	ldr	r3, [r7, #20]
 800553e:	f023 0220 	bic.w	r2, r3, #32
 8005542:	683b      	ldr	r3, [r7, #0]
 8005544:	691b      	ldr	r3, [r3, #16]
 8005546:	011b      	lsls	r3, r3, #4
 8005548:	4313      	orrs	r3, r2
 800554a:	617b      	str	r3, [r7, #20]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC2E, TIM_OCInitStruct->OCState << 4U);
 800554c:	697b      	ldr	r3, [r7, #20]
 800554e:	f023 0210 	bic.w	r2, r3, #16
 8005552:	683b      	ldr	r3, [r7, #0]
 8005554:	685b      	ldr	r3, [r3, #4]
 8005556:	011b      	lsls	r3, r3, #4
 8005558:	4313      	orrs	r3, r2
 800555a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	4a1f      	ldr	r2, [pc, #124]	; (80055dc <OC2Config+0xe4>)
 8005560:	4293      	cmp	r3, r2
 8005562:	d007      	beq.n	8005574 <OC2Config+0x7c>
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	4a1e      	ldr	r2, [pc, #120]	; (80055e0 <OC2Config+0xe8>)
 8005568:	4293      	cmp	r3, r2
 800556a:	d003      	beq.n	8005574 <OC2Config+0x7c>
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	4a1d      	ldr	r2, [pc, #116]	; (80055e4 <OC2Config+0xec>)
 8005570:	4293      	cmp	r3, r2
 8005572:	d11f      	bne.n	80055b4 <OC2Config+0xbc>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the complementary output Polarity */
    MODIFY_REG(tmpccer, TIM_CCER_CC2NP, TIM_OCInitStruct->OCNPolarity << 6U);
 8005574:	697b      	ldr	r3, [r7, #20]
 8005576:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800557a:	683b      	ldr	r3, [r7, #0]
 800557c:	695b      	ldr	r3, [r3, #20]
 800557e:	019b      	lsls	r3, r3, #6
 8005580:	4313      	orrs	r3, r2
 8005582:	617b      	str	r3, [r7, #20]

    /* Set the complementary output State */
    MODIFY_REG(tmpccer, TIM_CCER_CC2NE, TIM_OCInitStruct->OCNState << 6U);
 8005584:	697b      	ldr	r3, [r7, #20]
 8005586:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 800558a:	683b      	ldr	r3, [r7, #0]
 800558c:	689b      	ldr	r3, [r3, #8]
 800558e:	019b      	lsls	r3, r3, #6
 8005590:	4313      	orrs	r3, r2
 8005592:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS2, TIM_OCInitStruct->OCIdleState << 2U);
 8005594:	693b      	ldr	r3, [r7, #16]
 8005596:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800559a:	683b      	ldr	r3, [r7, #0]
 800559c:	699b      	ldr	r3, [r3, #24]
 800559e:	009b      	lsls	r3, r3, #2
 80055a0:	4313      	orrs	r3, r2
 80055a2:	613b      	str	r3, [r7, #16]

    /* Set the complementary output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS2N, TIM_OCInitStruct->OCNIdleState << 3U);
 80055a4:	693b      	ldr	r3, [r7, #16]
 80055a6:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80055aa:	683b      	ldr	r3, [r7, #0]
 80055ac:	69db      	ldr	r3, [r3, #28]
 80055ae:	00db      	lsls	r3, r3, #3
 80055b0:	4313      	orrs	r3, r2
 80055b2:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  LL_TIM_WriteReg(TIMx, CR2, tmpcr2);
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	693a      	ldr	r2, [r7, #16]
 80055b8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  LL_TIM_WriteReg(TIMx, CCMR1, tmpccmr1);
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	68fa      	ldr	r2, [r7, #12]
 80055be:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH2(TIMx, TIM_OCInitStruct->CompareValue);
 80055c0:	683b      	ldr	r3, [r7, #0]
 80055c2:	68db      	ldr	r3, [r3, #12]
 80055c4:	4619      	mov	r1, r3
 80055c6:	6878      	ldr	r0, [r7, #4]
 80055c8:	f7ff fdc8 	bl	800515c <LL_TIM_OC_SetCompareCH2>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	697a      	ldr	r2, [r7, #20]
 80055d0:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 80055d2:	2301      	movs	r3, #1
}
 80055d4:	4618      	mov	r0, r3
 80055d6:	3718      	adds	r7, #24
 80055d8:	46bd      	mov	sp, r7
 80055da:	bd80      	pop	{r7, pc}
 80055dc:	40012c00 	.word	0x40012c00
 80055e0:	40014400 	.word	0x40014400
 80055e4:	40014800 	.word	0x40014800

080055e8 <OC3Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC3Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 80055e8:	b580      	push	{r7, lr}
 80055ea:	b086      	sub	sp, #24
 80055ec:	af00      	add	r7, sp, #0
 80055ee:	6078      	str	r0, [r7, #4]
 80055f0:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));

  /* Disable the Channel 3: Reset the CC3E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC3E);
 80055f2:	687b      	ldr	r3, [r7, #4]
 80055f4:	6a1b      	ldr	r3, [r3, #32]
 80055f6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer =  LL_TIM_ReadReg(TIMx, CCER);
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	6a1b      	ldr	r3, [r3, #32]
 8005602:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CR2 register value */
  tmpcr2 = LL_TIM_ReadReg(TIMx, CR2);
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	685b      	ldr	r3, [r3, #4]
 8005608:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = LL_TIM_ReadReg(TIMx, CCMR2);
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	69db      	ldr	r3, [r3, #28]
 800560e:	60fb      	str	r3, [r7, #12]

  /* Reset Capture/Compare selection Bits */
  CLEAR_BIT(tmpccmr2, TIM_CCMR2_CC3S);
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	f023 0303 	bic.w	r3, r3, #3
 8005616:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  MODIFY_REG(tmpccmr2, TIM_CCMR2_OC3M, TIM_OCInitStruct->OCMode);
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800561e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005622:	683a      	ldr	r2, [r7, #0]
 8005624:	6812      	ldr	r2, [r2, #0]
 8005626:	4313      	orrs	r3, r2
 8005628:	60fb      	str	r3, [r7, #12]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC3P, TIM_OCInitStruct->OCPolarity << 8U);
 800562a:	697b      	ldr	r3, [r7, #20]
 800562c:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8005630:	683b      	ldr	r3, [r7, #0]
 8005632:	691b      	ldr	r3, [r3, #16]
 8005634:	021b      	lsls	r3, r3, #8
 8005636:	4313      	orrs	r3, r2
 8005638:	617b      	str	r3, [r7, #20]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC3E, TIM_OCInitStruct->OCState << 8U);
 800563a:	697b      	ldr	r3, [r7, #20]
 800563c:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005640:	683b      	ldr	r3, [r7, #0]
 8005642:	685b      	ldr	r3, [r3, #4]
 8005644:	021b      	lsls	r3, r3, #8
 8005646:	4313      	orrs	r3, r2
 8005648:	617b      	str	r3, [r7, #20]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	4a1f      	ldr	r2, [pc, #124]	; (80056cc <OC3Config+0xe4>)
 800564e:	4293      	cmp	r3, r2
 8005650:	d007      	beq.n	8005662 <OC3Config+0x7a>
 8005652:	687b      	ldr	r3, [r7, #4]
 8005654:	4a1e      	ldr	r2, [pc, #120]	; (80056d0 <OC3Config+0xe8>)
 8005656:	4293      	cmp	r3, r2
 8005658:	d003      	beq.n	8005662 <OC3Config+0x7a>
 800565a:	687b      	ldr	r3, [r7, #4]
 800565c:	4a1d      	ldr	r2, [pc, #116]	; (80056d4 <OC3Config+0xec>)
 800565e:	4293      	cmp	r3, r2
 8005660:	d11f      	bne.n	80056a2 <OC3Config+0xba>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the complementary output Polarity */
    MODIFY_REG(tmpccer, TIM_CCER_CC3NP, TIM_OCInitStruct->OCNPolarity << 10U);
 8005662:	697b      	ldr	r3, [r7, #20]
 8005664:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8005668:	683b      	ldr	r3, [r7, #0]
 800566a:	695b      	ldr	r3, [r3, #20]
 800566c:	029b      	lsls	r3, r3, #10
 800566e:	4313      	orrs	r3, r2
 8005670:	617b      	str	r3, [r7, #20]

    /* Set the complementary output State */
    MODIFY_REG(tmpccer, TIM_CCER_CC3NE, TIM_OCInitStruct->OCNState << 10U);
 8005672:	697b      	ldr	r3, [r7, #20]
 8005674:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8005678:	683b      	ldr	r3, [r7, #0]
 800567a:	689b      	ldr	r3, [r3, #8]
 800567c:	029b      	lsls	r3, r3, #10
 800567e:	4313      	orrs	r3, r2
 8005680:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS3, TIM_OCInitStruct->OCIdleState << 4U);
 8005682:	693b      	ldr	r3, [r7, #16]
 8005684:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005688:	683b      	ldr	r3, [r7, #0]
 800568a:	699b      	ldr	r3, [r3, #24]
 800568c:	011b      	lsls	r3, r3, #4
 800568e:	4313      	orrs	r3, r2
 8005690:	613b      	str	r3, [r7, #16]

    /* Set the complementary output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS3N, TIM_OCInitStruct->OCNIdleState << 5U);
 8005692:	693b      	ldr	r3, [r7, #16]
 8005694:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8005698:	683b      	ldr	r3, [r7, #0]
 800569a:	69db      	ldr	r3, [r3, #28]
 800569c:	015b      	lsls	r3, r3, #5
 800569e:	4313      	orrs	r3, r2
 80056a0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  LL_TIM_WriteReg(TIMx, CR2, tmpcr2);
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	693a      	ldr	r2, [r7, #16]
 80056a6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  LL_TIM_WriteReg(TIMx, CCMR2, tmpccmr2);
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	68fa      	ldr	r2, [r7, #12]
 80056ac:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH3(TIMx, TIM_OCInitStruct->CompareValue);
 80056ae:	683b      	ldr	r3, [r7, #0]
 80056b0:	68db      	ldr	r3, [r3, #12]
 80056b2:	4619      	mov	r1, r3
 80056b4:	6878      	ldr	r0, [r7, #4]
 80056b6:	f7ff fd5e 	bl	8005176 <LL_TIM_OC_SetCompareCH3>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	697a      	ldr	r2, [r7, #20]
 80056be:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 80056c0:	2301      	movs	r3, #1
}
 80056c2:	4618      	mov	r0, r3
 80056c4:	3718      	adds	r7, #24
 80056c6:	46bd      	mov	sp, r7
 80056c8:	bd80      	pop	{r7, pc}
 80056ca:	bf00      	nop
 80056cc:	40012c00 	.word	0x40012c00
 80056d0:	40014400 	.word	0x40014400
 80056d4:	40014800 	.word	0x40014800

080056d8 <OC4Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC4Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 80056d8:	b580      	push	{r7, lr}
 80056da:	b086      	sub	sp, #24
 80056dc:	af00      	add	r7, sp, #0
 80056de:	6078      	str	r0, [r7, #4]
 80056e0:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));

  /* Disable the Channel 4: Reset the CC4E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC4E);
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	6a1b      	ldr	r3, [r3, #32]
 80056e6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = LL_TIM_ReadReg(TIMx, CCER);
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	6a1b      	ldr	r3, [r3, #32]
 80056f2:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  LL_TIM_ReadReg(TIMx, CR2);
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	685b      	ldr	r3, [r3, #4]
 80056f8:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = LL_TIM_ReadReg(TIMx, CCMR2);
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	69db      	ldr	r3, [r3, #28]
 80056fe:	60fb      	str	r3, [r7, #12]

  /* Reset Capture/Compare selection Bits */
  CLEAR_BIT(tmpccmr2, TIM_CCMR2_CC4S);
 8005700:	68fb      	ldr	r3, [r7, #12]
 8005702:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005706:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  MODIFY_REG(tmpccmr2, TIM_CCMR2_OC4M, TIM_OCInitStruct->OCMode << 8U);
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800570e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005712:	683a      	ldr	r2, [r7, #0]
 8005714:	6812      	ldr	r2, [r2, #0]
 8005716:	0212      	lsls	r2, r2, #8
 8005718:	4313      	orrs	r3, r2
 800571a:	60fb      	str	r3, [r7, #12]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC4P, TIM_OCInitStruct->OCPolarity << 12U);
 800571c:	693b      	ldr	r3, [r7, #16]
 800571e:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8005722:	683b      	ldr	r3, [r7, #0]
 8005724:	691b      	ldr	r3, [r3, #16]
 8005726:	031b      	lsls	r3, r3, #12
 8005728:	4313      	orrs	r3, r2
 800572a:	613b      	str	r3, [r7, #16]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC4E, TIM_OCInitStruct->OCState << 12U);
 800572c:	693b      	ldr	r3, [r7, #16]
 800572e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005732:	683b      	ldr	r3, [r7, #0]
 8005734:	685b      	ldr	r3, [r3, #4]
 8005736:	031b      	lsls	r3, r3, #12
 8005738:	4313      	orrs	r3, r2
 800573a:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	4a13      	ldr	r2, [pc, #76]	; (800578c <OC4Config+0xb4>)
 8005740:	4293      	cmp	r3, r2
 8005742:	d007      	beq.n	8005754 <OC4Config+0x7c>
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	4a12      	ldr	r2, [pc, #72]	; (8005790 <OC4Config+0xb8>)
 8005748:	4293      	cmp	r3, r2
 800574a:	d003      	beq.n	8005754 <OC4Config+0x7c>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	4a11      	ldr	r2, [pc, #68]	; (8005794 <OC4Config+0xbc>)
 8005750:	4293      	cmp	r3, r2
 8005752:	d107      	bne.n	8005764 <OC4Config+0x8c>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the Output Idle state */
    MODIFY_REG(tmpcr2, TIM_CR2_OIS4, TIM_OCInitStruct->OCIdleState << 6U);
 8005754:	697b      	ldr	r3, [r7, #20]
 8005756:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800575a:	683b      	ldr	r3, [r7, #0]
 800575c:	699b      	ldr	r3, [r3, #24]
 800575e:	019b      	lsls	r3, r3, #6
 8005760:	4313      	orrs	r3, r2
 8005762:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  LL_TIM_WriteReg(TIMx, CR2, tmpcr2);
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	697a      	ldr	r2, [r7, #20]
 8005768:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  LL_TIM_WriteReg(TIMx, CCMR2, tmpccmr2);
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	68fa      	ldr	r2, [r7, #12]
 800576e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH4(TIMx, TIM_OCInitStruct->CompareValue);
 8005770:	683b      	ldr	r3, [r7, #0]
 8005772:	68db      	ldr	r3, [r3, #12]
 8005774:	4619      	mov	r1, r3
 8005776:	6878      	ldr	r0, [r7, #4]
 8005778:	f7ff fd0a 	bl	8005190 <LL_TIM_OC_SetCompareCH4>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	693a      	ldr	r2, [r7, #16]
 8005780:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 8005782:	2301      	movs	r3, #1
}
 8005784:	4618      	mov	r0, r3
 8005786:	3718      	adds	r7, #24
 8005788:	46bd      	mov	sp, r7
 800578a:	bd80      	pop	{r7, pc}
 800578c:	40012c00 	.word	0x40012c00
 8005790:	40014400 	.word	0x40014400
 8005794:	40014800 	.word	0x40014800

08005798 <OC5Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC5Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 8005798:	b580      	push	{r7, lr}
 800579a:	b084      	sub	sp, #16
 800579c:	af00      	add	r7, sp, #0
 800579e:	6078      	str	r0, [r7, #4]
 80057a0:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));

  /* Disable the Channel 5: Reset the CC5E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC5E);
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	6a1b      	ldr	r3, [r3, #32]
 80057a6:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = LL_TIM_ReadReg(TIMx, CCER);
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	6a1b      	ldr	r3, [r3, #32]
 80057b2:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx CCMR3 register value */
  tmpccmr3 = LL_TIM_ReadReg(TIMx, CCMR3);
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80057b8:	60bb      	str	r3, [r7, #8]

  /* Select the Output Compare Mode */
  MODIFY_REG(tmpccmr3, TIM_CCMR3_OC5M, TIM_OCInitStruct->OCMode);
 80057ba:	68bb      	ldr	r3, [r7, #8]
 80057bc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80057c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80057c4:	683a      	ldr	r2, [r7, #0]
 80057c6:	6812      	ldr	r2, [r2, #0]
 80057c8:	4313      	orrs	r3, r2
 80057ca:	60bb      	str	r3, [r7, #8]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC5P, TIM_OCInitStruct->OCPolarity << 16U);
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80057d2:	683b      	ldr	r3, [r7, #0]
 80057d4:	691b      	ldr	r3, [r3, #16]
 80057d6:	041b      	lsls	r3, r3, #16
 80057d8:	4313      	orrs	r3, r2
 80057da:	60fb      	str	r3, [r7, #12]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC5E, TIM_OCInitStruct->OCState << 16U);
 80057dc:	68fb      	ldr	r3, [r7, #12]
 80057de:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80057e2:	683b      	ldr	r3, [r7, #0]
 80057e4:	685b      	ldr	r3, [r3, #4]
 80057e6:	041b      	lsls	r3, r3, #16
 80057e8:	4313      	orrs	r3, r2
 80057ea:	60fb      	str	r3, [r7, #12]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	4a13      	ldr	r2, [pc, #76]	; (800583c <OC5Config+0xa4>)
 80057f0:	4293      	cmp	r3, r2
 80057f2:	d007      	beq.n	8005804 <OC5Config+0x6c>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	4a12      	ldr	r2, [pc, #72]	; (8005840 <OC5Config+0xa8>)
 80057f8:	4293      	cmp	r3, r2
 80057fa:	d003      	beq.n	8005804 <OC5Config+0x6c>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	4a11      	ldr	r2, [pc, #68]	; (8005844 <OC5Config+0xac>)
 8005800:	4293      	cmp	r3, r2
 8005802:	d109      	bne.n	8005818 <OC5Config+0x80>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the Output Idle state */
    MODIFY_REG(TIMx->CR2, TIM_CR2_OIS5, TIM_OCInitStruct->OCIdleState << 8U);
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	685b      	ldr	r3, [r3, #4]
 8005808:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800580c:	683b      	ldr	r3, [r7, #0]
 800580e:	699b      	ldr	r3, [r3, #24]
 8005810:	021b      	lsls	r3, r3, #8
 8005812:	431a      	orrs	r2, r3
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	605a      	str	r2, [r3, #4]

  }

  /* Write to TIMx CCMR3 */
  LL_TIM_WriteReg(TIMx, CCMR3, tmpccmr3);
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	68ba      	ldr	r2, [r7, #8]
 800581c:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH5(TIMx, TIM_OCInitStruct->CompareValue);
 800581e:	683b      	ldr	r3, [r7, #0]
 8005820:	68db      	ldr	r3, [r3, #12]
 8005822:	4619      	mov	r1, r3
 8005824:	6878      	ldr	r0, [r7, #4]
 8005826:	f7ff fcc0 	bl	80051aa <LL_TIM_OC_SetCompareCH5>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	68fa      	ldr	r2, [r7, #12]
 800582e:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 8005830:	2301      	movs	r3, #1
}
 8005832:	4618      	mov	r0, r3
 8005834:	3710      	adds	r7, #16
 8005836:	46bd      	mov	sp, r7
 8005838:	bd80      	pop	{r7, pc}
 800583a:	bf00      	nop
 800583c:	40012c00 	.word	0x40012c00
 8005840:	40014400 	.word	0x40014400
 8005844:	40014800 	.word	0x40014800

08005848 <OC6Config>:
  * @retval An ErrorStatus enumeration value:
  *          - SUCCESS: TIMx registers are de-initialized
  *          - ERROR: not applicable
  */
static ErrorStatus OC6Config(TIM_TypeDef *TIMx, const LL_TIM_OC_InitTypeDef *TIM_OCInitStruct)
{
 8005848:	b580      	push	{r7, lr}
 800584a:	b084      	sub	sp, #16
 800584c:	af00      	add	r7, sp, #0
 800584e:	6078      	str	r0, [r7, #4]
 8005850:	6039      	str	r1, [r7, #0]
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCPolarity));
  assert_param(IS_LL_TIM_OCPOLARITY(TIM_OCInitStruct->OCNPolarity));
  assert_param(IS_LL_TIM_OCSTATE(TIM_OCInitStruct->OCNState));

  /* Disable the Channel 5: Reset the CC6E Bit */
  CLEAR_BIT(TIMx->CCER, TIM_CCER_CC6E);
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	6a1b      	ldr	r3, [r3, #32]
 8005856:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = LL_TIM_ReadReg(TIMx, CCER);
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	6a1b      	ldr	r3, [r3, #32]
 8005862:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx CCMR3 register value */
  tmpccmr3 = LL_TIM_ReadReg(TIMx, CCMR3);
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005868:	60bb      	str	r3, [r7, #8]

  /* Select the Output Compare Mode */
  MODIFY_REG(tmpccmr3, TIM_CCMR3_OC6M, TIM_OCInitStruct->OCMode << 8U);
 800586a:	68bb      	ldr	r3, [r7, #8]
 800586c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005870:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005874:	683a      	ldr	r2, [r7, #0]
 8005876:	6812      	ldr	r2, [r2, #0]
 8005878:	0212      	lsls	r2, r2, #8
 800587a:	4313      	orrs	r3, r2
 800587c:	60bb      	str	r3, [r7, #8]

  /* Set the Output Compare Polarity */
  MODIFY_REG(tmpccer, TIM_CCER_CC6P, TIM_OCInitStruct->OCPolarity << 20U);
 800587e:	68fb      	ldr	r3, [r7, #12]
 8005880:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8005884:	683b      	ldr	r3, [r7, #0]
 8005886:	691b      	ldr	r3, [r3, #16]
 8005888:	051b      	lsls	r3, r3, #20
 800588a:	4313      	orrs	r3, r2
 800588c:	60fb      	str	r3, [r7, #12]

  /* Set the Output State */
  MODIFY_REG(tmpccer, TIM_CCER_CC6E, TIM_OCInitStruct->OCState << 20U);
 800588e:	68fb      	ldr	r3, [r7, #12]
 8005890:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8005894:	683b      	ldr	r3, [r7, #0]
 8005896:	685b      	ldr	r3, [r3, #4]
 8005898:	051b      	lsls	r3, r3, #20
 800589a:	4313      	orrs	r3, r2
 800589c:	60fb      	str	r3, [r7, #12]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800589e:	687b      	ldr	r3, [r7, #4]
 80058a0:	4a12      	ldr	r2, [pc, #72]	; (80058ec <OC6Config+0xa4>)
 80058a2:	4293      	cmp	r3, r2
 80058a4:	d007      	beq.n	80058b6 <OC6Config+0x6e>
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	4a11      	ldr	r2, [pc, #68]	; (80058f0 <OC6Config+0xa8>)
 80058aa:	4293      	cmp	r3, r2
 80058ac:	d003      	beq.n	80058b6 <OC6Config+0x6e>
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	4a10      	ldr	r2, [pc, #64]	; (80058f4 <OC6Config+0xac>)
 80058b2:	4293      	cmp	r3, r2
 80058b4:	d109      	bne.n	80058ca <OC6Config+0x82>
  {
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCNIdleState));
    assert_param(IS_LL_TIM_OCIDLESTATE(TIM_OCInitStruct->OCIdleState));

    /* Set the Output Idle state */
    MODIFY_REG(TIMx->CR2, TIM_CR2_OIS6, TIM_OCInitStruct->OCIdleState << 10U);
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	685b      	ldr	r3, [r3, #4]
 80058ba:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 80058be:	683b      	ldr	r3, [r7, #0]
 80058c0:	699b      	ldr	r3, [r3, #24]
 80058c2:	029b      	lsls	r3, r3, #10
 80058c4:	431a      	orrs	r2, r3
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	605a      	str	r2, [r3, #4]
  }

  /* Write to TIMx CCMR3 */
  LL_TIM_WriteReg(TIMx, CCMR3, tmpccmr3);
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	68ba      	ldr	r2, [r7, #8]
 80058ce:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  LL_TIM_OC_SetCompareCH6(TIMx, TIM_OCInitStruct->CompareValue);
 80058d0:	683b      	ldr	r3, [r7, #0]
 80058d2:	68db      	ldr	r3, [r3, #12]
 80058d4:	4619      	mov	r1, r3
 80058d6:	6878      	ldr	r0, [r7, #4]
 80058d8:	f7ff fc79 	bl	80051ce <LL_TIM_OC_SetCompareCH6>

  /* Write to TIMx CCER */
  LL_TIM_WriteReg(TIMx, CCER, tmpccer);
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	68fa      	ldr	r2, [r7, #12]
 80058e0:	621a      	str	r2, [r3, #32]

  return SUCCESS;
 80058e2:	2301      	movs	r3, #1
}
 80058e4:	4618      	mov	r0, r3
 80058e6:	3710      	adds	r7, #16
 80058e8:	46bd      	mov	sp, r7
 80058ea:	bd80      	pop	{r7, pc}
 80058ec:	40012c00 	.word	0x40012c00
 80058f0:	40014400 	.word	0x40014400
 80058f4:	40014800 	.word	0x40014800

080058f8 <LL_SetSystemCoreClock>:
            @ref LL_RCC_GetSystemClocksFreq (HCLK1_Frequency field))
  * @retval None
  */
#endif /* CORE_CM0PLUS */
void LL_SetSystemCoreClock(uint32_t HCLKFrequency)
{
 80058f8:	b480      	push	{r7}
 80058fa:	b083      	sub	sp, #12
 80058fc:	af00      	add	r7, sp, #0
 80058fe:	6078      	str	r0, [r7, #4]
  /* HCLK clock frequency */
  SystemCoreClock = HCLKFrequency;
 8005900:	4a03      	ldr	r2, [pc, #12]	; (8005910 <LL_SetSystemCoreClock+0x18>)
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	6013      	str	r3, [r2, #0]
}
 8005906:	bf00      	nop
 8005908:	370c      	adds	r7, #12
 800590a:	46bd      	mov	sp, r7
 800590c:	bc80      	pop	{r7}
 800590e:	4770      	bx	lr
 8005910:	20000004 	.word	0x20000004

08005914 <LL_AHB2_GRP1_EnableClock>:
{
 8005914:	b480      	push	{r7}
 8005916:	b085      	sub	sp, #20
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHB2ENR, Periphs);
 800591c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005920:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005922:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	4313      	orrs	r3, r2
 800592a:	64cb      	str	r3, [r1, #76]	; 0x4c
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 800592c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005930:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	4013      	ands	r3, r2
 8005936:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8005938:	68fb      	ldr	r3, [r7, #12]
}
 800593a:	bf00      	nop
 800593c:	3714      	adds	r7, #20
 800593e:	46bd      	mov	sp, r7
 8005940:	bc80      	pop	{r7}
 8005942:	4770      	bx	lr

08005944 <EMBENET_NODE_BSP_RBI_Init>:
    if (HAL_SUBGHZ_Init(&hsubghz) != HAL_OK) {
    }
}

/// @brief Initialize RF Switch
void EMBENET_NODE_BSP_RBI_Init(void) {
 8005944:	b580      	push	{r7, lr}
 8005946:	b086      	sub	sp, #24
 8005948:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef gpio_init_structure = {0};
 800594a:	1d3b      	adds	r3, r7, #4
 800594c:	2200      	movs	r2, #0
 800594e:	601a      	str	r2, [r3, #0]
 8005950:	605a      	str	r2, [r3, #4]
 8005952:	609a      	str	r2, [r3, #8]
 8005954:	60da      	str	r2, [r3, #12]
 8005956:	611a      	str	r2, [r3, #16]

    /* Enable the Radio Switch Clock */
    RF_SW_CTRL1_GPIO_CLK_ENABLE();
 8005958:	2004      	movs	r0, #4
 800595a:	f7ff ffdb 	bl	8005914 <LL_AHB2_GRP1_EnableClock>
    RF_SW_CTRL2_GPIO_CLK_ENABLE();
 800595e:	2004      	movs	r0, #4
 8005960:	f7ff ffd8 	bl	8005914 <LL_AHB2_GRP1_EnableClock>

    /* Configure the Radio Switch pin */
    gpio_init_structure.Pin   = RF_SW_CTRL1_PIN;
 8005964:	2310      	movs	r3, #16
 8005966:	607b      	str	r3, [r7, #4]
    gpio_init_structure.Mode  = GPIO_MODE_OUTPUT_PP;
 8005968:	2301      	movs	r3, #1
 800596a:	60bb      	str	r3, [r7, #8]
    gpio_init_structure.Pull  = GPIO_NOPULL;
 800596c:	2300      	movs	r3, #0
 800596e:	60fb      	str	r3, [r7, #12]
    gpio_init_structure.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8005970:	2303      	movs	r3, #3
 8005972:	613b      	str	r3, [r7, #16]

    HAL_GPIO_Init(RF_SW_CTRL1_GPIO_PORT, &gpio_init_structure);
 8005974:	1d3b      	adds	r3, r7, #4
 8005976:	4619      	mov	r1, r3
 8005978:	480b      	ldr	r0, [pc, #44]	; (80059a8 <EMBENET_NODE_BSP_RBI_Init+0x64>)
 800597a:	f7fd fee7 	bl	800374c <HAL_GPIO_Init>

    gpio_init_structure.Pin = RF_SW_CTRL2_PIN;
 800597e:	2320      	movs	r3, #32
 8005980:	607b      	str	r3, [r7, #4]
    HAL_GPIO_Init(RF_SW_CTRL2_GPIO_PORT, &gpio_init_structure);
 8005982:	1d3b      	adds	r3, r7, #4
 8005984:	4619      	mov	r1, r3
 8005986:	4808      	ldr	r0, [pc, #32]	; (80059a8 <EMBENET_NODE_BSP_RBI_Init+0x64>)
 8005988:	f7fd fee0 	bl	800374c <HAL_GPIO_Init>

    gpio_init_structure.Pin = RF_SW_CTRL3_PIN;
 800598c:	2308      	movs	r3, #8
 800598e:	607b      	str	r3, [r7, #4]
    HAL_GPIO_Init(RF_SW_CTRL3_GPIO_PORT, &gpio_init_structure);
 8005990:	1d3b      	adds	r3, r7, #4
 8005992:	4619      	mov	r1, r3
 8005994:	4804      	ldr	r0, [pc, #16]	; (80059a8 <EMBENET_NODE_BSP_RBI_Init+0x64>)
 8005996:	f7fd fed9 	bl	800374c <HAL_GPIO_Init>

    EMBENET_NODE_BSP_ConfigRFSwitch(EMBENET_NODE_BSP_RF_SWITCH_OFF);
 800599a:	2000      	movs	r0, #0
 800599c:	f000 f80e 	bl	80059bc <EMBENET_NODE_BSP_ConfigRFSwitch>
}
 80059a0:	bf00      	nop
 80059a2:	3718      	adds	r7, #24
 80059a4:	46bd      	mov	sp, r7
 80059a6:	bd80      	pop	{r7, pc}
 80059a8:	48000800 	.word	0x48000800

080059ac <EMBENET_NODE_BSP_GetTxOffset>:
    HAL_GPIO_DeInit(RF_SW_CTRL2_GPIO_PORT, RF_SW_CTRL3_PIN);
}


/// @brief Return TX offset for given RF Path
int8_t EMBENET_NODE_BSP_GetTxOffset(void) {
 80059ac:	b480      	push	{r7}
 80059ae:	af00      	add	r7, sp, #0
    return 0;
 80059b0:	2300      	movs	r3, #0
}
 80059b2:	4618      	mov	r0, r3
 80059b4:	46bd      	mov	sp, r7
 80059b6:	bc80      	pop	{r7}
 80059b8:	4770      	bx	lr
	...

080059bc <EMBENET_NODE_BSP_ConfigRFSwitch>:


void EMBENET_NODE_BSP_ConfigRFSwitch(EMBENET_NODE_BSP_RfSwitch pos) {
 80059bc:	b580      	push	{r7, lr}
 80059be:	b082      	sub	sp, #8
 80059c0:	af00      	add	r7, sp, #0
 80059c2:	4603      	mov	r3, r0
 80059c4:	71fb      	strb	r3, [r7, #7]
    switch (pos) {
 80059c6:	79fb      	ldrb	r3, [r7, #7]
 80059c8:	2b03      	cmp	r3, #3
 80059ca:	d84b      	bhi.n	8005a64 <EMBENET_NODE_BSP_ConfigRFSwitch+0xa8>
 80059cc:	a201      	add	r2, pc, #4	; (adr r2, 80059d4 <EMBENET_NODE_BSP_ConfigRFSwitch+0x18>)
 80059ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059d2:	bf00      	nop
 80059d4:	080059e5 	.word	0x080059e5
 80059d8:	08005a05 	.word	0x08005a05
 80059dc:	08005a25 	.word	0x08005a25
 80059e0:	08005a45 	.word	0x08005a45
        case EMBENET_NODE_BSP_RF_SWITCH_OFF:
            HAL_GPIO_WritePin(RF_SW_CTRL3_GPIO_PORT, RF_SW_CTRL3_PIN, GPIO_PIN_RESET);
 80059e4:	2200      	movs	r2, #0
 80059e6:	2108      	movs	r1, #8
 80059e8:	4820      	ldr	r0, [pc, #128]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 80059ea:	f7fe f80f 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL1_GPIO_PORT, RF_SW_CTRL1_PIN, GPIO_PIN_RESET);
 80059ee:	2200      	movs	r2, #0
 80059f0:	2110      	movs	r1, #16
 80059f2:	481e      	ldr	r0, [pc, #120]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 80059f4:	f7fe f80a 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL2_GPIO_PORT, RF_SW_CTRL2_PIN, GPIO_PIN_RESET);
 80059f8:	2200      	movs	r2, #0
 80059fa:	2120      	movs	r1, #32
 80059fc:	481b      	ldr	r0, [pc, #108]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 80059fe:	f7fe f805 	bl	8003a0c <HAL_GPIO_WritePin>
            break;
 8005a02:	e02f      	b.n	8005a64 <EMBENET_NODE_BSP_ConfigRFSwitch+0xa8>
        case EMBENET_NODE_BSP_RF_SWITCH_RX:
            HAL_GPIO_WritePin(RF_SW_CTRL3_GPIO_PORT, RF_SW_CTRL3_PIN, GPIO_PIN_SET);
 8005a04:	2201      	movs	r2, #1
 8005a06:	2108      	movs	r1, #8
 8005a08:	4818      	ldr	r0, [pc, #96]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a0a:	f7fd ffff 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL1_GPIO_PORT, RF_SW_CTRL1_PIN, GPIO_PIN_SET);
 8005a0e:	2201      	movs	r2, #1
 8005a10:	2110      	movs	r1, #16
 8005a12:	4816      	ldr	r0, [pc, #88]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a14:	f7fd fffa 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL2_GPIO_PORT, RF_SW_CTRL2_PIN, GPIO_PIN_RESET);
 8005a18:	2200      	movs	r2, #0
 8005a1a:	2120      	movs	r1, #32
 8005a1c:	4813      	ldr	r0, [pc, #76]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a1e:	f7fd fff5 	bl	8003a0c <HAL_GPIO_WritePin>
            break;
 8005a22:	e01f      	b.n	8005a64 <EMBENET_NODE_BSP_ConfigRFSwitch+0xa8>
        case EMBENET_NODE_BSP_RF_SWITCH_TX_LP:
            HAL_GPIO_WritePin(RF_SW_CTRL3_GPIO_PORT, RF_SW_CTRL3_PIN, GPIO_PIN_SET);
 8005a24:	2201      	movs	r2, #1
 8005a26:	2108      	movs	r1, #8
 8005a28:	4810      	ldr	r0, [pc, #64]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a2a:	f7fd ffef 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL1_GPIO_PORT, RF_SW_CTRL1_PIN, GPIO_PIN_SET);
 8005a2e:	2201      	movs	r2, #1
 8005a30:	2110      	movs	r1, #16
 8005a32:	480e      	ldr	r0, [pc, #56]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a34:	f7fd ffea 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL2_GPIO_PORT, RF_SW_CTRL2_PIN, GPIO_PIN_SET);
 8005a38:	2201      	movs	r2, #1
 8005a3a:	2120      	movs	r1, #32
 8005a3c:	480b      	ldr	r0, [pc, #44]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a3e:	f7fd ffe5 	bl	8003a0c <HAL_GPIO_WritePin>
            break;
 8005a42:	e00f      	b.n	8005a64 <EMBENET_NODE_BSP_ConfigRFSwitch+0xa8>
        case EMBENET_NODE_BSP_RF_SWITCH_TX_HP:
            HAL_GPIO_WritePin(RF_SW_CTRL3_GPIO_PORT, RF_SW_CTRL3_PIN, GPIO_PIN_SET);
 8005a44:	2201      	movs	r2, #1
 8005a46:	2108      	movs	r1, #8
 8005a48:	4808      	ldr	r0, [pc, #32]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a4a:	f7fd ffdf 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL1_GPIO_PORT, RF_SW_CTRL1_PIN, GPIO_PIN_RESET);
 8005a4e:	2200      	movs	r2, #0
 8005a50:	2110      	movs	r1, #16
 8005a52:	4806      	ldr	r0, [pc, #24]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a54:	f7fd ffda 	bl	8003a0c <HAL_GPIO_WritePin>
            HAL_GPIO_WritePin(RF_SW_CTRL2_GPIO_PORT, RF_SW_CTRL2_PIN, GPIO_PIN_SET);
 8005a58:	2201      	movs	r2, #1
 8005a5a:	2120      	movs	r1, #32
 8005a5c:	4803      	ldr	r0, [pc, #12]	; (8005a6c <EMBENET_NODE_BSP_ConfigRFSwitch+0xb0>)
 8005a5e:	f7fd ffd5 	bl	8003a0c <HAL_GPIO_WritePin>
            break;
 8005a62:	bf00      	nop
    }
}
 8005a64:	bf00      	nop
 8005a66:	3708      	adds	r7, #8
 8005a68:	46bd      	mov	sp, r7
 8005a6a:	bd80      	pop	{r7, pc}
 8005a6c:	48000800 	.word	0x48000800

08005a70 <EMBENET_NODE_BSP_GetTxConfig>:


EMBENET_NODE_BSP_TxConfig EMBENET_NODE_BSP_GetTxConfig(void) {
 8005a70:	b480      	push	{r7}
 8005a72:	af00      	add	r7, sp, #0
    return EMBENET_NODE_BSP_TX_CONFIG_LP_HP;
 8005a74:	2302      	movs	r3, #2
}
 8005a76:	4618      	mov	r0, r3
 8005a78:	46bd      	mov	sp, r7
 8005a7a:	bc80      	pop	{r7}
 8005a7c:	4770      	bx	lr

08005a7e <EMBENET_NODE_BSP_UART_WriteByte>:
}

void EMBENET_NODE_BSP_UART_Deinit(void) {
}

void EMBENET_NODE_BSP_UART_WriteByte(uint8_t c) {
 8005a7e:	b480      	push	{r7}
 8005a80:	b083      	sub	sp, #12
 8005a82:	af00      	add	r7, sp, #0
 8005a84:	4603      	mov	r3, r0
 8005a86:	71fb      	strb	r3, [r7, #7]
}
 8005a88:	bf00      	nop
 8005a8a:	370c      	adds	r7, #12
 8005a8c:	46bd      	mov	sp, r7
 8005a8e:	bc80      	pop	{r7}
 8005a90:	4770      	bx	lr

08005a92 <LL_AHB3_GRP1_EnableClock>:
{
 8005a92:	b480      	push	{r7}
 8005a94:	b085      	sub	sp, #20
 8005a96:	af00      	add	r7, sp, #0
 8005a98:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHB3ENR, Periphs);
 8005a9a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005a9e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005aa0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005aa4:	687b      	ldr	r3, [r7, #4]
 8005aa6:	4313      	orrs	r3, r2
 8005aa8:	650b      	str	r3, [r1, #80]	; 0x50
  tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 8005aaa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005aae:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	4013      	ands	r3, r2
 8005ab4:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8005ab6:	68fb      	ldr	r3, [r7, #12]
}
 8005ab8:	bf00      	nop
 8005aba:	3714      	adds	r7, #20
 8005abc:	46bd      	mov	sp, r7
 8005abe:	bc80      	pop	{r7}
 8005ac0:	4770      	bx	lr

08005ac2 <LL_AHB3_GRP1_DisableClock>:
{
 8005ac2:	b480      	push	{r7}
 8005ac4:	b083      	sub	sp, #12
 8005ac6:	af00      	add	r7, sp, #0
 8005ac8:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->AHB3ENR, Periphs);
 8005aca:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005ace:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	43db      	mvns	r3, r3
 8005ad4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8005ad8:	4013      	ands	r3, r2
 8005ada:	650b      	str	r3, [r1, #80]	; 0x50
}
 8005adc:	bf00      	nop
 8005ade:	370c      	adds	r7, #12
 8005ae0:	46bd      	mov	sp, r7
 8005ae2:	bc80      	pop	{r7}
 8005ae4:	4770      	bx	lr
	...

08005ae8 <HAL_CRYP_MspInit>:
 * @brief CRYP MSP Initialization
 * This function configures the hardware resources used in this example
 * @param hcryp: CRYP handle pointer
 * @retval None
 */
void HAL_CRYP_MspInit(CRYP_HandleTypeDef* hcryp) {
 8005ae8:	b580      	push	{r7, lr}
 8005aea:	b082      	sub	sp, #8
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
    if (hcryp->Instance == AES) {
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	4a09      	ldr	r2, [pc, #36]	; (8005b1c <HAL_CRYP_MspInit+0x34>)
 8005af6:	4293      	cmp	r3, r2
 8005af8:	d10b      	bne.n	8005b12 <HAL_CRYP_MspInit+0x2a>
        /* USER CODE BEGIN AES_MspInit 0 */

        /* USER CODE END AES_MspInit 0 */
        /* Peripheral clock enable */
        __HAL_RCC_AES_CLK_ENABLE();
 8005afa:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8005afe:	f7ff ffc8 	bl	8005a92 <LL_AHB3_GRP1_EnableClock>
        /* AES interrupt Init */
        HAL_NVIC_SetPriority(AES_IRQn, 0, 0);
 8005b02:	2200      	movs	r2, #0
 8005b04:	2100      	movs	r1, #0
 8005b06:	2033      	movs	r0, #51	; 0x33
 8005b08:	f7fc fbf7 	bl	80022fa <HAL_NVIC_SetPriority>
        HAL_NVIC_EnableIRQ(AES_IRQn);
 8005b0c:	2033      	movs	r0, #51	; 0x33
 8005b0e:	f7fc fc0e 	bl	800232e <HAL_NVIC_EnableIRQ>
        /* USER CODE BEGIN AES_MspInit 1 */
        /* USER CODE END AES_MspInit 1 */
    }
}
 8005b12:	bf00      	nop
 8005b14:	3708      	adds	r7, #8
 8005b16:	46bd      	mov	sp, r7
 8005b18:	bd80      	pop	{r7, pc}
 8005b1a:	bf00      	nop
 8005b1c:	58001800 	.word	0x58001800

08005b20 <HAL_CRYP_MspDeInit>:
 * @brief CRYP MSP De-Initialization
 * This function freeze the hardware resources used in this example
 * @param hcryp: CRYP handle pointer
 * @retval None
 */
void HAL_CRYP_MspDeInit(CRYP_HandleTypeDef* hcryp) {
 8005b20:	b580      	push	{r7, lr}
 8005b22:	b082      	sub	sp, #8
 8005b24:	af00      	add	r7, sp, #0
 8005b26:	6078      	str	r0, [r7, #4]
    if (hcryp->Instance == AES) {
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	681b      	ldr	r3, [r3, #0]
 8005b2c:	4a06      	ldr	r2, [pc, #24]	; (8005b48 <HAL_CRYP_MspDeInit+0x28>)
 8005b2e:	4293      	cmp	r3, r2
 8005b30:	d106      	bne.n	8005b40 <HAL_CRYP_MspDeInit+0x20>
        /* USER CODE BEGIN AES_MspDeInit 0 */

        /* USER CODE END AES_MspDeInit 0 */
        /* Peripheral clock disable */
        __HAL_RCC_AES_CLK_DISABLE();
 8005b32:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8005b36:	f7ff ffc4 	bl	8005ac2 <LL_AHB3_GRP1_DisableClock>

        /* AES interrupt DeInit */
        HAL_NVIC_DisableIRQ(AES_IRQn);
 8005b3a:	2033      	movs	r0, #51	; 0x33
 8005b3c:	f7fc fc05 	bl	800234a <HAL_NVIC_DisableIRQ>
        /* USER CODE BEGIN AES_MspDeInit 1 */
        /* Disable CRYP Interrupt */
        /* USER CODE END AES_MspDeInit 1 */
    }
}
 8005b40:	bf00      	nop
 8005b42:	3708      	adds	r7, #8
 8005b44:	46bd      	mov	sp, r7
 8005b46:	bd80      	pop	{r7, pc}
 8005b48:	58001800 	.word	0x58001800

08005b4c <EMBENET_AES128_Init>:

void EMBENET_AES128_Init(void) {
 8005b4c:	b580      	push	{r7, lr}
 8005b4e:	af00      	add	r7, sp, #0
    hcryp.Instance             = AES;
 8005b50:	4b11      	ldr	r3, [pc, #68]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b52:	4a12      	ldr	r2, [pc, #72]	; (8005b9c <EMBENET_AES128_Init+0x50>)
 8005b54:	601a      	str	r2, [r3, #0]
    hcryp.Init.DataType        = CRYP_DATATYPE_8B;
 8005b56:	4b10      	ldr	r3, [pc, #64]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b58:	2204      	movs	r2, #4
 8005b5a:	605a      	str	r2, [r3, #4]
    hcryp.Init.KeySize         = CRYP_KEYSIZE_128B;
 8005b5c:	4b0e      	ldr	r3, [pc, #56]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b5e:	2200      	movs	r2, #0
 8005b60:	609a      	str	r2, [r3, #8]
    hcryp.Init.pKey            = aesKey;
 8005b62:	4b0d      	ldr	r3, [pc, #52]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b64:	4a0e      	ldr	r2, [pc, #56]	; (8005ba0 <EMBENET_AES128_Init+0x54>)
 8005b66:	60da      	str	r2, [r3, #12]
    hcryp.Init.pInitVect       = NULL;
 8005b68:	4b0b      	ldr	r3, [pc, #44]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b6a:	2200      	movs	r2, #0
 8005b6c:	611a      	str	r2, [r3, #16]
    hcryp.Init.Algorithm       = CRYP_AES_ECB;
 8005b6e:	4b0a      	ldr	r3, [pc, #40]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b70:	2200      	movs	r2, #0
 8005b72:	615a      	str	r2, [r3, #20]
    hcryp.Init.DataWidthUnit   = CRYP_DATAWIDTHUNIT_BYTE;
 8005b74:	4b08      	ldr	r3, [pc, #32]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b76:	2201      	movs	r2, #1
 8005b78:	625a      	str	r2, [r3, #36]	; 0x24
    hcryp.Init.HeaderWidthUnit = CRYP_HEADERWIDTHUNIT_BYTE;
 8005b7a:	4b07      	ldr	r3, [pc, #28]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b7c:	2201      	movs	r2, #1
 8005b7e:	629a      	str	r2, [r3, #40]	; 0x28
    hcryp.Init.KeyIVConfigSkip = CRYP_KEYIVCONFIG_ALWAYS;
 8005b80:	4b05      	ldr	r3, [pc, #20]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b82:	2200      	movs	r2, #0
 8005b84:	62da      	str	r2, [r3, #44]	; 0x2c

    HAL_CRYP_DeInit(&hcryp);
 8005b86:	4804      	ldr	r0, [pc, #16]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b88:	f7fc fc34 	bl	80023f4 <HAL_CRYP_DeInit>
    HAL_CRYP_Init(&hcryp);
 8005b8c:	4802      	ldr	r0, [pc, #8]	; (8005b98 <EMBENET_AES128_Init+0x4c>)
 8005b8e:	f7fc fbf6 	bl	800237e <HAL_CRYP_Init>
}
 8005b92:	bf00      	nop
 8005b94:	bd80      	pop	{r7, pc}
 8005b96:	bf00      	nop
 8005b98:	200008a4 	.word	0x200008a4
 8005b9c:	58001800 	.word	0x58001800
 8005ba0:	200009b0 	.word	0x200009b0

08005ba4 <EMBENET_AES128_SetKey>:

void EMBENET_AES128_Deinit(void) {
    HAL_CRYP_DeInit(&hcryp);
}

void EMBENET_AES128_SetKey(uint8_t const key[16U]) {
 8005ba4:	b480      	push	{r7}
 8005ba6:	b083      	sub	sp, #12
 8005ba8:	af00      	add	r7, sp, #0
 8005baa:	6078      	str	r0, [r7, #4]
    // HAL obtains key in native endianess (as 4 4B words)
    aesKey[0] = ((uint32_t)key[0] << 24) + ((uint32_t)key[1] << 16) + ((uint32_t)key[2] << 8) + ((uint32_t)key[3]);
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	781b      	ldrb	r3, [r3, #0]
 8005bb0:	061a      	lsls	r2, r3, #24
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	3301      	adds	r3, #1
 8005bb6:	781b      	ldrb	r3, [r3, #0]
 8005bb8:	041b      	lsls	r3, r3, #16
 8005bba:	441a      	add	r2, r3
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	3302      	adds	r3, #2
 8005bc0:	781b      	ldrb	r3, [r3, #0]
 8005bc2:	021b      	lsls	r3, r3, #8
 8005bc4:	4413      	add	r3, r2
 8005bc6:	687a      	ldr	r2, [r7, #4]
 8005bc8:	3203      	adds	r2, #3
 8005bca:	7812      	ldrb	r2, [r2, #0]
 8005bcc:	4413      	add	r3, r2
 8005bce:	4a21      	ldr	r2, [pc, #132]	; (8005c54 <EMBENET_AES128_SetKey+0xb0>)
 8005bd0:	6013      	str	r3, [r2, #0]
    aesKey[1] = ((uint32_t)key[4] << 24) + ((uint32_t)key[5] << 16) + ((uint32_t)key[6] << 8) + ((uint32_t)key[7]);
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	3304      	adds	r3, #4
 8005bd6:	781b      	ldrb	r3, [r3, #0]
 8005bd8:	061a      	lsls	r2, r3, #24
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	3305      	adds	r3, #5
 8005bde:	781b      	ldrb	r3, [r3, #0]
 8005be0:	041b      	lsls	r3, r3, #16
 8005be2:	441a      	add	r2, r3
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	3306      	adds	r3, #6
 8005be8:	781b      	ldrb	r3, [r3, #0]
 8005bea:	021b      	lsls	r3, r3, #8
 8005bec:	4413      	add	r3, r2
 8005bee:	687a      	ldr	r2, [r7, #4]
 8005bf0:	3207      	adds	r2, #7
 8005bf2:	7812      	ldrb	r2, [r2, #0]
 8005bf4:	4413      	add	r3, r2
 8005bf6:	4a17      	ldr	r2, [pc, #92]	; (8005c54 <EMBENET_AES128_SetKey+0xb0>)
 8005bf8:	6053      	str	r3, [r2, #4]
    aesKey[2] = ((uint32_t)key[8] << 24) + ((uint32_t)key[9] << 16) + ((uint32_t)key[10] << 8) + ((uint32_t)key[11]);
 8005bfa:	687b      	ldr	r3, [r7, #4]
 8005bfc:	3308      	adds	r3, #8
 8005bfe:	781b      	ldrb	r3, [r3, #0]
 8005c00:	061a      	lsls	r2, r3, #24
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	3309      	adds	r3, #9
 8005c06:	781b      	ldrb	r3, [r3, #0]
 8005c08:	041b      	lsls	r3, r3, #16
 8005c0a:	441a      	add	r2, r3
 8005c0c:	687b      	ldr	r3, [r7, #4]
 8005c0e:	330a      	adds	r3, #10
 8005c10:	781b      	ldrb	r3, [r3, #0]
 8005c12:	021b      	lsls	r3, r3, #8
 8005c14:	4413      	add	r3, r2
 8005c16:	687a      	ldr	r2, [r7, #4]
 8005c18:	320b      	adds	r2, #11
 8005c1a:	7812      	ldrb	r2, [r2, #0]
 8005c1c:	4413      	add	r3, r2
 8005c1e:	4a0d      	ldr	r2, [pc, #52]	; (8005c54 <EMBENET_AES128_SetKey+0xb0>)
 8005c20:	6093      	str	r3, [r2, #8]
    aesKey[3] = ((uint32_t)key[12] << 24) + ((uint32_t)key[13] << 16) + ((uint32_t)key[14] << 8) + ((uint32_t)key[15]);
 8005c22:	687b      	ldr	r3, [r7, #4]
 8005c24:	330c      	adds	r3, #12
 8005c26:	781b      	ldrb	r3, [r3, #0]
 8005c28:	061a      	lsls	r2, r3, #24
 8005c2a:	687b      	ldr	r3, [r7, #4]
 8005c2c:	330d      	adds	r3, #13
 8005c2e:	781b      	ldrb	r3, [r3, #0]
 8005c30:	041b      	lsls	r3, r3, #16
 8005c32:	441a      	add	r2, r3
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	330e      	adds	r3, #14
 8005c38:	781b      	ldrb	r3, [r3, #0]
 8005c3a:	021b      	lsls	r3, r3, #8
 8005c3c:	4413      	add	r3, r2
 8005c3e:	687a      	ldr	r2, [r7, #4]
 8005c40:	320f      	adds	r2, #15
 8005c42:	7812      	ldrb	r2, [r2, #0]
 8005c44:	4413      	add	r3, r2
 8005c46:	4a03      	ldr	r2, [pc, #12]	; (8005c54 <EMBENET_AES128_SetKey+0xb0>)
 8005c48:	60d3      	str	r3, [r2, #12]
}
 8005c4a:	bf00      	nop
 8005c4c:	370c      	adds	r7, #12
 8005c4e:	46bd      	mov	sp, r7
 8005c50:	bc80      	pop	{r7}
 8005c52:	4770      	bx	lr
 8005c54:	200009b0 	.word	0x200009b0

08005c58 <EMBENET_AES128_Encrypt>:

void EMBENET_AES128_Encrypt(uint8_t data[16U]) {
 8005c58:	b580      	push	{r7, lr}
 8005c5a:	b08c      	sub	sp, #48	; 0x30
 8005c5c:	af02      	add	r7, sp, #8
 8005c5e:	6078      	str	r0, [r7, #4]
    uint32_t in[4];
    memcpy(in, data, 16);
 8005c60:	f107 0318 	add.w	r3, r7, #24
 8005c64:	2210      	movs	r2, #16
 8005c66:	6879      	ldr	r1, [r7, #4]
 8005c68:	4618      	mov	r0, r3
 8005c6a:	f025 fae4 	bl	802b236 <memcpy>
    uint32_t out[4];
    HAL_CRYP_Encrypt(&hcryp, in, (uint16_t)16, out, 10000);
 8005c6e:	f107 0308 	add.w	r3, r7, #8
 8005c72:	f107 0118 	add.w	r1, r7, #24
 8005c76:	f242 7210 	movw	r2, #10000	; 0x2710
 8005c7a:	9200      	str	r2, [sp, #0]
 8005c7c:	2210      	movs	r2, #16
 8005c7e:	4807      	ldr	r0, [pc, #28]	; (8005c9c <EMBENET_AES128_Encrypt+0x44>)
 8005c80:	f7fc fbe6 	bl	8002450 <HAL_CRYP_Encrypt>
    memcpy(data, out, 16);
 8005c84:	f107 0308 	add.w	r3, r7, #8
 8005c88:	2210      	movs	r2, #16
 8005c8a:	4619      	mov	r1, r3
 8005c8c:	6878      	ldr	r0, [r7, #4]
 8005c8e:	f025 fad2 	bl	802b236 <memcpy>
}
 8005c92:	bf00      	nop
 8005c94:	3728      	adds	r7, #40	; 0x28
 8005c96:	46bd      	mov	sp, r7
 8005c98:	bd80      	pop	{r7, pc}
 8005c9a:	bf00      	nop
 8005c9c:	200008a4 	.word	0x200008a4

08005ca0 <EMBENET_AES128_Decrypt>:

void EMBENET_AES128_Decrypt(uint8_t data[16U]) {
 8005ca0:	b580      	push	{r7, lr}
 8005ca2:	b08c      	sub	sp, #48	; 0x30
 8005ca4:	af02      	add	r7, sp, #8
 8005ca6:	6078      	str	r0, [r7, #4]
    uint32_t in[4];
    memcpy(in, data, 16);
 8005ca8:	f107 0318 	add.w	r3, r7, #24
 8005cac:	2210      	movs	r2, #16
 8005cae:	6879      	ldr	r1, [r7, #4]
 8005cb0:	4618      	mov	r0, r3
 8005cb2:	f025 fac0 	bl	802b236 <memcpy>
    uint32_t out[4];
    HAL_CRYP_Decrypt(&hcryp, in, (uint16_t)16, out, 10000);
 8005cb6:	f107 0308 	add.w	r3, r7, #8
 8005cba:	f107 0118 	add.w	r1, r7, #24
 8005cbe:	f242 7210 	movw	r2, #10000	; 0x2710
 8005cc2:	9200      	str	r2, [sp, #0]
 8005cc4:	2210      	movs	r2, #16
 8005cc6:	4807      	ldr	r0, [pc, #28]	; (8005ce4 <EMBENET_AES128_Decrypt+0x44>)
 8005cc8:	f7fc fc5c 	bl	8002584 <HAL_CRYP_Decrypt>
    memcpy(data, out, 16);
 8005ccc:	f107 0308 	add.w	r3, r7, #8
 8005cd0:	2210      	movs	r2, #16
 8005cd2:	4619      	mov	r1, r3
 8005cd4:	6878      	ldr	r0, [r7, #4]
 8005cd6:	f025 faae 	bl	802b236 <memcpy>
}
 8005cda:	bf00      	nop
 8005cdc:	3728      	adds	r7, #40	; 0x28
 8005cde:	46bd      	mov	sp, r7
 8005ce0:	bd80      	pop	{r7, pc}
 8005ce2:	bf00      	nop
 8005ce4:	200008a4 	.word	0x200008a4

08005ce8 <__NVIC_SystemReset>:
{
 8005ce8:	b480      	push	{r7}
 8005cea:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
 8005cec:	f3bf 8f4f 	dsb	sy
}
 8005cf0:	bf00      	nop
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 8005cf2:	4b06      	ldr	r3, [pc, #24]	; (8005d0c <__NVIC_SystemReset+0x24>)
 8005cf4:	68db      	ldr	r3, [r3, #12]
 8005cf6:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 8005cfa:	4904      	ldr	r1, [pc, #16]	; (8005d0c <__NVIC_SystemReset+0x24>)
 8005cfc:	4b04      	ldr	r3, [pc, #16]	; (8005d10 <__NVIC_SystemReset+0x28>)
 8005cfe:	4313      	orrs	r3, r2
 8005d00:	60cb      	str	r3, [r1, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 8005d02:	f3bf 8f4f 	dsb	sy
}
 8005d06:	bf00      	nop
    __NOP();
 8005d08:	bf00      	nop
 8005d0a:	e7fd      	b.n	8005d08 <__NVIC_SystemReset+0x20>
 8005d0c:	e000ed00 	.word	0xe000ed00
 8005d10:	05fa0004 	.word	0x05fa0004

08005d14 <openhdlc_crc>:
                                     0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c, 0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3,
                                     0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232, 0x5ac5, 0x4b4c, 0x79d7, 0x685e,
                                     0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9,
                                     0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78};

uint16_t openhdlc_crc(uint16_t crc, uint8_t byte) {
 8005d14:	b480      	push	{r7}
 8005d16:	b083      	sub	sp, #12
 8005d18:	af00      	add	r7, sp, #0
 8005d1a:	4603      	mov	r3, r0
 8005d1c:	460a      	mov	r2, r1
 8005d1e:	80fb      	strh	r3, [r7, #6]
 8005d20:	4613      	mov	r3, r2
 8005d22:	717b      	strb	r3, [r7, #5]
    return (crc >> 8) ^ fcstab[(crc ^ byte) & 0xff];
 8005d24:	88fb      	ldrh	r3, [r7, #6]
 8005d26:	0a1b      	lsrs	r3, r3, #8
 8005d28:	b29a      	uxth	r2, r3
 8005d2a:	88f9      	ldrh	r1, [r7, #6]
 8005d2c:	797b      	ldrb	r3, [r7, #5]
 8005d2e:	404b      	eors	r3, r1
 8005d30:	b2db      	uxtb	r3, r3
 8005d32:	4905      	ldr	r1, [pc, #20]	; (8005d48 <openhdlc_crc+0x34>)
 8005d34:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8005d38:	4053      	eors	r3, r2
 8005d3a:	b29b      	uxth	r3, r3
}
 8005d3c:	4618      	mov	r0, r3
 8005d3e:	370c      	adds	r7, #12
 8005d40:	46bd      	mov	sp, r7
 8005d42:	bc80      	pop	{r7}
 8005d44:	4770      	bx	lr
 8005d46:	bf00      	nop
 8005d48:	080316ac 	.word	0x080316ac

08005d4c <EMBENET_BRT_Send>:
    RingBuffer_Init(&inputRingBufferDesc, inputRingBuffer, INPUT_RING_BUFFER_SIZE);
    RingBuffer_Init(&outputRingBufferDesc, outputRingBuffer, OUTPUT_RING_BUFFER_SIZE);
}


void EMBENET_BRT_Send(const void* packet, size_t packetLength) {
 8005d4c:	b580      	push	{r7, lr}
 8005d4e:	b086      	sub	sp, #24
 8005d50:	af00      	add	r7, sp, #0
 8005d52:	6078      	str	r0, [r7, #4]
 8005d54:	6039      	str	r1, [r7, #0]
    uint16_t finalCrc = HDLC_CRCINIT;
 8005d56:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005d5a:	82fb      	strh	r3, [r7, #22]

    uint8_t const* packetBytes = (uint8_t const*)packet;
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	60fb      	str	r3, [r7, #12]
    // HDLC flag
    putFlag(HDLC_FLAG);
 8005d60:	207e      	movs	r0, #126	; 0x7e
 8005d62:	f000 f925 	bl	8005fb0 <putFlag>
    // address (eui64)
    for (size_t i = 0; i < packetLength; ++i) {
 8005d66:	2300      	movs	r3, #0
 8005d68:	613b      	str	r3, [r7, #16]
 8005d6a:	e014      	b.n	8005d96 <EMBENET_BRT_Send+0x4a>
        finalCrc = openhdlc_crc(finalCrc, packetBytes[i]);
 8005d6c:	68fa      	ldr	r2, [r7, #12]
 8005d6e:	693b      	ldr	r3, [r7, #16]
 8005d70:	4413      	add	r3, r2
 8005d72:	781a      	ldrb	r2, [r3, #0]
 8005d74:	8afb      	ldrh	r3, [r7, #22]
 8005d76:	4611      	mov	r1, r2
 8005d78:	4618      	mov	r0, r3
 8005d7a:	f7ff ffcb 	bl	8005d14 <openhdlc_crc>
 8005d7e:	4603      	mov	r3, r0
 8005d80:	82fb      	strh	r3, [r7, #22]
        putByte(packetBytes[i]);
 8005d82:	68fa      	ldr	r2, [r7, #12]
 8005d84:	693b      	ldr	r3, [r7, #16]
 8005d86:	4413      	add	r3, r2
 8005d88:	781b      	ldrb	r3, [r3, #0]
 8005d8a:	4618      	mov	r0, r3
 8005d8c:	f000 f91d 	bl	8005fca <putByte>
    for (size_t i = 0; i < packetLength; ++i) {
 8005d90:	693b      	ldr	r3, [r7, #16]
 8005d92:	3301      	adds	r3, #1
 8005d94:	613b      	str	r3, [r7, #16]
 8005d96:	693a      	ldr	r2, [r7, #16]
 8005d98:	683b      	ldr	r3, [r7, #0]
 8005d9a:	429a      	cmp	r2, r3
 8005d9c:	d3e6      	bcc.n	8005d6c <EMBENET_BRT_Send+0x20>
    }
    // writing CRC
    finalCrc = (uint16_t)(~finalCrc);
 8005d9e:	8afb      	ldrh	r3, [r7, #22]
 8005da0:	43db      	mvns	r3, r3
 8005da2:	82fb      	strh	r3, [r7, #22]
    putByte((uint8_t)((finalCrc >> 0) & 0xff));
 8005da4:	8afb      	ldrh	r3, [r7, #22]
 8005da6:	b2db      	uxtb	r3, r3
 8005da8:	4618      	mov	r0, r3
 8005daa:	f000 f90e 	bl	8005fca <putByte>
    putByte((uint8_t)((finalCrc >> 8) & 0xff));
 8005dae:	8afb      	ldrh	r3, [r7, #22]
 8005db0:	0a1b      	lsrs	r3, r3, #8
 8005db2:	b29b      	uxth	r3, r3
 8005db4:	b2db      	uxtb	r3, r3
 8005db6:	4618      	mov	r0, r3
 8005db8:	f000 f907 	bl	8005fca <putByte>
    putFlag(HDLC_FLAG);
 8005dbc:	207e      	movs	r0, #126	; 0x7e
 8005dbe:	f000 f8f7 	bl	8005fb0 <putFlag>
}
 8005dc2:	bf00      	nop
 8005dc4:	3718      	adds	r7, #24
 8005dc6:	46bd      	mov	sp, r7
 8005dc8:	bd80      	pop	{r7, pc}
	...

08005dcc <EMBENET_BRT_Receive>:


size_t EMBENET_BRT_Receive(void* packetBuffer, size_t packetBufferSize) {
 8005dcc:	b580      	push	{r7, lr}
 8005dce:	b086      	sub	sp, #24
 8005dd0:	af00      	add	r7, sp, #0
 8005dd2:	6078      	str	r0, [r7, #4]
 8005dd4:	6039      	str	r1, [r7, #0]
    static size_t  inputFrameDataIndex;
    static bool    inputFrameReceiving;
    static uint8_t lastDataByte;

    uint8_t dataByte;
    bool    frameComplete = false;
 8005dd6:	2300      	movs	r3, #0
 8005dd8:	75fb      	strb	r3, [r7, #23]

    while (RingBuffer_GetLen(&inputRingBufferDesc) > 0 && frameComplete == false) {
 8005dda:	e062      	b.n	8005ea2 <EMBENET_BRT_Receive+0xd6>
        EMBENET_CRITICAL_SECTION_Enter();
 8005ddc:	f000 f938 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
        RingBuffer_GetChar(&inputRingBufferDesc, &dataByte);
 8005de0:	f107 030b 	add.w	r3, r7, #11
 8005de4:	4619      	mov	r1, r3
 8005de6:	4864      	ldr	r0, [pc, #400]	; (8005f78 <EMBENET_BRT_Receive+0x1ac>)
 8005de8:	f7fb fd1b 	bl	8001822 <RingBuffer_GetChar>
        EMBENET_CRITICAL_SECTION_Exit();
 8005dec:	f000 f950 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>


        if (false == inputFrameReceiving) {
 8005df0:	4b62      	ldr	r3, [pc, #392]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005df2:	781b      	ldrb	r3, [r3, #0]
 8005df4:	f083 0301 	eor.w	r3, r3, #1
 8005df8:	b2db      	uxtb	r3, r3
 8005dfa:	2b00      	cmp	r3, #0
 8005dfc:	d009      	beq.n	8005e12 <EMBENET_BRT_Receive+0x46>
            // looking for new frame
            if (HDLC_FLAG == dataByte) {
 8005dfe:	7afb      	ldrb	r3, [r7, #11]
 8005e00:	2b7e      	cmp	r3, #126	; 0x7e
 8005e02:	d14b      	bne.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                inputFrameReceiving = true;
 8005e04:	4b5d      	ldr	r3, [pc, #372]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005e06:	2201      	movs	r2, #1
 8005e08:	701a      	strb	r2, [r3, #0]
                inputFrameDataIndex = 0;
 8005e0a:	4b5d      	ldr	r3, [pc, #372]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e0c:	2200      	movs	r2, #0
 8005e0e:	601a      	str	r2, [r3, #0]
 8005e10:	e044      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
            }
        } else {
            // already receiving frame
            if (HDLC_FLAG == dataByte) {
 8005e12:	7afb      	ldrb	r3, [r7, #11]
 8005e14:	2b7e      	cmp	r3, #126	; 0x7e
 8005e16:	d11b      	bne.n	8005e50 <EMBENET_BRT_Receive+0x84>
                if (HDLC_FLAG != lastDataByte) {
 8005e18:	4b5a      	ldr	r3, [pc, #360]	; (8005f84 <EMBENET_BRT_Receive+0x1b8>)
 8005e1a:	781b      	ldrb	r3, [r3, #0]
 8005e1c:	2b7e      	cmp	r3, #126	; 0x7e
 8005e1e:	d010      	beq.n	8005e42 <EMBENET_BRT_Receive+0x76>
                    // finished frame
                    inputFrameReceiving = false;
 8005e20:	4b56      	ldr	r3, [pc, #344]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005e22:	2200      	movs	r2, #0
 8005e24:	701a      	strb	r2, [r3, #0]
                    if (inputFrameDataIndex > 2) {
 8005e26:	4b56      	ldr	r3, [pc, #344]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	2b02      	cmp	r3, #2
 8005e2c:	d902      	bls.n	8005e34 <EMBENET_BRT_Receive+0x68>
                        frameComplete = true; // one frame at a time
 8005e2e:	2301      	movs	r3, #1
 8005e30:	75fb      	strb	r3, [r7, #23]
 8005e32:	e033      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                    } else {
                        // new frame may be ongoing
                        inputFrameReceiving = true;
 8005e34:	4b51      	ldr	r3, [pc, #324]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005e36:	2201      	movs	r2, #1
 8005e38:	701a      	strb	r2, [r3, #0]
                        inputFrameDataIndex = 0;
 8005e3a:	4b51      	ldr	r3, [pc, #324]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e3c:	2200      	movs	r2, #0
 8005e3e:	601a      	str	r2, [r3, #0]
 8005e40:	e02c      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                    }
                } else {
                    // two '~' at a time, repeating frame start
                    inputFrameReceiving = true;
 8005e42:	4b4e      	ldr	r3, [pc, #312]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005e44:	2201      	movs	r2, #1
 8005e46:	701a      	strb	r2, [r3, #0]
                    inputFrameDataIndex = 0;
 8005e48:	4b4d      	ldr	r3, [pc, #308]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e4a:	2200      	movs	r2, #0
 8005e4c:	601a      	str	r2, [r3, #0]
 8005e4e:	e025      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                }
            } else {
                // add byte to buffer
                if (inputFrameDataIndex < sizeof(inputFrame)) {
 8005e50:	4b4b      	ldr	r3, [pc, #300]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e52:	681b      	ldr	r3, [r3, #0]
 8005e54:	2bc7      	cmp	r3, #199	; 0xc7
 8005e56:	d81b      	bhi.n	8005e90 <EMBENET_BRT_Receive+0xc4>
                    if (HDLC_ESCAPE != dataByte) {
 8005e58:	7afb      	ldrb	r3, [r7, #11]
 8005e5a:	2b7d      	cmp	r3, #125	; 0x7d
 8005e5c:	d01e      	beq.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                        if (HDLC_ESCAPE != lastDataByte) {
 8005e5e:	4b49      	ldr	r3, [pc, #292]	; (8005f84 <EMBENET_BRT_Receive+0x1b8>)
 8005e60:	781b      	ldrb	r3, [r3, #0]
 8005e62:	2b7d      	cmp	r3, #125	; 0x7d
 8005e64:	d008      	beq.n	8005e78 <EMBENET_BRT_Receive+0xac>
                            inputFrame[inputFrameDataIndex++] = dataByte;
 8005e66:	4b46      	ldr	r3, [pc, #280]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	1c5a      	adds	r2, r3, #1
 8005e6c:	4944      	ldr	r1, [pc, #272]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e6e:	600a      	str	r2, [r1, #0]
 8005e70:	7af9      	ldrb	r1, [r7, #11]
 8005e72:	4a45      	ldr	r2, [pc, #276]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005e74:	54d1      	strb	r1, [r2, r3]
 8005e76:	e011      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                        } else {
                            inputFrame[inputFrameDataIndex++] = (dataByte ^ HDLC_ESCAPE_MASK);
 8005e78:	7afa      	ldrb	r2, [r7, #11]
 8005e7a:	4b41      	ldr	r3, [pc, #260]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	1c59      	adds	r1, r3, #1
 8005e80:	483f      	ldr	r0, [pc, #252]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e82:	6001      	str	r1, [r0, #0]
 8005e84:	f082 0220 	eor.w	r2, r2, #32
 8005e88:	b2d1      	uxtb	r1, r2
 8005e8a:	4a3f      	ldr	r2, [pc, #252]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005e8c:	54d1      	strb	r1, [r2, r3]
 8005e8e:	e005      	b.n	8005e9c <EMBENET_BRT_Receive+0xd0>
                        }
                    }
                } else {
                    inputFrameReceiving = false;
 8005e90:	4b3a      	ldr	r3, [pc, #232]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005e92:	2200      	movs	r2, #0
 8005e94:	701a      	strb	r2, [r3, #0]
                    inputFrameDataIndex = 0;
 8005e96:	4b3a      	ldr	r3, [pc, #232]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005e98:	2200      	movs	r2, #0
 8005e9a:	601a      	str	r2, [r3, #0]
                }
            }
        }
        lastDataByte = dataByte;
 8005e9c:	7afa      	ldrb	r2, [r7, #11]
 8005e9e:	4b39      	ldr	r3, [pc, #228]	; (8005f84 <EMBENET_BRT_Receive+0x1b8>)
 8005ea0:	701a      	strb	r2, [r3, #0]
    while (RingBuffer_GetLen(&inputRingBufferDesc) > 0 && frameComplete == false) {
 8005ea2:	4835      	ldr	r0, [pc, #212]	; (8005f78 <EMBENET_BRT_Receive+0x1ac>)
 8005ea4:	f7fb fc7b 	bl	800179e <RingBuffer_GetLen>
 8005ea8:	4603      	mov	r3, r0
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	d005      	beq.n	8005eba <EMBENET_BRT_Receive+0xee>
 8005eae:	7dfb      	ldrb	r3, [r7, #23]
 8005eb0:	f083 0301 	eor.w	r3, r3, #1
 8005eb4:	b2db      	uxtb	r3, r3
 8005eb6:	2b00      	cmp	r3, #0
 8005eb8:	d190      	bne.n	8005ddc <EMBENET_BRT_Receive+0x10>
    }

    if (true == frameComplete && inputFrameDataIndex > 0) {
 8005eba:	7dfb      	ldrb	r3, [r7, #23]
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	d056      	beq.n	8005f6e <EMBENET_BRT_Receive+0x1a2>
 8005ec0:	4b2f      	ldr	r3, [pc, #188]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	2b00      	cmp	r3, #0
 8005ec6:	d052      	beq.n	8005f6e <EMBENET_BRT_Receive+0x1a2>
        // full frame has been received, structure:
        // - data: variable bytes count
        // - CRC: 2B
        // check CRC
        uint16_t crc = HDLC_CRCINIT;
 8005ec8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005ecc:	82bb      	strh	r3, [r7, #20]
        for (size_t index = 0; index < inputFrameDataIndex - 2; ++index) { // two last bytes are CRC bytes
 8005ece:	2300      	movs	r3, #0
 8005ed0:	613b      	str	r3, [r7, #16]
 8005ed2:	e00d      	b.n	8005ef0 <EMBENET_BRT_Receive+0x124>
            crc = openhdlc_crc(crc, inputFrame[index]);
 8005ed4:	4a2c      	ldr	r2, [pc, #176]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005ed6:	693b      	ldr	r3, [r7, #16]
 8005ed8:	4413      	add	r3, r2
 8005eda:	781a      	ldrb	r2, [r3, #0]
 8005edc:	8abb      	ldrh	r3, [r7, #20]
 8005ede:	4611      	mov	r1, r2
 8005ee0:	4618      	mov	r0, r3
 8005ee2:	f7ff ff17 	bl	8005d14 <openhdlc_crc>
 8005ee6:	4603      	mov	r3, r0
 8005ee8:	82bb      	strh	r3, [r7, #20]
        for (size_t index = 0; index < inputFrameDataIndex - 2; ++index) { // two last bytes are CRC bytes
 8005eea:	693b      	ldr	r3, [r7, #16]
 8005eec:	3301      	adds	r3, #1
 8005eee:	613b      	str	r3, [r7, #16]
 8005ef0:	4b23      	ldr	r3, [pc, #140]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005ef2:	681b      	ldr	r3, [r3, #0]
 8005ef4:	3b02      	subs	r3, #2
 8005ef6:	693a      	ldr	r2, [r7, #16]
 8005ef8:	429a      	cmp	r2, r3
 8005efa:	d3eb      	bcc.n	8005ed4 <EMBENET_BRT_Receive+0x108>
        }
        crc = (uint16_t)(~crc);
 8005efc:	8abb      	ldrh	r3, [r7, #20]
 8005efe:	43db      	mvns	r3, r3
 8005f00:	82bb      	strh	r3, [r7, #20]
        if ((((crc >> 0) & 0xff) == inputFrame[inputFrameDataIndex - 2]) && (((crc >> 8) & 0xff) == inputFrame[inputFrameDataIndex - 1])) { // two last bytes are CRC bytes
 8005f02:	8abb      	ldrh	r3, [r7, #20]
 8005f04:	b2db      	uxtb	r3, r3
 8005f06:	4a1e      	ldr	r2, [pc, #120]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005f08:	6812      	ldr	r2, [r2, #0]
 8005f0a:	3a02      	subs	r2, #2
 8005f0c:	491e      	ldr	r1, [pc, #120]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005f0e:	5c8a      	ldrb	r2, [r1, r2]
 8005f10:	4293      	cmp	r3, r2
 8005f12:	d126      	bne.n	8005f62 <EMBENET_BRT_Receive+0x196>
 8005f14:	8abb      	ldrh	r3, [r7, #20]
 8005f16:	0a1b      	lsrs	r3, r3, #8
 8005f18:	b29b      	uxth	r3, r3
 8005f1a:	b2db      	uxtb	r3, r3
 8005f1c:	4a18      	ldr	r2, [pc, #96]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005f1e:	6812      	ldr	r2, [r2, #0]
 8005f20:	3a01      	subs	r2, #1
 8005f22:	4919      	ldr	r1, [pc, #100]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005f24:	5c8a      	ldrb	r2, [r1, r2]
 8005f26:	4293      	cmp	r3, r2
 8005f28:	d11b      	bne.n	8005f62 <EMBENET_BRT_Receive+0x196>
            // CRC OK!
            size_t returnSize = inputFrameDataIndex - 2;
 8005f2a:	4b15      	ldr	r3, [pc, #84]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005f2c:	681b      	ldr	r3, [r3, #0]
 8005f2e:	3b02      	subs	r3, #2
 8005f30:	60fb      	str	r3, [r7, #12]
            // frame received, pretend last HDLC flag belongs to new frame
            inputFrameReceiving = true;
 8005f32:	4b12      	ldr	r3, [pc, #72]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005f34:	2201      	movs	r2, #1
 8005f36:	701a      	strb	r2, [r3, #0]
            inputFrameDataIndex = 0;
 8005f38:	4b11      	ldr	r3, [pc, #68]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005f3a:	2200      	movs	r2, #0
 8005f3c:	601a      	str	r2, [r3, #0]
            // copy data
            if (packetBufferSize >= returnSize) { // data bytes count without CRC
 8005f3e:	683a      	ldr	r2, [r7, #0]
 8005f40:	68fb      	ldr	r3, [r7, #12]
 8005f42:	429a      	cmp	r2, r3
 8005f44:	d306      	bcc.n	8005f54 <EMBENET_BRT_Receive+0x188>
                memcpy(packetBuffer, &inputFrame[0], returnSize);
 8005f46:	68fa      	ldr	r2, [r7, #12]
 8005f48:	490f      	ldr	r1, [pc, #60]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005f4a:	6878      	ldr	r0, [r7, #4]
 8005f4c:	f025 f973 	bl	802b236 <memcpy>
                return returnSize;
 8005f50:	68fb      	ldr	r3, [r7, #12]
 8005f52:	e00d      	b.n	8005f70 <EMBENET_BRT_Receive+0x1a4>
            } else {
                memcpy(packetBuffer, &inputFrame[0], packetBufferSize);
 8005f54:	683a      	ldr	r2, [r7, #0]
 8005f56:	490c      	ldr	r1, [pc, #48]	; (8005f88 <EMBENET_BRT_Receive+0x1bc>)
 8005f58:	6878      	ldr	r0, [r7, #4]
 8005f5a:	f025 f96c 	bl	802b236 <memcpy>
                return 0;
 8005f5e:	2300      	movs	r3, #0
 8005f60:	e006      	b.n	8005f70 <EMBENET_BRT_Receive+0x1a4>
            }
        } else {
            // frame malformed, pretend last HDLC flag belongs to new frame

            inputFrameReceiving = true;
 8005f62:	4b06      	ldr	r3, [pc, #24]	; (8005f7c <EMBENET_BRT_Receive+0x1b0>)
 8005f64:	2201      	movs	r2, #1
 8005f66:	701a      	strb	r2, [r3, #0]
            inputFrameDataIndex = 0;
 8005f68:	4b05      	ldr	r3, [pc, #20]	; (8005f80 <EMBENET_BRT_Receive+0x1b4>)
 8005f6a:	2200      	movs	r2, #0
 8005f6c:	601a      	str	r2, [r3, #0]
        }
    }

    return 0;
 8005f6e:	2300      	movs	r3, #0
}
 8005f70:	4618      	mov	r0, r3
 8005f72:	3718      	adds	r7, #24
 8005f74:	46bd      	mov	sp, r7
 8005f76:	bd80      	pop	{r7, pc}
 8005f78:	200009d4 	.word	0x200009d4
 8005f7c:	200009e9 	.word	0x200009e9
 8005f80:	200009ec 	.word	0x200009ec
 8005f84:	200009f0 	.word	0x200009f0
 8005f88:	200009f4 	.word	0x200009f4

08005f8c <EMBENET_BRT_Reset>:
    }
    EMBENET_CRITICAL_SECTION_Exit();
    return (size_t)(dataBytes - (uint8_t*)data);
}

void EMBENET_BRT_Reset(void) {
 8005f8c:	b580      	push	{r7, lr}
 8005f8e:	b082      	sub	sp, #8
 8005f90:	af00      	add	r7, sp, #0
    for (volatile int i = 0; i < 1000000; ++i)
 8005f92:	2300      	movs	r3, #0
 8005f94:	607b      	str	r3, [r7, #4]
 8005f96:	e002      	b.n	8005f9e <EMBENET_BRT_Reset+0x12>
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	3301      	adds	r3, #1
 8005f9c:	607b      	str	r3, [r7, #4]
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	4a02      	ldr	r2, [pc, #8]	; (8005fac <EMBENET_BRT_Reset+0x20>)
 8005fa2:	4293      	cmp	r3, r2
 8005fa4:	ddf8      	ble.n	8005f98 <EMBENET_BRT_Reset+0xc>
        ;
    NVIC_SystemReset();
 8005fa6:	f7ff fe9f 	bl	8005ce8 <__NVIC_SystemReset>
 8005faa:	bf00      	nop
 8005fac:	000f423f 	.word	0x000f423f

08005fb0 <putFlag>:
    }
    EMBENET_CRITICAL_SECTION_Exit();
}


static void putFlag(uint8_t flag) {
 8005fb0:	b580      	push	{r7, lr}
 8005fb2:	b082      	sub	sp, #8
 8005fb4:	af00      	add	r7, sp, #0
 8005fb6:	4603      	mov	r3, r0
 8005fb8:	71fb      	strb	r3, [r7, #7]
    uartWrite(flag);
 8005fba:	79fb      	ldrb	r3, [r7, #7]
 8005fbc:	4618      	mov	r0, r3
 8005fbe:	f000 f823 	bl	8006008 <uartWrite>
}
 8005fc2:	bf00      	nop
 8005fc4:	3708      	adds	r7, #8
 8005fc6:	46bd      	mov	sp, r7
 8005fc8:	bd80      	pop	{r7, pc}

08005fca <putByte>:


static void putByte(uint8_t byte) {
 8005fca:	b580      	push	{r7, lr}
 8005fcc:	b082      	sub	sp, #8
 8005fce:	af00      	add	r7, sp, #0
 8005fd0:	4603      	mov	r3, r0
 8005fd2:	71fb      	strb	r3, [r7, #7]
    // add byte to buffer
    if (byte == HDLC_FLAG || byte == HDLC_ESCAPE) {
 8005fd4:	79fb      	ldrb	r3, [r7, #7]
 8005fd6:	2b7e      	cmp	r3, #126	; 0x7e
 8005fd8:	d002      	beq.n	8005fe0 <putByte+0x16>
 8005fda:	79fb      	ldrb	r3, [r7, #7]
 8005fdc:	2b7d      	cmp	r3, #125	; 0x7d
 8005fde:	d10a      	bne.n	8005ff6 <putByte+0x2c>
        uartWrite(HDLC_ESCAPE);
 8005fe0:	207d      	movs	r0, #125	; 0x7d
 8005fe2:	f000 f811 	bl	8006008 <uartWrite>
        uartWrite(byte ^ HDLC_ESCAPE_MASK);
 8005fe6:	79fb      	ldrb	r3, [r7, #7]
 8005fe8:	f083 0320 	eor.w	r3, r3, #32
 8005fec:	b2db      	uxtb	r3, r3
 8005fee:	4618      	mov	r0, r3
 8005ff0:	f000 f80a 	bl	8006008 <uartWrite>
 8005ff4:	e004      	b.n	8006000 <putByte+0x36>
    } else {
        uartWrite(byte);
 8005ff6:	79fb      	ldrb	r3, [r7, #7]
 8005ff8:	4618      	mov	r0, r3
 8005ffa:	f000 f805 	bl	8006008 <uartWrite>
    }
}
 8005ffe:	bf00      	nop
 8006000:	bf00      	nop
 8006002:	3708      	adds	r7, #8
 8006004:	46bd      	mov	sp, r7
 8006006:	bd80      	pop	{r7, pc}

08006008 <uartWrite>:


static void uartWrite(uint8_t data) {
 8006008:	b580      	push	{r7, lr}
 800600a:	b082      	sub	sp, #8
 800600c:	af00      	add	r7, sp, #0
 800600e:	4603      	mov	r3, r0
 8006010:	71fb      	strb	r3, [r7, #7]
    EMBENET_CRITICAL_SECTION_Enter();
 8006012:	f000 f81d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
    if (true == isTransmitting) {
 8006016:	4b0c      	ldr	r3, [pc, #48]	; (8006048 <uartWrite+0x40>)
 8006018:	781b      	ldrb	r3, [r3, #0]
 800601a:	b2db      	uxtb	r3, r3
 800601c:	2b00      	cmp	r3, #0
 800601e:	d005      	beq.n	800602c <uartWrite+0x24>
        // put to FIFO buffer
        RingBuffer_PutChar(&outputRingBufferDesc, data);
 8006020:	79fb      	ldrb	r3, [r7, #7]
 8006022:	4619      	mov	r1, r3
 8006024:	4809      	ldr	r0, [pc, #36]	; (800604c <uartWrite+0x44>)
 8006026:	f7fb fbca 	bl	80017be <RingBuffer_PutChar>
 800602a:	e006      	b.n	800603a <uartWrite+0x32>

    } else {
        // change transmitting flag state
        isTransmitting = true;
 800602c:	4b06      	ldr	r3, [pc, #24]	; (8006048 <uartWrite+0x40>)
 800602e:	2201      	movs	r2, #1
 8006030:	701a      	strb	r2, [r3, #0]
        // put byte to uart
        EMBENET_NODE_BSP_UART_WriteByte(data);
 8006032:	79fb      	ldrb	r3, [r7, #7]
 8006034:	4618      	mov	r0, r3
 8006036:	f7ff fd22 	bl	8005a7e <EMBENET_NODE_BSP_UART_WriteByte>
    }
    EMBENET_CRITICAL_SECTION_Exit();
 800603a:	f000 f829 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
}
 800603e:	bf00      	nop
 8006040:	3708      	adds	r7, #8
 8006042:	46bd      	mov	sp, r7
 8006044:	bd80      	pop	{r7, pc}
 8006046:	bf00      	nop
 8006048:	200009e8 	.word	0x200009e8
 800604c:	200009c0 	.word	0x200009c0

08006050 <EMBENET_CRITICAL_SECTION_Enter>:
#pragma GCC diagnostic pop

static volatile int      irqNestCounter;
static volatile uint32_t previousIrqState;

void EMBENET_CRITICAL_SECTION_Enter(void) {
 8006050:	b480      	push	{r7}
 8006052:	b083      	sub	sp, #12
 8006054:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006056:	f3ef 8310 	mrs	r3, PRIMASK
 800605a:	603b      	str	r3, [r7, #0]
  return(result);
 800605c:	683b      	ldr	r3, [r7, #0]
    uint32_t irqState = __get_PRIMASK();
 800605e:	607b      	str	r3, [r7, #4]
  __ASM volatile ("cpsid i" : : : "memory");
 8006060:	b672      	cpsid	i
}
 8006062:	bf00      	nop
    __disable_irq();
    if (0 == irqNestCounter) {
 8006064:	4b08      	ldr	r3, [pc, #32]	; (8006088 <EMBENET_CRITICAL_SECTION_Enter+0x38>)
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	2b00      	cmp	r3, #0
 800606a:	d102      	bne.n	8006072 <EMBENET_CRITICAL_SECTION_Enter+0x22>
        previousIrqState = irqState;
 800606c:	4a07      	ldr	r2, [pc, #28]	; (800608c <EMBENET_CRITICAL_SECTION_Enter+0x3c>)
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	6013      	str	r3, [r2, #0]
    }
    ++irqNestCounter;
 8006072:	4b05      	ldr	r3, [pc, #20]	; (8006088 <EMBENET_CRITICAL_SECTION_Enter+0x38>)
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	3301      	adds	r3, #1
 8006078:	4a03      	ldr	r2, [pc, #12]	; (8006088 <EMBENET_CRITICAL_SECTION_Enter+0x38>)
 800607a:	6013      	str	r3, [r2, #0]
}
 800607c:	bf00      	nop
 800607e:	370c      	adds	r7, #12
 8006080:	46bd      	mov	sp, r7
 8006082:	bc80      	pop	{r7}
 8006084:	4770      	bx	lr
 8006086:	bf00      	nop
 8006088:	20000abc 	.word	0x20000abc
 800608c:	20000ac0 	.word	0x20000ac0

08006090 <EMBENET_CRITICAL_SECTION_Exit>:


void EMBENET_CRITICAL_SECTION_Exit(void) {
 8006090:	b480      	push	{r7}
 8006092:	af00      	add	r7, sp, #0
    --irqNestCounter;
 8006094:	4b0c      	ldr	r3, [pc, #48]	; (80060c8 <EMBENET_CRITICAL_SECTION_Exit+0x38>)
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	3b01      	subs	r3, #1
 800609a:	4a0b      	ldr	r2, [pc, #44]	; (80060c8 <EMBENET_CRITICAL_SECTION_Exit+0x38>)
 800609c:	6013      	str	r3, [r2, #0]
    if (irqNestCounter < 0) {
 800609e:	4b0a      	ldr	r3, [pc, #40]	; (80060c8 <EMBENET_CRITICAL_SECTION_Exit+0x38>)
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	da02      	bge.n	80060ac <EMBENET_CRITICAL_SECTION_Exit+0x1c>
        irqNestCounter = 0;
 80060a6:	4b08      	ldr	r3, [pc, #32]	; (80060c8 <EMBENET_CRITICAL_SECTION_Exit+0x38>)
 80060a8:	2200      	movs	r2, #0
 80060aa:	601a      	str	r2, [r3, #0]
    }
    if (0 == irqNestCounter && 0 == previousIrqState) {
 80060ac:	4b06      	ldr	r3, [pc, #24]	; (80060c8 <EMBENET_CRITICAL_SECTION_Exit+0x38>)
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	2b00      	cmp	r3, #0
 80060b2:	d105      	bne.n	80060c0 <EMBENET_CRITICAL_SECTION_Exit+0x30>
 80060b4:	4b05      	ldr	r3, [pc, #20]	; (80060cc <EMBENET_CRITICAL_SECTION_Exit+0x3c>)
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d101      	bne.n	80060c0 <EMBENET_CRITICAL_SECTION_Exit+0x30>
  __ASM volatile ("cpsie i" : : : "memory");
 80060bc:	b662      	cpsie	i
}
 80060be:	bf00      	nop
        __enable_irq();
    }
}
 80060c0:	bf00      	nop
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bc80      	pop	{r7}
 80060c6:	4770      	bx	lr
 80060c8:	20000abc 	.word	0x20000abc
 80060cc:	20000ac0 	.word	0x20000ac0

080060d0 <EMBENET_EUI64_Get>:
#pragma GCC diagnostic pop

#include <string.h>


uint64_t EMBENET_EUI64_Get(void) {
 80060d0:	b480      	push	{r7}
 80060d2:	b083      	sub	sp, #12
 80060d4:	af00      	add	r7, sp, #0
 80060d6:	4b06      	ldr	r3, [pc, #24]	; (80060f0 <EMBENET_EUI64_Get+0x20>)
 80060d8:	e9d3 2300 	ldrd	r2, r3, [r3]
    uint64_t native;
    memcpy(&native, (uint8_t*)UID64_BASE, sizeof(native));
 80060dc:	e9c7 2300 	strd	r2, r3, [r7]
    return native;
 80060e0:	e9d7 2300 	ldrd	r2, r3, [r7]
}
 80060e4:	4610      	mov	r0, r2
 80060e6:	4619      	mov	r1, r3
 80060e8:	370c      	adds	r7, #12
 80060ea:	46bd      	mov	sp, r7
 80060ec:	bc80      	pop	{r7}
 80060ee:	4770      	bx	lr
 80060f0:	1fff7580 	.word	0x1fff7580

080060f4 <__NVIC_GetPriorityGrouping>:
{
 80060f4:	b480      	push	{r7}
 80060f6:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80060f8:	4b04      	ldr	r3, [pc, #16]	; (800610c <__NVIC_GetPriorityGrouping+0x18>)
 80060fa:	68db      	ldr	r3, [r3, #12]
 80060fc:	0a1b      	lsrs	r3, r3, #8
 80060fe:	f003 0307 	and.w	r3, r3, #7
}
 8006102:	4618      	mov	r0, r3
 8006104:	46bd      	mov	sp, r7
 8006106:	bc80      	pop	{r7}
 8006108:	4770      	bx	lr
 800610a:	bf00      	nop
 800610c:	e000ed00 	.word	0xe000ed00

08006110 <__NVIC_EnableIRQ>:
{
 8006110:	b480      	push	{r7}
 8006112:	b083      	sub	sp, #12
 8006114:	af00      	add	r7, sp, #0
 8006116:	4603      	mov	r3, r0
 8006118:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800611a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800611e:	2b00      	cmp	r3, #0
 8006120:	db0b      	blt.n	800613a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006122:	79fb      	ldrb	r3, [r7, #7]
 8006124:	f003 021f 	and.w	r2, r3, #31
 8006128:	4906      	ldr	r1, [pc, #24]	; (8006144 <__NVIC_EnableIRQ+0x34>)
 800612a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800612e:	095b      	lsrs	r3, r3, #5
 8006130:	2001      	movs	r0, #1
 8006132:	fa00 f202 	lsl.w	r2, r0, r2
 8006136:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800613a:	bf00      	nop
 800613c:	370c      	adds	r7, #12
 800613e:	46bd      	mov	sp, r7
 8006140:	bc80      	pop	{r7}
 8006142:	4770      	bx	lr
 8006144:	e000e100 	.word	0xe000e100

08006148 <__NVIC_SetPriority>:
{
 8006148:	b480      	push	{r7}
 800614a:	b083      	sub	sp, #12
 800614c:	af00      	add	r7, sp, #0
 800614e:	4603      	mov	r3, r0
 8006150:	6039      	str	r1, [r7, #0]
 8006152:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006154:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006158:	2b00      	cmp	r3, #0
 800615a:	db0a      	blt.n	8006172 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800615c:	683b      	ldr	r3, [r7, #0]
 800615e:	b2da      	uxtb	r2, r3
 8006160:	490c      	ldr	r1, [pc, #48]	; (8006194 <__NVIC_SetPriority+0x4c>)
 8006162:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006166:	0112      	lsls	r2, r2, #4
 8006168:	b2d2      	uxtb	r2, r2
 800616a:	440b      	add	r3, r1
 800616c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8006170:	e00a      	b.n	8006188 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006172:	683b      	ldr	r3, [r7, #0]
 8006174:	b2da      	uxtb	r2, r3
 8006176:	4908      	ldr	r1, [pc, #32]	; (8006198 <__NVIC_SetPriority+0x50>)
 8006178:	79fb      	ldrb	r3, [r7, #7]
 800617a:	f003 030f 	and.w	r3, r3, #15
 800617e:	3b04      	subs	r3, #4
 8006180:	0112      	lsls	r2, r2, #4
 8006182:	b2d2      	uxtb	r2, r2
 8006184:	440b      	add	r3, r1
 8006186:	761a      	strb	r2, [r3, #24]
}
 8006188:	bf00      	nop
 800618a:	370c      	adds	r7, #12
 800618c:	46bd      	mov	sp, r7
 800618e:	bc80      	pop	{r7}
 8006190:	4770      	bx	lr
 8006192:	bf00      	nop
 8006194:	e000e100 	.word	0xe000e100
 8006198:	e000ed00 	.word	0xe000ed00

0800619c <NVIC_EncodePriority>:
{
 800619c:	b480      	push	{r7}
 800619e:	b089      	sub	sp, #36	; 0x24
 80061a0:	af00      	add	r7, sp, #0
 80061a2:	60f8      	str	r0, [r7, #12]
 80061a4:	60b9      	str	r1, [r7, #8]
 80061a6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	f003 0307 	and.w	r3, r3, #7
 80061ae:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061b0:	69fb      	ldr	r3, [r7, #28]
 80061b2:	f1c3 0307 	rsb	r3, r3, #7
 80061b6:	2b04      	cmp	r3, #4
 80061b8:	bf28      	it	cs
 80061ba:	2304      	movcs	r3, #4
 80061bc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061be:	69fb      	ldr	r3, [r7, #28]
 80061c0:	3304      	adds	r3, #4
 80061c2:	2b06      	cmp	r3, #6
 80061c4:	d902      	bls.n	80061cc <NVIC_EncodePriority+0x30>
 80061c6:	69fb      	ldr	r3, [r7, #28]
 80061c8:	3b03      	subs	r3, #3
 80061ca:	e000      	b.n	80061ce <NVIC_EncodePriority+0x32>
 80061cc:	2300      	movs	r3, #0
 80061ce:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061d0:	f04f 32ff 	mov.w	r2, #4294967295
 80061d4:	69bb      	ldr	r3, [r7, #24]
 80061d6:	fa02 f303 	lsl.w	r3, r2, r3
 80061da:	43da      	mvns	r2, r3
 80061dc:	68bb      	ldr	r3, [r7, #8]
 80061de:	401a      	ands	r2, r3
 80061e0:	697b      	ldr	r3, [r7, #20]
 80061e2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80061e4:	f04f 31ff 	mov.w	r1, #4294967295
 80061e8:	697b      	ldr	r3, [r7, #20]
 80061ea:	fa01 f303 	lsl.w	r3, r1, r3
 80061ee:	43d9      	mvns	r1, r3
 80061f0:	687b      	ldr	r3, [r7, #4]
 80061f2:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061f4:	4313      	orrs	r3, r2
}
 80061f6:	4618      	mov	r0, r3
 80061f8:	3724      	adds	r7, #36	; 0x24
 80061fa:	46bd      	mov	sp, r7
 80061fc:	bc80      	pop	{r7}
 80061fe:	4770      	bx	lr

08006200 <LL_APB3_GRP1_EnableClock>:
  * @param  Periphs This parameter can be a combination of the following values:
  *         @arg @ref LL_APB3_GRP1_PERIPH_SUBGHZSPI
  * @retval None
  */
__STATIC_INLINE void LL_APB3_GRP1_EnableClock(uint32_t Periphs)
{
 8006200:	b480      	push	{r7}
 8006202:	b085      	sub	sp, #20
 8006204:	af00      	add	r7, sp, #0
 8006206:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB3ENR, Periphs);
 8006208:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800620c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800620e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	4313      	orrs	r3, r2
 8006216:	664b      	str	r3, [r1, #100]	; 0x64
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB3ENR, Periphs);
 8006218:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800621c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	4013      	ands	r3, r2
 8006222:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8006224:	68fb      	ldr	r3, [r7, #12]
}
 8006226:	bf00      	nop
 8006228:	3714      	adds	r7, #20
 800622a:	46bd      	mov	sp, r7
 800622c:	bc80      	pop	{r7}
 800622e:	4770      	bx	lr

08006230 <LL_APB3_GRP1_ForceReset>:
  * @param  Periphs This parameter can be a combination of the following values:
  *         @arg @ref LL_APB3_GRP1_PERIPH_SUBGHZSPI
  * @retval None
  */
__STATIC_INLINE void LL_APB3_GRP1_ForceReset(uint32_t Periphs)
{
 8006230:	b480      	push	{r7}
 8006232:	b083      	sub	sp, #12
 8006234:	af00      	add	r7, sp, #0
 8006236:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB3RSTR, Periphs);
 8006238:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800623c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800623e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	4313      	orrs	r3, r2
 8006246:	644b      	str	r3, [r1, #68]	; 0x44
}
 8006248:	bf00      	nop
 800624a:	370c      	adds	r7, #12
 800624c:	46bd      	mov	sp, r7
 800624e:	bc80      	pop	{r7}
 8006250:	4770      	bx	lr

08006252 <LL_APB3_GRP1_ReleaseReset>:
  * @param  Periphs This parameter can be a combination of the following values:
  *         @arg @ref LL_APB3_GRP1_PERIPH_SUBGHZSPI
  * @retval None
  */
__STATIC_INLINE void LL_APB3_GRP1_ReleaseReset(uint32_t Periphs)
{
 8006252:	b480      	push	{r7}
 8006254:	b083      	sub	sp, #12
 8006256:	af00      	add	r7, sp, #0
 8006258:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB3RSTR, Periphs);
 800625a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800625e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	43db      	mvns	r3, r3
 8006264:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006268:	4013      	ands	r3, r2
 800626a:	644b      	str	r3, [r1, #68]	; 0x44
}
 800626c:	bf00      	nop
 800626e:	370c      	adds	r7, #12
 8006270:	46bd      	mov	sp, r7
 8006272:	bc80      	pop	{r7}
 8006274:	4770      	bx	lr
	...

08006278 <calculateFrequency>:
    RxEndOffset     = (70),
    RxStartOffset   = (1700),
};


static inline uint32_t calculateFrequency(EMBENET_RADIO_Channel channel) {
 8006278:	b480      	push	{r7}
 800627a:	b085      	sub	sp, #20
 800627c:	af00      	add	r7, sp, #0
 800627e:	4603      	mov	r3, r0
 8006280:	71fb      	strb	r3, [r7, #7]
    uint32_t calculatedFrequency = ((uint32_t)channel * (uint32_t)Bandwidth) + (uint32_t)BaseFrequency;
 8006282:	79fb      	ldrb	r3, [r7, #7]
 8006284:	4a05      	ldr	r2, [pc, #20]	; (800629c <calculateFrequency+0x24>)
 8006286:	fb03 f202 	mul.w	r2, r3, r2
 800628a:	4b05      	ldr	r3, [pc, #20]	; (80062a0 <calculateFrequency+0x28>)
 800628c:	4413      	add	r3, r2
 800628e:	60fb      	str	r3, [r7, #12]
    return calculatedFrequency;
 8006290:	68fb      	ldr	r3, [r7, #12]
}
 8006292:	4618      	mov	r0, r3
 8006294:	3714      	adds	r7, #20
 8006296:	46bd      	mov	sp, r7
 8006298:	bc80      	pop	{r7}
 800629a:	4770      	bx	lr
 800629c:	000186a0 	.word	0x000186a0
 80062a0:	3371dc60 	.word	0x3371dc60

080062a4 <EMBENET_RADIO_Init>:
    {4800, 0x1F},  {5800, 0x17},  {7300, 0x0F},  {9700, 0x1E},   {11700, 0x16},  {14600, 0x0E},  {19500, 0x1D},  {23400, 0x15},  {29300, 0x0D},  {39000, 0x1C},  {46900, 0x14},
    {58600, 0x0C}, {78200, 0x1B}, {93800, 0x13}, {117300, 0x0B}, {156200, 0x1A}, {187200, 0x12}, {234300, 0x0A}, {312000, 0x19}, {373600, 0x11}, {467000, 0x09}, {500000, 0x00}, // Invalid Bandwidth
};


EMBENET_RADIO_Status EMBENET_RADIO_Init(void) {
 80062a4:	b580      	push	{r7, lr}
 80062a6:	b092      	sub	sp, #72	; 0x48
 80062a8:	af00      	add	r7, sp, #0
    embenetRadioDescr = (EMBENET_RADIO_Descriptor){0};
 80062aa:	4b45      	ldr	r3, [pc, #276]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 80062ac:	4618      	mov	r0, r3
 80062ae:	2324      	movs	r3, #36	; 0x24
 80062b0:	461a      	mov	r2, r3
 80062b2:	2100      	movs	r1, #0
 80062b4:	f024 ff20 	bl	802b0f8 <memset>
    __HAL_RCC_SUBGHZ_CLK_ENABLE();
 80062b8:	2001      	movs	r0, #1
 80062ba:	f7ff ffa1 	bl	8006200 <LL_APB3_GRP1_EnableClock>

    /* Force the SUBGHZ Periheral Clock Reset */
    __HAL_RCC_SUBGHZ_FORCE_RESET();
 80062be:	2001      	movs	r0, #1
 80062c0:	f7ff ffb6 	bl	8006230 <LL_APB3_GRP1_ForceReset>

    /* Release the SUBGHZ Periheral Clock Reset */
    __HAL_RCC_SUBGHZ_RELEASE_RESET();
 80062c4:	2001      	movs	r0, #1
 80062c6:	f7ff ffc4 	bl	8006252 <LL_APB3_GRP1_ReleaseReset>

    hsubghz.Init.BaudratePrescaler = SUBGHZSPI_BAUDRATEPRESCALER_2;
 80062ca:	4b3e      	ldr	r3, [pc, #248]	; (80063c4 <EMBENET_RADIO_Init+0x120>)
 80062cc:	2200      	movs	r2, #0
 80062ce:	601a      	str	r2, [r3, #0]
    if (HAL_SUBGHZ_Init(&hsubghz) != HAL_OK) {
 80062d0:	483c      	ldr	r0, [pc, #240]	; (80063c4 <EMBENET_RADIO_Init+0x120>)
 80062d2:	f7fd fd7b 	bl	8003dcc <HAL_SUBGHZ_Init>
 80062d6:	4603      	mov	r3, r0
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d000      	beq.n	80062de <EMBENET_RADIO_Init+0x3a>
        while (1)
 80062dc:	e7fe      	b.n	80062dc <EMBENET_RADIO_Init+0x38>
            ;
    }

    SUBGRF_Init(NULL);
 80062de:	2000      	movs	r0, #0
 80062e0:	f000 fd18 	bl	8006d14 <SUBGRF_Init>

    // Enable SUBGHZ Radio NVIC Interrupt (it is enabled inside the radio driver, but redo this again with proper priority setting)
    NVIC_SetPriority(SUBGHZ_Radio_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), INTERRUPT_PRIORITY_RADIO, INTERRUPT_SUBPRIORITY_RADIO));
 80062e4:	f7ff ff06 	bl	80060f4 <__NVIC_GetPriorityGrouping>
 80062e8:	4603      	mov	r3, r0
 80062ea:	2200      	movs	r2, #0
 80062ec:	2103      	movs	r1, #3
 80062ee:	4618      	mov	r0, r3
 80062f0:	f7ff ff54 	bl	800619c <NVIC_EncodePriority>
 80062f4:	4603      	mov	r3, r0
 80062f6:	4619      	mov	r1, r3
 80062f8:	2032      	movs	r0, #50	; 0x32
 80062fa:	f7ff ff25 	bl	8006148 <__NVIC_SetPriority>
    NVIC_EnableIRQ(SUBGHZ_Radio_IRQn);
 80062fe:	2032      	movs	r0, #50	; 0x32
 8006300:	f7ff ff06 	bl	8006110 <__NVIC_EnableIRQ>

    SUBGRF_SetRegulatorMode();
 8006304:	f000 fe62 	bl	8006fcc <SUBGRF_SetRegulatorMode>
    SUBGRF_SetBufferBaseAddress(0x00, 0x00);
 8006308:	2100      	movs	r1, #0
 800630a:	2000      	movs	r0, #0
 800630c:	f001 f9dc 	bl	80076c8 <SUBGRF_SetBufferBaseAddress>
    SUBGRF_SetTxParams(RFO_LP, 0, RADIO_RAMP_200_US);
 8006310:	2204      	movs	r2, #4
 8006312:	2100      	movs	r1, #0
 8006314:	2001      	movs	r0, #1
 8006316:	f000 fff9 	bl	800730c <SUBGRF_SetTxParams>
    SUBGRF_SetDioIrqParams(IRQ_TX_DONE | IRQ_RX_DONE | IRQ_SYNCWORD_VALID, IRQ_TX_DONE | IRQ_RX_DONE | IRQ_SYNCWORD_VALID, IRQ_RADIO_NONE, IRQ_RADIO_NONE);
 800631a:	2300      	movs	r3, #0
 800631c:	2200      	movs	r2, #0
 800631e:	210b      	movs	r1, #11
 8006320:	200b      	movs	r0, #11
 8006322:	f000 ff28 	bl	8007176 <SUBGRF_SetDioIrqParams>
    SUBGRF_SetStopRxTimerOnPreambleDetect(false);
 8006326:	2000      	movs	r0, #0
 8006328:	f000 fe40 	bl	8006fac <SUBGRF_SetStopRxTimerOnPreambleDetect>

    embenetRadioDescr.packetParams.PacketType = PACKET_TYPE_GFSK;
 800632c:	4b24      	ldr	r3, [pc, #144]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 800632e:	2200      	movs	r2, #0
 8006330:	731a      	strb	r2, [r3, #12]

    SUBGRF_SetPacketType(embenetRadioDescr.packetParams.PacketType);
 8006332:	4b23      	ldr	r3, [pc, #140]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 8006334:	7b1b      	ldrb	r3, [r3, #12]
 8006336:	4618      	mov	r0, r3
 8006338:	f000 ffc2 	bl	80072c0 <SUBGRF_SetPacketType>

    uint8_t syncWordBuffer[8] = {(uint8_t)(SYNC_WORD >> 8U), (uint8_t)(SYNC_WORD)};
 800633c:	f644 6390 	movw	r3, #20112	; 0x4e90
 8006340:	61fb      	str	r3, [r7, #28]
 8006342:	2300      	movs	r3, #0
 8006344:	623b      	str	r3, [r7, #32]
    SUBGRF_SetSyncWord(syncWordBuffer);
 8006346:	f107 031c 	add.w	r3, r7, #28
 800634a:	4618      	mov	r0, r3
 800634c:	f000 fd2e 	bl	8006dac <SUBGRF_SetSyncWord>


    ModulationParams_t modulationParams;
    modulationParams.PacketType                    = PACKET_TYPE_GFSK;
 8006350:	2300      	movs	r3, #0
 8006352:	703b      	strb	r3, [r7, #0]
    modulationParams.Params.Gfsk.BitRate           = BITRATE;
 8006354:	f24c 3350 	movw	r3, #50000	; 0xc350
 8006358:	607b      	str	r3, [r7, #4]
    modulationParams.Params.Gfsk.ModulationShaping = MOD_SHAPING_OFF;
 800635a:	2300      	movs	r3, #0
 800635c:	733b      	strb	r3, [r7, #12]
    modulationParams.Params.Gfsk.Bandwidth         = getFskBandwidthRegValue(Bandwidth);
 800635e:	481a      	ldr	r0, [pc, #104]	; (80063c8 <EMBENET_RADIO_Init+0x124>)
 8006360:	f000 f978 	bl	8006654 <getFskBandwidthRegValue>
 8006364:	4603      	mov	r3, r0
 8006366:	737b      	strb	r3, [r7, #13]
    modulationParams.Params.Gfsk.Fdev              = FREQ_DEVIATION;
 8006368:	f243 03d4 	movw	r3, #12500	; 0x30d4
 800636c:	60bb      	str	r3, [r7, #8]
    SUBGRF_SetModulationParams(&modulationParams);
 800636e:	463b      	mov	r3, r7
 8006370:	4618      	mov	r0, r3
 8006372:	f001 f831 	bl	80073d8 <SUBGRF_SetModulationParams>

    embenetRadioDescr.packetParams.Params.Gfsk.PreambleLength    = PREAMBLE_LENGTH_BITS;
 8006376:	4b12      	ldr	r3, [pc, #72]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 8006378:	2240      	movs	r2, #64	; 0x40
 800637a:	81da      	strh	r2, [r3, #14]
    embenetRadioDescr.packetParams.Params.Gfsk.PreambleMinDetect = RADIO_PREAMBLE_DETECTOR_16_BITS;
 800637c:	4b10      	ldr	r3, [pc, #64]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 800637e:	2205      	movs	r2, #5
 8006380:	741a      	strb	r2, [r3, #16]
    embenetRadioDescr.packetParams.Params.Gfsk.SyncWordLength    = SYNCWORD_LENGTH_BITS;
 8006382:	4b0f      	ldr	r3, [pc, #60]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 8006384:	2210      	movs	r2, #16
 8006386:	745a      	strb	r2, [r3, #17]
    embenetRadioDescr.packetParams.Params.Gfsk.AddrComp          = RADIO_ADDRESSCOMP_FILT_OFF;
 8006388:	4b0d      	ldr	r3, [pc, #52]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 800638a:	2200      	movs	r2, #0
 800638c:	749a      	strb	r2, [r3, #18]
    embenetRadioDescr.packetParams.Params.Gfsk.HeaderType        = RADIO_PACKET_VARIABLE_LENGTH;
 800638e:	4b0c      	ldr	r3, [pc, #48]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 8006390:	2201      	movs	r2, #1
 8006392:	74da      	strb	r2, [r3, #19]
    embenetRadioDescr.packetParams.Params.Gfsk.PayloadLength     = EMBENET_RADIO_MAX_PSDU_LENGTH;
 8006394:	4b0a      	ldr	r3, [pc, #40]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 8006396:	2280      	movs	r2, #128	; 0x80
 8006398:	751a      	strb	r2, [r3, #20]
    embenetRadioDescr.packetParams.Params.Gfsk.CrcLength         = RADIO_CRC_2_BYTES_CCIT;
 800639a:	4b09      	ldr	r3, [pc, #36]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 800639c:	22f2      	movs	r2, #242	; 0xf2
 800639e:	755a      	strb	r2, [r3, #21]
    embenetRadioDescr.packetParams.Params.Gfsk.DcFree            = RADIO_DC_FREEWHITENING;
 80063a0:	4b07      	ldr	r3, [pc, #28]	; (80063c0 <EMBENET_RADIO_Init+0x11c>)
 80063a2:	2201      	movs	r2, #1
 80063a4:	759a      	strb	r2, [r3, #22]
    SUBGRF_SetPacketParams(&embenetRadioDescr.packetParams);
 80063a6:	4809      	ldr	r0, [pc, #36]	; (80063cc <EMBENET_RADIO_Init+0x128>)
 80063a8:	f001 f8f0 	bl	800758c <SUBGRF_SetPacketParams>

    // Fall-back mode after successfull packet transmission or packet reception
    // 0x20 - Standby mode entry (default)
    // 0x30 - Standby with HSE32 enabled mode entry
    // 0x40 - FS mode entry
    SUBGRF_SetRxTxFallbackMode(0x40);
 80063ac:	2040      	movs	r0, #64	; 0x40
 80063ae:	f000 fed3 	bl	8007158 <SUBGRF_SetRxTxFallbackMode>

    EMBENET_RADIO_Idle();
 80063b2:	f000 f823 	bl	80063fc <EMBENET_RADIO_Idle>

    return EMBENET_RADIO_STATUS_SUCCESS;
 80063b6:	2300      	movs	r3, #0
}
 80063b8:	4618      	mov	r0, r3
 80063ba:	3748      	adds	r7, #72	; 0x48
 80063bc:	46bd      	mov	sp, r7
 80063be:	bd80      	pop	{r7, pc}
 80063c0:	20000ad0 	.word	0x20000ad0
 80063c4:	20000ac4 	.word	0x20000ac4
 80063c8:	000186a0 	.word	0x000186a0
 80063cc:	20000adc 	.word	0x20000adc

080063d0 <EMBENET_RADIO_SetCallbacks>:

void EMBENET_RADIO_SetCallbacks(EMBENET_RADIO_CaptureCbt onStartFrame, EMBENET_RADIO_CaptureCbt onEndFrame, void* cbtContext) {
 80063d0:	b480      	push	{r7}
 80063d2:	b085      	sub	sp, #20
 80063d4:	af00      	add	r7, sp, #0
 80063d6:	60f8      	str	r0, [r7, #12]
 80063d8:	60b9      	str	r1, [r7, #8]
 80063da:	607a      	str	r2, [r7, #4]
    embenetRadioDescr.onFrameStart    = onStartFrame;
 80063dc:	4a06      	ldr	r2, [pc, #24]	; (80063f8 <EMBENET_RADIO_SetCallbacks+0x28>)
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	6013      	str	r3, [r2, #0]
    embenetRadioDescr.onFrameEnd      = onEndFrame;
 80063e2:	4a05      	ldr	r2, [pc, #20]	; (80063f8 <EMBENET_RADIO_SetCallbacks+0x28>)
 80063e4:	68bb      	ldr	r3, [r7, #8]
 80063e6:	6053      	str	r3, [r2, #4]
    embenetRadioDescr.handlersContext = cbtContext;
 80063e8:	4a03      	ldr	r2, [pc, #12]	; (80063f8 <EMBENET_RADIO_SetCallbacks+0x28>)
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	6093      	str	r3, [r2, #8]
}
 80063ee:	bf00      	nop
 80063f0:	3714      	adds	r7, #20
 80063f2:	46bd      	mov	sp, r7
 80063f4:	bc80      	pop	{r7}
 80063f6:	4770      	bx	lr
 80063f8:	20000ad0 	.word	0x20000ad0

080063fc <EMBENET_RADIO_Idle>:
void EMBENET_RADIO_Deinit(void) {
    embenetRadioDescr.onFrameStart = NULL;
    embenetRadioDescr.onFrameEnd   = NULL;
}

EMBENET_RADIO_Status EMBENET_RADIO_Idle(void) {
 80063fc:	b580      	push	{r7, lr}
 80063fe:	af00      	add	r7, sp, #0
    SUBGRF_SetFs();
 8006400:	f000 fd86 	bl	8006f10 <SUBGRF_SetFs>

    // SUBGRF_SetStandby(STDBY_RC);
    SUBGRF_SetStandby(STDBY_XOSC);
 8006404:	2001      	movs	r0, #1
 8006406:	f000 fd67 	bl	8006ed8 <SUBGRF_SetStandby>


    return EMBENET_RADIO_STATUS_SUCCESS;
 800640a:	2300      	movs	r3, #0
}
 800640c:	4618      	mov	r0, r3
 800640e:	bd80      	pop	{r7, pc}

08006410 <EMBENET_RADIO_TxEnable>:

EMBENET_RADIO_Status EMBENET_RADIO_TxEnable(EMBENET_RADIO_Channel channel, EMBENET_RADIO_Power txp, uint8_t const* psdu, size_t psduLen) {
 8006410:	b580      	push	{r7, lr}
 8006412:	b084      	sub	sp, #16
 8006414:	af00      	add	r7, sp, #0
 8006416:	60ba      	str	r2, [r7, #8]
 8006418:	607b      	str	r3, [r7, #4]
 800641a:	4603      	mov	r3, r0
 800641c:	73fb      	strb	r3, [r7, #15]
 800641e:	460b      	mov	r3, r1
 8006420:	73bb      	strb	r3, [r7, #14]
    SUBGRF_SetDioIrqParams(IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT, IRQ_TX_DONE | IRQ_RX_TX_TIMEOUT, IRQ_RADIO_NONE, IRQ_RADIO_NONE);
 8006422:	2300      	movs	r3, #0
 8006424:	2200      	movs	r2, #0
 8006426:	f240 2101 	movw	r1, #513	; 0x201
 800642a:	f240 2001 	movw	r0, #513	; 0x201
 800642e:	f000 fea2 	bl	8007176 <SUBGRF_SetDioIrqParams>
    setPower(txp);
 8006432:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8006436:	4618      	mov	r0, r3
 8006438:	f000 f8f0 	bl	800661c <setPower>
    SUBGRF_SetRfFrequency(calculateFrequency(channel));
 800643c:	7bfb      	ldrb	r3, [r7, #15]
 800643e:	4618      	mov	r0, r3
 8006440:	f7ff ff1a 	bl	8006278 <calculateFrequency>
 8006444:	4603      	mov	r3, r0
 8006446:	4618      	mov	r0, r3
 8006448:	f000 fef0 	bl	800722c <SUBGRF_SetRfFrequency>

    embenetRadioDescr.packetParams.Params.Gfsk.PayloadLength = (uint8_t)psduLen;
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	b2da      	uxtb	r2, r3
 8006450:	4b08      	ldr	r3, [pc, #32]	; (8006474 <EMBENET_RADIO_TxEnable+0x64>)
 8006452:	751a      	strb	r2, [r3, #20]
    SUBGRF_SetPacketParams(&embenetRadioDescr.packetParams);
 8006454:	4808      	ldr	r0, [pc, #32]	; (8006478 <EMBENET_RADIO_TxEnable+0x68>)
 8006456:	f001 f899 	bl	800758c <SUBGRF_SetPacketParams>

    // warning suppress with casting
    SUBGRF_WriteBuffer(0x00, (uint8_t*)psdu, (uint8_t)psduLen);
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	b2db      	uxtb	r3, r3
 800645e:	461a      	mov	r2, r3
 8006460:	68b9      	ldr	r1, [r7, #8]
 8006462:	2000      	movs	r0, #0
 8006464:	f001 fa16 	bl	8007894 <SUBGRF_WriteBuffer>
    return EMBENET_RADIO_STATUS_SUCCESS;
 8006468:	2300      	movs	r3, #0
}
 800646a:	4618      	mov	r0, r3
 800646c:	3710      	adds	r7, #16
 800646e:	46bd      	mov	sp, r7
 8006470:	bd80      	pop	{r7, pc}
 8006472:	bf00      	nop
 8006474:	20000ad0 	.word	0x20000ad0
 8006478:	20000adc 	.word	0x20000adc

0800647c <EMBENET_RADIO_TxNow>:

EMBENET_RADIO_Status EMBENET_RADIO_TxNow(void) {
 800647c:	b580      	push	{r7, lr}
 800647e:	b082      	sub	sp, #8
 8006480:	af00      	add	r7, sp, #0
    EMBENET_TimeUs timestamp = EMBENET_TIMER_ReadCounter() + TxStartOffset;
 8006482:	f000 fc13 	bl	8006cac <EMBENET_TIMER_ReadCounter>
 8006486:	4603      	mov	r3, r0
 8006488:	33c8      	adds	r3, #200	; 0xc8
 800648a:	607b      	str	r3, [r7, #4]


    SUBGRF_SetTx(0);
 800648c:	2000      	movs	r0, #0
 800648e:	f000 fd4d 	bl	8006f2c <SUBGRF_SetTx>

    if (embenetRadioDescr.onFrameStart) {
 8006492:	4b08      	ldr	r3, [pc, #32]	; (80064b4 <EMBENET_RADIO_TxNow+0x38>)
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	2b00      	cmp	r3, #0
 8006498:	d006      	beq.n	80064a8 <EMBENET_RADIO_TxNow+0x2c>
        embenetRadioDescr.onFrameStart(embenetRadioDescr.handlersContext, timestamp);
 800649a:	4b06      	ldr	r3, [pc, #24]	; (80064b4 <EMBENET_RADIO_TxNow+0x38>)
 800649c:	681b      	ldr	r3, [r3, #0]
 800649e:	4a05      	ldr	r2, [pc, #20]	; (80064b4 <EMBENET_RADIO_TxNow+0x38>)
 80064a0:	6892      	ldr	r2, [r2, #8]
 80064a2:	6879      	ldr	r1, [r7, #4]
 80064a4:	4610      	mov	r0, r2
 80064a6:	4798      	blx	r3
    }


    return EMBENET_RADIO_STATUS_SUCCESS;
 80064a8:	2300      	movs	r3, #0
}
 80064aa:	4618      	mov	r0, r3
 80064ac:	3708      	adds	r7, #8
 80064ae:	46bd      	mov	sp, r7
 80064b0:	bd80      	pop	{r7, pc}
 80064b2:	bf00      	nop
 80064b4:	20000ad0 	.word	0x20000ad0

080064b8 <EMBENET_RADIO_RxEnable>:

EMBENET_RADIO_Status EMBENET_RADIO_RxEnable(EMBENET_RADIO_Channel channel) {
 80064b8:	b580      	push	{r7, lr}
 80064ba:	b082      	sub	sp, #8
 80064bc:	af00      	add	r7, sp, #0
 80064be:	4603      	mov	r3, r0
 80064c0:	71fb      	strb	r3, [r7, #7]
    embenetRadioDescr.frameReady      = false;
 80064c2:	4b0f      	ldr	r3, [pc, #60]	; (8006500 <EMBENET_RADIO_RxEnable+0x48>)
 80064c4:	2200      	movs	r2, #0
 80064c6:	f883 2020 	strb.w	r2, [r3, #32]
    embenetRadioDescr.frameCrcIsValid = false;
 80064ca:	4b0d      	ldr	r3, [pc, #52]	; (8006500 <EMBENET_RADIO_RxEnable+0x48>)
 80064cc:	2200      	movs	r2, #0
 80064ce:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

    embenetRadioDescr.packetParams.Params.Gfsk.PayloadLength = (uint8_t)EMBENET_RADIO_MAX_PSDU_LENGTH;
 80064d2:	4b0b      	ldr	r3, [pc, #44]	; (8006500 <EMBENET_RADIO_RxEnable+0x48>)
 80064d4:	2280      	movs	r2, #128	; 0x80
 80064d6:	751a      	strb	r2, [r3, #20]
    SUBGRF_SetPacketParams(&embenetRadioDescr.packetParams);
 80064d8:	480a      	ldr	r0, [pc, #40]	; (8006504 <EMBENET_RADIO_RxEnable+0x4c>)
 80064da:	f001 f857 	bl	800758c <SUBGRF_SetPacketParams>
    SUBGRF_SetSwitch(0, RFSWITCH_RX);
 80064de:	2100      	movs	r1, #0
 80064e0:	2000      	movs	r0, #0
 80064e2:	f001 fa2b 	bl	800793c <SUBGRF_SetSwitch>
    SUBGRF_SetRfFrequency(calculateFrequency(channel));
 80064e6:	79fb      	ldrb	r3, [r7, #7]
 80064e8:	4618      	mov	r0, r3
 80064ea:	f7ff fec5 	bl	8006278 <calculateFrequency>
 80064ee:	4603      	mov	r3, r0
 80064f0:	4618      	mov	r0, r3
 80064f2:	f000 fe9b 	bl	800722c <SUBGRF_SetRfFrequency>
    return EMBENET_RADIO_STATUS_SUCCESS;
 80064f6:	2300      	movs	r3, #0
}
 80064f8:	4618      	mov	r0, r3
 80064fa:	3708      	adds	r7, #8
 80064fc:	46bd      	mov	sp, r7
 80064fe:	bd80      	pop	{r7, pc}
 8006500:	20000ad0 	.word	0x20000ad0
 8006504:	20000adc 	.word	0x20000adc

08006508 <EMBENET_RADIO_RxNow>:

EMBENET_RADIO_Status EMBENET_RADIO_RxNow(void) {
 8006508:	b580      	push	{r7, lr}
 800650a:	af00      	add	r7, sp, #0
    /* Radio IRQ is set to DIO1 by default */
    SUBGRF_SetDioIrqParams(IRQ_RX_DONE | IRQ_SYNCWORD_VALID | IRQ_CRC_ERROR, IRQ_RX_DONE | IRQ_SYNCWORD_VALID | IRQ_CRC_ERROR, IRQ_RADIO_NONE, IRQ_RADIO_NONE);
 800650c:	2300      	movs	r3, #0
 800650e:	2200      	movs	r2, #0
 8006510:	214a      	movs	r1, #74	; 0x4a
 8006512:	204a      	movs	r0, #74	; 0x4a
 8006514:	f000 fe2f 	bl	8007176 <SUBGRF_SetDioIrqParams>
    SUBGRF_SetRx(0xFFFFFF);
 8006518:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800651c:	f000 fd26 	bl	8006f6c <SUBGRF_SetRx>

    return EMBENET_RADIO_STATUS_SUCCESS;
 8006520:	2300      	movs	r3, #0
}
 8006522:	4618      	mov	r0, r3
 8006524:	bd80      	pop	{r7, pc}
	...

08006528 <EMBENET_RADIO_GetReceivedFrame>:

EMBENET_RADIO_RxInfo EMBENET_RADIO_GetReceivedFrame(uint8_t* buffer, size_t bufferLength) {
 8006528:	b580      	push	{r7, lr}
 800652a:	b08e      	sub	sp, #56	; 0x38
 800652c:	af00      	add	r7, sp, #0
 800652e:	60f8      	str	r0, [r7, #12]
 8006530:	60b9      	str	r1, [r7, #8]
 8006532:	607a      	str	r2, [r7, #4]
    EMBENET_RADIO_RxInfo info = {.crcValid = false, .lqi = 0, .mpduLength = 0, .rssi = INT8_MIN};
 8006534:	2380      	movs	r3, #128	; 0x80
 8006536:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 800653a:	2300      	movs	r3, #0
 800653c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8006540:	2300      	movs	r3, #0
 8006542:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 8006546:	2300      	movs	r3, #0
 8006548:	633b      	str	r3, [r7, #48]	; 0x30
    if (embenetRadioDescr.frameReady) {
 800654a:	4b2e      	ldr	r3, [pc, #184]	; (8006604 <EMBENET_RADIO_GetReceivedFrame+0xdc>)
 800654c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8006550:	2b00      	cmp	r3, #0
 8006552:	d04a      	beq.n	80065ea <EMBENET_RADIO_GetReceivedFrame+0xc2>
        PacketStatus_t radioPktStatus;
        SUBGRF_GetPacketStatus(&radioPktStatus);
 8006554:	f107 0318 	add.w	r3, r7, #24
 8006558:	4618      	mov	r0, r3
 800655a:	f001 f8f9 	bl	8007750 <SUBGRF_GetPacketStatus>
        info.lqi      = radioPktStatus.Params.Gfsk.RxStatus;
 800655e:	7f3b      	ldrb	r3, [r7, #28]
 8006560:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
        info.rssi     = radioPktStatus.Params.Gfsk.RssiAvg;
 8006564:	f997 301d 	ldrsb.w	r3, [r7, #29]
 8006568:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
        info.crcValid = embenetRadioDescr.frameCrcIsValid;
 800656c:	4b25      	ldr	r3, [pc, #148]	; (8006604 <EMBENET_RADIO_GetReceivedFrame+0xdc>)
 800656e:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8006572:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e

        uint8_t offset = 0;
 8006576:	2300      	movs	r3, #0
 8006578:	75fb      	strb	r3, [r7, #23]
        uint8_t length = 0;
 800657a:	2300      	movs	r3, #0
 800657c:	75bb      	strb	r3, [r7, #22]
        SUBGRF_GetRxBufferStatus(&length, &offset);
 800657e:	f107 0217 	add.w	r2, r7, #23
 8006582:	f107 0316 	add.w	r3, r7, #22
 8006586:	4611      	mov	r1, r2
 8006588:	4618      	mov	r0, r3
 800658a:	f001 f8b5 	bl	80076f8 <SUBGRF_GetRxBufferStatus>
        info.mpduLength = length;
 800658e:	7dbb      	ldrb	r3, [r7, #22]
 8006590:	633b      	str	r3, [r7, #48]	; 0x30

        uint8_t bytesCountToCopy = length; // best case, no error
 8006592:	7dbb      	ldrb	r3, [r7, #22]
 8006594:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
        if (length > EMBENET_RADIO_MAX_PSDU_LENGTH) {
 8006598:	7dbb      	ldrb	r3, [r7, #22]
 800659a:	2b80      	cmp	r3, #128	; 0x80
 800659c:	d905      	bls.n	80065aa <EMBENET_RADIO_GetReceivedFrame+0x82>
            // frame too long
            info.crcValid    = false;
 800659e:	2300      	movs	r3, #0
 80065a0:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
            bytesCountToCopy = EMBENET_RADIO_MAX_PSDU_LENGTH;
 80065a4:	2380      	movs	r3, #128	; 0x80
 80065a6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
        }
        if (length > bufferLength) {
 80065aa:	7dbb      	ldrb	r3, [r7, #22]
 80065ac:	461a      	mov	r2, r3
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	4293      	cmp	r3, r2
 80065b2:	d205      	bcs.n	80065c0 <EMBENET_RADIO_GetReceivedFrame+0x98>
            // frame wont fit into buffer
            info.crcValid    = false;
 80065b4:	2300      	movs	r3, #0
 80065b6:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
            bytesCountToCopy = (uint8_t)bufferLength; // uint8_t overflow not possible
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
        }
        if (length < EMBENET_RADIO_MIN_PSDU_LENGTH) {
 80065c0:	7dbb      	ldrb	r3, [r7, #22]
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	d102      	bne.n	80065cc <EMBENET_RADIO_GetReceivedFrame+0xa4>
            // frame too short
            info.crcValid = false;
 80065c6:	2300      	movs	r3, #0
 80065c8:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
        }
        SUBGRF_ReadBuffer(offset, buffer, bytesCountToCopy);
 80065cc:	7dfb      	ldrb	r3, [r7, #23]
 80065ce:	f897 2037 	ldrb.w	r2, [r7, #55]	; 0x37
 80065d2:	68b9      	ldr	r1, [r7, #8]
 80065d4:	4618      	mov	r0, r3
 80065d6:	f001 f973 	bl	80078c0 <SUBGRF_ReadBuffer>
        // no buffering, frame may be obtained only once
        embenetRadioDescr.frameReady      = false;
 80065da:	4b0a      	ldr	r3, [pc, #40]	; (8006604 <EMBENET_RADIO_GetReceivedFrame+0xdc>)
 80065dc:	2200      	movs	r2, #0
 80065de:	f883 2020 	strb.w	r2, [r3, #32]
        embenetRadioDescr.frameCrcIsValid = false;
 80065e2:	4b08      	ldr	r3, [pc, #32]	; (8006604 <EMBENET_RADIO_GetReceivedFrame+0xdc>)
 80065e4:	2200      	movs	r2, #0
 80065e6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
    }

    return info;
 80065ea:	68fb      	ldr	r3, [r7, #12]
 80065ec:	461a      	mov	r2, r3
 80065ee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80065f2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80065f6:	e882 0003 	stmia.w	r2, {r0, r1}
}
 80065fa:	68f8      	ldr	r0, [r7, #12]
 80065fc:	3738      	adds	r7, #56	; 0x38
 80065fe:	46bd      	mov	sp, r7
 8006600:	bd80      	pop	{r7, pc}
 8006602:	bf00      	nop
 8006604:	20000ad0 	.word	0x20000ad0

08006608 <EMBENET_RADIO_GetCapabilities>:
        default: return EMBENET_RADIO_STATUS_GENERAL_ERROR;
    }
    return EMBENET_RADIO_STATUS_SUCCESS;
}

EMBENET_RADIO_Capabilities const* EMBENET_RADIO_GetCapabilities(void) {
 8006608:	b480      	push	{r7}
 800660a:	af00      	add	r7, sp, #0
                                                 .rxDelay         = RxDelay,
                                                 .txRxStartDelay  = RxStartOffset,
                                                 .sensitivity     = Sensitivity,
                                                 .maxOutputPower  = MaxTxp,
                                                 .minOutputPower  = MinTxp};
    return &timings;
 800660c:	4b02      	ldr	r3, [pc, #8]	; (8006618 <EMBENET_RADIO_GetCapabilities+0x10>)
}
 800660e:	4618      	mov	r0, r3
 8006610:	46bd      	mov	sp, r7
 8006612:	bc80      	pop	{r7}
 8006614:	4770      	bx	lr
 8006616:	bf00      	nop
 8006618:	20000010 	.word	0x20000010

0800661c <setPower>:


static void setPower(EMBENET_RADIO_Power powerDbm) {
 800661c:	b580      	push	{r7, lr}
 800661e:	b084      	sub	sp, #16
 8006620:	af00      	add	r7, sp, #0
 8006622:	4603      	mov	r3, r0
 8006624:	71fb      	strb	r3, [r7, #7]
    uint8_t paSelect = SUBGRF_SetRfTxPower((int8_t)(powerDbm + EMBENET_NODE_BSP_GetTxOffset()));
 8006626:	f7ff f9c1 	bl	80059ac <EMBENET_NODE_BSP_GetTxOffset>
 800662a:	4603      	mov	r3, r0
 800662c:	b2da      	uxtb	r2, r3
 800662e:	79fb      	ldrb	r3, [r7, #7]
 8006630:	4413      	add	r3, r2
 8006632:	b2db      	uxtb	r3, r3
 8006634:	b25b      	sxtb	r3, r3
 8006636:	4618      	mov	r0, r3
 8006638:	f001 f9a8 	bl	800798c <SUBGRF_SetRfTxPower>
 800663c:	4603      	mov	r3, r0
 800663e:	73fb      	strb	r3, [r7, #15]
    SUBGRF_SetSwitch(paSelect, RFSWITCH_TX);
 8006640:	7bfb      	ldrb	r3, [r7, #15]
 8006642:	2101      	movs	r1, #1
 8006644:	4618      	mov	r0, r3
 8006646:	f001 f979 	bl	800793c <SUBGRF_SetSwitch>
}
 800664a:	bf00      	nop
 800664c:	3710      	adds	r7, #16
 800664e:	46bd      	mov	sp, r7
 8006650:	bd80      	pop	{r7, pc}
	...

08006654 <getFskBandwidthRegValue>:

static uint8_t getFskBandwidthRegValue(uint32_t bandwidth) {
 8006654:	b480      	push	{r7}
 8006656:	b085      	sub	sp, #20
 8006658:	af00      	add	r7, sp, #0
 800665a:	6078      	str	r0, [r7, #4]
    uint8_t i;
    if (bandwidth == 0) {
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	2b00      	cmp	r3, #0
 8006660:	d101      	bne.n	8006666 <getFskBandwidthRegValue+0x12>
        return (0x1FU);
 8006662:	231f      	movs	r3, #31
 8006664:	e023      	b.n	80066ae <getFskBandwidthRegValue+0x5a>
    }
    uint32_t delta = 1;
 8006666:	2301      	movs	r3, #1
 8006668:	60bb      	str	r3, [r7, #8]
    while (delta < 20000) {
 800666a:	e01a      	b.n	80066a2 <getFskBandwidthRegValue+0x4e>
        for (i = 0; i < (sizeof(fskBandwidths) / sizeof(FskBandwidth)); i++) {
 800666c:	2300      	movs	r3, #0
 800666e:	73fb      	strb	r3, [r7, #15]
 8006670:	e011      	b.n	8006696 <getFskBandwidthRegValue+0x42>
            if (bandwidth - fskBandwidths[i].bandwidth < delta) {
 8006672:	7bfb      	ldrb	r3, [r7, #15]
 8006674:	4a10      	ldr	r2, [pc, #64]	; (80066b8 <getFskBandwidthRegValue+0x64>)
 8006676:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800667a:	687a      	ldr	r2, [r7, #4]
 800667c:	1ad3      	subs	r3, r2, r3
 800667e:	68ba      	ldr	r2, [r7, #8]
 8006680:	429a      	cmp	r2, r3
 8006682:	d905      	bls.n	8006690 <getFskBandwidthRegValue+0x3c>
                return fskBandwidths[i].RegValue;
 8006684:	7bfb      	ldrb	r3, [r7, #15]
 8006686:	4a0c      	ldr	r2, [pc, #48]	; (80066b8 <getFskBandwidthRegValue+0x64>)
 8006688:	00db      	lsls	r3, r3, #3
 800668a:	4413      	add	r3, r2
 800668c:	791b      	ldrb	r3, [r3, #4]
 800668e:	e00e      	b.n	80066ae <getFskBandwidthRegValue+0x5a>
        for (i = 0; i < (sizeof(fskBandwidths) / sizeof(FskBandwidth)); i++) {
 8006690:	7bfb      	ldrb	r3, [r7, #15]
 8006692:	3301      	adds	r3, #1
 8006694:	73fb      	strb	r3, [r7, #15]
 8006696:	7bfb      	ldrb	r3, [r7, #15]
 8006698:	2b15      	cmp	r3, #21
 800669a:	d9ea      	bls.n	8006672 <getFskBandwidthRegValue+0x1e>
            }
        }
        delta++;
 800669c:	68bb      	ldr	r3, [r7, #8]
 800669e:	3301      	adds	r3, #1
 80066a0:	60bb      	str	r3, [r7, #8]
    while (delta < 20000) {
 80066a2:	68bb      	ldr	r3, [r7, #8]
 80066a4:	f644 621f 	movw	r2, #19999	; 0x4e1f
 80066a8:	4293      	cmp	r3, r2
 80066aa:	d9df      	bls.n	800666c <getFskBandwidthRegValue+0x18>
    }
    return 0x1FU;
 80066ac:	231f      	movs	r3, #31
}
 80066ae:	4618      	mov	r0, r3
 80066b0:	3714      	adds	r7, #20
 80066b2:	46bd      	mov	sp, r7
 80066b4:	bc80      	pop	{r7}
 80066b6:	4770      	bx	lr
 80066b8:	08031944 	.word	0x08031944

080066bc <SUBGHZ_Radio_IRQHandler>:


void SUBGHZ_Radio_IRQHandler(void) {
 80066bc:	b580      	push	{r7, lr}
 80066be:	b082      	sub	sp, #8
 80066c0:	af00      	add	r7, sp, #0
    EMBENET_TimeUs timestamp = EMBENET_TIMER_ReadCounter();
 80066c2:	f000 faf3 	bl	8006cac <EMBENET_TIMER_ReadCounter>
 80066c6:	6078      	str	r0, [r7, #4]

    uint8_t tmpisr[2];
    // Retrieve Interrupts from SUBGHZ Irq Register
    (void)HAL_SUBGHZ_ExecGetCmd(&hsubghz, RADIO_GET_IRQSTATUS, tmpisr, 2);
 80066c8:	463a      	mov	r2, r7
 80066ca:	2302      	movs	r3, #2
 80066cc:	2112      	movs	r1, #18
 80066ce:	483d      	ldr	r0, [pc, #244]	; (80067c4 <SUBGHZ_Radio_IRQHandler+0x108>)
 80066d0:	f7fd fd08 	bl	80040e4 <HAL_SUBGHZ_ExecGetCmd>

    uint16_t itsource = (uint16_t)((tmpisr[0] << 8) | tmpisr[1]);
 80066d4:	783b      	ldrb	r3, [r7, #0]
 80066d6:	021b      	lsls	r3, r3, #8
 80066d8:	b21a      	sxth	r2, r3
 80066da:	787b      	ldrb	r3, [r7, #1]
 80066dc:	b21b      	sxth	r3, r3
 80066de:	4313      	orrs	r3, r2
 80066e0:	b21b      	sxth	r3, r3
 80066e2:	807b      	strh	r3, [r7, #2]
    (void)HAL_SUBGHZ_ExecSetCmd(&hsubghz, RADIO_CLR_IRQSTATUS, tmpisr, 2);
 80066e4:	463a      	mov	r2, r7
 80066e6:	2302      	movs	r3, #2
 80066e8:	2102      	movs	r1, #2
 80066ea:	4836      	ldr	r0, [pc, #216]	; (80067c4 <SUBGHZ_Radio_IRQHandler+0x108>)
 80066ec:	f7fd fc9b 	bl	8004026 <HAL_SUBGHZ_ExecSetCmd>


    // sync word detection has an utmost priority
    if (SET == SUBGHZ_CHECK_IT_SOURCE(itsource, SUBGHZ_IT_SYNCWORD_VALID)) {
 80066f0:	887b      	ldrh	r3, [r7, #2]
 80066f2:	f003 0308 	and.w	r3, r3, #8
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	d00e      	beq.n	8006718 <SUBGHZ_Radio_IRQHandler+0x5c>
        if (embenetRadioDescr.onFrameStart != NULL) {
 80066fa:	4b33      	ldr	r3, [pc, #204]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	2b00      	cmp	r3, #0
 8006700:	d00a      	beq.n	8006718 <SUBGHZ_Radio_IRQHandler+0x5c>
            timestamp = timestamp - (EMBENET_TimeUs)RxStartOffset;
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	f2a3 63a4 	subw	r3, r3, #1700	; 0x6a4
 8006708:	607b      	str	r3, [r7, #4]
            embenetRadioDescr.onFrameStart(embenetRadioDescr.handlersContext, timestamp);
 800670a:	4b2f      	ldr	r3, [pc, #188]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	4a2e      	ldr	r2, [pc, #184]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 8006710:	6892      	ldr	r2, [r2, #8]
 8006712:	6879      	ldr	r1, [r7, #4]
 8006714:	4610      	mov	r0, r2
 8006716:	4798      	blx	r3
        }
    }
    if (SET == SUBGHZ_CHECK_IT_SOURCE(itsource, SUBGHZ_IT_TX_CPLT)) {
 8006718:	887b      	ldrh	r3, [r7, #2]
 800671a:	f003 0301 	and.w	r3, r3, #1
 800671e:	2b00      	cmp	r3, #0
 8006720:	d00a      	beq.n	8006738 <SUBGHZ_Radio_IRQHandler+0x7c>
        if (embenetRadioDescr.onFrameEnd != NULL) {
 8006722:	4b29      	ldr	r3, [pc, #164]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 8006724:	685b      	ldr	r3, [r3, #4]
 8006726:	2b00      	cmp	r3, #0
 8006728:	d006      	beq.n	8006738 <SUBGHZ_Radio_IRQHandler+0x7c>
            embenetRadioDescr.onFrameEnd(embenetRadioDescr.handlersContext, timestamp);
 800672a:	4b27      	ldr	r3, [pc, #156]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800672c:	685b      	ldr	r3, [r3, #4]
 800672e:	4a26      	ldr	r2, [pc, #152]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 8006730:	6892      	ldr	r2, [r2, #8]
 8006732:	6879      	ldr	r1, [r7, #4]
 8006734:	4610      	mov	r0, r2
 8006736:	4798      	blx	r3
        }
    }
    if ((SET == SUBGHZ_CHECK_IT_SOURCE(itsource, SUBGHZ_IT_CRC_ERROR)) || (SET == SUBGHZ_CHECK_IT_SOURCE(itsource, SUBGHZ_IT_RX_CPLT))) {
 8006738:	887b      	ldrh	r3, [r7, #2]
 800673a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800673e:	2b00      	cmp	r3, #0
 8006740:	d104      	bne.n	800674c <SUBGHZ_Radio_IRQHandler+0x90>
 8006742:	887b      	ldrh	r3, [r7, #2]
 8006744:	f003 0302 	and.w	r3, r3, #2
 8006748:	2b00      	cmp	r3, #0
 800674a:	d036      	beq.n	80067ba <SUBGHZ_Radio_IRQHandler+0xfe>
        if (false == embenetRadioDescr.frameReady) {
 800674c:	4b1e      	ldr	r3, [pc, #120]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800674e:	f893 3020 	ldrb.w	r3, [r3, #32]
 8006752:	f083 0301 	eor.w	r3, r3, #1
 8006756:	b2db      	uxtb	r3, r3
 8006758:	2b00      	cmp	r3, #0
 800675a:	d02e      	beq.n	80067ba <SUBGHZ_Radio_IRQHandler+0xfe>
            embenetRadioDescr.frameCrcIsValid = (RESET == SUBGHZ_CHECK_IT_SOURCE(itsource, SUBGHZ_IT_CRC_ERROR));
 800675c:	887b      	ldrh	r3, [r7, #2]
 800675e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006762:	2b00      	cmp	r3, #0
 8006764:	bf0c      	ite	eq
 8006766:	2301      	moveq	r3, #1
 8006768:	2300      	movne	r3, #0
 800676a:	b2da      	uxtb	r2, r3
 800676c:	4b16      	ldr	r3, [pc, #88]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800676e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
            embenetRadioDescr.frameReady      = true;
 8006772:	4b15      	ldr	r3, [pc, #84]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 8006774:	2201      	movs	r2, #1
 8006776:	f883 2020 	strb.w	r2, [r3, #32]

            if (embenetRadioDescr.onFrameEnd != NULL) {
 800677a:	4b13      	ldr	r3, [pc, #76]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800677c:	685b      	ldr	r3, [r3, #4]
 800677e:	2b00      	cmp	r3, #0
 8006780:	d009      	beq.n	8006796 <SUBGHZ_Radio_IRQHandler+0xda>
                timestamp = timestamp - (EMBENET_TimeUs)RxEndOffset;
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	3b46      	subs	r3, #70	; 0x46
 8006786:	607b      	str	r3, [r7, #4]
                embenetRadioDescr.onFrameEnd(embenetRadioDescr.handlersContext, timestamp);
 8006788:	4b0f      	ldr	r3, [pc, #60]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800678a:	685b      	ldr	r3, [r3, #4]
 800678c:	4a0e      	ldr	r2, [pc, #56]	; (80067c8 <SUBGHZ_Radio_IRQHandler+0x10c>)
 800678e:	6892      	ldr	r2, [r2, #8]
 8006790:	6879      	ldr	r1, [r7, #4]
 8006792:	4610      	mov	r0, r2
 8006794:	4798      	blx	r3
            }
            // WORKAROUND - Implicit Header Mode Timeout Behavior, see DS_SX1261-2_V1.2
            // datasheet chapter 15.3 RegRtcControl = @address 0x0902
            SUBGRF_WriteRegister(0x0902, 0x00);
 8006796:	2100      	movs	r1, #0
 8006798:	f640 1002 	movw	r0, #2306	; 0x902
 800679c:	f001 f82a 	bl	80077f4 <SUBGRF_WriteRegister>
            // RegEventMask = @address 0x0944
            SUBGRF_WriteRegister(0x0944, SUBGRF_ReadRegister(0x0944) | (1 << 1));
 80067a0:	f640 1044 	movw	r0, #2372	; 0x944
 80067a4:	f001 f83a 	bl	800781c <SUBGRF_ReadRegister>
 80067a8:	4603      	mov	r3, r0
 80067aa:	f043 0302 	orr.w	r3, r3, #2
 80067ae:	b2db      	uxtb	r3, r3
 80067b0:	4619      	mov	r1, r3
 80067b2:	f640 1044 	movw	r0, #2372	; 0x944
 80067b6:	f001 f81d 	bl	80077f4 <SUBGRF_WriteRegister>
            // WORKAROUND END
        }
    }
}
 80067ba:	bf00      	nop
 80067bc:	3708      	adds	r7, #8
 80067be:	46bd      	mov	sp, r7
 80067c0:	bd80      	pop	{r7, pc}
 80067c2:	bf00      	nop
 80067c4:	20000ac4 	.word	0x20000ac4
 80067c8:	20000ad0 	.word	0x20000ad0

080067cc <EMBENET_RANDOM_Get>:
#include "radio_driver.h"

#pragma GCC diagnostic pop


uint32_t EMBENET_RANDOM_Get(void) {
 80067cc:	b580      	push	{r7, lr}
 80067ce:	af00      	add	r7, sp, #0
    // Get random value from radio transceiver. This function is guaranteed to be invoked AFTER radio initialization
    return SUBGRF_GetRandom(); 
 80067d0:	f000 fb3b 	bl	8006e4a <SUBGRF_GetRandom>
 80067d4:	4603      	mov	r3, r0
}
 80067d6:	4618      	mov	r0, r3
 80067d8:	bd80      	pop	{r7, pc}
	...

080067dc <__NVIC_GetPriorityGrouping>:
{
 80067dc:	b480      	push	{r7}
 80067de:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80067e0:	4b04      	ldr	r3, [pc, #16]	; (80067f4 <__NVIC_GetPriorityGrouping+0x18>)
 80067e2:	68db      	ldr	r3, [r3, #12]
 80067e4:	0a1b      	lsrs	r3, r3, #8
 80067e6:	f003 0307 	and.w	r3, r3, #7
}
 80067ea:	4618      	mov	r0, r3
 80067ec:	46bd      	mov	sp, r7
 80067ee:	bc80      	pop	{r7}
 80067f0:	4770      	bx	lr
 80067f2:	bf00      	nop
 80067f4:	e000ed00 	.word	0xe000ed00

080067f8 <__NVIC_EnableIRQ>:
{
 80067f8:	b480      	push	{r7}
 80067fa:	b083      	sub	sp, #12
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	4603      	mov	r3, r0
 8006800:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006802:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006806:	2b00      	cmp	r3, #0
 8006808:	db0b      	blt.n	8006822 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800680a:	79fb      	ldrb	r3, [r7, #7]
 800680c:	f003 021f 	and.w	r2, r3, #31
 8006810:	4906      	ldr	r1, [pc, #24]	; (800682c <__NVIC_EnableIRQ+0x34>)
 8006812:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006816:	095b      	lsrs	r3, r3, #5
 8006818:	2001      	movs	r0, #1
 800681a:	fa00 f202 	lsl.w	r2, r0, r2
 800681e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8006822:	bf00      	nop
 8006824:	370c      	adds	r7, #12
 8006826:	46bd      	mov	sp, r7
 8006828:	bc80      	pop	{r7}
 800682a:	4770      	bx	lr
 800682c:	e000e100 	.word	0xe000e100

08006830 <__NVIC_ClearPendingIRQ>:
{
 8006830:	b480      	push	{r7}
 8006832:	b083      	sub	sp, #12
 8006834:	af00      	add	r7, sp, #0
 8006836:	4603      	mov	r3, r0
 8006838:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800683a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800683e:	2b00      	cmp	r3, #0
 8006840:	db0c      	blt.n	800685c <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006842:	79fb      	ldrb	r3, [r7, #7]
 8006844:	f003 021f 	and.w	r2, r3, #31
 8006848:	4907      	ldr	r1, [pc, #28]	; (8006868 <__NVIC_ClearPendingIRQ+0x38>)
 800684a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800684e:	095b      	lsrs	r3, r3, #5
 8006850:	2001      	movs	r0, #1
 8006852:	fa00 f202 	lsl.w	r2, r0, r2
 8006856:	3360      	adds	r3, #96	; 0x60
 8006858:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800685c:	bf00      	nop
 800685e:	370c      	adds	r7, #12
 8006860:	46bd      	mov	sp, r7
 8006862:	bc80      	pop	{r7}
 8006864:	4770      	bx	lr
 8006866:	bf00      	nop
 8006868:	e000e100 	.word	0xe000e100

0800686c <__NVIC_SetPriority>:
{
 800686c:	b480      	push	{r7}
 800686e:	b083      	sub	sp, #12
 8006870:	af00      	add	r7, sp, #0
 8006872:	4603      	mov	r3, r0
 8006874:	6039      	str	r1, [r7, #0]
 8006876:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8006878:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800687c:	2b00      	cmp	r3, #0
 800687e:	db0a      	blt.n	8006896 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006880:	683b      	ldr	r3, [r7, #0]
 8006882:	b2da      	uxtb	r2, r3
 8006884:	490c      	ldr	r1, [pc, #48]	; (80068b8 <__NVIC_SetPriority+0x4c>)
 8006886:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800688a:	0112      	lsls	r2, r2, #4
 800688c:	b2d2      	uxtb	r2, r2
 800688e:	440b      	add	r3, r1
 8006890:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8006894:	e00a      	b.n	80068ac <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006896:	683b      	ldr	r3, [r7, #0]
 8006898:	b2da      	uxtb	r2, r3
 800689a:	4908      	ldr	r1, [pc, #32]	; (80068bc <__NVIC_SetPriority+0x50>)
 800689c:	79fb      	ldrb	r3, [r7, #7]
 800689e:	f003 030f 	and.w	r3, r3, #15
 80068a2:	3b04      	subs	r3, #4
 80068a4:	0112      	lsls	r2, r2, #4
 80068a6:	b2d2      	uxtb	r2, r2
 80068a8:	440b      	add	r3, r1
 80068aa:	761a      	strb	r2, [r3, #24]
}
 80068ac:	bf00      	nop
 80068ae:	370c      	adds	r7, #12
 80068b0:	46bd      	mov	sp, r7
 80068b2:	bc80      	pop	{r7}
 80068b4:	4770      	bx	lr
 80068b6:	bf00      	nop
 80068b8:	e000e100 	.word	0xe000e100
 80068bc:	e000ed00 	.word	0xe000ed00

080068c0 <NVIC_EncodePriority>:
{
 80068c0:	b480      	push	{r7}
 80068c2:	b089      	sub	sp, #36	; 0x24
 80068c4:	af00      	add	r7, sp, #0
 80068c6:	60f8      	str	r0, [r7, #12]
 80068c8:	60b9      	str	r1, [r7, #8]
 80068ca:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	f003 0307 	and.w	r3, r3, #7
 80068d2:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80068d4:	69fb      	ldr	r3, [r7, #28]
 80068d6:	f1c3 0307 	rsb	r3, r3, #7
 80068da:	2b04      	cmp	r3, #4
 80068dc:	bf28      	it	cs
 80068de:	2304      	movcs	r3, #4
 80068e0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80068e2:	69fb      	ldr	r3, [r7, #28]
 80068e4:	3304      	adds	r3, #4
 80068e6:	2b06      	cmp	r3, #6
 80068e8:	d902      	bls.n	80068f0 <NVIC_EncodePriority+0x30>
 80068ea:	69fb      	ldr	r3, [r7, #28]
 80068ec:	3b03      	subs	r3, #3
 80068ee:	e000      	b.n	80068f2 <NVIC_EncodePriority+0x32>
 80068f0:	2300      	movs	r3, #0
 80068f2:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80068f4:	f04f 32ff 	mov.w	r2, #4294967295
 80068f8:	69bb      	ldr	r3, [r7, #24]
 80068fa:	fa02 f303 	lsl.w	r3, r2, r3
 80068fe:	43da      	mvns	r2, r3
 8006900:	68bb      	ldr	r3, [r7, #8]
 8006902:	401a      	ands	r2, r3
 8006904:	697b      	ldr	r3, [r7, #20]
 8006906:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006908:	f04f 31ff 	mov.w	r1, #4294967295
 800690c:	697b      	ldr	r3, [r7, #20]
 800690e:	fa01 f303 	lsl.w	r3, r1, r3
 8006912:	43d9      	mvns	r1, r3
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006918:	4313      	orrs	r3, r2
}
 800691a:	4618      	mov	r0, r3
 800691c:	3724      	adds	r7, #36	; 0x24
 800691e:	46bd      	mov	sp, r7
 8006920:	bc80      	pop	{r7}
 8006922:	4770      	bx	lr

08006924 <LL_APB1_GRP1_EnableClock>:
{
 8006924:	b480      	push	{r7}
 8006926:	b085      	sub	sp, #20
 8006928:	af00      	add	r7, sp, #0
 800692a:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB1ENR1, Periphs);
 800692c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006930:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006932:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	4313      	orrs	r3, r2
 800693a:	658b      	str	r3, [r1, #88]	; 0x58
  tmpreg = READ_BIT(RCC->APB1ENR1, Periphs);
 800693c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8006940:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	4013      	ands	r3, r2
 8006946:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8006948:	68fb      	ldr	r3, [r7, #12]
}
 800694a:	bf00      	nop
 800694c:	3714      	adds	r7, #20
 800694e:	46bd      	mov	sp, r7
 8006950:	bc80      	pop	{r7}
 8006952:	4770      	bx	lr

08006954 <LL_TIM_EnableCounter>:
{
 8006954:	b480      	push	{r7}
 8006956:	b083      	sub	sp, #12
 8006958:	af00      	add	r7, sp, #0
 800695a:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	681b      	ldr	r3, [r3, #0]
 8006960:	f043 0201 	orr.w	r2, r3, #1
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	601a      	str	r2, [r3, #0]
}
 8006968:	bf00      	nop
 800696a:	370c      	adds	r7, #12
 800696c:	46bd      	mov	sp, r7
 800696e:	bc80      	pop	{r7}
 8006970:	4770      	bx	lr

08006972 <LL_TIM_DisableARRPreload>:
{
 8006972:	b480      	push	{r7}
 8006974:	b083      	sub	sp, #12
 8006976:	af00      	add	r7, sp, #0
 8006978:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	601a      	str	r2, [r3, #0]
}
 8006986:	bf00      	nop
 8006988:	370c      	adds	r7, #12
 800698a:	46bd      	mov	sp, r7
 800698c:	bc80      	pop	{r7}
 800698e:	4770      	bx	lr

08006990 <LL_TIM_GetCounter>:
{
 8006990:	b480      	push	{r7}
 8006992:	b083      	sub	sp, #12
 8006994:	af00      	add	r7, sp, #0
 8006996:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_REG(TIMx->CNT));
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
}
 800699c:	4618      	mov	r0, r3
 800699e:	370c      	adds	r7, #12
 80069a0:	46bd      	mov	sp, r7
 80069a2:	bc80      	pop	{r7}
 80069a4:	4770      	bx	lr
	...

080069a8 <LL_TIM_OC_DisableFast>:
{
 80069a8:	b480      	push	{r7}
 80069aa:	b085      	sub	sp, #20
 80069ac:	af00      	add	r7, sp, #0
 80069ae:	6078      	str	r0, [r7, #4]
 80069b0:	6039      	str	r1, [r7, #0]
  uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
 80069b2:	683b      	ldr	r3, [r7, #0]
 80069b4:	2b01      	cmp	r3, #1
 80069b6:	d028      	beq.n	8006a0a <LL_TIM_OC_DisableFast+0x62>
 80069b8:	683b      	ldr	r3, [r7, #0]
 80069ba:	2b04      	cmp	r3, #4
 80069bc:	d023      	beq.n	8006a06 <LL_TIM_OC_DisableFast+0x5e>
 80069be:	683b      	ldr	r3, [r7, #0]
 80069c0:	2b10      	cmp	r3, #16
 80069c2:	d01e      	beq.n	8006a02 <LL_TIM_OC_DisableFast+0x5a>
 80069c4:	683b      	ldr	r3, [r7, #0]
 80069c6:	2b40      	cmp	r3, #64	; 0x40
 80069c8:	d019      	beq.n	80069fe <LL_TIM_OC_DisableFast+0x56>
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80069d0:	d013      	beq.n	80069fa <LL_TIM_OC_DisableFast+0x52>
 80069d2:	683b      	ldr	r3, [r7, #0]
 80069d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80069d8:	d00d      	beq.n	80069f6 <LL_TIM_OC_DisableFast+0x4e>
 80069da:	683b      	ldr	r3, [r7, #0]
 80069dc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80069e0:	d007      	beq.n	80069f2 <LL_TIM_OC_DisableFast+0x4a>
 80069e2:	683b      	ldr	r3, [r7, #0]
 80069e4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80069e8:	d101      	bne.n	80069ee <LL_TIM_OC_DisableFast+0x46>
 80069ea:	2307      	movs	r3, #7
 80069ec:	e00e      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 80069ee:	2308      	movs	r3, #8
 80069f0:	e00c      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 80069f2:	2306      	movs	r3, #6
 80069f4:	e00a      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 80069f6:	2305      	movs	r3, #5
 80069f8:	e008      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 80069fa:	2304      	movs	r3, #4
 80069fc:	e006      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 80069fe:	2303      	movs	r3, #3
 8006a00:	e004      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 8006a02:	2302      	movs	r3, #2
 8006a04:	e002      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 8006a06:	2301      	movs	r3, #1
 8006a08:	e000      	b.n	8006a0c <LL_TIM_OC_DisableFast+0x64>
 8006a0a:	2300      	movs	r3, #0
 8006a0c:	73fb      	strb	r3, [r7, #15]
  __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iChannel]));
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	3318      	adds	r3, #24
 8006a12:	4619      	mov	r1, r3
 8006a14:	7bfb      	ldrb	r3, [r7, #15]
 8006a16:	4a0a      	ldr	r2, [pc, #40]	; (8006a40 <LL_TIM_OC_DisableFast+0x98>)
 8006a18:	5cd3      	ldrb	r3, [r2, r3]
 8006a1a:	440b      	add	r3, r1
 8006a1c:	60bb      	str	r3, [r7, #8]
  CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
 8006a1e:	68bb      	ldr	r3, [r7, #8]
 8006a20:	681a      	ldr	r2, [r3, #0]
 8006a22:	7bfb      	ldrb	r3, [r7, #15]
 8006a24:	4907      	ldr	r1, [pc, #28]	; (8006a44 <LL_TIM_OC_DisableFast+0x9c>)
 8006a26:	5ccb      	ldrb	r3, [r1, r3]
 8006a28:	4619      	mov	r1, r3
 8006a2a:	2304      	movs	r3, #4
 8006a2c:	408b      	lsls	r3, r1
 8006a2e:	43db      	mvns	r3, r3
 8006a30:	401a      	ands	r2, r3
 8006a32:	68bb      	ldr	r3, [r7, #8]
 8006a34:	601a      	str	r2, [r3, #0]
}
 8006a36:	bf00      	nop
 8006a38:	3714      	adds	r7, #20
 8006a3a:	46bd      	mov	sp, r7
 8006a3c:	bc80      	pop	{r7}
 8006a3e:	4770      	bx	lr
 8006a40:	080319f4 	.word	0x080319f4
 8006a44:	08031a00 	.word	0x08031a00

08006a48 <LL_TIM_OC_SetCompareCH1>:
{
 8006a48:	b480      	push	{r7}
 8006a4a:	b083      	sub	sp, #12
 8006a4c:	af00      	add	r7, sp, #0
 8006a4e:	6078      	str	r0, [r7, #4]
 8006a50:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->CCR1, CompareValue);
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	683a      	ldr	r2, [r7, #0]
 8006a56:	635a      	str	r2, [r3, #52]	; 0x34
}
 8006a58:	bf00      	nop
 8006a5a:	370c      	adds	r7, #12
 8006a5c:	46bd      	mov	sp, r7
 8006a5e:	bc80      	pop	{r7}
 8006a60:	4770      	bx	lr

08006a62 <LL_TIM_SetClockSource>:
{
 8006a62:	b480      	push	{r7}
 8006a64:	b083      	sub	sp, #12
 8006a66:	af00      	add	r7, sp, #0
 8006a68:	6078      	str	r0, [r7, #4]
 8006a6a:	6039      	str	r1, [r7, #0]
  MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	689b      	ldr	r3, [r3, #8]
 8006a70:	f423 33a0 	bic.w	r3, r3, #81920	; 0x14000
 8006a74:	f023 0307 	bic.w	r3, r3, #7
 8006a78:	683a      	ldr	r2, [r7, #0]
 8006a7a:	431a      	orrs	r2, r3
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	609a      	str	r2, [r3, #8]
}
 8006a80:	bf00      	nop
 8006a82:	370c      	adds	r7, #12
 8006a84:	46bd      	mov	sp, r7
 8006a86:	bc80      	pop	{r7}
 8006a88:	4770      	bx	lr

08006a8a <LL_TIM_SetTriggerOutput>:
{
 8006a8a:	b480      	push	{r7}
 8006a8c:	b083      	sub	sp, #12
 8006a8e:	af00      	add	r7, sp, #0
 8006a90:	6078      	str	r0, [r7, #4]
 8006a92:	6039      	str	r1, [r7, #0]
  MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	685b      	ldr	r3, [r3, #4]
 8006a98:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8006a9c:	683b      	ldr	r3, [r7, #0]
 8006a9e:	431a      	orrs	r2, r3
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	605a      	str	r2, [r3, #4]
}
 8006aa4:	bf00      	nop
 8006aa6:	370c      	adds	r7, #12
 8006aa8:	46bd      	mov	sp, r7
 8006aaa:	bc80      	pop	{r7}
 8006aac:	4770      	bx	lr

08006aae <LL_TIM_DisableMasterSlaveMode>:
{
 8006aae:	b480      	push	{r7}
 8006ab0:	b083      	sub	sp, #12
 8006ab2:	af00      	add	r7, sp, #0
 8006ab4:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 8006ab6:	687b      	ldr	r3, [r7, #4]
 8006ab8:	689b      	ldr	r3, [r3, #8]
 8006aba:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	609a      	str	r2, [r3, #8]
}
 8006ac2:	bf00      	nop
 8006ac4:	370c      	adds	r7, #12
 8006ac6:	46bd      	mov	sp, r7
 8006ac8:	bc80      	pop	{r7}
 8006aca:	4770      	bx	lr

08006acc <LL_TIM_ClearFlag_CC1>:
{
 8006acc:	b480      	push	{r7}
 8006ace:	b083      	sub	sp, #12
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
  WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	f06f 0202 	mvn.w	r2, #2
 8006ada:	611a      	str	r2, [r3, #16]
}
 8006adc:	bf00      	nop
 8006ade:	370c      	adds	r7, #12
 8006ae0:	46bd      	mov	sp, r7
 8006ae2:	bc80      	pop	{r7}
 8006ae4:	4770      	bx	lr

08006ae6 <LL_TIM_IsActiveFlag_CC1>:
{
 8006ae6:	b480      	push	{r7}
 8006ae8:	b083      	sub	sp, #12
 8006aea:	af00      	add	r7, sp, #0
 8006aec:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	691b      	ldr	r3, [r3, #16]
 8006af2:	f003 0302 	and.w	r3, r3, #2
 8006af6:	2b02      	cmp	r3, #2
 8006af8:	d101      	bne.n	8006afe <LL_TIM_IsActiveFlag_CC1+0x18>
 8006afa:	2301      	movs	r3, #1
 8006afc:	e000      	b.n	8006b00 <LL_TIM_IsActiveFlag_CC1+0x1a>
 8006afe:	2300      	movs	r3, #0
}
 8006b00:	4618      	mov	r0, r3
 8006b02:	370c      	adds	r7, #12
 8006b04:	46bd      	mov	sp, r7
 8006b06:	bc80      	pop	{r7}
 8006b08:	4770      	bx	lr

08006b0a <LL_TIM_EnableIT_CC1>:
{
 8006b0a:	b480      	push	{r7}
 8006b0c:	b083      	sub	sp, #12
 8006b0e:	af00      	add	r7, sp, #0
 8006b10:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	68db      	ldr	r3, [r3, #12]
 8006b16:	f043 0202 	orr.w	r2, r3, #2
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	60da      	str	r2, [r3, #12]
}
 8006b1e:	bf00      	nop
 8006b20:	370c      	adds	r7, #12
 8006b22:	46bd      	mov	sp, r7
 8006b24:	bc80      	pop	{r7}
 8006b26:	4770      	bx	lr

08006b28 <LL_TIM_DisableIT_CC1>:
{
 8006b28:	b480      	push	{r7}
 8006b2a:	b083      	sub	sp, #12
 8006b2c:	af00      	add	r7, sp, #0
 8006b2e:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	68db      	ldr	r3, [r3, #12]
 8006b34:	f023 0202 	bic.w	r2, r3, #2
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	60da      	str	r2, [r3, #12]
}
 8006b3c:	bf00      	nop
 8006b3e:	370c      	adds	r7, #12
 8006b40:	46bd      	mov	sp, r7
 8006b42:	bc80      	pop	{r7}
 8006b44:	4770      	bx	lr

08006b46 <LL_TIM_GenerateEvent_CC1>:
  * @rmtoll EGR          CC1G          LL_TIM_GenerateEvent_CC1
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_GenerateEvent_CC1(TIM_TypeDef *TIMx)
{
 8006b46:	b480      	push	{r7}
 8006b48:	b083      	sub	sp, #12
 8006b4a:	af00      	add	r7, sp, #0
 8006b4c:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->EGR, TIM_EGR_CC1G);
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	695b      	ldr	r3, [r3, #20]
 8006b52:	f043 0202 	orr.w	r2, r3, #2
 8006b56:	687b      	ldr	r3, [r7, #4]
 8006b58:	615a      	str	r2, [r3, #20]
}
 8006b5a:	bf00      	nop
 8006b5c:	370c      	adds	r7, #12
 8006b5e:	46bd      	mov	sp, r7
 8006b60:	bc80      	pop	{r7}
 8006b62:	4770      	bx	lr

08006b64 <EMBENET_TIMER_Init>:
};

static EMBENET_TIMER_CompareCallback callback;
static void*                         callbackContext;

void EMBENET_TIMER_Init(EMBENET_TIMER_CompareCallback compareCallback, void* context) {
 8006b64:	b580      	push	{r7, lr}
 8006b66:	b096      	sub	sp, #88	; 0x58
 8006b68:	af00      	add	r7, sp, #0
 8006b6a:	6078      	str	r0, [r7, #4]
 8006b6c:	6039      	str	r1, [r7, #0]
    LL_TIM_DeInit(TIM2); // Make sure the timer is deinitialized and reset to default values
 8006b6e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006b72:	f7fe fb49 	bl	8005208 <LL_TIM_DeInit>

    callback        = compareCallback;
 8006b76:	4a32      	ldr	r2, [pc, #200]	; (8006c40 <EMBENET_TIMER_Init+0xdc>)
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	6013      	str	r3, [r2, #0]
    callbackContext = context;
 8006b7c:	4a31      	ldr	r2, [pc, #196]	; (8006c44 <EMBENET_TIMER_Init+0xe0>)
 8006b7e:	683b      	ldr	r3, [r7, #0]
 8006b80:	6013      	str	r3, [r2, #0]

    LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM2);
 8006b82:	2001      	movs	r0, #1
 8006b84:	f7ff fece 	bl	8006924 <LL_APB1_GRP1_EnableClock>
    NVIC_SetPriority(TIM2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), INTERRUPT_PRIORITY_TIMER, INTERRUPT_SUBPRIORITY_TIMER));
 8006b88:	f7ff fe28 	bl	80067dc <__NVIC_GetPriorityGrouping>
 8006b8c:	4603      	mov	r3, r0
 8006b8e:	2201      	movs	r2, #1
 8006b90:	2103      	movs	r1, #3
 8006b92:	4618      	mov	r0, r3
 8006b94:	f7ff fe94 	bl	80068c0 <NVIC_EncodePriority>
 8006b98:	4603      	mov	r3, r0
 8006b9a:	4619      	mov	r1, r3
 8006b9c:	201b      	movs	r0, #27
 8006b9e:	f7ff fe65 	bl	800686c <__NVIC_SetPriority>
    NVIC_EnableIRQ(TIM2_IRQn);
 8006ba2:	201b      	movs	r0, #27
 8006ba4:	f7ff fe28 	bl	80067f8 <__NVIC_EnableIRQ>

    LL_RCC_ClocksTypeDef clocks;
    LL_RCC_GetSystemClocksFreq(&clocks);
 8006ba8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006bac:	4618      	mov	r0, r3
 8006bae:	f7fe f82e 	bl	8004c0e <LL_RCC_GetSystemClocksFreq>
    LL_TIM_InitTypeDef TIM_InitStruct = {.CounterMode       = LL_TIM_COUNTERMODE_UP,
                                         .Prescaler         = (uint16_t)(clocks.SYSCLK_Frequency / TICKS_PER_S - 1U),
 8006bb2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006bb4:	4a24      	ldr	r2, [pc, #144]	; (8006c48 <EMBENET_TIMER_Init+0xe4>)
 8006bb6:	fba2 2303 	umull	r2, r3, r2, r3
 8006bba:	0bdb      	lsrs	r3, r3, #15
 8006bbc:	b29b      	uxth	r3, r3
 8006bbe:	3b01      	subs	r3, #1
 8006bc0:	b29b      	uxth	r3, r3
    LL_TIM_InitTypeDef TIM_InitStruct = {.CounterMode       = LL_TIM_COUNTERMODE_UP,
 8006bc2:	85bb      	strh	r3, [r7, #44]	; 0x2c
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	633b      	str	r3, [r7, #48]	; 0x30
 8006bc8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8006bcc:	637b      	str	r3, [r7, #52]	; 0x34
 8006bce:	2300      	movs	r3, #0
 8006bd0:	63bb      	str	r3, [r7, #56]	; 0x38
 8006bd2:	2300      	movs	r3, #0
 8006bd4:	63fb      	str	r3, [r7, #60]	; 0x3c
                                         .ClockDivision     = LL_TIM_CLOCKDIVISION_DIV1,
                                         .Autoreload        = (0xFFFFFFFFU >> 3U),
                                         .RepetitionCounter = 0};
    LL_TIM_Init(TIM2, &TIM_InitStruct);
 8006bd6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8006bda:	4619      	mov	r1, r3
 8006bdc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006be0:	f7fe fb58 	bl	8005294 <LL_TIM_Init>
    LL_TIM_DisableARRPreload(TIM2);
 8006be4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006be8:	f7ff fec3 	bl	8006972 <LL_TIM_DisableARRPreload>
    LL_TIM_SetClockSource(TIM2, LL_TIM_CLOCKSOURCE_INTERNAL);
 8006bec:	2100      	movs	r1, #0
 8006bee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006bf2:	f7ff ff36 	bl	8006a62 <LL_TIM_SetClockSource>

    LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {.OCMode = LL_TIM_OCMODE_FROZEN, .OCState = LL_TIM_OCSTATE_DISABLE, .CompareValue = 0, .OCPolarity = LL_TIM_OCPOLARITY_HIGH};
 8006bf6:	f107 030c 	add.w	r3, r7, #12
 8006bfa:	2220      	movs	r2, #32
 8006bfc:	2100      	movs	r1, #0
 8006bfe:	4618      	mov	r0, r3
 8006c00:	f024 fa7a 	bl	802b0f8 <memset>
    LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 8006c04:	f107 030c 	add.w	r3, r7, #12
 8006c08:	461a      	mov	r2, r3
 8006c0a:	2101      	movs	r1, #1
 8006c0c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c10:	f7fe fb9e 	bl	8005350 <LL_TIM_OC_Init>

    LL_TIM_OC_DisableFast(TIM2, LL_TIM_CHANNEL_CH1);
 8006c14:	2101      	movs	r1, #1
 8006c16:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c1a:	f7ff fec5 	bl	80069a8 <LL_TIM_OC_DisableFast>
    LL_TIM_SetTriggerOutput(TIM2, LL_TIM_TRGO_RESET);
 8006c1e:	2100      	movs	r1, #0
 8006c20:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c24:	f7ff ff31 	bl	8006a8a <LL_TIM_SetTriggerOutput>
    LL_TIM_DisableMasterSlaveMode(TIM2);
 8006c28:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c2c:	f7ff ff3f 	bl	8006aae <LL_TIM_DisableMasterSlaveMode>

    LL_TIM_EnableCounter(TIM2);
 8006c30:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c34:	f7ff fe8e 	bl	8006954 <LL_TIM_EnableCounter>
}
 8006c38:	bf00      	nop
 8006c3a:	3758      	adds	r7, #88	; 0x58
 8006c3c:	46bd      	mov	sp, r7
 8006c3e:	bd80      	pop	{r7, pc}
 8006c40:	20000af4 	.word	0x20000af4
 8006c44:	20000af8 	.word	0x20000af8
 8006c48:	431bde83 	.word	0x431bde83

08006c4c <EMBENET_TIMER_SetCompare>:
    LL_TIM_DeInit(TIM2);
    LL_APB1_GRP1_DisableClock(LL_APB1_GRP1_PERIPH_TIM2);
}


void EMBENET_TIMER_SetCompare(EMBENET_TimeUs compareValue) {
 8006c4c:	b590      	push	{r4, r7, lr}
 8006c4e:	b085      	sub	sp, #20
 8006c50:	af00      	add	r7, sp, #0
 8006c52:	6078      	str	r0, [r7, #4]
    EMBENET_CRITICAL_SECTION_Enter();
 8006c54:	f7ff f9fc 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
    EMBENET_TimeUs currentValue = EMBENET_TIMER_ReadCounter();
 8006c58:	f000 f828 	bl	8006cac <EMBENET_TIMER_ReadCounter>
 8006c5c:	60f8      	str	r0, [r7, #12]
    LL_TIM_EnableIT_CC1(TIM2);
 8006c5e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c62:	f7ff ff52 	bl	8006b0a <LL_TIM_EnableIT_CC1>
    LL_TIM_ClearFlag_CC1(TIM2);
 8006c66:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c6a:	f7ff ff2f 	bl	8006acc <LL_TIM_ClearFlag_CC1>
    NVIC_ClearPendingIRQ(TIM2_IRQn);
 8006c6e:	201b      	movs	r0, #27
 8006c70:	f7ff fdde 	bl	8006830 <__NVIC_ClearPendingIRQ>
    if ((EMBENET_TimeUs)(compareValue - SET_COMPARE_GUARD_US - currentValue) < (EMBENET_TimeUs)(EMBENET_TIMER_GetMaxCompareDuration())) {
 8006c74:	687a      	ldr	r2, [r7, #4]
 8006c76:	68fb      	ldr	r3, [r7, #12]
 8006c78:	1ad3      	subs	r3, r2, r3
 8006c7a:	f1a3 0414 	sub.w	r4, r3, #20
 8006c7e:	f000 f81f 	bl	8006cc0 <EMBENET_TIMER_GetMaxCompareDuration>
 8006c82:	4603      	mov	r3, r0
 8006c84:	429c      	cmp	r4, r3
 8006c86:	d207      	bcs.n	8006c98 <EMBENET_TIMER_SetCompare+0x4c>
        LL_TIM_OC_SetCompareCH1(TIM2, compareValue / US_PER_TICK);
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	08db      	lsrs	r3, r3, #3
 8006c8c:	4619      	mov	r1, r3
 8006c8e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c92:	f7ff fed9 	bl	8006a48 <LL_TIM_OC_SetCompareCH1>
 8006c96:	e003      	b.n	8006ca0 <EMBENET_TIMER_SetCompare+0x54>
    } else {
        // compareValue is too close to current value and timer will be late, interrupt is triggered immediately
        LL_TIM_GenerateEvent_CC1(TIM2);
 8006c98:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006c9c:	f7ff ff53 	bl	8006b46 <LL_TIM_GenerateEvent_CC1>
    }
    EMBENET_CRITICAL_SECTION_Exit();
 8006ca0:	f7ff f9f6 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
}
 8006ca4:	bf00      	nop
 8006ca6:	3714      	adds	r7, #20
 8006ca8:	46bd      	mov	sp, r7
 8006caa:	bd90      	pop	{r4, r7, pc}

08006cac <EMBENET_TIMER_ReadCounter>:


EMBENET_TimeUs EMBENET_TIMER_ReadCounter(void) {
 8006cac:	b580      	push	{r7, lr}
 8006cae:	af00      	add	r7, sp, #0
    return (LL_TIM_GetCounter(TIM2) * US_PER_TICK);
 8006cb0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006cb4:	f7ff fe6c 	bl	8006990 <LL_TIM_GetCounter>
 8006cb8:	4603      	mov	r3, r0
 8006cba:	00db      	lsls	r3, r3, #3
}
 8006cbc:	4618      	mov	r0, r3
 8006cbe:	bd80      	pop	{r7, pc}

08006cc0 <EMBENET_TIMER_GetMaxCompareDuration>:


EMBENET_TimeUs EMBENET_TIMER_GetMaxCompareDuration(void) {
 8006cc0:	b480      	push	{r7}
 8006cc2:	af00      	add	r7, sp, #0
    return (EMBENET_TimeUs)0x7FFFFFFFU;
 8006cc4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
}
 8006cc8:	4618      	mov	r0, r3
 8006cca:	46bd      	mov	sp, r7
 8006ccc:	bc80      	pop	{r7}
 8006cce:	4770      	bx	lr

08006cd0 <TIM2_IRQHandler>:


void TIM2_IRQHandler(void) {
 8006cd0:	b580      	push	{r7, lr}
 8006cd2:	af00      	add	r7, sp, #0
    if (LL_TIM_IsActiveFlag_CC1(TIM2)) {
 8006cd4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006cd8:	f7ff ff05 	bl	8006ae6 <LL_TIM_IsActiveFlag_CC1>
 8006cdc:	4603      	mov	r3, r0
 8006cde:	2b00      	cmp	r3, #0
 8006ce0:	d011      	beq.n	8006d06 <TIM2_IRQHandler+0x36>
        LL_TIM_ClearFlag_CC1(TIM2);
 8006ce2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006ce6:	f7ff fef1 	bl	8006acc <LL_TIM_ClearFlag_CC1>
        LL_TIM_DisableIT_CC1(TIM2);
 8006cea:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8006cee:	f7ff ff1b 	bl	8006b28 <LL_TIM_DisableIT_CC1>

        if (callback != NULL) {
 8006cf2:	4b06      	ldr	r3, [pc, #24]	; (8006d0c <TIM2_IRQHandler+0x3c>)
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d005      	beq.n	8006d06 <TIM2_IRQHandler+0x36>
            callback(callbackContext);
 8006cfa:	4b04      	ldr	r3, [pc, #16]	; (8006d0c <TIM2_IRQHandler+0x3c>)
 8006cfc:	681b      	ldr	r3, [r3, #0]
 8006cfe:	4a04      	ldr	r2, [pc, #16]	; (8006d10 <TIM2_IRQHandler+0x40>)
 8006d00:	6812      	ldr	r2, [r2, #0]
 8006d02:	4610      	mov	r0, r2
 8006d04:	4798      	blx	r3
        }
    }
}
 8006d06:	bf00      	nop
 8006d08:	bd80      	pop	{r7, pc}
 8006d0a:	bf00      	nop
 8006d0c:	20000af4 	.word	0x20000af4
 8006d10:	20000af8 	.word	0x20000af8

08006d14 <SUBGRF_Init>:
static void SUBGRF_ReadCommand( SUBGHZ_RadioGetCmd_t Command, uint8_t *pBuffer,
                                        uint16_t Size );

/* Exported functions ---------------------------------------------------------*/
void SUBGRF_Init( DioIrqHandler dioIrq )
{
 8006d14:	b580      	push	{r7, lr}
 8006d16:	b084      	sub	sp, #16
 8006d18:	af00      	add	r7, sp, #0
 8006d1a:	6078      	str	r0, [r7, #4]
    if ( dioIrq != NULL)
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	2b00      	cmp	r3, #0
 8006d20:	d002      	beq.n	8006d28 <SUBGRF_Init+0x14>
    {
        RadioOnDioIrqCb = dioIrq;
 8006d22:	4a1c      	ldr	r2, [pc, #112]	; (8006d94 <SUBGRF_Init+0x80>)
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	6013      	str	r3, [r2, #0]
    }

    RADIO_INIT();

    /* set default SMPS current drive to default*/
    Radio_SMPS_Set(SMPS_DRIVE_SETTING_DEFAULT);
 8006d28:	2002      	movs	r0, #2
 8006d2a:	f000 fe65 	bl	80079f8 <Radio_SMPS_Set>

    ImageCalibrated = false;
 8006d2e:	4b1a      	ldr	r3, [pc, #104]	; (8006d98 <SUBGRF_Init+0x84>)
 8006d30:	2200      	movs	r2, #0
 8006d32:	701a      	strb	r2, [r3, #0]

    SUBGRF_SetStandby( STDBY_RC );
 8006d34:	2000      	movs	r0, #0
 8006d36:	f000 f8cf 	bl	8006ed8 <SUBGRF_SetStandby>

    // Initialize TCXO control
    if (1U == RBI_IsTCXO() )
 8006d3a:	4b18      	ldr	r3, [pc, #96]	; (8006d9c <SUBGRF_Init+0x88>)
 8006d3c:	781b      	ldrb	r3, [r3, #0]
 8006d3e:	2b00      	cmp	r3, #0
 8006d40:	d010      	beq.n	8006d64 <SUBGRF_Init+0x50>
    {
        SUBGRF_SetTcxoMode( TCXO_CTRL_VOLTAGE, RF_WAKEUP_TIME << 6 );// 100 ms
 8006d42:	4b17      	ldr	r3, [pc, #92]	; (8006da0 <SUBGRF_Init+0x8c>)
 8006d44:	781b      	ldrb	r3, [r3, #0]
 8006d46:	2140      	movs	r1, #64	; 0x40
 8006d48:	4618      	mov	r0, r3
 8006d4a:	f000 fa4e 	bl	80071ea <SUBGRF_SetTcxoMode>
        SUBGRF_WriteRegister( REG_XTA_TRIM, 0x00 );
 8006d4e:	2100      	movs	r1, #0
 8006d50:	f640 1011 	movw	r0, #2321	; 0x911
 8006d54:	f000 fd4e 	bl	80077f4 <SUBGRF_WriteRegister>

        /*enable calibration for cut1.1 and later*/
        CalibrationParams_t calibParam;
        calibParam.Value = 0x7F;
 8006d58:	237f      	movs	r3, #127	; 0x7f
 8006d5a:	733b      	strb	r3, [r7, #12]
        SUBGRF_Calibrate( calibParam );
 8006d5c:	7b38      	ldrb	r0, [r7, #12]
 8006d5e:	f000 f94d 	bl	8006ffc <SUBGRF_Calibrate>
 8006d62:	e00d      	b.n	8006d80 <SUBGRF_Init+0x6c>
    }
    else
    {
        SUBGRF_WriteRegister( REG_XTA_TRIM, XTAL_DEFAULT_CAP_VALUE );
 8006d64:	4b0f      	ldr	r3, [pc, #60]	; (8006da4 <SUBGRF_Init+0x90>)
 8006d66:	781b      	ldrb	r3, [r3, #0]
 8006d68:	4619      	mov	r1, r3
 8006d6a:	f640 1011 	movw	r0, #2321	; 0x911
 8006d6e:	f000 fd41 	bl	80077f4 <SUBGRF_WriteRegister>
        SUBGRF_WriteRegister( REG_XTB_TRIM, XTAL_DEFAULT_CAP_VALUE );
 8006d72:	4b0c      	ldr	r3, [pc, #48]	; (8006da4 <SUBGRF_Init+0x90>)
 8006d74:	781b      	ldrb	r3, [r3, #0]
 8006d76:	4619      	mov	r1, r3
 8006d78:	f640 1012 	movw	r0, #2322	; 0x912
 8006d7c:	f000 fd3a 	bl	80077f4 <SUBGRF_WriteRegister>
    }
    /* Init RF Switch */
    RBI_Init();
 8006d80:	f7fe fde0 	bl	8005944 <EMBENET_NODE_BSP_RBI_Init>

    OperatingMode = MODE_STDBY_RC;
 8006d84:	4b08      	ldr	r3, [pc, #32]	; (8006da8 <SUBGRF_Init+0x94>)
 8006d86:	2201      	movs	r2, #1
 8006d88:	701a      	strb	r2, [r3, #0]
}
 8006d8a:	bf00      	nop
 8006d8c:	3710      	adds	r7, #16
 8006d8e:	46bd      	mov	sp, r7
 8006d90:	bd80      	pop	{r7, pc}
 8006d92:	bf00      	nop
 8006d94:	20000b08 	.word	0x20000b08
 8006d98:	20000b04 	.word	0x20000b04
 8006d9c:	080316a9 	.word	0x080316a9
 8006da0:	080316a0 	.word	0x080316a0
 8006da4:	080316a8 	.word	0x080316a8
 8006da8:	20000afc 	.word	0x20000afc

08006dac <SUBGRF_SetSyncWord>:
    SUBGRF_SetPayload( payload, size );
    SUBGRF_SetTx( timeout );
}

uint8_t SUBGRF_SetSyncWord( uint8_t *syncWord )
{
 8006dac:	b580      	push	{r7, lr}
 8006dae:	b082      	sub	sp, #8
 8006db0:	af00      	add	r7, sp, #0
 8006db2:	6078      	str	r0, [r7, #4]
    SUBGRF_WriteRegisters( REG_LR_SYNCWORDBASEADDRESS, syncWord, 8 );
 8006db4:	2208      	movs	r2, #8
 8006db6:	6879      	ldr	r1, [r7, #4]
 8006db8:	f44f 60d8 	mov.w	r0, #1728	; 0x6c0
 8006dbc:	f000 fd42 	bl	8007844 <SUBGRF_WriteRegisters>
    return 0;
 8006dc0:	2300      	movs	r3, #0
}
 8006dc2:	4618      	mov	r0, r3
 8006dc4:	3708      	adds	r7, #8
 8006dc6:	46bd      	mov	sp, r7
 8006dc8:	bd80      	pop	{r7, pc}

08006dca <SUBGRF_SetCrcSeed>:

void SUBGRF_SetCrcSeed( uint16_t seed )
{
 8006dca:	b580      	push	{r7, lr}
 8006dcc:	b084      	sub	sp, #16
 8006dce:	af00      	add	r7, sp, #0
 8006dd0:	4603      	mov	r3, r0
 8006dd2:	80fb      	strh	r3, [r7, #6]
    uint8_t buf[2];

    buf[0] = ( uint8_t )( ( seed >> 8 ) & 0xFF );
 8006dd4:	88fb      	ldrh	r3, [r7, #6]
 8006dd6:	0a1b      	lsrs	r3, r3, #8
 8006dd8:	b29b      	uxth	r3, r3
 8006dda:	b2db      	uxtb	r3, r3
 8006ddc:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )( seed & 0xFF );
 8006dde:	88fb      	ldrh	r3, [r7, #6]
 8006de0:	b2db      	uxtb	r3, r3
 8006de2:	737b      	strb	r3, [r7, #13]

    switch( SUBGRF_GetPacketType( ) )
 8006de4:	f000 fa88 	bl	80072f8 <SUBGRF_GetPacketType>
 8006de8:	4603      	mov	r3, r0
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d108      	bne.n	8006e00 <SUBGRF_SetCrcSeed+0x36>
    {
        case PACKET_TYPE_GFSK:
            SUBGRF_WriteRegisters( REG_LR_CRCSEEDBASEADDR, buf, 2 );
 8006dee:	f107 030c 	add.w	r3, r7, #12
 8006df2:	2202      	movs	r2, #2
 8006df4:	4619      	mov	r1, r3
 8006df6:	f240 60bc 	movw	r0, #1724	; 0x6bc
 8006dfa:	f000 fd23 	bl	8007844 <SUBGRF_WriteRegisters>
            break;
 8006dfe:	e000      	b.n	8006e02 <SUBGRF_SetCrcSeed+0x38>

        default:
            break;
 8006e00:	bf00      	nop
    }
}
 8006e02:	bf00      	nop
 8006e04:	3710      	adds	r7, #16
 8006e06:	46bd      	mov	sp, r7
 8006e08:	bd80      	pop	{r7, pc}

08006e0a <SUBGRF_SetCrcPolynomial>:

void SUBGRF_SetCrcPolynomial( uint16_t polynomial )
{
 8006e0a:	b580      	push	{r7, lr}
 8006e0c:	b084      	sub	sp, #16
 8006e0e:	af00      	add	r7, sp, #0
 8006e10:	4603      	mov	r3, r0
 8006e12:	80fb      	strh	r3, [r7, #6]
    uint8_t buf[2];

    buf[0] = ( uint8_t )( ( polynomial >> 8 ) & 0xFF );
 8006e14:	88fb      	ldrh	r3, [r7, #6]
 8006e16:	0a1b      	lsrs	r3, r3, #8
 8006e18:	b29b      	uxth	r3, r3
 8006e1a:	b2db      	uxtb	r3, r3
 8006e1c:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )( polynomial & 0xFF );
 8006e1e:	88fb      	ldrh	r3, [r7, #6]
 8006e20:	b2db      	uxtb	r3, r3
 8006e22:	737b      	strb	r3, [r7, #13]

    switch( SUBGRF_GetPacketType( ) )
 8006e24:	f000 fa68 	bl	80072f8 <SUBGRF_GetPacketType>
 8006e28:	4603      	mov	r3, r0
 8006e2a:	2b00      	cmp	r3, #0
 8006e2c:	d108      	bne.n	8006e40 <SUBGRF_SetCrcPolynomial+0x36>
    {
        case PACKET_TYPE_GFSK:
            SUBGRF_WriteRegisters( REG_LR_CRCPOLYBASEADDR, buf, 2 );
 8006e2e:	f107 030c 	add.w	r3, r7, #12
 8006e32:	2202      	movs	r2, #2
 8006e34:	4619      	mov	r1, r3
 8006e36:	f240 60be 	movw	r0, #1726	; 0x6be
 8006e3a:	f000 fd03 	bl	8007844 <SUBGRF_WriteRegisters>
            break;
 8006e3e:	e000      	b.n	8006e42 <SUBGRF_SetCrcPolynomial+0x38>

        default:
            break;
 8006e40:	bf00      	nop
    }
}
 8006e42:	bf00      	nop
 8006e44:	3710      	adds	r7, #16
 8006e46:	46bd      	mov	sp, r7
 8006e48:	bd80      	pop	{r7, pc}

08006e4a <SUBGRF_GetRandom>:
            break;
    }
}

uint32_t SUBGRF_GetRandom( void )
{
 8006e4a:	b580      	push	{r7, lr}
 8006e4c:	b082      	sub	sp, #8
 8006e4e:	af00      	add	r7, sp, #0
    uint32_t number = 0;
 8006e50:	2300      	movs	r3, #0
 8006e52:	603b      	str	r3, [r7, #0]
    uint8_t regAnaLna = 0;
 8006e54:	2300      	movs	r3, #0
 8006e56:	71fb      	strb	r3, [r7, #7]
    uint8_t regAnaMixer = 0;
 8006e58:	2300      	movs	r3, #0
 8006e5a:	71bb      	strb	r3, [r7, #6]

    regAnaLna = SUBGRF_ReadRegister( REG_ANA_LNA );
 8006e5c:	f640 00e2 	movw	r0, #2274	; 0x8e2
 8006e60:	f000 fcdc 	bl	800781c <SUBGRF_ReadRegister>
 8006e64:	4603      	mov	r3, r0
 8006e66:	71fb      	strb	r3, [r7, #7]
    SUBGRF_WriteRegister( REG_ANA_LNA, regAnaLna & ~( 1 << 0 ) );
 8006e68:	79fb      	ldrb	r3, [r7, #7]
 8006e6a:	f023 0301 	bic.w	r3, r3, #1
 8006e6e:	b2db      	uxtb	r3, r3
 8006e70:	4619      	mov	r1, r3
 8006e72:	f640 00e2 	movw	r0, #2274	; 0x8e2
 8006e76:	f000 fcbd 	bl	80077f4 <SUBGRF_WriteRegister>

    regAnaMixer = SUBGRF_ReadRegister( REG_ANA_MIXER );
 8006e7a:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8006e7e:	f000 fccd 	bl	800781c <SUBGRF_ReadRegister>
 8006e82:	4603      	mov	r3, r0
 8006e84:	71bb      	strb	r3, [r7, #6]
    SUBGRF_WriteRegister( REG_ANA_MIXER, regAnaMixer & ~( 1 << 7 ) );
 8006e86:	79bb      	ldrb	r3, [r7, #6]
 8006e88:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006e8c:	b2db      	uxtb	r3, r3
 8006e8e:	4619      	mov	r1, r3
 8006e90:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8006e94:	f000 fcae 	bl	80077f4 <SUBGRF_WriteRegister>

    // Set radio in continuous reception
    SUBGRF_SetRx( 0xFFFFFF ); // Rx Continuous
 8006e98:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8006e9c:	f000 f866 	bl	8006f6c <SUBGRF_SetRx>

    SUBGRF_ReadRegisters( RANDOM_NUMBER_GENERATORBASEADDR, ( uint8_t* )&number, 4 );
 8006ea0:	463b      	mov	r3, r7
 8006ea2:	2204      	movs	r2, #4
 8006ea4:	4619      	mov	r1, r3
 8006ea6:	f640 0019 	movw	r0, #2073	; 0x819
 8006eaa:	f000 fcdf 	bl	800786c <SUBGRF_ReadRegisters>

    SUBGRF_SetStandby( STDBY_RC );
 8006eae:	2000      	movs	r0, #0
 8006eb0:	f000 f812 	bl	8006ed8 <SUBGRF_SetStandby>

    SUBGRF_WriteRegister( REG_ANA_LNA, regAnaLna );
 8006eb4:	79fb      	ldrb	r3, [r7, #7]
 8006eb6:	4619      	mov	r1, r3
 8006eb8:	f640 00e2 	movw	r0, #2274	; 0x8e2
 8006ebc:	f000 fc9a 	bl	80077f4 <SUBGRF_WriteRegister>
    SUBGRF_WriteRegister( REG_ANA_MIXER, regAnaMixer );
 8006ec0:	79bb      	ldrb	r3, [r7, #6]
 8006ec2:	4619      	mov	r1, r3
 8006ec4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8006ec8:	f000 fc94 	bl	80077f4 <SUBGRF_WriteRegister>

    return number;
 8006ecc:	683b      	ldr	r3, [r7, #0]
}
 8006ece:	4618      	mov	r0, r3
 8006ed0:	3708      	adds	r7, #8
 8006ed2:	46bd      	mov	sp, r7
 8006ed4:	bd80      	pop	{r7, pc}
	...

08006ed8 <SUBGRF_SetStandby>:
    SUBGRF_WriteCommand( RADIO_SET_SLEEP, &value, 1 );
    OperatingMode = MODE_SLEEP;
}

void SUBGRF_SetStandby( RadioStandbyModes_t standbyConfig )
{
 8006ed8:	b580      	push	{r7, lr}
 8006eda:	b082      	sub	sp, #8
 8006edc:	af00      	add	r7, sp, #0
 8006ede:	4603      	mov	r3, r0
 8006ee0:	71fb      	strb	r3, [r7, #7]
    SUBGRF_WriteCommand( RADIO_SET_STANDBY, ( uint8_t* )&standbyConfig, 1 );
 8006ee2:	1dfb      	adds	r3, r7, #7
 8006ee4:	2201      	movs	r2, #1
 8006ee6:	4619      	mov	r1, r3
 8006ee8:	2080      	movs	r0, #128	; 0x80
 8006eea:	f000 fcff 	bl	80078ec <SUBGRF_WriteCommand>
    if( standbyConfig == STDBY_RC )
 8006eee:	79fb      	ldrb	r3, [r7, #7]
 8006ef0:	2b00      	cmp	r3, #0
 8006ef2:	d103      	bne.n	8006efc <SUBGRF_SetStandby+0x24>
    {
        OperatingMode = MODE_STDBY_RC;
 8006ef4:	4b05      	ldr	r3, [pc, #20]	; (8006f0c <SUBGRF_SetStandby+0x34>)
 8006ef6:	2201      	movs	r2, #1
 8006ef8:	701a      	strb	r2, [r3, #0]
    }
    else
    {
        OperatingMode = MODE_STDBY_XOSC;
    }
}
 8006efa:	e002      	b.n	8006f02 <SUBGRF_SetStandby+0x2a>
        OperatingMode = MODE_STDBY_XOSC;
 8006efc:	4b03      	ldr	r3, [pc, #12]	; (8006f0c <SUBGRF_SetStandby+0x34>)
 8006efe:	2202      	movs	r2, #2
 8006f00:	701a      	strb	r2, [r3, #0]
}
 8006f02:	bf00      	nop
 8006f04:	3708      	adds	r7, #8
 8006f06:	46bd      	mov	sp, r7
 8006f08:	bd80      	pop	{r7, pc}
 8006f0a:	bf00      	nop
 8006f0c:	20000afc 	.word	0x20000afc

08006f10 <SUBGRF_SetFs>:

void SUBGRF_SetFs( void )
{
 8006f10:	b580      	push	{r7, lr}
 8006f12:	af00      	add	r7, sp, #0
    SUBGRF_WriteCommand( RADIO_SET_FS, 0, 0 );
 8006f14:	2200      	movs	r2, #0
 8006f16:	2100      	movs	r1, #0
 8006f18:	20c1      	movs	r0, #193	; 0xc1
 8006f1a:	f000 fce7 	bl	80078ec <SUBGRF_WriteCommand>
    OperatingMode = MODE_FS;
 8006f1e:	4b02      	ldr	r3, [pc, #8]	; (8006f28 <SUBGRF_SetFs+0x18>)
 8006f20:	2203      	movs	r2, #3
 8006f22:	701a      	strb	r2, [r3, #0]
}
 8006f24:	bf00      	nop
 8006f26:	bd80      	pop	{r7, pc}
 8006f28:	20000afc 	.word	0x20000afc

08006f2c <SUBGRF_SetTx>:

void SUBGRF_SetTx( uint32_t timeout )
{
 8006f2c:	b580      	push	{r7, lr}
 8006f2e:	b084      	sub	sp, #16
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	6078      	str	r0, [r7, #4]
    uint8_t buf[3];

    OperatingMode = MODE_TX;
 8006f34:	4b0c      	ldr	r3, [pc, #48]	; (8006f68 <SUBGRF_SetTx+0x3c>)
 8006f36:	2204      	movs	r2, #4
 8006f38:	701a      	strb	r2, [r3, #0]

    buf[0] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	0c1b      	lsrs	r3, r3, #16
 8006f3e:	b2db      	uxtb	r3, r3
 8006f40:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	0a1b      	lsrs	r3, r3, #8
 8006f46:	b2db      	uxtb	r3, r3
 8006f48:	737b      	strb	r3, [r7, #13]
    buf[2] = ( uint8_t )( timeout & 0xFF );
 8006f4a:	687b      	ldr	r3, [r7, #4]
 8006f4c:	b2db      	uxtb	r3, r3
 8006f4e:	73bb      	strb	r3, [r7, #14]
    SUBGRF_WriteCommand( RADIO_SET_TX, buf, 3 );
 8006f50:	f107 030c 	add.w	r3, r7, #12
 8006f54:	2203      	movs	r2, #3
 8006f56:	4619      	mov	r1, r3
 8006f58:	2083      	movs	r0, #131	; 0x83
 8006f5a:	f000 fcc7 	bl	80078ec <SUBGRF_WriteCommand>
}
 8006f5e:	bf00      	nop
 8006f60:	3710      	adds	r7, #16
 8006f62:	46bd      	mov	sp, r7
 8006f64:	bd80      	pop	{r7, pc}
 8006f66:	bf00      	nop
 8006f68:	20000afc 	.word	0x20000afc

08006f6c <SUBGRF_SetRx>:

void SUBGRF_SetRx( uint32_t timeout )
{
 8006f6c:	b580      	push	{r7, lr}
 8006f6e:	b084      	sub	sp, #16
 8006f70:	af00      	add	r7, sp, #0
 8006f72:	6078      	str	r0, [r7, #4]
    uint8_t buf[3];

    OperatingMode = MODE_RX;
 8006f74:	4b0c      	ldr	r3, [pc, #48]	; (8006fa8 <SUBGRF_SetRx+0x3c>)
 8006f76:	2205      	movs	r2, #5
 8006f78:	701a      	strb	r2, [r3, #0]

    buf[0] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	0c1b      	lsrs	r3, r3, #16
 8006f7e:	b2db      	uxtb	r3, r3
 8006f80:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	0a1b      	lsrs	r3, r3, #8
 8006f86:	b2db      	uxtb	r3, r3
 8006f88:	737b      	strb	r3, [r7, #13]
    buf[2] = ( uint8_t )( timeout & 0xFF );
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	b2db      	uxtb	r3, r3
 8006f8e:	73bb      	strb	r3, [r7, #14]
    SUBGRF_WriteCommand( RADIO_SET_RX, buf, 3 );
 8006f90:	f107 030c 	add.w	r3, r7, #12
 8006f94:	2203      	movs	r2, #3
 8006f96:	4619      	mov	r1, r3
 8006f98:	2082      	movs	r0, #130	; 0x82
 8006f9a:	f000 fca7 	bl	80078ec <SUBGRF_WriteCommand>
}
 8006f9e:	bf00      	nop
 8006fa0:	3710      	adds	r7, #16
 8006fa2:	46bd      	mov	sp, r7
 8006fa4:	bd80      	pop	{r7, pc}
 8006fa6:	bf00      	nop
 8006fa8:	20000afc 	.word	0x20000afc

08006fac <SUBGRF_SetStopRxTimerOnPreambleDetect>:
{
    SUBGRF_WriteCommand( RADIO_SET_TXCONTINUOUSPREAMBLE, 0, 0 );
}

void SUBGRF_SetStopRxTimerOnPreambleDetect( bool enable )
{
 8006fac:	b580      	push	{r7, lr}
 8006fae:	b082      	sub	sp, #8
 8006fb0:	af00      	add	r7, sp, #0
 8006fb2:	4603      	mov	r3, r0
 8006fb4:	71fb      	strb	r3, [r7, #7]
    SUBGRF_WriteCommand( RADIO_SET_STOPRXTIMERONPREAMBLE, ( uint8_t* )&enable, 1 );
 8006fb6:	1dfb      	adds	r3, r7, #7
 8006fb8:	2201      	movs	r2, #1
 8006fba:	4619      	mov	r1, r3
 8006fbc:	209f      	movs	r0, #159	; 0x9f
 8006fbe:	f000 fc95 	bl	80078ec <SUBGRF_WriteCommand>
}
 8006fc2:	bf00      	nop
 8006fc4:	3708      	adds	r7, #8
 8006fc6:	46bd      	mov	sp, r7
 8006fc8:	bd80      	pop	{r7, pc}
	...

08006fcc <SUBGRF_SetRegulatorMode>:
        SUBGRF_WriteRegister( REG_LR_SYNCH_TIMEOUT, reg );
    }
}

void SUBGRF_SetRegulatorMode( void )
{
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b082      	sub	sp, #8
 8006fd0:	af00      	add	r7, sp, #0
    /* ST_WORKAROUND_BEGIN: Get RegulatorMode value from RBI */
    RadioRegulatorMode_t mode;

    if ( ( 1UL == RBI_IsDCDC() ) && ( 1UL == DCDC_ENABLE ) )
 8006fd2:	4b09      	ldr	r3, [pc, #36]	; (8006ff8 <SUBGRF_SetRegulatorMode+0x2c>)
 8006fd4:	781b      	ldrb	r3, [r3, #0]
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d002      	beq.n	8006fe0 <SUBGRF_SetRegulatorMode+0x14>
    {
        mode = USE_DCDC ;
 8006fda:	2301      	movs	r3, #1
 8006fdc:	71fb      	strb	r3, [r7, #7]
 8006fde:	e001      	b.n	8006fe4 <SUBGRF_SetRegulatorMode+0x18>
    }
    else
    {
        mode = USE_LDO ;
 8006fe0:	2300      	movs	r3, #0
 8006fe2:	71fb      	strb	r3, [r7, #7]
    }
    /* ST_WORKAROUND_END */
    SUBGRF_WriteCommand( RADIO_SET_REGULATORMODE, ( uint8_t* )&mode, 1 );
 8006fe4:	1dfb      	adds	r3, r7, #7
 8006fe6:	2201      	movs	r2, #1
 8006fe8:	4619      	mov	r1, r3
 8006fea:	2096      	movs	r0, #150	; 0x96
 8006fec:	f000 fc7e 	bl	80078ec <SUBGRF_WriteCommand>
}
 8006ff0:	bf00      	nop
 8006ff2:	3708      	adds	r7, #8
 8006ff4:	46bd      	mov	sp, r7
 8006ff6:	bd80      	pop	{r7, pc}
 8006ff8:	080316aa 	.word	0x080316aa

08006ffc <SUBGRF_Calibrate>:

void SUBGRF_Calibrate( CalibrationParams_t calibParam )
{
 8006ffc:	b580      	push	{r7, lr}
 8006ffe:	b084      	sub	sp, #16
 8007000:	af00      	add	r7, sp, #0
 8007002:	7138      	strb	r0, [r7, #4]
    uint8_t value = ( ( ( uint8_t )calibParam.Fields.ImgEnable << 6 ) |
 8007004:	793b      	ldrb	r3, [r7, #4]
 8007006:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800700a:	b2db      	uxtb	r3, r3
 800700c:	019b      	lsls	r3, r3, #6
 800700e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.ADCBulkPEnable << 5 ) |
 8007010:	793b      	ldrb	r3, [r7, #4]
 8007012:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8007016:	b2db      	uxtb	r3, r3
 8007018:	015b      	lsls	r3, r3, #5
    uint8_t value = ( ( ( uint8_t )calibParam.Fields.ImgEnable << 6 ) |
 800701a:	b25b      	sxtb	r3, r3
 800701c:	4313      	orrs	r3, r2
 800701e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.ADCBulkNEnable << 4 ) |
 8007020:	793b      	ldrb	r3, [r7, #4]
 8007022:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8007026:	b2db      	uxtb	r3, r3
 8007028:	011b      	lsls	r3, r3, #4
                      ( ( uint8_t )calibParam.Fields.ADCBulkPEnable << 5 ) |
 800702a:	b25b      	sxtb	r3, r3
 800702c:	4313      	orrs	r3, r2
 800702e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.ADCPulseEnable << 3 ) |
 8007030:	793b      	ldrb	r3, [r7, #4]
 8007032:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8007036:	b2db      	uxtb	r3, r3
 8007038:	00db      	lsls	r3, r3, #3
                      ( ( uint8_t )calibParam.Fields.ADCBulkNEnable << 4 ) |
 800703a:	b25b      	sxtb	r3, r3
 800703c:	4313      	orrs	r3, r2
 800703e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.PLLEnable << 2 ) |
 8007040:	793b      	ldrb	r3, [r7, #4]
 8007042:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8007046:	b2db      	uxtb	r3, r3
 8007048:	009b      	lsls	r3, r3, #2
                      ( ( uint8_t )calibParam.Fields.ADCPulseEnable << 3 ) |
 800704a:	b25b      	sxtb	r3, r3
 800704c:	4313      	orrs	r3, r2
 800704e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.RC13MEnable << 1 ) |
 8007050:	793b      	ldrb	r3, [r7, #4]
 8007052:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8007056:	b2db      	uxtb	r3, r3
 8007058:	005b      	lsls	r3, r3, #1
                      ( ( uint8_t )calibParam.Fields.PLLEnable << 2 ) |
 800705a:	b25b      	sxtb	r3, r3
 800705c:	4313      	orrs	r3, r2
 800705e:	b25a      	sxtb	r2, r3
                      ( ( uint8_t )calibParam.Fields.RC64KEnable ) );
 8007060:	793b      	ldrb	r3, [r7, #4]
 8007062:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8007066:	b2db      	uxtb	r3, r3
 8007068:	b25b      	sxtb	r3, r3
                      ( ( uint8_t )calibParam.Fields.RC13MEnable << 1 ) |
 800706a:	4313      	orrs	r3, r2
 800706c:	b25b      	sxtb	r3, r3
 800706e:	b2db      	uxtb	r3, r3
    uint8_t value = ( ( ( uint8_t )calibParam.Fields.ImgEnable << 6 ) |
 8007070:	73fb      	strb	r3, [r7, #15]

    SUBGRF_WriteCommand( RADIO_CALIBRATE, &value, 1 );
 8007072:	f107 030f 	add.w	r3, r7, #15
 8007076:	2201      	movs	r2, #1
 8007078:	4619      	mov	r1, r3
 800707a:	2089      	movs	r0, #137	; 0x89
 800707c:	f000 fc36 	bl	80078ec <SUBGRF_WriteCommand>
}
 8007080:	bf00      	nop
 8007082:	3710      	adds	r7, #16
 8007084:	46bd      	mov	sp, r7
 8007086:	bd80      	pop	{r7, pc}

08007088 <SUBGRF_CalibrateImage>:

void SUBGRF_CalibrateImage( uint32_t freq )
{
 8007088:	b580      	push	{r7, lr}
 800708a:	b084      	sub	sp, #16
 800708c:	af00      	add	r7, sp, #0
 800708e:	6078      	str	r0, [r7, #4]
    uint8_t calFreq[2];

    if( freq > 900000000 )
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	4a1b      	ldr	r2, [pc, #108]	; (8007100 <SUBGRF_CalibrateImage+0x78>)
 8007094:	4293      	cmp	r3, r2
 8007096:	d904      	bls.n	80070a2 <SUBGRF_CalibrateImage+0x1a>
    {
        calFreq[0] = 0xE1;
 8007098:	23e1      	movs	r3, #225	; 0xe1
 800709a:	733b      	strb	r3, [r7, #12]
        calFreq[1] = 0xE9;
 800709c:	23e9      	movs	r3, #233	; 0xe9
 800709e:	737b      	strb	r3, [r7, #13]
 80070a0:	e022      	b.n	80070e8 <SUBGRF_CalibrateImage+0x60>
    }
    else if( freq > 850000000 )
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	4a17      	ldr	r2, [pc, #92]	; (8007104 <SUBGRF_CalibrateImage+0x7c>)
 80070a6:	4293      	cmp	r3, r2
 80070a8:	d904      	bls.n	80070b4 <SUBGRF_CalibrateImage+0x2c>
    {
        calFreq[0] = 0xD7;
 80070aa:	23d7      	movs	r3, #215	; 0xd7
 80070ac:	733b      	strb	r3, [r7, #12]
        calFreq[1] = 0xDB;
 80070ae:	23db      	movs	r3, #219	; 0xdb
 80070b0:	737b      	strb	r3, [r7, #13]
 80070b2:	e019      	b.n	80070e8 <SUBGRF_CalibrateImage+0x60>
    }
    else if( freq > 770000000 )
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	4a14      	ldr	r2, [pc, #80]	; (8007108 <SUBGRF_CalibrateImage+0x80>)
 80070b8:	4293      	cmp	r3, r2
 80070ba:	d904      	bls.n	80070c6 <SUBGRF_CalibrateImage+0x3e>
    {
        calFreq[0] = 0xC1;
 80070bc:	23c1      	movs	r3, #193	; 0xc1
 80070be:	733b      	strb	r3, [r7, #12]
        calFreq[1] = 0xC5;
 80070c0:	23c5      	movs	r3, #197	; 0xc5
 80070c2:	737b      	strb	r3, [r7, #13]
 80070c4:	e010      	b.n	80070e8 <SUBGRF_CalibrateImage+0x60>
    }
    else if( freq > 460000000 )
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	4a10      	ldr	r2, [pc, #64]	; (800710c <SUBGRF_CalibrateImage+0x84>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d904      	bls.n	80070d8 <SUBGRF_CalibrateImage+0x50>
    {
        calFreq[0] = 0x75;
 80070ce:	2375      	movs	r3, #117	; 0x75
 80070d0:	733b      	strb	r3, [r7, #12]
        calFreq[1] = 0x81;
 80070d2:	2381      	movs	r3, #129	; 0x81
 80070d4:	737b      	strb	r3, [r7, #13]
 80070d6:	e007      	b.n	80070e8 <SUBGRF_CalibrateImage+0x60>
    }
    else if( freq > 425000000 )
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	4a0d      	ldr	r2, [pc, #52]	; (8007110 <SUBGRF_CalibrateImage+0x88>)
 80070dc:	4293      	cmp	r3, r2
 80070de:	d903      	bls.n	80070e8 <SUBGRF_CalibrateImage+0x60>
    {
        calFreq[0] = 0x6B;
 80070e0:	236b      	movs	r3, #107	; 0x6b
 80070e2:	733b      	strb	r3, [r7, #12]
        calFreq[1] = 0x6F;
 80070e4:	236f      	movs	r3, #111	; 0x6f
 80070e6:	737b      	strb	r3, [r7, #13]
    }
    SUBGRF_WriteCommand( RADIO_CALIBRATEIMAGE, calFreq, 2 );
 80070e8:	f107 030c 	add.w	r3, r7, #12
 80070ec:	2202      	movs	r2, #2
 80070ee:	4619      	mov	r1, r3
 80070f0:	2098      	movs	r0, #152	; 0x98
 80070f2:	f000 fbfb 	bl	80078ec <SUBGRF_WriteCommand>
}
 80070f6:	bf00      	nop
 80070f8:	3710      	adds	r7, #16
 80070fa:	46bd      	mov	sp, r7
 80070fc:	bd80      	pop	{r7, pc}
 80070fe:	bf00      	nop
 8007100:	35a4e900 	.word	0x35a4e900
 8007104:	32a9f880 	.word	0x32a9f880
 8007108:	2de54480 	.word	0x2de54480
 800710c:	1b6b0b00 	.word	0x1b6b0b00
 8007110:	1954fc40 	.word	0x1954fc40

08007114 <SUBGRF_SetPaConfig>:

void SUBGRF_SetPaConfig( uint8_t paDutyCycle, uint8_t hpMax, uint8_t deviceSel, uint8_t paLut )
{
 8007114:	b590      	push	{r4, r7, lr}
 8007116:	b085      	sub	sp, #20
 8007118:	af00      	add	r7, sp, #0
 800711a:	4604      	mov	r4, r0
 800711c:	4608      	mov	r0, r1
 800711e:	4611      	mov	r1, r2
 8007120:	461a      	mov	r2, r3
 8007122:	4623      	mov	r3, r4
 8007124:	71fb      	strb	r3, [r7, #7]
 8007126:	4603      	mov	r3, r0
 8007128:	71bb      	strb	r3, [r7, #6]
 800712a:	460b      	mov	r3, r1
 800712c:	717b      	strb	r3, [r7, #5]
 800712e:	4613      	mov	r3, r2
 8007130:	713b      	strb	r3, [r7, #4]
    uint8_t buf[4];

    buf[0] = paDutyCycle;
 8007132:	79fb      	ldrb	r3, [r7, #7]
 8007134:	733b      	strb	r3, [r7, #12]
    buf[1] = hpMax;
 8007136:	79bb      	ldrb	r3, [r7, #6]
 8007138:	737b      	strb	r3, [r7, #13]
    buf[2] = deviceSel;
 800713a:	797b      	ldrb	r3, [r7, #5]
 800713c:	73bb      	strb	r3, [r7, #14]
    buf[3] = paLut;
 800713e:	793b      	ldrb	r3, [r7, #4]
 8007140:	73fb      	strb	r3, [r7, #15]
    SUBGRF_WriteCommand( RADIO_SET_PACONFIG, buf, 4 );
 8007142:	f107 030c 	add.w	r3, r7, #12
 8007146:	2204      	movs	r2, #4
 8007148:	4619      	mov	r1, r3
 800714a:	2095      	movs	r0, #149	; 0x95
 800714c:	f000 fbce 	bl	80078ec <SUBGRF_WriteCommand>
}
 8007150:	bf00      	nop
 8007152:	3714      	adds	r7, #20
 8007154:	46bd      	mov	sp, r7
 8007156:	bd90      	pop	{r4, r7, pc}

08007158 <SUBGRF_SetRxTxFallbackMode>:

void SUBGRF_SetRxTxFallbackMode( uint8_t fallbackMode )
{
 8007158:	b580      	push	{r7, lr}
 800715a:	b082      	sub	sp, #8
 800715c:	af00      	add	r7, sp, #0
 800715e:	4603      	mov	r3, r0
 8007160:	71fb      	strb	r3, [r7, #7]
    SUBGRF_WriteCommand( RADIO_SET_TXFALLBACKMODE, &fallbackMode, 1 );
 8007162:	1dfb      	adds	r3, r7, #7
 8007164:	2201      	movs	r2, #1
 8007166:	4619      	mov	r1, r3
 8007168:	2093      	movs	r0, #147	; 0x93
 800716a:	f000 fbbf 	bl	80078ec <SUBGRF_WriteCommand>
}
 800716e:	bf00      	nop
 8007170:	3708      	adds	r7, #8
 8007172:	46bd      	mov	sp, r7
 8007174:	bd80      	pop	{r7, pc}

08007176 <SUBGRF_SetDioIrqParams>:

void SUBGRF_SetDioIrqParams( uint16_t irqMask, uint16_t dio1Mask, uint16_t dio2Mask, uint16_t dio3Mask )
{
 8007176:	b590      	push	{r4, r7, lr}
 8007178:	b085      	sub	sp, #20
 800717a:	af00      	add	r7, sp, #0
 800717c:	4604      	mov	r4, r0
 800717e:	4608      	mov	r0, r1
 8007180:	4611      	mov	r1, r2
 8007182:	461a      	mov	r2, r3
 8007184:	4623      	mov	r3, r4
 8007186:	80fb      	strh	r3, [r7, #6]
 8007188:	4603      	mov	r3, r0
 800718a:	80bb      	strh	r3, [r7, #4]
 800718c:	460b      	mov	r3, r1
 800718e:	807b      	strh	r3, [r7, #2]
 8007190:	4613      	mov	r3, r2
 8007192:	803b      	strh	r3, [r7, #0]
    uint8_t buf[8];

    buf[0] = ( uint8_t )( ( irqMask >> 8 ) & 0x00FF );
 8007194:	88fb      	ldrh	r3, [r7, #6]
 8007196:	0a1b      	lsrs	r3, r3, #8
 8007198:	b29b      	uxth	r3, r3
 800719a:	b2db      	uxtb	r3, r3
 800719c:	723b      	strb	r3, [r7, #8]
    buf[1] = ( uint8_t )( irqMask & 0x00FF );
 800719e:	88fb      	ldrh	r3, [r7, #6]
 80071a0:	b2db      	uxtb	r3, r3
 80071a2:	727b      	strb	r3, [r7, #9]
    buf[2] = ( uint8_t )( ( dio1Mask >> 8 ) & 0x00FF );
 80071a4:	88bb      	ldrh	r3, [r7, #4]
 80071a6:	0a1b      	lsrs	r3, r3, #8
 80071a8:	b29b      	uxth	r3, r3
 80071aa:	b2db      	uxtb	r3, r3
 80071ac:	72bb      	strb	r3, [r7, #10]
    buf[3] = ( uint8_t )( dio1Mask & 0x00FF );
 80071ae:	88bb      	ldrh	r3, [r7, #4]
 80071b0:	b2db      	uxtb	r3, r3
 80071b2:	72fb      	strb	r3, [r7, #11]
    buf[4] = ( uint8_t )( ( dio2Mask >> 8 ) & 0x00FF );
 80071b4:	887b      	ldrh	r3, [r7, #2]
 80071b6:	0a1b      	lsrs	r3, r3, #8
 80071b8:	b29b      	uxth	r3, r3
 80071ba:	b2db      	uxtb	r3, r3
 80071bc:	733b      	strb	r3, [r7, #12]
    buf[5] = ( uint8_t )( dio2Mask & 0x00FF );
 80071be:	887b      	ldrh	r3, [r7, #2]
 80071c0:	b2db      	uxtb	r3, r3
 80071c2:	737b      	strb	r3, [r7, #13]
    buf[6] = ( uint8_t )( ( dio3Mask >> 8 ) & 0x00FF );
 80071c4:	883b      	ldrh	r3, [r7, #0]
 80071c6:	0a1b      	lsrs	r3, r3, #8
 80071c8:	b29b      	uxth	r3, r3
 80071ca:	b2db      	uxtb	r3, r3
 80071cc:	73bb      	strb	r3, [r7, #14]
    buf[7] = ( uint8_t )( dio3Mask & 0x00FF );
 80071ce:	883b      	ldrh	r3, [r7, #0]
 80071d0:	b2db      	uxtb	r3, r3
 80071d2:	73fb      	strb	r3, [r7, #15]
    SUBGRF_WriteCommand( RADIO_CFG_DIOIRQ, buf, 8 );
 80071d4:	f107 0308 	add.w	r3, r7, #8
 80071d8:	2208      	movs	r2, #8
 80071da:	4619      	mov	r1, r3
 80071dc:	2008      	movs	r0, #8
 80071de:	f000 fb85 	bl	80078ec <SUBGRF_WriteCommand>
}
 80071e2:	bf00      	nop
 80071e4:	3714      	adds	r7, #20
 80071e6:	46bd      	mov	sp, r7
 80071e8:	bd90      	pop	{r4, r7, pc}

080071ea <SUBGRF_SetTcxoMode>:
    SUBGRF_ReadCommand( RADIO_GET_IRQSTATUS, irqStatus, 2 );
    return ( irqStatus[0] << 8 ) | irqStatus[1];
}

void SUBGRF_SetTcxoMode (RadioTcxoCtrlVoltage_t tcxoVoltage, uint32_t timeout )
{
 80071ea:	b580      	push	{r7, lr}
 80071ec:	b084      	sub	sp, #16
 80071ee:	af00      	add	r7, sp, #0
 80071f0:	4603      	mov	r3, r0
 80071f2:	6039      	str	r1, [r7, #0]
 80071f4:	71fb      	strb	r3, [r7, #7]
    uint8_t buf[4];

    buf[0] = tcxoVoltage & 0x07;
 80071f6:	79fb      	ldrb	r3, [r7, #7]
 80071f8:	f003 0307 	and.w	r3, r3, #7
 80071fc:	b2db      	uxtb	r3, r3
 80071fe:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )( ( timeout >> 16 ) & 0xFF );
 8007200:	683b      	ldr	r3, [r7, #0]
 8007202:	0c1b      	lsrs	r3, r3, #16
 8007204:	b2db      	uxtb	r3, r3
 8007206:	737b      	strb	r3, [r7, #13]
    buf[2] = ( uint8_t )( ( timeout >> 8 ) & 0xFF );
 8007208:	683b      	ldr	r3, [r7, #0]
 800720a:	0a1b      	lsrs	r3, r3, #8
 800720c:	b2db      	uxtb	r3, r3
 800720e:	73bb      	strb	r3, [r7, #14]
    buf[3] = ( uint8_t )( timeout & 0xFF );
 8007210:	683b      	ldr	r3, [r7, #0]
 8007212:	b2db      	uxtb	r3, r3
 8007214:	73fb      	strb	r3, [r7, #15]

    SUBGRF_WriteCommand( RADIO_SET_TCXOMODE, buf, 4 );
 8007216:	f107 030c 	add.w	r3, r7, #12
 800721a:	2204      	movs	r2, #4
 800721c:	4619      	mov	r1, r3
 800721e:	2097      	movs	r0, #151	; 0x97
 8007220:	f000 fb64 	bl	80078ec <SUBGRF_WriteCommand>
}
 8007224:	bf00      	nop
 8007226:	3710      	adds	r7, #16
 8007228:	46bd      	mov	sp, r7
 800722a:	bd80      	pop	{r7, pc}

0800722c <SUBGRF_SetRfFrequency>:

void SUBGRF_SetRfFrequency( uint32_t frequency )
{
 800722c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007230:	b084      	sub	sp, #16
 8007232:	af00      	add	r7, sp, #0
 8007234:	6078      	str	r0, [r7, #4]
    uint8_t buf[4];
    uint32_t chan = 0;
 8007236:	2300      	movs	r3, #0
 8007238:	60fb      	str	r3, [r7, #12]

    if( ImageCalibrated == false )
 800723a:	4b1f      	ldr	r3, [pc, #124]	; (80072b8 <SUBGRF_SetRfFrequency+0x8c>)
 800723c:	781b      	ldrb	r3, [r3, #0]
 800723e:	f083 0301 	eor.w	r3, r3, #1
 8007242:	b2db      	uxtb	r3, r3
 8007244:	2b00      	cmp	r3, #0
 8007246:	d005      	beq.n	8007254 <SUBGRF_SetRfFrequency+0x28>
    {
        SUBGRF_CalibrateImage( frequency );
 8007248:	6878      	ldr	r0, [r7, #4]
 800724a:	f7ff ff1d 	bl	8007088 <SUBGRF_CalibrateImage>
        ImageCalibrated = true;
 800724e:	4b1a      	ldr	r3, [pc, #104]	; (80072b8 <SUBGRF_SetRfFrequency+0x8c>)
 8007250:	2201      	movs	r2, #1
 8007252:	701a      	strb	r2, [r3, #0]
    }
    /* ST_WORKAROUND_BEGIN: Simplified frequency calculation */
    SX_FREQ_TO_CHANNEL(chan, frequency);   
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	2200      	movs	r2, #0
 8007258:	461c      	mov	r4, r3
 800725a:	4615      	mov	r5, r2
 800725c:	ea4f 19d4 	mov.w	r9, r4, lsr #7
 8007260:	ea4f 6844 	mov.w	r8, r4, lsl #25
 8007264:	4b15      	ldr	r3, [pc, #84]	; (80072bc <SUBGRF_SetRfFrequency+0x90>)
 8007266:	681b      	ldr	r3, [r3, #0]
 8007268:	2200      	movs	r2, #0
 800726a:	469a      	mov	sl, r3
 800726c:	4693      	mov	fp, r2
 800726e:	4652      	mov	r2, sl
 8007270:	465b      	mov	r3, fp
 8007272:	4640      	mov	r0, r8
 8007274:	4649      	mov	r1, r9
 8007276:	f7f9 fbe1 	bl	8000a3c <__aeabi_uldivmod>
 800727a:	4602      	mov	r2, r0
 800727c:	460b      	mov	r3, r1
 800727e:	4613      	mov	r3, r2
 8007280:	60fb      	str	r3, [r7, #12]
    /* ST_WORKAROUND_END */
    buf[0] = ( uint8_t )( ( chan >> 24 ) & 0xFF );
 8007282:	68fb      	ldr	r3, [r7, #12]
 8007284:	0e1b      	lsrs	r3, r3, #24
 8007286:	b2db      	uxtb	r3, r3
 8007288:	723b      	strb	r3, [r7, #8]
    buf[1] = ( uint8_t )( ( chan >> 16 ) & 0xFF );
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	0c1b      	lsrs	r3, r3, #16
 800728e:	b2db      	uxtb	r3, r3
 8007290:	727b      	strb	r3, [r7, #9]
    buf[2] = ( uint8_t )( ( chan >> 8 ) & 0xFF );
 8007292:	68fb      	ldr	r3, [r7, #12]
 8007294:	0a1b      	lsrs	r3, r3, #8
 8007296:	b2db      	uxtb	r3, r3
 8007298:	72bb      	strb	r3, [r7, #10]
    buf[3] = ( uint8_t )( chan & 0xFF );
 800729a:	68fb      	ldr	r3, [r7, #12]
 800729c:	b2db      	uxtb	r3, r3
 800729e:	72fb      	strb	r3, [r7, #11]
    SUBGRF_WriteCommand( RADIO_SET_RFFREQUENCY, buf, 4 );
 80072a0:	f107 0308 	add.w	r3, r7, #8
 80072a4:	2204      	movs	r2, #4
 80072a6:	4619      	mov	r1, r3
 80072a8:	2086      	movs	r0, #134	; 0x86
 80072aa:	f000 fb1f 	bl	80078ec <SUBGRF_WriteCommand>
}
 80072ae:	bf00      	nop
 80072b0:	3710      	adds	r7, #16
 80072b2:	46bd      	mov	sp, r7
 80072b4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80072b8:	20000b04 	.word	0x20000b04
 80072bc:	080316a4 	.word	0x080316a4

080072c0 <SUBGRF_SetPacketType>:

void SUBGRF_SetPacketType( RadioPacketTypes_t packetType )
{
 80072c0:	b580      	push	{r7, lr}
 80072c2:	b082      	sub	sp, #8
 80072c4:	af00      	add	r7, sp, #0
 80072c6:	4603      	mov	r3, r0
 80072c8:	71fb      	strb	r3, [r7, #7]
    // Save packet type internally to avoid questioning the radio
    PacketType = packetType;
 80072ca:	79fa      	ldrb	r2, [r7, #7]
 80072cc:	4b09      	ldr	r3, [pc, #36]	; (80072f4 <SUBGRF_SetPacketType+0x34>)
 80072ce:	701a      	strb	r2, [r3, #0]

    if( packetType == PACKET_TYPE_GFSK )
 80072d0:	79fb      	ldrb	r3, [r7, #7]
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d104      	bne.n	80072e0 <SUBGRF_SetPacketType+0x20>
    {
        SUBGRF_WriteRegister( REG_BIT_SYNC, 0x00 );
 80072d6:	2100      	movs	r1, #0
 80072d8:	f240 60ac 	movw	r0, #1708	; 0x6ac
 80072dc:	f000 fa8a 	bl	80077f4 <SUBGRF_WriteRegister>
    }
    SUBGRF_WriteCommand( RADIO_SET_PACKETTYPE, ( uint8_t* )&packetType, 1 );
 80072e0:	1dfb      	adds	r3, r7, #7
 80072e2:	2201      	movs	r2, #1
 80072e4:	4619      	mov	r1, r3
 80072e6:	208a      	movs	r0, #138	; 0x8a
 80072e8:	f000 fb00 	bl	80078ec <SUBGRF_WriteCommand>
}
 80072ec:	bf00      	nop
 80072ee:	3708      	adds	r7, #8
 80072f0:	46bd      	mov	sp, r7
 80072f2:	bd80      	pop	{r7, pc}
 80072f4:	20000afd 	.word	0x20000afd

080072f8 <SUBGRF_GetPacketType>:

RadioPacketTypes_t SUBGRF_GetPacketType( void )
{
 80072f8:	b480      	push	{r7}
 80072fa:	af00      	add	r7, sp, #0
    return PacketType;
 80072fc:	4b02      	ldr	r3, [pc, #8]	; (8007308 <SUBGRF_GetPacketType+0x10>)
 80072fe:	781b      	ldrb	r3, [r3, #0]
}
 8007300:	4618      	mov	r0, r3
 8007302:	46bd      	mov	sp, r7
 8007304:	bc80      	pop	{r7}
 8007306:	4770      	bx	lr
 8007308:	20000afd 	.word	0x20000afd

0800730c <SUBGRF_SetTxParams>:

void SUBGRF_SetTxParams( uint8_t paSelect, int8_t power, RadioRampTimes_t rampTime ) 
{
 800730c:	b580      	push	{r7, lr}
 800730e:	b084      	sub	sp, #16
 8007310:	af00      	add	r7, sp, #0
 8007312:	4603      	mov	r3, r0
 8007314:	71fb      	strb	r3, [r7, #7]
 8007316:	460b      	mov	r3, r1
 8007318:	71bb      	strb	r3, [r7, #6]
 800731a:	4613      	mov	r3, r2
 800731c:	717b      	strb	r3, [r7, #5]
    uint8_t buf[2];

    if( paSelect == RFO_LP )
 800731e:	79fb      	ldrb	r3, [r7, #7]
 8007320:	2b01      	cmp	r3, #1
 8007322:	d124      	bne.n	800736e <SUBGRF_SetTxParams+0x62>
    {
        if( power == 15 )
 8007324:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8007328:	2b0f      	cmp	r3, #15
 800732a:	d106      	bne.n	800733a <SUBGRF_SetTxParams+0x2e>
        {
            SUBGRF_SetPaConfig( 0x06, 0x00, 0x01, 0x01 );
 800732c:	2301      	movs	r3, #1
 800732e:	2201      	movs	r2, #1
 8007330:	2100      	movs	r1, #0
 8007332:	2006      	movs	r0, #6
 8007334:	f7ff feee 	bl	8007114 <SUBGRF_SetPaConfig>
 8007338:	e005      	b.n	8007346 <SUBGRF_SetTxParams+0x3a>
        }
        else
        {
            SUBGRF_SetPaConfig( 0x04, 0x00, 0x01, 0x01 );
 800733a:	2301      	movs	r3, #1
 800733c:	2201      	movs	r2, #1
 800733e:	2100      	movs	r1, #0
 8007340:	2004      	movs	r0, #4
 8007342:	f7ff fee7 	bl	8007114 <SUBGRF_SetPaConfig>
        }
        if( power >= 14 )
 8007346:	f997 3006 	ldrsb.w	r3, [r7, #6]
 800734a:	2b0d      	cmp	r3, #13
 800734c:	dd02      	ble.n	8007354 <SUBGRF_SetTxParams+0x48>
        {
            power = 14;
 800734e:	230e      	movs	r3, #14
 8007350:	71bb      	strb	r3, [r7, #6]
 8007352:	e006      	b.n	8007362 <SUBGRF_SetTxParams+0x56>
        }
        else if( power < -17 )
 8007354:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8007358:	f113 0f11 	cmn.w	r3, #17
 800735c:	da01      	bge.n	8007362 <SUBGRF_SetTxParams+0x56>
        {
            power = -17;
 800735e:	23ef      	movs	r3, #239	; 0xef
 8007360:	71bb      	strb	r3, [r7, #6]
        }
        SUBGRF_WriteRegister( REG_OCP, 0x18 ); // current max is 80 mA for the whole device
 8007362:	2118      	movs	r1, #24
 8007364:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8007368:	f000 fa44 	bl	80077f4 <SUBGRF_WriteRegister>
 800736c:	e025      	b.n	80073ba <SUBGRF_SetTxParams+0xae>
    }
    else // rfo_hp
    {
        // WORKAROUND - Better Resistance of the SX1262 Tx to Antenna Mismatch, see DS_SX1261-2_V1.2 datasheet chapter 15.2
        // RegTxClampConfig = @address 0x08D8
        SUBGRF_WriteRegister( REG_TX_CLAMP, SUBGRF_ReadRegister( REG_TX_CLAMP ) | ( 0x0F << 1 ) );
 800736e:	f640 00d8 	movw	r0, #2264	; 0x8d8
 8007372:	f000 fa53 	bl	800781c <SUBGRF_ReadRegister>
 8007376:	4603      	mov	r3, r0
 8007378:	f043 031e 	orr.w	r3, r3, #30
 800737c:	b2db      	uxtb	r3, r3
 800737e:	4619      	mov	r1, r3
 8007380:	f640 00d8 	movw	r0, #2264	; 0x8d8
 8007384:	f000 fa36 	bl	80077f4 <SUBGRF_WriteRegister>
        // WORKAROUND END

        SUBGRF_SetPaConfig( 0x04, 0x07, 0x00, 0x01 );
 8007388:	2301      	movs	r3, #1
 800738a:	2200      	movs	r2, #0
 800738c:	2107      	movs	r1, #7
 800738e:	2004      	movs	r0, #4
 8007390:	f7ff fec0 	bl	8007114 <SUBGRF_SetPaConfig>
        if( power > 22 )
 8007394:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8007398:	2b16      	cmp	r3, #22
 800739a:	dd02      	ble.n	80073a2 <SUBGRF_SetTxParams+0x96>
        {
            power = 22;
 800739c:	2316      	movs	r3, #22
 800739e:	71bb      	strb	r3, [r7, #6]
 80073a0:	e006      	b.n	80073b0 <SUBGRF_SetTxParams+0xa4>
        }
        else if( power < -9 )
 80073a2:	f997 3006 	ldrsb.w	r3, [r7, #6]
 80073a6:	f113 0f09 	cmn.w	r3, #9
 80073aa:	da01      	bge.n	80073b0 <SUBGRF_SetTxParams+0xa4>
        {
            power = -9;
 80073ac:	23f7      	movs	r3, #247	; 0xf7
 80073ae:	71bb      	strb	r3, [r7, #6]
        }
        SUBGRF_WriteRegister( REG_OCP, 0x38 ); // current max 160mA for the whole device
 80073b0:	2138      	movs	r1, #56	; 0x38
 80073b2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80073b6:	f000 fa1d 	bl	80077f4 <SUBGRF_WriteRegister>
    }
    buf[0] = power;
 80073ba:	79bb      	ldrb	r3, [r7, #6]
 80073bc:	733b      	strb	r3, [r7, #12]
    buf[1] = ( uint8_t )rampTime;
 80073be:	797b      	ldrb	r3, [r7, #5]
 80073c0:	737b      	strb	r3, [r7, #13]
    SUBGRF_WriteCommand( RADIO_SET_TXPARAMS, buf, 2 );
 80073c2:	f107 030c 	add.w	r3, r7, #12
 80073c6:	2202      	movs	r2, #2
 80073c8:	4619      	mov	r1, r3
 80073ca:	208e      	movs	r0, #142	; 0x8e
 80073cc:	f000 fa8e 	bl	80078ec <SUBGRF_WriteCommand>
}
 80073d0:	bf00      	nop
 80073d2:	3710      	adds	r7, #16
 80073d4:	46bd      	mov	sp, r7
 80073d6:	bd80      	pop	{r7, pc}

080073d8 <SUBGRF_SetModulationParams>:

void SUBGRF_SetModulationParams( ModulationParams_t *modulationParams )
{
 80073d8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80073dc:	b086      	sub	sp, #24
 80073de:	af00      	add	r7, sp, #0
 80073e0:	6078      	str	r0, [r7, #4]
    uint8_t n;
    uint32_t tempVal = 0;
 80073e2:	2300      	movs	r3, #0
 80073e4:	617b      	str	r3, [r7, #20]
    uint8_t buf[8] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
 80073e6:	4a66      	ldr	r2, [pc, #408]	; (8007580 <SUBGRF_SetModulationParams+0x1a8>)
 80073e8:	f107 0308 	add.w	r3, r7, #8
 80073ec:	e892 0003 	ldmia.w	r2, {r0, r1}
 80073f0:	e883 0003 	stmia.w	r3, {r0, r1}

    // Check if required configuration corresponds to the stored packet type
    // If not, silently update radio packet type
    if( PacketType != modulationParams->PacketType )
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	781a      	ldrb	r2, [r3, #0]
 80073f8:	4b62      	ldr	r3, [pc, #392]	; (8007584 <SUBGRF_SetModulationParams+0x1ac>)
 80073fa:	781b      	ldrb	r3, [r3, #0]
 80073fc:	429a      	cmp	r2, r3
 80073fe:	d004      	beq.n	800740a <SUBGRF_SetModulationParams+0x32>
    {
        SUBGRF_SetPacketType( modulationParams->PacketType );
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	781b      	ldrb	r3, [r3, #0]
 8007404:	4618      	mov	r0, r3
 8007406:	f7ff ff5b 	bl	80072c0 <SUBGRF_SetPacketType>
    }

    switch( modulationParams->PacketType )
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	781b      	ldrb	r3, [r3, #0]
 800740e:	2b03      	cmp	r3, #3
 8007410:	f200 80af 	bhi.w	8007572 <SUBGRF_SetModulationParams+0x19a>
 8007414:	a201      	add	r2, pc, #4	; (adr r2, 800741c <SUBGRF_SetModulationParams+0x44>)
 8007416:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800741a:	bf00      	nop
 800741c:	0800742d 	.word	0x0800742d
 8007420:	080074fd 	.word	0x080074fd
 8007424:	080074bb 	.word	0x080074bb
 8007428:	0800752b 	.word	0x0800752b
    {
    case PACKET_TYPE_GFSK:
        n = 8;
 800742c:	2308      	movs	r3, #8
 800742e:	74fb      	strb	r3, [r7, #19]
        tempVal = ( uint32_t )(( 32 * XTAL_FREQ ) / modulationParams->Params.Gfsk.BitRate );
 8007430:	4b55      	ldr	r3, [pc, #340]	; (8007588 <SUBGRF_SetModulationParams+0x1b0>)
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	015a      	lsls	r2, r3, #5
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	685b      	ldr	r3, [r3, #4]
 800743a:	fbb2 f3f3 	udiv	r3, r2, r3
 800743e:	617b      	str	r3, [r7, #20]
        buf[0] = ( tempVal >> 16 ) & 0xFF;
 8007440:	697b      	ldr	r3, [r7, #20]
 8007442:	0c1b      	lsrs	r3, r3, #16
 8007444:	b2db      	uxtb	r3, r3
 8007446:	723b      	strb	r3, [r7, #8]
        buf[1] = ( tempVal >> 8 ) & 0xFF;
 8007448:	697b      	ldr	r3, [r7, #20]
 800744a:	0a1b      	lsrs	r3, r3, #8
 800744c:	b2db      	uxtb	r3, r3
 800744e:	727b      	strb	r3, [r7, #9]
        buf[2] = tempVal & 0xFF;
 8007450:	697b      	ldr	r3, [r7, #20]
 8007452:	b2db      	uxtb	r3, r3
 8007454:	72bb      	strb	r3, [r7, #10]
        buf[3] = modulationParams->Params.Gfsk.ModulationShaping;
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	7b1b      	ldrb	r3, [r3, #12]
 800745a:	72fb      	strb	r3, [r7, #11]
        buf[4] = modulationParams->Params.Gfsk.Bandwidth;
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	7b5b      	ldrb	r3, [r3, #13]
 8007460:	733b      	strb	r3, [r7, #12]
        /* ST_WORKAROUND_BEGIN: Simplified frequency calculation */
        SX_FREQ_TO_CHANNEL(tempVal, modulationParams->Params.Gfsk.Fdev);
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	689b      	ldr	r3, [r3, #8]
 8007466:	2200      	movs	r2, #0
 8007468:	461c      	mov	r4, r3
 800746a:	4615      	mov	r5, r2
 800746c:	ea4f 19d4 	mov.w	r9, r4, lsr #7
 8007470:	ea4f 6844 	mov.w	r8, r4, lsl #25
 8007474:	4b44      	ldr	r3, [pc, #272]	; (8007588 <SUBGRF_SetModulationParams+0x1b0>)
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	2200      	movs	r2, #0
 800747a:	469a      	mov	sl, r3
 800747c:	4693      	mov	fp, r2
 800747e:	4652      	mov	r2, sl
 8007480:	465b      	mov	r3, fp
 8007482:	4640      	mov	r0, r8
 8007484:	4649      	mov	r1, r9
 8007486:	f7f9 fad9 	bl	8000a3c <__aeabi_uldivmod>
 800748a:	4602      	mov	r2, r0
 800748c:	460b      	mov	r3, r1
 800748e:	4613      	mov	r3, r2
 8007490:	617b      	str	r3, [r7, #20]
        /* ST_WORKAROUND_END */
        buf[5] = ( tempVal >> 16 ) & 0xFF;
 8007492:	697b      	ldr	r3, [r7, #20]
 8007494:	0c1b      	lsrs	r3, r3, #16
 8007496:	b2db      	uxtb	r3, r3
 8007498:	737b      	strb	r3, [r7, #13]
        buf[6] = ( tempVal >> 8 ) & 0xFF;
 800749a:	697b      	ldr	r3, [r7, #20]
 800749c:	0a1b      	lsrs	r3, r3, #8
 800749e:	b2db      	uxtb	r3, r3
 80074a0:	73bb      	strb	r3, [r7, #14]
        buf[7] = ( tempVal& 0xFF );
 80074a2:	697b      	ldr	r3, [r7, #20]
 80074a4:	b2db      	uxtb	r3, r3
 80074a6:	73fb      	strb	r3, [r7, #15]
        SUBGRF_WriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
 80074a8:	7cfb      	ldrb	r3, [r7, #19]
 80074aa:	b29a      	uxth	r2, r3
 80074ac:	f107 0308 	add.w	r3, r7, #8
 80074b0:	4619      	mov	r1, r3
 80074b2:	208b      	movs	r0, #139	; 0x8b
 80074b4:	f000 fa1a 	bl	80078ec <SUBGRF_WriteCommand>
        break;
 80074b8:	e05c      	b.n	8007574 <SUBGRF_SetModulationParams+0x19c>
    case PACKET_TYPE_BPSK:
        n = 4;
 80074ba:	2304      	movs	r3, #4
 80074bc:	74fb      	strb	r3, [r7, #19]
        tempVal = ( uint32_t ) (( 32 * XTAL_FREQ) / modulationParams->Params.Bpsk.BitRate );
 80074be:	4b32      	ldr	r3, [pc, #200]	; (8007588 <SUBGRF_SetModulationParams+0x1b0>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	015a      	lsls	r2, r3, #5
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	691b      	ldr	r3, [r3, #16]
 80074c8:	fbb2 f3f3 	udiv	r3, r2, r3
 80074cc:	617b      	str	r3, [r7, #20]
        buf[0] = ( tempVal >> 16 ) & 0xFF;
 80074ce:	697b      	ldr	r3, [r7, #20]
 80074d0:	0c1b      	lsrs	r3, r3, #16
 80074d2:	b2db      	uxtb	r3, r3
 80074d4:	723b      	strb	r3, [r7, #8]
        buf[1] = ( tempVal >> 8 ) & 0xFF;
 80074d6:	697b      	ldr	r3, [r7, #20]
 80074d8:	0a1b      	lsrs	r3, r3, #8
 80074da:	b2db      	uxtb	r3, r3
 80074dc:	727b      	strb	r3, [r7, #9]
        buf[2] = tempVal & 0xFF;
 80074de:	697b      	ldr	r3, [r7, #20]
 80074e0:	b2db      	uxtb	r3, r3
 80074e2:	72bb      	strb	r3, [r7, #10]
        buf[3] = modulationParams->Params.Bpsk.ModulationShaping;
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	7d1b      	ldrb	r3, [r3, #20]
 80074e8:	72fb      	strb	r3, [r7, #11]
        SUBGRF_WriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
 80074ea:	7cfb      	ldrb	r3, [r7, #19]
 80074ec:	b29a      	uxth	r2, r3
 80074ee:	f107 0308 	add.w	r3, r7, #8
 80074f2:	4619      	mov	r1, r3
 80074f4:	208b      	movs	r0, #139	; 0x8b
 80074f6:	f000 f9f9 	bl	80078ec <SUBGRF_WriteCommand>
        break;
 80074fa:	e03b      	b.n	8007574 <SUBGRF_SetModulationParams+0x19c>
    case PACKET_TYPE_LORA:
        n = 4;
 80074fc:	2304      	movs	r3, #4
 80074fe:	74fb      	strb	r3, [r7, #19]
        buf[0] = modulationParams->Params.LoRa.SpreadingFactor;
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	7e1b      	ldrb	r3, [r3, #24]
 8007504:	723b      	strb	r3, [r7, #8]
        buf[1] = modulationParams->Params.LoRa.Bandwidth;
 8007506:	687b      	ldr	r3, [r7, #4]
 8007508:	7e5b      	ldrb	r3, [r3, #25]
 800750a:	727b      	strb	r3, [r7, #9]
        buf[2] = modulationParams->Params.LoRa.CodingRate;
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	7e9b      	ldrb	r3, [r3, #26]
 8007510:	72bb      	strb	r3, [r7, #10]
        buf[3] = modulationParams->Params.LoRa.LowDatarateOptimize;
 8007512:	687b      	ldr	r3, [r7, #4]
 8007514:	7edb      	ldrb	r3, [r3, #27]
 8007516:	72fb      	strb	r3, [r7, #11]

        SUBGRF_WriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
 8007518:	7cfb      	ldrb	r3, [r7, #19]
 800751a:	b29a      	uxth	r2, r3
 800751c:	f107 0308 	add.w	r3, r7, #8
 8007520:	4619      	mov	r1, r3
 8007522:	208b      	movs	r0, #139	; 0x8b
 8007524:	f000 f9e2 	bl	80078ec <SUBGRF_WriteCommand>

        break;
 8007528:	e024      	b.n	8007574 <SUBGRF_SetModulationParams+0x19c>
    case PACKET_TYPE_GMSK:
        n = 5;
 800752a:	2305      	movs	r3, #5
 800752c:	74fb      	strb	r3, [r7, #19]
        tempVal = ( uint32_t )(( 32 *XTAL_FREQ) / modulationParams->Params.Gfsk.BitRate );
 800752e:	4b16      	ldr	r3, [pc, #88]	; (8007588 <SUBGRF_SetModulationParams+0x1b0>)
 8007530:	681b      	ldr	r3, [r3, #0]
 8007532:	015a      	lsls	r2, r3, #5
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	685b      	ldr	r3, [r3, #4]
 8007538:	fbb2 f3f3 	udiv	r3, r2, r3
 800753c:	617b      	str	r3, [r7, #20]
        buf[0] = ( tempVal >> 16 ) & 0xFF;
 800753e:	697b      	ldr	r3, [r7, #20]
 8007540:	0c1b      	lsrs	r3, r3, #16
 8007542:	b2db      	uxtb	r3, r3
 8007544:	723b      	strb	r3, [r7, #8]
        buf[1] = ( tempVal >> 8 ) & 0xFF;
 8007546:	697b      	ldr	r3, [r7, #20]
 8007548:	0a1b      	lsrs	r3, r3, #8
 800754a:	b2db      	uxtb	r3, r3
 800754c:	727b      	strb	r3, [r7, #9]
        buf[2] = tempVal & 0xFF;
 800754e:	697b      	ldr	r3, [r7, #20]
 8007550:	b2db      	uxtb	r3, r3
 8007552:	72bb      	strb	r3, [r7, #10]
        buf[3] = modulationParams->Params.Gfsk.ModulationShaping;
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	7b1b      	ldrb	r3, [r3, #12]
 8007558:	72fb      	strb	r3, [r7, #11]
        buf[4] = modulationParams->Params.Gfsk.Bandwidth;
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	7b5b      	ldrb	r3, [r3, #13]
 800755e:	733b      	strb	r3, [r7, #12]
        SUBGRF_WriteCommand( RADIO_SET_MODULATIONPARAMS, buf, n );
 8007560:	7cfb      	ldrb	r3, [r7, #19]
 8007562:	b29a      	uxth	r2, r3
 8007564:	f107 0308 	add.w	r3, r7, #8
 8007568:	4619      	mov	r1, r3
 800756a:	208b      	movs	r0, #139	; 0x8b
 800756c:	f000 f9be 	bl	80078ec <SUBGRF_WriteCommand>
        break;
 8007570:	e000      	b.n	8007574 <SUBGRF_SetModulationParams+0x19c>
    default:
    case PACKET_TYPE_NONE:
      break;
 8007572:	bf00      	nop
    }
}
 8007574:	bf00      	nop
 8007576:	3718      	adds	r7, #24
 8007578:	46bd      	mov	sp, r7
 800757a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800757e:	bf00      	nop
 8007580:	0802c480 	.word	0x0802c480
 8007584:	20000afd 	.word	0x20000afd
 8007588:	080316a4 	.word	0x080316a4

0800758c <SUBGRF_SetPacketParams>:

void SUBGRF_SetPacketParams( PacketParams_t *packetParams )
{
 800758c:	b580      	push	{r7, lr}
 800758e:	b086      	sub	sp, #24
 8007590:	af00      	add	r7, sp, #0
 8007592:	6078      	str	r0, [r7, #4]
    uint8_t n;
    uint8_t crcVal = 0;
 8007594:	2300      	movs	r3, #0
 8007596:	75bb      	strb	r3, [r7, #22]
    uint8_t buf[9] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
 8007598:	4a48      	ldr	r2, [pc, #288]	; (80076bc <SUBGRF_SetPacketParams+0x130>)
 800759a:	f107 030c 	add.w	r3, r7, #12
 800759e:	ca07      	ldmia	r2, {r0, r1, r2}
 80075a0:	c303      	stmia	r3!, {r0, r1}
 80075a2:	701a      	strb	r2, [r3, #0]

    // Check if required configuration corresponds to the stored packet type
    // If not, silently update radio packet type
    if( PacketType != packetParams->PacketType )
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	781a      	ldrb	r2, [r3, #0]
 80075a8:	4b45      	ldr	r3, [pc, #276]	; (80076c0 <SUBGRF_SetPacketParams+0x134>)
 80075aa:	781b      	ldrb	r3, [r3, #0]
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d004      	beq.n	80075ba <SUBGRF_SetPacketParams+0x2e>
    {
        SUBGRF_SetPacketType( packetParams->PacketType );
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	781b      	ldrb	r3, [r3, #0]
 80075b4:	4618      	mov	r0, r3
 80075b6:	f7ff fe83 	bl	80072c0 <SUBGRF_SetPacketType>
    }

    switch( packetParams->PacketType )
 80075ba:	687b      	ldr	r3, [r7, #4]
 80075bc:	781b      	ldrb	r3, [r3, #0]
 80075be:	2b03      	cmp	r3, #3
 80075c0:	d878      	bhi.n	80076b4 <SUBGRF_SetPacketParams+0x128>
 80075c2:	a201      	add	r2, pc, #4	; (adr r2, 80075c8 <SUBGRF_SetPacketParams+0x3c>)
 80075c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075c8:	080075d9 	.word	0x080075d9
 80075cc:	08007669 	.word	0x08007669
 80075d0:	0800765d 	.word	0x0800765d
 80075d4:	080075d9 	.word	0x080075d9
    {
    case PACKET_TYPE_GMSK:
    case PACKET_TYPE_GFSK:
        if( packetParams->Params.Gfsk.CrcLength == RADIO_CRC_2_BYTES_IBM )
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	7a5b      	ldrb	r3, [r3, #9]
 80075dc:	2bf1      	cmp	r3, #241	; 0xf1
 80075de:	d10a      	bne.n	80075f6 <SUBGRF_SetPacketParams+0x6a>
        {
            SUBGRF_SetCrcSeed( CRC_IBM_SEED );
 80075e0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80075e4:	f7ff fbf1 	bl	8006dca <SUBGRF_SetCrcSeed>
            SUBGRF_SetCrcPolynomial( CRC_POLYNOMIAL_IBM );
 80075e8:	f248 0005 	movw	r0, #32773	; 0x8005
 80075ec:	f7ff fc0d 	bl	8006e0a <SUBGRF_SetCrcPolynomial>
            crcVal = RADIO_CRC_2_BYTES;
 80075f0:	2302      	movs	r3, #2
 80075f2:	75bb      	strb	r3, [r7, #22]
 80075f4:	e011      	b.n	800761a <SUBGRF_SetPacketParams+0x8e>
        }
        else if( packetParams->Params.Gfsk.CrcLength == RADIO_CRC_2_BYTES_CCIT )
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	7a5b      	ldrb	r3, [r3, #9]
 80075fa:	2bf2      	cmp	r3, #242	; 0xf2
 80075fc:	d10a      	bne.n	8007614 <SUBGRF_SetPacketParams+0x88>
        {
            SUBGRF_SetCrcSeed( CRC_CCITT_SEED );
 80075fe:	f641 500f 	movw	r0, #7439	; 0x1d0f
 8007602:	f7ff fbe2 	bl	8006dca <SUBGRF_SetCrcSeed>
            SUBGRF_SetCrcPolynomial( CRC_POLYNOMIAL_CCITT );
 8007606:	f241 0021 	movw	r0, #4129	; 0x1021
 800760a:	f7ff fbfe 	bl	8006e0a <SUBGRF_SetCrcPolynomial>
            crcVal = RADIO_CRC_2_BYTES_INV;
 800760e:	2306      	movs	r3, #6
 8007610:	75bb      	strb	r3, [r7, #22]
 8007612:	e002      	b.n	800761a <SUBGRF_SetPacketParams+0x8e>
        }
        else
        {
            crcVal = packetParams->Params.Gfsk.CrcLength;
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	7a5b      	ldrb	r3, [r3, #9]
 8007618:	75bb      	strb	r3, [r7, #22]
        }
        n = 9;
 800761a:	2309      	movs	r3, #9
 800761c:	75fb      	strb	r3, [r7, #23]
        buf[0] = ( packetParams->Params.Gfsk.PreambleLength >> 8 ) & 0xFF;
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	885b      	ldrh	r3, [r3, #2]
 8007622:	0a1b      	lsrs	r3, r3, #8
 8007624:	b29b      	uxth	r3, r3
 8007626:	b2db      	uxtb	r3, r3
 8007628:	733b      	strb	r3, [r7, #12]
        buf[1] = packetParams->Params.Gfsk.PreambleLength;
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	885b      	ldrh	r3, [r3, #2]
 800762e:	b2db      	uxtb	r3, r3
 8007630:	737b      	strb	r3, [r7, #13]
        buf[2] = packetParams->Params.Gfsk.PreambleMinDetect;
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	791b      	ldrb	r3, [r3, #4]
 8007636:	73bb      	strb	r3, [r7, #14]
        buf[3] = ( packetParams->Params.Gfsk.SyncWordLength /*<< 3*/ ); // convert from byte to bit
 8007638:	687b      	ldr	r3, [r7, #4]
 800763a:	795b      	ldrb	r3, [r3, #5]
 800763c:	73fb      	strb	r3, [r7, #15]
        buf[4] = packetParams->Params.Gfsk.AddrComp;
 800763e:	687b      	ldr	r3, [r7, #4]
 8007640:	799b      	ldrb	r3, [r3, #6]
 8007642:	743b      	strb	r3, [r7, #16]
        buf[5] = packetParams->Params.Gfsk.HeaderType;
 8007644:	687b      	ldr	r3, [r7, #4]
 8007646:	79db      	ldrb	r3, [r3, #7]
 8007648:	747b      	strb	r3, [r7, #17]
        buf[6] = packetParams->Params.Gfsk.PayloadLength;
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	7a1b      	ldrb	r3, [r3, #8]
 800764e:	74bb      	strb	r3, [r7, #18]
        buf[7] = crcVal;
 8007650:	7dbb      	ldrb	r3, [r7, #22]
 8007652:	74fb      	strb	r3, [r7, #19]
        buf[8] = packetParams->Params.Gfsk.DcFree;
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	7a9b      	ldrb	r3, [r3, #10]
 8007658:	753b      	strb	r3, [r7, #20]
        break;
 800765a:	e022      	b.n	80076a2 <SUBGRF_SetPacketParams+0x116>
    case PACKET_TYPE_BPSK:
        n = 1;
 800765c:	2301      	movs	r3, #1
 800765e:	75fb      	strb	r3, [r7, #23]
        buf[0] = packetParams->Params.Bpsk.PayloadLength;
 8007660:	687b      	ldr	r3, [r7, #4]
 8007662:	7b1b      	ldrb	r3, [r3, #12]
 8007664:	733b      	strb	r3, [r7, #12]
        break;
 8007666:	e01c      	b.n	80076a2 <SUBGRF_SetPacketParams+0x116>
    case PACKET_TYPE_LORA:
        n = 6;
 8007668:	2306      	movs	r3, #6
 800766a:	75fb      	strb	r3, [r7, #23]
        buf[0] = ( packetParams->Params.LoRa.PreambleLength >> 8 ) & 0xFF;
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	89db      	ldrh	r3, [r3, #14]
 8007670:	0a1b      	lsrs	r3, r3, #8
 8007672:	b29b      	uxth	r3, r3
 8007674:	b2db      	uxtb	r3, r3
 8007676:	733b      	strb	r3, [r7, #12]
        buf[1] = packetParams->Params.LoRa.PreambleLength;
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	89db      	ldrh	r3, [r3, #14]
 800767c:	b2db      	uxtb	r3, r3
 800767e:	737b      	strb	r3, [r7, #13]
        buf[2] = LoRaHeaderType = packetParams->Params.LoRa.HeaderType;
 8007680:	687b      	ldr	r3, [r7, #4]
 8007682:	7c1a      	ldrb	r2, [r3, #16]
 8007684:	4b0f      	ldr	r3, [pc, #60]	; (80076c4 <SUBGRF_SetPacketParams+0x138>)
 8007686:	4611      	mov	r1, r2
 8007688:	7019      	strb	r1, [r3, #0]
 800768a:	4613      	mov	r3, r2
 800768c:	73bb      	strb	r3, [r7, #14]
        buf[3] = packetParams->Params.LoRa.PayloadLength;
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	7c5b      	ldrb	r3, [r3, #17]
 8007692:	73fb      	strb	r3, [r7, #15]
        buf[4] = packetParams->Params.LoRa.CrcMode;
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	7c9b      	ldrb	r3, [r3, #18]
 8007698:	743b      	strb	r3, [r7, #16]
        buf[5] = packetParams->Params.LoRa.InvertIQ;
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	7cdb      	ldrb	r3, [r3, #19]
 800769e:	747b      	strb	r3, [r7, #17]
        break;
 80076a0:	bf00      	nop
    default:
    case PACKET_TYPE_NONE:
        return;
    }
    SUBGRF_WriteCommand( RADIO_SET_PACKETPARAMS, buf, n );
 80076a2:	7dfb      	ldrb	r3, [r7, #23]
 80076a4:	b29a      	uxth	r2, r3
 80076a6:	f107 030c 	add.w	r3, r7, #12
 80076aa:	4619      	mov	r1, r3
 80076ac:	208c      	movs	r0, #140	; 0x8c
 80076ae:	f000 f91d 	bl	80078ec <SUBGRF_WriteCommand>
 80076b2:	e000      	b.n	80076b6 <SUBGRF_SetPacketParams+0x12a>
        return;
 80076b4:	bf00      	nop
}
 80076b6:	3718      	adds	r7, #24
 80076b8:	46bd      	mov	sp, r7
 80076ba:	bd80      	pop	{r7, pc}
 80076bc:	0802c488 	.word	0x0802c488
 80076c0:	20000afd 	.word	0x20000afd
 80076c4:	20000afe 	.word	0x20000afe

080076c8 <SUBGRF_SetBufferBaseAddress>:
    SUBGRF_WriteCommand( RADIO_SET_CADPARAMS, buf, 7 );
    OperatingMode = MODE_CAD;
}

void SUBGRF_SetBufferBaseAddress( uint8_t txBaseAddress, uint8_t rxBaseAddress )
{
 80076c8:	b580      	push	{r7, lr}
 80076ca:	b084      	sub	sp, #16
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	4603      	mov	r3, r0
 80076d0:	460a      	mov	r2, r1
 80076d2:	71fb      	strb	r3, [r7, #7]
 80076d4:	4613      	mov	r3, r2
 80076d6:	71bb      	strb	r3, [r7, #6]
    uint8_t buf[2];

    buf[0] = txBaseAddress;
 80076d8:	79fb      	ldrb	r3, [r7, #7]
 80076da:	733b      	strb	r3, [r7, #12]
    buf[1] = rxBaseAddress;
 80076dc:	79bb      	ldrb	r3, [r7, #6]
 80076de:	737b      	strb	r3, [r7, #13]
    SUBGRF_WriteCommand( RADIO_SET_BUFFERBASEADDRESS, buf, 2 );
 80076e0:	f107 030c 	add.w	r3, r7, #12
 80076e4:	2202      	movs	r2, #2
 80076e6:	4619      	mov	r1, r3
 80076e8:	208f      	movs	r0, #143	; 0x8f
 80076ea:	f000 f8ff 	bl	80078ec <SUBGRF_WriteCommand>
}
 80076ee:	bf00      	nop
 80076f0:	3710      	adds	r7, #16
 80076f2:	46bd      	mov	sp, r7
 80076f4:	bd80      	pop	{r7, pc}
	...

080076f8 <SUBGRF_GetRxBufferStatus>:
    rssi = -buf[0] >> 1;
    return rssi;
}

void SUBGRF_GetRxBufferStatus( uint8_t *payloadLength, uint8_t *rxStartBufferPointer )
{
 80076f8:	b580      	push	{r7, lr}
 80076fa:	b084      	sub	sp, #16
 80076fc:	af00      	add	r7, sp, #0
 80076fe:	6078      	str	r0, [r7, #4]
 8007700:	6039      	str	r1, [r7, #0]
    uint8_t status[2];

    SUBGRF_ReadCommand( RADIO_GET_RXBUFFERSTATUS, status, 2 );
 8007702:	f107 030c 	add.w	r3, r7, #12
 8007706:	2202      	movs	r2, #2
 8007708:	4619      	mov	r1, r3
 800770a:	2013      	movs	r0, #19
 800770c:	f000 f902 	bl	8007914 <SUBGRF_ReadCommand>

    // In case of LORA fixed header, the payloadLength is obtained by reading
    // the register REG_LR_PAYLOADLENGTH
    if( ( SUBGRF_GetPacketType( ) == PACKET_TYPE_LORA ) && ( LoRaHeaderType == LORA_PACKET_FIXED_LENGTH ) )
 8007710:	f7ff fdf2 	bl	80072f8 <SUBGRF_GetPacketType>
 8007714:	4603      	mov	r3, r0
 8007716:	2b01      	cmp	r3, #1
 8007718:	d10d      	bne.n	8007736 <SUBGRF_GetRxBufferStatus+0x3e>
 800771a:	4b0c      	ldr	r3, [pc, #48]	; (800774c <SUBGRF_GetRxBufferStatus+0x54>)
 800771c:	781b      	ldrb	r3, [r3, #0]
 800771e:	b2db      	uxtb	r3, r3
 8007720:	2b01      	cmp	r3, #1
 8007722:	d108      	bne.n	8007736 <SUBGRF_GetRxBufferStatus+0x3e>
    {
        *payloadLength = SUBGRF_ReadRegister( REG_LR_PAYLOADLENGTH );
 8007724:	f240 7002 	movw	r0, #1794	; 0x702
 8007728:	f000 f878 	bl	800781c <SUBGRF_ReadRegister>
 800772c:	4603      	mov	r3, r0
 800772e:	461a      	mov	r2, r3
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	701a      	strb	r2, [r3, #0]
 8007734:	e002      	b.n	800773c <SUBGRF_GetRxBufferStatus+0x44>
    }
    else
    {
        *payloadLength = status[0];
 8007736:	7b3a      	ldrb	r2, [r7, #12]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	701a      	strb	r2, [r3, #0]
    }
    *rxStartBufferPointer = status[1];
 800773c:	7b7a      	ldrb	r2, [r7, #13]
 800773e:	683b      	ldr	r3, [r7, #0]
 8007740:	701a      	strb	r2, [r3, #0]
}
 8007742:	bf00      	nop
 8007744:	3710      	adds	r7, #16
 8007746:	46bd      	mov	sp, r7
 8007748:	bd80      	pop	{r7, pc}
 800774a:	bf00      	nop
 800774c:	20000afe 	.word	0x20000afe

08007750 <SUBGRF_GetPacketStatus>:

void SUBGRF_GetPacketStatus( PacketStatus_t *pktStatus )
{
 8007750:	b580      	push	{r7, lr}
 8007752:	b084      	sub	sp, #16
 8007754:	af00      	add	r7, sp, #0
 8007756:	6078      	str	r0, [r7, #4]
    uint8_t status[3];

    SUBGRF_ReadCommand( RADIO_GET_PACKETSTATUS, status, 3 );
 8007758:	f107 030c 	add.w	r3, r7, #12
 800775c:	2203      	movs	r2, #3
 800775e:	4619      	mov	r1, r3
 8007760:	2014      	movs	r0, #20
 8007762:	f000 f8d7 	bl	8007914 <SUBGRF_ReadCommand>

    pktStatus->packetType = SUBGRF_GetPacketType( );
 8007766:	f7ff fdc7 	bl	80072f8 <SUBGRF_GetPacketType>
 800776a:	4603      	mov	r3, r0
 800776c:	461a      	mov	r2, r3
 800776e:	687b      	ldr	r3, [r7, #4]
 8007770:	701a      	strb	r2, [r3, #0]
    switch( pktStatus->packetType )
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	781b      	ldrb	r3, [r3, #0]
 8007776:	2b00      	cmp	r3, #0
 8007778:	d002      	beq.n	8007780 <SUBGRF_GetPacketStatus+0x30>
 800777a:	2b01      	cmp	r3, #1
 800777c:	d013      	beq.n	80077a6 <SUBGRF_GetPacketStatus+0x56>
 800777e:	e02a      	b.n	80077d6 <SUBGRF_GetPacketStatus+0x86>
    {
        case PACKET_TYPE_GFSK:
            pktStatus->Params.Gfsk.RxStatus = status[0];
 8007780:	7b3a      	ldrb	r2, [r7, #12]
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	711a      	strb	r2, [r3, #4]
            pktStatus->Params.Gfsk.RssiSync = -status[1] >> 1;
 8007786:	7b7b      	ldrb	r3, [r7, #13]
 8007788:	425b      	negs	r3, r3
 800778a:	105b      	asrs	r3, r3, #1
 800778c:	b25a      	sxtb	r2, r3
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	719a      	strb	r2, [r3, #6]
            pktStatus->Params.Gfsk.RssiAvg = -status[2] >> 1;
 8007792:	7bbb      	ldrb	r3, [r7, #14]
 8007794:	425b      	negs	r3, r3
 8007796:	105b      	asrs	r3, r3, #1
 8007798:	b25a      	sxtb	r2, r3
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	715a      	strb	r2, [r3, #5]
            pktStatus->Params.Gfsk.FreqError = 0;
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	2200      	movs	r2, #0
 80077a2:	609a      	str	r2, [r3, #8]
            break;
 80077a4:	e020      	b.n	80077e8 <SUBGRF_GetPacketStatus+0x98>

        case PACKET_TYPE_LORA:
            pktStatus->Params.LoRa.RssiPkt = -status[0] >> 1;
 80077a6:	7b3b      	ldrb	r3, [r7, #12]
 80077a8:	425b      	negs	r3, r3
 80077aa:	105b      	asrs	r3, r3, #1
 80077ac:	b25a      	sxtb	r2, r3
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	731a      	strb	r2, [r3, #12]
            // Returns SNR value [dB] rounded to the nearest integer value
            pktStatus->Params.LoRa.SnrPkt = ( ( ( int8_t )status[1] ) + 2 ) >> 2;
 80077b2:	7b7b      	ldrb	r3, [r7, #13]
 80077b4:	b25b      	sxtb	r3, r3
 80077b6:	3302      	adds	r3, #2
 80077b8:	109b      	asrs	r3, r3, #2
 80077ba:	b25a      	sxtb	r2, r3
 80077bc:	687b      	ldr	r3, [r7, #4]
 80077be:	735a      	strb	r2, [r3, #13]
            pktStatus->Params.LoRa.SignalRssiPkt = -status[2] >> 1;
 80077c0:	7bbb      	ldrb	r3, [r7, #14]
 80077c2:	425b      	negs	r3, r3
 80077c4:	105b      	asrs	r3, r3, #1
 80077c6:	b25a      	sxtb	r2, r3
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	739a      	strb	r2, [r3, #14]
            pktStatus->Params.LoRa.FreqError = FrequencyError;
 80077cc:	4b08      	ldr	r3, [pc, #32]	; (80077f0 <SUBGRF_GetPacketStatus+0xa0>)
 80077ce:	681a      	ldr	r2, [r3, #0]
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	611a      	str	r2, [r3, #16]
            break;
 80077d4:	e008      	b.n	80077e8 <SUBGRF_GetPacketStatus+0x98>

        default:
        case PACKET_TYPE_NONE:
            // In that specific case, we set everything in the pktStatus to zeros
            // and reset the packet type accordingly
            RADIO_MEMSET8( pktStatus, 0, sizeof( PacketStatus_t ) );
 80077d6:	2214      	movs	r2, #20
 80077d8:	2100      	movs	r1, #0
 80077da:	6878      	ldr	r0, [r7, #4]
 80077dc:	f023 fc8c 	bl	802b0f8 <memset>
            pktStatus->packetType = PACKET_TYPE_NONE;
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	220f      	movs	r2, #15
 80077e4:	701a      	strb	r2, [r3, #0]
            break;
 80077e6:	bf00      	nop
    }
}
 80077e8:	bf00      	nop
 80077ea:	3710      	adds	r7, #16
 80077ec:	46bd      	mov	sp, r7
 80077ee:	bd80      	pop	{r7, pc}
 80077f0:	20000b00 	.word	0x20000b00

080077f4 <SUBGRF_WriteRegister>:
    buf[1] = ( uint8_t )( ( uint16_t )irq & 0x00FF );
    SUBGRF_WriteCommand( RADIO_CLR_IRQSTATUS, buf, 2 );
}

void SUBGRF_WriteRegister( uint16_t addr, uint8_t data )
{
 80077f4:	b580      	push	{r7, lr}
 80077f6:	b082      	sub	sp, #8
 80077f8:	af00      	add	r7, sp, #0
 80077fa:	4603      	mov	r3, r0
 80077fc:	460a      	mov	r2, r1
 80077fe:	80fb      	strh	r3, [r7, #6]
 8007800:	4613      	mov	r3, r2
 8007802:	717b      	strb	r3, [r7, #5]
    HAL_SUBGHZ_WriteRegisters( &hsubghz, addr, (uint8_t*)&data, 1 );
 8007804:	1d7a      	adds	r2, r7, #5
 8007806:	88f9      	ldrh	r1, [r7, #6]
 8007808:	2301      	movs	r3, #1
 800780a:	4803      	ldr	r0, [pc, #12]	; (8007818 <SUBGRF_WriteRegister+0x24>)
 800780c:	f7fc fb4b 	bl	8003ea6 <HAL_SUBGHZ_WriteRegisters>
}
 8007810:	bf00      	nop
 8007812:	3708      	adds	r7, #8
 8007814:	46bd      	mov	sp, r7
 8007816:	bd80      	pop	{r7, pc}
 8007818:	20000ac4 	.word	0x20000ac4

0800781c <SUBGRF_ReadRegister>:

uint8_t SUBGRF_ReadRegister( uint16_t addr )
{
 800781c:	b580      	push	{r7, lr}
 800781e:	b084      	sub	sp, #16
 8007820:	af00      	add	r7, sp, #0
 8007822:	4603      	mov	r3, r0
 8007824:	80fb      	strh	r3, [r7, #6]
    uint8_t data;
    HAL_SUBGHZ_ReadRegisters( &hsubghz, addr, &data, 1 );
 8007826:	f107 020f 	add.w	r2, r7, #15
 800782a:	88f9      	ldrh	r1, [r7, #6]
 800782c:	2301      	movs	r3, #1
 800782e:	4804      	ldr	r0, [pc, #16]	; (8007840 <SUBGRF_ReadRegister+0x24>)
 8007830:	f7fc fb98 	bl	8003f64 <HAL_SUBGHZ_ReadRegisters>
    return data;
 8007834:	7bfb      	ldrb	r3, [r7, #15]
}
 8007836:	4618      	mov	r0, r3
 8007838:	3710      	adds	r7, #16
 800783a:	46bd      	mov	sp, r7
 800783c:	bd80      	pop	{r7, pc}
 800783e:	bf00      	nop
 8007840:	20000ac4 	.word	0x20000ac4

08007844 <SUBGRF_WriteRegisters>:

void SUBGRF_WriteRegisters( uint16_t address, uint8_t *buffer, uint16_t size )
{
 8007844:	b580      	push	{r7, lr}
 8007846:	b082      	sub	sp, #8
 8007848:	af00      	add	r7, sp, #0
 800784a:	4603      	mov	r3, r0
 800784c:	6039      	str	r1, [r7, #0]
 800784e:	80fb      	strh	r3, [r7, #6]
 8007850:	4613      	mov	r3, r2
 8007852:	80bb      	strh	r3, [r7, #4]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_WriteRegisters( &hsubghz, address, buffer, size );
 8007854:	88bb      	ldrh	r3, [r7, #4]
 8007856:	88f9      	ldrh	r1, [r7, #6]
 8007858:	683a      	ldr	r2, [r7, #0]
 800785a:	4803      	ldr	r0, [pc, #12]	; (8007868 <SUBGRF_WriteRegisters+0x24>)
 800785c:	f7fc fb23 	bl	8003ea6 <HAL_SUBGHZ_WriteRegisters>
    CRITICAL_SECTION_END();
}
 8007860:	bf00      	nop
 8007862:	3708      	adds	r7, #8
 8007864:	46bd      	mov	sp, r7
 8007866:	bd80      	pop	{r7, pc}
 8007868:	20000ac4 	.word	0x20000ac4

0800786c <SUBGRF_ReadRegisters>:

void SUBGRF_ReadRegisters( uint16_t address, uint8_t *buffer, uint16_t size )
{
 800786c:	b580      	push	{r7, lr}
 800786e:	b082      	sub	sp, #8
 8007870:	af00      	add	r7, sp, #0
 8007872:	4603      	mov	r3, r0
 8007874:	6039      	str	r1, [r7, #0]
 8007876:	80fb      	strh	r3, [r7, #6]
 8007878:	4613      	mov	r3, r2
 800787a:	80bb      	strh	r3, [r7, #4]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_ReadRegisters( &hsubghz, address, buffer, size );
 800787c:	88bb      	ldrh	r3, [r7, #4]
 800787e:	88f9      	ldrh	r1, [r7, #6]
 8007880:	683a      	ldr	r2, [r7, #0]
 8007882:	4803      	ldr	r0, [pc, #12]	; (8007890 <SUBGRF_ReadRegisters+0x24>)
 8007884:	f7fc fb6e 	bl	8003f64 <HAL_SUBGHZ_ReadRegisters>
    CRITICAL_SECTION_END();
}
 8007888:	bf00      	nop
 800788a:	3708      	adds	r7, #8
 800788c:	46bd      	mov	sp, r7
 800788e:	bd80      	pop	{r7, pc}
 8007890:	20000ac4 	.word	0x20000ac4

08007894 <SUBGRF_WriteBuffer>:

void SUBGRF_WriteBuffer( uint8_t offset, uint8_t *buffer, uint8_t size )
{
 8007894:	b580      	push	{r7, lr}
 8007896:	b082      	sub	sp, #8
 8007898:	af00      	add	r7, sp, #0
 800789a:	4603      	mov	r3, r0
 800789c:	6039      	str	r1, [r7, #0]
 800789e:	71fb      	strb	r3, [r7, #7]
 80078a0:	4613      	mov	r3, r2
 80078a2:	71bb      	strb	r3, [r7, #6]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_WriteBuffer( &hsubghz, offset, buffer, size );
 80078a4:	79bb      	ldrb	r3, [r7, #6]
 80078a6:	b29b      	uxth	r3, r3
 80078a8:	79f9      	ldrb	r1, [r7, #7]
 80078aa:	683a      	ldr	r2, [r7, #0]
 80078ac:	4803      	ldr	r0, [pc, #12]	; (80078bc <SUBGRF_WriteBuffer+0x28>)
 80078ae:	f7fc fc6d 	bl	800418c <HAL_SUBGHZ_WriteBuffer>
    CRITICAL_SECTION_END();
}
 80078b2:	bf00      	nop
 80078b4:	3708      	adds	r7, #8
 80078b6:	46bd      	mov	sp, r7
 80078b8:	bd80      	pop	{r7, pc}
 80078ba:	bf00      	nop
 80078bc:	20000ac4 	.word	0x20000ac4

080078c0 <SUBGRF_ReadBuffer>:

void SUBGRF_ReadBuffer( uint8_t offset, uint8_t *buffer, uint8_t size )
{
 80078c0:	b580      	push	{r7, lr}
 80078c2:	b082      	sub	sp, #8
 80078c4:	af00      	add	r7, sp, #0
 80078c6:	4603      	mov	r3, r0
 80078c8:	6039      	str	r1, [r7, #0]
 80078ca:	71fb      	strb	r3, [r7, #7]
 80078cc:	4613      	mov	r3, r2
 80078ce:	71bb      	strb	r3, [r7, #6]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_ReadBuffer( &hsubghz, offset, buffer, size );
 80078d0:	79bb      	ldrb	r3, [r7, #6]
 80078d2:	b29b      	uxth	r3, r3
 80078d4:	79f9      	ldrb	r1, [r7, #7]
 80078d6:	683a      	ldr	r2, [r7, #0]
 80078d8:	4803      	ldr	r0, [pc, #12]	; (80078e8 <SUBGRF_ReadBuffer+0x28>)
 80078da:	f7fc fcaa 	bl	8004232 <HAL_SUBGHZ_ReadBuffer>
    CRITICAL_SECTION_END();
}
 80078de:	bf00      	nop
 80078e0:	3708      	adds	r7, #8
 80078e2:	46bd      	mov	sp, r7
 80078e4:	bd80      	pop	{r7, pc}
 80078e6:	bf00      	nop
 80078e8:	20000ac4 	.word	0x20000ac4

080078ec <SUBGRF_WriteCommand>:

void SUBGRF_WriteCommand( SUBGHZ_RadioSetCmd_t Command, uint8_t *pBuffer,
                                        uint16_t Size )
{
 80078ec:	b580      	push	{r7, lr}
 80078ee:	b082      	sub	sp, #8
 80078f0:	af00      	add	r7, sp, #0
 80078f2:	4603      	mov	r3, r0
 80078f4:	6039      	str	r1, [r7, #0]
 80078f6:	71fb      	strb	r3, [r7, #7]
 80078f8:	4613      	mov	r3, r2
 80078fa:	80bb      	strh	r3, [r7, #4]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_ExecSetCmd( &hsubghz, Command, pBuffer, Size );
 80078fc:	88bb      	ldrh	r3, [r7, #4]
 80078fe:	79f9      	ldrb	r1, [r7, #7]
 8007900:	683a      	ldr	r2, [r7, #0]
 8007902:	4803      	ldr	r0, [pc, #12]	; (8007910 <SUBGRF_WriteCommand+0x24>)
 8007904:	f7fc fb8f 	bl	8004026 <HAL_SUBGHZ_ExecSetCmd>
    CRITICAL_SECTION_END();
}
 8007908:	bf00      	nop
 800790a:	3708      	adds	r7, #8
 800790c:	46bd      	mov	sp, r7
 800790e:	bd80      	pop	{r7, pc}
 8007910:	20000ac4 	.word	0x20000ac4

08007914 <SUBGRF_ReadCommand>:

void SUBGRF_ReadCommand( SUBGHZ_RadioGetCmd_t Command, uint8_t *pBuffer,
                                        uint16_t Size )
{
 8007914:	b580      	push	{r7, lr}
 8007916:	b082      	sub	sp, #8
 8007918:	af00      	add	r7, sp, #0
 800791a:	4603      	mov	r3, r0
 800791c:	6039      	str	r1, [r7, #0]
 800791e:	71fb      	strb	r3, [r7, #7]
 8007920:	4613      	mov	r3, r2
 8007922:	80bb      	strh	r3, [r7, #4]
    CRITICAL_SECTION_BEGIN();
    HAL_SUBGHZ_ExecGetCmd( &hsubghz, Command, pBuffer, Size );
 8007924:	88bb      	ldrh	r3, [r7, #4]
 8007926:	79f9      	ldrb	r1, [r7, #7]
 8007928:	683a      	ldr	r2, [r7, #0]
 800792a:	4803      	ldr	r0, [pc, #12]	; (8007938 <SUBGRF_ReadCommand+0x24>)
 800792c:	f7fc fbda 	bl	80040e4 <HAL_SUBGHZ_ExecGetCmd>
    CRITICAL_SECTION_END();
}
 8007930:	bf00      	nop
 8007932:	3708      	adds	r7, #8
 8007934:	46bd      	mov	sp, r7
 8007936:	bd80      	pop	{r7, pc}
 8007938:	20000ac4 	.word	0x20000ac4

0800793c <SUBGRF_SetSwitch>:

void SUBGRF_SetSwitch( uint8_t paSelect, RFState_t rxtx )
{
 800793c:	b580      	push	{r7, lr}
 800793e:	b084      	sub	sp, #16
 8007940:	af00      	add	r7, sp, #0
 8007942:	4603      	mov	r3, r0
 8007944:	460a      	mov	r2, r1
 8007946:	71fb      	strb	r3, [r7, #7]
 8007948:	4613      	mov	r3, r2
 800794a:	71bb      	strb	r3, [r7, #6]
    RBI_Switch_TypeDef state = RBI_SWITCH_RX;
 800794c:	2301      	movs	r3, #1
 800794e:	73fb      	strb	r3, [r7, #15]

    if (rxtx == RFSWITCH_TX)
 8007950:	79bb      	ldrb	r3, [r7, #6]
 8007952:	2b01      	cmp	r3, #1
 8007954:	d10d      	bne.n	8007972 <SUBGRF_SetSwitch+0x36>
    {
        if (paSelect == RFO_LP)
 8007956:	79fb      	ldrb	r3, [r7, #7]
 8007958:	2b01      	cmp	r3, #1
 800795a:	d104      	bne.n	8007966 <SUBGRF_SetSwitch+0x2a>
        {
            state = RBI_SWITCH_RFO_LP;
 800795c:	2302      	movs	r3, #2
 800795e:	73fb      	strb	r3, [r7, #15]
            Radio_SMPS_Set(SMPS_DRIVE_SETTING_MAX);
 8007960:	2004      	movs	r0, #4
 8007962:	f000 f849 	bl	80079f8 <Radio_SMPS_Set>
        }
        if (paSelect == RFO_HP)
 8007966:	79fb      	ldrb	r3, [r7, #7]
 8007968:	2b02      	cmp	r3, #2
 800796a:	d107      	bne.n	800797c <SUBGRF_SetSwitch+0x40>
        {
            state = RBI_SWITCH_RFO_HP;
 800796c:	2303      	movs	r3, #3
 800796e:	73fb      	strb	r3, [r7, #15]
 8007970:	e004      	b.n	800797c <SUBGRF_SetSwitch+0x40>
        }
    }
    else
    {
        if (rxtx == RFSWITCH_RX)
 8007972:	79bb      	ldrb	r3, [r7, #6]
 8007974:	2b00      	cmp	r3, #0
 8007976:	d101      	bne.n	800797c <SUBGRF_SetSwitch+0x40>
        {
            state = RBI_SWITCH_RX;
 8007978:	2301      	movs	r3, #1
 800797a:	73fb      	strb	r3, [r7, #15]
        }
    }
    RBI_ConfigRFSwitch(state);
 800797c:	7bfb      	ldrb	r3, [r7, #15]
 800797e:	4618      	mov	r0, r3
 8007980:	f7fe f81c 	bl	80059bc <EMBENET_NODE_BSP_ConfigRFSwitch>
}
 8007984:	bf00      	nop
 8007986:	3710      	adds	r7, #16
 8007988:	46bd      	mov	sp, r7
 800798a:	bd80      	pop	{r7, pc}

0800798c <SUBGRF_SetRfTxPower>:

uint8_t SUBGRF_SetRfTxPower( int8_t power ) 
{
 800798c:	b580      	push	{r7, lr}
 800798e:	b084      	sub	sp, #16
 8007990:	af00      	add	r7, sp, #0
 8007992:	4603      	mov	r3, r0
 8007994:	71fb      	strb	r3, [r7, #7]
    uint8_t paSelect= RFO_LP;
 8007996:	2301      	movs	r3, #1
 8007998:	73fb      	strb	r3, [r7, #15]

    int32_t TxConfig = RBI_GetTxConfig();
 800799a:	f7fe f869 	bl	8005a70 <EMBENET_NODE_BSP_GetTxConfig>
 800799e:	4603      	mov	r3, r0
 80079a0:	60bb      	str	r3, [r7, #8]

    switch (TxConfig)
 80079a2:	68bb      	ldr	r3, [r7, #8]
 80079a4:	2b02      	cmp	r3, #2
 80079a6:	d009      	beq.n	80079bc <SUBGRF_SetRfTxPower+0x30>
 80079a8:	68bb      	ldr	r3, [r7, #8]
 80079aa:	2b02      	cmp	r3, #2
 80079ac:	dc16      	bgt.n	80079dc <SUBGRF_SetRfTxPower+0x50>
 80079ae:	68bb      	ldr	r3, [r7, #8]
 80079b0:	2b00      	cmp	r3, #0
 80079b2:	d00d      	beq.n	80079d0 <SUBGRF_SetRfTxPower+0x44>
 80079b4:	68bb      	ldr	r3, [r7, #8]
 80079b6:	2b01      	cmp	r3, #1
 80079b8:	d00d      	beq.n	80079d6 <SUBGRF_SetRfTxPower+0x4a>
        {
            paSelect = RFO_HP;
            break;
        }
        default:
            break;
 80079ba:	e00f      	b.n	80079dc <SUBGRF_SetRfTxPower+0x50>
            if (power > 15)
 80079bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80079c0:	2b0f      	cmp	r3, #15
 80079c2:	dd02      	ble.n	80079ca <SUBGRF_SetRfTxPower+0x3e>
                paSelect = RFO_HP;
 80079c4:	2302      	movs	r3, #2
 80079c6:	73fb      	strb	r3, [r7, #15]
            break;
 80079c8:	e009      	b.n	80079de <SUBGRF_SetRfTxPower+0x52>
                paSelect = RFO_LP;
 80079ca:	2301      	movs	r3, #1
 80079cc:	73fb      	strb	r3, [r7, #15]
            break;
 80079ce:	e006      	b.n	80079de <SUBGRF_SetRfTxPower+0x52>
            paSelect = RFO_LP;
 80079d0:	2301      	movs	r3, #1
 80079d2:	73fb      	strb	r3, [r7, #15]
            break;
 80079d4:	e003      	b.n	80079de <SUBGRF_SetRfTxPower+0x52>
            paSelect = RFO_HP;
 80079d6:	2302      	movs	r3, #2
 80079d8:	73fb      	strb	r3, [r7, #15]
            break;
 80079da:	e000      	b.n	80079de <SUBGRF_SetRfTxPower+0x52>
            break;
 80079dc:	bf00      	nop
    }

    SUBGRF_SetTxParams( paSelect, power, RADIO_RAMP_40_US );
 80079de:	f997 1007 	ldrsb.w	r1, [r7, #7]
 80079e2:	7bfb      	ldrb	r3, [r7, #15]
 80079e4:	2202      	movs	r2, #2
 80079e6:	4618      	mov	r0, r3
 80079e8:	f7ff fc90 	bl	800730c <SUBGRF_SetTxParams>

    return paSelect;
 80079ec:	7bfb      	ldrb	r3, [r7, #15]
}
 80079ee:	4618      	mov	r0, r3
 80079f0:	3710      	adds	r7, #16
 80079f2:	46bd      	mov	sp, r7
 80079f4:	bd80      	pop	{r7, pc}
	...

080079f8 <Radio_SMPS_Set>:
{
    RadioOnDioIrqCb( IRQ_HEADER_VALID );
}

static void Radio_SMPS_Set(uint8_t level)
{
 80079f8:	b580      	push	{r7, lr}
 80079fa:	b084      	sub	sp, #16
 80079fc:	af00      	add	r7, sp, #0
 80079fe:	4603      	mov	r3, r0
 8007a00:	71fb      	strb	r3, [r7, #7]
  if ( 1U == RBI_IsDCDC() )
 8007a02:	4b0d      	ldr	r3, [pc, #52]	; (8007a38 <Radio_SMPS_Set+0x40>)
 8007a04:	781b      	ldrb	r3, [r3, #0]
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d012      	beq.n	8007a30 <Radio_SMPS_Set+0x38>
  {
    uint8_t modReg;
    modReg= SUBGRF_ReadRegister(SUBGHZ_SMPSC2R);
 8007a0a:	f640 1023 	movw	r0, #2339	; 0x923
 8007a0e:	f7ff ff05 	bl	800781c <SUBGRF_ReadRegister>
 8007a12:	4603      	mov	r3, r0
 8007a14:	73fb      	strb	r3, [r7, #15]
    modReg&= (~SMPS_DRV_MASK);
 8007a16:	7bfb      	ldrb	r3, [r7, #15]
 8007a18:	f023 0306 	bic.w	r3, r3, #6
 8007a1c:	73fb      	strb	r3, [r7, #15]
    SUBGRF_WriteRegister(SUBGHZ_SMPSC2R, modReg | level);
 8007a1e:	7bfa      	ldrb	r2, [r7, #15]
 8007a20:	79fb      	ldrb	r3, [r7, #7]
 8007a22:	4313      	orrs	r3, r2
 8007a24:	b2db      	uxtb	r3, r3
 8007a26:	4619      	mov	r1, r3
 8007a28:	f640 1023 	movw	r0, #2339	; 0x923
 8007a2c:	f7ff fee2 	bl	80077f4 <SUBGRF_WriteRegister>
  }
}
 8007a30:	bf00      	nop
 8007a32:	3710      	adds	r7, #16
 8007a34:	46bd      	mov	sp, r7
 8007a36:	bd80      	pop	{r7, pc}
 8007a38:	080316aa 	.word	0x080316aa

08007a3c <CoAP_AllocNewInteraction>:
#include "liblobaro_coap.h"
#include "coap_mem.h"

CoAP_Result_t CoAP_HandleObservationInReq(CoAP_Interaction_t* pIA);

static CoAP_Interaction_t* _rom CoAP_AllocNewInteraction() {
 8007a3c:	b580      	push	{r7, lr}
 8007a3e:	b082      	sub	sp, #8
 8007a40:	af00      	add	r7, sp, #0
	CoAP_Interaction_t* newInteraction = (CoAP_Interaction_t*) (CoAP_malloc0(sizeof(CoAP_Interaction_t)));
 8007a42:	2064      	movs	r0, #100	; 0x64
 8007a44:	f001 fce8 	bl	8009418 <CoAP_malloc0>
 8007a48:	6078      	str	r0, [r7, #4]
	if (newInteraction == NULL) {
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	2b00      	cmp	r3, #0
 8007a4e:	d109      	bne.n	8007a64 <CoAP_AllocNewInteraction+0x28>
		// coap_mem_stats();
		INFO("- (!!!) CoAP_AllocNewInteraction() Out of Memory (Needed %zu bytes) !!!\r\n", sizeof(CoAP_Interaction_t));
 8007a50:	2264      	movs	r2, #100	; 0x64
 8007a52:	4910      	ldr	r1, [pc, #64]	; (8007a94 <CoAP_AllocNewInteraction+0x58>)
 8007a54:	4810      	ldr	r0, [pc, #64]	; (8007a98 <CoAP_AllocNewInteraction+0x5c>)
 8007a56:	f023 fa2d 	bl	802aeb4 <siprintf>
 8007a5a:	480f      	ldr	r0, [pc, #60]	; (8007a98 <CoAP_AllocNewInteraction+0x5c>)
 8007a5c:	f000 fbcc 	bl	80081f8 <hal_debug_puts>
		return NULL;
 8007a60:	2300      	movs	r3, #0
 8007a62:	e012      	b.n	8007a8a <CoAP_AllocNewInteraction+0x4e>
	}

	memset(newInteraction, 0, sizeof(CoAP_Interaction_t));
 8007a64:	2264      	movs	r2, #100	; 0x64
 8007a66:	2100      	movs	r1, #0
 8007a68:	6878      	ldr	r0, [r7, #4]
 8007a6a:	f023 fb45 	bl	802b0f8 <memset>
	assert_coap(newInteraction->pObserver == NULL);
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	68db      	ldr	r3, [r3, #12]
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	d008      	beq.n	8007a88 <CoAP_AllocNewInteraction+0x4c>
 8007a76:	4b09      	ldr	r3, [pc, #36]	; (8007a9c <CoAP_AllocNewInteraction+0x60>)
 8007a78:	2226      	movs	r2, #38	; 0x26
 8007a7a:	4909      	ldr	r1, [pc, #36]	; (8007aa0 <CoAP_AllocNewInteraction+0x64>)
 8007a7c:	4806      	ldr	r0, [pc, #24]	; (8007a98 <CoAP_AllocNewInteraction+0x5c>)
 8007a7e:	f023 fa19 	bl	802aeb4 <siprintf>
 8007a82:	4805      	ldr	r0, [pc, #20]	; (8007a98 <CoAP_AllocNewInteraction+0x5c>)
 8007a84:	f000 fbb8 	bl	80081f8 <hal_debug_puts>
	return newInteraction;
 8007a88:	687b      	ldr	r3, [r7, #4]
}
 8007a8a:	4618      	mov	r0, r3
 8007a8c:	3708      	adds	r7, #8
 8007a8e:	46bd      	mov	sp, r7
 8007a90:	bd80      	pop	{r7, pc}
 8007a92:	bf00      	nop
 8007a94:	0802c494 	.word	0x0802c494
 8007a98:	20000b54 	.word	0x20000b54
 8007a9c:	0802c4e0 	.word	0x0802c4e0
 8007aa0:	0802c528 	.word	0x0802c528

08007aa4 <CoAP_FreeInteraction>:

CoAP_Result_t _rom CoAP_FreeInteraction(CoAP_Interaction_t** pInteraction) {
 8007aa4:	b580      	push	{r7, lr}
 8007aa6:	b082      	sub	sp, #8
 8007aa8:	af00      	add	r7, sp, #0
 8007aaa:	6078      	str	r0, [r7, #4]
	DEBUG_COAP("Releasing Interaction...\r\n");
	// coap_mem_stats();
	CoAP_free_Message(&(*pInteraction)->pReqMsg);
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	3338      	adds	r3, #56	; 0x38
 8007ab2:	4618      	mov	r0, r3
 8007ab4:	f001 fd5e 	bl	8009574 <CoAP_free_Message>
	CoAP_free_Message(&(*pInteraction)->pRespMsg);
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	681b      	ldr	r3, [r3, #0]
 8007abc:	334c      	adds	r3, #76	; 0x4c
 8007abe:	4618      	mov	r0, r3
 8007ac0:	f001 fd58 	bl	8009574 <CoAP_free_Message>
	CoAP_free((void*) (*pInteraction));
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	681b      	ldr	r3, [r3, #0]
 8007ac8:	4618      	mov	r0, r3
 8007aca:	f001 fc87 	bl	80093dc <CoAP_free>
	// coap_mem_stats();
	*pInteraction = NULL;
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	2200      	movs	r2, #0
 8007ad2:	601a      	str	r2, [r3, #0]
	return COAP_OK;
 8007ad4:	2300      	movs	r3, #0
}
 8007ad6:	4618      	mov	r0, r3
 8007ad8:	3708      	adds	r7, #8
 8007ada:	46bd      	mov	sp, r7
 8007adc:	bd80      	pop	{r7, pc}

08007ade <CoAP_UnlinkInteractionFromList>:

static CoAP_Result_t _rom CoAP_UnlinkInteractionFromList(CoAP_Interaction_t** pListStart, CoAP_Interaction_t* pInteractionToRemove, bool FreeUnlinked) {
 8007ade:	b580      	push	{r7, lr}
 8007ae0:	b086      	sub	sp, #24
 8007ae2:	af00      	add	r7, sp, #0
 8007ae4:	60f8      	str	r0, [r7, #12]
 8007ae6:	60b9      	str	r1, [r7, #8]
 8007ae8:	4613      	mov	r3, r2
 8007aea:	71fb      	strb	r3, [r7, #7]
	CoAP_Interaction_t* currP;
	CoAP_Interaction_t* prevP;

	// For 1st node, indicate there is no previous.
	prevP = NULL;
 8007aec:	2300      	movs	r3, #0
 8007aee:	617b      	str	r3, [r7, #20]

	//Visit each node, maintaining a pointer to
	//the previous node we just visited.
	for (currP = *pListStart; currP != NULL;
 8007af0:	68fb      	ldr	r3, [r7, #12]
 8007af2:	681b      	ldr	r3, [r3, #0]
 8007af4:	613b      	str	r3, [r7, #16]
 8007af6:	e01e      	b.n	8007b36 <CoAP_UnlinkInteractionFromList+0x58>
			prevP = currP, currP = currP->next) {

		if (currP == pInteractionToRemove) {  // Found it.
 8007af8:	693b      	ldr	r3, [r7, #16]
 8007afa:	68ba      	ldr	r2, [r7, #8]
 8007afc:	429a      	cmp	r2, r3
 8007afe:	d115      	bne.n	8007b2c <CoAP_UnlinkInteractionFromList+0x4e>
			if (prevP == NULL) {
 8007b00:	697b      	ldr	r3, [r7, #20]
 8007b02:	2b00      	cmp	r3, #0
 8007b04:	d104      	bne.n	8007b10 <CoAP_UnlinkInteractionFromList+0x32>
				//Fix beginning pointer.
				*pListStart = currP->next;
 8007b06:	693b      	ldr	r3, [r7, #16]
 8007b08:	681a      	ldr	r2, [r3, #0]
 8007b0a:	68fb      	ldr	r3, [r7, #12]
 8007b0c:	601a      	str	r2, [r3, #0]
 8007b0e:	e003      	b.n	8007b18 <CoAP_UnlinkInteractionFromList+0x3a>
			} else {
				//Fix previous node's next to
				//skip over the removed node.
				prevP->next = currP->next;
 8007b10:	693b      	ldr	r3, [r7, #16]
 8007b12:	681a      	ldr	r2, [r3, #0]
 8007b14:	697b      	ldr	r3, [r7, #20]
 8007b16:	601a      	str	r2, [r3, #0]
			}

			// Deallocate the node.
			if (FreeUnlinked) {
 8007b18:	79fb      	ldrb	r3, [r7, #7]
 8007b1a:	2b00      	cmp	r3, #0
 8007b1c:	d004      	beq.n	8007b28 <CoAP_UnlinkInteractionFromList+0x4a>
				CoAP_FreeInteraction(&currP);
 8007b1e:	f107 0310 	add.w	r3, r7, #16
 8007b22:	4618      	mov	r0, r3
 8007b24:	f7ff ffbe 	bl	8007aa4 <CoAP_FreeInteraction>
			}
			//Done searching.
			return COAP_OK;
 8007b28:	2300      	movs	r3, #0
 8007b2a:	e008      	b.n	8007b3e <CoAP_UnlinkInteractionFromList+0x60>
			prevP = currP, currP = currP->next) {
 8007b2c:	693b      	ldr	r3, [r7, #16]
 8007b2e:	617b      	str	r3, [r7, #20]
 8007b30:	693b      	ldr	r3, [r7, #16]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	613b      	str	r3, [r7, #16]
	for (currP = *pListStart; currP != NULL;
 8007b36:	693b      	ldr	r3, [r7, #16]
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	d1dd      	bne.n	8007af8 <CoAP_UnlinkInteractionFromList+0x1a>
		}
	}
	return COAP_OK;
 8007b3c:	2300      	movs	r3, #0
}
 8007b3e:	4618      	mov	r0, r3
 8007b40:	3718      	adds	r7, #24
 8007b42:	46bd      	mov	sp, r7
 8007b44:	bd80      	pop	{r7, pc}

08007b46 <CoAP_AppendInteractionToList>:
		}
	}
	return COAP_NOT_FOUND;
}

static CoAP_Result_t _rom CoAP_AppendInteractionToList(CoAP_Interaction_t** pListStart, CoAP_Interaction_t* pInteractionToAdd) {
 8007b46:	b480      	push	{r7}
 8007b48:	b085      	sub	sp, #20
 8007b4a:	af00      	add	r7, sp, #0
 8007b4c:	6078      	str	r0, [r7, #4]
 8007b4e:	6039      	str	r1, [r7, #0]
	if (pInteractionToAdd == NULL)
 8007b50:	683b      	ldr	r3, [r7, #0]
 8007b52:	2b00      	cmp	r3, #0
 8007b54:	d101      	bne.n	8007b5a <CoAP_AppendInteractionToList+0x14>
		return COAP_ERR_ARGUMENT;
 8007b56:	230a      	movs	r3, #10
 8007b58:	e020      	b.n	8007b9c <CoAP_AppendInteractionToList+0x56>

	if (*pListStart == NULL) //List empty? create new first element
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	2b00      	cmp	r3, #0
 8007b60:	d107      	bne.n	8007b72 <CoAP_AppendInteractionToList+0x2c>
	{
		*pListStart = pInteractionToAdd;
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	683a      	ldr	r2, [r7, #0]
 8007b66:	601a      	str	r2, [r3, #0]
		(*pListStart)->next = NULL;
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	2200      	movs	r2, #0
 8007b6e:	601a      	str	r2, [r3, #0]
 8007b70:	e013      	b.n	8007b9a <CoAP_AppendInteractionToList+0x54>
	} else //append new element at end
	{
		CoAP_Interaction_t* pTrans = *pListStart;
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	681b      	ldr	r3, [r3, #0]
 8007b76:	60fb      	str	r3, [r7, #12]
		while (pTrans->next != NULL)
 8007b78:	e002      	b.n	8007b80 <CoAP_AppendInteractionToList+0x3a>
			pTrans = pTrans->next;
 8007b7a:	68fb      	ldr	r3, [r7, #12]
 8007b7c:	681b      	ldr	r3, [r3, #0]
 8007b7e:	60fb      	str	r3, [r7, #12]
		while (pTrans->next != NULL)
 8007b80:	68fb      	ldr	r3, [r7, #12]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	2b00      	cmp	r3, #0
 8007b86:	d1f8      	bne.n	8007b7a <CoAP_AppendInteractionToList+0x34>

		pTrans->next = pInteractionToAdd;
 8007b88:	68fb      	ldr	r3, [r7, #12]
 8007b8a:	683a      	ldr	r2, [r7, #0]
 8007b8c:	601a      	str	r2, [r3, #0]
		pTrans = pTrans->next;
 8007b8e:	68fb      	ldr	r3, [r7, #12]
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	60fb      	str	r3, [r7, #12]
		pTrans->next = NULL;
 8007b94:	68fb      	ldr	r3, [r7, #12]
 8007b96:	2200      	movs	r2, #0
 8007b98:	601a      	str	r2, [r3, #0]
	}
	return COAP_OK;
 8007b9a:	2300      	movs	r3, #0
}
 8007b9c:	4618      	mov	r0, r3
 8007b9e:	3714      	adds	r7, #20
 8007ba0:	46bd      	mov	sp, r7
 8007ba2:	bc80      	pop	{r7}
 8007ba4:	4770      	bx	lr

08007ba6 <CoAP_MoveInteractionToListEnd>:

static CoAP_Result_t _rom CoAP_MoveInteractionToListEnd(CoAP_Interaction_t** pListStart, CoAP_Interaction_t* pInteractionToMove) {
 8007ba6:	b580      	push	{r7, lr}
 8007ba8:	b084      	sub	sp, #16
 8007baa:	af00      	add	r7, sp, #0
 8007bac:	6078      	str	r0, [r7, #4]
 8007bae:	6039      	str	r1, [r7, #0]
	CoAP_Interaction_t* currP;
	CoAP_Interaction_t* prevP;

	// For 1st node, indicate there is no previous.
	prevP = NULL;
 8007bb0:	2300      	movs	r3, #0
 8007bb2:	60bb      	str	r3, [r7, #8]

	//is interaction in List? if so delete it temporarily and add it to the back then

	//Visit each node, maintaining a pointer to
	//the previous node we just visited.
	for (currP = *pListStart;
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	681b      	ldr	r3, [r3, #0]
 8007bb8:	60fb      	str	r3, [r7, #12]
 8007bba:	e014      	b.n	8007be6 <CoAP_MoveInteractionToListEnd+0x40>
			currP != NULL;
			prevP = currP, currP = currP->next) {

		if (currP == pInteractionToMove) {  // Found it.
 8007bbc:	68fa      	ldr	r2, [r7, #12]
 8007bbe:	683b      	ldr	r3, [r7, #0]
 8007bc0:	429a      	cmp	r2, r3
 8007bc2:	d10b      	bne.n	8007bdc <CoAP_MoveInteractionToListEnd+0x36>
			if (prevP == NULL) {
 8007bc4:	68bb      	ldr	r3, [r7, #8]
 8007bc6:	2b00      	cmp	r3, #0
 8007bc8:	d104      	bne.n	8007bd4 <CoAP_MoveInteractionToListEnd+0x2e>
				//Fix beginning pointer.
				*pListStart = currP->next;
 8007bca:	68fb      	ldr	r3, [r7, #12]
 8007bcc:	681a      	ldr	r2, [r3, #0]
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	601a      	str	r2, [r3, #0]
 8007bd2:	e003      	b.n	8007bdc <CoAP_MoveInteractionToListEnd+0x36>
			} else {
				//Fix previous node's next to
				//skip over the removed node.
				prevP->next = currP->next;
 8007bd4:	68fb      	ldr	r3, [r7, #12]
 8007bd6:	681a      	ldr	r2, [r3, #0]
 8007bd8:	68bb      	ldr	r3, [r7, #8]
 8007bda:	601a      	str	r2, [r3, #0]
			prevP = currP, currP = currP->next) {
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	60bb      	str	r3, [r7, #8]
 8007be0:	68fb      	ldr	r3, [r7, #12]
 8007be2:	681b      	ldr	r3, [r3, #0]
 8007be4:	60fb      	str	r3, [r7, #12]
			currP != NULL;
 8007be6:	68fb      	ldr	r3, [r7, #12]
 8007be8:	2b00      	cmp	r3, #0
 8007bea:	d1e7      	bne.n	8007bbc <CoAP_MoveInteractionToListEnd+0x16>
			}
		}
	}
	//node removed now put it at end of list
	CoAP_AppendInteractionToList(pListStart, pInteractionToMove);
 8007bec:	6839      	ldr	r1, [r7, #0]
 8007bee:	6878      	ldr	r0, [r7, #4]
 8007bf0:	f7ff ffa9 	bl	8007b46 <CoAP_AppendInteractionToList>

	return COAP_OK;
 8007bf4:	2300      	movs	r3, #0
}
 8007bf6:	4618      	mov	r0, r3
 8007bf8:	3710      	adds	r7, #16
 8007bfa:	46bd      	mov	sp, r7
 8007bfc:	bd80      	pop	{r7, pc}
	...

08007c00 <CoAP_SetSleepInteraction>:

CoAP_Result_t _rom CoAP_SetSleepInteraction(CoAP_Interaction_t* pIA, uint32_t seconds) {
 8007c00:	b580      	push	{r7, lr}
 8007c02:	b082      	sub	sp, #8
 8007c04:	af00      	add	r7, sp, #0
 8007c06:	6078      	str	r0, [r7, #4]
 8007c08:	6039      	str	r1, [r7, #0]
	pIA->SleepUntil = CoAP.api.rtc1HzCnt() + seconds;
 8007c0a:	4b06      	ldr	r3, [pc, #24]	; (8007c24 <CoAP_SetSleepInteraction+0x24>)
 8007c0c:	685b      	ldr	r3, [r3, #4]
 8007c0e:	4798      	blx	r3
 8007c10:	4602      	mov	r2, r0
 8007c12:	683b      	ldr	r3, [r7, #0]
 8007c14:	441a      	add	r2, r3
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	635a      	str	r2, [r3, #52]	; 0x34
	return COAP_OK;
 8007c1a:	2300      	movs	r3, #0
}
 8007c1c:	4618      	mov	r0, r3
 8007c1e:	3708      	adds	r7, #8
 8007c20:	46bd      	mov	sp, r7
 8007c22:	bd80      	pop	{r7, pc}
 8007c24:	20000b0c 	.word	0x20000b0c

08007c28 <CoAP_EnableAckTimeout>:

#ifdef COAP_EXPLICIT_TIMEOUT0
const uint8_t TIMEOUTS[] = {COAP_EXPLICIT_TIMEOUT0,COAP_EXPLICIT_TIMEOUT1,COAP_EXPLICIT_TIMEOUT2};
#endif

CoAP_Result_t _rom CoAP_EnableAckTimeout(CoAP_Interaction_t* pIA, uint8_t retryNum) {
 8007c28:	b580      	push	{r7, lr}
 8007c2a:	b084      	sub	sp, #16
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	6078      	str	r0, [r7, #4]
 8007c30:	460b      	mov	r3, r1
 8007c32:	70fb      	strb	r3, [r7, #3]
    }
    INFO("CoAP timeout: %lus\n", waitTime);
    pIA->AckTimeout = CoAP.api.rtc1HzCnt() + waitTime;
    return COAP_OK;
#else
	uint32_t waitTime = ACK_TIMEOUT;
 8007c34:	2308      	movs	r3, #8
 8007c36:	60fb      	str	r3, [r7, #12]
	int i;
	for (i = 0; i < retryNum; i++) { //"exponential backoff"
 8007c38:	2300      	movs	r3, #0
 8007c3a:	60bb      	str	r3, [r7, #8]
 8007c3c:	e005      	b.n	8007c4a <CoAP_EnableAckTimeout+0x22>
		waitTime *= 2;
 8007c3e:	68fb      	ldr	r3, [r7, #12]
 8007c40:	005b      	lsls	r3, r3, #1
 8007c42:	60fb      	str	r3, [r7, #12]
	for (i = 0; i < retryNum; i++) { //"exponential backoff"
 8007c44:	68bb      	ldr	r3, [r7, #8]
 8007c46:	3301      	adds	r3, #1
 8007c48:	60bb      	str	r3, [r7, #8]
 8007c4a:	78fb      	ldrb	r3, [r7, #3]
 8007c4c:	68ba      	ldr	r2, [r7, #8]
 8007c4e:	429a      	cmp	r2, r3
 8007c50:	dbf5      	blt.n	8007c3e <CoAP_EnableAckTimeout+0x16>
	}
    INFO("CoAP timeout: %lus\n", waitTime);
 8007c52:	68fa      	ldr	r2, [r7, #12]
 8007c54:	4909      	ldr	r1, [pc, #36]	; (8007c7c <CoAP_EnableAckTimeout+0x54>)
 8007c56:	480a      	ldr	r0, [pc, #40]	; (8007c80 <CoAP_EnableAckTimeout+0x58>)
 8007c58:	f023 f92c 	bl	802aeb4 <siprintf>
 8007c5c:	4808      	ldr	r0, [pc, #32]	; (8007c80 <CoAP_EnableAckTimeout+0x58>)
 8007c5e:	f000 facb 	bl	80081f8 <hal_debug_puts>
	pIA->AckTimeout = CoAP.api.rtc1HzCnt() + waitTime;
 8007c62:	4b08      	ldr	r3, [pc, #32]	; (8007c84 <CoAP_EnableAckTimeout+0x5c>)
 8007c64:	685b      	ldr	r3, [r3, #4]
 8007c66:	4798      	blx	r3
 8007c68:	4602      	mov	r2, r0
 8007c6a:	68fb      	ldr	r3, [r7, #12]
 8007c6c:	441a      	add	r2, r3
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	631a      	str	r2, [r3, #48]	; 0x30
	return COAP_OK;
 8007c72:	2300      	movs	r3, #0
#endif
}
 8007c74:	4618      	mov	r0, r3
 8007c76:	3710      	adds	r7, #16
 8007c78:	46bd      	mov	sp, r7
 8007c7a:	bd80      	pop	{r7, pc}
 8007c7c:	0802c550 	.word	0x0802c550
 8007c80:	20000b54 	.word	0x20000b54
 8007c84:	20000b0c 	.word	0x20000b0c

08007c88 <CoAP_GetLongestPendingInteraction>:

CoAP_Interaction_t* _rom CoAP_GetLongestPendingInteraction() {
 8007c88:	b480      	push	{r7}
 8007c8a:	af00      	add	r7, sp, #0
	return CoAP.pInteractions;
 8007c8c:	4b02      	ldr	r3, [pc, #8]	; (8007c98 <CoAP_GetLongestPendingInteraction+0x10>)
 8007c8e:	681b      	ldr	r3, [r3, #0]
}
 8007c90:	4618      	mov	r0, r3
 8007c92:	46bd      	mov	sp, r7
 8007c94:	bc80      	pop	{r7}
 8007c96:	4770      	bx	lr
 8007c98:	20000b0c 	.word	0x20000b0c

08007c9c <CoAP_FindInteractionByMessageIdAndEp>:

// Each incoming message belongs to an interaction
// CON <-> ACK/RST are matched by id and endpoint
CoAP_Interaction_t* _rom CoAP_FindInteractionByMessageIdAndEp(CoAP_Interaction_t* pList, uint16_t mID, NetEp_t* fromEp) {
 8007c9c:	b580      	push	{r7, lr}
 8007c9e:	b084      	sub	sp, #16
 8007ca0:	af00      	add	r7, sp, #0
 8007ca2:	60f8      	str	r0, [r7, #12]
 8007ca4:	460b      	mov	r3, r1
 8007ca6:	607a      	str	r2, [r7, #4]
 8007ca8:	817b      	strh	r3, [r7, #10]

	// A received RST message rejects a former send CON message or (optional) NON message send by us
	// A received ACK message acknowledges a former send CON message or (optional) NON message send by us
	// servers and notificators use CON only in responses, clients in requests
	while (pList != NULL) {
 8007caa:	e021      	b.n	8007cf0 <CoAP_FindInteractionByMessageIdAndEp+0x54>
		if (((pList->pRespMsg != NULL && pList->pRespMsg->MessageID == mID) || (pList->pReqMsg != NULL && pList->pReqMsg->MessageID == mID)) && EpAreEqual(fromEp, &(pList->RemoteEp))) {
 8007cac:	68fb      	ldr	r3, [r7, #12]
 8007cae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cb0:	2b00      	cmp	r3, #0
 8007cb2:	d005      	beq.n	8007cc0 <CoAP_FindInteractionByMessageIdAndEp+0x24>
 8007cb4:	68fb      	ldr	r3, [r7, #12]
 8007cb6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007cb8:	88db      	ldrh	r3, [r3, #6]
 8007cba:	897a      	ldrh	r2, [r7, #10]
 8007cbc:	429a      	cmp	r2, r3
 8007cbe:	d009      	beq.n	8007cd4 <CoAP_FindInteractionByMessageIdAndEp+0x38>
 8007cc0:	68fb      	ldr	r3, [r7, #12]
 8007cc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d010      	beq.n	8007cea <CoAP_FindInteractionByMessageIdAndEp+0x4e>
 8007cc8:	68fb      	ldr	r3, [r7, #12]
 8007cca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ccc:	88db      	ldrh	r3, [r3, #6]
 8007cce:	897a      	ldrh	r2, [r7, #10]
 8007cd0:	429a      	cmp	r2, r3
 8007cd2:	d10a      	bne.n	8007cea <CoAP_FindInteractionByMessageIdAndEp+0x4e>
 8007cd4:	68fb      	ldr	r3, [r7, #12]
 8007cd6:	3310      	adds	r3, #16
 8007cd8:	4619      	mov	r1, r3
 8007cda:	6878      	ldr	r0, [r7, #4]
 8007cdc:	f003 fd1e 	bl	800b71c <EpAreEqual>
 8007ce0:	4603      	mov	r3, r0
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d001      	beq.n	8007cea <CoAP_FindInteractionByMessageIdAndEp+0x4e>
			return pList;
 8007ce6:	68fb      	ldr	r3, [r7, #12]
 8007ce8:	e006      	b.n	8007cf8 <CoAP_FindInteractionByMessageIdAndEp+0x5c>
		}
		pList = pList->next;
 8007cea:	68fb      	ldr	r3, [r7, #12]
 8007cec:	681b      	ldr	r3, [r3, #0]
 8007cee:	60fb      	str	r3, [r7, #12]
	while (pList != NULL) {
 8007cf0:	68fb      	ldr	r3, [r7, #12]
 8007cf2:	2b00      	cmp	r3, #0
 8007cf4:	d1da      	bne.n	8007cac <CoAP_FindInteractionByMessageIdAndEp+0x10>
	}

	return NULL;
 8007cf6:	2300      	movs	r3, #0
}
 8007cf8:	4618      	mov	r0, r3
 8007cfa:	3710      	adds	r7, #16
 8007cfc:	46bd      	mov	sp, r7
 8007cfe:	bd80      	pop	{r7, pc}

08007d00 <CoAP_DeleteInteraction>:

CoAP_Result_t _rom CoAP_DeleteInteraction(CoAP_Interaction_t* pInteractionToDelete) {
 8007d00:	b580      	push	{r7, lr}
 8007d02:	b082      	sub	sp, #8
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	6078      	str	r0, [r7, #4]
	return CoAP_UnlinkInteractionFromList(&(CoAP.pInteractions), pInteractionToDelete, true);
 8007d08:	2201      	movs	r2, #1
 8007d0a:	6879      	ldr	r1, [r7, #4]
 8007d0c:	4803      	ldr	r0, [pc, #12]	; (8007d1c <CoAP_DeleteInteraction+0x1c>)
 8007d0e:	f7ff fee6 	bl	8007ade <CoAP_UnlinkInteractionFromList>
 8007d12:	4603      	mov	r3, r0
}
 8007d14:	4618      	mov	r0, r3
 8007d16:	3708      	adds	r7, #8
 8007d18:	46bd      	mov	sp, r7
 8007d1a:	bd80      	pop	{r7, pc}
 8007d1c:	20000b0c 	.word	0x20000b0c

08007d20 <CoAP_EnqueueLastInteraction>:

CoAP_Result_t _rom CoAP_ResetInteractionByHandle(uint16_t MsgID, SocketHandle_t socketHandle, NetEp_t* RstEp) {
	return CoAP_UnlinkInteractionFromListByHandle(&(CoAP.pInteractions), MsgID, socketHandle, RstEp, true);
}

CoAP_Result_t _rom CoAP_EnqueueLastInteraction(CoAP_Interaction_t* pInteractionToEnqueue) {
 8007d20:	b580      	push	{r7, lr}
 8007d22:	b082      	sub	sp, #8
 8007d24:	af00      	add	r7, sp, #0
 8007d26:	6078      	str	r0, [r7, #4]
	return CoAP_MoveInteractionToListEnd(&(CoAP.pInteractions), pInteractionToEnqueue);
 8007d28:	6879      	ldr	r1, [r7, #4]
 8007d2a:	4804      	ldr	r0, [pc, #16]	; (8007d3c <CoAP_EnqueueLastInteraction+0x1c>)
 8007d2c:	f7ff ff3b 	bl	8007ba6 <CoAP_MoveInteractionToListEnd>
 8007d30:	4603      	mov	r3, r0
}
 8007d32:	4618      	mov	r0, r3
 8007d34:	3708      	adds	r7, #8
 8007d36:	46bd      	mov	sp, r7
 8007d38:	bd80      	pop	{r7, pc}
 8007d3a:	bf00      	nop
 8007d3c:	20000b0c 	.word	0x20000b0c

08007d40 <CoAP_StartNewClientInteraction>:

//we act as a CoAP Client (sending requests) in this interaction
CoAP_Result_t _rom CoAP_StartNewClientInteraction(CoAP_Message_t* pMsgReq, SocketHandle_t socketHandle, NetEp_t* ServerEp, CoAP_RespHandler_fn_t cb) {
 8007d40:	b580      	push	{r7, lr}
 8007d42:	b086      	sub	sp, #24
 8007d44:	af00      	add	r7, sp, #0
 8007d46:	60f8      	str	r0, [r7, #12]
 8007d48:	60b9      	str	r1, [r7, #8]
 8007d4a:	607a      	str	r2, [r7, #4]
 8007d4c:	603b      	str	r3, [r7, #0]
	if (pMsgReq == NULL || CoAP_MsgIsRequest(pMsgReq) == false)
 8007d4e:	68fb      	ldr	r3, [r7, #12]
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d008      	beq.n	8007d66 <CoAP_StartNewClientInteraction+0x26>
 8007d54:	68f8      	ldr	r0, [r7, #12]
 8007d56:	f001 fbde 	bl	8009516 <CoAP_MsgIsRequest>
 8007d5a:	4603      	mov	r3, r0
 8007d5c:	f083 0301 	eor.w	r3, r3, #1
 8007d60:	b2db      	uxtb	r3, r3
 8007d62:	2b00      	cmp	r3, #0
 8007d64:	d001      	beq.n	8007d6a <CoAP_StartNewClientInteraction+0x2a>
		return COAP_ERR_ARGUMENT;
 8007d66:	230a      	movs	r3, #10
 8007d68:	e021      	b.n	8007dae <CoAP_StartNewClientInteraction+0x6e>

	CoAP_Interaction_t* newIA = CoAP_AllocNewInteraction();
 8007d6a:	f7ff fe67 	bl	8007a3c <CoAP_AllocNewInteraction>
 8007d6e:	6178      	str	r0, [r7, #20]
	if (newIA == NULL)
 8007d70:	697b      	ldr	r3, [r7, #20]
 8007d72:	2b00      	cmp	r3, #0
 8007d74:	d101      	bne.n	8007d7a <CoAP_StartNewClientInteraction+0x3a>
		return COAP_ERR_OUT_OF_MEMORY;
 8007d76:	230d      	movs	r3, #13
 8007d78:	e019      	b.n	8007dae <CoAP_StartNewClientInteraction+0x6e>

	//attach request message
	newIA->pReqMsg = pMsgReq;
 8007d7a:	697b      	ldr	r3, [r7, #20]
 8007d7c:	68fa      	ldr	r2, [r7, #12]
 8007d7e:	639a      	str	r2, [r3, #56]	; 0x38

	newIA->socketHandle = socketHandle;
 8007d80:	697b      	ldr	r3, [r7, #20]
 8007d82:	68ba      	ldr	r2, [r7, #8]
 8007d84:	629a      	str	r2, [r3, #40]	; 0x28
	CopyEndpoints(&(newIA->RemoteEp), ServerEp);
 8007d86:	697b      	ldr	r3, [r7, #20]
 8007d88:	3310      	adds	r3, #16
 8007d8a:	6879      	ldr	r1, [r7, #4]
 8007d8c:	4618      	mov	r0, r3
 8007d8e:	f003 fd3b 	bl	800b808 <CopyEndpoints>
	newIA->RespCB = cb;
 8007d92:	697b      	ldr	r3, [r7, #20]
 8007d94:	683a      	ldr	r2, [r7, #0]
 8007d96:	661a      	str	r2, [r3, #96]	; 0x60

	newIA->Role = COAP_ROLE_CLIENT;
 8007d98:	697b      	ldr	r3, [r7, #20]
 8007d9a:	2203      	movs	r2, #3
 8007d9c:	711a      	strb	r2, [r3, #4]
	newIA->State = COAP_STATE_READY_TO_REQUEST;
 8007d9e:	697b      	ldr	r3, [r7, #20]
 8007da0:	2207      	movs	r2, #7
 8007da2:	715a      	strb	r2, [r3, #5]

	CoAP_AppendInteractionToList(&(CoAP.pInteractions), newIA);
 8007da4:	6979      	ldr	r1, [r7, #20]
 8007da6:	4804      	ldr	r0, [pc, #16]	; (8007db8 <CoAP_StartNewClientInteraction+0x78>)
 8007da8:	f7ff fecd 	bl	8007b46 <CoAP_AppendInteractionToList>

	return COAP_OK;
 8007dac:	2300      	movs	r3, #0
}
 8007dae:	4618      	mov	r0, r3
 8007db0:	3718      	adds	r7, #24
 8007db2:	46bd      	mov	sp, r7
 8007db4:	bd80      	pop	{r7, pc}
 8007db6:	bf00      	nop
 8007db8:	20000b0c 	.word	0x20000b0c

08007dbc <CoAP_StartNewRequest>:
	INFO("- New GetRequest failed: Out of Memory\r\n");

	return COAP_ERR_OUT_OF_MEMORY;
}

CoAP_Result_t _rom CoAP_StartNewRequest(CoAP_MessageCode_t type, const char* UriString, SocketHandle_t socketHandle, NetEp_t* ServerEp, CoAP_RespHandler_fn_t cb, uint8_t *buf, size_t size) {
 8007dbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007dc0:	b08e      	sub	sp, #56	; 0x38
 8007dc2:	af06      	add	r7, sp, #24
 8007dc4:	60b9      	str	r1, [r7, #8]
 8007dc6:	607a      	str	r2, [r7, #4]
 8007dc8:	603b      	str	r3, [r7, #0]
 8007dca:	4603      	mov	r3, r0
 8007dcc:	73fb      	strb	r3, [r7, #15]
	if (type == EMPTY || type > REQ_LAST) {
 8007dce:	7bfb      	ldrb	r3, [r7, #15]
 8007dd0:	2b00      	cmp	r3, #0
 8007dd2:	d002      	beq.n	8007dda <CoAP_StartNewRequest+0x1e>
 8007dd4:	7bfb      	ldrb	r3, [r7, #15]
 8007dd6:	2b07      	cmp	r3, #7
 8007dd8:	d90f      	bls.n	8007dfa <CoAP_StartNewRequest+0x3e>
		ERROR("- Invalid request type\r\n");
 8007dda:	4925      	ldr	r1, [pc, #148]	; (8007e70 <CoAP_StartNewRequest+0xb4>)
 8007ddc:	4825      	ldr	r0, [pc, #148]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007dde:	f023 f869 	bl	802aeb4 <siprintf>
 8007de2:	4824      	ldr	r0, [pc, #144]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007de4:	f000 fa08 	bl	80081f8 <hal_debug_puts>
 8007de8:	4923      	ldr	r1, [pc, #140]	; (8007e78 <CoAP_StartNewRequest+0xbc>)
 8007dea:	4822      	ldr	r0, [pc, #136]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007dec:	f023 f862 	bl	802aeb4 <siprintf>
 8007df0:	4820      	ldr	r0, [pc, #128]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007df2:	f000 fa01 	bl	80081f8 <hal_debug_puts>
		return COAP_ERR_ARGUMENT;
 8007df6:	230a      	movs	r3, #10
 8007df8:	e035      	b.n	8007e66 <CoAP_StartNewRequest+0xaa>
	}

	CoAP_Message_t* pReqMsg = CoAP_CreateMessage(CON, type, CoAP_GetNextMid(), buf, size, size, CoAP_GenerateToken());
 8007dfa:	f002 f843 	bl	8009e84 <CoAP_GetNextMid>
 8007dfe:	4603      	mov	r3, r0
 8007e00:	4698      	mov	r8, r3
 8007e02:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007e04:	b29c      	uxth	r4, r3
 8007e06:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007e08:	b29d      	uxth	r5, r3
 8007e0a:	f107 0310 	add.w	r3, r7, #16
 8007e0e:	4618      	mov	r0, r3
 8007e10:	f002 f848 	bl	8009ea4 <CoAP_GenerateToken>
 8007e14:	7bfe      	ldrb	r6, [r7, #15]
 8007e16:	ab02      	add	r3, sp, #8
 8007e18:	f107 0210 	add.w	r2, r7, #16
 8007e1c:	ca07      	ldmia	r2, {r0, r1, r2}
 8007e1e:	c303      	stmia	r3!, {r0, r1}
 8007e20:	701a      	strb	r2, [r3, #0]
 8007e22:	9501      	str	r5, [sp, #4]
 8007e24:	9400      	str	r4, [sp, #0]
 8007e26:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007e28:	4642      	mov	r2, r8
 8007e2a:	4631      	mov	r1, r6
 8007e2c:	2000      	movs	r0, #0
 8007e2e:	f001 fc19 	bl	8009664 <CoAP_CreateMessage>
 8007e32:	61f8      	str	r0, [r7, #28]

	if (pReqMsg != NULL) {
 8007e34:	69fb      	ldr	r3, [r7, #28]
 8007e36:	2b00      	cmp	r3, #0
 8007e38:	d00d      	beq.n	8007e56 <CoAP_StartNewRequest+0x9a>
		CoAP_AppendUriOptionsFromString(&(pReqMsg->pOptionsList), UriString);
 8007e3a:	69fb      	ldr	r3, [r7, #28]
 8007e3c:	3318      	adds	r3, #24
 8007e3e:	68b9      	ldr	r1, [r7, #8]
 8007e40:	4618      	mov	r0, r3
 8007e42:	f004 f86b 	bl	800bf1c <CoAP_AppendUriOptionsFromString>
		return CoAP_StartNewClientInteraction(pReqMsg, socketHandle, ServerEp, cb);
 8007e46:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007e48:	683a      	ldr	r2, [r7, #0]
 8007e4a:	6879      	ldr	r1, [r7, #4]
 8007e4c:	69f8      	ldr	r0, [r7, #28]
 8007e4e:	f7ff ff77 	bl	8007d40 <CoAP_StartNewClientInteraction>
 8007e52:	4603      	mov	r3, r0
 8007e54:	e007      	b.n	8007e66 <CoAP_StartNewRequest+0xaa>
	}

	INFO("- New GetRequest failed: Out of Memory\r\n");
 8007e56:	4909      	ldr	r1, [pc, #36]	; (8007e7c <CoAP_StartNewRequest+0xc0>)
 8007e58:	4806      	ldr	r0, [pc, #24]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007e5a:	f023 f82b 	bl	802aeb4 <siprintf>
 8007e5e:	4805      	ldr	r0, [pc, #20]	; (8007e74 <CoAP_StartNewRequest+0xb8>)
 8007e60:	f000 f9ca 	bl	80081f8 <hal_debug_puts>

	return COAP_ERR_OUT_OF_MEMORY;
 8007e64:	230d      	movs	r3, #13
}
 8007e66:	4618      	mov	r0, r3
 8007e68:	3720      	adds	r7, #32
 8007e6a:	46bd      	mov	sp, r7
 8007e6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e70:	0802c590 	.word	0x0802c590
 8007e74:	20000b54 	.word	0x20000b54
 8007e78:	0802c59c 	.word	0x0802c59c
 8007e7c:	0802c564 	.word	0x0802c564

08007e80 <CoAP_StartNewServerInteraction>:
	}
	return COAP_OK;
}

//we act as a CoAP Server (receiving requests) in this interaction
CoAP_Result_t _rom CoAP_StartNewServerInteraction(CoAP_Message_t* pMsgReq, CoAP_Res_t* pRes, SocketHandle_t socketHandle, NetPacket_t* pPacket) {
 8007e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e82:	b08f      	sub	sp, #60	; 0x3c
 8007e84:	af04      	add	r7, sp, #16
 8007e86:	6178      	str	r0, [r7, #20]
 8007e88:	6139      	str	r1, [r7, #16]
 8007e8a:	60fa      	str	r2, [r7, #12]
 8007e8c:	60bb      	str	r3, [r7, #8]
	if (!CoAP_MsgIsRequest(pMsgReq))
 8007e8e:	6978      	ldr	r0, [r7, #20]
 8007e90:	f001 fb41 	bl	8009516 <CoAP_MsgIsRequest>
 8007e94:	4603      	mov	r3, r0
 8007e96:	f083 0301 	eor.w	r3, r3, #1
 8007e9a:	b2db      	uxtb	r3, r3
 8007e9c:	2b00      	cmp	r3, #0
 8007e9e:	d001      	beq.n	8007ea4 <CoAP_StartNewServerInteraction+0x24>
		return COAP_ERR_ARGUMENT;
 8007ea0:	230a      	movs	r3, #10
 8007ea2:	e07e      	b.n	8007fa2 <CoAP_StartNewServerInteraction+0x122>

	//NON or CON request
	NetEp_t* pReqEp = &(pPacket->remoteEp);
 8007ea4:	68bb      	ldr	r3, [r7, #8]
 8007ea6:	3308      	adds	r3, #8
 8007ea8:	623b      	str	r3, [r7, #32]
	CoAP_Interaction_t* pIA;

	//Set the CoAP resource to the requst message
	pMsgReq->pResource = pRes;
 8007eaa:	697b      	ldr	r3, [r7, #20]
 8007eac:	693a      	ldr	r2, [r7, #16]
 8007eae:	621a      	str	r2, [r3, #32]

	//duplicate detection:
	//same request already received before?
	//iterate over all interactions
	for (pIA = CoAP.pInteractions; pIA != NULL; pIA = pIA->next) {
 8007eb0:	4b3e      	ldr	r3, [pc, #248]	; (8007fac <CoAP_StartNewServerInteraction+0x12c>)
 8007eb2:	681b      	ldr	r3, [r3, #0]
 8007eb4:	627b      	str	r3, [r7, #36]	; 0x24
 8007eb6:	e03a      	b.n	8007f2e <CoAP_StartNewServerInteraction+0xae>
		if (pIA->Role == COAP_ROLE_SERVER && pIA->socketHandle == socketHandle && pIA->pReqMsg->MessageID == pMsgReq->MessageID && EpAreEqual(&(pIA->RemoteEp), pReqEp)) {
 8007eb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007eba:	791b      	ldrb	r3, [r3, #4]
 8007ebc:	2b01      	cmp	r3, #1
 8007ebe:	d133      	bne.n	8007f28 <CoAP_StartNewServerInteraction+0xa8>
 8007ec0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ec2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ec4:	68fa      	ldr	r2, [r7, #12]
 8007ec6:	429a      	cmp	r2, r3
 8007ec8:	d12e      	bne.n	8007f28 <CoAP_StartNewServerInteraction+0xa8>
 8007eca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ecc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ece:	88da      	ldrh	r2, [r3, #6]
 8007ed0:	697b      	ldr	r3, [r7, #20]
 8007ed2:	88db      	ldrh	r3, [r3, #6]
 8007ed4:	429a      	cmp	r2, r3
 8007ed6:	d127      	bne.n	8007f28 <CoAP_StartNewServerInteraction+0xa8>
 8007ed8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007eda:	3310      	adds	r3, #16
 8007edc:	6a39      	ldr	r1, [r7, #32]
 8007ede:	4618      	mov	r0, r3
 8007ee0:	f003 fc1c 	bl	800b71c <EpAreEqual>
 8007ee4:	4603      	mov	r3, r0
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d01e      	beq.n	8007f28 <CoAP_StartNewServerInteraction+0xa8>
			//implements 4.5. "SHOULD"s
			if (pIA->pReqMsg->Type == CON && pIA->State == COAP_STATE_RESOURCE_POSTPONE_EMPTY_ACK_SENT) { //=> must be postponed resource with empty ack already sent, send it again
 8007eea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007eee:	791b      	ldrb	r3, [r3, #4]
 8007ef0:	2b00      	cmp	r3, #0
 8007ef2:	d117      	bne.n	8007f24 <CoAP_StartNewServerInteraction+0xa4>
 8007ef4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ef6:	795b      	ldrb	r3, [r3, #5]
 8007ef8:	2b02      	cmp	r3, #2
 8007efa:	d113      	bne.n	8007f24 <CoAP_StartNewServerInteraction+0xa4>
				CoAP_SendEmptyAck(pIA->pReqMsg->MessageID, pIA->socketHandle, pPacket->remoteEp); //send another empty ack
 8007efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007efe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007f00:	88de      	ldrh	r6, [r3, #6]
 8007f02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007f06:	607b      	str	r3, [r7, #4]
 8007f08:	68bc      	ldr	r4, [r7, #8]
 8007f0a:	466d      	mov	r5, sp
 8007f0c:	f104 0310 	add.w	r3, r4, #16
 8007f10:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8007f12:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8007f16:	f104 0308 	add.w	r3, r4, #8
 8007f1a:	cb0c      	ldmia	r3, {r2, r3}
 8007f1c:	6879      	ldr	r1, [r7, #4]
 8007f1e:	4630      	mov	r0, r6
 8007f20:	f001 fe00 	bl	8009b24 <CoAP_SendEmptyAck>
			}

			//pIA->ReqReliabilityState

			return COAP_ERR_EXISTING;
 8007f24:	2311      	movs	r3, #17
 8007f26:	e03c      	b.n	8007fa2 <CoAP_StartNewServerInteraction+0x122>
	for (pIA = CoAP.pInteractions; pIA != NULL; pIA = pIA->next) {
 8007f28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f2a:	681b      	ldr	r3, [r3, #0]
 8007f2c:	627b      	str	r3, [r7, #36]	; 0x24
 8007f2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d1c1      	bne.n	8007eb8 <CoAP_StartNewServerInteraction+0x38>
		}
	}

	//no duplicate request found-> create a new interaction for this new request
	CoAP_Interaction_t* newIA = CoAP_AllocNewInteraction();
 8007f34:	f7ff fd82 	bl	8007a3c <CoAP_AllocNewInteraction>
 8007f38:	61f8      	str	r0, [r7, #28]

	if (newIA == NULL) {
 8007f3a:	69fb      	ldr	r3, [r7, #28]
 8007f3c:	2b00      	cmp	r3, #0
 8007f3e:	d10f      	bne.n	8007f60 <CoAP_StartNewServerInteraction+0xe0>
		ERROR("(!) can't create new interaction - out of memory!\r\n");
 8007f40:	491b      	ldr	r1, [pc, #108]	; (8007fb0 <CoAP_StartNewServerInteraction+0x130>)
 8007f42:	481c      	ldr	r0, [pc, #112]	; (8007fb4 <CoAP_StartNewServerInteraction+0x134>)
 8007f44:	f022 ffb6 	bl	802aeb4 <siprintf>
 8007f48:	481a      	ldr	r0, [pc, #104]	; (8007fb4 <CoAP_StartNewServerInteraction+0x134>)
 8007f4a:	f000 f955 	bl	80081f8 <hal_debug_puts>
 8007f4e:	491a      	ldr	r1, [pc, #104]	; (8007fb8 <CoAP_StartNewServerInteraction+0x138>)
 8007f50:	4818      	ldr	r0, [pc, #96]	; (8007fb4 <CoAP_StartNewServerInteraction+0x134>)
 8007f52:	f022 ffaf 	bl	802aeb4 <siprintf>
 8007f56:	4817      	ldr	r0, [pc, #92]	; (8007fb4 <CoAP_StartNewServerInteraction+0x134>)
 8007f58:	f000 f94e 	bl	80081f8 <hal_debug_puts>
		return COAP_ERR_OUT_OF_MEMORY;
 8007f5c:	230d      	movs	r3, #13
 8007f5e:	e020      	b.n	8007fa2 <CoAP_StartNewServerInteraction+0x122>
	}

	newIA->socketHandle = socketHandle;
 8007f60:	69fb      	ldr	r3, [r7, #28]
 8007f62:	68fa      	ldr	r2, [r7, #12]
 8007f64:	629a      	str	r2, [r3, #40]	; 0x28
	newIA->pRes = pRes;
 8007f66:	69fb      	ldr	r3, [r7, #28]
 8007f68:	693a      	ldr	r2, [r7, #16]
 8007f6a:	609a      	str	r2, [r3, #8]
	newIA->Role = COAP_ROLE_SERVER;
 8007f6c:	69fb      	ldr	r3, [r7, #28]
 8007f6e:	2201      	movs	r2, #1
 8007f70:	711a      	strb	r2, [r3, #4]
	newIA->State = COAP_STATE_HANDLE_REQUEST;
 8007f72:	69fb      	ldr	r3, [r7, #28]
 8007f74:	2201      	movs	r2, #1
 8007f76:	715a      	strb	r2, [r3, #5]
	newIA->ReqMetaInfo = pPacket->metaInfo;
 8007f78:	69fb      	ldr	r3, [r7, #28]
 8007f7a:	68ba      	ldr	r2, [r7, #8]
 8007f7c:	3340      	adds	r3, #64	; 0x40
 8007f7e:	3220      	adds	r2, #32
 8007f80:	ca07      	ldmia	r2, {r0, r1, r2}
 8007f82:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	newIA->pReqMsg = pMsgReq;
 8007f86:	69fb      	ldr	r3, [r7, #28]
 8007f88:	697a      	ldr	r2, [r7, #20]
 8007f8a:	639a      	str	r2, [r3, #56]	; 0x38

	CopyEndpoints(&(newIA->RemoteEp), pReqEp);
 8007f8c:	69fb      	ldr	r3, [r7, #28]
 8007f8e:	3310      	adds	r3, #16
 8007f90:	6a39      	ldr	r1, [r7, #32]
 8007f92:	4618      	mov	r0, r3
 8007f94:	f003 fc38 	bl	800b808 <CopyEndpoints>
	CoAP_AppendInteractionToList(&(CoAP.pInteractions), newIA);
 8007f98:	69f9      	ldr	r1, [r7, #28]
 8007f9a:	4804      	ldr	r0, [pc, #16]	; (8007fac <CoAP_StartNewServerInteraction+0x12c>)
 8007f9c:	f7ff fdd3 	bl	8007b46 <CoAP_AppendInteractionToList>
	return COAP_OK;
 8007fa0:	2300      	movs	r3, #0
}
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	372c      	adds	r7, #44	; 0x2c
 8007fa6:	46bd      	mov	sp, r7
 8007fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007faa:	bf00      	nop
 8007fac:	20000b0c 	.word	0x20000b0c
 8007fb0:	0802c590 	.word	0x0802c590
 8007fb4:	20000b54 	.word	0x20000b54
 8007fb8:	0802c5f0 	.word	0x0802c5f0

08007fbc <CoAP_RemoveInteractionsObserver>:

CoAP_Result_t _rom CoAP_RemoveInteractionsObserver(CoAP_Interaction_t* pIA, CoAP_Token_t token) {
 8007fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007fbe:	b087      	sub	sp, #28
 8007fc0:	af02      	add	r7, sp, #8
 8007fc2:	60f8      	str	r0, [r7, #12]
 8007fc4:	4638      	mov	r0, r7
 8007fc6:	e880 000e 	stmia.w	r0, {r1, r2, r3}
	return CoAP_RemoveObserverFromResource(&((pIA->pRes)->pListObservers), pIA->socketHandle, &(pIA->RemoteEp), token);
 8007fca:	68fb      	ldr	r3, [r7, #12]
 8007fcc:	689b      	ldr	r3, [r3, #8]
 8007fce:	f103 0418 	add.w	r4, r3, #24
 8007fd2:	68fb      	ldr	r3, [r7, #12]
 8007fd4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8007fd6:	68fb      	ldr	r3, [r7, #12]
 8007fd8:	f103 0610 	add.w	r6, r3, #16
 8007fdc:	466b      	mov	r3, sp
 8007fde:	1d3a      	adds	r2, r7, #4
 8007fe0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8007fe4:	6018      	str	r0, [r3, #0]
 8007fe6:	3304      	adds	r3, #4
 8007fe8:	7019      	strb	r1, [r3, #0]
 8007fea:	683b      	ldr	r3, [r7, #0]
 8007fec:	4632      	mov	r2, r6
 8007fee:	4629      	mov	r1, r5
 8007ff0:	4620      	mov	r0, r4
 8007ff2:	f003 f941 	bl	800b278 <CoAP_RemoveObserverFromResource>
 8007ff6:	4603      	mov	r3, r0
}
 8007ff8:	4618      	mov	r0, r3
 8007ffa:	3714      	adds	r7, #20
 8007ffc:	46bd      	mov	sp, r7
 8007ffe:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008000 <CoAP_HandleObservationInReq>:

CoAP_Result_t _rom CoAP_HandleObservationInReq(CoAP_Interaction_t* pIA) {
 8008000:	b5b0      	push	{r4, r5, r7, lr}
 8008002:	b08a      	sub	sp, #40	; 0x28
 8008004:	af02      	add	r7, sp, #8
 8008006:	6078      	str	r0, [r7, #4]
	if (pIA == NULL || pIA->pReqMsg == NULL) {
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	2b00      	cmp	r3, #0
 800800c:	d003      	beq.n	8008016 <CoAP_HandleObservationInReq+0x16>
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008012:	2b00      	cmp	r3, #0
 8008014:	d101      	bne.n	800801a <CoAP_HandleObservationInReq+0x1a>
		return COAP_ERR_ARGUMENT;    //safety checks
 8008016:	230a      	movs	r3, #10
 8008018:	e0e4      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
	}

	CoAP_Result_t res;
	uint32_t obsVal = 0;
 800801a:	2300      	movs	r3, #0
 800801c:	60fb      	str	r3, [r7, #12]
	CoAP_Observer_t* pObserver = NULL;
 800801e:	2300      	movs	r3, #0
 8008020:	60bb      	str	r3, [r7, #8]
	CoAP_Observer_t* pExistingObserver = (pIA->pRes)->pListObservers;
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	689b      	ldr	r3, [r3, #8]
 8008026:	699b      	ldr	r3, [r3, #24]
 8008028:	61fb      	str	r3, [r7, #28]

	if (pIA->pRes->Notifier == NULL) {
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	689b      	ldr	r3, [r3, #8]
 800802e:	6a1b      	ldr	r3, [r3, #32]
 8008030:	2b00      	cmp	r3, #0
 8008032:	d101      	bne.n	8008038 <CoAP_HandleObservationInReq+0x38>
		return COAP_ERR_NOT_FOUND;            //resource does not support observe
 8008034:	230f      	movs	r3, #15
 8008036:	e0d5      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
	}
	if ((res = GetObserveOptionFromMsg(pIA->pReqMsg, &obsVal)) != COAP_OK) {
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800803c:	f107 020c 	add.w	r2, r7, #12
 8008040:	4611      	mov	r1, r2
 8008042:	4618      	mov	r0, r3
 8008044:	f003 fe19 	bl	800bc7a <GetObserveOptionFromMsg>
 8008048:	4603      	mov	r3, r0
 800804a:	74fb      	strb	r3, [r7, #19]
 800804c:	7cfb      	ldrb	r3, [r7, #19]
 800804e:	2b00      	cmp	r3, #0
 8008050:	d001      	beq.n	8008056 <CoAP_HandleObservationInReq+0x56>
		return res; //if no observe option in req function can't do anything
 8008052:	7cfb      	ldrb	r3, [r7, #19]
 8008054:	e0c6      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
	}

	//Client registers
	if (obsVal == OBSERVE_OPT_REGISTER) { // val == 0
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	2b00      	cmp	r3, #0
 800805a:	d176      	bne.n	800814a <CoAP_HandleObservationInReq+0x14a>

		//Alloc memory for new Observer
		pObserver = CoAP_AllocNewObserver();
 800805c:	f003 fe6c 	bl	800bd38 <CoAP_AllocNewObserver>
 8008060:	4603      	mov	r3, r0
 8008062:	60bb      	str	r3, [r7, #8]
		if (pObserver == NULL) {
 8008064:	68bb      	ldr	r3, [r7, #8]
 8008066:	2b00      	cmp	r3, #0
 8008068:	d101      	bne.n	800806e <CoAP_HandleObservationInReq+0x6e>
			return COAP_ERR_OUT_OF_MEMORY;
 800806a:	230d      	movs	r3, #13
 800806c:	e0ba      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
		}

		//Copy relevant information for observation from current interaction
		pObserver->Ep = pIA->RemoteEp;
 800806e:	68ba      	ldr	r2, [r7, #8]
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	4615      	mov	r5, r2
 8008074:	f103 0410 	add.w	r4, r3, #16
 8008078:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800807a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800807c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008080:	e885 0003 	stmia.w	r5, {r0, r1}
		pObserver->socketHandle = pIA->socketHandle;
 8008084:	68bb      	ldr	r3, [r7, #8]
 8008086:	687a      	ldr	r2, [r7, #4]
 8008088:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800808a:	619a      	str	r2, [r3, #24]
		pObserver->Token = pIA->pReqMsg->Token;
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008090:	68ba      	ldr	r2, [r7, #8]
 8008092:	321d      	adds	r2, #29
 8008094:	330c      	adds	r3, #12
 8008096:	cb03      	ldmia	r3!, {r0, r1}
 8008098:	6010      	str	r0, [r2, #0]
 800809a:	6051      	str	r1, [r2, #4]
 800809c:	781b      	ldrb	r3, [r3, #0]
 800809e:	7213      	strb	r3, [r2, #8]
		pObserver->next = NULL;
 80080a0:	68bb      	ldr	r3, [r7, #8]
 80080a2:	2200      	movs	r2, #0
 80080a4:	62da      	str	r2, [r3, #44]	; 0x2c

		//Copy relevant Options from Request (uri-query, observe)
		//Note: uri-path is not relevant since observers are fixed to its resource
		CoAP_option_t* pOption = pIA->pReqMsg->pOptionsList;
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80080aa:	699b      	ldr	r3, [r3, #24]
 80080ac:	61bb      	str	r3, [r7, #24]
		while (pOption != NULL) {
 80080ae:	e01f      	b.n	80080f0 <CoAP_HandleObservationInReq+0xf0>
			if (pOption->Number == OPT_NUM_URI_QUERY || pOption->Number == OPT_NUM_OBSERVE) {
 80080b0:	69bb      	ldr	r3, [r7, #24]
 80080b2:	889b      	ldrh	r3, [r3, #4]
 80080b4:	2b0f      	cmp	r3, #15
 80080b6:	d003      	beq.n	80080c0 <CoAP_HandleObservationInReq+0xc0>
 80080b8:	69bb      	ldr	r3, [r7, #24]
 80080ba:	889b      	ldrh	r3, [r3, #4]
 80080bc:	2b06      	cmp	r3, #6
 80080be:	d114      	bne.n	80080ea <CoAP_HandleObservationInReq+0xea>
				//create copy from volatile Iinteraction msg options
				if (CoAP_AppendOptionToList(&(pObserver->pOptList), pOption->Number, pOption->Value, pOption->Length) != COAP_OK) {
 80080c0:	68bb      	ldr	r3, [r7, #8]
 80080c2:	f103 0028 	add.w	r0, r3, #40	; 0x28
 80080c6:	69bb      	ldr	r3, [r7, #24]
 80080c8:	8899      	ldrh	r1, [r3, #4]
 80080ca:	69bb      	ldr	r3, [r7, #24]
 80080cc:	689a      	ldr	r2, [r3, #8]
 80080ce:	69bb      	ldr	r3, [r7, #24]
 80080d0:	88db      	ldrh	r3, [r3, #6]
 80080d2:	f002 fd79 	bl	800abc8 <CoAP_AppendOptionToList>
 80080d6:	4603      	mov	r3, r0
 80080d8:	2b00      	cmp	r3, #0
 80080da:	d006      	beq.n	80080ea <CoAP_HandleObservationInReq+0xea>
					CoAP_FreeObserver(&pObserver);
 80080dc:	f107 0308 	add.w	r3, r7, #8
 80080e0:	4618      	mov	r0, r3
 80080e2:	f003 fe3f 	bl	800bd64 <CoAP_FreeObserver>
					return COAP_ERR_OUT_OF_MEMORY;
 80080e6:	230d      	movs	r3, #13
 80080e8:	e07c      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
				}
			}
			pOption = pOption->next;
 80080ea:	69bb      	ldr	r3, [r7, #24]
 80080ec:	681b      	ldr	r3, [r3, #0]
 80080ee:	61bb      	str	r3, [r7, #24]
		while (pOption != NULL) {
 80080f0:	69bb      	ldr	r3, [r7, #24]
 80080f2:	2b00      	cmp	r3, #0
 80080f4:	d1dc      	bne.n	80080b0 <CoAP_HandleObservationInReq+0xb0>
		}

		//delete eventually existing same observer
		while (pExistingObserver != NULL) { //found right existing observation -> delete it
 80080f6:	e01b      	b.n	8008130 <CoAP_HandleObservationInReq+0x130>
			// Changed: Do NOT check the token. if socket and EP are the same, it's the same observer
			// We do NOT allow to observe the same resource twice from the same observer
			// CoAP_TokenEqual(pIA->pReqMsg->Token, pExistingObserver->Token) &&
			if (pIA->socketHandle == pExistingObserver->socketHandle && EpAreEqual(&(pIA->RemoteEp), &(pExistingObserver->Ep))) {
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80080fc:	69fb      	ldr	r3, [r7, #28]
 80080fe:	699b      	ldr	r3, [r3, #24]
 8008100:	429a      	cmp	r2, r3
 8008102:	d112      	bne.n	800812a <CoAP_HandleObservationInReq+0x12a>
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	3310      	adds	r3, #16
 8008108:	69fa      	ldr	r2, [r7, #28]
 800810a:	4611      	mov	r1, r2
 800810c:	4618      	mov	r0, r3
 800810e:	f003 fb05 	bl	800b71c <EpAreEqual>
 8008112:	4603      	mov	r3, r0
 8008114:	2b00      	cmp	r3, #0
 8008116:	d008      	beq.n	800812a <CoAP_HandleObservationInReq+0x12a>
				CoAP_UnlinkObserverFromList(&((pIA->pRes)->pListObservers), pExistingObserver, true);
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	689b      	ldr	r3, [r3, #8]
 800811c:	3318      	adds	r3, #24
 800811e:	2201      	movs	r2, #1
 8008120:	69f9      	ldr	r1, [r7, #28]
 8008122:	4618      	mov	r0, r3
 8008124:	f003 fe70 	bl	800be08 <CoAP_UnlinkObserverFromList>
				break;
 8008128:	e005      	b.n	8008136 <CoAP_HandleObservationInReq+0x136>
			}
			pExistingObserver = pExistingObserver->next;
 800812a:	69fb      	ldr	r3, [r7, #28]
 800812c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800812e:	61fb      	str	r3, [r7, #28]
		while (pExistingObserver != NULL) { //found right existing observation -> delete it
 8008130:	69fb      	ldr	r3, [r7, #28]
 8008132:	2b00      	cmp	r3, #0
 8008134:	d1e0      	bne.n	80080f8 <CoAP_HandleObservationInReq+0xf8>
		}

		//attach/update observer to resource
		return CoAP_AppendObserverToList(&((pIA->pRes)->pListObservers), pObserver);
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	689b      	ldr	r3, [r3, #8]
 800813a:	3318      	adds	r3, #24
 800813c:	68ba      	ldr	r2, [r7, #8]
 800813e:	4611      	mov	r1, r2
 8008140:	4618      	mov	r0, r3
 8008142:	f003 fe31 	bl	800bda8 <CoAP_AppendObserverToList>
 8008146:	4603      	mov	r3, r0
 8008148:	e04c      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>

		//Client cancels observation actively (this is an alternative to simply forget the req token and send rst on next notification)
	} else if (obsVal == OBSERVE_OPT_DEREGISTER) { // val == 1
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	2b01      	cmp	r3, #1
 800814e:	d146      	bne.n	80081de <CoAP_HandleObservationInReq+0x1de>
		//find matching observer in resource observers-list
		CoAP_RemoveInteractionsObserver(pIA, pIA->pReqMsg->Token); //remove observer identified by token, socketHandle and remote EP from resource
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008154:	330c      	adds	r3, #12
 8008156:	cb0e      	ldmia	r3, {r1, r2, r3}
 8008158:	6878      	ldr	r0, [r7, #4]
 800815a:	f7ff ff2f 	bl	8007fbc <CoAP_RemoveInteractionsObserver>

		//delete/abort any pending notification interaction
		CoAP_Interaction_t* pIApending;
		for (pIApending = CoAP.pInteractions; pIApending != NULL; pIApending = pIApending->next) {
 800815e:	4b23      	ldr	r3, [pc, #140]	; (80081ec <CoAP_HandleObservationInReq+0x1ec>)
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	617b      	str	r3, [r7, #20]
 8008164:	e037      	b.n	80081d6 <CoAP_HandleObservationInReq+0x1d6>
			if (pIApending->Role == COAP_ROLE_NOTIFICATION) {
 8008166:	697b      	ldr	r3, [r7, #20]
 8008168:	791b      	ldrb	r3, [r3, #4]
 800816a:	2b02      	cmp	r3, #2
 800816c:	d130      	bne.n	80081d0 <CoAP_HandleObservationInReq+0x1d0>
				if (CoAP_TokenEqual(pIApending->pRespMsg->Token, pIA->pReqMsg->Token)
 800816e:	697b      	ldr	r3, [r7, #20]
 8008170:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8008176:	466b      	mov	r3, sp
 8008178:	f102 0110 	add.w	r1, r2, #16
 800817c:	c903      	ldmia	r1, {r0, r1}
 800817e:	6018      	str	r0, [r3, #0]
 8008180:	3304      	adds	r3, #4
 8008182:	7019      	strb	r1, [r3, #0]
 8008184:	68d3      	ldr	r3, [r2, #12]
 8008186:	f104 020c 	add.w	r2, r4, #12
 800818a:	ca07      	ldmia	r2, {r0, r1, r2}
 800818c:	f001 f98c 	bl	80094a8 <CoAP_TokenEqual>
 8008190:	4603      	mov	r3, r0
 8008192:	2b00      	cmp	r3, #0
 8008194:	d01c      	beq.n	80081d0 <CoAP_HandleObservationInReq+0x1d0>
						&& pIApending->socketHandle == pIA->socketHandle
 8008196:	697b      	ldr	r3, [r7, #20]
 8008198:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800819a:	687b      	ldr	r3, [r7, #4]
 800819c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800819e:	429a      	cmp	r2, r3
 80081a0:	d116      	bne.n	80081d0 <CoAP_HandleObservationInReq+0x1d0>
						&& EpAreEqual(&(pIApending->RemoteEp), &(pIA->RemoteEp))) {
 80081a2:	697b      	ldr	r3, [r7, #20]
 80081a4:	f103 0210 	add.w	r2, r3, #16
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	3310      	adds	r3, #16
 80081ac:	4619      	mov	r1, r3
 80081ae:	4610      	mov	r0, r2
 80081b0:	f003 fab4 	bl	800b71c <EpAreEqual>
 80081b4:	4603      	mov	r3, r0
 80081b6:	2b00      	cmp	r3, #0
 80081b8:	d00a      	beq.n	80081d0 <CoAP_HandleObservationInReq+0x1d0>
					INFO("Abort of pending notification interaction\r\n");
 80081ba:	490d      	ldr	r1, [pc, #52]	; (80081f0 <CoAP_HandleObservationInReq+0x1f0>)
 80081bc:	480d      	ldr	r0, [pc, #52]	; (80081f4 <CoAP_HandleObservationInReq+0x1f4>)
 80081be:	f022 fe79 	bl	802aeb4 <siprintf>
 80081c2:	480c      	ldr	r0, [pc, #48]	; (80081f4 <CoAP_HandleObservationInReq+0x1f4>)
 80081c4:	f000 f818 	bl	80081f8 <hal_debug_puts>
					CoAP_DeleteInteraction(pIApending);
 80081c8:	6978      	ldr	r0, [r7, #20]
 80081ca:	f7ff fd99 	bl	8007d00 <CoAP_DeleteInteraction>
					break;
 80081ce:	e008      	b.n	80081e2 <CoAP_HandleObservationInReq+0x1e2>
		for (pIApending = CoAP.pInteractions; pIApending != NULL; pIApending = pIApending->next) {
 80081d0:	697b      	ldr	r3, [r7, #20]
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	617b      	str	r3, [r7, #20]
 80081d6:	697b      	ldr	r3, [r7, #20]
 80081d8:	2b00      	cmp	r3, #0
 80081da:	d1c4      	bne.n	8008166 <CoAP_HandleObservationInReq+0x166>
 80081dc:	e001      	b.n	80081e2 <CoAP_HandleObservationInReq+0x1e2>
				}
			}
		}

	} else {
		return COAP_BAD_OPTION_VAL;
 80081de:	2315      	movs	r3, #21
 80081e0:	e000      	b.n	80081e4 <CoAP_HandleObservationInReq+0x1e4>
	}

	return COAP_ERR_NOT_FOUND;
 80081e2:	230f      	movs	r3, #15
}
 80081e4:	4618      	mov	r0, r3
 80081e6:	3720      	adds	r7, #32
 80081e8:	46bd      	mov	sp, r7
 80081ea:	bdb0      	pop	{r4, r5, r7, pc}
 80081ec:	20000b0c 	.word	0x20000b0c
 80081f0:	0802c624 	.word	0x0802c624
 80081f4:	20000b54 	.word	0x20000b54

080081f8 <hal_debug_puts>:
#include "coap.h"
#include "liblobaro_coap.h"

CoAP_t CoAP = { .pInteractions = NULL, .api = { 0 } };

void hal_debug_puts(char* s) {
 80081f8:	b580      	push	{r7, lr}
 80081fa:	b082      	sub	sp, #8
 80081fc:	af00      	add	r7, sp, #0
 80081fe:	6078      	str	r0, [r7, #4]
	if (CoAP.api.debugPuts != NULL) {
 8008200:	4b05      	ldr	r3, [pc, #20]	; (8008218 <hal_debug_puts+0x20>)
 8008202:	689b      	ldr	r3, [r3, #8]
 8008204:	2b00      	cmp	r3, #0
 8008206:	d003      	beq.n	8008210 <hal_debug_puts+0x18>
		CoAP.api.debugPuts(s);
 8008208:	4b03      	ldr	r3, [pc, #12]	; (8008218 <hal_debug_puts+0x20>)
 800820a:	689b      	ldr	r3, [r3, #8]
 800820c:	6878      	ldr	r0, [r7, #4]
 800820e:	4798      	blx	r3
	}
}
 8008210:	bf00      	nop
 8008212:	3708      	adds	r7, #8
 8008214:	46bd      	mov	sp, r7
 8008216:	bd80      	pop	{r7, pc}
 8008218:	20000b0c 	.word	0x20000b0c

0800821c <CoAP_HandleIncomingPacket>:

// Called by network interfaces to pass rawData which is parsed to CoAP messages.
// lifetime of pckt only during function invoke
// can be called from irq since more expensive work is done in CoAP_doWork loop
void _ram CoAP_HandleIncomingPacket(SocketHandle_t socketHandle, NetPacket_t* pPacket) {
 800821c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800821e:	b091      	sub	sp, #68	; 0x44
 8008220:	af0a      	add	r7, sp, #40	; 0x28
 8008222:	6078      	str	r0, [r7, #4]
 8008224:	6039      	str	r1, [r7, #0]
	CoAP_Message_t* pMsg = NULL;
 8008226:	2300      	movs	r3, #0
 8008228:	60bb      	str	r3, [r7, #8]
	bool isRequest = false;
 800822a:	2300      	movs	r3, #0
 800822c:	73fb      	strb	r3, [r7, #15]
	CoAP_Res_t* pRes = NULL;
 800822e:	2300      	movs	r3, #0
 8008230:	617b      	str	r3, [r7, #20]
	CoAP_Result_t res = COAP_OK;
 8008232:	2300      	movs	r3, #0
 8008234:	73bb      	strb	r3, [r7, #14]

	// Try to parse packet of bytes into CoAP message
	INFO("\r\no<<<<<<<<<<<<<<<<<<<<<<\r\nNew Datagram received [%d Bytes], Interface #%p\r\n", pPacket->size, socketHandle); //PrintRawPacket(pckt);
 8008236:	683b      	ldr	r3, [r7, #0]
 8008238:	889b      	ldrh	r3, [r3, #4]
 800823a:	461a      	mov	r2, r3
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	49a9      	ldr	r1, [pc, #676]	; (80084e4 <CoAP_HandleIncomingPacket+0x2c8>)
 8008240:	48a9      	ldr	r0, [pc, #676]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008242:	f022 fe37 	bl	802aeb4 <siprintf>
 8008246:	48a8      	ldr	r0, [pc, #672]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008248:	f7ff ffd6 	bl	80081f8 <hal_debug_puts>
	INFO("Sending Endpoint: ");
 800824c:	49a7      	ldr	r1, [pc, #668]	; (80084ec <CoAP_HandleIncomingPacket+0x2d0>)
 800824e:	48a6      	ldr	r0, [pc, #664]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008250:	f022 fe30 	bl	802aeb4 <siprintf>
 8008254:	48a4      	ldr	r0, [pc, #656]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008256:	f7ff ffcf 	bl	80081f8 <hal_debug_puts>
	PrintEndpoint(&(pPacket->remoteEp));
 800825a:	683b      	ldr	r3, [r7, #0]
 800825c:	3308      	adds	r3, #8
 800825e:	4618      	mov	r0, r3
 8008260:	f003 f924 	bl	800b4ac <PrintEndpoint>
	INFO("\n");
 8008264:	49a2      	ldr	r1, [pc, #648]	; (80084f0 <CoAP_HandleIncomingPacket+0x2d4>)
 8008266:	48a0      	ldr	r0, [pc, #640]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008268:	f022 fe24 	bl	802aeb4 <siprintf>
 800826c:	489e      	ldr	r0, [pc, #632]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 800826e:	f7ff ffc3 	bl	80081f8 <hal_debug_puts>

	if ((res = CoAP_ParseMessageFromDatagram(pPacket->pData, pPacket->size, &pMsg)) == COAP_OK) {
 8008272:	683b      	ldr	r3, [r7, #0]
 8008274:	6818      	ldr	r0, [r3, #0]
 8008276:	683b      	ldr	r3, [r7, #0]
 8008278:	889b      	ldrh	r3, [r3, #4]
 800827a:	f107 0208 	add.w	r2, r7, #8
 800827e:	4619      	mov	r1, r3
 8008280:	f001 fa5c 	bl	800973c <CoAP_ParseMessageFromDatagram>
 8008284:	4603      	mov	r3, r0
 8008286:	73bb      	strb	r3, [r7, #14]
 8008288:	7bbb      	ldrb	r3, [r7, #14]
 800828a:	2b00      	cmp	r3, #0
 800828c:	d115      	bne.n	80082ba <CoAP_HandleIncomingPacket+0x9e>
		CoAP_PrintMsg(pMsg); // allocates the needed amount of ram
 800828e:	68bb      	ldr	r3, [r7, #8]
 8008290:	4618      	mov	r0, r3
 8008292:	f001 fe35 	bl	8009f00 <CoAP_PrintMsg>
		INFO("o<<<<<<<<<<<<<<<<<<<<<<\r\n");
 8008296:	4997      	ldr	r1, [pc, #604]	; (80084f4 <CoAP_HandleIncomingPacket+0x2d8>)
 8008298:	4893      	ldr	r0, [pc, #588]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 800829a:	f022 fe0b 	bl	802aeb4 <siprintf>
 800829e:	4892      	ldr	r0, [pc, #584]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082a0:	f7ff ffaa 	bl	80081f8 <hal_debug_puts>
		CoAP_free_Message(&pMsg);
		return;
	}
#endif

	isRequest = CoAP_MsgIsRequest(pMsg);
 80082a4:	68bb      	ldr	r3, [r7, #8]
 80082a6:	4618      	mov	r0, r3
 80082a8:	f001 f935 	bl	8009516 <CoAP_MsgIsRequest>
 80082ac:	4603      	mov	r3, r0
 80082ae:	73fb      	strb	r3, [r7, #15]

	DEBUG_COAP("Filter out bad CODE/TYPE combinations\r\n");
	// Filter out bad CODE/TYPE combinations (Table 1, RFC7252 4.3.) by silently ignoring them
	if (pMsg->Type == CON && pMsg->Code == EMPTY) {
 80082b0:	68bb      	ldr	r3, [r7, #8]
 80082b2:	791b      	ldrb	r3, [r3, #4]
 80082b4:	2b00      	cmp	r3, #0
 80082b6:	d134      	bne.n	8008322 <CoAP_HandleIncomingPacket+0x106>
 80082b8:	e019      	b.n	80082ee <CoAP_HandleIncomingPacket+0xd2>
		ERROR("ParseResult: ");
 80082ba:	498f      	ldr	r1, [pc, #572]	; (80084f8 <CoAP_HandleIncomingPacket+0x2dc>)
 80082bc:	488a      	ldr	r0, [pc, #552]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082be:	f022 fdf9 	bl	802aeb4 <siprintf>
 80082c2:	4889      	ldr	r0, [pc, #548]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082c4:	f7ff ff98 	bl	80081f8 <hal_debug_puts>
 80082c8:	498c      	ldr	r1, [pc, #560]	; (80084fc <CoAP_HandleIncomingPacket+0x2e0>)
 80082ca:	4887      	ldr	r0, [pc, #540]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082cc:	f022 fdf2 	bl	802aeb4 <siprintf>
 80082d0:	4885      	ldr	r0, [pc, #532]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082d2:	f7ff ff91 	bl	80081f8 <hal_debug_puts>
		CoAP_PrintResultValue(res);
 80082d6:	7bbb      	ldrb	r3, [r7, #14]
 80082d8:	4618      	mov	r0, r3
 80082da:	f002 f891 	bl	800a400 <CoAP_PrintResultValue>
		INFO("o<<<<<<<<<<<<<<<<<<<<<<\r\n");
 80082de:	4985      	ldr	r1, [pc, #532]	; (80084f4 <CoAP_HandleIncomingPacket+0x2d8>)
 80082e0:	4881      	ldr	r0, [pc, #516]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082e2:	f022 fde7 	bl	802aeb4 <siprintf>
 80082e6:	4880      	ldr	r0, [pc, #512]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 80082e8:	f7ff ff86 	bl	80081f8 <hal_debug_puts>
		return; //very early parsing fail, coap parse was a total fail can't do anything for remote user, complete ignore of packet
 80082ec:	e24d      	b.n	800878a <CoAP_HandleIncomingPacket+0x56e>
	if (pMsg->Type == CON && pMsg->Code == EMPTY) {
 80082ee:	68bb      	ldr	r3, [r7, #8]
 80082f0:	795b      	ldrb	r3, [r3, #5]
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d115      	bne.n	8008322 <CoAP_HandleIncomingPacket+0x106>
		CoAP_SendEmptyRST(pMsg->MessageID, socketHandle, pPacket->remoteEp); //a.k.a "CoAP Ping"
 80082f6:	68bb      	ldr	r3, [r7, #8]
 80082f8:	88de      	ldrh	r6, [r3, #6]
 80082fa:	683c      	ldr	r4, [r7, #0]
 80082fc:	466d      	mov	r5, sp
 80082fe:	f104 0310 	add.w	r3, r4, #16
 8008302:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008304:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008308:	f104 0308 	add.w	r3, r4, #8
 800830c:	cb0c      	ldmia	r3, {r2, r3}
 800830e:	6879      	ldr	r1, [r7, #4]
 8008310:	4630      	mov	r0, r6
 8008312:	f001 fc66 	bl	8009be2 <CoAP_SendEmptyRST>
		CoAP_free_Message(&pMsg); //free if not used inside interaction
 8008316:	f107 0308 	add.w	r3, r7, #8
 800831a:	4618      	mov	r0, r3
 800831c:	f001 f92a 	bl	8009574 <CoAP_free_Message>
		// coap_mem_stats();
		return;
 8008320:	e233      	b.n	800878a <CoAP_HandleIncomingPacket+0x56e>
	} else if (pMsg->Type == ACK && isRequest) {
 8008322:	68bb      	ldr	r3, [r7, #8]
 8008324:	791b      	ldrb	r3, [r3, #4]
 8008326:	2b02      	cmp	r3, #2
 8008328:	d103      	bne.n	8008332 <CoAP_HandleIncomingPacket+0x116>
 800832a:	7bfb      	ldrb	r3, [r7, #15]
 800832c:	2b00      	cmp	r3, #0
 800832e:	f040 8210 	bne.w	8008752 <CoAP_HandleIncomingPacket+0x536>
		goto END;
	} else if (pMsg->Type == RST && pMsg->Code != EMPTY) {
 8008332:	68bb      	ldr	r3, [r7, #8]
 8008334:	791b      	ldrb	r3, [r3, #4]
 8008336:	2b03      	cmp	r3, #3
 8008338:	d104      	bne.n	8008344 <CoAP_HandleIncomingPacket+0x128>
 800833a:	68bb      	ldr	r3, [r7, #8]
 800833c:	795b      	ldrb	r3, [r3, #5]
 800833e:	2b00      	cmp	r3, #0
 8008340:	f040 8209 	bne.w	8008756 <CoAP_HandleIncomingPacket+0x53a>
		goto END;
	} else if (pMsg->Type == NON && pMsg->Code == EMPTY) {
 8008344:	68bb      	ldr	r3, [r7, #8]
 8008346:	791b      	ldrb	r3, [r3, #4]
 8008348:	2b01      	cmp	r3, #1
 800834a:	d104      	bne.n	8008356 <CoAP_HandleIncomingPacket+0x13a>
 800834c:	68bb      	ldr	r3, [r7, #8]
 800834e:	795b      	ldrb	r3, [r3, #5]
 8008350:	2b00      	cmp	r3, #0
 8008352:	f000 8202 	beq.w	800875a <CoAP_HandleIncomingPacket+0x53e>
	}

	//INFO("Find the request handler or send 4.04\r\n");
	// Requested uri present?
	// Then find the handler, else send 4.04 response
	if (isRequest) {
 8008356:	7bfb      	ldrb	r3, [r7, #15]
 8008358:	2b00      	cmp	r3, #0
 800835a:	d050      	beq.n	80083fe <CoAP_HandleIncomingPacket+0x1e2>
		pRes = CoAP_FindResourceByUri(NULL, pMsg->pOptionsList);
 800835c:	68bb      	ldr	r3, [r7, #8]
 800835e:	699b      	ldr	r3, [r3, #24]
 8008360:	4619      	mov	r1, r3
 8008362:	2000      	movs	r0, #0
 8008364:	f002 feaa 	bl	800b0bc <CoAP_FindResourceByUri>
 8008368:	6178      	str	r0, [r7, #20]
		if (pRes == NULL || pRes->Handler == NULL) { //unknown resource requested
 800836a:	697b      	ldr	r3, [r7, #20]
 800836c:	2b00      	cmp	r3, #0
 800836e:	d003      	beq.n	8008378 <CoAP_HandleIncomingPacket+0x15c>
 8008370:	697b      	ldr	r3, [r7, #20]
 8008372:	69db      	ldr	r3, [r3, #28]
 8008374:	2b00      	cmp	r3, #0
 8008376:	d142      	bne.n	80083fe <CoAP_HandleIncomingPacket+0x1e2>
			if (pMsg->Type == CON) {
 8008378:	68bb      	ldr	r3, [r7, #8]
 800837a:	791b      	ldrb	r3, [r3, #4]
 800837c:	2b00      	cmp	r3, #0
 800837e:	d11e      	bne.n	80083be <CoAP_HandleIncomingPacket+0x1a2>
				CoAP_SendShortResp(ACK, RESP_NOT_FOUND_4_04, pMsg->MessageID, pMsg->Token, socketHandle, pPacket->remoteEp);
 8008380:	68bb      	ldr	r3, [r7, #8]
 8008382:	f8b3 c006 	ldrh.w	ip, [r3, #6]
 8008386:	68be      	ldr	r6, [r7, #8]
 8008388:	683b      	ldr	r3, [r7, #0]
 800838a:	ad03      	add	r5, sp, #12
 800838c:	f103 0408 	add.w	r4, r3, #8
 8008390:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008392:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008394:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008398:	e885 0003 	stmia.w	r5, {r0, r1}
 800839c:	687b      	ldr	r3, [r7, #4]
 800839e:	9302      	str	r3, [sp, #8]
 80083a0:	466b      	mov	r3, sp
 80083a2:	f106 0210 	add.w	r2, r6, #16
 80083a6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80083aa:	6018      	str	r0, [r3, #0]
 80083ac:	3304      	adds	r3, #4
 80083ae:	7019      	strb	r1, [r3, #0]
 80083b0:	68f3      	ldr	r3, [r6, #12]
 80083b2:	4662      	mov	r2, ip
 80083b4:	2184      	movs	r1, #132	; 0x84
 80083b6:	2002      	movs	r0, #2
 80083b8:	f001 fbdf 	bl	8009b7a <CoAP_SendShortResp>
			} else { // usually NON, but we better catch all
				CoAP_SendShortResp(NON, RESP_NOT_FOUND_4_04, CoAP_GetNextMid(), pMsg->Token, socketHandle, pPacket->remoteEp);
			}
			goto END;
 80083bc:	e1dc      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
				CoAP_SendShortResp(NON, RESP_NOT_FOUND_4_04, CoAP_GetNextMid(), pMsg->Token, socketHandle, pPacket->remoteEp);
 80083be:	f001 fd61 	bl	8009e84 <CoAP_GetNextMid>
 80083c2:	4603      	mov	r3, r0
 80083c4:	469c      	mov	ip, r3
 80083c6:	68be      	ldr	r6, [r7, #8]
 80083c8:	683b      	ldr	r3, [r7, #0]
 80083ca:	ad03      	add	r5, sp, #12
 80083cc:	f103 0408 	add.w	r4, r3, #8
 80083d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80083d2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80083d4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80083d8:	e885 0003 	stmia.w	r5, {r0, r1}
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	9302      	str	r3, [sp, #8]
 80083e0:	466b      	mov	r3, sp
 80083e2:	f106 0210 	add.w	r2, r6, #16
 80083e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80083ea:	6018      	str	r0, [r3, #0]
 80083ec:	3304      	adds	r3, #4
 80083ee:	7019      	strb	r1, [r3, #0]
 80083f0:	68f3      	ldr	r3, [r6, #12]
 80083f2:	4662      	mov	r2, ip
 80083f4:	2184      	movs	r1, #132	; 0x84
 80083f6:	2001      	movs	r0, #1
 80083f8:	f001 fbbf 	bl	8009b7a <CoAP_SendShortResp>
			goto END;
 80083fc:	e1bc      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		}
	}

	//INFO("Check for critical options\r\n");
	// Unknown critical Option check
	uint16_t criticalOptNum = CoAP_CheckForUnknownCriticalOption(pMsg->pOptionsList); // !=0 if at least one unknown option found
 80083fe:	68bb      	ldr	r3, [r7, #8]
 8008400:	699b      	ldr	r3, [r3, #24]
 8008402:	4618      	mov	r0, r3
 8008404:	f002 fca8 	bl	800ad58 <CoAP_CheckForUnknownCriticalOption>
 8008408:	4603      	mov	r3, r0
 800840a:	81bb      	strh	r3, [r7, #12]
	if (criticalOptNum) {
 800840c:	89bb      	ldrh	r3, [r7, #12]
 800840e:	2b00      	cmp	r3, #0
 8008410:	d048      	beq.n	80084a4 <CoAP_HandleIncomingPacket+0x288>
		INFO("- (!) Received msg has unknown critical option!!!\r\n");
 8008412:	493b      	ldr	r1, [pc, #236]	; (8008500 <CoAP_HandleIncomingPacket+0x2e4>)
 8008414:	4834      	ldr	r0, [pc, #208]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 8008416:	f022 fd4d 	bl	802aeb4 <siprintf>
 800841a:	4833      	ldr	r0, [pc, #204]	; (80084e8 <CoAP_HandleIncomingPacket+0x2cc>)
 800841c:	f7ff feec 	bl	80081f8 <hal_debug_puts>
		if (pMsg->Type == NON || pMsg->Type == ACK) {
 8008420:	68bb      	ldr	r3, [r7, #8]
 8008422:	791b      	ldrb	r3, [r3, #4]
 8008424:	2b01      	cmp	r3, #1
 8008426:	f000 819a 	beq.w	800875e <CoAP_HandleIncomingPacket+0x542>
 800842a:	68bb      	ldr	r3, [r7, #8]
 800842c:	791b      	ldrb	r3, [r3, #4]
 800842e:	2b02      	cmp	r3, #2
 8008430:	f000 8195 	beq.w	800875e <CoAP_HandleIncomingPacket+0x542>
			// NON messages are just silently ignored
			goto END;
		} else if (pMsg->Type == CON) {
 8008434:	68bb      	ldr	r3, [r7, #8]
 8008436:	791b      	ldrb	r3, [r3, #4]
 8008438:	2b00      	cmp	r3, #0
 800843a:	f040 8192 	bne.w	8008762 <CoAP_HandleIncomingPacket+0x546>
			if (isRequest) {
 800843e:	7bfb      	ldrb	r3, [r7, #15]
 8008440:	2b00      	cmp	r3, #0
 8008442:	d01e      	beq.n	8008482 <CoAP_HandleIncomingPacket+0x266>
				//todo: add diagnostic payload which option rejectet
				CoAP_SendShortResp(ACK, RESP_BAD_OPTION_4_02, pMsg->MessageID, pMsg->Token, socketHandle, pPacket->remoteEp);
 8008444:	68bb      	ldr	r3, [r7, #8]
 8008446:	f8b3 c006 	ldrh.w	ip, [r3, #6]
 800844a:	68be      	ldr	r6, [r7, #8]
 800844c:	683b      	ldr	r3, [r7, #0]
 800844e:	ad03      	add	r5, sp, #12
 8008450:	f103 0408 	add.w	r4, r3, #8
 8008454:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008456:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008458:	e894 0003 	ldmia.w	r4, {r0, r1}
 800845c:	e885 0003 	stmia.w	r5, {r0, r1}
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	9302      	str	r3, [sp, #8]
 8008464:	466b      	mov	r3, sp
 8008466:	f106 0210 	add.w	r2, r6, #16
 800846a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800846e:	6018      	str	r0, [r3, #0]
 8008470:	3304      	adds	r3, #4
 8008472:	7019      	strb	r1, [r3, #0]
 8008474:	68f3      	ldr	r3, [r6, #12]
 8008476:	4662      	mov	r2, ip
 8008478:	2182      	movs	r1, #130	; 0x82
 800847a:	2002      	movs	r0, #2
 800847c:	f001 fb7d 	bl	8009b7a <CoAP_SendShortResp>
			} else {
				//reject externals servers response
				CoAP_SendEmptyRST(pMsg->MessageID, socketHandle, pPacket->remoteEp);
			}
		}
		goto END;
 8008480:	e16f      	b.n	8008762 <CoAP_HandleIncomingPacket+0x546>
				CoAP_SendEmptyRST(pMsg->MessageID, socketHandle, pPacket->remoteEp);
 8008482:	68bb      	ldr	r3, [r7, #8]
 8008484:	88de      	ldrh	r6, [r3, #6]
 8008486:	683c      	ldr	r4, [r7, #0]
 8008488:	466d      	mov	r5, sp
 800848a:	f104 0310 	add.w	r3, r4, #16
 800848e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008490:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008494:	f104 0308 	add.w	r3, r4, #8
 8008498:	cb0c      	ldmia	r3, {r2, r3}
 800849a:	6879      	ldr	r1, [r7, #4]
 800849c:	4630      	mov	r0, r6
 800849e:	f001 fba0 	bl	8009be2 <CoAP_SendEmptyRST>
		goto END;
 80084a2:	e15e      	b.n	8008762 <CoAP_HandleIncomingPacket+0x546>
	//*****************

	//INFO("Prechecks done. Handle message by type\r\n");
	// try to include message into new or existing server/client interaction

	CoAP_Interaction_t* pIA = CoAP_FindInteractionByMessageIdAndEp(CoAP.pInteractions, pMsg->MessageID, &(pPacket->remoteEp));
 80084a4:	4b17      	ldr	r3, [pc, #92]	; (8008504 <CoAP_HandleIncomingPacket+0x2e8>)
 80084a6:	6818      	ldr	r0, [r3, #0]
 80084a8:	68bb      	ldr	r3, [r7, #8]
 80084aa:	88d9      	ldrh	r1, [r3, #6]
 80084ac:	683b      	ldr	r3, [r7, #0]
 80084ae:	3308      	adds	r3, #8
 80084b0:	461a      	mov	r2, r3
 80084b2:	f7ff fbf3 	bl	8007c9c <CoAP_FindInteractionByMessageIdAndEp>
 80084b6:	6138      	str	r0, [r7, #16]

	if (pIA != NULL) {
 80084b8:	693b      	ldr	r3, [r7, #16]
 80084ba:	2b00      	cmp	r3, #0
 80084bc:	d002      	beq.n	80084c4 <CoAP_HandleIncomingPacket+0x2a8>
		pIA->SleepUntil = 0; // Wakeup interaction
 80084be:	693b      	ldr	r3, [r7, #16]
 80084c0:	2200      	movs	r2, #0
 80084c2:	635a      	str	r2, [r3, #52]	; 0x34
	}

	switch (pMsg->Type) {
 80084c4:	68bb      	ldr	r3, [r7, #8]
 80084c6:	791b      	ldrb	r3, [r3, #4]
 80084c8:	2b03      	cmp	r3, #3
 80084ca:	d01d      	beq.n	8008508 <CoAP_HandleIncomingPacket+0x2ec>
 80084cc:	2b03      	cmp	r3, #3
 80084ce:	f300 814a 	bgt.w	8008766 <CoAP_HandleIncomingPacket+0x54a>
 80084d2:	2b01      	cmp	r3, #1
 80084d4:	dc02      	bgt.n	80084dc <CoAP_HandleIncomingPacket+0x2c0>
 80084d6:	2b00      	cmp	r3, #0
 80084d8:	da73      	bge.n	80085c2 <CoAP_HandleIncomingPacket+0x3a6>
		}

		break;
	}
	default: {
		goto END;
 80084da:	e144      	b.n	8008766 <CoAP_HandleIncomingPacket+0x54a>
	switch (pMsg->Type) {
 80084dc:	2b02      	cmp	r3, #2
 80084de:	d026      	beq.n	800852e <CoAP_HandleIncomingPacket+0x312>
		goto END;
 80084e0:	e141      	b.n	8008766 <CoAP_HandleIncomingPacket+0x54a>
 80084e2:	bf00      	nop
 80084e4:	0802c670 	.word	0x0802c670
 80084e8:	20000b54 	.word	0x20000b54
 80084ec:	0802c6c0 	.word	0x0802c6c0
 80084f0:	0802c6d4 	.word	0x0802c6d4
 80084f4:	0802c6d8 	.word	0x0802c6d8
 80084f8:	0802c6f4 	.word	0x0802c6f4
 80084fc:	0802c700 	.word	0x0802c700
 8008500:	0802c710 	.word	0x0802c710
 8008504:	20000b0c 	.word	0x20000b0c
		if (pIA == NULL) {
 8008508:	693b      	ldr	r3, [r7, #16]
 800850a:	2b00      	cmp	r3, #0
 800850c:	d10a      	bne.n	8008524 <CoAP_HandleIncomingPacket+0x308>
			INFO("- (?) Got Reset on (no more?) existing message id: %d\r\n", pMsg->MessageID);
 800850e:	68bb      	ldr	r3, [r7, #8]
 8008510:	88db      	ldrh	r3, [r3, #6]
 8008512:	461a      	mov	r2, r3
 8008514:	499e      	ldr	r1, [pc, #632]	; (8008790 <CoAP_HandleIncomingPacket+0x574>)
 8008516:	489f      	ldr	r0, [pc, #636]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 8008518:	f022 fccc 	bl	802aeb4 <siprintf>
 800851c:	489d      	ldr	r0, [pc, #628]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 800851e:	f7ff fe6b 	bl	80081f8 <hal_debug_puts>
			goto END;
 8008522:	e129      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		pIA->ResConfirmState = RST_SEND;
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	2202      	movs	r2, #2
 8008528:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
		goto END;
 800852c:	e124      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		if (pIA == NULL) {
 800852e:	693b      	ldr	r3, [r7, #16]
 8008530:	2b00      	cmp	r3, #0
 8008532:	d10a      	bne.n	800854a <CoAP_HandleIncomingPacket+0x32e>
			INFO("- (?) Got ACK on (no more?) existing message id: %d\r\n", pMsg->MessageID);
 8008534:	68bb      	ldr	r3, [r7, #8]
 8008536:	88db      	ldrh	r3, [r3, #6]
 8008538:	461a      	mov	r2, r3
 800853a:	4997      	ldr	r1, [pc, #604]	; (8008798 <CoAP_HandleIncomingPacket+0x57c>)
 800853c:	4895      	ldr	r0, [pc, #596]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 800853e:	f022 fcb9 	bl	802aeb4 <siprintf>
 8008542:	4894      	ldr	r0, [pc, #592]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 8008544:	f7ff fe58 	bl	80081f8 <hal_debug_puts>
			goto END;
 8008548:	e116      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		pIA->ResConfirmState = ACK_SEND;
 800854a:	693b      	ldr	r3, [r7, #16]
 800854c:	2201      	movs	r2, #1
 800854e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
		if (pMsg->Code != EMPTY) {
 8008552:	68bb      	ldr	r3, [r7, #8]
 8008554:	795b      	ldrb	r3, [r3, #5]
 8008556:	2b00      	cmp	r3, #0
 8008558:	f000 8107 	beq.w	800876a <CoAP_HandleIncomingPacket+0x54e>
			if (pIA->Role == COAP_ROLE_CLIENT && CoAP_TokenEqual(pIA->pReqMsg->Token, pMsg->Token) && pIA->State == COAP_STATE_WAITING_RESPONSE) {
 800855c:	693b      	ldr	r3, [r7, #16]
 800855e:	791b      	ldrb	r3, [r3, #4]
 8008560:	2b03      	cmp	r3, #3
 8008562:	d126      	bne.n	80085b2 <CoAP_HandleIncomingPacket+0x396>
 8008564:	693b      	ldr	r3, [r7, #16]
 8008566:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8008568:	68ba      	ldr	r2, [r7, #8]
 800856a:	466b      	mov	r3, sp
 800856c:	f102 0110 	add.w	r1, r2, #16
 8008570:	c903      	ldmia	r1, {r0, r1}
 8008572:	6018      	str	r0, [r3, #0]
 8008574:	3304      	adds	r3, #4
 8008576:	7019      	strb	r1, [r3, #0]
 8008578:	68d3      	ldr	r3, [r2, #12]
 800857a:	f104 020c 	add.w	r2, r4, #12
 800857e:	ca07      	ldmia	r2, {r0, r1, r2}
 8008580:	f000 ff92 	bl	80094a8 <CoAP_TokenEqual>
 8008584:	4603      	mov	r3, r0
 8008586:	2b00      	cmp	r3, #0
 8008588:	d013      	beq.n	80085b2 <CoAP_HandleIncomingPacket+0x396>
 800858a:	693b      	ldr	r3, [r7, #16]
 800858c:	795b      	ldrb	r3, [r3, #5]
 800858e:	2b08      	cmp	r3, #8
 8008590:	d10f      	bne.n	80085b2 <CoAP_HandleIncomingPacket+0x396>
				if (pIA->pRespMsg != NULL) {
 8008592:	693b      	ldr	r3, [r7, #16]
 8008594:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008596:	2b00      	cmp	r3, #0
 8008598:	d004      	beq.n	80085a4 <CoAP_HandleIncomingPacket+0x388>
					CoAP_free_Message(&(pIA->pRespMsg)); //free eventually present older response (todo: check if this is possible!?)
 800859a:	693b      	ldr	r3, [r7, #16]
 800859c:	334c      	adds	r3, #76	; 0x4c
 800859e:	4618      	mov	r0, r3
 80085a0:	f000 ffe8 	bl	8009574 <CoAP_free_Message>
				pIA->pRespMsg = pMsg; //attach just received message for further actions in IA [client] state-machine & return
 80085a4:	68ba      	ldr	r2, [r7, #8]
 80085a6:	693b      	ldr	r3, [r7, #16]
 80085a8:	64da      	str	r2, [r3, #76]	; 0x4c
				pIA->State = COAP_STATE_HANDLE_RESPONSE;
 80085aa:	693b      	ldr	r3, [r7, #16]
 80085ac:	2209      	movs	r2, #9
 80085ae:	715a      	strb	r2, [r3, #5]
				return;
 80085b0:	e0eb      	b.n	800878a <CoAP_HandleIncomingPacket+0x56e>
				INFO("- could not piggybacked response to any request!\r\n");
 80085b2:	497a      	ldr	r1, [pc, #488]	; (800879c <CoAP_HandleIncomingPacket+0x580>)
 80085b4:	4877      	ldr	r0, [pc, #476]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 80085b6:	f022 fc7d 	bl	802aeb4 <siprintf>
 80085ba:	4876      	ldr	r0, [pc, #472]	; (8008794 <CoAP_HandleIncomingPacket+0x578>)
 80085bc:	f7ff fe1c 	bl	80081f8 <hal_debug_puts>
		break;
 80085c0:	e0d3      	b.n	800876a <CoAP_HandleIncomingPacket+0x54e>
		if (isRequest) {
 80085c2:	7bfb      	ldrb	r3, [r7, #15]
 80085c4:	2b00      	cmp	r3, #0
 80085c6:	d037      	beq.n	8008638 <CoAP_HandleIncomingPacket+0x41c>
			res = CoAP_StartNewServerInteraction(pMsg, pRes, socketHandle, pPacket);
 80085c8:	68b8      	ldr	r0, [r7, #8]
 80085ca:	683b      	ldr	r3, [r7, #0]
 80085cc:	687a      	ldr	r2, [r7, #4]
 80085ce:	6979      	ldr	r1, [r7, #20]
 80085d0:	f7ff fc56 	bl	8007e80 <CoAP_StartNewServerInteraction>
 80085d4:	4603      	mov	r3, r0
 80085d6:	73bb      	strb	r3, [r7, #14]
			if (res == COAP_OK) {
 80085d8:	7bbb      	ldrb	r3, [r7, #14]
 80085da:	2b00      	cmp	r3, #0
 80085dc:	f000 80d2 	beq.w	8008784 <CoAP_HandleIncomingPacket+0x568>
			} else if (res == COAP_ERR_EXISTING) {
 80085e0:	7bbb      	ldrb	r3, [r7, #14]
 80085e2:	2b11      	cmp	r3, #17
 80085e4:	f000 80c3 	beq.w	800876e <CoAP_HandleIncomingPacket+0x552>
			} else if (res == COAP_ERR_OUT_OF_MEMORY) {
 80085e8:	7bbb      	ldrb	r3, [r7, #14]
 80085ea:	2b0d      	cmp	r3, #13
 80085ec:	f040 80c1 	bne.w	8008772 <CoAP_HandleIncomingPacket+0x556>
				if (pMsg->Type == CON) {
 80085f0:	68bb      	ldr	r3, [r7, #8]
 80085f2:	791b      	ldrb	r3, [r3, #4]
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	f040 80be 	bne.w	8008776 <CoAP_HandleIncomingPacket+0x55a>
					CoAP_SendShortResp(ACK, RESP_INTERNAL_SERVER_ERROR_5_00, pMsg->MessageID, pMsg->Token, socketHandle, pPacket->remoteEp);
 80085fa:	68bb      	ldr	r3, [r7, #8]
 80085fc:	f8b3 c006 	ldrh.w	ip, [r3, #6]
 8008600:	68be      	ldr	r6, [r7, #8]
 8008602:	683b      	ldr	r3, [r7, #0]
 8008604:	ad03      	add	r5, sp, #12
 8008606:	f103 0408 	add.w	r4, r3, #8
 800860a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800860c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800860e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008612:	e885 0003 	stmia.w	r5, {r0, r1}
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	9302      	str	r3, [sp, #8]
 800861a:	466b      	mov	r3, sp
 800861c:	f106 0210 	add.w	r2, r6, #16
 8008620:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008624:	6018      	str	r0, [r3, #0]
 8008626:	3304      	adds	r3, #4
 8008628:	7019      	strb	r1, [r3, #0]
 800862a:	68f3      	ldr	r3, [r6, #12]
 800862c:	4662      	mov	r2, ip
 800862e:	21a0      	movs	r1, #160	; 0xa0
 8008630:	2002      	movs	r0, #2
 8008632:	f001 faa2 	bl	8009b7a <CoAP_SendShortResp>
				goto END;
 8008636:	e09e      	b.n	8008776 <CoAP_HandleIncomingPacket+0x55a>
			for (pIA = CoAP.pInteractions; pIA != NULL; pIA = pIA->next) {
 8008638:	4b59      	ldr	r3, [pc, #356]	; (80087a0 <CoAP_HandleIncomingPacket+0x584>)
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	613b      	str	r3, [r7, #16]
 800863e:	e066      	b.n	800870e <CoAP_HandleIncomingPacket+0x4f2>
				if (pIA->Role == COAP_ROLE_CLIENT && CoAP_TokenEqual(pIA->pReqMsg->Token, pMsg->Token) && EpAreEqual(&(pPacket->remoteEp), &(pIA->RemoteEp))) {
 8008640:	693b      	ldr	r3, [r7, #16]
 8008642:	791b      	ldrb	r3, [r3, #4]
 8008644:	2b03      	cmp	r3, #3
 8008646:	d15f      	bne.n	8008708 <CoAP_HandleIncomingPacket+0x4ec>
 8008648:	693b      	ldr	r3, [r7, #16]
 800864a:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800864c:	68ba      	ldr	r2, [r7, #8]
 800864e:	466b      	mov	r3, sp
 8008650:	f102 0110 	add.w	r1, r2, #16
 8008654:	c903      	ldmia	r1, {r0, r1}
 8008656:	6018      	str	r0, [r3, #0]
 8008658:	3304      	adds	r3, #4
 800865a:	7019      	strb	r1, [r3, #0]
 800865c:	68d3      	ldr	r3, [r2, #12]
 800865e:	f104 020c 	add.w	r2, r4, #12
 8008662:	ca07      	ldmia	r2, {r0, r1, r2}
 8008664:	f000 ff20 	bl	80094a8 <CoAP_TokenEqual>
 8008668:	4603      	mov	r3, r0
 800866a:	2b00      	cmp	r3, #0
 800866c:	d04c      	beq.n	8008708 <CoAP_HandleIncomingPacket+0x4ec>
 800866e:	683b      	ldr	r3, [r7, #0]
 8008670:	f103 0208 	add.w	r2, r3, #8
 8008674:	693b      	ldr	r3, [r7, #16]
 8008676:	3310      	adds	r3, #16
 8008678:	4619      	mov	r1, r3
 800867a:	4610      	mov	r0, r2
 800867c:	f003 f84e 	bl	800b71c <EpAreEqual>
 8008680:	4603      	mov	r3, r0
 8008682:	2b00      	cmp	r3, #0
 8008684:	d040      	beq.n	8008708 <CoAP_HandleIncomingPacket+0x4ec>
					if (pIA->State == COAP_STATE_WAITING_RESPONSE || pIA->State == COAP_STATE_HANDLE_RESPONSE) {
 8008686:	693b      	ldr	r3, [r7, #16]
 8008688:	795b      	ldrb	r3, [r3, #5]
 800868a:	2b08      	cmp	r3, #8
 800868c:	d003      	beq.n	8008696 <CoAP_HandleIncomingPacket+0x47a>
 800868e:	693b      	ldr	r3, [r7, #16]
 8008690:	795b      	ldrb	r3, [r3, #5]
 8008692:	2b09      	cmp	r3, #9
 8008694:	d10e      	bne.n	80086b4 <CoAP_HandleIncomingPacket+0x498>
						if (pIA->pRespMsg != NULL) {
 8008696:	693b      	ldr	r3, [r7, #16]
 8008698:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800869a:	2b00      	cmp	r3, #0
 800869c:	d004      	beq.n	80086a8 <CoAP_HandleIncomingPacket+0x48c>
							CoAP_free_Message(&(pIA->pRespMsg)); //free eventually present older response (todo: check if this is possible!?)
 800869e:	693b      	ldr	r3, [r7, #16]
 80086a0:	334c      	adds	r3, #76	; 0x4c
 80086a2:	4618      	mov	r0, r3
 80086a4:	f000 ff66 	bl	8009574 <CoAP_free_Message>
						pIA->pRespMsg = pMsg; //attach just received message for further actions in IA [client] state-machine & return
 80086a8:	68ba      	ldr	r2, [r7, #8]
 80086aa:	693b      	ldr	r3, [r7, #16]
 80086ac:	64da      	str	r2, [r3, #76]	; 0x4c
						pIA->State = COAP_STATE_HANDLE_RESPONSE;
 80086ae:	693b      	ldr	r3, [r7, #16]
 80086b0:	2209      	movs	r2, #9
 80086b2:	715a      	strb	r2, [r3, #5]
					if (pMsg->Type == CON) {
 80086b4:	68bb      	ldr	r3, [r7, #8]
 80086b6:	791b      	ldrb	r3, [r3, #4]
 80086b8:	2b00      	cmp	r3, #0
 80086ba:	d165      	bne.n	8008788 <CoAP_HandleIncomingPacket+0x56c>
						if (CoAP_SendShortResp(ACK, EMPTY, pMsg->MessageID, pMsg->Token, socketHandle, pPacket->remoteEp) == COAP_OK) {
 80086bc:	68bb      	ldr	r3, [r7, #8]
 80086be:	f8b3 c006 	ldrh.w	ip, [r3, #6]
 80086c2:	68be      	ldr	r6, [r7, #8]
 80086c4:	683b      	ldr	r3, [r7, #0]
 80086c6:	ad03      	add	r5, sp, #12
 80086c8:	f103 0408 	add.w	r4, r3, #8
 80086cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80086ce:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80086d0:	e894 0003 	ldmia.w	r4, {r0, r1}
 80086d4:	e885 0003 	stmia.w	r5, {r0, r1}
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	9302      	str	r3, [sp, #8]
 80086dc:	466b      	mov	r3, sp
 80086de:	f106 0210 	add.w	r2, r6, #16
 80086e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80086e6:	6018      	str	r0, [r3, #0]
 80086e8:	3304      	adds	r3, #4
 80086ea:	7019      	strb	r1, [r3, #0]
 80086ec:	68f3      	ldr	r3, [r6, #12]
 80086ee:	4662      	mov	r2, ip
 80086f0:	2100      	movs	r1, #0
 80086f2:	2002      	movs	r0, #2
 80086f4:	f001 fa41 	bl	8009b7a <CoAP_SendShortResp>
 80086f8:	4603      	mov	r3, r0
 80086fa:	2b00      	cmp	r3, #0
 80086fc:	d144      	bne.n	8008788 <CoAP_HandleIncomingPacket+0x56c>
							pIA->ResConfirmState = ACK_SEND;
 80086fe:	693b      	ldr	r3, [r7, #16]
 8008700:	2201      	movs	r2, #1
 8008702:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
					return;
 8008706:	e03f      	b.n	8008788 <CoAP_HandleIncomingPacket+0x56c>
			for (pIA = CoAP.pInteractions; pIA != NULL; pIA = pIA->next) {
 8008708:	693b      	ldr	r3, [r7, #16]
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	613b      	str	r3, [r7, #16]
 800870e:	693b      	ldr	r3, [r7, #16]
 8008710:	2b00      	cmp	r3, #0
 8008712:	d195      	bne.n	8008640 <CoAP_HandleIncomingPacket+0x424>
			CoAP_SendShortResp(RST, EMPTY, pMsg->MessageID, pMsg->Token, socketHandle, pPacket->remoteEp);
 8008714:	68bb      	ldr	r3, [r7, #8]
 8008716:	f8b3 c006 	ldrh.w	ip, [r3, #6]
 800871a:	68be      	ldr	r6, [r7, #8]
 800871c:	683b      	ldr	r3, [r7, #0]
 800871e:	ad03      	add	r5, sp, #12
 8008720:	f103 0408 	add.w	r4, r3, #8
 8008724:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008726:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008728:	e894 0003 	ldmia.w	r4, {r0, r1}
 800872c:	e885 0003 	stmia.w	r5, {r0, r1}
 8008730:	687b      	ldr	r3, [r7, #4]
 8008732:	9302      	str	r3, [sp, #8]
 8008734:	466b      	mov	r3, sp
 8008736:	f106 0210 	add.w	r2, r6, #16
 800873a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800873e:	6018      	str	r0, [r3, #0]
 8008740:	3304      	adds	r3, #4
 8008742:	7019      	strb	r1, [r3, #0]
 8008744:	68f3      	ldr	r3, [r6, #12]
 8008746:	4662      	mov	r2, ip
 8008748:	2100      	movs	r1, #0
 800874a:	2003      	movs	r0, #3
 800874c:	f001 fa15 	bl	8009b7a <CoAP_SendShortResp>
			goto END;
 8008750:	e012      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		goto END;
 8008752:	bf00      	nop
 8008754:	e010      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		goto END;
 8008756:	bf00      	nop
 8008758:	e00e      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		goto END;
 800875a:	bf00      	nop
 800875c:	e00c      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
			goto END;
 800875e:	bf00      	nop
 8008760:	e00a      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		goto END;
 8008762:	bf00      	nop
 8008764:	e008      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		goto END;
 8008766:	bf00      	nop
 8008768:	e006      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		break;
 800876a:	bf00      	nop
 800876c:	e004      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
				goto END;
 800876e:	bf00      	nop
 8008770:	e002      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
		break;
 8008772:	bf00      	nop
 8008774:	e000      	b.n	8008778 <CoAP_HandleIncomingPacket+0x55c>
				goto END;
 8008776:	bf00      	nop
	}
	}
	END: // only reached if no interaction has been started (return statement)
	CoAP_free_Message(&pMsg); // free if not used inside interaction
 8008778:	f107 0308 	add.w	r3, r7, #8
 800877c:	4618      	mov	r0, r3
 800877e:	f000 fef9 	bl	8009574 <CoAP_free_Message>
 8008782:	e002      	b.n	800878a <CoAP_HandleIncomingPacket+0x56e>
				return;
 8008784:	bf00      	nop
 8008786:	e000      	b.n	800878a <CoAP_HandleIncomingPacket+0x56e>
					return;
 8008788:	bf00      	nop
}
 800878a:	371c      	adds	r7, #28
 800878c:	46bd      	mov	sp, r7
 800878e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008790:	0802c744 	.word	0x0802c744
 8008794:	20000b54 	.word	0x20000b54
 8008798:	0802c77c 	.word	0x0802c77c
 800879c:	0802c7b4 	.word	0x0802c7b4
 80087a0:	20000b0c 	.word	0x20000b0c

080087a4 <SendResp>:

static CoAP_Result_t _rom SendResp(CoAP_Interaction_t* pIA, CoAP_InteractionState_t nextIAState) {
 80087a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087a6:	b08b      	sub	sp, #44	; 0x2c
 80087a8:	af04      	add	r7, sp, #16
 80087aa:	60f8      	str	r0, [r7, #12]
 80087ac:	460b      	mov	r3, r1
 80087ae:	72fb      	strb	r3, [r7, #11]
	CoAP_Result_t res = CoAP_SendMsg(pIA->pRespMsg, pIA->socketHandle, pIA->RemoteEp);
 80087b0:	68fb      	ldr	r3, [r7, #12]
 80087b2:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80087b4:	68fb      	ldr	r3, [r7, #12]
 80087b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087b8:	607b      	str	r3, [r7, #4]
 80087ba:	68fc      	ldr	r4, [r7, #12]
 80087bc:	466d      	mov	r5, sp
 80087be:	f104 0318 	add.w	r3, r4, #24
 80087c2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80087c4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80087c8:	f104 0310 	add.w	r3, r4, #16
 80087cc:	cb0c      	ldmia	r3, {r2, r3}
 80087ce:	6879      	ldr	r1, [r7, #4]
 80087d0:	4630      	mov	r0, r6
 80087d2:	f001 fa2f 	bl	8009c34 <CoAP_SendMsg>
 80087d6:	4603      	mov	r3, r0
 80087d8:	75fb      	strb	r3, [r7, #23]
	if (res == COAP_OK) {
 80087da:	7dfb      	ldrb	r3, [r7, #23]
 80087dc:	2b00      	cmp	r3, #0
 80087de:	d11d      	bne.n	800881c <SendResp+0x78>

		if (pIA->pRespMsg->Type == ACK) { //piggy back resp
 80087e0:	68fb      	ldr	r3, [r7, #12]
 80087e2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80087e4:	791b      	ldrb	r3, [r3, #4]
 80087e6:	2b02      	cmp	r3, #2
 80087e8:	d104      	bne.n	80087f4 <SendResp+0x50>
			pIA->ReqConfirmState = ACK_SEND;
 80087ea:	68fb      	ldr	r3, [r7, #12]
 80087ec:	2201      	movs	r2, #1
 80087ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80087f2:	e00b      	b.n	800880c <SendResp+0x68>
		} else if (pIA->pRespMsg->Type == CON) {
 80087f4:	68fb      	ldr	r3, [r7, #12]
 80087f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80087f8:	791b      	ldrb	r3, [r3, #4]
 80087fa:	2b00      	cmp	r3, #0
 80087fc:	d106      	bne.n	800880c <SendResp+0x68>
			CoAP_EnableAckTimeout(pIA, pIA->RetransCounter); //enable timeout on waiting for ack
 80087fe:	68fb      	ldr	r3, [r7, #12]
 8008800:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008804:	4619      	mov	r1, r3
 8008806:	68f8      	ldr	r0, [r7, #12]
 8008808:	f7ff fa0e 	bl	8007c28 <CoAP_EnableAckTimeout>
		} //else NON (no special handling)

		pIA->State = nextIAState; //move to next state
 800880c:	68fb      	ldr	r3, [r7, #12]
 800880e:	7afa      	ldrb	r2, [r7, #11]
 8008810:	715a      	strb	r2, [r3, #5]

		CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing//todo: in die äußere statemachine
 8008812:	68f8      	ldr	r0, [r7, #12]
 8008814:	f7ff fa84 	bl	8007d20 <CoAP_EnqueueLastInteraction>
		INFO("(!!!) SendResp(): Internal socket error on sending response! MiD: %d, CoapResult: %d", pIA->pRespMsg->MessageID, res);
		CoAP_DeleteInteraction(pIA);
		return COAP_ERR_SOCKET;
	}

	return COAP_OK;
 8008818:	2300      	movs	r3, #0
 800881a:	e00f      	b.n	800883c <SendResp+0x98>
		INFO("(!!!) SendResp(): Internal socket error on sending response! MiD: %d, CoapResult: %d", pIA->pRespMsg->MessageID, res);
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008820:	88db      	ldrh	r3, [r3, #6]
 8008822:	461a      	mov	r2, r3
 8008824:	7dfb      	ldrb	r3, [r7, #23]
 8008826:	4907      	ldr	r1, [pc, #28]	; (8008844 <SendResp+0xa0>)
 8008828:	4807      	ldr	r0, [pc, #28]	; (8008848 <SendResp+0xa4>)
 800882a:	f022 fb43 	bl	802aeb4 <siprintf>
 800882e:	4806      	ldr	r0, [pc, #24]	; (8008848 <SendResp+0xa4>)
 8008830:	f7ff fce2 	bl	80081f8 <hal_debug_puts>
		CoAP_DeleteInteraction(pIA);
 8008834:	68f8      	ldr	r0, [r7, #12]
 8008836:	f7ff fa63 	bl	8007d00 <CoAP_DeleteInteraction>
		return COAP_ERR_SOCKET;
 800883a:	230b      	movs	r3, #11
}
 800883c:	4618      	mov	r0, r3
 800883e:	371c      	adds	r7, #28
 8008840:	46bd      	mov	sp, r7
 8008842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008844:	0802c7e8 	.word	0x0802c7e8
 8008848:	20000b54 	.word	0x20000b54

0800884c <SendReq>:

static CoAP_Result_t _rom SendReq(CoAP_Interaction_t* pIA, CoAP_InteractionState_t nextIAState) {
 800884c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800884e:	b08b      	sub	sp, #44	; 0x2c
 8008850:	af04      	add	r7, sp, #16
 8008852:	60f8      	str	r0, [r7, #12]
 8008854:	460b      	mov	r3, r1
 8008856:	72fb      	strb	r3, [r7, #11]
	CoAP_Result_t res = CoAP_SendMsg(pIA->pReqMsg, pIA->socketHandle, pIA->RemoteEp);
 8008858:	68fb      	ldr	r3, [r7, #12]
 800885a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800885c:	68fb      	ldr	r3, [r7, #12]
 800885e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008860:	607b      	str	r3, [r7, #4]
 8008862:	68fc      	ldr	r4, [r7, #12]
 8008864:	466d      	mov	r5, sp
 8008866:	f104 0318 	add.w	r3, r4, #24
 800886a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800886c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008870:	f104 0310 	add.w	r3, r4, #16
 8008874:	cb0c      	ldmia	r3, {r2, r3}
 8008876:	6879      	ldr	r1, [r7, #4]
 8008878:	4630      	mov	r0, r6
 800887a:	f001 f9db 	bl	8009c34 <CoAP_SendMsg>
 800887e:	4603      	mov	r3, r0
 8008880:	75fb      	strb	r3, [r7, #23]
	if (res == COAP_OK) {
 8008882:	7dfb      	ldrb	r3, [r7, #23]
 8008884:	2b00      	cmp	r3, #0
 8008886:	d113      	bne.n	80088b0 <SendReq+0x64>

		if (pIA->pReqMsg->Type == CON) {
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800888c:	791b      	ldrb	r3, [r3, #4]
 800888e:	2b00      	cmp	r3, #0
 8008890:	d106      	bne.n	80088a0 <SendReq+0x54>
			CoAP_EnableAckTimeout(pIA, pIA->RetransCounter); //enable timeout on waiting for ack
 8008892:	68fb      	ldr	r3, [r7, #12]
 8008894:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008898:	4619      	mov	r1, r3
 800889a:	68f8      	ldr	r0, [r7, #12]
 800889c:	f7ff f9c4 	bl	8007c28 <CoAP_EnableAckTimeout>
		} //else NON (no special handling=

		pIA->State = nextIAState; //move to next state
 80088a0:	68fb      	ldr	r3, [r7, #12]
 80088a2:	7afa      	ldrb	r2, [r7, #11]
 80088a4:	715a      	strb	r2, [r3, #5]

		CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing//todo: in die äußere statemachine
 80088a6:	68f8      	ldr	r0, [r7, #12]
 80088a8:	f7ff fa3a 	bl	8007d20 <CoAP_EnqueueLastInteraction>
		INFO("(!!!) SendReq(): Internal socket error on sending response! MiD: %d, CoapResult: %d\r\n", pIA->pReqMsg->MessageID, res);
		CoAP_DeleteInteraction(pIA);
		return COAP_ERR_SOCKET;
	}

	return COAP_OK;
 80088ac:	2300      	movs	r3, #0
 80088ae:	e00f      	b.n	80088d0 <SendReq+0x84>
		INFO("(!!!) SendReq(): Internal socket error on sending response! MiD: %d, CoapResult: %d\r\n", pIA->pReqMsg->MessageID, res);
 80088b0:	68fb      	ldr	r3, [r7, #12]
 80088b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80088b4:	88db      	ldrh	r3, [r3, #6]
 80088b6:	461a      	mov	r2, r3
 80088b8:	7dfb      	ldrb	r3, [r7, #23]
 80088ba:	4907      	ldr	r1, [pc, #28]	; (80088d8 <SendReq+0x8c>)
 80088bc:	4807      	ldr	r0, [pc, #28]	; (80088dc <SendReq+0x90>)
 80088be:	f022 faf9 	bl	802aeb4 <siprintf>
 80088c2:	4806      	ldr	r0, [pc, #24]	; (80088dc <SendReq+0x90>)
 80088c4:	f7ff fc98 	bl	80081f8 <hal_debug_puts>
		CoAP_DeleteInteraction(pIA);
 80088c8:	68f8      	ldr	r0, [r7, #12]
 80088ca:	f7ff fa19 	bl	8007d00 <CoAP_DeleteInteraction>
		return COAP_ERR_SOCKET;
 80088ce:	230b      	movs	r3, #11
}
 80088d0:	4618      	mov	r0, r3
 80088d2:	371c      	adds	r7, #28
 80088d4:	46bd      	mov	sp, r7
 80088d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088d8:	0802c840 	.word	0x0802c840
 80088dc:	20000b54 	.word	0x20000b54

080088e0 <CheckRespStatus>:

//used on [server]
static CoAP_Result_t _rom CheckRespStatus(CoAP_Interaction_t* pIA) {
 80088e0:	b580      	push	{r7, lr}
 80088e2:	b082      	sub	sp, #8
 80088e4:	af00      	add	r7, sp, #0
 80088e6:	6078      	str	r0, [r7, #4]

	if (pIA->ResConfirmState == RST_SEND) {
 80088e8:	687b      	ldr	r3, [r7, #4]
 80088ea:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80088ee:	2b02      	cmp	r3, #2
 80088f0:	d108      	bne.n	8008904 <CheckRespStatus+0x24>
		INFO("- Response reset by remote client -> Interaction aborted\r\n");
 80088f2:	4937      	ldr	r1, [pc, #220]	; (80089d0 <CheckRespStatus+0xf0>)
 80088f4:	4837      	ldr	r0, [pc, #220]	; (80089d4 <CheckRespStatus+0xf4>)
 80088f6:	f022 fadd 	bl	802aeb4 <siprintf>
 80088fa:	4836      	ldr	r0, [pc, #216]	; (80089d4 <CheckRespStatus+0xf4>)
 80088fc:	f7ff fc7c 	bl	80081f8 <hal_debug_puts>
		//todo: call failure callback to user
		return COAP_ERR_REMOTE_RST;
 8008900:	2319      	movs	r3, #25
 8008902:	e061      	b.n	80089c8 <CheckRespStatus+0xe8>
	}

	if (pIA->pRespMsg->Type == NON || pIA->pRespMsg->Type == ACK) {
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008908:	791b      	ldrb	r3, [r3, #4]
 800890a:	2b01      	cmp	r3, #1
 800890c:	d004      	beq.n	8008918 <CheckRespStatus+0x38>
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008912:	791b      	ldrb	r3, [r3, #4]
 8008914:	2b02      	cmp	r3, #2
 8008916:	d10c      	bne.n	8008932 <CheckRespStatus+0x52>
		//if(CoAP_MsgIsOlderThan(pIA->pRespMsg, HOLDTIME_AFTER_TRANSACTION_END)) CoAP_DeleteInteraction(pIA); //hold if new request with same token occurs, e.g. response was lost
		//else CoAP_SetSleepInteraction(pIA, 2); //check back in 2 sec. todo: would it be better to sleep for total holdtime?
		if (CoAP_MsgIsOlderThan(pIA->pRespMsg, HOLDTIME_AFTER_NON_TRANSACTION_END)) {
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800891c:	2100      	movs	r1, #0
 800891e:	4618      	mov	r0, r3
 8008920:	f000 fe0e 	bl	8009540 <CoAP_MsgIsOlderThan>
 8008924:	4603      	mov	r3, r0
 8008926:	2b00      	cmp	r3, #0
 8008928:	d001      	beq.n	800892e <CheckRespStatus+0x4e>
			return COAP_OK;
 800892a:	2300      	movs	r3, #0
 800892c:	e04c      	b.n	80089c8 <CheckRespStatus+0xe8>
		}
		return COAP_HOLDING_BACK;
 800892e:	231d      	movs	r3, #29
 8008930:	e04a      	b.n	80089c8 <CheckRespStatus+0xe8>

	} else if (pIA->pRespMsg->Type == CON) {
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008936:	791b      	ldrb	r3, [r3, #4]
 8008938:	2b00      	cmp	r3, #0
 800893a:	d13d      	bne.n	80089b8 <CheckRespStatus+0xd8>
		if (pIA->ResConfirmState == ACK_SEND) { //everything fine!
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008942:	2b01      	cmp	r3, #1
 8008944:	d108      	bne.n	8008958 <CheckRespStatus+0x78>
			INFO("- Response ACKed by Client -> Transaction ended successfully\r\n");
 8008946:	4924      	ldr	r1, [pc, #144]	; (80089d8 <CheckRespStatus+0xf8>)
 8008948:	4822      	ldr	r0, [pc, #136]	; (80089d4 <CheckRespStatus+0xf4>)
 800894a:	f022 fab3 	bl	802aeb4 <siprintf>
 800894e:	4821      	ldr	r0, [pc, #132]	; (80089d4 <CheckRespStatus+0xf4>)
 8008950:	f7ff fc52 	bl	80081f8 <hal_debug_puts>
			//todo: call success callback to user
			return COAP_OK;
 8008954:	2300      	movs	r3, #0
 8008956:	e037      	b.n	80089c8 <CheckRespStatus+0xe8>
		} else { //check ACK/RST timeout of our CON response
			if (timeAfter(CoAP.api.rtc1HzCnt(), pIA->AckTimeout)) {
 8008958:	4b20      	ldr	r3, [pc, #128]	; (80089dc <CheckRespStatus+0xfc>)
 800895a:	685b      	ldr	r3, [r3, #4]
 800895c:	4798      	blx	r3
 800895e:	4603      	mov	r3, r0
 8008960:	461a      	mov	r2, r3
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008966:	1ad3      	subs	r3, r2, r3
 8008968:	2b00      	cmp	r3, #0
 800896a:	db1f      	blt.n	80089ac <CheckRespStatus+0xcc>
				if (pIA->RetransCounter + 1 > MAX_RETRANSMIT) { //give up
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008972:	2b02      	cmp	r3, #2
 8008974:	d90c      	bls.n	8008990 <CheckRespStatus+0xb0>
					INFO("- (!) ACK timeout on sending response, giving up! Resp.MiD: %d\r\n",
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800897a:	88db      	ldrh	r3, [r3, #6]
 800897c:	461a      	mov	r2, r3
 800897e:	4918      	ldr	r1, [pc, #96]	; (80089e0 <CheckRespStatus+0x100>)
 8008980:	4814      	ldr	r0, [pc, #80]	; (80089d4 <CheckRespStatus+0xf4>)
 8008982:	f022 fa97 	bl	802aeb4 <siprintf>
 8008986:	4813      	ldr	r0, [pc, #76]	; (80089d4 <CheckRespStatus+0xf4>)
 8008988:	f7ff fc36 	bl	80081f8 <hal_debug_puts>
							pIA->pRespMsg->MessageID);
					return COAP_ERR_OUT_OF_ATTEMPTS;
 800898c:	231a      	movs	r3, #26
 800898e:	e01b      	b.n	80089c8 <CheckRespStatus+0xe8>
				} else {
					INFO("- (!) Retry num %d\r\n", pIA->RetransCounter + 1);
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008996:	3301      	adds	r3, #1
 8008998:	461a      	mov	r2, r3
 800899a:	4912      	ldr	r1, [pc, #72]	; (80089e4 <CheckRespStatus+0x104>)
 800899c:	480d      	ldr	r0, [pc, #52]	; (80089d4 <CheckRespStatus+0xf4>)
 800899e:	f022 fa89 	bl	802aeb4 <siprintf>
 80089a2:	480c      	ldr	r0, [pc, #48]	; (80089d4 <CheckRespStatus+0xf4>)
 80089a4:	f7ff fc28 	bl	80081f8 <hal_debug_puts>
					return COAP_RETRY;
 80089a8:	231e      	movs	r3, #30
 80089aa:	e00d      	b.n	80089c8 <CheckRespStatus+0xe8>
				}
			} else {
				pIA->SleepUntil = pIA->AckTimeout; // Let the interaction sleep till the ACK timeout
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	635a      	str	r2, [r3, #52]	; 0x34
				return COAP_WAITING;
 80089b4:	231c      	movs	r3, #28
 80089b6:	e007      	b.n	80089c8 <CheckRespStatus+0xe8>
			}
		}
	}

	INFO("(!!!) CheckRespStatus(...) COAP_ERR_ARGUMENT !?!?\r\n");
 80089b8:	490b      	ldr	r1, [pc, #44]	; (80089e8 <CheckRespStatus+0x108>)
 80089ba:	4806      	ldr	r0, [pc, #24]	; (80089d4 <CheckRespStatus+0xf4>)
 80089bc:	f022 fa7a 	bl	802aeb4 <siprintf>
 80089c0:	4804      	ldr	r0, [pc, #16]	; (80089d4 <CheckRespStatus+0xf4>)
 80089c2:	f7ff fc19 	bl	80081f8 <hal_debug_puts>
	return COAP_ERR_ARGUMENT;
 80089c6:	230a      	movs	r3, #10
}
 80089c8:	4618      	mov	r0, r3
 80089ca:	3708      	adds	r7, #8
 80089cc:	46bd      	mov	sp, r7
 80089ce:	bd80      	pop	{r7, pc}
 80089d0:	0802c898 	.word	0x0802c898
 80089d4:	20000b54 	.word	0x20000b54
 80089d8:	0802c8d4 	.word	0x0802c8d4
 80089dc:	20000b0c 	.word	0x20000b0c
 80089e0:	0802c914 	.word	0x0802c914
 80089e4:	0802c958 	.word	0x0802c958
 80089e8:	0802c970 	.word	0x0802c970

080089ec <CheckReqStatus>:

//used on [CLIENT] side request to check progress of interaction
static CoAP_Result_t _rom CheckReqStatus(CoAP_Interaction_t* pIA) {
 80089ec:	b580      	push	{r7, lr}
 80089ee:	b082      	sub	sp, #8
 80089f0:	af00      	add	r7, sp, #0
 80089f2:	6078      	str	r0, [r7, #4]

	if (pIA->ReqConfirmState == RST_SEND) {
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80089fa:	2b02      	cmp	r3, #2
 80089fc:	d108      	bne.n	8008a10 <CheckReqStatus+0x24>
		INFO("- Response reset by remote server -> Interaction aborted\r\n");
 80089fe:	4938      	ldr	r1, [pc, #224]	; (8008ae0 <CheckReqStatus+0xf4>)
 8008a00:	4838      	ldr	r0, [pc, #224]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a02:	f022 fa57 	bl	802aeb4 <siprintf>
 8008a06:	4837      	ldr	r0, [pc, #220]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a08:	f7ff fbf6 	bl	80081f8 <hal_debug_puts>
		//todo: call failure callback to user
		return COAP_ERR_REMOTE_RST;
 8008a0c:	2319      	movs	r3, #25
 8008a0e:	e063      	b.n	8008ad8 <CheckReqStatus+0xec>
	}

	if (pIA->pReqMsg->Type == CON) { // We send a CON
 8008a10:	687b      	ldr	r3, [r7, #4]
 8008a12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a14:	791b      	ldrb	r3, [r3, #4]
 8008a16:	2b00      	cmp	r3, #0
 8008a18:	d14b      	bne.n	8008ab2 <CheckReqStatus+0xc6>
		if (pIA->ReqConfirmState == ACK_SEND) {
 8008a1a:	687b      	ldr	r3, [r7, #4]
 8008a1c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008a20:	2b01      	cmp	r3, #1
 8008a22:	d11a      	bne.n	8008a5a <CheckReqStatus+0x6e>
			if (CoAP_MsgIsOlderThan(pIA->pReqMsg, CLIENT_MAX_RESP_WAIT_TIME)) {
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a28:	212d      	movs	r1, #45	; 0x2d
 8008a2a:	4618      	mov	r0, r3
 8008a2c:	f000 fd88 	bl	8009540 <CoAP_MsgIsOlderThan>
 8008a30:	4603      	mov	r3, r0
 8008a32:	2b00      	cmp	r3, #0
 8008a34:	d008      	beq.n	8008a48 <CheckReqStatus+0x5c>
				INFO("- Request ACKed separate by server, but giving up to wait for actual response data\r\n");
 8008a36:	492c      	ldr	r1, [pc, #176]	; (8008ae8 <CheckReqStatus+0xfc>)
 8008a38:	482a      	ldr	r0, [pc, #168]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a3a:	f022 fa3b 	bl	802aeb4 <siprintf>
 8008a3e:	4829      	ldr	r0, [pc, #164]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a40:	f7ff fbda 	bl	80081f8 <hal_debug_puts>
				return COAP_ERR_TIMEOUT;
 8008a44:	231b      	movs	r3, #27
 8008a46:	e047      	b.n	8008ad8 <CheckReqStatus+0xec>
			}

			INFO("- Request ACKed separate by server -> Waiting for actual response\r\n");
 8008a48:	4928      	ldr	r1, [pc, #160]	; (8008aec <CheckReqStatus+0x100>)
 8008a4a:	4826      	ldr	r0, [pc, #152]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a4c:	f022 fa32 	bl	802aeb4 <siprintf>
 8008a50:	4824      	ldr	r0, [pc, #144]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a52:	f7ff fbd1 	bl	80081f8 <hal_debug_puts>
			return COAP_WAITING;
 8008a56:	231c      	movs	r3, #28
 8008a58:	e03e      	b.n	8008ad8 <CheckReqStatus+0xec>
		} else { //check ACK/RST timeout of our CON request
			if (timeAfter(CoAP.api.rtc1HzCnt(), pIA->AckTimeout)) {
 8008a5a:	4b25      	ldr	r3, [pc, #148]	; (8008af0 <CheckReqStatus+0x104>)
 8008a5c:	685b      	ldr	r3, [r3, #4]
 8008a5e:	4798      	blx	r3
 8008a60:	4603      	mov	r3, r0
 8008a62:	461a      	mov	r2, r3
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008a68:	1ad3      	subs	r3, r2, r3
 8008a6a:	2b00      	cmp	r3, #0
 8008a6c:	db1f      	blt.n	8008aae <CheckReqStatus+0xc2>
				if (pIA->RetransCounter + 1 > MAX_RETRANSMIT) { //give up
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008a74:	2b02      	cmp	r3, #2
 8008a76:	d90c      	bls.n	8008a92 <CheckReqStatus+0xa6>
					INFO("- (!) ACK timeout on sending request, giving up! MiD: %d\r\n", pIA->pReqMsg->MessageID);
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008a7c:	88db      	ldrh	r3, [r3, #6]
 8008a7e:	461a      	mov	r2, r3
 8008a80:	491c      	ldr	r1, [pc, #112]	; (8008af4 <CheckReqStatus+0x108>)
 8008a82:	4818      	ldr	r0, [pc, #96]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a84:	f022 fa16 	bl	802aeb4 <siprintf>
 8008a88:	4816      	ldr	r0, [pc, #88]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008a8a:	f7ff fbb5 	bl	80081f8 <hal_debug_puts>
					return COAP_ERR_OUT_OF_ATTEMPTS;
 8008a8e:	231a      	movs	r3, #26
 8008a90:	e022      	b.n	8008ad8 <CheckReqStatus+0xec>
				} else {
					INFO("- (!) Retry num %d\r\n", pIA->RetransCounter + 1);
 8008a92:	687b      	ldr	r3, [r7, #4]
 8008a94:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008a98:	3301      	adds	r3, #1
 8008a9a:	461a      	mov	r2, r3
 8008a9c:	4916      	ldr	r1, [pc, #88]	; (8008af8 <CheckReqStatus+0x10c>)
 8008a9e:	4811      	ldr	r0, [pc, #68]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008aa0:	f022 fa08 	bl	802aeb4 <siprintf>
 8008aa4:	480f      	ldr	r0, [pc, #60]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008aa6:	f7ff fba7 	bl	80081f8 <hal_debug_puts>
					return COAP_RETRY;
 8008aaa:	231e      	movs	r3, #30
 8008aac:	e014      	b.n	8008ad8 <CheckReqStatus+0xec>
				}
			} else {
				return COAP_WAITING;
 8008aae:	231c      	movs	r3, #28
 8008ab0:	e012      	b.n	8008ad8 <CheckReqStatus+0xec>
			}
		}
	} else { // request type = NON
		if (CoAP_MsgIsOlderThan(pIA->pReqMsg, CLIENT_MAX_RESP_WAIT_TIME)) {
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008ab6:	212d      	movs	r1, #45	; 0x2d
 8008ab8:	4618      	mov	r0, r3
 8008aba:	f000 fd41 	bl	8009540 <CoAP_MsgIsOlderThan>
 8008abe:	4603      	mov	r3, r0
 8008ac0:	2b00      	cmp	r3, #0
 8008ac2:	d008      	beq.n	8008ad6 <CheckReqStatus+0xea>
			INFO("- [NON request]: Giving up to wait for actual response data\r\n");
 8008ac4:	490d      	ldr	r1, [pc, #52]	; (8008afc <CheckReqStatus+0x110>)
 8008ac6:	4807      	ldr	r0, [pc, #28]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008ac8:	f022 f9f4 	bl	802aeb4 <siprintf>
 8008acc:	4805      	ldr	r0, [pc, #20]	; (8008ae4 <CheckReqStatus+0xf8>)
 8008ace:	f7ff fb93 	bl	80081f8 <hal_debug_puts>
			return COAP_ERR_TIMEOUT;
 8008ad2:	231b      	movs	r3, #27
 8008ad4:	e000      	b.n	8008ad8 <CheckReqStatus+0xec>
		} else
			return COAP_WAITING;
 8008ad6:	231c      	movs	r3, #28
	}

	INFO("(!!!) CheckReqStatus(...) COAP_ERR_ARGUMENT !?!?\r\n");
	return COAP_ERR_ARGUMENT;
}
 8008ad8:	4618      	mov	r0, r3
 8008ada:	3708      	adds	r7, #8
 8008adc:	46bd      	mov	sp, r7
 8008ade:	bd80      	pop	{r7, pc}
 8008ae0:	0802c9a4 	.word	0x0802c9a4
 8008ae4:	20000b54 	.word	0x20000b54
 8008ae8:	0802c9e0 	.word	0x0802c9e0
 8008aec:	0802ca38 	.word	0x0802ca38
 8008af0:	20000b0c 	.word	0x20000b0c
 8008af4:	0802ca7c 	.word	0x0802ca7c
 8008af8:	0802c958 	.word	0x0802c958
 8008afc:	0802cab8 	.word	0x0802cab8

08008b00 <handleServerInteraction>:
	CoAP_Socket_t* socket = AllocSocket();
	socket->Handle = handle;
	return socket;
}

static void handleServerInteraction(CoAP_Interaction_t* pIA) {
 8008b00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b02:	b089      	sub	sp, #36	; 0x24
 8008b04:	af04      	add	r7, sp, #16
 8008b06:	6078      	str	r0, [r7, #4]
	if (pIA->State == COAP_STATE_HANDLE_REQUEST ||
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	795b      	ldrb	r3, [r3, #5]
 8008b0c:	2b01      	cmp	r3, #1
 8008b0e:	d008      	beq.n	8008b22 <handleServerInteraction+0x22>
			pIA->State == COAP_STATE_RESOURCE_POSTPONE_EMPTY_ACK_SENT ||
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	795b      	ldrb	r3, [r3, #5]
	if (pIA->State == COAP_STATE_HANDLE_REQUEST ||
 8008b14:	2b02      	cmp	r3, #2
 8008b16:	d004      	beq.n	8008b22 <handleServerInteraction+0x22>
			pIA->State == COAP_STATE_RESPONSE_WAITING_LEISURE) {
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	795b      	ldrb	r3, [r3, #5]
			pIA->State == COAP_STATE_RESOURCE_POSTPONE_EMPTY_ACK_SENT ||
 8008b1c:	2b04      	cmp	r3, #4
 8008b1e:	f040 81b8 	bne.w	8008e92 <handleServerInteraction+0x392>

		if (pIA->ReqMetaInfo.Type == META_INFO_MULTICAST) {
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008b28:	2b02      	cmp	r3, #2
 8008b2a:	d128      	bne.n	8008b7e <handleServerInteraction+0x7e>
			// Messages sent via multicast MUST be NON-confirmable.
			if (pIA->pReqMsg->Type == CON) {
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b30:	791b      	ldrb	r3, [r3, #4]
 8008b32:	2b00      	cmp	r3, #0
 8008b34:	d10a      	bne.n	8008b4c <handleServerInteraction+0x4c>
				INFO("Request received from multicast endpoint is not allowed");
 8008b36:	4999      	ldr	r1, [pc, #612]	; (8008d9c <handleServerInteraction+0x29c>)
 8008b38:	4899      	ldr	r0, [pc, #612]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008b3a:	f022 f9bb 	bl	802aeb4 <siprintf>
 8008b3e:	4898      	ldr	r0, [pc, #608]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008b40:	f7ff fb5a 	bl	80081f8 <hal_debug_puts>
				CoAP_DeleteInteraction(pIA);
 8008b44:	6878      	ldr	r0, [r7, #4]
 8008b46:	f7ff f8db 	bl	8007d00 <CoAP_DeleteInteraction>
				return;
 8008b4a:	e1ee      	b.n	8008f2a <handleServerInteraction+0x42a>
			}
			// Multicast messages get a response after a leisure period.
			if (pIA->State == COAP_STATE_HANDLE_REQUEST) {
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	795b      	ldrb	r3, [r3, #5]
 8008b50:	2b01      	cmp	r3, #1
 8008b52:	d114      	bne.n	8008b7e <handleServerInteraction+0x7e>
				pIA->State = COAP_STATE_RESPONSE_WAITING_LEISURE;
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	2204      	movs	r2, #4
 8008b58:	715a      	strb	r2, [r3, #5]

				// Todo: Pick a random leisure period (See section 8.2 of [RFC7252])
				CoAP_SetSleepInteraction(pIA, DEFAULT_LEISURE); // Don't respond right away'
 8008b5a:	2105      	movs	r1, #5
 8008b5c:	6878      	ldr	r0, [r7, #4]
 8008b5e:	f7ff f84f 	bl	8007c00 <CoAP_SetSleepInteraction>
				CoAP_EnqueueLastInteraction(pIA);
 8008b62:	6878      	ldr	r0, [r7, #4]
 8008b64:	f7ff f8dc 	bl	8007d20 <CoAP_EnqueueLastInteraction>
				INFO("Multicast request postponed processing until %" PRIu32 "\r\n", pIA->SleepUntil);
 8008b68:	687b      	ldr	r3, [r7, #4]
 8008b6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008b6c:	461a      	mov	r2, r3
 8008b6e:	498d      	ldr	r1, [pc, #564]	; (8008da4 <handleServerInteraction+0x2a4>)
 8008b70:	488b      	ldr	r0, [pc, #556]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008b72:	f022 f99f 	bl	802aeb4 <siprintf>
 8008b76:	488a      	ldr	r0, [pc, #552]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008b78:	f7ff fb3e 	bl	80081f8 <hal_debug_puts>
				return;
 8008b7c:	e1d5      	b.n	8008f2a <handleServerInteraction+0x42a>
			}
		}

		if (((pIA->pReqMsg->Code == REQ_GET) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_GET))
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b82:	795b      	ldrb	r3, [r3, #5]
 8008b84:	2b01      	cmp	r3, #1
 8008b86:	d106      	bne.n	8008b96 <handleServerInteraction+0x96>
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	689b      	ldr	r3, [r3, #8]
 8008b8c:	89db      	ldrh	r3, [r3, #14]
 8008b8e:	f003 0302 	and.w	r3, r3, #2
 8008b92:	2b00      	cmp	r3, #0
 8008b94:	d047      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_POST) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_POST))
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b9a:	795b      	ldrb	r3, [r3, #5]
 8008b9c:	2b02      	cmp	r3, #2
 8008b9e:	d106      	bne.n	8008bae <handleServerInteraction+0xae>
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	689b      	ldr	r3, [r3, #8]
 8008ba4:	89db      	ldrh	r3, [r3, #14]
 8008ba6:	f003 0304 	and.w	r3, r3, #4
 8008baa:	2b00      	cmp	r3, #0
 8008bac:	d03b      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_PUT) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_PUT))
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008bb2:	795b      	ldrb	r3, [r3, #5]
 8008bb4:	2b03      	cmp	r3, #3
 8008bb6:	d106      	bne.n	8008bc6 <handleServerInteraction+0xc6>
 8008bb8:	687b      	ldr	r3, [r7, #4]
 8008bba:	689b      	ldr	r3, [r3, #8]
 8008bbc:	89db      	ldrh	r3, [r3, #14]
 8008bbe:	f003 0308 	and.w	r3, r3, #8
 8008bc2:	2b00      	cmp	r3, #0
 8008bc4:	d02f      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_DELETE) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_DELETE))
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008bca:	795b      	ldrb	r3, [r3, #5]
 8008bcc:	2b04      	cmp	r3, #4
 8008bce:	d106      	bne.n	8008bde <handleServerInteraction+0xde>
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	689b      	ldr	r3, [r3, #8]
 8008bd4:	89db      	ldrh	r3, [r3, #14]
 8008bd6:	f003 0310 	and.w	r3, r3, #16
 8008bda:	2b00      	cmp	r3, #0
 8008bdc:	d023      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_FETCH) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_FETCH))
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008be2:	795b      	ldrb	r3, [r3, #5]
 8008be4:	2b05      	cmp	r3, #5
 8008be6:	d106      	bne.n	8008bf6 <handleServerInteraction+0xf6>
 8008be8:	687b      	ldr	r3, [r7, #4]
 8008bea:	689b      	ldr	r3, [r3, #8]
 8008bec:	89db      	ldrh	r3, [r3, #14]
 8008bee:	f003 0320 	and.w	r3, r3, #32
 8008bf2:	2b00      	cmp	r3, #0
 8008bf4:	d017      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_PATCH) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_PATCH))
 8008bf6:	687b      	ldr	r3, [r7, #4]
 8008bf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008bfa:	795b      	ldrb	r3, [r3, #5]
 8008bfc:	2b06      	cmp	r3, #6
 8008bfe:	d106      	bne.n	8008c0e <handleServerInteraction+0x10e>
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	689b      	ldr	r3, [r3, #8]
 8008c04:	89db      	ldrh	r3, [r3, #14]
 8008c06:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008c0a:	2b00      	cmp	r3, #0
 8008c0c:	d00b      	beq.n	8008c26 <handleServerInteraction+0x126>
				|| ((pIA->pReqMsg->Code == REQ_IPATCH) && !((pIA->pRes->Options).AllowedMethods & RES_OPT_IPATCH))
 8008c0e:	687b      	ldr	r3, [r7, #4]
 8008c10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c12:	795b      	ldrb	r3, [r3, #5]
 8008c14:	2b07      	cmp	r3, #7
 8008c16:	d115      	bne.n	8008c44 <handleServerInteraction+0x144>
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	689b      	ldr	r3, [r3, #8]
 8008c1c:	89db      	ldrh	r3, [r3, #14]
 8008c1e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008c22:	2b00      	cmp	r3, #0
 8008c24:	d10e      	bne.n	8008c44 <handleServerInteraction+0x144>
				) {
			pIA->pRespMsg = CoAP_AllocRespMsg(pIA->pReqMsg, RESP_METHOD_NOT_ALLOWED_4_05, 0); //matches also TYPE + TOKEN to request
 8008c26:	687b      	ldr	r3, [r7, #4]
 8008c28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c2a:	2200      	movs	r2, #0
 8008c2c:	2185      	movs	r1, #133	; 0x85
 8008c2e:	4618      	mov	r0, r3
 8008c30:	f000 fcf0 	bl	8009614 <CoAP_AllocRespMsg>
 8008c34:	4602      	mov	r2, r0
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	64da      	str	r2, [r3, #76]	; 0x4c

			//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
			//transmit response & move to next state
			SendResp(pIA, COAP_STATE_RESPONSE_SENT);
 8008c3a:	2103      	movs	r1, #3
 8008c3c:	6878      	ldr	r0, [r7, #4]
 8008c3e:	f7ff fdb1 	bl	80087a4 <SendResp>
			//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
			return;
 8008c42:	e172      	b.n	8008f2a <handleServerInteraction+0x42a>
		// (else) request method supported by resource...:

		// Allocate new msg with payload buffer which can be directly used OR overwritten
		// by resource handler with (ownstatic memory OR  "com_mem_get(...)" memory areas.
		// Any non static memory will be freed along with message! see free_Payload(...) function, even if user overwrites payload pointer!
		if (pIA->pRespMsg == NULL) { //if postponed before it would have been already allocated
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c48:	2b00      	cmp	r3, #0
 8008c4a:	d109      	bne.n	8008c60 <handleServerInteraction+0x160>
			pIA->pRespMsg = CoAP_AllocRespMsg(pIA->pReqMsg, EMPTY, PREFERED_PAYLOAD_SIZE); //matches also TYPE + TOKEN to request
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c50:	2240      	movs	r2, #64	; 0x40
 8008c52:	2100      	movs	r1, #0
 8008c54:	4618      	mov	r0, r3
 8008c56:	f000 fcdd 	bl	8009614 <CoAP_AllocRespMsg>
 8008c5a:	4602      	mov	r2, r0
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	64da      	str	r2, [r3, #76]	; 0x4c
		}

		// Call of external set resource handler
		// could change type and code of message (ACK & EMPTY above only a guess!)
		CoAP_HandlerResult_t Res = pIA->pRes->Handler(pIA->pReqMsg, pIA->pRespMsg);
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	689b      	ldr	r3, [r3, #8]
 8008c64:	69db      	ldr	r3, [r3, #28]
 8008c66:	687a      	ldr	r2, [r7, #4]
 8008c68:	6b90      	ldr	r0, [r2, #56]	; 0x38
 8008c6a:	687a      	ldr	r2, [r7, #4]
 8008c6c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8008c6e:	4611      	mov	r1, r2
 8008c70:	4798      	blx	r3
 8008c72:	4603      	mov	r3, r0
 8008c74:	73fb      	strb	r3, [r7, #15]

		// make sure the handler returned valid response (either already allocated OR allocated by handler itself)
		if (pIA->pRespMsg == NULL)
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c7a:	2b00      	cmp	r3, #0
 8008c7c:	d10a      	bne.n	8008c94 <handleServerInteraction+0x194>
		{
			INFO("Resource handler returned NULLed response message (removing interaction)\r\n");
 8008c7e:	494a      	ldr	r1, [pc, #296]	; (8008da8 <handleServerInteraction+0x2a8>)
 8008c80:	4847      	ldr	r0, [pc, #284]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008c82:	f022 f917 	bl	802aeb4 <siprintf>
 8008c86:	4846      	ldr	r0, [pc, #280]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008c88:	f7ff fab6 	bl	80081f8 <hal_debug_puts>
			CoAP_DeleteInteraction(pIA);
 8008c8c:	6878      	ldr	r0, [r7, #4]
 8008c8e:	f7ff f837 	bl	8007d00 <CoAP_DeleteInteraction>
			return;
 8008c92:	e14a      	b.n	8008f2a <handleServerInteraction+0x42a>
		}

		// Check return value of handler:
		// a) everything fine - we got an response to send
		if (Res == HANDLER_OK && pIA->pRespMsg->Code == EMPTY) {
 8008c94:	7bfb      	ldrb	r3, [r7, #15]
 8008c96:	2b00      	cmp	r3, #0
 8008c98:	d109      	bne.n	8008cae <handleServerInteraction+0x1ae>
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c9e:	795b      	ldrb	r3, [r3, #5]
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d104      	bne.n	8008cae <handleServerInteraction+0x1ae>
			pIA->pRespMsg->Code = RESP_SUCCESS_CONTENT_2_05; //handler forgot to set code?
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ca8:	2245      	movs	r2, #69	; 0x45
 8008caa:	715a      	strb	r2, [r3, #5]
 8008cac:	e082      	b.n	8008db4 <handleServerInteraction+0x2b4>

			// b) handler has no result and will not deliver	in the future
		} else if (Res == HANDLER_ERROR && pIA->pRespMsg->Code == EMPTY) {
 8008cae:	7bfb      	ldrb	r3, [r7, #15]
 8008cb0:	2b02      	cmp	r3, #2
 8008cb2:	d111      	bne.n	8008cd8 <handleServerInteraction+0x1d8>
 8008cb4:	687b      	ldr	r3, [r7, #4]
 8008cb6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cb8:	795b      	ldrb	r3, [r3, #5]
 8008cba:	2b00      	cmp	r3, #0
 8008cbc:	d10c      	bne.n	8008cd8 <handleServerInteraction+0x1d8>
			pIA->pRespMsg->Code = RESP_INTERNAL_SERVER_ERROR_5_00; //handler forgot to set code?
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cc2:	22a0      	movs	r2, #160	; 0xa0
 8008cc4:	715a      	strb	r2, [r3, #5]

			// Don't respond with reset or empty messages to requests originating from multicast enpoints
			if (pIA->ReqMetaInfo.Type == META_INFO_MULTICAST) {
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008ccc:	2b02      	cmp	r3, #2
 8008cce:	d171      	bne.n	8008db4 <handleServerInteraction+0x2b4>
				CoAP_DeleteInteraction(pIA);
 8008cd0:	6878      	ldr	r0, [r7, #4]
 8008cd2:	f7ff f815 	bl	8007d00 <CoAP_DeleteInteraction>
				return;
 8008cd6:	e128      	b.n	8008f2a <handleServerInteraction+0x42a>
			}

			// c) handler needs some more time
		} else if (Res == HANDLER_POSTPONE) { // Handler needs more time to fulfill request, send ACK and separate response
 8008cd8:	7bfb      	ldrb	r3, [r7, #15]
 8008cda:	2b01      	cmp	r3, #1
 8008cdc:	d16a      	bne.n	8008db4 <handleServerInteraction+0x2b4>
			if (pIA->pReqMsg->Type == CON && pIA->ReqConfirmState != ACK_SEND) {
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008ce2:	791b      	ldrb	r3, [r3, #4]
 8008ce4:	2b00      	cmp	r3, #0
 8008ce6:	d143      	bne.n	8008d70 <handleServerInteraction+0x270>
 8008ce8:	687b      	ldr	r3, [r7, #4]
 8008cea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008cee:	2b01      	cmp	r3, #1
 8008cf0:	d03e      	beq.n	8008d70 <handleServerInteraction+0x270>
				if (CoAP_SendEmptyAck(pIA->pReqMsg->MessageID, pIA->socketHandle, pIA->RemoteEp) == COAP_OK) {
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008cf6:	88de      	ldrh	r6, [r3, #6]
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008cfc:	603b      	str	r3, [r7, #0]
 8008cfe:	687c      	ldr	r4, [r7, #4]
 8008d00:	466d      	mov	r5, sp
 8008d02:	f104 0318 	add.w	r3, r4, #24
 8008d06:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008d08:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008d0c:	f104 0310 	add.w	r3, r4, #16
 8008d10:	cb0c      	ldmia	r3, {r2, r3}
 8008d12:	6839      	ldr	r1, [r7, #0]
 8008d14:	4630      	mov	r0, r6
 8008d16:	f000 ff05 	bl	8009b24 <CoAP_SendEmptyAck>
 8008d1a:	4603      	mov	r3, r0
 8008d1c:	2b00      	cmp	r3, #0
 8008d1e:	d118      	bne.n	8008d52 <handleServerInteraction+0x252>

					pIA->ReqConfirmState = ACK_SEND;
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	2201      	movs	r2, #1
 8008d24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
					pIA->State = COAP_STATE_RESOURCE_POSTPONE_EMPTY_ACK_SENT;
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	2202      	movs	r2, #2
 8008d2c:	715a      	strb	r2, [r3, #5]
					// give resource some time to become ready
					CoAP_SetSleepInteraction(pIA, POSTPONE_WAIT_TIME_SEK);
 8008d2e:	2103      	movs	r1, #3
 8008d30:	6878      	ldr	r0, [r7, #4]
 8008d32:	f7fe ff65 	bl	8007c00 <CoAP_SetSleepInteraction>

					CoAP_EnqueueLastInteraction(pIA);
 8008d36:	6878      	ldr	r0, [r7, #4]
 8008d38:	f7fe fff2 	bl	8007d20 <CoAP_EnqueueLastInteraction>
					INFO("Resource not ready, postponed response until %" PRIu32 "\r\n", pIA->SleepUntil);
 8008d3c:	687b      	ldr	r3, [r7, #4]
 8008d3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008d40:	461a      	mov	r2, r3
 8008d42:	491a      	ldr	r1, [pc, #104]	; (8008dac <handleServerInteraction+0x2ac>)
 8008d44:	4816      	ldr	r0, [pc, #88]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008d46:	f022 f8b5 	bl	802aeb4 <siprintf>
 8008d4a:	4815      	ldr	r0, [pc, #84]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008d4c:	f7ff fa54 	bl	80081f8 <hal_debug_puts>
					return;
 8008d50:	e0eb      	b.n	8008f2a <handleServerInteraction+0x42a>
				} else { // unexspected internal failure todo: try at least to send 4 byte RESP_INTERNAL_SERVER_ERROR_5_00
					INFO("(!!!) Send Error on empty ack, MiD: %d", pIA->pReqMsg->MessageID);
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008d56:	88db      	ldrh	r3, [r3, #6]
 8008d58:	461a      	mov	r2, r3
 8008d5a:	4915      	ldr	r1, [pc, #84]	; (8008db0 <handleServerInteraction+0x2b0>)
 8008d5c:	4810      	ldr	r0, [pc, #64]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008d5e:	f022 f8a9 	bl	802aeb4 <siprintf>
 8008d62:	480f      	ldr	r0, [pc, #60]	; (8008da0 <handleServerInteraction+0x2a0>)
 8008d64:	f7ff fa48 	bl	80081f8 <hal_debug_puts>
					CoAP_DeleteInteraction(pIA);
 8008d68:	6878      	ldr	r0, [r7, #4]
 8008d6a:	f7fe ffc9 	bl	8007d00 <CoAP_DeleteInteraction>
					return;
 8008d6e:	e0dc      	b.n	8008f2a <handleServerInteraction+0x42a>
				}
			}

			//Timeout on postpone?
			if (CoAP_MsgIsOlderThan(pIA->pReqMsg, POSTPONE_MAX_WAIT_TIME)) {
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008d74:	211e      	movs	r1, #30
 8008d76:	4618      	mov	r0, r3
 8008d78:	f000 fbe2 	bl	8009540 <CoAP_MsgIsOlderThan>
 8008d7c:	4603      	mov	r3, r0
 8008d7e:	2b00      	cmp	r3, #0
 8008d80:	d004      	beq.n	8008d8c <handleServerInteraction+0x28c>
				pIA->pRespMsg->Code = RESP_SERVICE_UNAVAILABLE_5_03;
 8008d82:	687b      	ldr	r3, [r7, #4]
 8008d84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d86:	22a3      	movs	r2, #163	; 0xa3
 8008d88:	715a      	strb	r2, [r3, #5]
 8008d8a:	e013      	b.n	8008db4 <handleServerInteraction+0x2b4>
			} else {
				CoAP_SetSleepInteraction(pIA, POSTPONE_WAIT_TIME_SEK);
 8008d8c:	2103      	movs	r1, #3
 8008d8e:	6878      	ldr	r0, [r7, #4]
 8008d90:	f7fe ff36 	bl	8007c00 <CoAP_SetSleepInteraction>
				CoAP_EnqueueLastInteraction(pIA); //give resource some time to become ready
 8008d94:	6878      	ldr	r0, [r7, #4]
 8008d96:	f7fe ffc3 	bl	8007d20 <CoAP_EnqueueLastInteraction>
				return;
 8008d9a:	e0c6      	b.n	8008f2a <handleServerInteraction+0x42a>
 8008d9c:	0802caf8 	.word	0x0802caf8
 8008da0:	20000b54 	.word	0x20000b54
 8008da4:	0802cb30 	.word	0x0802cb30
 8008da8:	0802cb64 	.word	0x0802cb64
 8008dac:	0802cbb0 	.word	0x0802cbb0
 8008db0:	0802cbe4 	.word	0x0802cbe4
			}
		}

		//Set response TYPE correctly if CON request, regardless of what the handler did to this resp msg field, it can't know it better :-)
		//on NON requests the handler can decide if use CON or NON in response (default is also using NON in response)
		if (pIA->pReqMsg->Type == CON) {
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008db8:	791b      	ldrb	r3, [r3, #4]
 8008dba:	2b00      	cmp	r3, #0
 8008dbc:	d113      	bne.n	8008de6 <handleServerInteraction+0x2e6>
			if (pIA->ReqConfirmState ==
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008dc4:	2b01      	cmp	r3, #1
 8008dc6:	d10a      	bne.n	8008dde <handleServerInteraction+0x2de>
					ACK_SEND) { //separate empty ACK has been sent before (piggyback-ack no more possible)
				pIA->pRespMsg->Type = CON;
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008dcc:	2200      	movs	r2, #0
 8008dce:	711a      	strb	r2, [r3, #4]
				pIA->pRespMsg->MessageID = CoAP_GetNextMid(); //we must use/generate a new messageID;
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8008dd4:	f001 f856 	bl	8009e84 <CoAP_GetNextMid>
 8008dd8:	4603      	mov	r3, r0
 8008dda:	80e3      	strh	r3, [r4, #6]
 8008ddc:	e003      	b.n	8008de6 <handleServerInteraction+0x2e6>
			} else
				pIA->pRespMsg->Type = ACK; //"piggybacked ack"
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008de2:	2202      	movs	r2, #2
 8008de4:	711a      	strb	r2, [r3, #4]
		}

		//Add custom option #10000 with hopcount and rssi of request to response
		if (pIA->ReqMetaInfo.Type == META_INFO_RF_PATH) {
 8008de6:	687b      	ldr	r3, [r7, #4]
 8008de8:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008dec:	2b01      	cmp	r3, #1
 8008dee:	d114      	bne.n	8008e1a <handleServerInteraction+0x31a>
			uint8_t buf_temp[2];
			buf_temp[0] = pIA->ReqMetaInfo.Dat.RfPath.HopCount;
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8008df6:	733b      	strb	r3, [r7, #12]
			buf_temp[1] = pIA->ReqMetaInfo.Dat.RfPath.RSSI * -1;
 8008df8:	687b      	ldr	r3, [r7, #4]
 8008dfa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008dfc:	b2db      	uxtb	r3, r3
 8008dfe:	425b      	negs	r3, r3
 8008e00:	b2db      	uxtb	r3, r3
 8008e02:	737b      	strb	r3, [r7, #13]
			CoAP_AppendOptionToList(&(pIA->pRespMsg->pOptionsList), 10000, buf_temp, 2); //custom option #10000
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e08:	f103 0018 	add.w	r0, r3, #24
 8008e0c:	f107 020c 	add.w	r2, r7, #12
 8008e10:	2302      	movs	r3, #2
 8008e12:	f242 7110 	movw	r1, #10000	; 0x2710
 8008e16:	f001 fed7 	bl	800abc8 <CoAP_AppendOptionToList>
		}

		//handle for GET observe option
		if ((pIA->pReqMsg->Code == REQ_GET || pIA->pReqMsg->Code == REQ_FETCH) && pIA->pRespMsg->Code == RESP_SUCCESS_CONTENT_2_05) {
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008e1e:	795b      	ldrb	r3, [r3, #5]
 8008e20:	2b01      	cmp	r3, #1
 8008e22:	d004      	beq.n	8008e2e <handleServerInteraction+0x32e>
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008e28:	795b      	ldrb	r3, [r3, #5]
 8008e2a:	2b05      	cmp	r3, #5
 8008e2c:	d12c      	bne.n	8008e88 <handleServerInteraction+0x388>
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e32:	795b      	ldrb	r3, [r3, #5]
 8008e34:	2b45      	cmp	r3, #69	; 0x45
 8008e36:	d127      	bne.n	8008e88 <handleServerInteraction+0x388>
			CoAP_Result_t result = CoAP_HandleObservationInReq(pIA);
 8008e38:	6878      	ldr	r0, [r7, #4]
 8008e3a:	f7ff f8e1 	bl	8008000 <CoAP_HandleObservationInReq>
 8008e3e:	4603      	mov	r3, r0
 8008e40:	73bb      	strb	r3, [r7, #14]
			if (result == COAP_OK) { //<---- attach OBSERVER to resource
 8008e42:	7bbb      	ldrb	r3, [r7, #14]
 8008e44:	2b00      	cmp	r3, #0
 8008e46:	d10d      	bne.n	8008e64 <handleServerInteraction+0x364>
				AddObserveOptionToMsg(pIA->pRespMsg, 0);  //= ACK observation to client
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e4c:	2100      	movs	r1, #0
 8008e4e:	4618      	mov	r0, r3
 8008e50:	f002 fe86 	bl	800bb60 <AddObserveOptionToMsg>
				INFO("- Observation activated\r\n");
 8008e54:	4936      	ldr	r1, [pc, #216]	; (8008f30 <handleServerInteraction+0x430>)
 8008e56:	4837      	ldr	r0, [pc, #220]	; (8008f34 <handleServerInteraction+0x434>)
 8008e58:	f022 f82c 	bl	802aeb4 <siprintf>
 8008e5c:	4835      	ldr	r0, [pc, #212]	; (8008f34 <handleServerInteraction+0x434>)
 8008e5e:	f7ff f9cb 	bl	80081f8 <hal_debug_puts>
 8008e62:	e011      	b.n	8008e88 <handleServerInteraction+0x388>
			} else if (result == COAP_REMOVED) {
 8008e64:	7bbb      	ldrb	r3, [r7, #14]
 8008e66:	2b17      	cmp	r3, #23
 8008e68:	d107      	bne.n	8008e7a <handleServerInteraction+0x37a>
				INFO("- Observation actively removed by client\r\n");
 8008e6a:	4933      	ldr	r1, [pc, #204]	; (8008f38 <handleServerInteraction+0x438>)
 8008e6c:	4831      	ldr	r0, [pc, #196]	; (8008f34 <handleServerInteraction+0x434>)
 8008e6e:	f022 f821 	bl	802aeb4 <siprintf>
 8008e72:	4830      	ldr	r0, [pc, #192]	; (8008f34 <handleServerInteraction+0x434>)
 8008e74:	f7ff f9c0 	bl	80081f8 <hal_debug_puts>
 8008e78:	e006      	b.n	8008e88 <handleServerInteraction+0x388>
			} else {
				INFO("- Observation failed\r\n");
 8008e7a:	4930      	ldr	r1, [pc, #192]	; (8008f3c <handleServerInteraction+0x43c>)
 8008e7c:	482d      	ldr	r0, [pc, #180]	; (8008f34 <handleServerInteraction+0x434>)
 8008e7e:	f022 f819 	bl	802aeb4 <siprintf>
 8008e82:	482c      	ldr	r0, [pc, #176]	; (8008f34 <handleServerInteraction+0x434>)
 8008e84:	f7ff f9b8 	bl	80081f8 <hal_debug_puts>
			}

		}

		//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		SendResp(pIA, COAP_STATE_RESPONSE_SENT); //transmit response & move to next state
 8008e88:	2103      	movs	r1, #3
 8008e8a:	6878      	ldr	r0, [r7, #4]
 8008e8c:	f7ff fc8a 	bl	80087a4 <SendResp>
		//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		return;
 8008e90:	e04b      	b.n	8008f2a <handleServerInteraction+0x42a>
		//--------------------------------------------------
	} else if (pIA->State == COAP_STATE_RESPONSE_SENT) {
 8008e92:	687b      	ldr	r3, [r7, #4]
 8008e94:	795b      	ldrb	r3, [r3, #5]
 8008e96:	2b03      	cmp	r3, #3
 8008e98:	d147      	bne.n	8008f2a <handleServerInteraction+0x42a>
		//--------------------------------------------------
		switch (CheckRespStatus(pIA)) {
 8008e9a:	6878      	ldr	r0, [r7, #4]
 8008e9c:	f7ff fd20 	bl	80088e0 <CheckRespStatus>
 8008ea0:	4603      	mov	r3, r0
 8008ea2:	2b1d      	cmp	r3, #29
 8008ea4:	dc02      	bgt.n	8008eac <handleServerInteraction+0x3ac>
 8008ea6:	2b1c      	cmp	r3, #28
 8008ea8:	da03      	bge.n	8008eb2 <handleServerInteraction+0x3b2>
 8008eaa:	e03b      	b.n	8008f24 <handleServerInteraction+0x424>
 8008eac:	2b1e      	cmp	r3, #30
 8008eae:	d004      	beq.n	8008eba <handleServerInteraction+0x3ba>
 8008eb0:	e038      	b.n	8008f24 <handleServerInteraction+0x424>
		case COAP_WAITING:
			case COAP_HOLDING_BACK:
			CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing
 8008eb2:	6878      	ldr	r0, [r7, #4]
 8008eb4:	f7fe ff34 	bl	8007d20 <CoAP_EnqueueLastInteraction>
			break;
 8008eb8:	e037      	b.n	8008f2a <handleServerInteraction+0x42a>

		case COAP_RETRY:
			if (CoAP_SendMsg(pIA->pRespMsg, pIA->socketHandle, pIA->RemoteEp) == COAP_OK) {
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008ec2:	603b      	str	r3, [r7, #0]
 8008ec4:	687c      	ldr	r4, [r7, #4]
 8008ec6:	466d      	mov	r5, sp
 8008ec8:	f104 0318 	add.w	r3, r4, #24
 8008ecc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008ece:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008ed2:	f104 0310 	add.w	r3, r4, #16
 8008ed6:	cb0c      	ldmia	r3, {r2, r3}
 8008ed8:	6839      	ldr	r1, [r7, #0]
 8008eda:	4630      	mov	r0, r6
 8008edc:	f000 feaa 	bl	8009c34 <CoAP_SendMsg>
 8008ee0:	4603      	mov	r3, r0
 8008ee2:	2b00      	cmp	r3, #0
 8008ee4:	d10f      	bne.n	8008f06 <handleServerInteraction+0x406>
				pIA->RetransCounter++;
 8008ee6:	687b      	ldr	r3, [r7, #4]
 8008ee8:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008eec:	3301      	adds	r3, #1
 8008eee:	b2da      	uxtb	r2, r3
 8008ef0:	687b      	ldr	r3, [r7, #4]
 8008ef2:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
				CoAP_EnableAckTimeout(pIA, pIA->RetransCounter);
 8008ef6:	687b      	ldr	r3, [r7, #4]
 8008ef8:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8008efc:	4619      	mov	r1, r3
 8008efe:	6878      	ldr	r0, [r7, #4]
 8008f00:	f7fe fe92 	bl	8007c28 <CoAP_EnableAckTimeout>
			} else {
				INFO("(!!!) Internal socket error on sending response! MiD: %d", pIA->pReqMsg->MessageID);
				CoAP_DeleteInteraction(pIA);
			}
			break;
 8008f04:	e011      	b.n	8008f2a <handleServerInteraction+0x42a>
				INFO("(!!!) Internal socket error on sending response! MiD: %d", pIA->pReqMsg->MessageID);
 8008f06:	687b      	ldr	r3, [r7, #4]
 8008f08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f0a:	88db      	ldrh	r3, [r3, #6]
 8008f0c:	461a      	mov	r2, r3
 8008f0e:	490c      	ldr	r1, [pc, #48]	; (8008f40 <handleServerInteraction+0x440>)
 8008f10:	4808      	ldr	r0, [pc, #32]	; (8008f34 <handleServerInteraction+0x434>)
 8008f12:	f021 ffcf 	bl	802aeb4 <siprintf>
 8008f16:	4807      	ldr	r0, [pc, #28]	; (8008f34 <handleServerInteraction+0x434>)
 8008f18:	f7ff f96e 	bl	80081f8 <hal_debug_puts>
				CoAP_DeleteInteraction(pIA);
 8008f1c:	6878      	ldr	r0, [r7, #4]
 8008f1e:	f7fe feef 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 8008f22:	e002      	b.n	8008f2a <handleServerInteraction+0x42a>

		case COAP_ERR_OUT_OF_ATTEMPTS:
			case COAP_ERR_REMOTE_RST:
			default:
			CoAP_DeleteInteraction(pIA);
 8008f24:	6878      	ldr	r0, [r7, #4]
 8008f26:	f7fe feeb 	bl	8007d00 <CoAP_DeleteInteraction>
		}
	}
}
 8008f2a:	3714      	adds	r7, #20
 8008f2c:	46bd      	mov	sp, r7
 8008f2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f30:	0802cc0c 	.word	0x0802cc0c
 8008f34:	20000b54 	.word	0x20000b54
 8008f38:	0802cc28 	.word	0x0802cc28
 8008f3c:	0802cc54 	.word	0x0802cc54
 8008f40:	0802cc6c 	.word	0x0802cc6c

08008f44 <handleNotifyInteraction>:

static void handleNotifyInteraction(CoAP_Interaction_t* pIA) {
 8008f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f46:	b089      	sub	sp, #36	; 0x24
 8008f48:	af04      	add	r7, sp, #16
 8008f4a:	6078      	str	r0, [r7, #4]
	if (pIA->State == COAP_STATE_READY_TO_NOTIFY) {
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	795b      	ldrb	r3, [r3, #5]
 8008f50:	2b05      	cmp	r3, #5
 8008f52:	d10b      	bne.n	8008f6c <handleNotifyInteraction+0x28>
		//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		INFO("Sending Notification\n");
 8008f54:	49a4      	ldr	r1, [pc, #656]	; (80091e8 <handleNotifyInteraction+0x2a4>)
 8008f56:	48a5      	ldr	r0, [pc, #660]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8008f58:	f021 ffac 	bl	802aeb4 <siprintf>
 8008f5c:	48a3      	ldr	r0, [pc, #652]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8008f5e:	f7ff f94b 	bl	80081f8 <hal_debug_puts>
		SendResp(pIA, COAP_STATE_NOTIFICATION_SENT); //transmit response & move to next state
 8008f62:	2106      	movs	r1, #6
 8008f64:	6878      	ldr	r0, [r7, #4]
 8008f66:	f7ff fc1d 	bl	80087a4 <SendResp>
 8008f6a:	e139      	b.n	80091e0 <handleNotifyInteraction+0x29c>
		//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		//--------------------------------------------------
	} else if (pIA->State == COAP_STATE_NOTIFICATION_SENT) {
 8008f6c:	687b      	ldr	r3, [r7, #4]
 8008f6e:	795b      	ldrb	r3, [r3, #5]
 8008f70:	2b06      	cmp	r3, #6
 8008f72:	f040 8135 	bne.w	80091e0 <handleNotifyInteraction+0x29c>
		CoAP_Result_t respStatus = CheckRespStatus(pIA);
 8008f76:	6878      	ldr	r0, [r7, #4]
 8008f78:	f7ff fcb2 	bl	80088e0 <CheckRespStatus>
 8008f7c:	4603      	mov	r3, r0
 8008f7e:	73fb      	strb	r3, [r7, #15]
		INFO("Response Status: %s\n", ResultToString(respStatus));
 8008f80:	7bfb      	ldrb	r3, [r7, #15]
 8008f82:	4618      	mov	r0, r3
 8008f84:	f002 f9c4 	bl	800b310 <ResultToString>
 8008f88:	4603      	mov	r3, r0
 8008f8a:	461a      	mov	r2, r3
 8008f8c:	4998      	ldr	r1, [pc, #608]	; (80091f0 <handleNotifyInteraction+0x2ac>)
 8008f8e:	4897      	ldr	r0, [pc, #604]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8008f90:	f021 ff90 	bl	802aeb4 <siprintf>
 8008f94:	4895      	ldr	r0, [pc, #596]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8008f96:	f7ff f92f 	bl	80081f8 <hal_debug_puts>

		switch (respStatus) {
 8008f9a:	7bfb      	ldrb	r3, [r7, #15]
 8008f9c:	2b1e      	cmp	r3, #30
 8008f9e:	f200 811b 	bhi.w	80091d8 <handleNotifyInteraction+0x294>
 8008fa2:	a201      	add	r2, pc, #4	; (adr r2, 8008fa8 <handleNotifyInteraction+0x64>)
 8008fa4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008fa8:	0800912d 	.word	0x0800912d
 8008fac:	080091d9 	.word	0x080091d9
 8008fb0:	080091d9 	.word	0x080091d9
 8008fb4:	080091d9 	.word	0x080091d9
 8008fb8:	080091d9 	.word	0x080091d9
 8008fbc:	080091d9 	.word	0x080091d9
 8008fc0:	080091d9 	.word	0x080091d9
 8008fc4:	080091d9 	.word	0x080091d9
 8008fc8:	080091d9 	.word	0x080091d9
 8008fcc:	080091d9 	.word	0x080091d9
 8008fd0:	080091d9 	.word	0x080091d9
 8008fd4:	080091d9 	.word	0x080091d9
 8008fd8:	080091d9 	.word	0x080091d9
 8008fdc:	080091d9 	.word	0x080091d9
 8008fe0:	080091d9 	.word	0x080091d9
 8008fe4:	080091d9 	.word	0x080091d9
 8008fe8:	080091d9 	.word	0x080091d9
 8008fec:	080091d9 	.word	0x080091d9
 8008ff0:	080091d9 	.word	0x080091d9
 8008ff4:	080091d9 	.word	0x080091d9
 8008ff8:	080091d9 	.word	0x080091d9
 8008ffc:	080091d9 	.word	0x080091d9
 8009000:	080091d9 	.word	0x080091d9
 8009004:	080091d9 	.word	0x080091d9
 8009008:	080091d9 	.word	0x080091d9
 800900c:	080091c3 	.word	0x080091c3
 8009010:	080091c3 	.word	0x080091c3
 8009014:	080091d9 	.word	0x080091d9
 8009018:	08009025 	.word	0x08009025
 800901c:	0800902d 	.word	0x0800902d
 8009020:	08009035 	.word	0x08009035
		case COAP_WAITING:
			CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing
 8009024:	6878      	ldr	r0, [r7, #4]
 8009026:	f7fe fe7b 	bl	8007d20 <CoAP_EnqueueLastInteraction>
			break;
 800902a:	e0d9      	b.n	80091e0 <handleNotifyInteraction+0x29c>
		case COAP_HOLDING_BACK:
			CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing
 800902c:	6878      	ldr	r0, [r7, #4]
 800902e:	f7fe fe77 	bl	8007d20 <CoAP_EnqueueLastInteraction>
			break;
 8009032:	e0d5      	b.n	80091e0 <handleNotifyInteraction+0x29c>
		case COAP_RETRY:
#if USE_RFC7641_ADVANCED_TRANSMISSION == 1
			//Implement RFC7641 (observe) "4.5.2.  Advanced Transmission"
			//Effectively abort previous notification and send a fresher one
			//retain transmission parameters of "pending" interaction
			if (pIA->UpdatePendingNotification) {
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800903a:	2b00      	cmp	r3, #0
 800903c:	d03a      	beq.n	80090b4 <handleNotifyInteraction+0x170>
				CoAP_MessageType_t TypeSave = pIA->pRespMsg->Type;
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009042:	791b      	ldrb	r3, [r3, #4]
 8009044:	73bb      	strb	r3, [r7, #14]
				INFO("in retry: update pending IA\r\n");
 8009046:	496b      	ldr	r1, [pc, #428]	; (80091f4 <handleNotifyInteraction+0x2b0>)
 8009048:	4868      	ldr	r0, [pc, #416]	; (80091ec <handleNotifyInteraction+0x2a8>)
 800904a:	f021 ff33 	bl	802aeb4 <siprintf>
 800904e:	4867      	ldr	r0, [pc, #412]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8009050:	f7ff f8d2 	bl	80081f8 <hal_debug_puts>
				pIA->UpdatePendingNotification = false;
 8009054:	687b      	ldr	r3, [r7, #4]
 8009056:	2200      	movs	r2, #0
 8009058:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
				pIA->pRespMsg->MessageID = CoAP_GetNextMid();
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8009060:	f000 ff10 	bl	8009e84 <CoAP_GetNextMid>
 8009064:	4603      	mov	r3, r0
 8009066:	80e3      	strh	r3, [r4, #6]
				//call notifier
				if (pIA->pRes->Notifier(pIA->pObserver, pIA->pRespMsg) == HANDLER_ERROR) {
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	689b      	ldr	r3, [r3, #8]
 800906c:	6a1b      	ldr	r3, [r3, #32]
 800906e:	687a      	ldr	r2, [r7, #4]
 8009070:	68d0      	ldr	r0, [r2, #12]
 8009072:	687a      	ldr	r2, [r7, #4]
 8009074:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 8009076:	4611      	mov	r1, r2
 8009078:	4798      	blx	r3
 800907a:	4603      	mov	r3, r0
 800907c:	2b02      	cmp	r3, #2
 800907e:	d10c      	bne.n	800909a <handleNotifyInteraction+0x156>
					RemoveObserveOptionFromMsg(pIA->pRespMsg);
 8009080:	687b      	ldr	r3, [r7, #4]
 8009082:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009084:	4618      	mov	r0, r3
 8009086:	f002 fdc8 	bl	800bc1a <RemoveObserveOptionFromMsg>
					CoAP_RemoveInteractionsObserver(pIA, pIA->pRespMsg->Token);
 800908a:	687b      	ldr	r3, [r7, #4]
 800908c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800908e:	330c      	adds	r3, #12
 8009090:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009092:	6878      	ldr	r0, [r7, #4]
 8009094:	f7fe ff92 	bl	8007fbc <CoAP_RemoveInteractionsObserver>
 8009098:	e008      	b.n	80090ac <handleNotifyInteraction+0x168>
				} else { //good response
					UpdateObserveOptionInMsg(pIA->pRespMsg, pIA->pRes->UpdateCnt);
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800909e:	687b      	ldr	r3, [r7, #4]
 80090a0:	689b      	ldr	r3, [r3, #8]
 80090a2:	689b      	ldr	r3, [r3, #8]
 80090a4:	4619      	mov	r1, r3
 80090a6:	4610      	mov	r0, r2
 80090a8:	f002 fdd6 	bl	800bc58 <UpdateObserveOptionInMsg>
				}
				// The pIA->pRes->Notifier might have change the response from CON -> NON
				// On the interaction we like to preserve the original value
				// e.g. one CON between many NON messages should be preserved
				pIA->pRespMsg->Type = TypeSave;
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80090b0:	7bba      	ldrb	r2, [r7, #14]
 80090b2:	711a      	strb	r2, [r3, #4]
			}
#endif

			if (CoAP_SendMsg(pIA->pRespMsg, pIA->socketHandle, pIA->RemoteEp) == COAP_OK) {
 80090b4:	687b      	ldr	r3, [r7, #4]
 80090b6:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80090bc:	603b      	str	r3, [r7, #0]
 80090be:	687c      	ldr	r4, [r7, #4]
 80090c0:	466d      	mov	r5, sp
 80090c2:	f104 0318 	add.w	r3, r4, #24
 80090c6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80090c8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80090cc:	f104 0310 	add.w	r3, r4, #16
 80090d0:	cb0c      	ldmia	r3, {r2, r3}
 80090d2:	6839      	ldr	r1, [r7, #0]
 80090d4:	4630      	mov	r0, r6
 80090d6:	f000 fdad 	bl	8009c34 <CoAP_SendMsg>
 80090da:	4603      	mov	r3, r0
 80090dc:	2b00      	cmp	r3, #0
 80090de:	d116      	bne.n	800910e <handleNotifyInteraction+0x1ca>
				pIA->RetransCounter++;
 80090e0:	687b      	ldr	r3, [r7, #4]
 80090e2:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 80090e6:	3301      	adds	r3, #1
 80090e8:	b2da      	uxtb	r2, r3
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
				CoAP_EnableAckTimeout(pIA, pIA->RetransCounter);
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 80090f6:	4619      	mov	r1, r3
 80090f8:	6878      	ldr	r0, [r7, #4]
 80090fa:	f7fe fd95 	bl	8007c28 <CoAP_EnableAckTimeout>
				INFO("- Changed notification body during retry\r\n");
 80090fe:	493e      	ldr	r1, [pc, #248]	; (80091f8 <handleNotifyInteraction+0x2b4>)
 8009100:	483a      	ldr	r0, [pc, #232]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8009102:	f021 fed7 	bl	802aeb4 <siprintf>
 8009106:	4839      	ldr	r0, [pc, #228]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8009108:	f7ff f876 	bl	80081f8 <hal_debug_puts>
			} else {
				INFO("(!!!) Internal socket error on sending response! MiD: %d\r\n", pIA->pRespMsg->MessageID);
				CoAP_DeleteInteraction(pIA);
			}
			break;
 800910c:	e068      	b.n	80091e0 <handleNotifyInteraction+0x29c>
				INFO("(!!!) Internal socket error on sending response! MiD: %d\r\n", pIA->pRespMsg->MessageID);
 800910e:	687b      	ldr	r3, [r7, #4]
 8009110:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009112:	88db      	ldrh	r3, [r3, #6]
 8009114:	461a      	mov	r2, r3
 8009116:	4939      	ldr	r1, [pc, #228]	; (80091fc <handleNotifyInteraction+0x2b8>)
 8009118:	4834      	ldr	r0, [pc, #208]	; (80091ec <handleNotifyInteraction+0x2a8>)
 800911a:	f021 fecb 	bl	802aeb4 <siprintf>
 800911e:	4833      	ldr	r0, [pc, #204]	; (80091ec <handleNotifyInteraction+0x2a8>)
 8009120:	f7ff f86a 	bl	80081f8 <hal_debug_puts>
				CoAP_DeleteInteraction(pIA);
 8009124:	6878      	ldr	r0, [r7, #4]
 8009126:	f7fe fdeb 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 800912a:	e059      	b.n	80091e0 <handleNotifyInteraction+0x29c>

		case COAP_OK:

#if USE_RFC7641_ADVANCED_TRANSMISSION == 1
			if (pIA->UpdatePendingNotification) {
 800912c:	687b      	ldr	r3, [r7, #4]
 800912e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8009132:	2b00      	cmp	r3, #0
 8009134:	d041      	beq.n	80091ba <handleNotifyInteraction+0x276>
				//Implement RFC7641 (observe) "4.5.2.  Advanced Transmission" and send a fresher representation
				//also reset transmission parameters (since previous transfer ended successfully)
				pIA->State = COAP_STATE_READY_TO_NOTIFY;
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	2205      	movs	r2, #5
 800913a:	715a      	strb	r2, [r3, #5]
				pIA->RetransCounter = 0;
 800913c:	687b      	ldr	r3, [r7, #4]
 800913e:	2200      	movs	r2, #0
 8009140:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
				pIA->UpdatePendingNotification = false;
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	2200      	movs	r2, #0
 8009148:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
				pIA->pRespMsg->MessageID = CoAP_GetNextMid();
 800914c:	687b      	ldr	r3, [r7, #4]
 800914e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8009150:	f000 fe98 	bl	8009e84 <CoAP_GetNextMid>
 8009154:	4603      	mov	r3, r0
 8009156:	80e3      	strh	r3, [r4, #6]
				pIA->ResConfirmState = NOT_SET;
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	2200      	movs	r2, #0
 800915c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

				//call notifier
				if (pIA->pRes->Notifier(pIA->pObserver, pIA->pRespMsg) == HANDLER_ERROR) {
 8009160:	687b      	ldr	r3, [r7, #4]
 8009162:	689b      	ldr	r3, [r3, #8]
 8009164:	6a1b      	ldr	r3, [r3, #32]
 8009166:	687a      	ldr	r2, [r7, #4]
 8009168:	68d0      	ldr	r0, [r2, #12]
 800916a:	687a      	ldr	r2, [r7, #4]
 800916c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800916e:	4611      	mov	r1, r2
 8009170:	4798      	blx	r3
 8009172:	4603      	mov	r3, r0
 8009174:	2b02      	cmp	r3, #2
 8009176:	d10c      	bne.n	8009192 <handleNotifyInteraction+0x24e>
					RemoveObserveOptionFromMsg(pIA->pRespMsg);
 8009178:	687b      	ldr	r3, [r7, #4]
 800917a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800917c:	4618      	mov	r0, r3
 800917e:	f002 fd4c 	bl	800bc1a <RemoveObserveOptionFromMsg>
					CoAP_RemoveInteractionsObserver(pIA, pIA->pRespMsg->Token);
 8009182:	687b      	ldr	r3, [r7, #4]
 8009184:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009186:	330c      	adds	r3, #12
 8009188:	cb0e      	ldmia	r3, {r1, r2, r3}
 800918a:	6878      	ldr	r0, [r7, #4]
 800918c:	f7fe ff16 	bl	8007fbc <CoAP_RemoveInteractionsObserver>
 8009190:	e008      	b.n	80091a4 <handleNotifyInteraction+0x260>
				} else { //good response
					UpdateObserveOptionInMsg(pIA->pRespMsg, pIA->pRes->UpdateCnt);
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8009196:	687b      	ldr	r3, [r7, #4]
 8009198:	689b      	ldr	r3, [r3, #8]
 800919a:	689b      	ldr	r3, [r3, #8]
 800919c:	4619      	mov	r1, r3
 800919e:	4610      	mov	r0, r2
 80091a0:	f002 fd5a 	bl	800bc58 <UpdateObserveOptionInMsg>
				}
				INFO("- Started new notification since resource has been updated!\r\n");
 80091a4:	4916      	ldr	r1, [pc, #88]	; (8009200 <handleNotifyInteraction+0x2bc>)
 80091a6:	4811      	ldr	r0, [pc, #68]	; (80091ec <handleNotifyInteraction+0x2a8>)
 80091a8:	f021 fe84 	bl	802aeb4 <siprintf>
 80091ac:	480f      	ldr	r0, [pc, #60]	; (80091ec <handleNotifyInteraction+0x2a8>)
 80091ae:	f7ff f823 	bl	80081f8 <hal_debug_puts>
				CoAP_EnqueueLastInteraction(pIA);
 80091b2:	6878      	ldr	r0, [r7, #4]
 80091b4:	f7fe fdb4 	bl	8007d20 <CoAP_EnqueueLastInteraction>
				return;
 80091b8:	e012      	b.n	80091e0 <handleNotifyInteraction+0x29c>
			}
#endif
			CoAP_DeleteInteraction(pIA); //done!
 80091ba:	6878      	ldr	r0, [r7, #4]
 80091bc:	f7fe fda0 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 80091c0:	e00e      	b.n	80091e0 <handleNotifyInteraction+0x29c>

		case COAP_ERR_OUT_OF_ATTEMPTS: //check is resource is a lazy observe delete one
		case COAP_ERR_REMOTE_RST:
			CoAP_RemoveInteractionsObserver(pIA, pIA->pRespMsg->Token);  //remove observer from resource
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80091c6:	330c      	adds	r3, #12
 80091c8:	cb0e      	ldmia	r3, {r1, r2, r3}
 80091ca:	6878      	ldr	r0, [r7, #4]
 80091cc:	f7fe fef6 	bl	8007fbc <CoAP_RemoveInteractionsObserver>
			CoAP_DeleteInteraction(pIA);
 80091d0:	6878      	ldr	r0, [r7, #4]
 80091d2:	f7fe fd95 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 80091d6:	e003      	b.n	80091e0 <handleNotifyInteraction+0x29c>
		default:
			CoAP_DeleteInteraction(pIA);
 80091d8:	6878      	ldr	r0, [r7, #4]
 80091da:	f7fe fd91 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 80091de:	bf00      	nop
		}
	}
}
 80091e0:	3714      	adds	r7, #20
 80091e2:	46bd      	mov	sp, r7
 80091e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091e6:	bf00      	nop
 80091e8:	0802cca8 	.word	0x0802cca8
 80091ec:	20000b54 	.word	0x20000b54
 80091f0:	0802ccc0 	.word	0x0802ccc0
 80091f4:	0802ccd8 	.word	0x0802ccd8
 80091f8:	0802ccf8 	.word	0x0802ccf8
 80091fc:	0802cd24 	.word	0x0802cd24
 8009200:	0802cd60 	.word	0x0802cd60

08009204 <handleClientInteraction>:

static void handleClientInteraction(CoAP_Interaction_t* pIA) {
 8009204:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009206:	b089      	sub	sp, #36	; 0x24
 8009208:	af04      	add	r7, sp, #16
 800920a:	6078      	str	r0, [r7, #4]

	//------------------------------------------
	if (pIA->State == COAP_STATE_READY_TO_REQUEST) {
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	795b      	ldrb	r3, [r3, #5]
 8009210:	2b07      	cmp	r3, #7
 8009212:	d104      	bne.n	800921e <handleClientInteraction+0x1a>
		//------------------------------------------
		//o>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
		SendReq(pIA, COAP_STATE_WAITING_RESPONSE); //transmit response & move to next state
 8009214:	2108      	movs	r1, #8
 8009216:	6878      	ldr	r0, [r7, #4]
 8009218:	f7ff fb18 	bl	800884c <SendReq>
		if (pIA->RespCB != NULL) {
			pIA->RespCB(NULL, pIA->pReqMsg, &pIA->RemoteEp);
		}
		CoAP_DeleteInteraction(pIA); //unknown state, should not go here
	}
}
 800921c:	e088      	b.n	8009330 <handleClientInteraction+0x12c>
	} else if (pIA->State == COAP_STATE_WAITING_RESPONSE) {
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	795b      	ldrb	r3, [r3, #5]
 8009222:	2b08      	cmp	r3, #8
 8009224:	d15f      	bne.n	80092e6 <handleClientInteraction+0xe2>
		CoAP_Result_t reqStatus = CheckReqStatus(pIA);
 8009226:	6878      	ldr	r0, [r7, #4]
 8009228:	f7ff fbe0 	bl	80089ec <CheckReqStatus>
 800922c:	4603      	mov	r3, r0
 800922e:	73fb      	strb	r3, [r7, #15]
		switch (reqStatus) {
 8009230:	7bfb      	ldrb	r3, [r7, #15]
 8009232:	2b1c      	cmp	r3, #28
 8009234:	d002      	beq.n	800923c <handleClientInteraction+0x38>
 8009236:	2b1e      	cmp	r3, #30
 8009238:	d004      	beq.n	8009244 <handleClientInteraction+0x40>
 800923a:	e044      	b.n	80092c6 <handleClientInteraction+0xc2>
			CoAP_EnqueueLastInteraction(pIA); //(re)enqueue interaction for further processing
 800923c:	6878      	ldr	r0, [r7, #4]
 800923e:	f7fe fd6f 	bl	8007d20 <CoAP_EnqueueLastInteraction>
			break;
 8009242:	e075      	b.n	8009330 <handleClientInteraction+0x12c>
			if (CoAP_SendMsg(pIA->pReqMsg, pIA->socketHandle, pIA->RemoteEp) == COAP_OK) {
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 8009248:	687b      	ldr	r3, [r7, #4]
 800924a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800924c:	603b      	str	r3, [r7, #0]
 800924e:	687c      	ldr	r4, [r7, #4]
 8009250:	466d      	mov	r5, sp
 8009252:	f104 0318 	add.w	r3, r4, #24
 8009256:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8009258:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800925c:	f104 0310 	add.w	r3, r4, #16
 8009260:	cb0c      	ldmia	r3, {r2, r3}
 8009262:	6839      	ldr	r1, [r7, #0]
 8009264:	4630      	mov	r0, r6
 8009266:	f000 fce5 	bl	8009c34 <CoAP_SendMsg>
 800926a:	4603      	mov	r3, r0
 800926c:	2b00      	cmp	r3, #0
 800926e:	d10f      	bne.n	8009290 <handleClientInteraction+0x8c>
				pIA->RetransCounter++;
 8009270:	687b      	ldr	r3, [r7, #4]
 8009272:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8009276:	3301      	adds	r3, #1
 8009278:	b2da      	uxtb	r2, r3
 800927a:	687b      	ldr	r3, [r7, #4]
 800927c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
				CoAP_EnableAckTimeout(pIA, pIA->RetransCounter);
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8009286:	4619      	mov	r1, r3
 8009288:	6878      	ldr	r0, [r7, #4]
 800928a:	f7fe fccd 	bl	8007c28 <CoAP_EnableAckTimeout>
			break;
 800928e:	e04f      	b.n	8009330 <handleClientInteraction+0x12c>
				INFO("(!!!) Internal socket error on sending request retry! MiD: %d\r\n",
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009294:	88db      	ldrh	r3, [r3, #6]
 8009296:	461a      	mov	r2, r3
 8009298:	4927      	ldr	r1, [pc, #156]	; (8009338 <handleClientInteraction+0x134>)
 800929a:	4828      	ldr	r0, [pc, #160]	; (800933c <handleClientInteraction+0x138>)
 800929c:	f021 fe0a 	bl	802aeb4 <siprintf>
 80092a0:	4826      	ldr	r0, [pc, #152]	; (800933c <handleClientInteraction+0x138>)
 80092a2:	f7fe ffa9 	bl	80081f8 <hal_debug_puts>
				if (pIA->RespCB != NULL) {
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092aa:	2b00      	cmp	r3, #0
 80092ac:	d007      	beq.n	80092be <handleClientInteraction+0xba>
					pIA->RespCB(NULL, pIA->pReqMsg, &pIA->RemoteEp);
 80092ae:	687b      	ldr	r3, [r7, #4]
 80092b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092b2:	687a      	ldr	r2, [r7, #4]
 80092b4:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80092b6:	687a      	ldr	r2, [r7, #4]
 80092b8:	3210      	adds	r2, #16
 80092ba:	2000      	movs	r0, #0
 80092bc:	4798      	blx	r3
				CoAP_DeleteInteraction(pIA);
 80092be:	6878      	ldr	r0, [r7, #4]
 80092c0:	f7fe fd1e 	bl	8007d00 <CoAP_DeleteInteraction>
			break;
 80092c4:	e034      	b.n	8009330 <handleClientInteraction+0x12c>
			if (pIA->RespCB != NULL) {
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d007      	beq.n	80092de <handleClientInteraction+0xda>
				pIA->RespCB(NULL, pIA->pReqMsg, &pIA->RemoteEp);
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092d2:	687a      	ldr	r2, [r7, #4]
 80092d4:	6b91      	ldr	r1, [r2, #56]	; 0x38
 80092d6:	687a      	ldr	r2, [r7, #4]
 80092d8:	3210      	adds	r2, #16
 80092da:	2000      	movs	r0, #0
 80092dc:	4798      	blx	r3
			CoAP_DeleteInteraction(pIA);
 80092de:	6878      	ldr	r0, [r7, #4]
 80092e0:	f7fe fd0e 	bl	8007d00 <CoAP_DeleteInteraction>
}
 80092e4:	e024      	b.n	8009330 <handleClientInteraction+0x12c>
	} else if (pIA->State == COAP_STATE_HANDLE_RESPONSE) {
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	795b      	ldrb	r3, [r3, #5]
 80092ea:	2b09      	cmp	r3, #9
 80092ec:	d110      	bne.n	8009310 <handleClientInteraction+0x10c>
		if (pIA->RespCB != NULL) {
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092f2:	2b00      	cmp	r3, #0
 80092f4:	d008      	beq.n	8009308 <handleClientInteraction+0x104>
			pIA->RespCB(pIA->pRespMsg, pIA->pReqMsg, &(pIA->RemoteEp)); //call callback
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80092fa:	687a      	ldr	r2, [r7, #4]
 80092fc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 80092fe:	687a      	ldr	r2, [r7, #4]
 8009300:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8009302:	687a      	ldr	r2, [r7, #4]
 8009304:	3210      	adds	r2, #16
 8009306:	4798      	blx	r3
		CoAP_DeleteInteraction(
 8009308:	6878      	ldr	r0, [r7, #4]
 800930a:	f7fe fcf9 	bl	8007d00 <CoAP_DeleteInteraction>
}
 800930e:	e00f      	b.n	8009330 <handleClientInteraction+0x12c>
		if (pIA->RespCB != NULL) {
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009314:	2b00      	cmp	r3, #0
 8009316:	d007      	beq.n	8009328 <handleClientInteraction+0x124>
			pIA->RespCB(NULL, pIA->pReqMsg, &pIA->RemoteEp);
 8009318:	687b      	ldr	r3, [r7, #4]
 800931a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800931c:	687a      	ldr	r2, [r7, #4]
 800931e:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8009320:	687a      	ldr	r2, [r7, #4]
 8009322:	3210      	adds	r2, #16
 8009324:	2000      	movs	r0, #0
 8009326:	4798      	blx	r3
		CoAP_DeleteInteraction(pIA); //unknown state, should not go here
 8009328:	6878      	ldr	r0, [r7, #4]
 800932a:	f7fe fce9 	bl	8007d00 <CoAP_DeleteInteraction>
}
 800932e:	e7ff      	b.n	8009330 <handleClientInteraction+0x12c>
 8009330:	bf00      	nop
 8009332:	3714      	adds	r7, #20
 8009334:	46bd      	mov	sp, r7
 8009336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009338:	0802cda0 	.word	0x0802cda0
 800933c:	20000b54 	.word	0x20000b54

08009340 <CoAP_doWork>:

//must be called regularly
void _rom CoAP_doWork() {
 8009340:	b580      	push	{r7, lr}
 8009342:	b082      	sub	sp, #8
 8009344:	af00      	add	r7, sp, #0
	CoAP_Interaction_t* pIA = CoAP_GetLongestPendingInteraction();
 8009346:	f7fe fc9f 	bl	8007c88 <CoAP_GetLongestPendingInteraction>
 800934a:	6078      	str	r0, [r7, #4]

	if (pIA == NULL) {
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	2b00      	cmp	r3, #0
 8009350:	d037      	beq.n	80093c2 <CoAP_doWork+0x82>
		return;
	}



	uint32_t now = CoAP.api.rtc1HzCnt();
 8009352:	4b1e      	ldr	r3, [pc, #120]	; (80093cc <CoAP_doWork+0x8c>)
 8009354:	685b      	ldr	r3, [r3, #4]
 8009356:	4798      	blx	r3
 8009358:	6038      	str	r0, [r7, #0]

	if (timeAfter(pIA->SleepUntil, now)) {
 800935a:	687b      	ldr	r3, [r7, #4]
 800935c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800935e:	461a      	mov	r2, r3
 8009360:	683b      	ldr	r3, [r7, #0]
 8009362:	1ad3      	subs	r3, r2, r3
 8009364:	2b00      	cmp	r3, #0
 8009366:	db03      	blt.n	8009370 <CoAP_doWork+0x30>
		//INFO("Interaction paused till %lu (remaining: %lu)\n",pIA->SleepUntil, pIA->SleepUntil - now);
		CoAP_EnqueueLastInteraction(pIA);
 8009368:	6878      	ldr	r0, [r7, #4]
 800936a:	f7fe fcd9 	bl	8007d20 <CoAP_EnqueueLastInteraction>
		return;
 800936e:	e029      	b.n	80093c4 <CoAP_doWork+0x84>
	//INFO("Now: %lu\n", now);

	//	INFO("pending Transaction found! ReqTime: %u\r\n", pIA->ReqTime);
	//	com_mem_stats();

	switch (pIA->Role) {
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	791b      	ldrb	r3, [r3, #4]
 8009374:	2b03      	cmp	r3, #3
 8009376:	d00e      	beq.n	8009396 <CoAP_doWork+0x56>
 8009378:	2b03      	cmp	r3, #3
 800937a:	dc10      	bgt.n	800939e <CoAP_doWork+0x5e>
 800937c:	2b01      	cmp	r3, #1
 800937e:	d002      	beq.n	8009386 <CoAP_doWork+0x46>
 8009380:	2b02      	cmp	r3, #2
 8009382:	d004      	beq.n	800938e <CoAP_doWork+0x4e>
 8009384:	e00b      	b.n	800939e <CoAP_doWork+0x5e>
	case COAP_ROLE_SERVER:
		handleServerInteraction(pIA);
 8009386:	6878      	ldr	r0, [r7, #4]
 8009388:	f7ff fbba 	bl	8008b00 <handleServerInteraction>
		break;
 800938c:	e01a      	b.n	80093c4 <CoAP_doWork+0x84>
	case COAP_ROLE_NOTIFICATION:
		handleNotifyInteraction(pIA);
 800938e:	6878      	ldr	r0, [r7, #4]
 8009390:	f7ff fdd8 	bl	8008f44 <handleNotifyInteraction>
		break;
 8009394:	e016      	b.n	80093c4 <CoAP_doWork+0x84>
	case COAP_ROLE_CLIENT:
		handleClientInteraction(pIA);
 8009396:	6878      	ldr	r0, [r7, #4]
 8009398:	f7ff ff34 	bl	8009204 <handleClientInteraction>
		break;
 800939c:	e012      	b.n	80093c4 <CoAP_doWork+0x84>
	default:
		ERROR("Unknown Notification Role: %d", pIA->Role);
 800939e:	490c      	ldr	r1, [pc, #48]	; (80093d0 <CoAP_doWork+0x90>)
 80093a0:	480c      	ldr	r0, [pc, #48]	; (80093d4 <CoAP_doWork+0x94>)
 80093a2:	f021 fd87 	bl	802aeb4 <siprintf>
 80093a6:	480b      	ldr	r0, [pc, #44]	; (80093d4 <CoAP_doWork+0x94>)
 80093a8:	f7fe ff26 	bl	80081f8 <hal_debug_puts>
 80093ac:	687b      	ldr	r3, [r7, #4]
 80093ae:	791b      	ldrb	r3, [r3, #4]
 80093b0:	461a      	mov	r2, r3
 80093b2:	4909      	ldr	r1, [pc, #36]	; (80093d8 <CoAP_doWork+0x98>)
 80093b4:	4807      	ldr	r0, [pc, #28]	; (80093d4 <CoAP_doWork+0x94>)
 80093b6:	f021 fd7d 	bl	802aeb4 <siprintf>
 80093ba:	4806      	ldr	r0, [pc, #24]	; (80093d4 <CoAP_doWork+0x94>)
 80093bc:	f7fe ff1c 	bl	80081f8 <hal_debug_puts>
 80093c0:	e000      	b.n	80093c4 <CoAP_doWork+0x84>
		return;
 80093c2:	bf00      	nop
	}
}
 80093c4:	3708      	adds	r7, #8
 80093c6:	46bd      	mov	sp, r7
 80093c8:	bd80      	pop	{r7, pc}
 80093ca:	bf00      	nop
 80093cc:	20000b0c 	.word	0x20000b0c
 80093d0:	0802c6f4 	.word	0x0802c6f4
 80093d4:	20000b54 	.word	0x20000b54
 80093d8:	0802cde0 	.word	0x0802cde0

080093dc <CoAP_free>:
#include "coap.h"
#include "coap_mem.h"

void CoAP_free(void *a) {
 80093dc:	b580      	push	{r7, lr}
 80093de:	b082      	sub	sp, #8
 80093e0:	af00      	add	r7, sp, #0
 80093e2:	6078      	str	r0, [r7, #4]
	CoAP.api.free(a);
 80093e4:	4b03      	ldr	r3, [pc, #12]	; (80093f4 <CoAP_free+0x18>)
 80093e6:	691b      	ldr	r3, [r3, #16]
 80093e8:	6878      	ldr	r0, [r7, #4]
 80093ea:	4798      	blx	r3
}
 80093ec:	bf00      	nop
 80093ee:	3708      	adds	r7, #8
 80093f0:	46bd      	mov	sp, r7
 80093f2:	bd80      	pop	{r7, pc}
 80093f4:	20000b0c 	.word	0x20000b0c

080093f8 <CoAP_malloc>:

void *CoAP_malloc(size_t size) {
 80093f8:	b580      	push	{r7, lr}
 80093fa:	b082      	sub	sp, #8
 80093fc:	af00      	add	r7, sp, #0
 80093fe:	6078      	str	r0, [r7, #4]
	return CoAP.api.malloc(size);
 8009400:	4b04      	ldr	r3, [pc, #16]	; (8009414 <CoAP_malloc+0x1c>)
 8009402:	68db      	ldr	r3, [r3, #12]
 8009404:	6878      	ldr	r0, [r7, #4]
 8009406:	4798      	blx	r3
 8009408:	4603      	mov	r3, r0
}
 800940a:	4618      	mov	r0, r3
 800940c:	3708      	adds	r7, #8
 800940e:	46bd      	mov	sp, r7
 8009410:	bd80      	pop	{r7, pc}
 8009412:	bf00      	nop
 8009414:	20000b0c 	.word	0x20000b0c

08009418 <CoAP_malloc0>:

void *CoAP_malloc0(size_t size) {
 8009418:	b580      	push	{r7, lr}
 800941a:	b084      	sub	sp, #16
 800941c:	af00      	add	r7, sp, #0
 800941e:	6078      	str	r0, [r7, #4]
	void *a = CoAP.api.malloc(size);
 8009420:	4b08      	ldr	r3, [pc, #32]	; (8009444 <CoAP_malloc0+0x2c>)
 8009422:	68db      	ldr	r3, [r3, #12]
 8009424:	6878      	ldr	r0, [r7, #4]
 8009426:	4798      	blx	r3
 8009428:	60f8      	str	r0, [r7, #12]
	if (a != NULL) {
 800942a:	68fb      	ldr	r3, [r7, #12]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d004      	beq.n	800943a <CoAP_malloc0+0x22>
		memset(a, 0, size);
 8009430:	687a      	ldr	r2, [r7, #4]
 8009432:	2100      	movs	r1, #0
 8009434:	68f8      	ldr	r0, [r7, #12]
 8009436:	f021 fe5f 	bl	802b0f8 <memset>
	}
	return a;
 800943a:	68fb      	ldr	r3, [r7, #12]
}
 800943c:	4618      	mov	r0, r3
 800943e:	3710      	adds	r7, #16
 8009440:	46bd      	mov	sp, r7
 8009442:	bd80      	pop	{r7, pc}
 8009444:	20000b0c 	.word	0x20000b0c

08009448 <CoAP_InitToEmptyResetMsg>:
#include <inttypes.h>
#include "coap.h"
#include "liblobaro_coap.h"
#include "coap_mem.h"

static void _rom CoAP_InitToEmptyResetMsg(CoAP_Message_t* msg) {
 8009448:	b480      	push	{r7}
 800944a:	b087      	sub	sp, #28
 800944c:	af00      	add	r7, sp, #0
 800944e:	6078      	str	r0, [r7, #4]
	msg->Type = RST;
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	2203      	movs	r2, #3
 8009454:	711a      	strb	r2, [r3, #4]
	msg->Code = EMPTY;
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	2200      	movs	r2, #0
 800945a:	715a      	strb	r2, [r3, #5]
	msg->PayloadLength = 0;
 800945c:	687b      	ldr	r3, [r7, #4]
 800945e:	2200      	movs	r2, #0
 8009460:	811a      	strh	r2, [r3, #8]
	msg->PayloadBufSize = 0;
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	2200      	movs	r2, #0
 8009466:	815a      	strh	r2, [r3, #10]
	msg->MessageID = 0;
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	2200      	movs	r2, #0
 800946c:	80da      	strh	r2, [r3, #6]
	msg->pOptionsList = NULL;
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	2200      	movs	r2, #0
 8009472:	619a      	str	r2, [r3, #24]
	msg->Payload = NULL;
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	2200      	movs	r2, #0
 8009478:	61da      	str	r2, [r3, #28]
	CoAP_Token_t tok = {.Token= {0,0,0,0,0,0,0,0}, .Length = 0};
 800947a:	4a0a      	ldr	r2, [pc, #40]	; (80094a4 <CoAP_InitToEmptyResetMsg+0x5c>)
 800947c:	f107 030c 	add.w	r3, r7, #12
 8009480:	ca07      	ldmia	r2, {r0, r1, r2}
 8009482:	c303      	stmia	r3!, {r0, r1}
 8009484:	701a      	strb	r2, [r3, #0]
	msg->Token = tok;
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	330c      	adds	r3, #12
 800948a:	f107 020c 	add.w	r2, r7, #12
 800948e:	ca07      	ldmia	r2, {r0, r1, r2}
 8009490:	c303      	stmia	r3!, {r0, r1}
 8009492:	701a      	strb	r2, [r3, #0]
	msg->Timestamp = 0;
 8009494:	687b      	ldr	r3, [r7, #4]
 8009496:	2200      	movs	r2, #0
 8009498:	601a      	str	r2, [r3, #0]
}
 800949a:	bf00      	nop
 800949c:	371c      	adds	r7, #28
 800949e:	46bd      	mov	sp, r7
 80094a0:	bc80      	pop	{r7}
 80094a2:	4770      	bx	lr
 80094a4:	0802ce00 	.word	0x0802ce00

080094a8 <CoAP_TokenEqual>:


bool CoAP_TokenEqual(CoAP_Token_t a, CoAP_Token_t b) {
 80094a8:	b082      	sub	sp, #8
 80094aa:	b490      	push	{r4, r7}
 80094ac:	b086      	sub	sp, #24
 80094ae:	af00      	add	r7, sp, #0
 80094b0:	1d3c      	adds	r4, r7, #4
 80094b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80094b6:	627b      	str	r3, [r7, #36]	; 0x24
	if (a.Length != b.Length) {
 80094b8:	793a      	ldrb	r2, [r7, #4]
 80094ba:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80094be:	429a      	cmp	r2, r3
 80094c0:	d001      	beq.n	80094c6 <CoAP_TokenEqual+0x1e>
		return false;
 80094c2:	2300      	movs	r3, #0
 80094c4:	e018      	b.n	80094f8 <CoAP_TokenEqual+0x50>
	}
	for (int i = 0; i < a.Length; i++) {
 80094c6:	2300      	movs	r3, #0
 80094c8:	617b      	str	r3, [r7, #20]
 80094ca:	e00f      	b.n	80094ec <CoAP_TokenEqual+0x44>
		if (a.Token[i] != b.Token[i]) {
 80094cc:	1d7a      	adds	r2, r7, #5
 80094ce:	697b      	ldr	r3, [r7, #20]
 80094d0:	4413      	add	r3, r2
 80094d2:	781a      	ldrb	r2, [r3, #0]
 80094d4:	f107 0125 	add.w	r1, r7, #37	; 0x25
 80094d8:	697b      	ldr	r3, [r7, #20]
 80094da:	440b      	add	r3, r1
 80094dc:	781b      	ldrb	r3, [r3, #0]
 80094de:	429a      	cmp	r2, r3
 80094e0:	d001      	beq.n	80094e6 <CoAP_TokenEqual+0x3e>
			return false;
 80094e2:	2300      	movs	r3, #0
 80094e4:	e008      	b.n	80094f8 <CoAP_TokenEqual+0x50>
	for (int i = 0; i < a.Length; i++) {
 80094e6:	697b      	ldr	r3, [r7, #20]
 80094e8:	3301      	adds	r3, #1
 80094ea:	617b      	str	r3, [r7, #20]
 80094ec:	793b      	ldrb	r3, [r7, #4]
 80094ee:	461a      	mov	r2, r3
 80094f0:	697b      	ldr	r3, [r7, #20]
 80094f2:	4293      	cmp	r3, r2
 80094f4:	dbea      	blt.n	80094cc <CoAP_TokenEqual+0x24>
		}
	}
	return true;
 80094f6:	2301      	movs	r3, #1
}
 80094f8:	4618      	mov	r0, r3
 80094fa:	3718      	adds	r7, #24
 80094fc:	46bd      	mov	sp, r7
 80094fe:	bc90      	pop	{r4, r7}
 8009500:	b002      	add	sp, #8
 8009502:	4770      	bx	lr

08009504 <CoAP_free_MsgPayload>:

void _rom CoAP_free_MsgPayload(CoAP_Message_t** Msg) {
 8009504:	b480      	push	{r7}
 8009506:	b083      	sub	sp, #12
 8009508:	af00      	add	r7, sp, #0
 800950a:	6078      	str	r0, [r7, #4]
	return;
 800950c:	bf00      	nop
	// TODO: this will break us!!!
	CoAP.api.free((void*) (*Msg)->Payload);
	(*Msg)->Payload = NULL;
	(*Msg)->PayloadBufSize = 0;
	*/
}
 800950e:	370c      	adds	r7, #12
 8009510:	46bd      	mov	sp, r7
 8009512:	bc80      	pop	{r7}
 8009514:	4770      	bx	lr

08009516 <CoAP_MsgIsRequest>:

bool _rom CoAP_MsgIsRequest(CoAP_Message_t* pMsg) {
 8009516:	b480      	push	{r7}
 8009518:	b083      	sub	sp, #12
 800951a:	af00      	add	r7, sp, #0
 800951c:	6078      	str	r0, [r7, #4]
	if (pMsg->Code != EMPTY && pMsg->Code <= REQ_LAST)
 800951e:	687b      	ldr	r3, [r7, #4]
 8009520:	795b      	ldrb	r3, [r3, #5]
 8009522:	2b00      	cmp	r3, #0
 8009524:	d005      	beq.n	8009532 <CoAP_MsgIsRequest+0x1c>
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	795b      	ldrb	r3, [r3, #5]
 800952a:	2b07      	cmp	r3, #7
 800952c:	d801      	bhi.n	8009532 <CoAP_MsgIsRequest+0x1c>
		return true;
 800952e:	2301      	movs	r3, #1
 8009530:	e000      	b.n	8009534 <CoAP_MsgIsRequest+0x1e>
	return false;
 8009532:	2300      	movs	r3, #0
}
 8009534:	4618      	mov	r0, r3
 8009536:	370c      	adds	r7, #12
 8009538:	46bd      	mov	sp, r7
 800953a:	bc80      	pop	{r7}
 800953c:	4770      	bx	lr
	...

08009540 <CoAP_MsgIsOlderThan>:
	if (pMsg->Code != EMPTY && pMsg->Code >= RESP_FIRST_2_00)
		return true;
	return false;
}

bool _rom CoAP_MsgIsOlderThan(CoAP_Message_t* pMsg, uint32_t timespan) {
 8009540:	b580      	push	{r7, lr}
 8009542:	b082      	sub	sp, #8
 8009544:	af00      	add	r7, sp, #0
 8009546:	6078      	str	r0, [r7, #4]
 8009548:	6039      	str	r1, [r7, #0]
	if (timeAfter(CoAP.api.rtc1HzCnt(), pMsg->Timestamp + timespan)) {
 800954a:	4b09      	ldr	r3, [pc, #36]	; (8009570 <CoAP_MsgIsOlderThan+0x30>)
 800954c:	685b      	ldr	r3, [r3, #4]
 800954e:	4798      	blx	r3
 8009550:	4603      	mov	r3, r0
 8009552:	4619      	mov	r1, r3
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	681a      	ldr	r2, [r3, #0]
 8009558:	683b      	ldr	r3, [r7, #0]
 800955a:	4413      	add	r3, r2
 800955c:	1acb      	subs	r3, r1, r3
 800955e:	2b00      	cmp	r3, #0
 8009560:	db01      	blt.n	8009566 <CoAP_MsgIsOlderThan+0x26>
		return true;
 8009562:	2301      	movs	r3, #1
 8009564:	e000      	b.n	8009568 <CoAP_MsgIsOlderThan+0x28>
	}
	else {
		return false;
 8009566:	2300      	movs	r3, #0
	}
}
 8009568:	4618      	mov	r0, r3
 800956a:	3708      	adds	r7, #8
 800956c:	46bd      	mov	sp, r7
 800956e:	bd80      	pop	{r7, pc}
 8009570:	20000b0c 	.word	0x20000b0c

08009574 <CoAP_free_Message>:

CoAP_Result_t _rom CoAP_free_Message(CoAP_Message_t** Msg) {
 8009574:	b580      	push	{r7, lr}
 8009576:	b082      	sub	sp, #8
 8009578:	af00      	add	r7, sp, #0
 800957a:	6078      	str	r0, [r7, #4]
	DEBUG_COAP("Free message %p\n", *Msg);
	if (*Msg == NULL) {
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	681b      	ldr	r3, [r3, #0]
 8009580:	2b00      	cmp	r3, #0
 8009582:	d101      	bne.n	8009588 <CoAP_free_Message+0x14>
		return COAP_OK; //nothing to free
 8009584:	2300      	movs	r3, #0
 8009586:	e01f      	b.n	80095c8 <CoAP_free_Message+0x54>
	}

	if ((*Msg)->Type == CON) {
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	681b      	ldr	r3, [r3, #0]
 800958c:	791b      	ldrb	r3, [r3, #4]
 800958e:	2b00      	cmp	r3, #0
 8009590:	d008      	beq.n	80095a4 <CoAP_free_Message+0x30>
		DEBUG_COAP("- Message memory freed! (CON, MID: %d):\r\n", (*Msg)->MessageID);
	}
	else if ((*Msg)->Type == NON) {
 8009592:	687b      	ldr	r3, [r7, #4]
 8009594:	681b      	ldr	r3, [r3, #0]
 8009596:	791b      	ldrb	r3, [r3, #4]
 8009598:	2b01      	cmp	r3, #1
 800959a:	d003      	beq.n	80095a4 <CoAP_free_Message+0x30>
		DEBUG_COAP("- Message memory freed! (NON, MID: %d):\r\n", (*Msg)->MessageID);
	}
	else if ((*Msg)->Type == ACK) {
 800959c:	687b      	ldr	r3, [r7, #4]
 800959e:	681b      	ldr	r3, [r3, #0]
 80095a0:	791b      	ldrb	r3, [r3, #4]
 80095a2:	2b02      	cmp	r3, #2
	}
	else if ((*Msg)->Type == RST) {
		DEBUG_COAP("- Message memory freed! (RST, MID: %d):\r\n", (*Msg)->MessageID);
	}

	CoAP_FreeOptionList(&((*Msg)->pOptionsList));
 80095a4:	687b      	ldr	r3, [r7, #4]
 80095a6:	681b      	ldr	r3, [r3, #0]
 80095a8:	3318      	adds	r3, #24
 80095aa:	4618      	mov	r0, r3
 80095ac:	f001 fba2 	bl	800acf4 <CoAP_FreeOptionList>
	CoAP_free_MsgPayload(Msg);
 80095b0:	6878      	ldr	r0, [r7, #4]
 80095b2:	f7ff ffa7 	bl	8009504 <CoAP_free_MsgPayload>

	//finally delete msg body
	CoAP_free((void*) (*Msg));
 80095b6:	687b      	ldr	r3, [r7, #4]
 80095b8:	681b      	ldr	r3, [r3, #0]
 80095ba:	4618      	mov	r0, r3
 80095bc:	f7ff ff0e 	bl	80093dc <CoAP_free>
	*Msg = NULL;
 80095c0:	687b      	ldr	r3, [r7, #4]
 80095c2:	2200      	movs	r2, #0
 80095c4:	601a      	str	r2, [r3, #0]

	return COAP_OK;
 80095c6:	2300      	movs	r3, #0
}
 80095c8:	4618      	mov	r0, r3
 80095ca:	3708      	adds	r7, #8
 80095cc:	46bd      	mov	sp, r7
 80095ce:	bd80      	pop	{r7, pc}

080095d0 <CoAP_getRespMsgType>:

static CoAP_MessageType_t _rom CoAP_getRespMsgType(CoAP_Message_t* ReqMsg) { //todo inline it
 80095d0:	b480      	push	{r7}
 80095d2:	b083      	sub	sp, #12
 80095d4:	af00      	add	r7, sp, #0
 80095d6:	6078      	str	r0, [r7, #4]
	if (ReqMsg->Type == CON)
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	791b      	ldrb	r3, [r3, #4]
 80095dc:	2b00      	cmp	r3, #0
 80095de:	d101      	bne.n	80095e4 <CoAP_getRespMsgType+0x14>
		return ACK; //for piggybacked responses
 80095e0:	2302      	movs	r3, #2
 80095e2:	e000      	b.n	80095e6 <CoAP_getRespMsgType+0x16>
	else
		return NON;
 80095e4:	2301      	movs	r3, #1
}
 80095e6:	4618      	mov	r0, r3
 80095e8:	370c      	adds	r7, #12
 80095ea:	46bd      	mov	sp, r7
 80095ec:	bc80      	pop	{r7}
 80095ee:	4770      	bx	lr

080095f0 <CoAP_getRespMsgID>:

static uint16_t _rom CoAP_getRespMsgID(CoAP_Message_t* ReqMsg) {
 80095f0:	b580      	push	{r7, lr}
 80095f2:	b082      	sub	sp, #8
 80095f4:	af00      	add	r7, sp, #0
 80095f6:	6078      	str	r0, [r7, #4]
	if (ReqMsg->Type == CON)
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	791b      	ldrb	r3, [r3, #4]
 80095fc:	2b00      	cmp	r3, #0
 80095fe:	d102      	bne.n	8009606 <CoAP_getRespMsgID+0x16>
		return ReqMsg->MessageID; //for piggybacked responses
 8009600:	687b      	ldr	r3, [r7, #4]
 8009602:	88db      	ldrh	r3, [r3, #6]
 8009604:	e002      	b.n	800960c <CoAP_getRespMsgID+0x1c>
	else
		return CoAP_GetNextMid();
 8009606:	f000 fc3d 	bl	8009e84 <CoAP_GetNextMid>
 800960a:	4603      	mov	r3, r0
}
 800960c:	4618      	mov	r0, r3
 800960e:	3708      	adds	r7, #8
 8009610:	46bd      	mov	sp, r7
 8009612:	bd80      	pop	{r7, pc}

08009614 <CoAP_AllocRespMsg>:

CoAP_Message_t* _rom CoAP_AllocRespMsg(CoAP_Message_t* ReqMsg, CoAP_MessageCode_t Code, uint16_t PayloadMaxSize) {
 8009614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009616:	b089      	sub	sp, #36	; 0x24
 8009618:	af06      	add	r7, sp, #24
 800961a:	6078      	str	r0, [r7, #4]
 800961c:	460b      	mov	r3, r1
 800961e:	70fb      	strb	r3, [r7, #3]
 8009620:	4613      	mov	r3, r2
 8009622:	803b      	strh	r3, [r7, #0]
	return CoAP_CreateMessage(CoAP_getRespMsgType(ReqMsg), Code, CoAP_getRespMsgID(ReqMsg), NULL, 0, PayloadMaxSize, ReqMsg->Token);
 8009624:	6878      	ldr	r0, [r7, #4]
 8009626:	f7ff ffd3 	bl	80095d0 <CoAP_getRespMsgType>
 800962a:	4603      	mov	r3, r0
 800962c:	461d      	mov	r5, r3
 800962e:	6878      	ldr	r0, [r7, #4]
 8009630:	f7ff ffde 	bl	80095f0 <CoAP_getRespMsgID>
 8009634:	4603      	mov	r3, r0
 8009636:	461e      	mov	r6, r3
 8009638:	78fc      	ldrb	r4, [r7, #3]
 800963a:	687a      	ldr	r2, [r7, #4]
 800963c:	ab02      	add	r3, sp, #8
 800963e:	320c      	adds	r2, #12
 8009640:	ca07      	ldmia	r2, {r0, r1, r2}
 8009642:	c303      	stmia	r3!, {r0, r1}
 8009644:	701a      	strb	r2, [r3, #0]
 8009646:	883b      	ldrh	r3, [r7, #0]
 8009648:	9301      	str	r3, [sp, #4]
 800964a:	2300      	movs	r3, #0
 800964c:	9300      	str	r3, [sp, #0]
 800964e:	2300      	movs	r3, #0
 8009650:	4632      	mov	r2, r6
 8009652:	4621      	mov	r1, r4
 8009654:	4628      	mov	r0, r5
 8009656:	f000 f805 	bl	8009664 <CoAP_CreateMessage>
 800965a:	4603      	mov	r3, r0
}
 800965c:	4618      	mov	r0, r3
 800965e:	370c      	adds	r7, #12
 8009660:	46bd      	mov	sp, r7
 8009662:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009664 <CoAP_CreateMessage>:
		CoAP_MessageCode_t Code,
		uint16_t MessageID,
		const uint8_t* pPayloadInitialContent,
		uint16_t PayloadInitialContentLength,
		uint16_t PayloadMaxSize,
		CoAP_Token_t Token) {
 8009664:	b580      	push	{r7, lr}
 8009666:	b084      	sub	sp, #16
 8009668:	af00      	add	r7, sp, #0
 800966a:	603b      	str	r3, [r7, #0]
 800966c:	4603      	mov	r3, r0
 800966e:	71fb      	strb	r3, [r7, #7]
 8009670:	460b      	mov	r3, r1
 8009672:	71bb      	strb	r3, [r7, #6]
 8009674:	4613      	mov	r3, r2
 8009676:	80bb      	strh	r3, [r7, #4]

	//safety checks
	if (PayloadInitialContentLength > PayloadMaxSize) {
 8009678:	8b3a      	ldrh	r2, [r7, #24]
 800967a:	8bbb      	ldrh	r3, [r7, #28]
 800967c:	429a      	cmp	r2, r3
 800967e:	d90f      	bls.n	80096a0 <CoAP_CreateMessage+0x3c>
		ERROR("Initial Content bigger than field size!");
 8009680:	492a      	ldr	r1, [pc, #168]	; (800972c <CoAP_CreateMessage+0xc8>)
 8009682:	482b      	ldr	r0, [pc, #172]	; (8009730 <CoAP_CreateMessage+0xcc>)
 8009684:	f021 fc16 	bl	802aeb4 <siprintf>
 8009688:	4829      	ldr	r0, [pc, #164]	; (8009730 <CoAP_CreateMessage+0xcc>)
 800968a:	f7fe fdb5 	bl	80081f8 <hal_debug_puts>
 800968e:	4929      	ldr	r1, [pc, #164]	; (8009734 <CoAP_CreateMessage+0xd0>)
 8009690:	4827      	ldr	r0, [pc, #156]	; (8009730 <CoAP_CreateMessage+0xcc>)
 8009692:	f021 fc0f 	bl	802aeb4 <siprintf>
 8009696:	4826      	ldr	r0, [pc, #152]	; (8009730 <CoAP_CreateMessage+0xcc>)
 8009698:	f7fe fdae 	bl	80081f8 <hal_debug_puts>
		return NULL;
 800969c:	2300      	movs	r3, #0
 800969e:	e041      	b.n	8009724 <CoAP_CreateMessage+0xc0>
	}

	CoAP_Message_t* pMsg = (CoAP_Message_t*) CoAP_malloc0(sizeof(CoAP_Message_t) + PayloadMaxSize); //malloc space
 80096a0:	8bbb      	ldrh	r3, [r7, #28]
 80096a2:	3324      	adds	r3, #36	; 0x24
 80096a4:	4618      	mov	r0, r3
 80096a6:	f7ff feb7 	bl	8009418 <CoAP_malloc0>
 80096aa:	60f8      	str	r0, [r7, #12]
	if (pMsg == NULL) {
 80096ac:	68fb      	ldr	r3, [r7, #12]
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	d101      	bne.n	80096b6 <CoAP_CreateMessage+0x52>
		return NULL;
 80096b2:	2300      	movs	r3, #0
 80096b4:	e036      	b.n	8009724 <CoAP_CreateMessage+0xc0>
	}
	INFO("Created message %p\n", pMsg);
 80096b6:	68fa      	ldr	r2, [r7, #12]
 80096b8:	491f      	ldr	r1, [pc, #124]	; (8009738 <CoAP_CreateMessage+0xd4>)
 80096ba:	481d      	ldr	r0, [pc, #116]	; (8009730 <CoAP_CreateMessage+0xcc>)
 80096bc:	f021 fbfa 	bl	802aeb4 <siprintf>
 80096c0:	481b      	ldr	r0, [pc, #108]	; (8009730 <CoAP_CreateMessage+0xcc>)
 80096c2:	f7fe fd99 	bl	80081f8 <hal_debug_puts>

	CoAP_InitToEmptyResetMsg(pMsg); //init
 80096c6:	68f8      	ldr	r0, [r7, #12]
 80096c8:	f7ff febe 	bl	8009448 <CoAP_InitToEmptyResetMsg>

	pMsg->Type = Type;
 80096cc:	68fb      	ldr	r3, [r7, #12]
 80096ce:	79fa      	ldrb	r2, [r7, #7]
 80096d0:	711a      	strb	r2, [r3, #4]
	pMsg->Code = Code;
 80096d2:	68fb      	ldr	r3, [r7, #12]
 80096d4:	79ba      	ldrb	r2, [r7, #6]
 80096d6:	715a      	strb	r2, [r3, #5]
	pMsg->MessageID = MessageID;
 80096d8:	68fb      	ldr	r3, [r7, #12]
 80096da:	88ba      	ldrh	r2, [r7, #4]
 80096dc:	80da      	strh	r2, [r3, #6]
	pMsg->Token = Token;
 80096de:	68fb      	ldr	r3, [r7, #12]
 80096e0:	330c      	adds	r3, #12
 80096e2:	f107 0220 	add.w	r2, r7, #32
 80096e6:	ca07      	ldmia	r2, {r0, r1, r2}
 80096e8:	c303      	stmia	r3!, {r0, r1}
 80096ea:	701a      	strb	r2, [r3, #0]
	pMsg->Timestamp = 0;
 80096ec:	68fb      	ldr	r3, [r7, #12]
 80096ee:	2200      	movs	r2, #0
 80096f0:	601a      	str	r2, [r3, #0]

	pMsg->PayloadLength = PayloadInitialContentLength;
 80096f2:	68fb      	ldr	r3, [r7, #12]
 80096f4:	8b3a      	ldrh	r2, [r7, #24]
 80096f6:	811a      	strh	r2, [r3, #8]
	if (PayloadMaxSize) {
 80096f8:	8bbb      	ldrh	r3, [r7, #28]
 80096fa:	2b00      	cmp	r3, #0
 80096fc:	d011      	beq.n	8009722 <CoAP_CreateMessage+0xbe>
		pMsg->PayloadBufSize = PayloadMaxSize;
 80096fe:	68fb      	ldr	r3, [r7, #12]
 8009700:	8bba      	ldrh	r2, [r7, #28]
 8009702:	815a      	strh	r2, [r3, #10]
		pMsg->Payload = ((uint8_t*) (pMsg)) + sizeof(CoAP_Message_t); //set pointer
 8009704:	68fb      	ldr	r3, [r7, #12]
 8009706:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800970a:	68fb      	ldr	r3, [r7, #12]
 800970c:	61da      	str	r2, [r3, #28]
		if (pPayloadInitialContent != NULL) {
 800970e:	683b      	ldr	r3, [r7, #0]
 8009710:	2b00      	cmp	r3, #0
 8009712:	d006      	beq.n	8009722 <CoAP_CreateMessage+0xbe>
			coap_memcpy((void*) ((pMsg)->Payload), (void*) pPayloadInitialContent, PayloadInitialContentLength);
 8009714:	68fb      	ldr	r3, [r7, #12]
 8009716:	69db      	ldr	r3, [r3, #28]
 8009718:	8b3a      	ldrh	r2, [r7, #24]
 800971a:	6839      	ldr	r1, [r7, #0]
 800971c:	4618      	mov	r0, r3
 800971e:	f021 fd8a 	bl	802b236 <memcpy>
		}
	}

	return pMsg;
 8009722:	68fb      	ldr	r3, [r7, #12]
}
 8009724:	4618      	mov	r0, r3
 8009726:	3710      	adds	r7, #16
 8009728:	46bd      	mov	sp, r7
 800972a:	bd80      	pop	{r7, pc}
 800972c:	0802ce0c 	.word	0x0802ce0c
 8009730:	20000b54 	.word	0x20000b54
 8009734:	0802ce18 	.word	0x0802ce18
 8009738:	0802ce40 	.word	0x0802ce40

0800973c <CoAP_ParseMessageFromDatagram>:

CoAP_Result_t _rom CoAP_ParseMessageFromDatagram(uint8_t* srcArr, uint16_t srcArrLength, CoAP_Message_t** rxedMsg) {
 800973c:	b590      	push	{r4, r7, lr}
 800973e:	b08b      	sub	sp, #44	; 0x2c
 8009740:	af00      	add	r7, sp, #0
 8009742:	60f8      	str	r0, [r7, #12]
 8009744:	460b      	mov	r3, r1
 8009746:	607a      	str	r2, [r7, #4]
 8009748:	817b      	strh	r3, [r7, #10]
	//we use local mem and copy afterwards because we dont know yet the size of payload buffer
	//but want to allocate one block for complete final "rxedMsg" memory without realloc the buf size later.
	static CoAP_Message_t Msg;

	uint8_t TokenLength = 0;
 800974a:	2300      	movs	r3, #0
 800974c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

	*rxedMsg = NULL;
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	2200      	movs	r2, #0
 8009754:	601a      	str	r2, [r3, #0]

	if (srcArrLength < 4)
 8009756:	897b      	ldrh	r3, [r7, #10]
 8009758:	2b03      	cmp	r3, #3
 800975a:	d801      	bhi.n	8009760 <CoAP_ParseMessageFromDatagram+0x24>
		return COAP_PARSE_DATAGRAM_TOO_SHORT; // Minimum Size of CoAP Message = 4 Bytes
 800975c:	2302      	movs	r3, #2
 800975e:	e102      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>

	CoAP_InitToEmptyResetMsg(&Msg);
 8009760:	4883      	ldr	r0, [pc, #524]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 8009762:	f7ff fe71 	bl	8009448 <CoAP_InitToEmptyResetMsg>

//1st Header Byte
	uint8_t Version = srcArr[0] >> 6u;
 8009766:	68fb      	ldr	r3, [r7, #12]
 8009768:	781b      	ldrb	r3, [r3, #0]
 800976a:	099b      	lsrs	r3, r3, #6
 800976c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
	if (Version != COAP_VERSION)
 8009770:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8009774:	2b01      	cmp	r3, #1
 8009776:	d001      	beq.n	800977c <CoAP_ParseMessageFromDatagram+0x40>
		return COAP_PARSE_UNKOWN_COAP_VERSION;
 8009778:	2303      	movs	r3, #3
 800977a:	e0f4      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>

	Msg.Type = (srcArr[0] & 0x30u) >> 4u;
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	781b      	ldrb	r3, [r3, #0]
 8009780:	091b      	lsrs	r3, r3, #4
 8009782:	b2db      	uxtb	r3, r3
 8009784:	f003 0303 	and.w	r3, r3, #3
 8009788:	b2da      	uxtb	r2, r3
 800978a:	4b79      	ldr	r3, [pc, #484]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 800978c:	711a      	strb	r2, [r3, #4]
	TokenLength = srcArr[0] & 0xFu;
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	781b      	ldrb	r3, [r3, #0]
 8009792:	f003 030f 	and.w	r3, r3, #15
 8009796:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
	if (TokenLength > 8) {
 800979a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800979e:	2b08      	cmp	r3, #8
 80097a0:	d908      	bls.n	80097b4 <CoAP_ParseMessageFromDatagram+0x78>
		INFO("CoAP-Parse Byte1 Error\r\n");
 80097a2:	4974      	ldr	r1, [pc, #464]	; (8009974 <CoAP_ParseMessageFromDatagram+0x238>)
 80097a4:	4874      	ldr	r0, [pc, #464]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80097a6:	f021 fb85 	bl	802aeb4 <siprintf>
 80097aa:	4873      	ldr	r0, [pc, #460]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80097ac:	f7fe fd24 	bl	80081f8 <hal_debug_puts>
		return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 80097b0:	2304      	movs	r3, #4
 80097b2:	e0d8      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>
	} // return COAP_PARSE_MESSAGE_FORMAT_ERROR;

//2nd & 3rd Header Byte
	Msg.Code = srcArr[1];
 80097b4:	68fb      	ldr	r3, [r7, #12]
 80097b6:	3301      	adds	r3, #1
 80097b8:	781a      	ldrb	r2, [r3, #0]
 80097ba:	4b6d      	ldr	r3, [pc, #436]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80097bc:	715a      	strb	r2, [r3, #5]

	//"Hack" to support early version of "myCoAP" iOS app which sends malformed "CoAP-pings" containing a token...
	//if(Msg.Code == EMPTY && (TokenLength != 0 || srcArrLength != 4))	{INFO("err2\r\n");return COAP_PARSE_MESSAGE_FORMAT_ERROR;}// return COAP_PARSE_MESSAGE_FORMAT_ERROR;

	uint8_t codeClass = ((uint8_t) Msg.Code) >> 5u;
 80097be:	4b6c      	ldr	r3, [pc, #432]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80097c0:	795b      	ldrb	r3, [r3, #5]
 80097c2:	095b      	lsrs	r3, r3, #5
 80097c4:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	if (codeClass == 1 || codeClass == 6 || codeClass == 7) {
 80097c8:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80097cc:	2b01      	cmp	r3, #1
 80097ce:	d007      	beq.n	80097e0 <CoAP_ParseMessageFromDatagram+0xa4>
 80097d0:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80097d4:	2b06      	cmp	r3, #6
 80097d6:	d003      	beq.n	80097e0 <CoAP_ParseMessageFromDatagram+0xa4>
 80097d8:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80097dc:	2b07      	cmp	r3, #7
 80097de:	d108      	bne.n	80097f2 <CoAP_ParseMessageFromDatagram+0xb6>
		INFO("CoAP-Parse Byte2/3 Error\r\n");
 80097e0:	4966      	ldr	r1, [pc, #408]	; (800997c <CoAP_ParseMessageFromDatagram+0x240>)
 80097e2:	4865      	ldr	r0, [pc, #404]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80097e4:	f021 fb66 	bl	802aeb4 <siprintf>
 80097e8:	4863      	ldr	r0, [pc, #396]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80097ea:	f7fe fd05 	bl	80081f8 <hal_debug_puts>
		return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 80097ee:	2304      	movs	r3, #4
 80097f0:	e0b9      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>
	}	//  return COAP_PARSE_MESSAGE_FORMAT_ERROR; //reserved classes

//4th Header Byte
	Msg.MessageID = (uint16_t) srcArr[2] << 8u | srcArr[3];
 80097f2:	68fb      	ldr	r3, [r7, #12]
 80097f4:	3302      	adds	r3, #2
 80097f6:	781b      	ldrb	r3, [r3, #0]
 80097f8:	021b      	lsls	r3, r3, #8
 80097fa:	b21a      	sxth	r2, r3
 80097fc:	68fb      	ldr	r3, [r7, #12]
 80097fe:	3303      	adds	r3, #3
 8009800:	781b      	ldrb	r3, [r3, #0]
 8009802:	b21b      	sxth	r3, r3
 8009804:	4313      	orrs	r3, r2
 8009806:	b21b      	sxth	r3, r3
 8009808:	b29a      	uxth	r2, r3
 800980a:	4b59      	ldr	r3, [pc, #356]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 800980c:	80da      	strh	r2, [r3, #6]

//further parsing locations depend on parsed 4Byte CoAP Header -> use of offset addressing
	uint16_t offset = 4;
 800980e:	2304      	movs	r3, #4
 8009810:	83fb      	strh	r3, [r7, #30]
	if (srcArrLength == offset) //no more data -> maybe a CoAP Ping
 8009812:	897a      	ldrh	r2, [r7, #10]
 8009814:	8bfb      	ldrh	r3, [r7, #30]
 8009816:	429a      	cmp	r2, r3
 8009818:	d06e      	beq.n	80098f8 <CoAP_ParseMessageFromDatagram+0x1bc>
		goto START_MSG_COPY_LABEL;
		//quick end of parsing...
	}

//Token (if any)
	CoAP_Token_t tok = {.Token = {0,0,0,0,0,0,0,0}, .Length = TokenLength};
 800981a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800981e:	753b      	strb	r3, [r7, #20]
 8009820:	4b57      	ldr	r3, [pc, #348]	; (8009980 <CoAP_ParseMessageFromDatagram+0x244>)
 8009822:	f107 0215 	add.w	r2, r7, #21
 8009826:	cb03      	ldmia	r3!, {r0, r1}
 8009828:	6010      	str	r0, [r2, #0]
 800982a:	6051      	str	r1, [r2, #4]
	Msg.Token = tok;
 800982c:	4b50      	ldr	r3, [pc, #320]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 800982e:	330c      	adds	r3, #12
 8009830:	f107 0214 	add.w	r2, r7, #20
 8009834:	ca07      	ldmia	r2, {r0, r1, r2}
 8009836:	c303      	stmia	r3!, {r0, r1}
 8009838:	701a      	strb	r2, [r3, #0]
	int i;
	for (i = 0; i < TokenLength; i++) {
 800983a:	2300      	movs	r3, #0
 800983c:	627b      	str	r3, [r7, #36]	; 0x24
 800983e:	e00f      	b.n	8009860 <CoAP_ParseMessageFromDatagram+0x124>
		Msg.Token.Token[i] = srcArr[offset + i];
 8009840:	8bfa      	ldrh	r2, [r7, #30]
 8009842:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009844:	4413      	add	r3, r2
 8009846:	461a      	mov	r2, r3
 8009848:	68fb      	ldr	r3, [r7, #12]
 800984a:	4413      	add	r3, r2
 800984c:	7819      	ldrb	r1, [r3, #0]
 800984e:	4a48      	ldr	r2, [pc, #288]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 8009850:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009852:	4413      	add	r3, r2
 8009854:	330d      	adds	r3, #13
 8009856:	460a      	mov	r2, r1
 8009858:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < TokenLength; i++) {
 800985a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800985c:	3301      	adds	r3, #1
 800985e:	627b      	str	r3, [r7, #36]	; 0x24
 8009860:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8009864:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009866:	429a      	cmp	r2, r3
 8009868:	dbea      	blt.n	8009840 <CoAP_ParseMessageFromDatagram+0x104>
	}

	offset += TokenLength;
 800986a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800986e:	b29a      	uxth	r2, r3
 8009870:	8bfb      	ldrh	r3, [r7, #30]
 8009872:	4413      	add	r3, r2
 8009874:	83fb      	strh	r3, [r7, #30]
	if (srcArrLength == offset)
 8009876:	897a      	ldrh	r2, [r7, #10]
 8009878:	8bfb      	ldrh	r3, [r7, #30]
 800987a:	429a      	cmp	r2, r3
 800987c:	d03e      	beq.n	80098fc <CoAP_ParseMessageFromDatagram+0x1c0>
		goto START_MSG_COPY_LABEL;

//Options (if any)
	uint8_t* pPayloadBegin = NULL;
 800987e:	2300      	movs	r3, #0
 8009880:	613b      	str	r3, [r7, #16]

	//this allocates memory for every option and puts it in die pOptionsList linked list
	//start address of payload also given back
	CoAP_Result_t ParseOptionsResult = parse_OptionsFromRaw(&(srcArr[offset]), srcArrLength - offset, &pPayloadBegin, &(Msg.pOptionsList));
 8009882:	8bfb      	ldrh	r3, [r7, #30]
 8009884:	68fa      	ldr	r2, [r7, #12]
 8009886:	18d0      	adds	r0, r2, r3
 8009888:	897a      	ldrh	r2, [r7, #10]
 800988a:	8bfb      	ldrh	r3, [r7, #30]
 800988c:	1ad3      	subs	r3, r2, r3
 800988e:	b299      	uxth	r1, r3
 8009890:	f107 0210 	add.w	r2, r7, #16
 8009894:	4b3b      	ldr	r3, [pc, #236]	; (8009984 <CoAP_ParseMessageFromDatagram+0x248>)
 8009896:	f000 ff7d 	bl	800a794 <parse_OptionsFromRaw>
 800989a:	4603      	mov	r3, r0
 800989c:	777b      	strb	r3, [r7, #29]

	if (ParseOptionsResult != COAP_OK) {
 800989e:	7f7b      	ldrb	r3, [r7, #29]
 80098a0:	2b00      	cmp	r3, #0
 80098a2:	d00b      	beq.n	80098bc <CoAP_ParseMessageFromDatagram+0x180>
		CoAP_FreeOptionList(&(Msg.pOptionsList));
 80098a4:	4837      	ldr	r0, [pc, #220]	; (8009984 <CoAP_ParseMessageFromDatagram+0x248>)
 80098a6:	f001 fa25 	bl	800acf4 <CoAP_FreeOptionList>
		INFO("CoAP-Parse Options Error\r\n");
 80098aa:	4937      	ldr	r1, [pc, #220]	; (8009988 <CoAP_ParseMessageFromDatagram+0x24c>)
 80098ac:	4832      	ldr	r0, [pc, #200]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80098ae:	f021 fb01 	bl	802aeb4 <siprintf>
 80098b2:	4831      	ldr	r0, [pc, #196]	; (8009978 <CoAP_ParseMessageFromDatagram+0x23c>)
 80098b4:	f7fe fca0 	bl	80081f8 <hal_debug_puts>
		return ParseOptionsResult;
 80098b8:	7f7b      	ldrb	r3, [r7, #29]
 80098ba:	e054      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>
	}

//Payload (if any)
	if (pPayloadBegin != NULL) {
 80098bc:	693b      	ldr	r3, [r7, #16]
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d012      	beq.n	80098e8 <CoAP_ParseMessageFromDatagram+0x1ac>
		Msg.PayloadLength = srcArrLength - (pPayloadBegin - srcArr);
 80098c2:	693a      	ldr	r2, [r7, #16]
 80098c4:	68fb      	ldr	r3, [r7, #12]
 80098c6:	1ad3      	subs	r3, r2, r3
 80098c8:	b29b      	uxth	r3, r3
 80098ca:	897a      	ldrh	r2, [r7, #10]
 80098cc:	1ad3      	subs	r3, r2, r3
 80098ce:	b29a      	uxth	r2, r3
 80098d0:	4b27      	ldr	r3, [pc, #156]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80098d2:	811a      	strh	r2, [r3, #8]
		if (Msg.PayloadLength > MAX_PAYLOAD_SIZE) {
 80098d4:	4b26      	ldr	r3, [pc, #152]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80098d6:	891b      	ldrh	r3, [r3, #8]
 80098d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80098dc:	d907      	bls.n	80098ee <CoAP_ParseMessageFromDatagram+0x1b2>
			CoAP_FreeOptionList(&(Msg.pOptionsList));
 80098de:	4829      	ldr	r0, [pc, #164]	; (8009984 <CoAP_ParseMessageFromDatagram+0x248>)
 80098e0:	f001 fa08 	bl	800acf4 <CoAP_FreeOptionList>
			return COAP_PARSE_TOO_MUCH_PAYLOAD;
 80098e4:	2307      	movs	r3, #7
 80098e6:	e03e      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>
		}
	} else
		Msg.PayloadLength = 0;
 80098e8:	4b21      	ldr	r3, [pc, #132]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80098ea:	2200      	movs	r2, #0
 80098ec:	811a      	strh	r2, [r3, #8]

	Msg.PayloadBufSize = Msg.PayloadLength;
 80098ee:	4b20      	ldr	r3, [pc, #128]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80098f0:	891a      	ldrh	r2, [r3, #8]
 80098f2:	4b1f      	ldr	r3, [pc, #124]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 80098f4:	815a      	strh	r2, [r3, #10]
 80098f6:	e002      	b.n	80098fe <CoAP_ParseMessageFromDatagram+0x1c2>
		goto START_MSG_COPY_LABEL;
 80098f8:	bf00      	nop
 80098fa:	e000      	b.n	80098fe <CoAP_ParseMessageFromDatagram+0x1c2>
		goto START_MSG_COPY_LABEL;
 80098fc:	bf00      	nop

//Get memory for total message data and copy parsed data
//Payload Buffers MUST located at end of CoAP_Message_t to let this work!
	START_MSG_COPY_LABEL:
	*rxedMsg = (CoAP_Message_t*) CoAP_malloc(sizeof(CoAP_Message_t) + Msg.PayloadLength);
 80098fe:	4b1c      	ldr	r3, [pc, #112]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 8009900:	891b      	ldrh	r3, [r3, #8]
 8009902:	3324      	adds	r3, #36	; 0x24
 8009904:	4618      	mov	r0, r3
 8009906:	f7ff fd77 	bl	80093f8 <CoAP_malloc>
 800990a:	4602      	mov	r2, r0
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	601a      	str	r2, [r3, #0]

	if (*rxedMsg == NULL)	//out of memory
 8009910:	687b      	ldr	r3, [r7, #4]
 8009912:	681b      	ldr	r3, [r3, #0]
 8009914:	2b00      	cmp	r3, #0
 8009916:	d104      	bne.n	8009922 <CoAP_ParseMessageFromDatagram+0x1e6>
	{
		CoAP_FreeOptionList(&(Msg.pOptionsList));
 8009918:	481a      	ldr	r0, [pc, #104]	; (8009984 <CoAP_ParseMessageFromDatagram+0x248>)
 800991a:	f001 f9eb 	bl	800acf4 <CoAP_FreeOptionList>
		return COAP_ERR_OUT_OF_MEMORY;
 800991e:	230d      	movs	r3, #13
 8009920:	e021      	b.n	8009966 <CoAP_ParseMessageFromDatagram+0x22a>
	}

	coap_memcpy((void*) (*rxedMsg), (void*) &Msg, sizeof(CoAP_Message_t));
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	681b      	ldr	r3, [r3, #0]
 8009926:	2224      	movs	r2, #36	; 0x24
 8009928:	4911      	ldr	r1, [pc, #68]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 800992a:	4618      	mov	r0, r3
 800992c:	f021 fc83 	bl	802b236 <memcpy>

	if (Msg.PayloadLength) {
 8009930:	4b0f      	ldr	r3, [pc, #60]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 8009932:	891b      	ldrh	r3, [r3, #8]
 8009934:	2b00      	cmp	r3, #0
 8009936:	d00e      	beq.n	8009956 <CoAP_ParseMessageFromDatagram+0x21a>
		(*rxedMsg)->Payload = ((uint8_t*) (*rxedMsg)) + sizeof(CoAP_Message_t);
 8009938:	687b      	ldr	r3, [r7, #4]
 800993a:	681a      	ldr	r2, [r3, #0]
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	3224      	adds	r2, #36	; 0x24
 8009942:	61da      	str	r2, [r3, #28]
		coap_memcpy((void*) ((*rxedMsg)->Payload), (void*) pPayloadBegin, Msg.PayloadLength);
 8009944:	687b      	ldr	r3, [r7, #4]
 8009946:	681b      	ldr	r3, [r3, #0]
 8009948:	69db      	ldr	r3, [r3, #28]
 800994a:	6939      	ldr	r1, [r7, #16]
 800994c:	4a08      	ldr	r2, [pc, #32]	; (8009970 <CoAP_ParseMessageFromDatagram+0x234>)
 800994e:	8912      	ldrh	r2, [r2, #8]
 8009950:	4618      	mov	r0, r3
 8009952:	f021 fc70 	bl	802b236 <memcpy>
	}

	(*rxedMsg)->Timestamp = CoAP.api.rtc1HzCnt();
 8009956:	4b0d      	ldr	r3, [pc, #52]	; (800998c <CoAP_ParseMessageFromDatagram+0x250>)
 8009958:	685b      	ldr	r3, [r3, #4]
 800995a:	687a      	ldr	r2, [r7, #4]
 800995c:	6814      	ldr	r4, [r2, #0]
 800995e:	4798      	blx	r3
 8009960:	4603      	mov	r3, r0
 8009962:	6023      	str	r3, [r4, #0]

	return COAP_OK;
 8009964:	2300      	movs	r3, #0
}
 8009966:	4618      	mov	r0, r3
 8009968:	372c      	adds	r7, #44	; 0x2c
 800996a:	46bd      	mov	sp, r7
 800996c:	bd90      	pop	{r4, r7, pc}
 800996e:	bf00      	nop
 8009970:	20000b28 	.word	0x20000b28
 8009974:	0802ce54 	.word	0x0802ce54
 8009978:	20000b54 	.word	0x20000b54
 800997c:	0802ce70 	.word	0x0802ce70
 8009980:	0802cea8 	.word	0x0802cea8
 8009984:	20000b40 	.word	0x20000b40
 8009988:	0802ce8c 	.word	0x0802ce8c
 800998c:	20000b0c 	.word	0x20000b0c

08009990 <CoAP_GetRawSizeOfMessage>:

int CoAP_GetRawSizeOfMessage(CoAP_Message_t* Msg) {
 8009990:	b580      	push	{r7, lr}
 8009992:	b084      	sub	sp, #16
 8009994:	af00      	add	r7, sp, #0
 8009996:	6078      	str	r0, [r7, #4]
	int TotalMsgBytes = 0;
 8009998:	2300      	movs	r3, #0
 800999a:	60fb      	str	r3, [r7, #12]

	TotalMsgBytes += 4; //Header
 800999c:	68fb      	ldr	r3, [r7, #12]
 800999e:	3304      	adds	r3, #4
 80099a0:	60fb      	str	r3, [r7, #12]

	TotalMsgBytes += CoAP_NeededMem4PackOptions(Msg->pOptionsList);
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	699b      	ldr	r3, [r3, #24]
 80099a6:	4618      	mov	r0, r3
 80099a8:	f000 fe9b 	bl	800a6e2 <CoAP_NeededMem4PackOptions>
 80099ac:	4603      	mov	r3, r0
 80099ae:	461a      	mov	r2, r3
 80099b0:	68fb      	ldr	r3, [r7, #12]
 80099b2:	4413      	add	r3, r2
 80099b4:	60fb      	str	r3, [r7, #12]

	if (Msg->Code != EMPTY) {
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	795b      	ldrb	r3, [r3, #5]
 80099ba:	2b00      	cmp	r3, #0
 80099bc:	d00f      	beq.n	80099de <CoAP_GetRawSizeOfMessage+0x4e>

		if (Msg->PayloadLength) {
 80099be:	687b      	ldr	r3, [r7, #4]
 80099c0:	891b      	ldrh	r3, [r3, #8]
 80099c2:	2b00      	cmp	r3, #0
 80099c4:	d005      	beq.n	80099d2 <CoAP_GetRawSizeOfMessage+0x42>
			TotalMsgBytes += Msg->PayloadLength + 1; //+1 = PayloadMarker
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	891b      	ldrh	r3, [r3, #8]
 80099ca:	3301      	adds	r3, #1
 80099cc:	68fa      	ldr	r2, [r7, #12]
 80099ce:	4413      	add	r3, r2
 80099d0:	60fb      	str	r3, [r7, #12]
		}

		TotalMsgBytes += Msg->Token.Length;
 80099d2:	687b      	ldr	r3, [r7, #4]
 80099d4:	7b1b      	ldrb	r3, [r3, #12]
 80099d6:	461a      	mov	r2, r3
 80099d8:	68fb      	ldr	r3, [r7, #12]
 80099da:	4413      	add	r3, r2
 80099dc:	60fb      	str	r3, [r7, #12]
	}

	return TotalMsgBytes;
 80099de:	68fb      	ldr	r3, [r7, #12]
}
 80099e0:	4618      	mov	r0, r3
 80099e2:	3710      	adds	r7, #16
 80099e4:	46bd      	mov	sp, r7
 80099e6:	bd80      	pop	{r7, pc}

080099e8 <CoAP_BuildDatagram>:

static CoAP_Result_t _rom CoAP_BuildDatagram(uint8_t* destArr, uint16_t* pDestArrSize, CoAP_Message_t* Msg) {
 80099e8:	b580      	push	{r7, lr}
 80099ea:	b088      	sub	sp, #32
 80099ec:	af00      	add	r7, sp, #0
 80099ee:	60f8      	str	r0, [r7, #12]
 80099f0:	60b9      	str	r1, [r7, #8]
 80099f2:	607a      	str	r2, [r7, #4]
	uint16_t offset = 0;
 80099f4:	2300      	movs	r3, #0
 80099f6:	83fb      	strh	r3, [r7, #30]
	uint8_t TokenLength;

	if (Msg->Code == EMPTY) { //must send only 4 byte header overwrite upper layer in any case!
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	795b      	ldrb	r3, [r3, #5]
 80099fc:	2b00      	cmp	r3, #0
 80099fe:	d105      	bne.n	8009a0c <CoAP_BuildDatagram+0x24>
		Msg->PayloadLength = 0;
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	2200      	movs	r2, #0
 8009a04:	811a      	strh	r2, [r3, #8]
		TokenLength = 0;
 8009a06:	2300      	movs	r3, #0
 8009a08:	777b      	strb	r3, [r7, #29]
 8009a0a:	e002      	b.n	8009a12 <CoAP_BuildDatagram+0x2a>
	} else {
		TokenLength = Msg->Token.Length;
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	7b1b      	ldrb	r3, [r3, #12]
 8009a10:	777b      	strb	r3, [r7, #29]
	}

// 4Byte Header (see p.16 RFC7252)
	destArr[0] = 0;
 8009a12:	68fb      	ldr	r3, [r7, #12]
 8009a14:	2200      	movs	r2, #0
 8009a16:	701a      	strb	r2, [r3, #0]
	destArr[0] |= (COAP_VERSION & 3u) << 6u;
 8009a18:	68fb      	ldr	r3, [r7, #12]
 8009a1a:	781b      	ldrb	r3, [r3, #0]
 8009a1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009a20:	b2da      	uxtb	r2, r3
 8009a22:	68fb      	ldr	r3, [r7, #12]
 8009a24:	701a      	strb	r2, [r3, #0]
	destArr[0] |= (Msg->Type & 3u) << 4u;
 8009a26:	68fb      	ldr	r3, [r7, #12]
 8009a28:	781a      	ldrb	r2, [r3, #0]
 8009a2a:	687b      	ldr	r3, [r7, #4]
 8009a2c:	791b      	ldrb	r3, [r3, #4]
 8009a2e:	011b      	lsls	r3, r3, #4
 8009a30:	b2db      	uxtb	r3, r3
 8009a32:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8009a36:	b2db      	uxtb	r3, r3
 8009a38:	4313      	orrs	r3, r2
 8009a3a:	b2da      	uxtb	r2, r3
 8009a3c:	68fb      	ldr	r3, [r7, #12]
 8009a3e:	701a      	strb	r2, [r3, #0]
	destArr[0] |= (TokenLength & 15u);
 8009a40:	68fb      	ldr	r3, [r7, #12]
 8009a42:	781a      	ldrb	r2, [r3, #0]
 8009a44:	7f7b      	ldrb	r3, [r7, #29]
 8009a46:	f003 030f 	and.w	r3, r3, #15
 8009a4a:	b2db      	uxtb	r3, r3
 8009a4c:	4313      	orrs	r3, r2
 8009a4e:	b2da      	uxtb	r2, r3
 8009a50:	68fb      	ldr	r3, [r7, #12]
 8009a52:	701a      	strb	r2, [r3, #0]
	destArr[1] = (uint8_t) Msg->Code;
 8009a54:	68fb      	ldr	r3, [r7, #12]
 8009a56:	3301      	adds	r3, #1
 8009a58:	687a      	ldr	r2, [r7, #4]
 8009a5a:	7952      	ldrb	r2, [r2, #5]
 8009a5c:	701a      	strb	r2, [r3, #0]
	destArr[2] = (uint8_t) (Msg->MessageID >> 8u);
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	88db      	ldrh	r3, [r3, #6]
 8009a62:	0a1b      	lsrs	r3, r3, #8
 8009a64:	b29a      	uxth	r2, r3
 8009a66:	68fb      	ldr	r3, [r7, #12]
 8009a68:	3302      	adds	r3, #2
 8009a6a:	b2d2      	uxtb	r2, r2
 8009a6c:	701a      	strb	r2, [r3, #0]
	destArr[3] = (uint8_t) (Msg->MessageID & 0xffu);
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	88da      	ldrh	r2, [r3, #6]
 8009a72:	68fb      	ldr	r3, [r7, #12]
 8009a74:	3303      	adds	r3, #3
 8009a76:	b2d2      	uxtb	r2, r2
 8009a78:	701a      	strb	r2, [r3, #0]

	offset += 4;
 8009a7a:	8bfb      	ldrh	r3, [r7, #30]
 8009a7c:	3304      	adds	r3, #4
 8009a7e:	83fb      	strh	r3, [r7, #30]

// Token (0 to 8 Bytes)
	int i;
	for (i = 0; i < TokenLength; i++) {
 8009a80:	2300      	movs	r3, #0
 8009a82:	61bb      	str	r3, [r7, #24]
 8009a84:	e00e      	b.n	8009aa4 <CoAP_BuildDatagram+0xbc>
		destArr[offset + i] = Msg->Token.Token[i];
 8009a86:	8bfa      	ldrh	r2, [r7, #30]
 8009a88:	69bb      	ldr	r3, [r7, #24]
 8009a8a:	4413      	add	r3, r2
 8009a8c:	461a      	mov	r2, r3
 8009a8e:	68fb      	ldr	r3, [r7, #12]
 8009a90:	4413      	add	r3, r2
 8009a92:	6879      	ldr	r1, [r7, #4]
 8009a94:	69ba      	ldr	r2, [r7, #24]
 8009a96:	440a      	add	r2, r1
 8009a98:	320d      	adds	r2, #13
 8009a9a:	7812      	ldrb	r2, [r2, #0]
 8009a9c:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < TokenLength; i++) {
 8009a9e:	69bb      	ldr	r3, [r7, #24]
 8009aa0:	3301      	adds	r3, #1
 8009aa2:	61bb      	str	r3, [r7, #24]
 8009aa4:	7f7b      	ldrb	r3, [r7, #29]
 8009aa6:	69ba      	ldr	r2, [r7, #24]
 8009aa8:	429a      	cmp	r2, r3
 8009aaa:	dbec      	blt.n	8009a86 <CoAP_BuildDatagram+0x9e>
	}
	offset += TokenLength;
 8009aac:	7f7b      	ldrb	r3, [r7, #29]
 8009aae:	b29a      	uxth	r2, r3
 8009ab0:	8bfb      	ldrh	r3, [r7, #30]
 8009ab2:	4413      	add	r3, r2
 8009ab4:	83fb      	strh	r3, [r7, #30]

// Options
	if (Msg->pOptionsList != NULL) {
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	699b      	ldr	r3, [r3, #24]
 8009aba:	2b00      	cmp	r3, #0
 8009abc:	d00f      	beq.n	8009ade <CoAP_BuildDatagram+0xf6>
		uint16_t OptionsRawByteCount = 0;
 8009abe:	2300      	movs	r3, #0
 8009ac0:	82fb      	strh	r3, [r7, #22]
		//iterates through (ascending sorted!) list of options and encodes them in CoAPs compact binary representation
		pack_OptionsFromList(&(destArr[offset]), &OptionsRawByteCount, Msg->pOptionsList);
 8009ac2:	8bfb      	ldrh	r3, [r7, #30]
 8009ac4:	68fa      	ldr	r2, [r7, #12]
 8009ac6:	18d0      	adds	r0, r2, r3
 8009ac8:	687b      	ldr	r3, [r7, #4]
 8009aca:	699a      	ldr	r2, [r3, #24]
 8009acc:	f107 0316 	add.w	r3, r7, #22
 8009ad0:	4619      	mov	r1, r3
 8009ad2:	f000 fd11 	bl	800a4f8 <pack_OptionsFromList>

		offset += OptionsRawByteCount;
 8009ad6:	8afa      	ldrh	r2, [r7, #22]
 8009ad8:	8bfb      	ldrh	r3, [r7, #30]
 8009ada:	4413      	add	r3, r2
 8009adc:	83fb      	strh	r3, [r7, #30]
	}

//Payload
	if (Msg->PayloadLength != 0) {
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	891b      	ldrh	r3, [r3, #8]
 8009ae2:	2b00      	cmp	r3, #0
 8009ae4:	d016      	beq.n	8009b14 <CoAP_BuildDatagram+0x12c>
		destArr[offset] = 0xff; //Payload Marker
 8009ae6:	8bfb      	ldrh	r3, [r7, #30]
 8009ae8:	68fa      	ldr	r2, [r7, #12]
 8009aea:	4413      	add	r3, r2
 8009aec:	22ff      	movs	r2, #255	; 0xff
 8009aee:	701a      	strb	r2, [r3, #0]
		offset++;
 8009af0:	8bfb      	ldrh	r3, [r7, #30]
 8009af2:	3301      	adds	r3, #1
 8009af4:	83fb      	strh	r3, [r7, #30]

		coap_memcpy((void*) &(destArr[offset]), (void*) (Msg->Payload), Msg->PayloadLength);
 8009af6:	8bfb      	ldrh	r3, [r7, #30]
 8009af8:	68fa      	ldr	r2, [r7, #12]
 8009afa:	18d0      	adds	r0, r2, r3
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	69d9      	ldr	r1, [r3, #28]
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	891b      	ldrh	r3, [r3, #8]
 8009b04:	461a      	mov	r2, r3
 8009b06:	f021 fb96 	bl	802b236 <memcpy>

		offset += Msg->PayloadLength;
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	891a      	ldrh	r2, [r3, #8]
 8009b0e:	8bfb      	ldrh	r3, [r7, #30]
 8009b10:	4413      	add	r3, r2
 8009b12:	83fb      	strh	r3, [r7, #30]
	}

	*pDestArrSize = offset; // => Size of Datagram array
 8009b14:	68bb      	ldr	r3, [r7, #8]
 8009b16:	8bfa      	ldrh	r2, [r7, #30]
 8009b18:	801a      	strh	r2, [r3, #0]
	return COAP_OK;
 8009b1a:	2300      	movs	r3, #0
}
 8009b1c:	4618      	mov	r0, r3
 8009b1e:	3720      	adds	r7, #32
 8009b20:	46bd      	mov	sp, r7
 8009b22:	bd80      	pop	{r7, pc}

08009b24 <CoAP_SendEmptyAck>:

//send minimal 4Byte header CoAP empty ACK message
CoAP_Result_t _rom CoAP_SendEmptyAck(uint16_t MessageID, SocketHandle_t socketHandle, NetEp_t receiver) {
 8009b24:	b082      	sub	sp, #8
 8009b26:	b5b0      	push	{r4, r5, r7, lr}
 8009b28:	b090      	sub	sp, #64	; 0x40
 8009b2a:	af04      	add	r7, sp, #16
 8009b2c:	6039      	str	r1, [r7, #0]
 8009b2e:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8009b32:	e881 000c 	stmia.w	r1, {r2, r3}
 8009b36:	4603      	mov	r3, r0
 8009b38:	80fb      	strh	r3, [r7, #6]
	CoAP_Message_t Msg; //put on stack (no need to free)

	CoAP_InitToEmptyResetMsg(&Msg);
 8009b3a:	f107 030c 	add.w	r3, r7, #12
 8009b3e:	4618      	mov	r0, r3
 8009b40:	f7ff fc82 	bl	8009448 <CoAP_InitToEmptyResetMsg>
	Msg.Type = ACK;
 8009b44:	2302      	movs	r3, #2
 8009b46:	743b      	strb	r3, [r7, #16]
	Msg.MessageID = MessageID;
 8009b48:	88fb      	ldrh	r3, [r7, #6]
 8009b4a:	827b      	strh	r3, [r7, #18]
	return CoAP_SendMsg(&Msg, socketHandle, receiver);
 8009b4c:	f107 050c 	add.w	r5, r7, #12
 8009b50:	466c      	mov	r4, sp
 8009b52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b56:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8009b58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009b5c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009b60:	cb0c      	ldmia	r3, {r2, r3}
 8009b62:	6839      	ldr	r1, [r7, #0]
 8009b64:	4628      	mov	r0, r5
 8009b66:	f000 f865 	bl	8009c34 <CoAP_SendMsg>
 8009b6a:	4603      	mov	r3, r0
}
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	3730      	adds	r7, #48	; 0x30
 8009b70:	46bd      	mov	sp, r7
 8009b72:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8009b76:	b002      	add	sp, #8
 8009b78:	4770      	bx	lr

08009b7a <CoAP_SendShortResp>:

//send short response
CoAP_Result_t _rom CoAP_SendShortResp(CoAP_MessageType_t Type, CoAP_MessageCode_t Code, uint16_t MessageID, CoAP_Token_t token, SocketHandle_t socketHandle, NetEp_t receiver) {
 8009b7a:	b082      	sub	sp, #8
 8009b7c:	b5b0      	push	{r4, r5, r7, lr}
 8009b7e:	b090      	sub	sp, #64	; 0x40
 8009b80:	af04      	add	r7, sp, #16
 8009b82:	647b      	str	r3, [r7, #68]	; 0x44
 8009b84:	4603      	mov	r3, r0
 8009b86:	71fb      	strb	r3, [r7, #7]
 8009b88:	460b      	mov	r3, r1
 8009b8a:	71bb      	strb	r3, [r7, #6]
 8009b8c:	4613      	mov	r3, r2
 8009b8e:	80bb      	strh	r3, [r7, #4]
	CoAP_Message_t Msg; //put on stack (no need to free)
	CoAP_InitToEmptyResetMsg(&Msg);
 8009b90:	f107 030c 	add.w	r3, r7, #12
 8009b94:	4618      	mov	r0, r3
 8009b96:	f7ff fc57 	bl	8009448 <CoAP_InitToEmptyResetMsg>
	Msg.Type = Type;
 8009b9a:	79fb      	ldrb	r3, [r7, #7]
 8009b9c:	743b      	strb	r3, [r7, #16]
	Msg.MessageID = MessageID;
 8009b9e:	88bb      	ldrh	r3, [r7, #4]
 8009ba0:	827b      	strh	r3, [r7, #18]
	Msg.Code = Code;
 8009ba2:	79bb      	ldrb	r3, [r7, #6]
 8009ba4:	747b      	strb	r3, [r7, #17]
	Msg.Token = token;
 8009ba6:	f107 0318 	add.w	r3, r7, #24
 8009baa:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8009bae:	ca07      	ldmia	r2, {r0, r1, r2}
 8009bb0:	c303      	stmia	r3!, {r0, r1}
 8009bb2:	701a      	strb	r2, [r3, #0]
	return CoAP_SendMsg(&Msg, socketHandle, receiver);
 8009bb4:	f107 050c 	add.w	r5, r7, #12
 8009bb8:	466c      	mov	r4, sp
 8009bba:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8009bbe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8009bc0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009bc4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8009bc8:	cb0c      	ldmia	r3, {r2, r3}
 8009bca:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8009bcc:	4628      	mov	r0, r5
 8009bce:	f000 f831 	bl	8009c34 <CoAP_SendMsg>
 8009bd2:	4603      	mov	r3, r0
}
 8009bd4:	4618      	mov	r0, r3
 8009bd6:	3730      	adds	r7, #48	; 0x30
 8009bd8:	46bd      	mov	sp, r7
 8009bda:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8009bde:	b002      	add	sp, #8
 8009be0:	4770      	bx	lr

08009be2 <CoAP_SendEmptyRST>:

//send minimal 4Byte header CoAP empty RST message
CoAP_Result_t _rom CoAP_SendEmptyRST(uint16_t MessageID, SocketHandle_t socketHandle, NetEp_t receiver) {
 8009be2:	b082      	sub	sp, #8
 8009be4:	b5b0      	push	{r4, r5, r7, lr}
 8009be6:	b090      	sub	sp, #64	; 0x40
 8009be8:	af04      	add	r7, sp, #16
 8009bea:	6039      	str	r1, [r7, #0]
 8009bec:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8009bf0:	e881 000c 	stmia.w	r1, {r2, r3}
 8009bf4:	4603      	mov	r3, r0
 8009bf6:	80fb      	strh	r3, [r7, #6]
	CoAP_Message_t Msg; //put on stack (no need to free)
	CoAP_InitToEmptyResetMsg(&Msg);
 8009bf8:	f107 030c 	add.w	r3, r7, #12
 8009bfc:	4618      	mov	r0, r3
 8009bfe:	f7ff fc23 	bl	8009448 <CoAP_InitToEmptyResetMsg>
	Msg.MessageID = MessageID;
 8009c02:	88fb      	ldrh	r3, [r7, #6]
 8009c04:	827b      	strh	r3, [r7, #18]
	return CoAP_SendMsg(&Msg, socketHandle, receiver);
 8009c06:	f107 050c 	add.w	r5, r7, #12
 8009c0a:	466c      	mov	r4, sp
 8009c0c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009c10:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8009c12:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009c16:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009c1a:	cb0c      	ldmia	r3, {r2, r3}
 8009c1c:	6839      	ldr	r1, [r7, #0]
 8009c1e:	4628      	mov	r0, r5
 8009c20:	f000 f808 	bl	8009c34 <CoAP_SendMsg>
 8009c24:	4603      	mov	r3, r0
}
 8009c26:	4618      	mov	r0, r3
 8009c28:	3730      	adds	r7, #48	; 0x30
 8009c2a:	46bd      	mov	sp, r7
 8009c2c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8009c30:	b002      	add	sp, #8
 8009c32:	4770      	bx	lr

08009c34 <CoAP_SendMsg>:

CoAP_Result_t _rom CoAP_SendMsg(CoAP_Message_t* Msg, SocketHandle_t socketHandle, NetEp_t receiver) {
 8009c34:	b082      	sub	sp, #8
 8009c36:	b5b0      	push	{r4, r5, r7, lr}
 8009c38:	b096      	sub	sp, #88	; 0x58
 8009c3a:	af00      	add	r7, sp, #0
 8009c3c:	6078      	str	r0, [r7, #4]
 8009c3e:	6039      	str	r1, [r7, #0]
 8009c40:	f107 0168 	add.w	r1, r7, #104	; 0x68
 8009c44:	e881 000c 	stmia.w	r1, {r2, r3}
	INFO("Sending CoAP msg\r\n");
 8009c48:	4976      	ldr	r1, [pc, #472]	; (8009e24 <CoAP_SendMsg+0x1f0>)
 8009c4a:	4877      	ldr	r0, [pc, #476]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c4c:	f021 f932 	bl	802aeb4 <siprintf>
 8009c50:	4875      	ldr	r0, [pc, #468]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c52:	f7fe fad1 	bl	80081f8 <hal_debug_puts>
	int i;
	uint16_t bytesToSend = 0;
 8009c56:	2300      	movs	r3, #0
 8009c58:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
	CoAP_Socket_t* pSocket = RetrieveSocket(socketHandle);
 8009c5c:	6838      	ldr	r0, [r7, #0]
 8009c5e:	f001 fe2d 	bl	800b8bc <RetrieveSocket>
 8009c62:	6538      	str	r0, [r7, #80]	; 0x50

	if (pSocket == NULL) {
 8009c64:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009c66:	2b00      	cmp	r3, #0
 8009c68:	d110      	bne.n	8009c8c <CoAP_SendMsg+0x58>
		ERROR("Socket not found! handle: %p\r\n", socketHandle);
 8009c6a:	4970      	ldr	r1, [pc, #448]	; (8009e2c <CoAP_SendMsg+0x1f8>)
 8009c6c:	486e      	ldr	r0, [pc, #440]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c6e:	f021 f921 	bl	802aeb4 <siprintf>
 8009c72:	486d      	ldr	r0, [pc, #436]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c74:	f7fe fac0 	bl	80081f8 <hal_debug_puts>
 8009c78:	683a      	ldr	r2, [r7, #0]
 8009c7a:	496d      	ldr	r1, [pc, #436]	; (8009e30 <CoAP_SendMsg+0x1fc>)
 8009c7c:	486a      	ldr	r0, [pc, #424]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c7e:	f021 f919 	bl	802aeb4 <siprintf>
 8009c82:	4869      	ldr	r0, [pc, #420]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c84:	f7fe fab8 	bl	80081f8 <hal_debug_puts>
		return COAP_NOT_FOUND;
 8009c88:	2301      	movs	r3, #1
 8009c8a:	e0c4      	b.n	8009e16 <CoAP_SendMsg+0x1e2>
	}

	NetTransmit_fn SendPacket = pSocket->Tx;
 8009c8c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8009c8e:	685b      	ldr	r3, [r3, #4]
 8009c90:	64fb      	str	r3, [r7, #76]	; 0x4c
	uint8_t quickBuf[16]; //speed up sending of tiny messages

	if (SendPacket == NULL) {
 8009c92:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	d110      	bne.n	8009cba <CoAP_SendMsg+0x86>
		ERROR("SendPacket function not found! handle: %p\r\n", socketHandle);
 8009c98:	4964      	ldr	r1, [pc, #400]	; (8009e2c <CoAP_SendMsg+0x1f8>)
 8009c9a:	4863      	ldr	r0, [pc, #396]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009c9c:	f021 f90a 	bl	802aeb4 <siprintf>
 8009ca0:	4861      	ldr	r0, [pc, #388]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009ca2:	f7fe faa9 	bl	80081f8 <hal_debug_puts>
 8009ca6:	683a      	ldr	r2, [r7, #0]
 8009ca8:	4962      	ldr	r1, [pc, #392]	; (8009e34 <CoAP_SendMsg+0x200>)
 8009caa:	485f      	ldr	r0, [pc, #380]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009cac:	f021 f902 	bl	802aeb4 <siprintf>
 8009cb0:	485d      	ldr	r0, [pc, #372]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009cb2:	f7fe faa1 	bl	80081f8 <hal_debug_puts>
		return COAP_NOT_FOUND;
 8009cb6:	2301      	movs	r3, #1
 8009cb8:	e0ad      	b.n	8009e16 <CoAP_SendMsg+0x1e2>
	}

	// build generic packet
	NetPacket_t pked;
	pked.remoteEp = receiver;
 8009cba:	f107 0414 	add.w	r4, r7, #20
 8009cbe:	f107 0568 	add.w	r5, r7, #104	; 0x68
 8009cc2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009cc4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009cc6:	e895 0003 	ldmia.w	r5, {r0, r1}
 8009cca:	e884 0003 	stmia.w	r4, {r0, r1}

	//Alloc raw memory
	pked.size = CoAP_GetRawSizeOfMessage(Msg);
 8009cce:	6878      	ldr	r0, [r7, #4]
 8009cd0:	f7ff fe5e 	bl	8009990 <CoAP_GetRawSizeOfMessage>
 8009cd4:	4603      	mov	r3, r0
 8009cd6:	b29b      	uxth	r3, r3
 8009cd8:	823b      	strh	r3, [r7, #16]
	if (pked.size <= 16) { //for small messages don't take overhead of mem allocation
 8009cda:	8a3b      	ldrh	r3, [r7, #16]
 8009cdc:	2b10      	cmp	r3, #16
 8009cde:	d803      	bhi.n	8009ce8 <CoAP_SendMsg+0xb4>
		pked.pData = quickBuf;
 8009ce0:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8009ce4:	60fb      	str	r3, [r7, #12]
 8009ce6:	e00a      	b.n	8009cfe <CoAP_SendMsg+0xca>
	} else {
		pked.pData = (uint8_t*) CoAP_malloc(pked.size);
 8009ce8:	8a3b      	ldrh	r3, [r7, #16]
 8009cea:	4618      	mov	r0, r3
 8009cec:	f7ff fb84 	bl	80093f8 <CoAP_malloc>
 8009cf0:	4603      	mov	r3, r0
 8009cf2:	60fb      	str	r3, [r7, #12]
		if (pked.pData == NULL)
 8009cf4:	68fb      	ldr	r3, [r7, #12]
 8009cf6:	2b00      	cmp	r3, #0
 8009cf8:	d101      	bne.n	8009cfe <CoAP_SendMsg+0xca>
			return COAP_ERR_OUT_OF_MEMORY;
 8009cfa:	230d      	movs	r3, #13
 8009cfc:	e08b      	b.n	8009e16 <CoAP_SendMsg+0x1e2>
	}

	// serialize msg
	CoAP_BuildDatagram((pked.pData), &bytesToSend, Msg);
 8009cfe:	68fb      	ldr	r3, [r7, #12]
 8009d00:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8009d04:	687a      	ldr	r2, [r7, #4]
 8009d06:	4618      	mov	r0, r3
 8009d08:	f7ff fe6e 	bl	80099e8 <CoAP_BuildDatagram>

	if (bytesToSend != pked.size) {
 8009d0c:	8a3a      	ldrh	r2, [r7, #16]
 8009d0e:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 8009d12:	429a      	cmp	r2, r3
 8009d14:	d00e      	beq.n	8009d34 <CoAP_SendMsg+0x100>
		INFO("(!!!) Bytes to Send = %d estimated = %d\r\n", bytesToSend, CoAP_GetRawSizeOfMessage(Msg));
 8009d16:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 8009d1a:	461c      	mov	r4, r3
 8009d1c:	6878      	ldr	r0, [r7, #4]
 8009d1e:	f7ff fe37 	bl	8009990 <CoAP_GetRawSizeOfMessage>
 8009d22:	4603      	mov	r3, r0
 8009d24:	4622      	mov	r2, r4
 8009d26:	4944      	ldr	r1, [pc, #272]	; (8009e38 <CoAP_SendMsg+0x204>)
 8009d28:	483f      	ldr	r0, [pc, #252]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d2a:	f021 f8c3 	bl	802aeb4 <siprintf>
 8009d2e:	483e      	ldr	r0, [pc, #248]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d30:	f7fe fa62 	bl	80081f8 <hal_debug_puts>
	}

	INFO("\r\no>>>>>>>>>>>>>>>>>>>>>>\r\nSend Message [%d Bytes], Interface #%p\r\n", bytesToSend, socketHandle);
 8009d34:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 8009d38:	461a      	mov	r2, r3
 8009d3a:	683b      	ldr	r3, [r7, #0]
 8009d3c:	493f      	ldr	r1, [pc, #252]	; (8009e3c <CoAP_SendMsg+0x208>)
 8009d3e:	483a      	ldr	r0, [pc, #232]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d40:	f021 f8b8 	bl	802aeb4 <siprintf>
 8009d44:	4838      	ldr	r0, [pc, #224]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d46:	f7fe fa57 	bl	80081f8 <hal_debug_puts>
	INFO("Receiving Endpoint: ");
 8009d4a:	493d      	ldr	r1, [pc, #244]	; (8009e40 <CoAP_SendMsg+0x20c>)
 8009d4c:	4836      	ldr	r0, [pc, #216]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d4e:	f021 f8b1 	bl	802aeb4 <siprintf>
 8009d52:	4835      	ldr	r0, [pc, #212]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d54:	f7fe fa50 	bl	80081f8 <hal_debug_puts>
	PrintEndpoint(&(pked.remoteEp));
 8009d58:	f107 030c 	add.w	r3, r7, #12
 8009d5c:	3308      	adds	r3, #8
 8009d5e:	4618      	mov	r0, r3
 8009d60:	f001 fba4 	bl	800b4ac <PrintEndpoint>
	INFO("\n");
 8009d64:	4937      	ldr	r1, [pc, #220]	; (8009e44 <CoAP_SendMsg+0x210>)
 8009d66:	4830      	ldr	r0, [pc, #192]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d68:	f021 f8a4 	bl	802aeb4 <siprintf>
 8009d6c:	482e      	ldr	r0, [pc, #184]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009d6e:	f7fe fa43 	bl	80081f8 <hal_debug_puts>

	DEBUG_COAP("Hex: ");
	for (i = 0; i < pked.size; i++) {
 8009d72:	2300      	movs	r3, #0
 8009d74:	657b      	str	r3, [r7, #84]	; 0x54
 8009d76:	e002      	b.n	8009d7e <CoAP_SendMsg+0x14a>
 8009d78:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d7a:	3301      	adds	r3, #1
 8009d7c:	657b      	str	r3, [r7, #84]	; 0x54
 8009d7e:	8a3b      	ldrh	r3, [r7, #16]
 8009d80:	461a      	mov	r2, r3
 8009d82:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d84:	4293      	cmp	r3, r2
 8009d86:	dbf7      	blt.n	8009d78 <CoAP_SendMsg+0x144>
		DEBUG_COAP("%02x ", pked.pData[i]);
	}
	DEBUG_COAP("\r\nRaw: \"");
	for (i = 0; i < pked.size; i++) {
 8009d88:	2300      	movs	r3, #0
 8009d8a:	657b      	str	r3, [r7, #84]	; 0x54
 8009d8c:	e002      	b.n	8009d94 <CoAP_SendMsg+0x160>
 8009d8e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d90:	3301      	adds	r3, #1
 8009d92:	657b      	str	r3, [r7, #84]	; 0x54
 8009d94:	8a3b      	ldrh	r3, [r7, #16]
 8009d96:	461a      	mov	r2, r3
 8009d98:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009d9a:	4293      	cmp	r3, r2
 8009d9c:	dbf7      	blt.n	8009d8e <CoAP_SendMsg+0x15a>
		sendResult = true;  // make stack think it sent message, to simulate loss of UDP packet in network
	} else {
		sendResult = SendPacket(socketHandle, &pked);
	}
#else
	sendResult = SendPacket(socketHandle, &pked);
 8009d9e:	f107 020c 	add.w	r2, r7, #12
 8009da2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009da4:	4611      	mov	r1, r2
 8009da6:	6838      	ldr	r0, [r7, #0]
 8009da8:	4798      	blx	r3
 8009daa:	4603      	mov	r3, r0
 8009dac:	f887 304b 	strb.w	r3, [r7, #75]	; 0x4b
#endif

	if (sendResult == true) { // send COAP_OK!
 8009db0:	f897 304b 	ldrb.w	r3, [r7, #75]	; 0x4b
 8009db4:	2b00      	cmp	r3, #0
 8009db6:	d01a      	beq.n	8009dee <CoAP_SendMsg+0x1ba>
		Msg->Timestamp = CoAP.api.rtc1HzCnt();
 8009db8:	4b23      	ldr	r3, [pc, #140]	; (8009e48 <CoAP_SendMsg+0x214>)
 8009dba:	685b      	ldr	r3, [r3, #4]
 8009dbc:	4798      	blx	r3
 8009dbe:	4602      	mov	r2, r0
 8009dc0:	687b      	ldr	r3, [r7, #4]
 8009dc2:	601a      	str	r2, [r3, #0]
		CoAP_PrintMsg(Msg);
 8009dc4:	6878      	ldr	r0, [r7, #4]
 8009dc6:	f000 f89b 	bl	8009f00 <CoAP_PrintMsg>
		INFO("o>>>>>>>>>>OK>>>>>>>>>>\r\n");
 8009dca:	4920      	ldr	r1, [pc, #128]	; (8009e4c <CoAP_SendMsg+0x218>)
 8009dcc:	4816      	ldr	r0, [pc, #88]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009dce:	f021 f871 	bl	802aeb4 <siprintf>
 8009dd2:	4815      	ldr	r0, [pc, #84]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009dd4:	f7fe fa10 	bl	80081f8 <hal_debug_puts>
		if (pked.pData != quickBuf) {
 8009dd8:	68fa      	ldr	r2, [r7, #12]
 8009dda:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8009dde:	429a      	cmp	r2, r3
 8009de0:	d003      	beq.n	8009dea <CoAP_SendMsg+0x1b6>
			CoAP_free(pked.pData);
 8009de2:	68fb      	ldr	r3, [r7, #12]
 8009de4:	4618      	mov	r0, r3
 8009de6:	f7ff faf9 	bl	80093dc <CoAP_free>
		}
		return COAP_OK;
 8009dea:	2300      	movs	r3, #0
 8009dec:	e013      	b.n	8009e16 <CoAP_SendMsg+0x1e2>
	} else {
		CoAP_PrintMsg(Msg);
 8009dee:	6878      	ldr	r0, [r7, #4]
 8009df0:	f000 f886 	bl	8009f00 <CoAP_PrintMsg>
		INFO("o>>>>>>>>>>FAIL>>>>>>>>>>\r\n");
 8009df4:	4916      	ldr	r1, [pc, #88]	; (8009e50 <CoAP_SendMsg+0x21c>)
 8009df6:	480c      	ldr	r0, [pc, #48]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009df8:	f021 f85c 	bl	802aeb4 <siprintf>
 8009dfc:	480a      	ldr	r0, [pc, #40]	; (8009e28 <CoAP_SendMsg+0x1f4>)
 8009dfe:	f7fe f9fb 	bl	80081f8 <hal_debug_puts>
		if (pked.pData != quickBuf) {
 8009e02:	68fa      	ldr	r2, [r7, #12]
 8009e04:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8009e08:	429a      	cmp	r2, r3
 8009e0a:	d003      	beq.n	8009e14 <CoAP_SendMsg+0x1e0>
			CoAP_free(pked.pData);
 8009e0c:	68fb      	ldr	r3, [r7, #12]
 8009e0e:	4618      	mov	r0, r3
 8009e10:	f7ff fae4 	bl	80093dc <CoAP_free>
		}
		return COAP_ERR_NETWORK;
 8009e14:	230c      	movs	r3, #12
	}

}
 8009e16:	4618      	mov	r0, r3
 8009e18:	3758      	adds	r7, #88	; 0x58
 8009e1a:	46bd      	mov	sp, r7
 8009e1c:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8009e20:	b002      	add	sp, #8
 8009e22:	4770      	bx	lr
 8009e24:	0802ceb0 	.word	0x0802ceb0
 8009e28:	20000b54 	.word	0x20000b54
 8009e2c:	0802ce0c 	.word	0x0802ce0c
 8009e30:	0802cec4 	.word	0x0802cec4
 8009e34:	0802cee4 	.word	0x0802cee4
 8009e38:	0802cf10 	.word	0x0802cf10
 8009e3c:	0802cf3c 	.word	0x0802cf3c
 8009e40:	0802cf80 	.word	0x0802cf80
 8009e44:	0802cf98 	.word	0x0802cf98
 8009e48:	20000b0c 	.word	0x20000b0c
 8009e4c:	0802cf9c 	.word	0x0802cf9c
 8009e50:	0802cfb8 	.word	0x0802cfb8

08009e54 <CoAP_InitIds>:

static uint16_t MId = 0;
static uint8_t currToken = 0;

void _rom CoAP_InitIds() {
 8009e54:	b580      	push	{r7, lr}
 8009e56:	af00      	add	r7, sp, #0
	// Initialise Message-ID and Token with random values:
	MId = CoAP.api.rand() & 0xffffu;
 8009e58:	4b07      	ldr	r3, [pc, #28]	; (8009e78 <CoAP_InitIds+0x24>)
 8009e5a:	695b      	ldr	r3, [r3, #20]
 8009e5c:	4798      	blx	r3
 8009e5e:	4603      	mov	r3, r0
 8009e60:	b29a      	uxth	r2, r3
 8009e62:	4b06      	ldr	r3, [pc, #24]	; (8009e7c <CoAP_InitIds+0x28>)
 8009e64:	801a      	strh	r2, [r3, #0]
	currToken = CoAP.api.rand() & 0xffu;
 8009e66:	4b04      	ldr	r3, [pc, #16]	; (8009e78 <CoAP_InitIds+0x24>)
 8009e68:	695b      	ldr	r3, [r3, #20]
 8009e6a:	4798      	blx	r3
 8009e6c:	4603      	mov	r3, r0
 8009e6e:	b2da      	uxtb	r2, r3
 8009e70:	4b03      	ldr	r3, [pc, #12]	; (8009e80 <CoAP_InitIds+0x2c>)
 8009e72:	701a      	strb	r2, [r3, #0]
}
 8009e74:	bf00      	nop
 8009e76:	bd80      	pop	{r7, pc}
 8009e78:	20000b0c 	.word	0x20000b0c
 8009e7c:	20000b24 	.word	0x20000b24
 8009e80:	20000b26 	.word	0x20000b26

08009e84 <CoAP_GetNextMid>:

uint16_t _rom CoAP_GetNextMid() {
 8009e84:	b480      	push	{r7}
 8009e86:	af00      	add	r7, sp, #0
	MId++;
 8009e88:	4b05      	ldr	r3, [pc, #20]	; (8009ea0 <CoAP_GetNextMid+0x1c>)
 8009e8a:	881b      	ldrh	r3, [r3, #0]
 8009e8c:	3301      	adds	r3, #1
 8009e8e:	b29a      	uxth	r2, r3
 8009e90:	4b03      	ldr	r3, [pc, #12]	; (8009ea0 <CoAP_GetNextMid+0x1c>)
 8009e92:	801a      	strh	r2, [r3, #0]
	return MId;
 8009e94:	4b02      	ldr	r3, [pc, #8]	; (8009ea0 <CoAP_GetNextMid+0x1c>)
 8009e96:	881b      	ldrh	r3, [r3, #0]
}
 8009e98:	4618      	mov	r0, r3
 8009e9a:	46bd      	mov	sp, r7
 8009e9c:	bc80      	pop	{r7}
 8009e9e:	4770      	bx	lr
 8009ea0:	20000b24 	.word	0x20000b24

08009ea4 <CoAP_GenerateToken>:

// TODO: Improove generated tokens
CoAP_Token_t _rom CoAP_GenerateToken() {
 8009ea4:	b480      	push	{r7}
 8009ea6:	b087      	sub	sp, #28
 8009ea8:	af00      	add	r7, sp, #0
 8009eaa:	6078      	str	r0, [r7, #4]
	currToken++;
 8009eac:	4b13      	ldr	r3, [pc, #76]	; (8009efc <CoAP_GenerateToken+0x58>)
 8009eae:	781b      	ldrb	r3, [r3, #0]
 8009eb0:	3301      	adds	r3, #1
 8009eb2:	b2da      	uxtb	r2, r3
 8009eb4:	4b11      	ldr	r3, [pc, #68]	; (8009efc <CoAP_GenerateToken+0x58>)
 8009eb6:	701a      	strb	r2, [r3, #0]
	CoAP_Token_t tok = {.Token = {currToken, 0,0,0,0,0,0,0}, .Length = 1};
 8009eb8:	2301      	movs	r3, #1
 8009eba:	733b      	strb	r3, [r7, #12]
 8009ebc:	4b0f      	ldr	r3, [pc, #60]	; (8009efc <CoAP_GenerateToken+0x58>)
 8009ebe:	781b      	ldrb	r3, [r3, #0]
 8009ec0:	737b      	strb	r3, [r7, #13]
 8009ec2:	2300      	movs	r3, #0
 8009ec4:	73bb      	strb	r3, [r7, #14]
 8009ec6:	2300      	movs	r3, #0
 8009ec8:	73fb      	strb	r3, [r7, #15]
 8009eca:	2300      	movs	r3, #0
 8009ecc:	743b      	strb	r3, [r7, #16]
 8009ece:	2300      	movs	r3, #0
 8009ed0:	747b      	strb	r3, [r7, #17]
 8009ed2:	2300      	movs	r3, #0
 8009ed4:	74bb      	strb	r3, [r7, #18]
 8009ed6:	2300      	movs	r3, #0
 8009ed8:	74fb      	strb	r3, [r7, #19]
 8009eda:	2300      	movs	r3, #0
 8009edc:	753b      	strb	r3, [r7, #20]
	return tok;
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	461a      	mov	r2, r3
 8009ee2:	f107 030c 	add.w	r3, r7, #12
 8009ee6:	cb03      	ldmia	r3!, {r0, r1}
 8009ee8:	6010      	str	r0, [r2, #0]
 8009eea:	6051      	str	r1, [r2, #4]
 8009eec:	781b      	ldrb	r3, [r3, #0]
 8009eee:	7213      	strb	r3, [r2, #8]
}
 8009ef0:	6878      	ldr	r0, [r7, #4]
 8009ef2:	371c      	adds	r7, #28
 8009ef4:	46bd      	mov	sp, r7
 8009ef6:	bc80      	pop	{r7}
 8009ef8:	4770      	bx	lr
 8009efa:	bf00      	nop
 8009efc:	20000b26 	.word	0x20000b26

08009f00 <CoAP_PrintMsg>:

CoAP_Result_t _rom CoAP_addTextPayload(CoAP_Message_t* Msg, char* PayloadStr) {
	return CoAP_addNewPayloadToMessage(Msg, (uint8_t*) PayloadStr, (uint16_t) (strlen(PayloadStr)));
}

void _rom CoAP_PrintMsg(CoAP_Message_t* msg) {
 8009f00:	b580      	push	{r7, lr}
 8009f02:	b082      	sub	sp, #8
 8009f04:	af00      	add	r7, sp, #0
 8009f06:	6078      	str	r0, [r7, #4]

	if(COAP_LOG_LEVEL < COAP_LOG_LEVEL_DEBUG)
	{
		// Short version
		LOG_INFO("CoAP msg: Type=");
 8009f08:	4941      	ldr	r1, [pc, #260]	; (800a010 <CoAP_PrintMsg+0x110>)
 8009f0a:	4842      	ldr	r0, [pc, #264]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f0c:	f020 ffd2 	bl	802aeb4 <siprintf>
 8009f10:	4840      	ldr	r0, [pc, #256]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f12:	f7fe f971 	bl	80081f8 <hal_debug_puts>
		
		switch(msg->Type)
 8009f16:	687b      	ldr	r3, [r7, #4]
 8009f18:	791b      	ldrb	r3, [r3, #4]
 8009f1a:	2b03      	cmp	r3, #3
 8009f1c:	d836      	bhi.n	8009f8c <CoAP_PrintMsg+0x8c>
 8009f1e:	a201      	add	r2, pc, #4	; (adr r2, 8009f24 <CoAP_PrintMsg+0x24>)
 8009f20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009f24:	08009f35 	.word	0x08009f35
 8009f28:	08009f4b 	.word	0x08009f4b
 8009f2c:	08009f61 	.word	0x08009f61
 8009f30:	08009f77 	.word	0x08009f77
		{
			case CON: LOG_INFO("CON(0x%02x)", msg->Type); break;
 8009f34:	687b      	ldr	r3, [r7, #4]
 8009f36:	791b      	ldrb	r3, [r3, #4]
 8009f38:	461a      	mov	r2, r3
 8009f3a:	4937      	ldr	r1, [pc, #220]	; (800a018 <CoAP_PrintMsg+0x118>)
 8009f3c:	4835      	ldr	r0, [pc, #212]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f3e:	f020 ffb9 	bl	802aeb4 <siprintf>
 8009f42:	4834      	ldr	r0, [pc, #208]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f44:	f7fe f958 	bl	80081f8 <hal_debug_puts>
 8009f48:	e02b      	b.n	8009fa2 <CoAP_PrintMsg+0xa2>
			case NON: LOG_INFO("NON(0x%02x)", msg->Type); break;
 8009f4a:	687b      	ldr	r3, [r7, #4]
 8009f4c:	791b      	ldrb	r3, [r3, #4]
 8009f4e:	461a      	mov	r2, r3
 8009f50:	4932      	ldr	r1, [pc, #200]	; (800a01c <CoAP_PrintMsg+0x11c>)
 8009f52:	4830      	ldr	r0, [pc, #192]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f54:	f020 ffae 	bl	802aeb4 <siprintf>
 8009f58:	482e      	ldr	r0, [pc, #184]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f5a:	f7fe f94d 	bl	80081f8 <hal_debug_puts>
 8009f5e:	e020      	b.n	8009fa2 <CoAP_PrintMsg+0xa2>
			case ACK: LOG_INFO("ACK(0x%02x)", msg->Type); break;
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	791b      	ldrb	r3, [r3, #4]
 8009f64:	461a      	mov	r2, r3
 8009f66:	492e      	ldr	r1, [pc, #184]	; (800a020 <CoAP_PrintMsg+0x120>)
 8009f68:	482a      	ldr	r0, [pc, #168]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f6a:	f020 ffa3 	bl	802aeb4 <siprintf>
 8009f6e:	4829      	ldr	r0, [pc, #164]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f70:	f7fe f942 	bl	80081f8 <hal_debug_puts>
 8009f74:	e015      	b.n	8009fa2 <CoAP_PrintMsg+0xa2>
			case RST: LOG_INFO("RST(0x%02x)", msg->Type); break;
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	791b      	ldrb	r3, [r3, #4]
 8009f7a:	461a      	mov	r2, r3
 8009f7c:	4929      	ldr	r1, [pc, #164]	; (800a024 <CoAP_PrintMsg+0x124>)
 8009f7e:	4825      	ldr	r0, [pc, #148]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f80:	f020 ff98 	bl	802aeb4 <siprintf>
 8009f84:	4823      	ldr	r0, [pc, #140]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f86:	f7fe f937 	bl	80081f8 <hal_debug_puts>
 8009f8a:	e00a      	b.n	8009fa2 <CoAP_PrintMsg+0xa2>
			default: LOG_INFO("UNKNOWN (0x%02x)", msg->Type); break;
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	791b      	ldrb	r3, [r3, #4]
 8009f90:	461a      	mov	r2, r3
 8009f92:	4925      	ldr	r1, [pc, #148]	; (800a028 <CoAP_PrintMsg+0x128>)
 8009f94:	481f      	ldr	r0, [pc, #124]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f96:	f020 ff8d 	bl	802aeb4 <siprintf>
 8009f9a:	481e      	ldr	r0, [pc, #120]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009f9c:	f7fe f92c 	bl	80081f8 <hal_debug_puts>
 8009fa0:	bf00      	nop
		}

		LOG_INFO(" Code=%s", CoAP_CodeName(msg->Code));
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	795b      	ldrb	r3, [r3, #5]
 8009fa6:	4618      	mov	r0, r3
 8009fa8:	f000 f84a 	bl	800a040 <CoAP_CodeName>
 8009fac:	4603      	mov	r3, r0
 8009fae:	461a      	mov	r2, r3
 8009fb0:	491e      	ldr	r1, [pc, #120]	; (800a02c <CoAP_PrintMsg+0x12c>)
 8009fb2:	4818      	ldr	r0, [pc, #96]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fb4:	f020 ff7e 	bl	802aeb4 <siprintf>
 8009fb8:	4816      	ldr	r0, [pc, #88]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fba:	f7fe f91d 	bl	80081f8 <hal_debug_puts>
		LOG_INFO(" MsgId=%"PRIu16, msg->MessageID);
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	88db      	ldrh	r3, [r3, #6]
 8009fc2:	461a      	mov	r2, r3
 8009fc4:	491a      	ldr	r1, [pc, #104]	; (800a030 <CoAP_PrintMsg+0x130>)
 8009fc6:	4813      	ldr	r0, [pc, #76]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fc8:	f020 ff74 	bl	802aeb4 <siprintf>
 8009fcc:	4811      	ldr	r0, [pc, #68]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fce:	f7fe f913 	bl	80081f8 <hal_debug_puts>
		LOG_INFO(" Timestamp=%"PRIu32, msg->Timestamp);
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	681b      	ldr	r3, [r3, #0]
 8009fd6:	461a      	mov	r2, r3
 8009fd8:	4916      	ldr	r1, [pc, #88]	; (800a034 <CoAP_PrintMsg+0x134>)
 8009fda:	480e      	ldr	r0, [pc, #56]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fdc:	f020 ff6a 	bl	802aeb4 <siprintf>
 8009fe0:	480c      	ldr	r0, [pc, #48]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009fe2:	f7fe f909 	bl	80081f8 <hal_debug_puts>
		LOG_INFO(" PayloadLen=%"PRIu16, msg->PayloadLength);
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	891b      	ldrh	r3, [r3, #8]
 8009fea:	461a      	mov	r2, r3
 8009fec:	4912      	ldr	r1, [pc, #72]	; (800a038 <CoAP_PrintMsg+0x138>)
 8009fee:	4809      	ldr	r0, [pc, #36]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009ff0:	f020 ff60 	bl	802aeb4 <siprintf>
 8009ff4:	4807      	ldr	r0, [pc, #28]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009ff6:	f7fe f8ff 	bl	80081f8 <hal_debug_puts>
		LOG_INFO("\n");
 8009ffa:	4910      	ldr	r1, [pc, #64]	; (800a03c <CoAP_PrintMsg+0x13c>)
 8009ffc:	4805      	ldr	r0, [pc, #20]	; (800a014 <CoAP_PrintMsg+0x114>)
 8009ffe:	f020 ff59 	bl	802aeb4 <siprintf>
 800a002:	4804      	ldr	r0, [pc, #16]	; (800a014 <CoAP_PrintMsg+0x114>)
 800a004:	f7fe f8f8 	bl	80081f8 <hal_debug_puts>
		return;
 800a008:	bf00      	nop
		}
	}

	INFO("*Timestamp: %"PRIu32"\r\n", msg->Timestamp);
	INFO("----------------------------\r\n");
}
 800a00a:	3708      	adds	r7, #8
 800a00c:	46bd      	mov	sp, r7
 800a00e:	bd80      	pop	{r7, pc}
 800a010:	0802cff0 	.word	0x0802cff0
 800a014:	20000b54 	.word	0x20000b54
 800a018:	0802d000 	.word	0x0802d000
 800a01c:	0802d00c 	.word	0x0802d00c
 800a020:	0802d018 	.word	0x0802d018
 800a024:	0802d024 	.word	0x0802d024
 800a028:	0802d030 	.word	0x0802d030
 800a02c:	0802d044 	.word	0x0802d044
 800a030:	0802d050 	.word	0x0802d050
 800a034:	0802d05c 	.word	0x0802d05c
 800a038:	0802d06c 	.word	0x0802d06c
 800a03c:	0802cf98 	.word	0x0802cf98

0800a040 <CoAP_CodeName>:

const char _rom *CoAP_CodeName(CoAP_MessageCode_t code) {
 800a040:	b480      	push	{r7}
 800a042:	b083      	sub	sp, #12
 800a044:	af00      	add	r7, sp, #0
 800a046:	4603      	mov	r3, r0
 800a048:	71fb      	strb	r3, [r7, #7]
	switch (code) {
 800a04a:	79fb      	ldrb	r3, [r7, #7]
 800a04c:	2ba5      	cmp	r3, #165	; 0xa5
 800a04e:	f200 818f 	bhi.w	800a370 <CoAP_CodeName+0x330>
 800a052:	a201      	add	r2, pc, #4	; (adr r2, 800a058 <CoAP_CodeName+0x18>)
 800a054:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a058:	0800a2f1 	.word	0x0800a2f1
 800a05c:	0800a2f5 	.word	0x0800a2f5
 800a060:	0800a2f9 	.word	0x0800a2f9
 800a064:	0800a2fd 	.word	0x0800a2fd
 800a068:	0800a301 	.word	0x0800a301
 800a06c:	0800a305 	.word	0x0800a305
 800a070:	0800a309 	.word	0x0800a309
 800a074:	0800a30d 	.word	0x0800a30d
 800a078:	0800a371 	.word	0x0800a371
 800a07c:	0800a371 	.word	0x0800a371
 800a080:	0800a371 	.word	0x0800a371
 800a084:	0800a371 	.word	0x0800a371
 800a088:	0800a371 	.word	0x0800a371
 800a08c:	0800a371 	.word	0x0800a371
 800a090:	0800a371 	.word	0x0800a371
 800a094:	0800a371 	.word	0x0800a371
 800a098:	0800a371 	.word	0x0800a371
 800a09c:	0800a371 	.word	0x0800a371
 800a0a0:	0800a371 	.word	0x0800a371
 800a0a4:	0800a371 	.word	0x0800a371
 800a0a8:	0800a371 	.word	0x0800a371
 800a0ac:	0800a371 	.word	0x0800a371
 800a0b0:	0800a371 	.word	0x0800a371
 800a0b4:	0800a371 	.word	0x0800a371
 800a0b8:	0800a371 	.word	0x0800a371
 800a0bc:	0800a371 	.word	0x0800a371
 800a0c0:	0800a371 	.word	0x0800a371
 800a0c4:	0800a371 	.word	0x0800a371
 800a0c8:	0800a371 	.word	0x0800a371
 800a0cc:	0800a371 	.word	0x0800a371
 800a0d0:	0800a371 	.word	0x0800a371
 800a0d4:	0800a371 	.word	0x0800a371
 800a0d8:	0800a371 	.word	0x0800a371
 800a0dc:	0800a371 	.word	0x0800a371
 800a0e0:	0800a371 	.word	0x0800a371
 800a0e4:	0800a371 	.word	0x0800a371
 800a0e8:	0800a371 	.word	0x0800a371
 800a0ec:	0800a371 	.word	0x0800a371
 800a0f0:	0800a371 	.word	0x0800a371
 800a0f4:	0800a371 	.word	0x0800a371
 800a0f8:	0800a371 	.word	0x0800a371
 800a0fc:	0800a371 	.word	0x0800a371
 800a100:	0800a371 	.word	0x0800a371
 800a104:	0800a371 	.word	0x0800a371
 800a108:	0800a371 	.word	0x0800a371
 800a10c:	0800a371 	.word	0x0800a371
 800a110:	0800a371 	.word	0x0800a371
 800a114:	0800a371 	.word	0x0800a371
 800a118:	0800a371 	.word	0x0800a371
 800a11c:	0800a371 	.word	0x0800a371
 800a120:	0800a371 	.word	0x0800a371
 800a124:	0800a371 	.word	0x0800a371
 800a128:	0800a371 	.word	0x0800a371
 800a12c:	0800a371 	.word	0x0800a371
 800a130:	0800a371 	.word	0x0800a371
 800a134:	0800a371 	.word	0x0800a371
 800a138:	0800a371 	.word	0x0800a371
 800a13c:	0800a371 	.word	0x0800a371
 800a140:	0800a371 	.word	0x0800a371
 800a144:	0800a371 	.word	0x0800a371
 800a148:	0800a371 	.word	0x0800a371
 800a14c:	0800a371 	.word	0x0800a371
 800a150:	0800a371 	.word	0x0800a371
 800a154:	0800a371 	.word	0x0800a371
 800a158:	0800a311 	.word	0x0800a311
 800a15c:	0800a315 	.word	0x0800a315
 800a160:	0800a319 	.word	0x0800a319
 800a164:	0800a31d 	.word	0x0800a31d
 800a168:	0800a321 	.word	0x0800a321
 800a16c:	0800a325 	.word	0x0800a325
 800a170:	0800a371 	.word	0x0800a371
 800a174:	0800a371 	.word	0x0800a371
 800a178:	0800a371 	.word	0x0800a371
 800a17c:	0800a371 	.word	0x0800a371
 800a180:	0800a371 	.word	0x0800a371
 800a184:	0800a371 	.word	0x0800a371
 800a188:	0800a371 	.word	0x0800a371
 800a18c:	0800a371 	.word	0x0800a371
 800a190:	0800a371 	.word	0x0800a371
 800a194:	0800a371 	.word	0x0800a371
 800a198:	0800a371 	.word	0x0800a371
 800a19c:	0800a371 	.word	0x0800a371
 800a1a0:	0800a371 	.word	0x0800a371
 800a1a4:	0800a371 	.word	0x0800a371
 800a1a8:	0800a371 	.word	0x0800a371
 800a1ac:	0800a371 	.word	0x0800a371
 800a1b0:	0800a371 	.word	0x0800a371
 800a1b4:	0800a371 	.word	0x0800a371
 800a1b8:	0800a371 	.word	0x0800a371
 800a1bc:	0800a371 	.word	0x0800a371
 800a1c0:	0800a371 	.word	0x0800a371
 800a1c4:	0800a371 	.word	0x0800a371
 800a1c8:	0800a371 	.word	0x0800a371
 800a1cc:	0800a371 	.word	0x0800a371
 800a1d0:	0800a371 	.word	0x0800a371
 800a1d4:	0800a329 	.word	0x0800a329
 800a1d8:	0800a371 	.word	0x0800a371
 800a1dc:	0800a371 	.word	0x0800a371
 800a1e0:	0800a371 	.word	0x0800a371
 800a1e4:	0800a371 	.word	0x0800a371
 800a1e8:	0800a371 	.word	0x0800a371
 800a1ec:	0800a371 	.word	0x0800a371
 800a1f0:	0800a371 	.word	0x0800a371
 800a1f4:	0800a371 	.word	0x0800a371
 800a1f8:	0800a371 	.word	0x0800a371
 800a1fc:	0800a371 	.word	0x0800a371
 800a200:	0800a371 	.word	0x0800a371
 800a204:	0800a371 	.word	0x0800a371
 800a208:	0800a371 	.word	0x0800a371
 800a20c:	0800a371 	.word	0x0800a371
 800a210:	0800a371 	.word	0x0800a371
 800a214:	0800a371 	.word	0x0800a371
 800a218:	0800a371 	.word	0x0800a371
 800a21c:	0800a371 	.word	0x0800a371
 800a220:	0800a371 	.word	0x0800a371
 800a224:	0800a371 	.word	0x0800a371
 800a228:	0800a371 	.word	0x0800a371
 800a22c:	0800a371 	.word	0x0800a371
 800a230:	0800a371 	.word	0x0800a371
 800a234:	0800a371 	.word	0x0800a371
 800a238:	0800a371 	.word	0x0800a371
 800a23c:	0800a371 	.word	0x0800a371
 800a240:	0800a371 	.word	0x0800a371
 800a244:	0800a371 	.word	0x0800a371
 800a248:	0800a371 	.word	0x0800a371
 800a24c:	0800a371 	.word	0x0800a371
 800a250:	0800a371 	.word	0x0800a371
 800a254:	0800a371 	.word	0x0800a371
 800a258:	0800a32d 	.word	0x0800a32d
 800a25c:	0800a331 	.word	0x0800a331
 800a260:	0800a335 	.word	0x0800a335
 800a264:	0800a339 	.word	0x0800a339
 800a268:	0800a33d 	.word	0x0800a33d
 800a26c:	0800a341 	.word	0x0800a341
 800a270:	0800a345 	.word	0x0800a345
 800a274:	0800a371 	.word	0x0800a371
 800a278:	0800a349 	.word	0x0800a349
 800a27c:	0800a371 	.word	0x0800a371
 800a280:	0800a371 	.word	0x0800a371
 800a284:	0800a371 	.word	0x0800a371
 800a288:	0800a34d 	.word	0x0800a34d
 800a28c:	0800a351 	.word	0x0800a351
 800a290:	0800a371 	.word	0x0800a371
 800a294:	0800a355 	.word	0x0800a355
 800a298:	0800a371 	.word	0x0800a371
 800a29c:	0800a371 	.word	0x0800a371
 800a2a0:	0800a371 	.word	0x0800a371
 800a2a4:	0800a371 	.word	0x0800a371
 800a2a8:	0800a371 	.word	0x0800a371
 800a2ac:	0800a371 	.word	0x0800a371
 800a2b0:	0800a371 	.word	0x0800a371
 800a2b4:	0800a371 	.word	0x0800a371
 800a2b8:	0800a371 	.word	0x0800a371
 800a2bc:	0800a371 	.word	0x0800a371
 800a2c0:	0800a371 	.word	0x0800a371
 800a2c4:	0800a371 	.word	0x0800a371
 800a2c8:	0800a371 	.word	0x0800a371
 800a2cc:	0800a371 	.word	0x0800a371
 800a2d0:	0800a371 	.word	0x0800a371
 800a2d4:	0800a371 	.word	0x0800a371
 800a2d8:	0800a359 	.word	0x0800a359
 800a2dc:	0800a35d 	.word	0x0800a35d
 800a2e0:	0800a361 	.word	0x0800a361
 800a2e4:	0800a365 	.word	0x0800a365
 800a2e8:	0800a369 	.word	0x0800a369
 800a2ec:	0800a36d 	.word	0x0800a36d
		case EMPTY:
			return "EMPTY";
 800a2f0:	4b22      	ldr	r3, [pc, #136]	; (800a37c <CoAP_CodeName+0x33c>)
 800a2f2:	e03e      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_GET:
			return "REQ_GET";
 800a2f4:	4b22      	ldr	r3, [pc, #136]	; (800a380 <CoAP_CodeName+0x340>)
 800a2f6:	e03c      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_POST:
			return "REQ_POST";
 800a2f8:	4b22      	ldr	r3, [pc, #136]	; (800a384 <CoAP_CodeName+0x344>)
 800a2fa:	e03a      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_PUT:
			return "REQ_PUT";
 800a2fc:	4b22      	ldr	r3, [pc, #136]	; (800a388 <CoAP_CodeName+0x348>)
 800a2fe:	e038      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_DELETE:
			return "REQ_DELETE";
 800a300:	4b22      	ldr	r3, [pc, #136]	; (800a38c <CoAP_CodeName+0x34c>)
 800a302:	e036      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_FETCH:
			return "REQ_FETCH";
 800a304:	4b22      	ldr	r3, [pc, #136]	; (800a390 <CoAP_CodeName+0x350>)
 800a306:	e034      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_PATCH:
			return "REQ_PATCH";
 800a308:	4b22      	ldr	r3, [pc, #136]	; (800a394 <CoAP_CodeName+0x354>)
 800a30a:	e032      	b.n	800a372 <CoAP_CodeName+0x332>
		case REQ_IPATCH:
			// iPATCH and LAST both 0.07
			return "REQ_IPATCH/REQ_LAST";
 800a30c:	4b22      	ldr	r3, [pc, #136]	; (800a398 <CoAP_CodeName+0x358>)
 800a30e:	e030      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_FIRST_2_00:
			return "RESP_FIRST_2_00";
 800a310:	4b22      	ldr	r3, [pc, #136]	; (800a39c <CoAP_CodeName+0x35c>)
 800a312:	e02e      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_CREATED_2_01:
			return "RESP_SUCCESS_CREATED_2_01";
 800a314:	4b22      	ldr	r3, [pc, #136]	; (800a3a0 <CoAP_CodeName+0x360>)
 800a316:	e02c      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_DELETED_2_02:
			return "RESP_SUCCESS_DELETED_2_02";
 800a318:	4b22      	ldr	r3, [pc, #136]	; (800a3a4 <CoAP_CodeName+0x364>)
 800a31a:	e02a      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_VALID_2_03:
			return "RESP_SUCCESS_VALID_2_03";
 800a31c:	4b22      	ldr	r3, [pc, #136]	; (800a3a8 <CoAP_CodeName+0x368>)
 800a31e:	e028      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_CHANGED_2_04:
			return "RESP_SUCCESS_CHANGED_2_04";
 800a320:	4b22      	ldr	r3, [pc, #136]	; (800a3ac <CoAP_CodeName+0x36c>)
 800a322:	e026      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_CONTENT_2_05:
			return "RESP_SUCCESS_CONTENT_2_05";
 800a324:	4b22      	ldr	r3, [pc, #136]	; (800a3b0 <CoAP_CodeName+0x370>)
 800a326:	e024      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SUCCESS_CONTINUE_2_31:
			return "RESP_SUCCESS_CONTINUE_2_31";
 800a328:	4b22      	ldr	r3, [pc, #136]	; (800a3b4 <CoAP_CodeName+0x374>)
 800a32a:	e022      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_ERROR_BAD_REQUEST_4_00:
			return "RESP_ERROR_BAD_REQUEST_4_00";
 800a32c:	4b22      	ldr	r3, [pc, #136]	; (800a3b8 <CoAP_CodeName+0x378>)
 800a32e:	e020      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_ERROR_UNAUTHORIZED_4_01:
			return "RESP_ERROR_UNAUTHORIZED_4_01";
 800a330:	4b22      	ldr	r3, [pc, #136]	; (800a3bc <CoAP_CodeName+0x37c>)
 800a332:	e01e      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_BAD_OPTION_4_02:
			return "RESP_BAD_OPTION_4_02";
 800a334:	4b22      	ldr	r3, [pc, #136]	; (800a3c0 <CoAP_CodeName+0x380>)
 800a336:	e01c      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_FORBIDDEN_4_03:
			return "RESP_FORBIDDEN_4_03";
 800a338:	4b22      	ldr	r3, [pc, #136]	; (800a3c4 <CoAP_CodeName+0x384>)
 800a33a:	e01a      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_NOT_FOUND_4_04:
			return "RESP_NOT_FOUND_4_04";
 800a33c:	4b22      	ldr	r3, [pc, #136]	; (800a3c8 <CoAP_CodeName+0x388>)
 800a33e:	e018      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_METHOD_NOT_ALLOWED_4_05:
			return "RESP_METHOD_NOT_ALLOWED_4_05";
 800a340:	4b22      	ldr	r3, [pc, #136]	; (800a3cc <CoAP_CodeName+0x38c>)
 800a342:	e016      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_METHOD_NOT_ACCEPTABLE_4_06:
			return "RESP_METHOD_NOT_ACCEPTABLE_4_06";
 800a344:	4b22      	ldr	r3, [pc, #136]	; (800a3d0 <CoAP_CodeName+0x390>)
 800a346:	e014      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_REQUEST_ENTITY_INCOMPLETE_4_08:
			return "RESP_REQUEST_ENTITY_INCOMPLETE_4_08";
 800a348:	4b22      	ldr	r3, [pc, #136]	; (800a3d4 <CoAP_CodeName+0x394>)
 800a34a:	e012      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_PRECONDITION_FAILED_4_12:
			return "RESP_PRECONDITION_FAILED_4_12";
 800a34c:	4b22      	ldr	r3, [pc, #136]	; (800a3d8 <CoAP_CodeName+0x398>)
 800a34e:	e010      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_REQUEST_ENTITY_TOO_LARGE_4_13:
			return "RESP_REQUEST_ENTITY_TOO_LARGE_4_13";
 800a350:	4b22      	ldr	r3, [pc, #136]	; (800a3dc <CoAP_CodeName+0x39c>)
 800a352:	e00e      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_UNSUPPORTED_CONTENT_FORMAT_4_15:
			return "RESP_UNSUPPORTED_CONTENT_FORMAT_4_15";
 800a354:	4b22      	ldr	r3, [pc, #136]	; (800a3e0 <CoAP_CodeName+0x3a0>)
 800a356:	e00c      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_INTERNAL_SERVER_ERROR_5_00:
			return "RESP_INTERNAL_SERVER_ERROR_5_00";
 800a358:	4b22      	ldr	r3, [pc, #136]	; (800a3e4 <CoAP_CodeName+0x3a4>)
 800a35a:	e00a      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_NOT_IMPLEMENTED_5_01:
			return "RESP_NOT_IMPLEMENTED_5_01";
 800a35c:	4b22      	ldr	r3, [pc, #136]	; (800a3e8 <CoAP_CodeName+0x3a8>)
 800a35e:	e008      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_BAD_GATEWAY_5_02:
			return "RESP_BAD_GATEWAY_5_02";
 800a360:	4b22      	ldr	r3, [pc, #136]	; (800a3ec <CoAP_CodeName+0x3ac>)
 800a362:	e006      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_SERVICE_UNAVAILABLE_5_03:
			return "RESP_SERVICE_UNAVAILABLE_5_03";
 800a364:	4b22      	ldr	r3, [pc, #136]	; (800a3f0 <CoAP_CodeName+0x3b0>)
 800a366:	e004      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_GATEWAY_TIMEOUT_5_04:
			return "RESP_GATEWAY_TIMEOUT_5_04";
 800a368:	4b22      	ldr	r3, [pc, #136]	; (800a3f4 <CoAP_CodeName+0x3b4>)
 800a36a:	e002      	b.n	800a372 <CoAP_CodeName+0x332>
		case RESP_PROXYING_NOT_SUPPORTED_5_05:
			return "RESP_PROXYING_NOT_SUPPORTED_5_05";
 800a36c:	4b22      	ldr	r3, [pc, #136]	; (800a3f8 <CoAP_CodeName+0x3b8>)
 800a36e:	e000      	b.n	800a372 <CoAP_CodeName+0x332>
		default:
			return "UNKNOWN";
 800a370:	4b22      	ldr	r3, [pc, #136]	; (800a3fc <CoAP_CodeName+0x3bc>)
	}
}
 800a372:	4618      	mov	r0, r3
 800a374:	370c      	adds	r7, #12
 800a376:	46bd      	mov	sp, r7
 800a378:	bc80      	pop	{r7}
 800a37a:	4770      	bx	lr
 800a37c:	0802d07c 	.word	0x0802d07c
 800a380:	0802d084 	.word	0x0802d084
 800a384:	0802d08c 	.word	0x0802d08c
 800a388:	0802d098 	.word	0x0802d098
 800a38c:	0802d0a0 	.word	0x0802d0a0
 800a390:	0802d0ac 	.word	0x0802d0ac
 800a394:	0802d0b8 	.word	0x0802d0b8
 800a398:	0802d0c4 	.word	0x0802d0c4
 800a39c:	0802d0d8 	.word	0x0802d0d8
 800a3a0:	0802d0e8 	.word	0x0802d0e8
 800a3a4:	0802d104 	.word	0x0802d104
 800a3a8:	0802d120 	.word	0x0802d120
 800a3ac:	0802d138 	.word	0x0802d138
 800a3b0:	0802d154 	.word	0x0802d154
 800a3b4:	0802d170 	.word	0x0802d170
 800a3b8:	0802d18c 	.word	0x0802d18c
 800a3bc:	0802d1a8 	.word	0x0802d1a8
 800a3c0:	0802d1c8 	.word	0x0802d1c8
 800a3c4:	0802d1e0 	.word	0x0802d1e0
 800a3c8:	0802d1f4 	.word	0x0802d1f4
 800a3cc:	0802d208 	.word	0x0802d208
 800a3d0:	0802d228 	.word	0x0802d228
 800a3d4:	0802d248 	.word	0x0802d248
 800a3d8:	0802d26c 	.word	0x0802d26c
 800a3dc:	0802d28c 	.word	0x0802d28c
 800a3e0:	0802d2b0 	.word	0x0802d2b0
 800a3e4:	0802d2d8 	.word	0x0802d2d8
 800a3e8:	0802d2f8 	.word	0x0802d2f8
 800a3ec:	0802d314 	.word	0x0802d314
 800a3f0:	0802d32c 	.word	0x0802d32c
 800a3f4:	0802d34c 	.word	0x0802d34c
 800a3f8:	0802d368 	.word	0x0802d368
 800a3fc:	0802d38c 	.word	0x0802d38c

0800a400 <CoAP_PrintResultValue>:

void _rom CoAP_PrintResultValue(CoAP_Result_t res) {
 800a400:	b580      	push	{r7, lr}
 800a402:	b082      	sub	sp, #8
 800a404:	af00      	add	r7, sp, #0
 800a406:	4603      	mov	r3, r0
 800a408:	71fb      	strb	r3, [r7, #7]
	if (res == COAP_OK) {
 800a40a:	79fb      	ldrb	r3, [r7, #7]
 800a40c:	2b00      	cmp	r3, #0
 800a40e:	d107      	bne.n	800a420 <CoAP_PrintResultValue+0x20>
		INFO("COAP_OK\r\n");
 800a410:	492f      	ldr	r1, [pc, #188]	; (800a4d0 <CoAP_PrintResultValue+0xd0>)
 800a412:	4830      	ldr	r0, [pc, #192]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a414:	f020 fd4e 	bl	802aeb4 <siprintf>
 800a418:	482e      	ldr	r0, [pc, #184]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a41a:	f7fd feed 	bl	80081f8 <hal_debug_puts>
		INFO("COAP_ERR_OUT_OF_MEMORY\r\n");
	}
	else {
		INFO("UNKNOWN RESULT\r\n");
	}
}
 800a41e:	e053      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_DATAGRAM_TOO_SHORT) {
 800a420:	79fb      	ldrb	r3, [r7, #7]
 800a422:	2b02      	cmp	r3, #2
 800a424:	d107      	bne.n	800a436 <CoAP_PrintResultValue+0x36>
		INFO("COAP_PARSE_DATAGRAM_TOO_SHORT\r\n");
 800a426:	492c      	ldr	r1, [pc, #176]	; (800a4d8 <CoAP_PrintResultValue+0xd8>)
 800a428:	482a      	ldr	r0, [pc, #168]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a42a:	f020 fd43 	bl	802aeb4 <siprintf>
 800a42e:	4829      	ldr	r0, [pc, #164]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a430:	f7fd fee2 	bl	80081f8 <hal_debug_puts>
}
 800a434:	e048      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_UNKOWN_COAP_VERSION) {
 800a436:	79fb      	ldrb	r3, [r7, #7]
 800a438:	2b03      	cmp	r3, #3
 800a43a:	d107      	bne.n	800a44c <CoAP_PrintResultValue+0x4c>
		INFO("COAP_PARSE_UNKOWN_COAP_VERSION\r\n");
 800a43c:	4927      	ldr	r1, [pc, #156]	; (800a4dc <CoAP_PrintResultValue+0xdc>)
 800a43e:	4825      	ldr	r0, [pc, #148]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a440:	f020 fd38 	bl	802aeb4 <siprintf>
 800a444:	4823      	ldr	r0, [pc, #140]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a446:	f7fd fed7 	bl	80081f8 <hal_debug_puts>
}
 800a44a:	e03d      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_MESSAGE_FORMAT_ERROR) {
 800a44c:	79fb      	ldrb	r3, [r7, #7]
 800a44e:	2b04      	cmp	r3, #4
 800a450:	d107      	bne.n	800a462 <CoAP_PrintResultValue+0x62>
		INFO("COAP_PARSE_MESSAGE_FORMAT_ERROR\r\n");
 800a452:	4923      	ldr	r1, [pc, #140]	; (800a4e0 <CoAP_PrintResultValue+0xe0>)
 800a454:	481f      	ldr	r0, [pc, #124]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a456:	f020 fd2d 	bl	802aeb4 <siprintf>
 800a45a:	481e      	ldr	r0, [pc, #120]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a45c:	f7fd fecc 	bl	80081f8 <hal_debug_puts>
}
 800a460:	e032      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_TOO_MANY_OPTIONS) {
 800a462:	79fb      	ldrb	r3, [r7, #7]
 800a464:	2b05      	cmp	r3, #5
 800a466:	d107      	bne.n	800a478 <CoAP_PrintResultValue+0x78>
		INFO("COAP_PARSE_TOO_MANY_OPTIONS\r\n");
 800a468:	491e      	ldr	r1, [pc, #120]	; (800a4e4 <CoAP_PrintResultValue+0xe4>)
 800a46a:	481a      	ldr	r0, [pc, #104]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a46c:	f020 fd22 	bl	802aeb4 <siprintf>
 800a470:	4818      	ldr	r0, [pc, #96]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a472:	f7fd fec1 	bl	80081f8 <hal_debug_puts>
}
 800a476:	e027      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_TOO_LONG_OPTION) {
 800a478:	79fb      	ldrb	r3, [r7, #7]
 800a47a:	2b06      	cmp	r3, #6
 800a47c:	d107      	bne.n	800a48e <CoAP_PrintResultValue+0x8e>
		INFO("COAP_PARSE_TOO_LONG_OPTION\r\n");
 800a47e:	491a      	ldr	r1, [pc, #104]	; (800a4e8 <CoAP_PrintResultValue+0xe8>)
 800a480:	4814      	ldr	r0, [pc, #80]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a482:	f020 fd17 	bl	802aeb4 <siprintf>
 800a486:	4813      	ldr	r0, [pc, #76]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a488:	f7fd feb6 	bl	80081f8 <hal_debug_puts>
}
 800a48c:	e01c      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_PARSE_TOO_MUCH_PAYLOAD) {
 800a48e:	79fb      	ldrb	r3, [r7, #7]
 800a490:	2b07      	cmp	r3, #7
 800a492:	d107      	bne.n	800a4a4 <CoAP_PrintResultValue+0xa4>
		INFO("COAP_PARSE_TOO_MUCH_PAYLOAD\r\n");
 800a494:	4915      	ldr	r1, [pc, #84]	; (800a4ec <CoAP_PrintResultValue+0xec>)
 800a496:	480f      	ldr	r0, [pc, #60]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a498:	f020 fd0c 	bl	802aeb4 <siprintf>
 800a49c:	480d      	ldr	r0, [pc, #52]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a49e:	f7fd feab 	bl	80081f8 <hal_debug_puts>
}
 800a4a2:	e011      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
	else if (res == COAP_ERR_OUT_OF_MEMORY) {
 800a4a4:	79fb      	ldrb	r3, [r7, #7]
 800a4a6:	2b0d      	cmp	r3, #13
 800a4a8:	d107      	bne.n	800a4ba <CoAP_PrintResultValue+0xba>
		INFO("COAP_ERR_OUT_OF_MEMORY\r\n");
 800a4aa:	4911      	ldr	r1, [pc, #68]	; (800a4f0 <CoAP_PrintResultValue+0xf0>)
 800a4ac:	4809      	ldr	r0, [pc, #36]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a4ae:	f020 fd01 	bl	802aeb4 <siprintf>
 800a4b2:	4808      	ldr	r0, [pc, #32]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a4b4:	f7fd fea0 	bl	80081f8 <hal_debug_puts>
}
 800a4b8:	e006      	b.n	800a4c8 <CoAP_PrintResultValue+0xc8>
		INFO("UNKNOWN RESULT\r\n");
 800a4ba:	490e      	ldr	r1, [pc, #56]	; (800a4f4 <CoAP_PrintResultValue+0xf4>)
 800a4bc:	4805      	ldr	r0, [pc, #20]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a4be:	f020 fcf9 	bl	802aeb4 <siprintf>
 800a4c2:	4804      	ldr	r0, [pc, #16]	; (800a4d4 <CoAP_PrintResultValue+0xd4>)
 800a4c4:	f7fd fe98 	bl	80081f8 <hal_debug_puts>
}
 800a4c8:	bf00      	nop
 800a4ca:	3708      	adds	r7, #8
 800a4cc:	46bd      	mov	sp, r7
 800a4ce:	bd80      	pop	{r7, pc}
 800a4d0:	0802d394 	.word	0x0802d394
 800a4d4:	20000b54 	.word	0x20000b54
 800a4d8:	0802d3a0 	.word	0x0802d3a0
 800a4dc:	0802d3c0 	.word	0x0802d3c0
 800a4e0:	0802d3e4 	.word	0x0802d3e4
 800a4e4:	0802d408 	.word	0x0802d408
 800a4e8:	0802d428 	.word	0x0802d428
 800a4ec:	0802d448 	.word	0x0802d448
 800a4f0:	0802d468 	.word	0x0802d468
 800a4f4:	0802d484 	.word	0x0802d484

0800a4f8 <pack_OptionsFromList>:
//#########################################################################################################
//### This function packs multiple CoAP options to the format specified at
//### section 3.1 in RFC7252. The option array gets sorted by option numbers first and
//###  is than packed into the compressed byte array format with its delta encoding.
//#########################################################################################################
CoAP_Result_t _rom pack_OptionsFromList(uint8_t* pDestArr, uint16_t* pBytesWritten, CoAP_option_t* pOptionsListBegin) {
 800a4f8:	b480      	push	{r7}
 800a4fa:	b08b      	sub	sp, #44	; 0x2c
 800a4fc:	af00      	add	r7, sp, #0
 800a4fe:	60f8      	str	r0, [r7, #12]
 800a500:	60b9      	str	r1, [r7, #8]
 800a502:	607a      	str	r2, [r7, #4]
	uint16_t offset = 0;         //Current "Write" Position while packing the options array to the byte array
 800a504:	2300      	movs	r3, #0
 800a506:	84fb      	strh	r3, [r7, #38]	; 0x26
	uint16_t OptStartOffset = 0; //Position of 1st Byte of current packed option
 800a508:	2300      	movs	r3, #0
 800a50a:	837b      	strh	r3, [r7, #26]
	uint16_t lastOptNumber = 0;
 800a50c:	2300      	movs	r3, #0
 800a50e:	84bb      	strh	r3, [r7, #36]	; 0x24
	uint16_t currDelta = 0;         //current Delta to privious option
 800a510:	2300      	movs	r3, #0
 800a512:	833b      	strh	r3, [r7, #24]
	uint16_t optLength = 0;         //Length of current Option
 800a514:	2300      	movs	r3, #0
 800a516:	82fb      	strh	r3, [r7, #22]

	CoAP_option_t* pOption = pOptionsListBegin;
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	623b      	str	r3, [r7, #32]

	if (pOption == NULL) //no options - list empty - can happen no error
 800a51c:	6a3b      	ldr	r3, [r7, #32]
 800a51e:	2b00      	cmp	r3, #0
 800a520:	d104      	bne.n	800a52c <pack_OptionsFromList+0x34>
	{
		*pBytesWritten = 0;
 800a522:	68bb      	ldr	r3, [r7, #8]
 800a524:	2200      	movs	r2, #0
 800a526:	801a      	strh	r2, [r3, #0]
		return COAP_OK;
 800a528:	2300      	movs	r3, #0
 800a52a:	e0d5      	b.n	800a6d8 <pack_OptionsFromList+0x1e0>
	}

	//iterate throw array of options
	do {
		//Inits for Option Packing
		currDelta = pOption->Number - lastOptNumber;
 800a52c:	6a3b      	ldr	r3, [r7, #32]
 800a52e:	889a      	ldrh	r2, [r3, #4]
 800a530:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800a532:	1ad3      	subs	r3, r2, r3
 800a534:	833b      	strh	r3, [r7, #24]
		lastOptNumber = pOption->Number;
 800a536:	6a3b      	ldr	r3, [r7, #32]
 800a538:	889b      	ldrh	r3, [r3, #4]
 800a53a:	84bb      	strh	r3, [r7, #36]	; 0x24

		optLength = pOption->Length;
 800a53c:	6a3b      	ldr	r3, [r7, #32]
 800a53e:	88db      	ldrh	r3, [r3, #6]
 800a540:	82fb      	strh	r3, [r7, #22]
		OptStartOffset = offset;
 800a542:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a544:	837b      	strh	r3, [r7, #26]
		offset++;
 800a546:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a548:	3301      	adds	r3, #1
 800a54a:	84fb      	strh	r3, [r7, #38]	; 0x26
		pDestArr[OptStartOffset] = 0;
 800a54c:	8b7b      	ldrh	r3, [r7, #26]
 800a54e:	68fa      	ldr	r2, [r7, #12]
 800a550:	4413      	add	r3, r2
 800a552:	2200      	movs	r2, #0
 800a554:	701a      	strb	r2, [r3, #0]

		//Delta Bytes
		if (currDelta < 13) {
 800a556:	8b3b      	ldrh	r3, [r7, #24]
 800a558:	2b0c      	cmp	r3, #12
 800a55a:	d810      	bhi.n	800a57e <pack_OptionsFromList+0x86>
			pDestArr[OptStartOffset] |= ((uint8_t) currDelta) << 4u;
 800a55c:	8b7b      	ldrh	r3, [r7, #26]
 800a55e:	68fa      	ldr	r2, [r7, #12]
 800a560:	4413      	add	r3, r2
 800a562:	781b      	ldrb	r3, [r3, #0]
 800a564:	b25a      	sxtb	r2, r3
 800a566:	8b3b      	ldrh	r3, [r7, #24]
 800a568:	b2db      	uxtb	r3, r3
 800a56a:	011b      	lsls	r3, r3, #4
 800a56c:	b25b      	sxtb	r3, r3
 800a56e:	4313      	orrs	r3, r2
 800a570:	b259      	sxtb	r1, r3
 800a572:	8b7b      	ldrh	r3, [r7, #26]
 800a574:	68fa      	ldr	r2, [r7, #12]
 800a576:	4413      	add	r3, r2
 800a578:	b2ca      	uxtb	r2, r1
 800a57a:	701a      	strb	r2, [r3, #0]
 800a57c:	e03c      	b.n	800a5f8 <pack_OptionsFromList+0x100>
		} else if (currDelta < 269) {
 800a57e:	8b3b      	ldrh	r3, [r7, #24]
 800a580:	f5b3 7f86 	cmp.w	r3, #268	; 0x10c
 800a584:	d816      	bhi.n	800a5b4 <pack_OptionsFromList+0xbc>
			pDestArr[OptStartOffset] |= ((uint8_t) 13u) << 4u;
 800a586:	8b7b      	ldrh	r3, [r7, #26]
 800a588:	68fa      	ldr	r2, [r7, #12]
 800a58a:	4413      	add	r3, r2
 800a58c:	781a      	ldrb	r2, [r3, #0]
 800a58e:	8b7b      	ldrh	r3, [r7, #26]
 800a590:	68f9      	ldr	r1, [r7, #12]
 800a592:	440b      	add	r3, r1
 800a594:	f062 022f 	orn	r2, r2, #47	; 0x2f
 800a598:	b2d2      	uxtb	r2, r2
 800a59a:	701a      	strb	r2, [r3, #0]
			pDestArr[offset] = ((uint8_t) currDelta) - 13u;
 800a59c:	8b3b      	ldrh	r3, [r7, #24]
 800a59e:	b2da      	uxtb	r2, r3
 800a5a0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5a2:	68f9      	ldr	r1, [r7, #12]
 800a5a4:	440b      	add	r3, r1
 800a5a6:	3a0d      	subs	r2, #13
 800a5a8:	b2d2      	uxtb	r2, r2
 800a5aa:	701a      	strb	r2, [r3, #0]
			offset++;
 800a5ac:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5ae:	3301      	adds	r3, #1
 800a5b0:	84fb      	strh	r3, [r7, #38]	; 0x26
 800a5b2:	e021      	b.n	800a5f8 <pack_OptionsFromList+0x100>
		} else {
			pDestArr[OptStartOffset] |= ((uint8_t) 14u) << 4u;
 800a5b4:	8b7b      	ldrh	r3, [r7, #26]
 800a5b6:	68fa      	ldr	r2, [r7, #12]
 800a5b8:	4413      	add	r3, r2
 800a5ba:	781a      	ldrb	r2, [r3, #0]
 800a5bc:	8b7b      	ldrh	r3, [r7, #26]
 800a5be:	68f9      	ldr	r1, [r7, #12]
 800a5c0:	440b      	add	r3, r1
 800a5c2:	f062 021f 	orn	r2, r2, #31
 800a5c6:	b2d2      	uxtb	r2, r2
 800a5c8:	701a      	strb	r2, [r3, #0]

			pDestArr[offset] = (uint8_t) ((currDelta - 269u) >> 8u);
 800a5ca:	8b3b      	ldrh	r3, [r7, #24]
 800a5cc:	f2a3 130d 	subw	r3, r3, #269	; 0x10d
 800a5d0:	0a19      	lsrs	r1, r3, #8
 800a5d2:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5d4:	68fa      	ldr	r2, [r7, #12]
 800a5d6:	4413      	add	r3, r2
 800a5d8:	b2ca      	uxtb	r2, r1
 800a5da:	701a      	strb	r2, [r3, #0]
			offset++;
 800a5dc:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5de:	3301      	adds	r3, #1
 800a5e0:	84fb      	strh	r3, [r7, #38]	; 0x26
			pDestArr[offset] = (uint8_t) ((currDelta - 269u) & 0xffu);
 800a5e2:	8b3b      	ldrh	r3, [r7, #24]
 800a5e4:	b2da      	uxtb	r2, r3
 800a5e6:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5e8:	68f9      	ldr	r1, [r7, #12]
 800a5ea:	440b      	add	r3, r1
 800a5ec:	3a0d      	subs	r2, #13
 800a5ee:	b2d2      	uxtb	r2, r2
 800a5f0:	701a      	strb	r2, [r3, #0]
			offset++;
 800a5f2:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a5f4:	3301      	adds	r3, #1
 800a5f6:	84fb      	strh	r3, [r7, #38]	; 0x26
		}

		//Length Bytes
		if (optLength < 13) {
 800a5f8:	8afb      	ldrh	r3, [r7, #22]
 800a5fa:	2b0c      	cmp	r3, #12
 800a5fc:	d80c      	bhi.n	800a618 <pack_OptionsFromList+0x120>
			pDestArr[OptStartOffset] |= ((uint8_t) optLength);
 800a5fe:	8b7b      	ldrh	r3, [r7, #26]
 800a600:	68fa      	ldr	r2, [r7, #12]
 800a602:	4413      	add	r3, r2
 800a604:	7819      	ldrb	r1, [r3, #0]
 800a606:	8afb      	ldrh	r3, [r7, #22]
 800a608:	b2da      	uxtb	r2, r3
 800a60a:	8b7b      	ldrh	r3, [r7, #26]
 800a60c:	68f8      	ldr	r0, [r7, #12]
 800a60e:	4403      	add	r3, r0
 800a610:	430a      	orrs	r2, r1
 800a612:	b2d2      	uxtb	r2, r2
 800a614:	701a      	strb	r2, [r3, #0]
 800a616:	e03c      	b.n	800a692 <pack_OptionsFromList+0x19a>
		} else if (optLength < 269) {
 800a618:	8afb      	ldrh	r3, [r7, #22]
 800a61a:	f5b3 7f86 	cmp.w	r3, #268	; 0x10c
 800a61e:	d816      	bhi.n	800a64e <pack_OptionsFromList+0x156>
			pDestArr[OptStartOffset] |= ((uint8_t) 13);
 800a620:	8b7b      	ldrh	r3, [r7, #26]
 800a622:	68fa      	ldr	r2, [r7, #12]
 800a624:	4413      	add	r3, r2
 800a626:	781a      	ldrb	r2, [r3, #0]
 800a628:	8b7b      	ldrh	r3, [r7, #26]
 800a62a:	68f9      	ldr	r1, [r7, #12]
 800a62c:	440b      	add	r3, r1
 800a62e:	f042 020d 	orr.w	r2, r2, #13
 800a632:	b2d2      	uxtb	r2, r2
 800a634:	701a      	strb	r2, [r3, #0]
			pDestArr[offset] = ((uint8_t) optLength) - 13;
 800a636:	8afb      	ldrh	r3, [r7, #22]
 800a638:	b2da      	uxtb	r2, r3
 800a63a:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a63c:	68f9      	ldr	r1, [r7, #12]
 800a63e:	440b      	add	r3, r1
 800a640:	3a0d      	subs	r2, #13
 800a642:	b2d2      	uxtb	r2, r2
 800a644:	701a      	strb	r2, [r3, #0]
			offset++;
 800a646:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a648:	3301      	adds	r3, #1
 800a64a:	84fb      	strh	r3, [r7, #38]	; 0x26
 800a64c:	e021      	b.n	800a692 <pack_OptionsFromList+0x19a>
		} else {
			pDestArr[OptStartOffset] |= ((uint8_t) 14);
 800a64e:	8b7b      	ldrh	r3, [r7, #26]
 800a650:	68fa      	ldr	r2, [r7, #12]
 800a652:	4413      	add	r3, r2
 800a654:	781a      	ldrb	r2, [r3, #0]
 800a656:	8b7b      	ldrh	r3, [r7, #26]
 800a658:	68f9      	ldr	r1, [r7, #12]
 800a65a:	440b      	add	r3, r1
 800a65c:	f042 020e 	orr.w	r2, r2, #14
 800a660:	b2d2      	uxtb	r2, r2
 800a662:	701a      	strb	r2, [r3, #0]

			pDestArr[offset] = (uint8_t) ((optLength - 269u) >> 8u);
 800a664:	8afb      	ldrh	r3, [r7, #22]
 800a666:	f2a3 130d 	subw	r3, r3, #269	; 0x10d
 800a66a:	0a19      	lsrs	r1, r3, #8
 800a66c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a66e:	68fa      	ldr	r2, [r7, #12]
 800a670:	4413      	add	r3, r2
 800a672:	b2ca      	uxtb	r2, r1
 800a674:	701a      	strb	r2, [r3, #0]
			offset++;
 800a676:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a678:	3301      	adds	r3, #1
 800a67a:	84fb      	strh	r3, [r7, #38]	; 0x26
			pDestArr[offset] = (uint8_t) ((optLength - 269u) & 0xffu);
 800a67c:	8afb      	ldrh	r3, [r7, #22]
 800a67e:	b2da      	uxtb	r2, r3
 800a680:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a682:	68f9      	ldr	r1, [r7, #12]
 800a684:	440b      	add	r3, r1
 800a686:	3a0d      	subs	r2, #13
 800a688:	b2d2      	uxtb	r2, r2
 800a68a:	701a      	strb	r2, [r3, #0]
			offset++;
 800a68c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a68e:	3301      	adds	r3, #1
 800a690:	84fb      	strh	r3, [r7, #38]	; 0x26
		}

		//Option Values
		int t;
		for (t = 0; t < optLength; t++) {
 800a692:	2300      	movs	r3, #0
 800a694:	61fb      	str	r3, [r7, #28]
 800a696:	e00e      	b.n	800a6b6 <pack_OptionsFromList+0x1be>
			pDestArr[offset] = pOption->Value[t];
 800a698:	6a3b      	ldr	r3, [r7, #32]
 800a69a:	689a      	ldr	r2, [r3, #8]
 800a69c:	69fb      	ldr	r3, [r7, #28]
 800a69e:	441a      	add	r2, r3
 800a6a0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a6a2:	68f9      	ldr	r1, [r7, #12]
 800a6a4:	440b      	add	r3, r1
 800a6a6:	7812      	ldrb	r2, [r2, #0]
 800a6a8:	701a      	strb	r2, [r3, #0]
			offset++;
 800a6aa:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 800a6ac:	3301      	adds	r3, #1
 800a6ae:	84fb      	strh	r3, [r7, #38]	; 0x26
		for (t = 0; t < optLength; t++) {
 800a6b0:	69fb      	ldr	r3, [r7, #28]
 800a6b2:	3301      	adds	r3, #1
 800a6b4:	61fb      	str	r3, [r7, #28]
 800a6b6:	8afb      	ldrh	r3, [r7, #22]
 800a6b8:	69fa      	ldr	r2, [r7, #28]
 800a6ba:	429a      	cmp	r2, r3
 800a6bc:	dbec      	blt.n	800a698 <pack_OptionsFromList+0x1a0>
		}

		if (pOption->next == NULL)
 800a6be:	6a3b      	ldr	r3, [r7, #32]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	2b00      	cmp	r3, #0
 800a6c4:	d003      	beq.n	800a6ce <pack_OptionsFromList+0x1d6>
			break;
		pOption = pOption->next;
 800a6c6:	6a3b      	ldr	r3, [r7, #32]
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	623b      	str	r3, [r7, #32]
	do {
 800a6cc:	e72e      	b.n	800a52c <pack_OptionsFromList+0x34>
			break;
 800a6ce:	bf00      	nop
	} while (1);

	*pBytesWritten = offset;
 800a6d0:	68bb      	ldr	r3, [r7, #8]
 800a6d2:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 800a6d4:	801a      	strh	r2, [r3, #0]
	return COAP_OK;
 800a6d6:	2300      	movs	r3, #0
}
 800a6d8:	4618      	mov	r0, r3
 800a6da:	372c      	adds	r7, #44	; 0x2c
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	bc80      	pop	{r7}
 800a6e0:	4770      	bx	lr

0800a6e2 <CoAP_NeededMem4PackOptions>:

uint16_t _rom CoAP_NeededMem4PackOptions(CoAP_option_t* pOptionsListBegin) {
 800a6e2:	b480      	push	{r7}
 800a6e4:	b087      	sub	sp, #28
 800a6e6:	af00      	add	r7, sp, #0
 800a6e8:	6078      	str	r0, [r7, #4]
	uint16_t offset = 0;         //Current "Write" Position while packing the options array to the byte array
 800a6ea:	2300      	movs	r3, #0
 800a6ec:	82fb      	strh	r3, [r7, #22]
	uint16_t lastOptNumber = 0;
 800a6ee:	2300      	movs	r3, #0
 800a6f0:	82bb      	strh	r3, [r7, #20]
	uint16_t currDelta = 0;         //current Delta to privious option
 800a6f2:	2300      	movs	r3, #0
 800a6f4:	817b      	strh	r3, [r7, #10]
	uint16_t optLength = 0;         //Length of current Option
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	813b      	strh	r3, [r7, #8]

	CoAP_option_t* pOption = pOptionsListBegin;
 800a6fa:	687b      	ldr	r3, [r7, #4]
 800a6fc:	613b      	str	r3, [r7, #16]

	if (pOption == NULL) {         //no options - list empty - can happen no error
 800a6fe:	693b      	ldr	r3, [r7, #16]
 800a700:	2b00      	cmp	r3, #0
 800a702:	d101      	bne.n	800a708 <CoAP_NeededMem4PackOptions+0x26>
		return 0;
 800a704:	2300      	movs	r3, #0
 800a706:	e040      	b.n	800a78a <CoAP_NeededMem4PackOptions+0xa8>
	}

	//iterate throw array of options
	do {
		//Inits for Option Packing
		currDelta = pOption->Number - lastOptNumber;
 800a708:	693b      	ldr	r3, [r7, #16]
 800a70a:	889a      	ldrh	r2, [r3, #4]
 800a70c:	8abb      	ldrh	r3, [r7, #20]
 800a70e:	1ad3      	subs	r3, r2, r3
 800a710:	817b      	strh	r3, [r7, #10]
		lastOptNumber = pOption->Number;
 800a712:	693b      	ldr	r3, [r7, #16]
 800a714:	889b      	ldrh	r3, [r3, #4]
 800a716:	82bb      	strh	r3, [r7, #20]

		optLength = pOption->Length;
 800a718:	693b      	ldr	r3, [r7, #16]
 800a71a:	88db      	ldrh	r3, [r3, #6]
 800a71c:	813b      	strh	r3, [r7, #8]
		offset++;
 800a71e:	8afb      	ldrh	r3, [r7, #22]
 800a720:	3301      	adds	r3, #1
 800a722:	82fb      	strh	r3, [r7, #22]

		//Delta Bytes
		if (currDelta < 13) {
 800a724:	897b      	ldrh	r3, [r7, #10]
 800a726:	2b0c      	cmp	r3, #12
 800a728:	d90a      	bls.n	800a740 <CoAP_NeededMem4PackOptions+0x5e>
			;
		}
		else if (currDelta < 269)
 800a72a:	897b      	ldrh	r3, [r7, #10]
 800a72c:	f5b3 7f86 	cmp.w	r3, #268	; 0x10c
 800a730:	d803      	bhi.n	800a73a <CoAP_NeededMem4PackOptions+0x58>
			offset++;
 800a732:	8afb      	ldrh	r3, [r7, #22]
 800a734:	3301      	adds	r3, #1
 800a736:	82fb      	strh	r3, [r7, #22]
 800a738:	e002      	b.n	800a740 <CoAP_NeededMem4PackOptions+0x5e>
		else
			offset += 2;
 800a73a:	8afb      	ldrh	r3, [r7, #22]
 800a73c:	3302      	adds	r3, #2
 800a73e:	82fb      	strh	r3, [r7, #22]

		//Length Bytes
		if (optLength < 13) {
 800a740:	893b      	ldrh	r3, [r7, #8]
 800a742:	2b0c      	cmp	r3, #12
 800a744:	d90a      	bls.n	800a75c <CoAP_NeededMem4PackOptions+0x7a>
			;
		}
		else if (optLength < 269)
 800a746:	893b      	ldrh	r3, [r7, #8]
 800a748:	f5b3 7f86 	cmp.w	r3, #268	; 0x10c
 800a74c:	d803      	bhi.n	800a756 <CoAP_NeededMem4PackOptions+0x74>
			offset++;
 800a74e:	8afb      	ldrh	r3, [r7, #22]
 800a750:	3301      	adds	r3, #1
 800a752:	82fb      	strh	r3, [r7, #22]
 800a754:	e002      	b.n	800a75c <CoAP_NeededMem4PackOptions+0x7a>
		else
			offset += 2;
 800a756:	8afb      	ldrh	r3, [r7, #22]
 800a758:	3302      	adds	r3, #2
 800a75a:	82fb      	strh	r3, [r7, #22]

		//Option Values
		int t;
		for (t = 0; t < optLength; t++)
 800a75c:	2300      	movs	r3, #0
 800a75e:	60fb      	str	r3, [r7, #12]
 800a760:	e005      	b.n	800a76e <CoAP_NeededMem4PackOptions+0x8c>
			offset++;
 800a762:	8afb      	ldrh	r3, [r7, #22]
 800a764:	3301      	adds	r3, #1
 800a766:	82fb      	strh	r3, [r7, #22]
		for (t = 0; t < optLength; t++)
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	3301      	adds	r3, #1
 800a76c:	60fb      	str	r3, [r7, #12]
 800a76e:	893b      	ldrh	r3, [r7, #8]
 800a770:	68fa      	ldr	r2, [r7, #12]
 800a772:	429a      	cmp	r2, r3
 800a774:	dbf5      	blt.n	800a762 <CoAP_NeededMem4PackOptions+0x80>

		if (pOption->next == NULL)
 800a776:	693b      	ldr	r3, [r7, #16]
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	2b00      	cmp	r3, #0
 800a77c:	d003      	beq.n	800a786 <CoAP_NeededMem4PackOptions+0xa4>
			break;
		pOption = pOption->next;
 800a77e:	693b      	ldr	r3, [r7, #16]
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	613b      	str	r3, [r7, #16]
	do {
 800a784:	e7c0      	b.n	800a708 <CoAP_NeededMem4PackOptions+0x26>
			break;
 800a786:	bf00      	nop
	} while (1);

	return offset;
 800a788:	8afb      	ldrh	r3, [r7, #22]
}
 800a78a:	4618      	mov	r0, r3
 800a78c:	371c      	adds	r7, #28
 800a78e:	46bd      	mov	sp, r7
 800a790:	bc80      	pop	{r7}
 800a792:	4770      	bx	lr

0800a794 <parse_OptionsFromRaw>:

CoAP_Result_t _rom parse_OptionsFromRaw(uint8_t* srcArr, uint16_t srcLength, uint8_t** pPayloadBeginInSrc, CoAP_option_t** pOptionsListBegin) {
 800a794:	b580      	push	{r7, lr}
 800a796:	b088      	sub	sp, #32
 800a798:	af00      	add	r7, sp, #0
 800a79a:	60f8      	str	r0, [r7, #12]
 800a79c:	607a      	str	r2, [r7, #4]
 800a79e:	603b      	str	r3, [r7, #0]
 800a7a0:	460b      	mov	r3, r1
 800a7a2:	817b      	strh	r3, [r7, #10]
	//srcArr points to the beginning of Option section @ raw datagram byte array
	//length includes payload marker & payload (if any)
	uint16_t offset = 0;
 800a7a4:	2300      	movs	r3, #0
 800a7a6:	83fb      	strh	r3, [r7, #30]
	*pPayloadBeginInSrc = NULL;
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	2200      	movs	r2, #0
 800a7ac:	601a      	str	r2, [r3, #0]

	if (*pOptionsListBegin != NULL) {
 800a7ae:	683b      	ldr	r3, [r7, #0]
 800a7b0:	681b      	ldr	r3, [r3, #0]
 800a7b2:	2b00      	cmp	r3, #0
 800a7b4:	d008      	beq.n	800a7c8 <parse_OptionsFromRaw+0x34>
		INFO("- Option list argument must be an empty list!\r\n");
 800a7b6:	4975      	ldr	r1, [pc, #468]	; (800a98c <parse_OptionsFromRaw+0x1f8>)
 800a7b8:	4875      	ldr	r0, [pc, #468]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a7ba:	f020 fb7b 	bl	802aeb4 <siprintf>
 800a7be:	4874      	ldr	r0, [pc, #464]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a7c0:	f7fd fd1a 	bl	80081f8 <hal_debug_puts>
		return COAP_ERR_ARGUMENT;
 800a7c4:	230a      	movs	r3, #10
 800a7c6:	e0dd      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
	}

	if (srcLength == 0) {
 800a7c8:	897b      	ldrh	r3, [r7, #10]
 800a7ca:	2b00      	cmp	r3, #0
 800a7cc:	d101      	bne.n	800a7d2 <parse_OptionsFromRaw+0x3e>
		return COAP_OK;
 800a7ce:	2300      	movs	r3, #0
 800a7d0:	e0d8      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
	}

	uint16_t lastOptionNumber = 0; // used for delta calculations of optionnumbers
 800a7d2:	2300      	movs	r3, #0
 800a7d4:	83bb      	strh	r3, [r7, #28]

	while (offset < srcLength) {
 800a7d6:	e0cf      	b.n	800a978 <parse_OptionsFromRaw+0x1e4>
		if (srcArr[offset] == OPTION_PAYLOAD_MARKER) // Payload Marker
 800a7d8:	8bfb      	ldrh	r3, [r7, #30]
 800a7da:	68fa      	ldr	r2, [r7, #12]
 800a7dc:	4413      	add	r3, r2
 800a7de:	781b      	ldrb	r3, [r3, #0]
 800a7e0:	2bff      	cmp	r3, #255	; 0xff
 800a7e2:	d115      	bne.n	800a810 <parse_OptionsFromRaw+0x7c>
		{
			if ((srcLength - offset) < 2) {
 800a7e4:	897a      	ldrh	r2, [r7, #10]
 800a7e6:	8bfb      	ldrh	r3, [r7, #30]
 800a7e8:	1ad3      	subs	r3, r2, r3
 800a7ea:	2b01      	cmp	r3, #1
 800a7ec:	dc08      	bgt.n	800a800 <parse_OptionsFromRaw+0x6c>
				INFO("- at least one byte payload must follow to the payload marker\r\n");
 800a7ee:	4969      	ldr	r1, [pc, #420]	; (800a994 <parse_OptionsFromRaw+0x200>)
 800a7f0:	4867      	ldr	r0, [pc, #412]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a7f2:	f020 fb5f 	bl	802aeb4 <siprintf>
 800a7f6:	4866      	ldr	r0, [pc, #408]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a7f8:	f7fd fcfe 	bl	80081f8 <hal_debug_puts>
				return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 800a7fc:	2304      	movs	r3, #4
 800a7fe:	e0c1      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
			}

			*pPayloadBeginInSrc = &(srcArr[offset + 1]);
 800a800:	8bfb      	ldrh	r3, [r7, #30]
 800a802:	3301      	adds	r3, #1
 800a804:	68fa      	ldr	r2, [r7, #12]
 800a806:	441a      	add	r2, r3
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	601a      	str	r2, [r3, #0]
			return COAP_OK;
 800a80c:	2300      	movs	r3, #0
 800a80e:	e0b9      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
		} else {
			uint8_t currOptDeltaField = srcArr[offset] >> 4u;
 800a810:	8bfb      	ldrh	r3, [r7, #30]
 800a812:	68fa      	ldr	r2, [r7, #12]
 800a814:	4413      	add	r3, r2
 800a816:	781b      	ldrb	r3, [r3, #0]
 800a818:	091b      	lsrs	r3, r3, #4
 800a81a:	75fb      	strb	r3, [r7, #23]
			uint16_t currOptDelta = currOptDeltaField; // init with field data, but can be overwritten if field set to 13 or 14
 800a81c:	7dfb      	ldrb	r3, [r7, #23]
 800a81e:	837b      	strh	r3, [r7, #26]
			uint8_t currOptLengthField = srcArr[offset] & 0x0fu;
 800a820:	8bfb      	ldrh	r3, [r7, #30]
 800a822:	68fa      	ldr	r2, [r7, #12]
 800a824:	4413      	add	r3, r2
 800a826:	781b      	ldrb	r3, [r3, #0]
 800a828:	f003 030f 	and.w	r3, r3, #15
 800a82c:	75bb      	strb	r3, [r7, #22]
			uint16_t currOptLength = currOptLengthField; // init with field data, but can be overwritten if field set to 13 or 14
 800a82e:	7dbb      	ldrb	r3, [r7, #22]
 800a830:	833b      	strh	r3, [r7, #24]

			offset++;
 800a832:	8bfb      	ldrh	r3, [r7, #30]
 800a834:	3301      	adds	r3, #1
 800a836:	83fb      	strh	r3, [r7, #30]

			//Option Delta extended (if any)
			if (currOptDeltaField == 13) {
 800a838:	7dfb      	ldrb	r3, [r7, #23]
 800a83a:	2b0d      	cmp	r3, #13
 800a83c:	d10a      	bne.n	800a854 <parse_OptionsFromRaw+0xc0>
				// 13:  An 8-bit unsigned integer follows the initial byte and
				// indicates the Option Delta minus 13.
				currOptDelta = srcArr[offset] + 13;
 800a83e:	8bfb      	ldrh	r3, [r7, #30]
 800a840:	68fa      	ldr	r2, [r7, #12]
 800a842:	4413      	add	r3, r2
 800a844:	781b      	ldrb	r3, [r3, #0]
 800a846:	b29b      	uxth	r3, r3
 800a848:	330d      	adds	r3, #13
 800a84a:	837b      	strh	r3, [r7, #26]
				offset++;
 800a84c:	8bfb      	ldrh	r3, [r7, #30]
 800a84e:	3301      	adds	r3, #1
 800a850:	83fb      	strh	r3, [r7, #30]
 800a852:	e024      	b.n	800a89e <parse_OptionsFromRaw+0x10a>
			} else if (currOptDeltaField == 14) {
 800a854:	7dfb      	ldrb	r3, [r7, #23]
 800a856:	2b0e      	cmp	r3, #14
 800a858:	d115      	bne.n	800a886 <parse_OptionsFromRaw+0xf2>
				// 14:  A 16-bit unsigned integer in network byte order follows the
				// initial byte and indicates the Option Delta minus 269.
				currOptDelta = ((((uint16_t) srcArr[offset]) << 8u) | ((uint16_t) srcArr[offset + 1])) + 269u;
 800a85a:	8bfb      	ldrh	r3, [r7, #30]
 800a85c:	68fa      	ldr	r2, [r7, #12]
 800a85e:	4413      	add	r3, r2
 800a860:	781b      	ldrb	r3, [r3, #0]
 800a862:	021b      	lsls	r3, r3, #8
 800a864:	b21a      	sxth	r2, r3
 800a866:	8bfb      	ldrh	r3, [r7, #30]
 800a868:	3301      	adds	r3, #1
 800a86a:	68f9      	ldr	r1, [r7, #12]
 800a86c:	440b      	add	r3, r1
 800a86e:	781b      	ldrb	r3, [r3, #0]
 800a870:	b21b      	sxth	r3, r3
 800a872:	4313      	orrs	r3, r2
 800a874:	b21b      	sxth	r3, r3
 800a876:	b29b      	uxth	r3, r3
 800a878:	f203 130d 	addw	r3, r3, #269	; 0x10d
 800a87c:	837b      	strh	r3, [r7, #26]
				offset += 2;
 800a87e:	8bfb      	ldrh	r3, [r7, #30]
 800a880:	3302      	adds	r3, #2
 800a882:	83fb      	strh	r3, [r7, #30]
 800a884:	e00b      	b.n	800a89e <parse_OptionsFromRaw+0x10a>
			} else if (currOptDeltaField == 15) {
 800a886:	7dfb      	ldrb	r3, [r7, #23]
 800a888:	2b0f      	cmp	r3, #15
 800a88a:	d108      	bne.n	800a89e <parse_OptionsFromRaw+0x10a>
				// 15:  Reserved for the Payload Marker.  If the field is set to this
				// value but the entire byte is not the payload marker, this MUST
				// be processed as a message format error.
				// NOTE: we checked for OPTION_PAYLOAD_MARKER before!
				INFO("- currOptDeltaField == 15 is not allowed(1)\r\n");
 800a88c:	4942      	ldr	r1, [pc, #264]	; (800a998 <parse_OptionsFromRaw+0x204>)
 800a88e:	4840      	ldr	r0, [pc, #256]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a890:	f020 fb10 	bl	802aeb4 <siprintf>
 800a894:	483e      	ldr	r0, [pc, #248]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a896:	f7fd fcaf 	bl	80081f8 <hal_debug_puts>
				return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 800a89a:	2304      	movs	r3, #4
 800a89c:	e072      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
			}

			//Option Length extended (if any)
			if (currOptLengthField == 13) {
 800a89e:	7dbb      	ldrb	r3, [r7, #22]
 800a8a0:	2b0d      	cmp	r3, #13
 800a8a2:	d10a      	bne.n	800a8ba <parse_OptionsFromRaw+0x126>
				currOptLength = srcArr[offset] + 13;
 800a8a4:	8bfb      	ldrh	r3, [r7, #30]
 800a8a6:	68fa      	ldr	r2, [r7, #12]
 800a8a8:	4413      	add	r3, r2
 800a8aa:	781b      	ldrb	r3, [r3, #0]
 800a8ac:	b29b      	uxth	r3, r3
 800a8ae:	330d      	adds	r3, #13
 800a8b0:	833b      	strh	r3, [r7, #24]
				offset++;
 800a8b2:	8bfb      	ldrh	r3, [r7, #30]
 800a8b4:	3301      	adds	r3, #1
 800a8b6:	83fb      	strh	r3, [r7, #30]
 800a8b8:	e02a      	b.n	800a910 <parse_OptionsFromRaw+0x17c>
			} else if (currOptLengthField == 14) {
 800a8ba:	7dbb      	ldrb	r3, [r7, #22]
 800a8bc:	2b0e      	cmp	r3, #14
 800a8be:	d115      	bne.n	800a8ec <parse_OptionsFromRaw+0x158>
				currOptLength = ((((uint16_t) srcArr[offset]) << 8u) | ((uint16_t) srcArr[offset + 1])) + 269u;
 800a8c0:	8bfb      	ldrh	r3, [r7, #30]
 800a8c2:	68fa      	ldr	r2, [r7, #12]
 800a8c4:	4413      	add	r3, r2
 800a8c6:	781b      	ldrb	r3, [r3, #0]
 800a8c8:	021b      	lsls	r3, r3, #8
 800a8ca:	b21a      	sxth	r2, r3
 800a8cc:	8bfb      	ldrh	r3, [r7, #30]
 800a8ce:	3301      	adds	r3, #1
 800a8d0:	68f9      	ldr	r1, [r7, #12]
 800a8d2:	440b      	add	r3, r1
 800a8d4:	781b      	ldrb	r3, [r3, #0]
 800a8d6:	b21b      	sxth	r3, r3
 800a8d8:	4313      	orrs	r3, r2
 800a8da:	b21b      	sxth	r3, r3
 800a8dc:	b29b      	uxth	r3, r3
 800a8de:	f203 130d 	addw	r3, r3, #269	; 0x10d
 800a8e2:	833b      	strh	r3, [r7, #24]
				offset += 2;
 800a8e4:	8bfb      	ldrh	r3, [r7, #30]
 800a8e6:	3302      	adds	r3, #2
 800a8e8:	83fb      	strh	r3, [r7, #30]
 800a8ea:	e011      	b.n	800a910 <parse_OptionsFromRaw+0x17c>
			} else if (currOptLengthField == 15) {
 800a8ec:	7dbb      	ldrb	r3, [r7, #22]
 800a8ee:	2b0f      	cmp	r3, #15
 800a8f0:	d10e      	bne.n	800a910 <parse_OptionsFromRaw+0x17c>
				INFO("- currOptDeltaField == 15 is not allowed %x (2)\r\n", srcArr[offset - 1]);
 800a8f2:	8bfb      	ldrh	r3, [r7, #30]
 800a8f4:	3b01      	subs	r3, #1
 800a8f6:	68fa      	ldr	r2, [r7, #12]
 800a8f8:	4413      	add	r3, r2
 800a8fa:	781b      	ldrb	r3, [r3, #0]
 800a8fc:	461a      	mov	r2, r3
 800a8fe:	4927      	ldr	r1, [pc, #156]	; (800a99c <parse_OptionsFromRaw+0x208>)
 800a900:	4823      	ldr	r0, [pc, #140]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a902:	f020 fad7 	bl	802aeb4 <siprintf>
 800a906:	4822      	ldr	r0, [pc, #136]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a908:	f7fd fc76 	bl	80081f8 <hal_debug_puts>
				return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 800a90c:	2304      	movs	r3, #4
 800a90e:	e039      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
			}

			if (currOptLength > MAX_OPTION_VALUE_SIZE) {
 800a910:	8b3b      	ldrh	r3, [r7, #24]
 800a912:	f240 420a 	movw	r2, #1034	; 0x40a
 800a916:	4293      	cmp	r3, r2
 800a918:	d908      	bls.n	800a92c <parse_OptionsFromRaw+0x198>
				INFO("- Option too long\r\n");
 800a91a:	4921      	ldr	r1, [pc, #132]	; (800a9a0 <parse_OptionsFromRaw+0x20c>)
 800a91c:	481c      	ldr	r0, [pc, #112]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a91e:	f020 fac9 	bl	802aeb4 <siprintf>
 800a922:	481b      	ldr	r0, [pc, #108]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a924:	f7fd fc68 	bl	80081f8 <hal_debug_puts>
				return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 800a928:	2304      	movs	r3, #4
 800a92a:	e02b      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
			}
			if ((srcLength - offset) < currOptLength) {
 800a92c:	897a      	ldrh	r2, [r7, #10]
 800a92e:	8bfb      	ldrh	r3, [r7, #30]
 800a930:	1ad2      	subs	r2, r2, r3
 800a932:	8b3b      	ldrh	r3, [r7, #24]
 800a934:	429a      	cmp	r2, r3
 800a936:	da08      	bge.n	800a94a <parse_OptionsFromRaw+0x1b6>
				INFO("- Option too short\r\n");
 800a938:	491a      	ldr	r1, [pc, #104]	; (800a9a4 <parse_OptionsFromRaw+0x210>)
 800a93a:	4815      	ldr	r0, [pc, #84]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a93c:	f020 faba 	bl	802aeb4 <siprintf>
 800a940:	4813      	ldr	r0, [pc, #76]	; (800a990 <parse_OptionsFromRaw+0x1fc>)
 800a942:	f7fd fc59 	bl	80081f8 <hal_debug_puts>
				return COAP_PARSE_MESSAGE_FORMAT_ERROR;
 800a946:	2304      	movs	r3, #4
 800a948:	e01c      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>
			}

			lastOptionNumber = currOptDelta + lastOptionNumber;
 800a94a:	8b7a      	ldrh	r2, [r7, #26]
 800a94c:	8bbb      	ldrh	r3, [r7, #28]
 800a94e:	4413      	add	r3, r2
 800a950:	83bb      	strh	r3, [r7, #28]

			//add this option to ordered linked list
			CoAP_Result_t Res = CoAP_AppendOptionToList(pOptionsListBegin, lastOptionNumber, &(srcArr[offset]), currOptLength);
 800a952:	8bfb      	ldrh	r3, [r7, #30]
 800a954:	68fa      	ldr	r2, [r7, #12]
 800a956:	441a      	add	r2, r3
 800a958:	8b3b      	ldrh	r3, [r7, #24]
 800a95a:	8bb9      	ldrh	r1, [r7, #28]
 800a95c:	6838      	ldr	r0, [r7, #0]
 800a95e:	f000 f933 	bl	800abc8 <CoAP_AppendOptionToList>
 800a962:	4603      	mov	r3, r0
 800a964:	757b      	strb	r3, [r7, #21]
			if (Res != COAP_OK)
 800a966:	7d7b      	ldrb	r3, [r7, #21]
 800a968:	2b00      	cmp	r3, #0
 800a96a:	d001      	beq.n	800a970 <parse_OptionsFromRaw+0x1dc>
				return Res;
 800a96c:	7d7b      	ldrb	r3, [r7, #21]
 800a96e:	e009      	b.n	800a984 <parse_OptionsFromRaw+0x1f0>

			offset += currOptLength;
 800a970:	8bfa      	ldrh	r2, [r7, #30]
 800a972:	8b3b      	ldrh	r3, [r7, #24]
 800a974:	4413      	add	r3, r2
 800a976:	83fb      	strh	r3, [r7, #30]
	while (offset < srcLength) {
 800a978:	8bfa      	ldrh	r2, [r7, #30]
 800a97a:	897b      	ldrh	r3, [r7, #10]
 800a97c:	429a      	cmp	r2, r3
 800a97e:	f4ff af2b 	bcc.w	800a7d8 <parse_OptionsFromRaw+0x44>
		}
	}

	return COAP_OK;
 800a982:	2300      	movs	r3, #0
}
 800a984:	4618      	mov	r0, r3
 800a986:	3720      	adds	r7, #32
 800a988:	46bd      	mov	sp, r7
 800a98a:	bd80      	pop	{r7, pc}
 800a98c:	0802d498 	.word	0x0802d498
 800a990:	20000b54 	.word	0x20000b54
 800a994:	0802d4c8 	.word	0x0802d4c8
 800a998:	0802d508 	.word	0x0802d508
 800a99c:	0802d538 	.word	0x0802d538
 800a9a0:	0802d56c 	.word	0x0802d56c
 800a9a4:	0802d580 	.word	0x0802d580

0800a9a8 <CoAP_RemoveOptionFromList>:

CoAP_Result_t _rom CoAP_RemoveOptionFromList(CoAP_option_t** pOptionListStart, CoAP_option_t* pOptionToRemove) {
 800a9a8:	b580      	push	{r7, lr}
 800a9aa:	b084      	sub	sp, #16
 800a9ac:	af00      	add	r7, sp, #0
 800a9ae:	6078      	str	r0, [r7, #4]
 800a9b0:	6039      	str	r1, [r7, #0]
	CoAP_option_t* currP;
	CoAP_option_t* prevP;

	// For 1st node, indicate there is no previous.
	prevP = NULL;
 800a9b2:	2300      	movs	r3, #0
 800a9b4:	60bb      	str	r3, [r7, #8]

	//Visit each node, maintaining a pointer to
	//the previous node we just visited.
	for (currP = *pOptionListStart; currP != NULL;
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	681b      	ldr	r3, [r3, #0]
 800a9ba:	60fb      	str	r3, [r7, #12]
 800a9bc:	e01a      	b.n	800a9f4 <CoAP_RemoveOptionFromList+0x4c>
			prevP = currP, currP = currP->next) {

		if (currP == pOptionToRemove) {  // Found it.
 800a9be:	68fa      	ldr	r2, [r7, #12]
 800a9c0:	683b      	ldr	r3, [r7, #0]
 800a9c2:	429a      	cmp	r2, r3
 800a9c4:	d111      	bne.n	800a9ea <CoAP_RemoveOptionFromList+0x42>
			if (prevP == NULL) {
 800a9c6:	68bb      	ldr	r3, [r7, #8]
 800a9c8:	2b00      	cmp	r3, #0
 800a9ca:	d104      	bne.n	800a9d6 <CoAP_RemoveOptionFromList+0x2e>
				//Fix beginning pointer.
				*pOptionListStart = currP->next;
 800a9cc:	68fb      	ldr	r3, [r7, #12]
 800a9ce:	681a      	ldr	r2, [r3, #0]
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	601a      	str	r2, [r3, #0]
 800a9d4:	e003      	b.n	800a9de <CoAP_RemoveOptionFromList+0x36>
			} else {
				//Fix previous node's next to
				//skip over the removed node.
				prevP->next = currP->next;
 800a9d6:	68fb      	ldr	r3, [r7, #12]
 800a9d8:	681a      	ldr	r2, [r3, #0]
 800a9da:	68bb      	ldr	r3, [r7, #8]
 800a9dc:	601a      	str	r2, [r3, #0]
			}

			// Deallocate the node.
			CoAP.api.free((void*) currP);
 800a9de:	4b09      	ldr	r3, [pc, #36]	; (800aa04 <CoAP_RemoveOptionFromList+0x5c>)
 800a9e0:	691b      	ldr	r3, [r3, #16]
 800a9e2:	68f8      	ldr	r0, [r7, #12]
 800a9e4:	4798      	blx	r3

			//Done searching.
			return COAP_OK;
 800a9e6:	2300      	movs	r3, #0
 800a9e8:	e008      	b.n	800a9fc <CoAP_RemoveOptionFromList+0x54>
			prevP = currP, currP = currP->next) {
 800a9ea:	68fb      	ldr	r3, [r7, #12]
 800a9ec:	60bb      	str	r3, [r7, #8]
 800a9ee:	68fb      	ldr	r3, [r7, #12]
 800a9f0:	681b      	ldr	r3, [r3, #0]
 800a9f2:	60fb      	str	r3, [r7, #12]
	for (currP = *pOptionListStart; currP != NULL;
 800a9f4:	68fb      	ldr	r3, [r7, #12]
 800a9f6:	2b00      	cmp	r3, #0
 800a9f8:	d1e1      	bne.n	800a9be <CoAP_RemoveOptionFromList+0x16>
		}
	}
	return COAP_OK;
 800a9fa:	2300      	movs	r3, #0
}
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	3710      	adds	r7, #16
 800aa00:	46bd      	mov	sp, r7
 800aa02:	bd80      	pop	{r7, pc}
 800aa04:	20000b0c 	.word	0x20000b0c

0800aa08 <append_OptionToListEnd>:

static CoAP_Result_t _rom append_OptionToListEnd(CoAP_option_t** pOptionsListBegin, uint16_t OptNumber, const uint8_t* buf, uint16_t length) {
 800aa08:	b580      	push	{r7, lr}
 800aa0a:	b086      	sub	sp, #24
 800aa0c:	af00      	add	r7, sp, #0
 800aa0e:	60f8      	str	r0, [r7, #12]
 800aa10:	607a      	str	r2, [r7, #4]
 800aa12:	461a      	mov	r2, r3
 800aa14:	460b      	mov	r3, r1
 800aa16:	817b      	strh	r3, [r7, #10]
 800aa18:	4613      	mov	r3, r2
 800aa1a:	813b      	strh	r3, [r7, #8]
	if (*pOptionsListBegin == NULL) //List empty? create new first element
 800aa1c:	68fb      	ldr	r3, [r7, #12]
 800aa1e:	681b      	ldr	r3, [r3, #0]
 800aa20:	2b00      	cmp	r3, #0
 800aa22:	d12e      	bne.n	800aa82 <append_OptionToListEnd+0x7a>
	{
		*pOptionsListBegin = (CoAP_option_t*) CoAP.api.malloc(sizeof(CoAP_option_t) + length);
 800aa24:	4b32      	ldr	r3, [pc, #200]	; (800aaf0 <append_OptionToListEnd+0xe8>)
 800aa26:	68db      	ldr	r3, [r3, #12]
 800aa28:	893a      	ldrh	r2, [r7, #8]
 800aa2a:	320c      	adds	r2, #12
 800aa2c:	4610      	mov	r0, r2
 800aa2e:	4798      	blx	r3
 800aa30:	4602      	mov	r2, r0
 800aa32:	68fb      	ldr	r3, [r7, #12]
 800aa34:	601a      	str	r2, [r3, #0]
		if (*pOptionsListBegin == NULL)
 800aa36:	68fb      	ldr	r3, [r7, #12]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	2b00      	cmp	r3, #0
 800aa3c:	d101      	bne.n	800aa42 <append_OptionToListEnd+0x3a>
			return COAP_ERR_OUT_OF_MEMORY; //could not alloc enough mem
 800aa3e:	230d      	movs	r3, #13
 800aa40:	e052      	b.n	800aae8 <append_OptionToListEnd+0xe0>

		(*pOptionsListBegin)->next = NULL;
 800aa42:	68fb      	ldr	r3, [r7, #12]
 800aa44:	681b      	ldr	r3, [r3, #0]
 800aa46:	2200      	movs	r2, #0
 800aa48:	601a      	str	r2, [r3, #0]

		//fill data
		(*pOptionsListBegin)->Length = length;
 800aa4a:	68fb      	ldr	r3, [r7, #12]
 800aa4c:	681b      	ldr	r3, [r3, #0]
 800aa4e:	893a      	ldrh	r2, [r7, #8]
 800aa50:	80da      	strh	r2, [r3, #6]
		(*pOptionsListBegin)->Number = OptNumber;
 800aa52:	68fb      	ldr	r3, [r7, #12]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	897a      	ldrh	r2, [r7, #10]
 800aa58:	809a      	strh	r2, [r3, #4]
		(*pOptionsListBegin)->Value = ((uint8_t*) (*pOptionsListBegin)) + sizeof(CoAP_option_t);
 800aa5a:	68fb      	ldr	r3, [r7, #12]
 800aa5c:	681a      	ldr	r2, [r3, #0]
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	681b      	ldr	r3, [r3, #0]
 800aa62:	320c      	adds	r2, #12
 800aa64:	609a      	str	r2, [r3, #8]
		if(NULL != ((*pOptionsListBegin)->Value))
 800aa66:	68fb      	ldr	r3, [r7, #12]
 800aa68:	681b      	ldr	r3, [r3, #0]
 800aa6a:	689b      	ldr	r3, [r3, #8]
 800aa6c:	2b00      	cmp	r3, #0
 800aa6e:	d03a      	beq.n	800aae6 <append_OptionToListEnd+0xde>
		{
		    coap_memcpy((void*) ((*pOptionsListBegin)->Value), (const void*) buf, length);
 800aa70:	68fb      	ldr	r3, [r7, #12]
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	689b      	ldr	r3, [r3, #8]
 800aa76:	893a      	ldrh	r2, [r7, #8]
 800aa78:	6879      	ldr	r1, [r7, #4]
 800aa7a:	4618      	mov	r0, r3
 800aa7c:	f020 fbdb 	bl	802b236 <memcpy>
 800aa80:	e031      	b.n	800aae6 <append_OptionToListEnd+0xde>
		}
	} else //append new element at end
	{
		CoAP_option_t* pOption = *pOptionsListBegin;
 800aa82:	68fb      	ldr	r3, [r7, #12]
 800aa84:	681b      	ldr	r3, [r3, #0]
 800aa86:	617b      	str	r3, [r7, #20]
		while (pOption->next != NULL)
 800aa88:	e002      	b.n	800aa90 <append_OptionToListEnd+0x88>
			pOption = pOption->next;
 800aa8a:	697b      	ldr	r3, [r7, #20]
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	617b      	str	r3, [r7, #20]
		while (pOption->next != NULL)
 800aa90:	697b      	ldr	r3, [r7, #20]
 800aa92:	681b      	ldr	r3, [r3, #0]
 800aa94:	2b00      	cmp	r3, #0
 800aa96:	d1f8      	bne.n	800aa8a <append_OptionToListEnd+0x82>

		pOption->next = (CoAP_option_t*) CoAP.api.malloc(sizeof(CoAP_option_t) + length);
 800aa98:	4b15      	ldr	r3, [pc, #84]	; (800aaf0 <append_OptionToListEnd+0xe8>)
 800aa9a:	68db      	ldr	r3, [r3, #12]
 800aa9c:	893a      	ldrh	r2, [r7, #8]
 800aa9e:	320c      	adds	r2, #12
 800aaa0:	4610      	mov	r0, r2
 800aaa2:	4798      	blx	r3
 800aaa4:	4602      	mov	r2, r0
 800aaa6:	697b      	ldr	r3, [r7, #20]
 800aaa8:	601a      	str	r2, [r3, #0]
		if (pOption->next == NULL)
 800aaaa:	697b      	ldr	r3, [r7, #20]
 800aaac:	681b      	ldr	r3, [r3, #0]
 800aaae:	2b00      	cmp	r3, #0
 800aab0:	d101      	bne.n	800aab6 <append_OptionToListEnd+0xae>
			return COAP_ERR_OUT_OF_MEMORY; //could not alloc enough mem
 800aab2:	230d      	movs	r3, #13
 800aab4:	e018      	b.n	800aae8 <append_OptionToListEnd+0xe0>

		pOption = pOption->next;
 800aab6:	697b      	ldr	r3, [r7, #20]
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	617b      	str	r3, [r7, #20]
		pOption->next = NULL;
 800aabc:	697b      	ldr	r3, [r7, #20]
 800aabe:	2200      	movs	r2, #0
 800aac0:	601a      	str	r2, [r3, #0]

		//fill data
		pOption->Length = length;
 800aac2:	697b      	ldr	r3, [r7, #20]
 800aac4:	893a      	ldrh	r2, [r7, #8]
 800aac6:	80da      	strh	r2, [r3, #6]
		pOption->Number = OptNumber;
 800aac8:	697b      	ldr	r3, [r7, #20]
 800aaca:	897a      	ldrh	r2, [r7, #10]
 800aacc:	809a      	strh	r2, [r3, #4]
		pOption->Value = ((uint8_t*) pOption) + sizeof(CoAP_option_t);
 800aace:	697b      	ldr	r3, [r7, #20]
 800aad0:	f103 020c 	add.w	r2, r3, #12
 800aad4:	697b      	ldr	r3, [r7, #20]
 800aad6:	609a      	str	r2, [r3, #8]
		coap_memcpy((void*) (pOption->Value), (const void*) buf, length);
 800aad8:	697b      	ldr	r3, [r7, #20]
 800aada:	689b      	ldr	r3, [r3, #8]
 800aadc:	893a      	ldrh	r2, [r7, #8]
 800aade:	6879      	ldr	r1, [r7, #4]
 800aae0:	4618      	mov	r0, r3
 800aae2:	f020 fba8 	bl	802b236 <memcpy>
	}
	return COAP_OK;
 800aae6:	2300      	movs	r3, #0
}
 800aae8:	4618      	mov	r0, r3
 800aaea:	3718      	adds	r7, #24
 800aaec:	46bd      	mov	sp, r7
 800aaee:	bd80      	pop	{r7, pc}
 800aaf0:	20000b0c 	.word	0x20000b0c

0800aaf4 <CoAP_AppendUintOptionToList>:

CoAP_Result_t _rom CoAP_AddOption(CoAP_Message_t* pMsg, uint16_t OptNumber, uint8_t* buf, uint16_t length) {
	return CoAP_AppendOptionToList(&pMsg->pOptionsList, OptNumber, buf, length);
}

CoAP_Result_t _rom CoAP_AppendUintOptionToList(CoAP_option_t** pOptionsListBegin, uint16_t OptNumber, uint32_t val) {
 800aaf4:	b580      	push	{r7, lr}
 800aaf6:	b086      	sub	sp, #24
 800aaf8:	af00      	add	r7, sp, #0
 800aafa:	60f8      	str	r0, [r7, #12]
 800aafc:	460b      	mov	r3, r1
 800aafe:	607a      	str	r2, [r7, #4]
 800ab00:	817b      	strh	r3, [r7, #10]
	uint8_t wBuf[4];

	if(val==0)
 800ab02:	687b      	ldr	r3, [r7, #4]
 800ab04:	2b00      	cmp	r3, #0
 800ab06:	d108      	bne.n	800ab1a <CoAP_AppendUintOptionToList+0x26>
	{
		return CoAP_AppendOptionToList(pOptionsListBegin, OptNumber ,wBuf, 0);
 800ab08:	f107 0214 	add.w	r2, r7, #20
 800ab0c:	8979      	ldrh	r1, [r7, #10]
 800ab0e:	2300      	movs	r3, #0
 800ab10:	68f8      	ldr	r0, [r7, #12]
 800ab12:	f000 f859 	bl	800abc8 <CoAP_AppendOptionToList>
 800ab16:	4603      	mov	r3, r0
 800ab18:	e051      	b.n	800abbe <CoAP_AppendUintOptionToList+0xca>
	}

	if(val <= 0xff)
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	2bff      	cmp	r3, #255	; 0xff
 800ab1e:	d80b      	bhi.n	800ab38 <CoAP_AppendUintOptionToList+0x44>
	{
		wBuf[0]=(uint8_t)val;
 800ab20:	687b      	ldr	r3, [r7, #4]
 800ab22:	b2db      	uxtb	r3, r3
 800ab24:	753b      	strb	r3, [r7, #20]
		return CoAP_AppendOptionToList(pOptionsListBegin, OptNumber ,wBuf, 1);
 800ab26:	f107 0214 	add.w	r2, r7, #20
 800ab2a:	8979      	ldrh	r1, [r7, #10]
 800ab2c:	2301      	movs	r3, #1
 800ab2e:	68f8      	ldr	r0, [r7, #12]
 800ab30:	f000 f84a 	bl	800abc8 <CoAP_AppendOptionToList>
 800ab34:	4603      	mov	r3, r0
 800ab36:	e042      	b.n	800abbe <CoAP_AppendUintOptionToList+0xca>
	}

	if(val <= 0xffff)
 800ab38:	687b      	ldr	r3, [r7, #4]
 800ab3a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ab3e:	d20f      	bcs.n	800ab60 <CoAP_AppendUintOptionToList+0x6c>
	{
		wBuf[0]=(uint8_t)(val>>8u);
 800ab40:	687b      	ldr	r3, [r7, #4]
 800ab42:	0a1b      	lsrs	r3, r3, #8
 800ab44:	b2db      	uxtb	r3, r3
 800ab46:	753b      	strb	r3, [r7, #20]
		wBuf[1]=(uint8_t)(val & 0xffu);
 800ab48:	687b      	ldr	r3, [r7, #4]
 800ab4a:	b2db      	uxtb	r3, r3
 800ab4c:	757b      	strb	r3, [r7, #21]
		return CoAP_AppendOptionToList(pOptionsListBegin, OptNumber ,wBuf, 2);
 800ab4e:	f107 0214 	add.w	r2, r7, #20
 800ab52:	8979      	ldrh	r1, [r7, #10]
 800ab54:	2302      	movs	r3, #2
 800ab56:	68f8      	ldr	r0, [r7, #12]
 800ab58:	f000 f836 	bl	800abc8 <CoAP_AppendOptionToList>
 800ab5c:	4603      	mov	r3, r0
 800ab5e:	e02e      	b.n	800abbe <CoAP_AppendUintOptionToList+0xca>
	}

	if(val <= 0xffffff)
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800ab66:	d213      	bcs.n	800ab90 <CoAP_AppendUintOptionToList+0x9c>
	{
		wBuf[0]=(uint8_t)(val>>16u);
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	0c1b      	lsrs	r3, r3, #16
 800ab6c:	b2db      	uxtb	r3, r3
 800ab6e:	753b      	strb	r3, [r7, #20]
		wBuf[1]=(uint8_t)((val>>8u) & 0xffu);
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	0a1b      	lsrs	r3, r3, #8
 800ab74:	b2db      	uxtb	r3, r3
 800ab76:	757b      	strb	r3, [r7, #21]
		wBuf[2]=(uint8_t)(val & 0xffu);
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	b2db      	uxtb	r3, r3
 800ab7c:	75bb      	strb	r3, [r7, #22]
		return CoAP_AppendOptionToList(pOptionsListBegin, OptNumber ,wBuf, 3);
 800ab7e:	f107 0214 	add.w	r2, r7, #20
 800ab82:	8979      	ldrh	r1, [r7, #10]
 800ab84:	2303      	movs	r3, #3
 800ab86:	68f8      	ldr	r0, [r7, #12]
 800ab88:	f000 f81e 	bl	800abc8 <CoAP_AppendOptionToList>
 800ab8c:	4603      	mov	r3, r0
 800ab8e:	e016      	b.n	800abbe <CoAP_AppendUintOptionToList+0xca>
	}

	wBuf[0]=(uint8_t)(val>>24u);
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	0e1b      	lsrs	r3, r3, #24
 800ab94:	b2db      	uxtb	r3, r3
 800ab96:	753b      	strb	r3, [r7, #20]
	wBuf[1]=(uint8_t)((val>>16u) & 0xffu);
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	0c1b      	lsrs	r3, r3, #16
 800ab9c:	b2db      	uxtb	r3, r3
 800ab9e:	757b      	strb	r3, [r7, #21]
	wBuf[2]=(uint8_t)((val>>8u) & 0xffu);
 800aba0:	687b      	ldr	r3, [r7, #4]
 800aba2:	0a1b      	lsrs	r3, r3, #8
 800aba4:	b2db      	uxtb	r3, r3
 800aba6:	75bb      	strb	r3, [r7, #22]
	wBuf[3]=(uint8_t)(val & 0xffu);
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	b2db      	uxtb	r3, r3
 800abac:	75fb      	strb	r3, [r7, #23]
	return CoAP_AppendOptionToList(pOptionsListBegin, OptNumber ,wBuf, 4);
 800abae:	f107 0214 	add.w	r2, r7, #20
 800abb2:	8979      	ldrh	r1, [r7, #10]
 800abb4:	2304      	movs	r3, #4
 800abb6:	68f8      	ldr	r0, [r7, #12]
 800abb8:	f000 f806 	bl	800abc8 <CoAP_AppendOptionToList>
 800abbc:	4603      	mov	r3, r0
}
 800abbe:	4618      	mov	r0, r3
 800abc0:	3718      	adds	r7, #24
 800abc2:	46bd      	mov	sp, r7
 800abc4:	bd80      	pop	{r7, pc}
	...

0800abc8 <CoAP_AppendOptionToList>:
}

// this function adds a new option to linked list of options starting at pOptionsListBegin
// on demand the list gets reordered so that it's sorted ascending by option number (CoAP requirement)
// copies given buffer to option local buffer
CoAP_Result_t _rom CoAP_AppendOptionToList(CoAP_option_t** pOptionsListBegin, uint16_t OptNumber, const uint8_t* buf, uint16_t length) {
 800abc8:	b580      	push	{r7, lr}
 800abca:	b088      	sub	sp, #32
 800abcc:	af00      	add	r7, sp, #0
 800abce:	60f8      	str	r0, [r7, #12]
 800abd0:	607a      	str	r2, [r7, #4]
 800abd2:	461a      	mov	r2, r3
 800abd4:	460b      	mov	r3, r1
 800abd6:	817b      	strh	r3, [r7, #10]
 800abd8:	4613      	mov	r3, r2
 800abda:	813b      	strh	r3, [r7, #8]
	if (*pOptionsListBegin == NULL) //List empty? create 1st option in list
 800abdc:	68fb      	ldr	r3, [r7, #12]
 800abde:	681b      	ldr	r3, [r3, #0]
 800abe0:	2b00      	cmp	r3, #0
 800abe2:	d107      	bne.n	800abf4 <CoAP_AppendOptionToList+0x2c>
	{
		return append_OptionToListEnd(pOptionsListBegin, OptNumber, buf, length);
 800abe4:	893b      	ldrh	r3, [r7, #8]
 800abe6:	8979      	ldrh	r1, [r7, #10]
 800abe8:	687a      	ldr	r2, [r7, #4]
 800abea:	68f8      	ldr	r0, [r7, #12]
 800abec:	f7ff ff0c 	bl	800aa08 <append_OptionToListEnd>
 800abf0:	4603      	mov	r3, r0
 800abf2:	e079      	b.n	800ace8 <CoAP_AppendOptionToList+0x120>
	} else //try to insert the new element/option
	{
		CoAP_option_t* pOption = *pOptionsListBegin;
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	681b      	ldr	r3, [r3, #0]
 800abf8:	61fb      	str	r3, [r7, #28]
		while (pOption != NULL && pOption->Number <= OptNumber)
 800abfa:	e002      	b.n	800ac02 <CoAP_AppendOptionToList+0x3a>
			pOption = pOption->next;
 800abfc:	69fb      	ldr	r3, [r7, #28]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	61fb      	str	r3, [r7, #28]
		while (pOption != NULL && pOption->Number <= OptNumber)
 800ac02:	69fb      	ldr	r3, [r7, #28]
 800ac04:	2b00      	cmp	r3, #0
 800ac06:	d004      	beq.n	800ac12 <CoAP_AppendOptionToList+0x4a>
 800ac08:	69fb      	ldr	r3, [r7, #28]
 800ac0a:	889b      	ldrh	r3, [r3, #4]
 800ac0c:	897a      	ldrh	r2, [r7, #10]
 800ac0e:	429a      	cmp	r2, r3
 800ac10:	d2f4      	bcs.n	800abfc <CoAP_AppendOptionToList+0x34>

		//check reason of while end:

		//Case 1: pOption == NULL -> new number bigger than any present options numbers -> place it at end of list
		if (pOption == NULL) {
 800ac12:	69fb      	ldr	r3, [r7, #28]
 800ac14:	2b00      	cmp	r3, #0
 800ac16:	d107      	bne.n	800ac28 <CoAP_AppendOptionToList+0x60>
			return append_OptionToListEnd(pOptionsListBegin, OptNumber, buf, length);
 800ac18:	893b      	ldrh	r3, [r7, #8]
 800ac1a:	8979      	ldrh	r1, [r7, #10]
 800ac1c:	687a      	ldr	r2, [r7, #4]
 800ac1e:	68f8      	ldr	r0, [r7, #12]
 800ac20:	f7ff fef2 	bl	800aa08 <append_OptionToListEnd>
 800ac24:	4603      	mov	r3, r0
 800ac26:	e05f      	b.n	800ace8 <CoAP_AppendOptionToList+0x120>
		}

		//Case 2: new option has smallest number and is therefore the new start of list
		else if (pOption == *pOptionsListBegin) {
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	681b      	ldr	r3, [r3, #0]
 800ac2c:	69fa      	ldr	r2, [r7, #28]
 800ac2e:	429a      	cmp	r2, r3
 800ac30:	d129      	bne.n	800ac86 <CoAP_AppendOptionToList+0xbe>
			*pOptionsListBegin = (CoAP_option_t*) CoAP.api.malloc(sizeof(CoAP_option_t) + length);
 800ac32:	4b2f      	ldr	r3, [pc, #188]	; (800acf0 <CoAP_AppendOptionToList+0x128>)
 800ac34:	68db      	ldr	r3, [r3, #12]
 800ac36:	893a      	ldrh	r2, [r7, #8]
 800ac38:	320c      	adds	r2, #12
 800ac3a:	4610      	mov	r0, r2
 800ac3c:	4798      	blx	r3
 800ac3e:	4602      	mov	r2, r0
 800ac40:	68fb      	ldr	r3, [r7, #12]
 800ac42:	601a      	str	r2, [r3, #0]
			if (*pOptionsListBegin == NULL)
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	681b      	ldr	r3, [r3, #0]
 800ac48:	2b00      	cmp	r3, #0
 800ac4a:	d101      	bne.n	800ac50 <CoAP_AppendOptionToList+0x88>
				return COAP_ERR_OUT_OF_MEMORY; //could not alloc enough mem
 800ac4c:	230d      	movs	r3, #13
 800ac4e:	e04b      	b.n	800ace8 <CoAP_AppendOptionToList+0x120>

			(*pOptionsListBegin)->next = pOption; //move former list start to 2nd pos
 800ac50:	68fb      	ldr	r3, [r7, #12]
 800ac52:	681b      	ldr	r3, [r3, #0]
 800ac54:	69fa      	ldr	r2, [r7, #28]
 800ac56:	601a      	str	r2, [r3, #0]

			//fill data
			(*pOptionsListBegin)->Length = length;
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	681b      	ldr	r3, [r3, #0]
 800ac5c:	893a      	ldrh	r2, [r7, #8]
 800ac5e:	80da      	strh	r2, [r3, #6]
			(*pOptionsListBegin)->Number = OptNumber;
 800ac60:	68fb      	ldr	r3, [r7, #12]
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	897a      	ldrh	r2, [r7, #10]
 800ac66:	809a      	strh	r2, [r3, #4]
			(*pOptionsListBegin)->Value = ((uint8_t*) (*pOptionsListBegin)) + sizeof(CoAP_option_t);
 800ac68:	68fb      	ldr	r3, [r7, #12]
 800ac6a:	681a      	ldr	r2, [r3, #0]
 800ac6c:	68fb      	ldr	r3, [r7, #12]
 800ac6e:	681b      	ldr	r3, [r3, #0]
 800ac70:	320c      	adds	r2, #12
 800ac72:	609a      	str	r2, [r3, #8]
			coap_memcpy((void*) ((*pOptionsListBegin)->Value), (const void*) buf, length);
 800ac74:	68fb      	ldr	r3, [r7, #12]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	689b      	ldr	r3, [r3, #8]
 800ac7a:	893a      	ldrh	r2, [r7, #8]
 800ac7c:	6879      	ldr	r1, [r7, #4]
 800ac7e:	4618      	mov	r0, r3
 800ac80:	f020 fad9 	bl	802b236 <memcpy>
 800ac84:	e02f      	b.n	800ace6 <CoAP_AppendOptionToList+0x11e>
		//new option has to be placed anywhere in the list middle
		//pOption points to a option which Number is > than the OptNumber to be inserted
		//coap wants option numbers to be ascending - so insert the new option between pOption and its predecessor
		//The predecessor has to be found first...
		else {
			CoAP_option_t* pPrev_pOption = *pOptionsListBegin;
 800ac86:	68fb      	ldr	r3, [r7, #12]
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	61bb      	str	r3, [r7, #24]
			while (pPrev_pOption->next != pOption)
 800ac8c:	e002      	b.n	800ac94 <CoAP_AppendOptionToList+0xcc>
				pPrev_pOption = pPrev_pOption->next; //search predecessor of pOption
 800ac8e:	69bb      	ldr	r3, [r7, #24]
 800ac90:	681b      	ldr	r3, [r3, #0]
 800ac92:	61bb      	str	r3, [r7, #24]
			while (pPrev_pOption->next != pOption)
 800ac94:	69bb      	ldr	r3, [r7, #24]
 800ac96:	681b      	ldr	r3, [r3, #0]
 800ac98:	69fa      	ldr	r2, [r7, #28]
 800ac9a:	429a      	cmp	r2, r3
 800ac9c:	d1f7      	bne.n	800ac8e <CoAP_AppendOptionToList+0xc6>

			CoAP_option_t* newOption = (CoAP_option_t*) CoAP.api.malloc(sizeof(CoAP_option_t) + length);
 800ac9e:	4b14      	ldr	r3, [pc, #80]	; (800acf0 <CoAP_AppendOptionToList+0x128>)
 800aca0:	68db      	ldr	r3, [r3, #12]
 800aca2:	893a      	ldrh	r2, [r7, #8]
 800aca4:	320c      	adds	r2, #12
 800aca6:	4610      	mov	r0, r2
 800aca8:	4798      	blx	r3
 800acaa:	6178      	str	r0, [r7, #20]
			if (newOption == NULL)
 800acac:	697b      	ldr	r3, [r7, #20]
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d101      	bne.n	800acb6 <CoAP_AppendOptionToList+0xee>
				return COAP_ERR_OUT_OF_MEMORY; //could not alloc enough mem
 800acb2:	230d      	movs	r3, #13
 800acb4:	e018      	b.n	800ace8 <CoAP_AppendOptionToList+0x120>

			pPrev_pOption->next = newOption; //insert new option after predecessor
 800acb6:	69bb      	ldr	r3, [r7, #24]
 800acb8:	697a      	ldr	r2, [r7, #20]
 800acba:	601a      	str	r2, [r3, #0]
			newOption->next = pOption;
 800acbc:	697b      	ldr	r3, [r7, #20]
 800acbe:	69fa      	ldr	r2, [r7, #28]
 800acc0:	601a      	str	r2, [r3, #0]

			//fill data
			newOption->Length = length;
 800acc2:	697b      	ldr	r3, [r7, #20]
 800acc4:	893a      	ldrh	r2, [r7, #8]
 800acc6:	80da      	strh	r2, [r3, #6]
			newOption->Number = OptNumber;
 800acc8:	697b      	ldr	r3, [r7, #20]
 800acca:	897a      	ldrh	r2, [r7, #10]
 800accc:	809a      	strh	r2, [r3, #4]
			newOption->Value = ((uint8_t*) newOption) + sizeof(CoAP_option_t);
 800acce:	697b      	ldr	r3, [r7, #20]
 800acd0:	f103 020c 	add.w	r2, r3, #12
 800acd4:	697b      	ldr	r3, [r7, #20]
 800acd6:	609a      	str	r2, [r3, #8]
			coap_memcpy((void*) (newOption->Value), (const void*) buf, length);
 800acd8:	697b      	ldr	r3, [r7, #20]
 800acda:	689b      	ldr	r3, [r3, #8]
 800acdc:	893a      	ldrh	r2, [r7, #8]
 800acde:	6879      	ldr	r1, [r7, #4]
 800ace0:	4618      	mov	r0, r3
 800ace2:	f020 faa8 	bl	802b236 <memcpy>
		}
	}
	return COAP_OK;
 800ace6:	2300      	movs	r3, #0
}
 800ace8:	4618      	mov	r0, r3
 800acea:	3720      	adds	r7, #32
 800acec:	46bd      	mov	sp, r7
 800acee:	bd80      	pop	{r7, pc}
 800acf0:	20000b0c 	.word	0x20000b0c

0800acf4 <CoAP_FreeOptionList>:

CoAP_Result_t _rom CoAP_CopyOptionToList(CoAP_option_t** pOptionsListBegin, CoAP_option_t* OptToCopy) {
	return CoAP_AppendOptionToList(pOptionsListBegin, OptToCopy->Number, OptToCopy->Value, OptToCopy->Length);
}

CoAP_Result_t _rom CoAP_FreeOptionList(CoAP_option_t** pOptionsListBegin) {
 800acf4:	b580      	push	{r7, lr}
 800acf6:	b084      	sub	sp, #16
 800acf8:	af00      	add	r7, sp, #0
 800acfa:	6078      	str	r0, [r7, #4]
	if (*pOptionsListBegin == NULL)
 800acfc:	687b      	ldr	r3, [r7, #4]
 800acfe:	681b      	ldr	r3, [r3, #0]
 800ad00:	2b00      	cmp	r3, #0
 800ad02:	d101      	bne.n	800ad08 <CoAP_FreeOptionList+0x14>
		return COAP_OK; //any list to delete?
 800ad04:	2300      	movs	r3, #0
 800ad06:	e020      	b.n	800ad4a <CoAP_FreeOptionList+0x56>

	CoAP_option_t* pOption1;

	pOption1 = (*pOptionsListBegin)->next; //1st element after start
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	681b      	ldr	r3, [r3, #0]
 800ad0e:	60fb      	str	r3, [r7, #12]
	while (pOption1 != NULL) {
 800ad10:	e00e      	b.n	800ad30 <CoAP_FreeOptionList+0x3c>
		//this unlinks the 2nd element by seting 1st->next to 3rd element
		(*pOptionsListBegin)->next = (*pOptionsListBegin)->next->next;
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	681b      	ldr	r3, [r3, #0]
 800ad16:	681a      	ldr	r2, [r3, #0]
 800ad18:	687b      	ldr	r3, [r7, #4]
 800ad1a:	681b      	ldr	r3, [r3, #0]
 800ad1c:	6812      	ldr	r2, [r2, #0]
 800ad1e:	601a      	str	r2, [r3, #0]
		CoAP.api.free((void*) pOption1); //free "old" 1st unlinked element
 800ad20:	4b0c      	ldr	r3, [pc, #48]	; (800ad54 <CoAP_FreeOptionList+0x60>)
 800ad22:	691b      	ldr	r3, [r3, #16]
 800ad24:	68f8      	ldr	r0, [r7, #12]
 800ad26:	4798      	blx	r3
		pOption1 = (*pOptionsListBegin)->next; // (new) 1st element after start
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	681b      	ldr	r3, [r3, #0]
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	60fb      	str	r3, [r7, #12]
	while (pOption1 != NULL) {
 800ad30:	68fb      	ldr	r3, [r7, #12]
 800ad32:	2b00      	cmp	r3, #0
 800ad34:	d1ed      	bne.n	800ad12 <CoAP_FreeOptionList+0x1e>
	}

	CoAP.api.free((void*) (*pOptionsListBegin));
 800ad36:	4b07      	ldr	r3, [pc, #28]	; (800ad54 <CoAP_FreeOptionList+0x60>)
 800ad38:	691b      	ldr	r3, [r3, #16]
 800ad3a:	687a      	ldr	r2, [r7, #4]
 800ad3c:	6812      	ldr	r2, [r2, #0]
 800ad3e:	4610      	mov	r0, r2
 800ad40:	4798      	blx	r3
	*pOptionsListBegin = NULL;
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	2200      	movs	r2, #0
 800ad46:	601a      	str	r2, [r3, #0]

	return COAP_OK;
 800ad48:	2300      	movs	r3, #0
}
 800ad4a:	4618      	mov	r0, r3
 800ad4c:	3710      	adds	r7, #16
 800ad4e:	46bd      	mov	sp, r7
 800ad50:	bd80      	pop	{r7, pc}
 800ad52:	bf00      	nop
 800ad54:	20000b0c 	.word	0x20000b0c

0800ad58 <CoAP_CheckForUnknownCriticalOption>:
 *   message (Section 5.4.1).  Note that the implementation of critical
 *   options is, as the name "Option" implies, generally optional:
 *   unsupported critical options lead to an error response or summary
 *   rejection of the message.
 */
uint16_t _rom CoAP_CheckForUnknownCriticalOption(CoAP_option_t* pOptionsListBegin) {
 800ad58:	b480      	push	{r7}
 800ad5a:	b087      	sub	sp, #28
 800ad5c:	af00      	add	r7, sp, #0
 800ad5e:	6078      	str	r0, [r7, #4]
	//uses:
	//#define KNOWN_OPTIONS_COUNT (X)
	//extern uint16_t KNOWN_OPTIONS[KNOWN_OPTIONS_COUNT];
	if (pOptionsListBegin == NULL)
 800ad60:	687b      	ldr	r3, [r7, #4]
 800ad62:	2b00      	cmp	r3, #0
 800ad64:	d101      	bne.n	800ad6a <CoAP_CheckForUnknownCriticalOption+0x12>
		return 0; //no options, nothing can be unknown
 800ad66:	2300      	movs	r3, #0
 800ad68:	e030      	b.n	800adcc <CoAP_CheckForUnknownCriticalOption+0x74>

	CoAP_option_t* pOption = pOptionsListBegin;
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	617b      	str	r3, [r7, #20]
	bool optKnown;
	do {
		optKnown = false;
 800ad6e:	2300      	movs	r3, #0
 800ad70:	74fb      	strb	r3, [r7, #19]
		uint32_t j;
		for (j = 0; j < KNOWN_OPTIONS_COUNT; j++) {
 800ad72:	2300      	movs	r3, #0
 800ad74:	60fb      	str	r3, [r7, #12]
 800ad76:	e00d      	b.n	800ad94 <CoAP_CheckForUnknownCriticalOption+0x3c>
			if (pOption->Number == KNOWN_OPTIONS[j]) {
 800ad78:	697b      	ldr	r3, [r7, #20]
 800ad7a:	889a      	ldrh	r2, [r3, #4]
 800ad7c:	4916      	ldr	r1, [pc, #88]	; (800add8 <CoAP_CheckForUnknownCriticalOption+0x80>)
 800ad7e:	68fb      	ldr	r3, [r7, #12]
 800ad80:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 800ad84:	429a      	cmp	r2, r3
 800ad86:	d102      	bne.n	800ad8e <CoAP_CheckForUnknownCriticalOption+0x36>
				optKnown = true;
 800ad88:	2301      	movs	r3, #1
 800ad8a:	74fb      	strb	r3, [r7, #19]
				continue;
 800ad8c:	bf00      	nop
		for (j = 0; j < KNOWN_OPTIONS_COUNT; j++) {
 800ad8e:	68fb      	ldr	r3, [r7, #12]
 800ad90:	3301      	adds	r3, #1
 800ad92:	60fb      	str	r3, [r7, #12]
 800ad94:	68fb      	ldr	r3, [r7, #12]
 800ad96:	2b06      	cmp	r3, #6
 800ad98:	d9ee      	bls.n	800ad78 <CoAP_CheckForUnknownCriticalOption+0x20>
			}
		}

		if (!optKnown) //check if critical
 800ad9a:	7cfb      	ldrb	r3, [r7, #19]
 800ad9c:	f083 0301 	eor.w	r3, r3, #1
 800ada0:	b2db      	uxtb	r3, r3
 800ada2:	2b00      	cmp	r3, #0
 800ada4:	d008      	beq.n	800adb8 <CoAP_CheckForUnknownCriticalOption+0x60>
		{
			if ((pOption->Number) & OPT_FLAG_CRITICAL) {
 800ada6:	697b      	ldr	r3, [r7, #20]
 800ada8:	889b      	ldrh	r3, [r3, #4]
 800adaa:	f003 0301 	and.w	r3, r3, #1
 800adae:	2b00      	cmp	r3, #0
 800adb0:	d002      	beq.n	800adb8 <CoAP_CheckForUnknownCriticalOption+0x60>
				return pOption->Number;
 800adb2:	697b      	ldr	r3, [r7, #20]
 800adb4:	889b      	ldrh	r3, [r3, #4]
 800adb6:	e009      	b.n	800adcc <CoAP_CheckForUnknownCriticalOption+0x74>
			}
		}

		if (pOption->next == NULL)
 800adb8:	697b      	ldr	r3, [r7, #20]
 800adba:	681b      	ldr	r3, [r3, #0]
 800adbc:	2b00      	cmp	r3, #0
 800adbe:	d101      	bne.n	800adc4 <CoAP_CheckForUnknownCriticalOption+0x6c>
			return 0;
 800adc0:	2300      	movs	r3, #0
 800adc2:	e003      	b.n	800adcc <CoAP_CheckForUnknownCriticalOption+0x74>
		pOption = pOption->next;
 800adc4:	697b      	ldr	r3, [r7, #20]
 800adc6:	681b      	ldr	r3, [r3, #0]
 800adc8:	617b      	str	r3, [r7, #20]
	do {
 800adca:	e7d0      	b.n	800ad6e <CoAP_CheckForUnknownCriticalOption+0x16>
	} while (1);

	return 0;
}
 800adcc:	4618      	mov	r0, r3
 800adce:	371c      	adds	r7, #28
 800add0:	46bd      	mov	sp, r7
 800add2:	bc80      	pop	{r7}
 800add4:	4770      	bx	lr
 800add6:	bf00      	nop
 800add8:	20000030 	.word	0x20000030

0800addc <CoAP_OptionsAreEqual>:
		INFO("\n");
		pOptListBegin = pOptListBegin->next;
	}
}

bool _rom CoAP_OptionsAreEqual(CoAP_option_t* OptA, CoAP_option_t* OptB) {
 800addc:	b480      	push	{r7}
 800adde:	b085      	sub	sp, #20
 800ade0:	af00      	add	r7, sp, #0
 800ade2:	6078      	str	r0, [r7, #4]
 800ade4:	6039      	str	r1, [r7, #0]
	if (OptA == NULL && OptB == NULL)
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	2b00      	cmp	r3, #0
 800adea:	d104      	bne.n	800adf6 <CoAP_OptionsAreEqual+0x1a>
 800adec:	683b      	ldr	r3, [r7, #0]
 800adee:	2b00      	cmp	r3, #0
 800adf0:	d101      	bne.n	800adf6 <CoAP_OptionsAreEqual+0x1a>
		return true;
 800adf2:	2301      	movs	r3, #1
 800adf4:	e032      	b.n	800ae5c <CoAP_OptionsAreEqual+0x80>
	if (OptA == NULL || OptB == NULL)
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	2b00      	cmp	r3, #0
 800adfa:	d002      	beq.n	800ae02 <CoAP_OptionsAreEqual+0x26>
 800adfc:	683b      	ldr	r3, [r7, #0]
 800adfe:	2b00      	cmp	r3, #0
 800ae00:	d101      	bne.n	800ae06 <CoAP_OptionsAreEqual+0x2a>
		return false;
 800ae02:	2300      	movs	r3, #0
 800ae04:	e02a      	b.n	800ae5c <CoAP_OptionsAreEqual+0x80>

	//check case 4 => both != NULL:
	if (OptA->Length != OptB->Length)
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	88da      	ldrh	r2, [r3, #6]
 800ae0a:	683b      	ldr	r3, [r7, #0]
 800ae0c:	88db      	ldrh	r3, [r3, #6]
 800ae0e:	429a      	cmp	r2, r3
 800ae10:	d001      	beq.n	800ae16 <CoAP_OptionsAreEqual+0x3a>
		return false;
 800ae12:	2300      	movs	r3, #0
 800ae14:	e022      	b.n	800ae5c <CoAP_OptionsAreEqual+0x80>
	if (OptA->Number != OptB->Number)
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	889a      	ldrh	r2, [r3, #4]
 800ae1a:	683b      	ldr	r3, [r7, #0]
 800ae1c:	889b      	ldrh	r3, [r3, #4]
 800ae1e:	429a      	cmp	r2, r3
 800ae20:	d001      	beq.n	800ae26 <CoAP_OptionsAreEqual+0x4a>
		return false;
 800ae22:	2300      	movs	r3, #0
 800ae24:	e01a      	b.n	800ae5c <CoAP_OptionsAreEqual+0x80>
	int i;
	for (i = 0; i < OptA->Length; i++) {
 800ae26:	2300      	movs	r3, #0
 800ae28:	60fb      	str	r3, [r7, #12]
 800ae2a:	e010      	b.n	800ae4e <CoAP_OptionsAreEqual+0x72>
		if (OptA->Value[i] != OptB->Value[i])
 800ae2c:	687b      	ldr	r3, [r7, #4]
 800ae2e:	689a      	ldr	r2, [r3, #8]
 800ae30:	68fb      	ldr	r3, [r7, #12]
 800ae32:	4413      	add	r3, r2
 800ae34:	781a      	ldrb	r2, [r3, #0]
 800ae36:	683b      	ldr	r3, [r7, #0]
 800ae38:	6899      	ldr	r1, [r3, #8]
 800ae3a:	68fb      	ldr	r3, [r7, #12]
 800ae3c:	440b      	add	r3, r1
 800ae3e:	781b      	ldrb	r3, [r3, #0]
 800ae40:	429a      	cmp	r2, r3
 800ae42:	d001      	beq.n	800ae48 <CoAP_OptionsAreEqual+0x6c>
			return false;
 800ae44:	2300      	movs	r3, #0
 800ae46:	e009      	b.n	800ae5c <CoAP_OptionsAreEqual+0x80>
	for (i = 0; i < OptA->Length; i++) {
 800ae48:	68fb      	ldr	r3, [r7, #12]
 800ae4a:	3301      	adds	r3, #1
 800ae4c:	60fb      	str	r3, [r7, #12]
 800ae4e:	687b      	ldr	r3, [r7, #4]
 800ae50:	88db      	ldrh	r3, [r3, #6]
 800ae52:	461a      	mov	r2, r3
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	4293      	cmp	r3, r2
 800ae58:	dbe8      	blt.n	800ae2c <CoAP_OptionsAreEqual+0x50>
	}
	return true;
 800ae5a:	2301      	movs	r3, #1
}
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	3714      	adds	r7, #20
 800ae60:	46bd      	mov	sp, r7
 800ae62:	bc80      	pop	{r7}
 800ae64:	4770      	bx	lr
	...

0800ae68 <WellKnown_GetHandler>:
	//CoAP_FindResourceByUri
	return COAP_OK;
}


CoAP_HandlerResult_t _rom WellKnown_GetHandler(CoAP_Message_t* pReq, CoAP_Message_t* pResp) {
 800ae68:	b590      	push	{r4, r7, lr}
 800ae6a:	b08b      	sub	sp, #44	; 0x2c
 800ae6c:	af00      	add	r7, sp, #0
 800ae6e:	6078      	str	r0, [r7, #4]
 800ae70:	6039      	str	r1, [r7, #0]
//	static uint8_t wellknownStr[500];
//	uint8_t* pWr = wellknownStr;

	if (pReq->Code != REQ_GET) {
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	795b      	ldrb	r3, [r3, #5]
 800ae76:	2b01      	cmp	r3, #1
 800ae78:	d014      	beq.n	800aea4 <WellKnown_GetHandler+0x3c>
		uint8_t errMsg[] = {"CoAP GET only!"};
 800ae7a:	4b5e      	ldr	r3, [pc, #376]	; (800aff4 <WellKnown_GetHandler+0x18c>)
 800ae7c:	f107 0408 	add.w	r4, r7, #8
 800ae80:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800ae82:	c407      	stmia	r4!, {r0, r1, r2}
 800ae84:	8023      	strh	r3, [r4, #0]
 800ae86:	3402      	adds	r4, #2
 800ae88:	0c1b      	lsrs	r3, r3, #16
 800ae8a:	7023      	strb	r3, [r4, #0]
		pResp->Code = RESP_ERROR_BAD_REQUEST_4_00;
 800ae8c:	683b      	ldr	r3, [r7, #0]
 800ae8e:	2280      	movs	r2, #128	; 0x80
 800ae90:	715a      	strb	r2, [r3, #5]
		CoAP_SetPayload(pResp, errMsg, (uint16_t) (sizeof(errMsg)-1), true);
 800ae92:	f107 0108 	add.w	r1, r7, #8
 800ae96:	2301      	movs	r3, #1
 800ae98:	220e      	movs	r2, #14
 800ae9a:	6838      	ldr	r0, [r7, #0]
 800ae9c:	f000 fde0 	bl	800ba60 <CoAP_SetPayload>
		return HANDLER_ERROR;
 800aea0:	2302      	movs	r3, #2
 800aea2:	e0a3      	b.n	800afec <WellKnown_GetHandler+0x184>
	}

	CoAP_Res_t* pList = pResList; //List of internal resources
 800aea4:	4b54      	ldr	r3, [pc, #336]	; (800aff8 <WellKnown_GetHandler+0x190>)
 800aea6:	681b      	ldr	r3, [r3, #0]
 800aea8:	627b      	str	r3, [r7, #36]	; 0x24
	uint8_t* pStr = (uint8_t*) CoAP.api.malloc((ResListMembers + 1) * 64); //first estimation of needed memory
 800aeaa:	4b54      	ldr	r3, [pc, #336]	; (800affc <WellKnown_GetHandler+0x194>)
 800aeac:	68db      	ldr	r3, [r3, #12]
 800aeae:	4a54      	ldr	r2, [pc, #336]	; (800b000 <WellKnown_GetHandler+0x198>)
 800aeb0:	6812      	ldr	r2, [r2, #0]
 800aeb2:	3201      	adds	r2, #1
 800aeb4:	0192      	lsls	r2, r2, #6
 800aeb6:	4610      	mov	r0, r2
 800aeb8:	4798      	blx	r3
 800aeba:	6238      	str	r0, [r7, #32]
	uint8_t* pStrStart = pStr;
 800aebc:	6a3b      	ldr	r3, [r7, #32]
 800aebe:	61bb      	str	r3, [r7, #24]

	if (pStr == NULL) {
 800aec0:	6a3b      	ldr	r3, [r7, #32]
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	d108      	bne.n	800aed8 <WellKnown_GetHandler+0x70>
		INFO("- WellKnown_GetHandler(): Ouf memory error!\r\n");
 800aec6:	494f      	ldr	r1, [pc, #316]	; (800b004 <WellKnown_GetHandler+0x19c>)
 800aec8:	484f      	ldr	r0, [pc, #316]	; (800b008 <WellKnown_GetHandler+0x1a0>)
 800aeca:	f01f fff3 	bl	802aeb4 <siprintf>
 800aece:	484e      	ldr	r0, [pc, #312]	; (800b008 <WellKnown_GetHandler+0x1a0>)
 800aed0:	f7fd f992 	bl	80081f8 <hal_debug_puts>
		return HANDLER_ERROR;
 800aed4:	2302      	movs	r3, #2
 800aed6:	e089      	b.n	800afec <WellKnown_GetHandler+0x184>
	}
	memset(pStr, 0, (ResListMembers + 1) * 64);
 800aed8:	4b49      	ldr	r3, [pc, #292]	; (800b000 <WellKnown_GetHandler+0x198>)
 800aeda:	681b      	ldr	r3, [r3, #0]
 800aedc:	3301      	adds	r3, #1
 800aede:	019b      	lsls	r3, r3, #6
 800aee0:	461a      	mov	r2, r3
 800aee2:	2100      	movs	r1, #0
 800aee4:	6a38      	ldr	r0, [r7, #32]
 800aee6:	f020 f907 	bl	802b0f8 <memset>

	INFO("- WellKnown_GetHandler(): res cnt:%u temp alloc:%u\r\n", (unsigned int) ResListMembers, (unsigned int) (ResListMembers + 2) * 64);
 800aeea:	4b45      	ldr	r3, [pc, #276]	; (800b000 <WellKnown_GetHandler+0x198>)
 800aeec:	681a      	ldr	r2, [r3, #0]
 800aeee:	4b44      	ldr	r3, [pc, #272]	; (800b000 <WellKnown_GetHandler+0x198>)
 800aef0:	681b      	ldr	r3, [r3, #0]
 800aef2:	3302      	adds	r3, #2
 800aef4:	019b      	lsls	r3, r3, #6
 800aef6:	4945      	ldr	r1, [pc, #276]	; (800b00c <WellKnown_GetHandler+0x1a4>)
 800aef8:	4843      	ldr	r0, [pc, #268]	; (800b008 <WellKnown_GetHandler+0x1a0>)
 800aefa:	f01f ffdb 	bl	802aeb4 <siprintf>
 800aefe:	4842      	ldr	r0, [pc, #264]	; (800b008 <WellKnown_GetHandler+0x1a0>)
 800af00:	f7fd f97a 	bl	80081f8 <hal_debug_puts>

	//TODO: Implement non ram version, e.g. write to memory to eeprom
	while (pList != NULL) {
 800af04:	e05b      	b.n	800afbe <WellKnown_GetHandler+0x156>
		CoAP_option_t* pUriOpt = pList->pUri;
 800af06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af08:	695b      	ldr	r3, [r3, #20]
 800af0a:	61fb      	str	r3, [r7, #28]

		*pStr++ = '<';
 800af0c:	6a3b      	ldr	r3, [r7, #32]
 800af0e:	1c5a      	adds	r2, r3, #1
 800af10:	623a      	str	r2, [r7, #32]
 800af12:	223c      	movs	r2, #60	; 0x3c
 800af14:	701a      	strb	r2, [r3, #0]
		while (pUriOpt != NULL) {
 800af16:	e015      	b.n	800af44 <WellKnown_GetHandler+0xdc>
			*pStr++ = '/';
 800af18:	6a3b      	ldr	r3, [r7, #32]
 800af1a:	1c5a      	adds	r2, r3, #1
 800af1c:	623a      	str	r2, [r7, #32]
 800af1e:	222f      	movs	r2, #47	; 0x2f
 800af20:	701a      	strb	r2, [r3, #0]
			coap_memcpy(pStr, pUriOpt->Value, pUriOpt->Length);
 800af22:	69fb      	ldr	r3, [r7, #28]
 800af24:	6899      	ldr	r1, [r3, #8]
 800af26:	69fb      	ldr	r3, [r7, #28]
 800af28:	88db      	ldrh	r3, [r3, #6]
 800af2a:	461a      	mov	r2, r3
 800af2c:	6a38      	ldr	r0, [r7, #32]
 800af2e:	f020 f982 	bl	802b236 <memcpy>
			pStr += pUriOpt->Length;
 800af32:	69fb      	ldr	r3, [r7, #28]
 800af34:	88db      	ldrh	r3, [r3, #6]
 800af36:	461a      	mov	r2, r3
 800af38:	6a3b      	ldr	r3, [r7, #32]
 800af3a:	4413      	add	r3, r2
 800af3c:	623b      	str	r3, [r7, #32]
			pUriOpt = pUriOpt->next;
 800af3e:	69fb      	ldr	r3, [r7, #28]
 800af40:	681b      	ldr	r3, [r3, #0]
 800af42:	61fb      	str	r3, [r7, #28]
		while (pUriOpt != NULL) {
 800af44:	69fb      	ldr	r3, [r7, #28]
 800af46:	2b00      	cmp	r3, #0
 800af48:	d1e6      	bne.n	800af18 <WellKnown_GetHandler+0xb0>
		}
		*pStr++ = '>';
 800af4a:	6a3b      	ldr	r3, [r7, #32]
 800af4c:	1c5a      	adds	r2, r3, #1
 800af4e:	623a      	str	r2, [r7, #32]
 800af50:	223e      	movs	r2, #62	; 0x3e
 800af52:	701a      	strb	r2, [r3, #0]
		if (pList->Options.Cf != COAP_CF_LINK_FORMAT) {
 800af54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af56:	899b      	ldrh	r3, [r3, #12]
 800af58:	2b28      	cmp	r3, #40	; 0x28
 800af5a:	d028      	beq.n	800afae <WellKnown_GetHandler+0x146>
			if( pList->pDescription != NULL ) {
 800af5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af5e:	685b      	ldr	r3, [r3, #4]
 800af60:	2b00      	cmp	r3, #0
 800af62:	d00b      	beq.n	800af7c <WellKnown_GetHandler+0x114>
				pStr += coap_sprintf((char *) pStr, ";title=\"%s\"", pList->pDescription);
 800af64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af66:	685b      	ldr	r3, [r3, #4]
 800af68:	461a      	mov	r2, r3
 800af6a:	4929      	ldr	r1, [pc, #164]	; (800b010 <WellKnown_GetHandler+0x1a8>)
 800af6c:	6a38      	ldr	r0, [r7, #32]
 800af6e:	f01f ffa1 	bl	802aeb4 <siprintf>
 800af72:	4603      	mov	r3, r0
 800af74:	461a      	mov	r2, r3
 800af76:	6a3b      	ldr	r3, [r7, #32]
 800af78:	4413      	add	r3, r2
 800af7a:	623b      	str	r3, [r7, #32]
			}
			
			pStr += coap_sprintf((char *) pStr, ";ct=%d", pList->Options.Cf);
 800af7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af7e:	899b      	ldrh	r3, [r3, #12]
 800af80:	461a      	mov	r2, r3
 800af82:	4924      	ldr	r1, [pc, #144]	; (800b014 <WellKnown_GetHandler+0x1ac>)
 800af84:	6a38      	ldr	r0, [r7, #32]
 800af86:	f01f ff95 	bl	802aeb4 <siprintf>
 800af8a:	4603      	mov	r3, r0
 800af8c:	461a      	mov	r2, r3
 800af8e:	6a3b      	ldr	r3, [r7, #32]
 800af90:	4413      	add	r3, r2
 800af92:	623b      	str	r3, [r7, #32]
			
			if (pList->Notifier != NULL) {
 800af94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af96:	6a1b      	ldr	r3, [r3, #32]
 800af98:	2b00      	cmp	r3, #0
 800af9a:	d008      	beq.n	800afae <WellKnown_GetHandler+0x146>
				pStr += coap_sprintf((char*) pStr, ";obs");
 800af9c:	491e      	ldr	r1, [pc, #120]	; (800b018 <WellKnown_GetHandler+0x1b0>)
 800af9e:	6a38      	ldr	r0, [r7, #32]
 800afa0:	f01f ff88 	bl	802aeb4 <siprintf>
 800afa4:	4603      	mov	r3, r0
 800afa6:	461a      	mov	r2, r3
 800afa8:	6a3b      	ldr	r3, [r7, #32]
 800afaa:	4413      	add	r3, r2
 800afac:	623b      	str	r3, [r7, #32]
			}
		}
		*pStr++ = ',';
 800afae:	6a3b      	ldr	r3, [r7, #32]
 800afb0:	1c5a      	adds	r2, r3, #1
 800afb2:	623a      	str	r2, [r7, #32]
 800afb4:	222c      	movs	r2, #44	; 0x2c
 800afb6:	701a      	strb	r2, [r3, #0]

		pList = pList->next;
 800afb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	627b      	str	r3, [r7, #36]	; 0x24
	while (pList != NULL) {
 800afbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800afc0:	2b00      	cmp	r3, #0
 800afc2:	d1a0      	bne.n	800af06 <WellKnown_GetHandler+0x9e>

		//TODO: implement growing of buf/overwrite check
	}

	CoAP_SetPayload(pResp, pStrStart, (uint16_t) coap_strlen((char*) pStrStart), true);
 800afc4:	69b8      	ldr	r0, [r7, #24]
 800afc6:	f7f5 f92b 	bl	8000220 <strlen>
 800afca:	4603      	mov	r3, r0
 800afcc:	b29b      	uxth	r3, r3
 800afce:	461a      	mov	r2, r3
 800afd0:	2301      	movs	r3, #1
 800afd2:	69b9      	ldr	r1, [r7, #24]
 800afd4:	6838      	ldr	r0, [r7, #0]
 800afd6:	f000 fd43 	bl	800ba60 <CoAP_SetPayload>
	CoAP.api.free(pStrStart);
 800afda:	4b08      	ldr	r3, [pc, #32]	; (800affc <WellKnown_GetHandler+0x194>)
 800afdc:	691b      	ldr	r3, [r3, #16]
 800afde:	69b8      	ldr	r0, [r7, #24]
 800afe0:	4798      	blx	r3

	CoAP_AddCfOptionToMsg(pResp, COAP_CF_LINK_FORMAT);
 800afe2:	2128      	movs	r1, #40	; 0x28
 800afe4:	6838      	ldr	r0, [r7, #0]
 800afe6:	f000 fda9 	bl	800bb3c <CoAP_AddCfOptionToMsg>

	return HANDLER_OK;
 800afea:	2300      	movs	r3, #0
}
 800afec:	4618      	mov	r0, r3
 800afee:	372c      	adds	r7, #44	; 0x2c
 800aff0:	46bd      	mov	sp, r7
 800aff2:	bd90      	pop	{r4, r7, pc}
 800aff4:	0802d7fc 	.word	0x0802d7fc
 800aff8:	20000b4c 	.word	0x20000b4c
 800affc:	20000b0c 	.word	0x20000b0c
 800b000:	20000b50 	.word	0x20000b50
 800b004:	0802d778 	.word	0x0802d778
 800b008:	20000b54 	.word	0x20000b54
 800b00c:	0802d7a8 	.word	0x0802d7a8
 800b010:	0802d7e0 	.word	0x0802d7e0
 800b014:	0802d7ec 	.word	0x0802d7ec
 800b018:	0802d7f4 	.word	0x0802d7f4

0800b01c <CoAP_InitResources>:

void _rom CoAP_InitResources() {
 800b01c:	b580      	push	{r7, lr}
 800b01e:	b084      	sub	sp, #16
 800b020:	af02      	add	r7, sp, #8
	CoAP_ResOpts_t Options = {.Cf = COAP_CF_LINK_FORMAT, .AllowedMethods = RES_OPT_GET};
 800b022:	463b      	mov	r3, r7
 800b024:	2200      	movs	r2, #0
 800b026:	601a      	str	r2, [r3, #0]
 800b028:	809a      	strh	r2, [r3, #4]
 800b02a:	2328      	movs	r3, #40	; 0x28
 800b02c:	803b      	strh	r3, [r7, #0]
 800b02e:	2302      	movs	r3, #2
 800b030:	807b      	strh	r3, [r7, #2]
	CoAP_CreateResource("/.well-known/core", "\0", Options, WellKnown_GetHandler, NULL);
 800b032:	2300      	movs	r3, #0
 800b034:	9301      	str	r3, [sp, #4]
 800b036:	4b06      	ldr	r3, [pc, #24]	; (800b050 <CoAP_InitResources+0x34>)
 800b038:	9300      	str	r3, [sp, #0]
 800b03a:	463b      	mov	r3, r7
 800b03c:	cb0c      	ldmia	r3, {r2, r3}
 800b03e:	4905      	ldr	r1, [pc, #20]	; (800b054 <CoAP_InitResources+0x38>)
 800b040:	4805      	ldr	r0, [pc, #20]	; (800b058 <CoAP_InitResources+0x3c>)
 800b042:	f000 f861 	bl	800b108 <CoAP_CreateResource>
}
 800b046:	bf00      	nop
 800b048:	3708      	adds	r7, #8
 800b04a:	46bd      	mov	sp, r7
 800b04c:	bd80      	pop	{r7, pc}
 800b04e:	bf00      	nop
 800b050:	0800ae69 	.word	0x0800ae69
 800b054:	0802d80c 	.word	0x0802d80c
 800b058:	0802d810 	.word	0x0802d810

0800b05c <CoAP_AppendResourceToList>:

static CoAP_Result_t _rom CoAP_AppendResourceToList(CoAP_Res_t** pListStart, CoAP_Res_t* pResToAdd) {
 800b05c:	b480      	push	{r7}
 800b05e:	b085      	sub	sp, #20
 800b060:	af00      	add	r7, sp, #0
 800b062:	6078      	str	r0, [r7, #4]
 800b064:	6039      	str	r1, [r7, #0]
	if (pResToAdd == NULL) return COAP_ERR_ARGUMENT;
 800b066:	683b      	ldr	r3, [r7, #0]
 800b068:	2b00      	cmp	r3, #0
 800b06a:	d101      	bne.n	800b070 <CoAP_AppendResourceToList+0x14>
 800b06c:	230a      	movs	r3, #10
 800b06e:	e020      	b.n	800b0b2 <CoAP_AppendResourceToList+0x56>

	if (*pListStart == NULL) //List empty? create new first element
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	2b00      	cmp	r3, #0
 800b076:	d107      	bne.n	800b088 <CoAP_AppendResourceToList+0x2c>
	{
		*pListStart = pResToAdd;
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	683a      	ldr	r2, [r7, #0]
 800b07c:	601a      	str	r2, [r3, #0]
		(*pListStart)->next = NULL;
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	2200      	movs	r2, #0
 800b084:	601a      	str	r2, [r3, #0]
 800b086:	e013      	b.n	800b0b0 <CoAP_AppendResourceToList+0x54>
	} else //append new element at end
	{
		CoAP_Res_t* pRes = *pListStart;
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	681b      	ldr	r3, [r3, #0]
 800b08c:	60fb      	str	r3, [r7, #12]
		while (pRes->next != NULL) pRes = pRes->next;
 800b08e:	e002      	b.n	800b096 <CoAP_AppendResourceToList+0x3a>
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	60fb      	str	r3, [r7, #12]
 800b096:	68fb      	ldr	r3, [r7, #12]
 800b098:	681b      	ldr	r3, [r3, #0]
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	d1f8      	bne.n	800b090 <CoAP_AppendResourceToList+0x34>

		pRes->next = pResToAdd;
 800b09e:	68fb      	ldr	r3, [r7, #12]
 800b0a0:	683a      	ldr	r2, [r7, #0]
 800b0a2:	601a      	str	r2, [r3, #0]
		pRes = pRes->next;
 800b0a4:	68fb      	ldr	r3, [r7, #12]
 800b0a6:	681b      	ldr	r3, [r3, #0]
 800b0a8:	60fb      	str	r3, [r7, #12]
		pRes->next = NULL;
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	2200      	movs	r2, #0
 800b0ae:	601a      	str	r2, [r3, #0]
	}
	return COAP_OK;
 800b0b0:	2300      	movs	r3, #0
}
 800b0b2:	4618      	mov	r0, r3
 800b0b4:	3714      	adds	r7, #20
 800b0b6:	46bd      	mov	sp, r7
 800b0b8:	bc80      	pop	{r7}
 800b0ba:	4770      	bx	lr

0800b0bc <CoAP_FindResourceByUri>:
//    }
//  }
//  return COAP_OK;
//}

CoAP_Res_t* _rom CoAP_FindResourceByUri(CoAP_Res_t* pResListToSearchIn, CoAP_option_t* pOptionsToMatch) {
 800b0bc:	b580      	push	{r7, lr}
 800b0be:	b084      	sub	sp, #16
 800b0c0:	af00      	add	r7, sp, #0
 800b0c2:	6078      	str	r0, [r7, #4]
 800b0c4:	6039      	str	r1, [r7, #0]
	CoAP_Res_t* pList = pResList;
 800b0c6:	4b0f      	ldr	r3, [pc, #60]	; (800b104 <CoAP_FindResourceByUri+0x48>)
 800b0c8:	681b      	ldr	r3, [r3, #0]
 800b0ca:	60fb      	str	r3, [r7, #12]
	if (pResListToSearchIn != NULL) {
 800b0cc:	687b      	ldr	r3, [r7, #4]
 800b0ce:	2b00      	cmp	r3, #0
 800b0d0:	d010      	beq.n	800b0f4 <CoAP_FindResourceByUri+0x38>
		pList = pResListToSearchIn;
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	60fb      	str	r3, [r7, #12]
	}

	for (; pList != NULL; pList = pList->next) {
 800b0d6:	e00d      	b.n	800b0f4 <CoAP_FindResourceByUri+0x38>
		if (CoAP_UriOptionsAreEqual(pList->pUri, pOptionsToMatch)) {
 800b0d8:	68fb      	ldr	r3, [r7, #12]
 800b0da:	695b      	ldr	r3, [r3, #20]
 800b0dc:	6839      	ldr	r1, [r7, #0]
 800b0de:	4618      	mov	r0, r3
 800b0e0:	f000 ff81 	bl	800bfe6 <CoAP_UriOptionsAreEqual>
 800b0e4:	4603      	mov	r3, r0
 800b0e6:	2b00      	cmp	r3, #0
 800b0e8:	d001      	beq.n	800b0ee <CoAP_FindResourceByUri+0x32>
			return pList;
 800b0ea:	68fb      	ldr	r3, [r7, #12]
 800b0ec:	e006      	b.n	800b0fc <CoAP_FindResourceByUri+0x40>
	for (; pList != NULL; pList = pList->next) {
 800b0ee:	68fb      	ldr	r3, [r7, #12]
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	60fb      	str	r3, [r7, #12]
 800b0f4:	68fb      	ldr	r3, [r7, #12]
 800b0f6:	2b00      	cmp	r3, #0
 800b0f8:	d1ee      	bne.n	800b0d8 <CoAP_FindResourceByUri+0x1c>
		}
	}

	return NULL;
 800b0fa:	2300      	movs	r3, #0
}
 800b0fc:	4618      	mov	r0, r3
 800b0fe:	3710      	adds	r7, #16
 800b100:	46bd      	mov	sp, r7
 800b102:	bd80      	pop	{r7, pc}
 800b104:	20000b4c 	.word	0x20000b4c

0800b108 <CoAP_CreateResource>:

CoAP_Res_t* _rom CoAP_CreateResource(char* Uri, char* Descr, CoAP_ResOpts_t Options, CoAP_ResourceHandler_fPtr_t pHandlerFkt, CoAP_ResourceNotifier_fPtr_t pNotifierFkt) {
 800b108:	b590      	push	{r4, r7, lr}
 800b10a:	b08b      	sub	sp, #44	; 0x2c
 800b10c:	af04      	add	r7, sp, #16
 800b10e:	60f8      	str	r0, [r7, #12]
 800b110:	60b9      	str	r1, [r7, #8]
 800b112:	4639      	mov	r1, r7
 800b114:	e881 000c 	stmia.w	r1, {r2, r3}
	INFO("Creating resource %s (%s) AllowedMethods: %x%x%x%x\r\n", Uri, Descr == NULL ? "" : Descr,
 800b118:	68bb      	ldr	r3, [r7, #8]
 800b11a:	2b00      	cmp	r3, #0
 800b11c:	d001      	beq.n	800b122 <CoAP_CreateResource+0x1a>
 800b11e:	68bb      	ldr	r3, [r7, #8]
 800b120:	e000      	b.n	800b124 <CoAP_CreateResource+0x1c>
 800b122:	4b4d      	ldr	r3, [pc, #308]	; (800b258 <CoAP_CreateResource+0x150>)
 800b124:	887a      	ldrh	r2, [r7, #2]
 800b126:	f002 0202 	and.w	r2, r2, #2
 800b12a:	2a00      	cmp	r2, #0
 800b12c:	bf14      	ite	ne
 800b12e:	2201      	movne	r2, #1
 800b130:	2200      	moveq	r2, #0
 800b132:	b2d2      	uxtb	r2, r2
 800b134:	4611      	mov	r1, r2
 800b136:	887a      	ldrh	r2, [r7, #2]
 800b138:	f002 0204 	and.w	r2, r2, #4
 800b13c:	2a00      	cmp	r2, #0
 800b13e:	bf14      	ite	ne
 800b140:	2201      	movne	r2, #1
 800b142:	2200      	moveq	r2, #0
 800b144:	b2d2      	uxtb	r2, r2
 800b146:	4610      	mov	r0, r2
 800b148:	887a      	ldrh	r2, [r7, #2]
 800b14a:	f002 0208 	and.w	r2, r2, #8
 800b14e:	2a00      	cmp	r2, #0
 800b150:	bf14      	ite	ne
 800b152:	2201      	movne	r2, #1
 800b154:	2200      	moveq	r2, #0
 800b156:	b2d2      	uxtb	r2, r2
 800b158:	4614      	mov	r4, r2
 800b15a:	887a      	ldrh	r2, [r7, #2]
 800b15c:	f002 0210 	and.w	r2, r2, #16
 800b160:	2a00      	cmp	r2, #0
 800b162:	bf14      	ite	ne
 800b164:	2201      	movne	r2, #1
 800b166:	2200      	moveq	r2, #0
 800b168:	b2d2      	uxtb	r2, r2
 800b16a:	9203      	str	r2, [sp, #12]
 800b16c:	9402      	str	r4, [sp, #8]
 800b16e:	9001      	str	r0, [sp, #4]
 800b170:	9100      	str	r1, [sp, #0]
 800b172:	68fa      	ldr	r2, [r7, #12]
 800b174:	4939      	ldr	r1, [pc, #228]	; (800b25c <CoAP_CreateResource+0x154>)
 800b176:	483a      	ldr	r0, [pc, #232]	; (800b260 <CoAP_CreateResource+0x158>)
 800b178:	f01f fe9c 	bl	802aeb4 <siprintf>
 800b17c:	4838      	ldr	r0, [pc, #224]	; (800b260 <CoAP_CreateResource+0x158>)
 800b17e:	f7fd f83b 	bl	80081f8 <hal_debug_puts>
		 !!(Options.AllowedMethods & RES_OPT_GET),
		 !!(Options.AllowedMethods & RES_OPT_POST),
		 !!(Options.AllowedMethods & RES_OPT_PUT),
		 !!(Options.AllowedMethods & RES_OPT_DELETE));

	if (Options.AllowedMethods == 0) {
 800b182:	887b      	ldrh	r3, [r7, #2]
 800b184:	2b00      	cmp	r3, #0
 800b186:	d10f      	bne.n	800b1a8 <CoAP_CreateResource+0xa0>
		ERROR("Can not create Resource that does not allow any method!");
 800b188:	4936      	ldr	r1, [pc, #216]	; (800b264 <CoAP_CreateResource+0x15c>)
 800b18a:	4835      	ldr	r0, [pc, #212]	; (800b260 <CoAP_CreateResource+0x158>)
 800b18c:	f01f fe92 	bl	802aeb4 <siprintf>
 800b190:	4833      	ldr	r0, [pc, #204]	; (800b260 <CoAP_CreateResource+0x158>)
 800b192:	f7fd f831 	bl	80081f8 <hal_debug_puts>
 800b196:	4934      	ldr	r1, [pc, #208]	; (800b268 <CoAP_CreateResource+0x160>)
 800b198:	4831      	ldr	r0, [pc, #196]	; (800b260 <CoAP_CreateResource+0x158>)
 800b19a:	f01f fe8b 	bl	802aeb4 <siprintf>
 800b19e:	4830      	ldr	r0, [pc, #192]	; (800b260 <CoAP_CreateResource+0x158>)
 800b1a0:	f7fd f82a 	bl	80081f8 <hal_debug_puts>
		return NULL;
 800b1a4:	2300      	movs	r3, #0
 800b1a6:	e052      	b.n	800b24e <CoAP_CreateResource+0x146>
	}

	CoAP_Res_t* pRes = (CoAP_Res_t*) (CoAP.api.malloc(sizeof(CoAP_Res_t)));
 800b1a8:	4b30      	ldr	r3, [pc, #192]	; (800b26c <CoAP_CreateResource+0x164>)
 800b1aa:	68db      	ldr	r3, [r3, #12]
 800b1ac:	2024      	movs	r0, #36	; 0x24
 800b1ae:	4798      	blx	r3
 800b1b0:	6178      	str	r0, [r7, #20]
	if (pRes == NULL) {
 800b1b2:	697b      	ldr	r3, [r7, #20]
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	d101      	bne.n	800b1bc <CoAP_CreateResource+0xb4>
		return NULL;
 800b1b8:	2300      	movs	r3, #0
 800b1ba:	e048      	b.n	800b24e <CoAP_CreateResource+0x146>
	}
	memset(pRes, 0, sizeof(CoAP_Res_t));
 800b1bc:	2224      	movs	r2, #36	; 0x24
 800b1be:	2100      	movs	r1, #0
 800b1c0:	6978      	ldr	r0, [r7, #20]
 800b1c2:	f01f ff99 	bl	802b0f8 <memset>

	pRes->pListObservers = NULL;
 800b1c6:	697b      	ldr	r3, [r7, #20]
 800b1c8:	2200      	movs	r2, #0
 800b1ca:	619a      	str	r2, [r3, #24]
	pRes->pUri = NULL;
 800b1cc:	697b      	ldr	r3, [r7, #20]
 800b1ce:	2200      	movs	r2, #0
 800b1d0:	615a      	str	r2, [r3, #20]
	pRes->next = NULL;
 800b1d2:	697b      	ldr	r3, [r7, #20]
 800b1d4:	2200      	movs	r2, #0
 800b1d6:	601a      	str	r2, [r3, #0]

	pRes->Options = Options;
 800b1d8:	697b      	ldr	r3, [r7, #20]
 800b1da:	330c      	adds	r3, #12
 800b1dc:	463a      	mov	r2, r7
 800b1de:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b1e2:	6018      	str	r0, [r3, #0]
 800b1e4:	3304      	adds	r3, #4
 800b1e6:	8019      	strh	r1, [r3, #0]

	if (Descr != NULL && *Descr != '\0') {
 800b1e8:	68bb      	ldr	r3, [r7, #8]
 800b1ea:	2b00      	cmp	r3, #0
 800b1ec:	d016      	beq.n	800b21c <CoAP_CreateResource+0x114>
 800b1ee:	68bb      	ldr	r3, [r7, #8]
 800b1f0:	781b      	ldrb	r3, [r3, #0]
 800b1f2:	2b00      	cmp	r3, #0
 800b1f4:	d012      	beq.n	800b21c <CoAP_CreateResource+0x114>
		pRes->pDescription = (char*) (CoAP.api.malloc(sizeof(char) * (coap_strlen(Descr) + 1)));
 800b1f6:	4b1d      	ldr	r3, [pc, #116]	; (800b26c <CoAP_CreateResource+0x164>)
 800b1f8:	68dc      	ldr	r4, [r3, #12]
 800b1fa:	68b8      	ldr	r0, [r7, #8]
 800b1fc:	f7f5 f810 	bl	8000220 <strlen>
 800b200:	4603      	mov	r3, r0
 800b202:	3301      	adds	r3, #1
 800b204:	4618      	mov	r0, r3
 800b206:	47a0      	blx	r4
 800b208:	4602      	mov	r2, r0
 800b20a:	697b      	ldr	r3, [r7, #20]
 800b20c:	605a      	str	r2, [r3, #4]
		coap_strcpy(pRes->pDescription, Descr);
 800b20e:	697b      	ldr	r3, [r7, #20]
 800b210:	685b      	ldr	r3, [r3, #4]
 800b212:	68b9      	ldr	r1, [r7, #8]
 800b214:	4618      	mov	r0, r3
 800b216:	f020 f806 	bl	802b226 <strcpy>
 800b21a:	e002      	b.n	800b222 <CoAP_CreateResource+0x11a>
	} else {
		pRes->pDescription = NULL;
 800b21c:	697b      	ldr	r3, [r7, #20]
 800b21e:	2200      	movs	r2, #0
 800b220:	605a      	str	r2, [r3, #4]
	}

	CoAP_AppendUriOptionsFromString(&(pRes->pUri), Uri);
 800b222:	697b      	ldr	r3, [r7, #20]
 800b224:	3314      	adds	r3, #20
 800b226:	68f9      	ldr	r1, [r7, #12]
 800b228:	4618      	mov	r0, r3
 800b22a:	f000 fe77 	bl	800bf1c <CoAP_AppendUriOptionsFromString>

	pRes->Handler = pHandlerFkt;
 800b22e:	697b      	ldr	r3, [r7, #20]
 800b230:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b232:	61da      	str	r2, [r3, #28]
	pRes->Notifier = pNotifierFkt;
 800b234:	697b      	ldr	r3, [r7, #20]
 800b236:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b238:	621a      	str	r2, [r3, #32]

	CoAP_AppendResourceToList(&pResList, pRes);
 800b23a:	6979      	ldr	r1, [r7, #20]
 800b23c:	480c      	ldr	r0, [pc, #48]	; (800b270 <CoAP_CreateResource+0x168>)
 800b23e:	f7ff ff0d 	bl	800b05c <CoAP_AppendResourceToList>

	ResListMembers++;
 800b242:	4b0c      	ldr	r3, [pc, #48]	; (800b274 <CoAP_CreateResource+0x16c>)
 800b244:	681b      	ldr	r3, [r3, #0]
 800b246:	3301      	adds	r3, #1
 800b248:	4a0a      	ldr	r2, [pc, #40]	; (800b274 <CoAP_CreateResource+0x16c>)
 800b24a:	6013      	str	r3, [r2, #0]

	return pRes;
 800b24c:	697b      	ldr	r3, [r7, #20]
}
 800b24e:	4618      	mov	r0, r3
 800b250:	371c      	adds	r7, #28
 800b252:	46bd      	mov	sp, r7
 800b254:	bd90      	pop	{r4, r7, pc}
 800b256:	bf00      	nop
 800b258:	0802d824 	.word	0x0802d824
 800b25c:	0802d828 	.word	0x0802d828
 800b260:	20000b54 	.word	0x20000b54
 800b264:	0802d860 	.word	0x0802d860
 800b268:	0802d86c 	.word	0x0802d86c
 800b26c:	20000b0c 	.word	0x20000b0c
 800b270:	20000b4c 	.word	0x20000b4c
 800b274:	20000b50 	.word	0x20000b50

0800b278 <CoAP_RemoveObserverFromResource>:
		pRes = pRes->next;
	}
}


CoAP_Result_t _rom CoAP_RemoveObserverFromResource(CoAP_Observer_t** pObserverList, SocketHandle_t socketHandle, NetEp_t* pRemoteEP, CoAP_Token_t token) {
 800b278:	b082      	sub	sp, #8
 800b27a:	b580      	push	{r7, lr}
 800b27c:	b088      	sub	sp, #32
 800b27e:	af02      	add	r7, sp, #8
 800b280:	60f8      	str	r0, [r7, #12]
 800b282:	60b9      	str	r1, [r7, #8]
 800b284:	607a      	str	r2, [r7, #4]
 800b286:	627b      	str	r3, [r7, #36]	; 0x24
	CoAP_Observer_t* pObserver = *pObserverList;
 800b288:	68fb      	ldr	r3, [r7, #12]
 800b28a:	681b      	ldr	r3, [r3, #0]
 800b28c:	617b      	str	r3, [r7, #20]

	while (pObserver != NULL) { //found right existing observation -> delete it
 800b28e:	e030      	b.n	800b2f2 <CoAP_RemoveObserverFromResource+0x7a>

		if (CoAP_TokenEqual(token, pObserver->Token) && socketHandle == pObserver->socketHandle && EpAreEqual(pRemoteEP, &(pObserver->Ep))) {
 800b290:	697b      	ldr	r3, [r7, #20]
 800b292:	f8d3 201d 	ldr.w	r2, [r3, #29]
 800b296:	4611      	mov	r1, r2
 800b298:	466a      	mov	r2, sp
 800b29a:	3321      	adds	r3, #33	; 0x21
 800b29c:	6818      	ldr	r0, [r3, #0]
 800b29e:	6010      	str	r0, [r2, #0]
 800b2a0:	791b      	ldrb	r3, [r3, #4]
 800b2a2:	7113      	strb	r3, [r2, #4]
 800b2a4:	460b      	mov	r3, r1
 800b2a6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800b2aa:	ca07      	ldmia	r2, {r0, r1, r2}
 800b2ac:	f7fe f8fc 	bl	80094a8 <CoAP_TokenEqual>
 800b2b0:	4603      	mov	r3, r0
 800b2b2:	2b00      	cmp	r3, #0
 800b2b4:	d01a      	beq.n	800b2ec <CoAP_RemoveObserverFromResource+0x74>
 800b2b6:	697b      	ldr	r3, [r7, #20]
 800b2b8:	699b      	ldr	r3, [r3, #24]
 800b2ba:	68ba      	ldr	r2, [r7, #8]
 800b2bc:	429a      	cmp	r2, r3
 800b2be:	d115      	bne.n	800b2ec <CoAP_RemoveObserverFromResource+0x74>
 800b2c0:	697b      	ldr	r3, [r7, #20]
 800b2c2:	4619      	mov	r1, r3
 800b2c4:	6878      	ldr	r0, [r7, #4]
 800b2c6:	f000 fa29 	bl	800b71c <EpAreEqual>
 800b2ca:	4603      	mov	r3, r0
 800b2cc:	2b00      	cmp	r3, #0
 800b2ce:	d00d      	beq.n	800b2ec <CoAP_RemoveObserverFromResource+0x74>

			INFO("- (!) Unlinking observer from resource\r\n");
 800b2d0:	490d      	ldr	r1, [pc, #52]	; (800b308 <CoAP_RemoveObserverFromResource+0x90>)
 800b2d2:	480e      	ldr	r0, [pc, #56]	; (800b30c <CoAP_RemoveObserverFromResource+0x94>)
 800b2d4:	f01f fdee 	bl	802aeb4 <siprintf>
 800b2d8:	480c      	ldr	r0, [pc, #48]	; (800b30c <CoAP_RemoveObserverFromResource+0x94>)
 800b2da:	f7fc ff8d 	bl	80081f8 <hal_debug_puts>
			CoAP_UnlinkObserverFromList(pObserverList, pObserver, true);
 800b2de:	2201      	movs	r2, #1
 800b2e0:	6979      	ldr	r1, [r7, #20]
 800b2e2:	68f8      	ldr	r0, [r7, #12]
 800b2e4:	f000 fd90 	bl	800be08 <CoAP_UnlinkObserverFromList>
			return COAP_REMOVED;
 800b2e8:	2317      	movs	r3, #23
 800b2ea:	e006      	b.n	800b2fa <CoAP_RemoveObserverFromResource+0x82>

		}
		pObserver = pObserver->next;
 800b2ec:	697b      	ldr	r3, [r7, #20]
 800b2ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2f0:	617b      	str	r3, [r7, #20]
	while (pObserver != NULL) { //found right existing observation -> delete it
 800b2f2:	697b      	ldr	r3, [r7, #20]
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d1cb      	bne.n	800b290 <CoAP_RemoveObserverFromResource+0x18>
	}
	return COAP_ERR_NOT_FOUND;
 800b2f8:	230f      	movs	r3, #15
}
 800b2fa:	4618      	mov	r0, r3
 800b2fc:	3718      	adds	r7, #24
 800b2fe:	46bd      	mov	sp, r7
 800b300:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b304:	b002      	add	sp, #8
 800b306:	4770      	bx	lr
 800b308:	0802d8e0 	.word	0x0802d8e0
 800b30c:	20000b54 	.word	0x20000b54

0800b310 <ResultToString>:
	default:
		return "UNKNOWN_STATE";
	}
}

char* ResultToString(CoAP_Result_t res) {
 800b310:	b480      	push	{r7}
 800b312:	b083      	sub	sp, #12
 800b314:	af00      	add	r7, sp, #0
 800b316:	4603      	mov	r3, r0
 800b318:	71fb      	strb	r3, [r7, #7]
	switch (res) {
 800b31a:	79fb      	ldrb	r3, [r7, #7]
 800b31c:	2b1e      	cmp	r3, #30
 800b31e:	d87f      	bhi.n	800b420 <ResultToString+0x110>
 800b320:	a201      	add	r2, pc, #4	; (adr r2, 800b328 <ResultToString+0x18>)
 800b322:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b326:	bf00      	nop
 800b328:	0800b3a5 	.word	0x0800b3a5
 800b32c:	0800b3a9 	.word	0x0800b3a9
 800b330:	0800b3ad 	.word	0x0800b3ad
 800b334:	0800b3b1 	.word	0x0800b3b1
 800b338:	0800b3b5 	.word	0x0800b3b5
 800b33c:	0800b3b9 	.word	0x0800b3b9
 800b340:	0800b3bd 	.word	0x0800b3bd
 800b344:	0800b3c1 	.word	0x0800b3c1
 800b348:	0800b3c5 	.word	0x0800b3c5
 800b34c:	0800b3c9 	.word	0x0800b3c9
 800b350:	0800b3cd 	.word	0x0800b3cd
 800b354:	0800b3d1 	.word	0x0800b3d1
 800b358:	0800b3d5 	.word	0x0800b3d5
 800b35c:	0800b3d9 	.word	0x0800b3d9
 800b360:	0800b3dd 	.word	0x0800b3dd
 800b364:	0800b3e1 	.word	0x0800b3e1
 800b368:	0800b3e5 	.word	0x0800b3e5
 800b36c:	0800b3e9 	.word	0x0800b3e9
 800b370:	0800b3ed 	.word	0x0800b3ed
 800b374:	0800b3f1 	.word	0x0800b3f1
 800b378:	0800b3f5 	.word	0x0800b3f5
 800b37c:	0800b3f9 	.word	0x0800b3f9
 800b380:	0800b3fd 	.word	0x0800b3fd
 800b384:	0800b401 	.word	0x0800b401
 800b388:	0800b405 	.word	0x0800b405
 800b38c:	0800b409 	.word	0x0800b409
 800b390:	0800b40d 	.word	0x0800b40d
 800b394:	0800b411 	.word	0x0800b411
 800b398:	0800b415 	.word	0x0800b415
 800b39c:	0800b419 	.word	0x0800b419
 800b3a0:	0800b41d 	.word	0x0800b41d
	case COAP_OK:
		return "COAP_OK";
 800b3a4:	4b21      	ldr	r3, [pc, #132]	; (800b42c <ResultToString+0x11c>)
 800b3a6:	e03c      	b.n	800b422 <ResultToString+0x112>
	case COAP_NOT_FOUND:
		return "COAP_NOT_FOUND";
 800b3a8:	4b21      	ldr	r3, [pc, #132]	; (800b430 <ResultToString+0x120>)
 800b3aa:	e03a      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_DATAGRAM_TOO_SHORT:
		return "COAP_PARSE_DATAGRAM_TOO_SHORT";
 800b3ac:	4b21      	ldr	r3, [pc, #132]	; (800b434 <ResultToString+0x124>)
 800b3ae:	e038      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_UNKOWN_COAP_VERSION:
		return "COAP_PARSE_UNKOWN_COAP_VERSION";
 800b3b0:	4b21      	ldr	r3, [pc, #132]	; (800b438 <ResultToString+0x128>)
 800b3b2:	e036      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_MESSAGE_FORMAT_ERROR:
		return "COAP_PARSE_MESSAGE_FORMAT_ERROR";
 800b3b4:	4b21      	ldr	r3, [pc, #132]	; (800b43c <ResultToString+0x12c>)
 800b3b6:	e034      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_TOO_MANY_OPTIONS:
		return "COAP_PARSE_TOO_MANY_OPTIONS";
 800b3b8:	4b21      	ldr	r3, [pc, #132]	; (800b440 <ResultToString+0x130>)
 800b3ba:	e032      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_TOO_LONG_OPTION:
		return "COAP_PARSE_TOO_LONG_OPTION";
 800b3bc:	4b21      	ldr	r3, [pc, #132]	; (800b444 <ResultToString+0x134>)
 800b3be:	e030      	b.n	800b422 <ResultToString+0x112>
	case COAP_PARSE_TOO_MUCH_PAYLOAD:
		return "COAP_PARSE_TOO_MUCH_PAYLOAD";
 800b3c0:	4b21      	ldr	r3, [pc, #132]	; (800b448 <ResultToString+0x138>)
 800b3c2:	e02e      	b.n	800b422 <ResultToString+0x112>
	case COAP_PACK_TOO_MANY_OPTIONS:
		return "COAP_PACK_TOO_MANY_OPTIONS";
 800b3c4:	4b21      	ldr	r3, [pc, #132]	; (800b44c <ResultToString+0x13c>)
 800b3c6:	e02c      	b.n	800b422 <ResultToString+0x112>
	case COAP_PACK_TOO_LONG_OPTION:
		return "COAP_PACK_TOO_LONG_OPTION";
 800b3c8:	4b21      	ldr	r3, [pc, #132]	; (800b450 <ResultToString+0x140>)
 800b3ca:	e02a      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_ARGUMENT:
		return "COAP_ERR_ARGUMENT";
 800b3cc:	4b21      	ldr	r3, [pc, #132]	; (800b454 <ResultToString+0x144>)
 800b3ce:	e028      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_SOCKET:
		return "COAP_ERR_SOCKET";
 800b3d0:	4b21      	ldr	r3, [pc, #132]	; (800b458 <ResultToString+0x148>)
 800b3d2:	e026      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_NETWORK:
		return "COAP_ERR_NETWORK";
 800b3d4:	4b21      	ldr	r3, [pc, #132]	; (800b45c <ResultToString+0x14c>)
 800b3d6:	e024      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_OUT_OF_MEMORY:
		return "COAP_ERR_OUT_OF_MEMORY";
 800b3d8:	4b21      	ldr	r3, [pc, #132]	; (800b460 <ResultToString+0x150>)
 800b3da:	e022      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_TOO_LONG_URI_PATH:
		return "COAP_ERR_TOO_LONG_URI_PATH";
 800b3dc:	4b21      	ldr	r3, [pc, #132]	; (800b464 <ResultToString+0x154>)
 800b3de:	e020      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_NOT_FOUND:
		return "COAP_ERR_NOT_FOUND";
 800b3e0:	4b21      	ldr	r3, [pc, #132]	; (800b468 <ResultToString+0x158>)
 800b3e2:	e01e      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_WRONG_OPTION:
		return "COAP_ERR_WRONG_OPTION";
 800b3e4:	4b21      	ldr	r3, [pc, #132]	; (800b46c <ResultToString+0x15c>)
 800b3e6:	e01c      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_EXISTING:
		return "COAP_ERR_EXISTING";
 800b3e8:	4b21      	ldr	r3, [pc, #132]	; (800b470 <ResultToString+0x160>)
 800b3ea:	e01a      	b.n	800b422 <ResultToString+0x112>
	case COAP_TRUE:
		return "COAP_TRUE";
 800b3ec:	4b21      	ldr	r3, [pc, #132]	; (800b474 <ResultToString+0x164>)
 800b3ee:	e018      	b.n	800b422 <ResultToString+0x112>
	case COAP_FALSE:
		return "COAP_FALSE";
 800b3f0:	4b21      	ldr	r3, [pc, #132]	; (800b478 <ResultToString+0x168>)
 800b3f2:	e016      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_WRONG_REQUEST:
		return "COAP_ERR_WRONG_REQUEST";
 800b3f4:	4b21      	ldr	r3, [pc, #132]	; (800b47c <ResultToString+0x16c>)
 800b3f6:	e014      	b.n	800b422 <ResultToString+0x112>
	case COAP_BAD_OPTION_VAL:
		return "COAP_BAD_OPTION_VAL";
 800b3f8:	4b21      	ldr	r3, [pc, #132]	; (800b480 <ResultToString+0x170>)
 800b3fa:	e012      	b.n	800b422 <ResultToString+0x112>
	case COAP_BAD_OPTION_LEN:
		return "COAP_BAD_OPTION_LEN";
 800b3fc:	4b21      	ldr	r3, [pc, #132]	; (800b484 <ResultToString+0x174>)
 800b3fe:	e010      	b.n	800b422 <ResultToString+0x112>
	case COAP_REMOVED:
		return "COAP_REMOVED";
 800b400:	4b21      	ldr	r3, [pc, #132]	; (800b488 <ResultToString+0x178>)
 800b402:	e00e      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_UNKNOWN:
		return "COAP_ERR_UNKNOWN";
 800b404:	4b21      	ldr	r3, [pc, #132]	; (800b48c <ResultToString+0x17c>)
 800b406:	e00c      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_REMOTE_RST:
		return "COAP_ERR_REMOTE_RST";
 800b408:	4b21      	ldr	r3, [pc, #132]	; (800b490 <ResultToString+0x180>)
 800b40a:	e00a      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_OUT_OF_ATTEMPTS:
		return "COAP_ERR_OUT_OF_ATTEMPTS";
 800b40c:	4b21      	ldr	r3, [pc, #132]	; (800b494 <ResultToString+0x184>)
 800b40e:	e008      	b.n	800b422 <ResultToString+0x112>
	case COAP_ERR_TIMEOUT:
		return "COAP_ERR_TIMEOUT";
 800b410:	4b21      	ldr	r3, [pc, #132]	; (800b498 <ResultToString+0x188>)
 800b412:	e006      	b.n	800b422 <ResultToString+0x112>
	case COAP_WAITING:
		return "COAP_WAITING";
 800b414:	4b21      	ldr	r3, [pc, #132]	; (800b49c <ResultToString+0x18c>)
 800b416:	e004      	b.n	800b422 <ResultToString+0x112>
	case COAP_HOLDING_BACK:
		return "COAP_HOLDING_BACK";
 800b418:	4b21      	ldr	r3, [pc, #132]	; (800b4a0 <ResultToString+0x190>)
 800b41a:	e002      	b.n	800b422 <ResultToString+0x112>
	case COAP_RETRY:
		return "COAP_RETRY";
 800b41c:	4b21      	ldr	r3, [pc, #132]	; (800b4a4 <ResultToString+0x194>)
 800b41e:	e000      	b.n	800b422 <ResultToString+0x112>
	default:
		return "UNKNOWN_RESULT";
 800b420:	4b21      	ldr	r3, [pc, #132]	; (800b4a8 <ResultToString+0x198>)
	}
}
 800b422:	4618      	mov	r0, r3
 800b424:	370c      	adds	r7, #12
 800b426:	46bd      	mov	sp, r7
 800b428:	bc80      	pop	{r7}
 800b42a:	4770      	bx	lr
 800b42c:	0802da1c 	.word	0x0802da1c
 800b430:	0802da24 	.word	0x0802da24
 800b434:	0802da34 	.word	0x0802da34
 800b438:	0802da54 	.word	0x0802da54
 800b43c:	0802da74 	.word	0x0802da74
 800b440:	0802da94 	.word	0x0802da94
 800b444:	0802dab0 	.word	0x0802dab0
 800b448:	0802dacc 	.word	0x0802dacc
 800b44c:	0802dae8 	.word	0x0802dae8
 800b450:	0802db04 	.word	0x0802db04
 800b454:	0802db20 	.word	0x0802db20
 800b458:	0802db34 	.word	0x0802db34
 800b45c:	0802db44 	.word	0x0802db44
 800b460:	0802db58 	.word	0x0802db58
 800b464:	0802db70 	.word	0x0802db70
 800b468:	0802db8c 	.word	0x0802db8c
 800b46c:	0802dba0 	.word	0x0802dba0
 800b470:	0802dbb8 	.word	0x0802dbb8
 800b474:	0802dbcc 	.word	0x0802dbcc
 800b478:	0802dbd8 	.word	0x0802dbd8
 800b47c:	0802dbe4 	.word	0x0802dbe4
 800b480:	0802dbfc 	.word	0x0802dbfc
 800b484:	0802dc10 	.word	0x0802dc10
 800b488:	0802dc24 	.word	0x0802dc24
 800b48c:	0802dc34 	.word	0x0802dc34
 800b490:	0802dc48 	.word	0x0802dc48
 800b494:	0802dc5c 	.word	0x0802dc5c
 800b498:	0802dc78 	.word	0x0802dc78
 800b49c:	0802dc8c 	.word	0x0802dc8c
 800b4a0:	0802dc9c 	.word	0x0802dc9c
 800b4a4:	0802dcb0 	.word	0x0802dcb0
 800b4a8:	0802dcbc 	.word	0x0802dcbc

0800b4ac <PrintEndpoint>:
	default:
		return "UNKNOWN_STATE";
	}
}

void _rom PrintEndpoint(const NetEp_t* ep) {
 800b4ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b4ae:	b097      	sub	sp, #92	; 0x5c
 800b4b0:	af0e      	add	r7, sp, #56	; 0x38
 800b4b2:	61f8      	str	r0, [r7, #28]
	switch (ep->NetType) {
 800b4b4:	69fb      	ldr	r3, [r7, #28]
 800b4b6:	781b      	ldrb	r3, [r3, #0]
 800b4b8:	2b04      	cmp	r3, #4
 800b4ba:	f200 80a2 	bhi.w	800b602 <PrintEndpoint+0x156>
 800b4be:	a201      	add	r2, pc, #4	; (adr r2, 800b4c4 <PrintEndpoint+0x18>)
 800b4c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b4c4:	0800b4d9 	.word	0x0800b4d9
 800b4c8:	0800b4e9 	.word	0x0800b4e9
 800b4cc:	0800b5a7 	.word	0x0800b5a7
 800b4d0:	0800b5dd 	.word	0x0800b5dd
 800b4d4:	0800b5ed 	.word	0x0800b5ed
	case EP_NONE:
		INFO("NONE");
 800b4d8:	4951      	ldr	r1, [pc, #324]	; (800b620 <PrintEndpoint+0x174>)
 800b4da:	4852      	ldr	r0, [pc, #328]	; (800b624 <PrintEndpoint+0x178>)
 800b4dc:	f01f fcea 	bl	802aeb4 <siprintf>
 800b4e0:	4850      	ldr	r0, [pc, #320]	; (800b624 <PrintEndpoint+0x178>)
 800b4e2:	f7fc fe89 	bl	80081f8 <hal_debug_puts>
		break;
 800b4e6:	e097      	b.n	800b618 <PrintEndpoint+0x16c>
	case IPV6:
		INFO("IPv6, [");
 800b4e8:	494f      	ldr	r1, [pc, #316]	; (800b628 <PrintEndpoint+0x17c>)
 800b4ea:	484e      	ldr	r0, [pc, #312]	; (800b624 <PrintEndpoint+0x178>)
 800b4ec:	f01f fce2 	bl	802aeb4 <siprintf>
 800b4f0:	484c      	ldr	r0, [pc, #304]	; (800b624 <PrintEndpoint+0x178>)
 800b4f2:	f7fc fe81 	bl	80081f8 <hal_debug_puts>
		PRINT_IPV6(ep->NetAddr.IPv6);
 800b4f6:	69fb      	ldr	r3, [r7, #28]
 800b4f8:	791b      	ldrb	r3, [r3, #4]
 800b4fa:	469c      	mov	ip, r3
 800b4fc:	69fb      	ldr	r3, [r7, #28]
 800b4fe:	795b      	ldrb	r3, [r3, #5]
 800b500:	469e      	mov	lr, r3
 800b502:	69fb      	ldr	r3, [r7, #28]
 800b504:	799b      	ldrb	r3, [r3, #6]
 800b506:	4618      	mov	r0, r3
 800b508:	69fb      	ldr	r3, [r7, #28]
 800b50a:	79db      	ldrb	r3, [r3, #7]
 800b50c:	461c      	mov	r4, r3
 800b50e:	69fb      	ldr	r3, [r7, #28]
 800b510:	7a1b      	ldrb	r3, [r3, #8]
 800b512:	461d      	mov	r5, r3
 800b514:	69fb      	ldr	r3, [r7, #28]
 800b516:	7a5b      	ldrb	r3, [r3, #9]
 800b518:	461e      	mov	r6, r3
 800b51a:	69fb      	ldr	r3, [r7, #28]
 800b51c:	7a9b      	ldrb	r3, [r3, #10]
 800b51e:	61bb      	str	r3, [r7, #24]
 800b520:	69fb      	ldr	r3, [r7, #28]
 800b522:	7adb      	ldrb	r3, [r3, #11]
 800b524:	617b      	str	r3, [r7, #20]
 800b526:	69fb      	ldr	r3, [r7, #28]
 800b528:	7b1b      	ldrb	r3, [r3, #12]
 800b52a:	613b      	str	r3, [r7, #16]
 800b52c:	69fb      	ldr	r3, [r7, #28]
 800b52e:	7b5b      	ldrb	r3, [r3, #13]
 800b530:	60fb      	str	r3, [r7, #12]
 800b532:	69fb      	ldr	r3, [r7, #28]
 800b534:	7b9b      	ldrb	r3, [r3, #14]
 800b536:	60bb      	str	r3, [r7, #8]
 800b538:	69fb      	ldr	r3, [r7, #28]
 800b53a:	7bdb      	ldrb	r3, [r3, #15]
 800b53c:	607b      	str	r3, [r7, #4]
 800b53e:	69fb      	ldr	r3, [r7, #28]
 800b540:	7c1b      	ldrb	r3, [r3, #16]
 800b542:	603b      	str	r3, [r7, #0]
 800b544:	69fb      	ldr	r3, [r7, #28]
 800b546:	7c5b      	ldrb	r3, [r3, #17]
 800b548:	4619      	mov	r1, r3
 800b54a:	69fb      	ldr	r3, [r7, #28]
 800b54c:	7c9b      	ldrb	r3, [r3, #18]
 800b54e:	461a      	mov	r2, r3
 800b550:	69fb      	ldr	r3, [r7, #28]
 800b552:	7cdb      	ldrb	r3, [r3, #19]
 800b554:	930d      	str	r3, [sp, #52]	; 0x34
 800b556:	920c      	str	r2, [sp, #48]	; 0x30
 800b558:	910b      	str	r1, [sp, #44]	; 0x2c
 800b55a:	683a      	ldr	r2, [r7, #0]
 800b55c:	920a      	str	r2, [sp, #40]	; 0x28
 800b55e:	687a      	ldr	r2, [r7, #4]
 800b560:	9209      	str	r2, [sp, #36]	; 0x24
 800b562:	68ba      	ldr	r2, [r7, #8]
 800b564:	9208      	str	r2, [sp, #32]
 800b566:	68fa      	ldr	r2, [r7, #12]
 800b568:	9207      	str	r2, [sp, #28]
 800b56a:	693a      	ldr	r2, [r7, #16]
 800b56c:	9206      	str	r2, [sp, #24]
 800b56e:	697a      	ldr	r2, [r7, #20]
 800b570:	9205      	str	r2, [sp, #20]
 800b572:	69bb      	ldr	r3, [r7, #24]
 800b574:	9304      	str	r3, [sp, #16]
 800b576:	9603      	str	r6, [sp, #12]
 800b578:	9502      	str	r5, [sp, #8]
 800b57a:	9401      	str	r4, [sp, #4]
 800b57c:	9000      	str	r0, [sp, #0]
 800b57e:	4673      	mov	r3, lr
 800b580:	4662      	mov	r2, ip
 800b582:	492a      	ldr	r1, [pc, #168]	; (800b62c <PrintEndpoint+0x180>)
 800b584:	4827      	ldr	r0, [pc, #156]	; (800b624 <PrintEndpoint+0x178>)
 800b586:	f01f fc95 	bl	802aeb4 <siprintf>
 800b58a:	4826      	ldr	r0, [pc, #152]	; (800b624 <PrintEndpoint+0x178>)
 800b58c:	f7fc fe34 	bl	80081f8 <hal_debug_puts>
		INFO("]: %u", ep->NetPort);
 800b590:	69fb      	ldr	r3, [r7, #28]
 800b592:	8a9b      	ldrh	r3, [r3, #20]
 800b594:	461a      	mov	r2, r3
 800b596:	4926      	ldr	r1, [pc, #152]	; (800b630 <PrintEndpoint+0x184>)
 800b598:	4822      	ldr	r0, [pc, #136]	; (800b624 <PrintEndpoint+0x178>)
 800b59a:	f01f fc8b 	bl	802aeb4 <siprintf>
 800b59e:	4821      	ldr	r0, [pc, #132]	; (800b624 <PrintEndpoint+0x178>)
 800b5a0:	f7fc fe2a 	bl	80081f8 <hal_debug_puts>
		break;
 800b5a4:	e038      	b.n	800b618 <PrintEndpoint+0x16c>
	case IPV4:
		INFO("IPv4, %d.%d.%d.%d:%d",
 800b5a6:	69fb      	ldr	r3, [r7, #28]
 800b5a8:	791b      	ldrb	r3, [r3, #4]
 800b5aa:	4618      	mov	r0, r3
 800b5ac:	69fb      	ldr	r3, [r7, #28]
 800b5ae:	795b      	ldrb	r3, [r3, #5]
 800b5b0:	461c      	mov	r4, r3
 800b5b2:	69fb      	ldr	r3, [r7, #28]
 800b5b4:	799b      	ldrb	r3, [r3, #6]
 800b5b6:	461a      	mov	r2, r3
 800b5b8:	69fb      	ldr	r3, [r7, #28]
 800b5ba:	79db      	ldrb	r3, [r3, #7]
 800b5bc:	4619      	mov	r1, r3
 800b5be:	69fb      	ldr	r3, [r7, #28]
 800b5c0:	8a9b      	ldrh	r3, [r3, #20]
 800b5c2:	9302      	str	r3, [sp, #8]
 800b5c4:	9101      	str	r1, [sp, #4]
 800b5c6:	9200      	str	r2, [sp, #0]
 800b5c8:	4623      	mov	r3, r4
 800b5ca:	4602      	mov	r2, r0
 800b5cc:	4919      	ldr	r1, [pc, #100]	; (800b634 <PrintEndpoint+0x188>)
 800b5ce:	4815      	ldr	r0, [pc, #84]	; (800b624 <PrintEndpoint+0x178>)
 800b5d0:	f01f fc70 	bl	802aeb4 <siprintf>
 800b5d4:	4813      	ldr	r0, [pc, #76]	; (800b624 <PrintEndpoint+0x178>)
 800b5d6:	f7fc fe0f 	bl	80081f8 <hal_debug_puts>
				ep->NetAddr.IPv4.u8[0], ep->NetAddr.IPv4.u8[1], ep->NetAddr.IPv4.u8[2], ep->NetAddr.IPv4.u8[3],
				ep->NetPort);
		break;
 800b5da:	e01d      	b.n	800b618 <PrintEndpoint+0x16c>
	case BTLE:
		INFO("BTLE");
 800b5dc:	4916      	ldr	r1, [pc, #88]	; (800b638 <PrintEndpoint+0x18c>)
 800b5de:	4811      	ldr	r0, [pc, #68]	; (800b624 <PrintEndpoint+0x178>)
 800b5e0:	f01f fc68 	bl	802aeb4 <siprintf>
 800b5e4:	480f      	ldr	r0, [pc, #60]	; (800b624 <PrintEndpoint+0x178>)
 800b5e6:	f7fc fe07 	bl	80081f8 <hal_debug_puts>
		break;
 800b5ea:	e015      	b.n	800b618 <PrintEndpoint+0x16c>
	case UART:
		INFO("UART, COM%d", ep->NetAddr.Uart.ComPortID);
 800b5ec:	69fb      	ldr	r3, [r7, #28]
 800b5ee:	791b      	ldrb	r3, [r3, #4]
 800b5f0:	461a      	mov	r2, r3
 800b5f2:	4912      	ldr	r1, [pc, #72]	; (800b63c <PrintEndpoint+0x190>)
 800b5f4:	480b      	ldr	r0, [pc, #44]	; (800b624 <PrintEndpoint+0x178>)
 800b5f6:	f01f fc5d 	bl	802aeb4 <siprintf>
 800b5fa:	480a      	ldr	r0, [pc, #40]	; (800b624 <PrintEndpoint+0x178>)
 800b5fc:	f7fc fdfc 	bl	80081f8 <hal_debug_puts>
		break;
 800b600:	e00a      	b.n	800b618 <PrintEndpoint+0x16c>
	default:
		INFO("UNKNOWN_EP (%d)", ep->NetType);
 800b602:	69fb      	ldr	r3, [r7, #28]
 800b604:	781b      	ldrb	r3, [r3, #0]
 800b606:	461a      	mov	r2, r3
 800b608:	490d      	ldr	r1, [pc, #52]	; (800b640 <PrintEndpoint+0x194>)
 800b60a:	4806      	ldr	r0, [pc, #24]	; (800b624 <PrintEndpoint+0x178>)
 800b60c:	f01f fc52 	bl	802aeb4 <siprintf>
 800b610:	4804      	ldr	r0, [pc, #16]	; (800b624 <PrintEndpoint+0x178>)
 800b612:	f7fc fdf1 	bl	80081f8 <hal_debug_puts>
	}
}
 800b616:	bf00      	nop
 800b618:	bf00      	nop
 800b61a:	3724      	adds	r7, #36	; 0x24
 800b61c:	46bd      	mov	sp, r7
 800b61e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b620:	0802dcdc 	.word	0x0802dcdc
 800b624:	20000b54 	.word	0x20000b54
 800b628:	0802dce4 	.word	0x0802dce4
 800b62c:	0802dcec 	.word	0x0802dcec
 800b630:	0802dd34 	.word	0x0802dd34
 800b634:	0802dd3c 	.word	0x0802dd3c
 800b638:	0802dd54 	.word	0x0802dd54
 800b63c:	0802dd5c 	.word	0x0802dd5c
 800b640:	0802dd68 	.word	0x0802dd68

0800b644 <debugPuts_Empty>:

#include "liblobaro_coap.h"
#include "coap.h"
#include "coap_main.h"

void debugPuts_Empty(const char* s) {
 800b644:	b480      	push	{r7}
 800b646:	b083      	sub	sp, #12
 800b648:	af00      	add	r7, sp, #0
 800b64a:	6078      	str	r0, [r7, #4]
	(void) s;  // unused
}
 800b64c:	bf00      	nop
 800b64e:	370c      	adds	r7, #12
 800b650:	46bd      	mov	sp, r7
 800b652:	bc80      	pop	{r7}
 800b654:	4770      	bx	lr
	...

0800b658 <CoAP_Init>:

void CoAP_Init(CoAP_API_t api) {
 800b658:	b084      	sub	sp, #16
 800b65a:	b5b0      	push	{r4, r5, r7, lr}
 800b65c:	af00      	add	r7, sp, #0
 800b65e:	f107 0410 	add.w	r4, r7, #16
 800b662:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	CoAP.api = api;
 800b666:	4b24      	ldr	r3, [pc, #144]	; (800b6f8 <CoAP_Init+0xa0>)
 800b668:	1d1c      	adds	r4, r3, #4
 800b66a:	f107 0510 	add.w	r5, r7, #16
 800b66e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b670:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b672:	682b      	ldr	r3, [r5, #0]
 800b674:	6023      	str	r3, [r4, #0]

	CoAP_InitIds();
 800b676:	f7fe fbed 	bl	8009e54 <CoAP_InitIds>

	// To make the tests stable, we should provide proper log functions in future
	if (CoAP.api.debugPuts == NULL) {
 800b67a:	4b1f      	ldr	r3, [pc, #124]	; (800b6f8 <CoAP_Init+0xa0>)
 800b67c:	689b      	ldr	r3, [r3, #8]
 800b67e:	2b00      	cmp	r3, #0
 800b680:	d102      	bne.n	800b688 <CoAP_Init+0x30>
		CoAP.api.debugPuts = debugPuts_Empty;
 800b682:	4b1d      	ldr	r3, [pc, #116]	; (800b6f8 <CoAP_Init+0xa0>)
 800b684:	4a1d      	ldr	r2, [pc, #116]	; (800b6fc <CoAP_Init+0xa4>)
 800b686:	609a      	str	r2, [r3, #8]
#endif
#if DEBUG_RANDOM_DROP_OUTGOING_PERCENTAGE != 0
	INFO("\n\nWARNING!!!\n\n    DEBUG FEATURE, DROPPING %d%% OUTGOING MESSAGES ON PURPOSE!\n\n", DEBUG_RANDOM_DROP_OUTGOING_PERCENTAGE);
#endif

	INFO("CoAP_init!\r\n");
 800b688:	491d      	ldr	r1, [pc, #116]	; (800b700 <CoAP_Init+0xa8>)
 800b68a:	481e      	ldr	r0, [pc, #120]	; (800b704 <CoAP_Init+0xac>)
 800b68c:	f01f fc12 	bl	802aeb4 <siprintf>
 800b690:	481c      	ldr	r0, [pc, #112]	; (800b704 <CoAP_Init+0xac>)
 800b692:	f7fc fdb1 	bl	80081f8 <hal_debug_puts>
	INFO("CoAP Interaction size: %zu byte\r\n", sizeof(CoAP_Interaction_t));
 800b696:	2264      	movs	r2, #100	; 0x64
 800b698:	491b      	ldr	r1, [pc, #108]	; (800b708 <CoAP_Init+0xb0>)
 800b69a:	481a      	ldr	r0, [pc, #104]	; (800b704 <CoAP_Init+0xac>)
 800b69c:	f01f fc0a 	bl	802aeb4 <siprintf>
 800b6a0:	4818      	ldr	r0, [pc, #96]	; (800b704 <CoAP_Init+0xac>)
 800b6a2:	f7fc fda9 	bl	80081f8 <hal_debug_puts>
	INFO("CoAP_Res_t size: %zu byte\r\n", sizeof(CoAP_Res_t));
 800b6a6:	2224      	movs	r2, #36	; 0x24
 800b6a8:	4918      	ldr	r1, [pc, #96]	; (800b70c <CoAP_Init+0xb4>)
 800b6aa:	4816      	ldr	r0, [pc, #88]	; (800b704 <CoAP_Init+0xac>)
 800b6ac:	f01f fc02 	bl	802aeb4 <siprintf>
 800b6b0:	4814      	ldr	r0, [pc, #80]	; (800b704 <CoAP_Init+0xac>)
 800b6b2:	f7fc fda1 	bl	80081f8 <hal_debug_puts>
	INFO("CoAP_Message_t size: %zu byte\r\n", sizeof(CoAP_Message_t));
 800b6b6:	2224      	movs	r2, #36	; 0x24
 800b6b8:	4915      	ldr	r1, [pc, #84]	; (800b710 <CoAP_Init+0xb8>)
 800b6ba:	4812      	ldr	r0, [pc, #72]	; (800b704 <CoAP_Init+0xac>)
 800b6bc:	f01f fbfa 	bl	802aeb4 <siprintf>
 800b6c0:	4810      	ldr	r0, [pc, #64]	; (800b704 <CoAP_Init+0xac>)
 800b6c2:	f7fc fd99 	bl	80081f8 <hal_debug_puts>
	INFO("CoAP_option_t size: %zu byte\r\n", sizeof(CoAP_option_t));
 800b6c6:	220c      	movs	r2, #12
 800b6c8:	4912      	ldr	r1, [pc, #72]	; (800b714 <CoAP_Init+0xbc>)
 800b6ca:	480e      	ldr	r0, [pc, #56]	; (800b704 <CoAP_Init+0xac>)
 800b6cc:	f01f fbf2 	bl	802aeb4 <siprintf>
 800b6d0:	480c      	ldr	r0, [pc, #48]	; (800b704 <CoAP_Init+0xac>)
 800b6d2:	f7fc fd91 	bl	80081f8 <hal_debug_puts>
	INFO("CoAP_Observer_t size: %zu byte\r\n", sizeof(CoAP_Observer_t));
 800b6d6:	2230      	movs	r2, #48	; 0x30
 800b6d8:	490f      	ldr	r1, [pc, #60]	; (800b718 <CoAP_Init+0xc0>)
 800b6da:	480a      	ldr	r0, [pc, #40]	; (800b704 <CoAP_Init+0xac>)
 800b6dc:	f01f fbea 	bl	802aeb4 <siprintf>
 800b6e0:	4808      	ldr	r0, [pc, #32]	; (800b704 <CoAP_Init+0xac>)
 800b6e2:	f7fc fd89 	bl	80081f8 <hal_debug_puts>

	CoAP_InitResources();
 800b6e6:	f7ff fc99 	bl	800b01c <CoAP_InitResources>
}
 800b6ea:	bf00      	nop
 800b6ec:	46bd      	mov	sp, r7
 800b6ee:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 800b6f2:	b004      	add	sp, #16
 800b6f4:	4770      	bx	lr
 800b6f6:	bf00      	nop
 800b6f8:	20000b0c 	.word	0x20000b0c
 800b6fc:	0800b645 	.word	0x0800b645
 800b700:	0802decc 	.word	0x0802decc
 800b704:	20000b54 	.word	0x20000b54
 800b708:	0802dedc 	.word	0x0802dedc
 800b70c:	0802df00 	.word	0x0802df00
 800b710:	0802df1c 	.word	0x0802df1c
 800b714:	0802df3c 	.word	0x0802df3c
 800b718:	0802df5c 	.word	0x0802df5c

0800b71c <EpAreEqual>:

const NetEp_t NetEp_IPv6_mulitcast = { .NetType = IPV6, .NetPort = 5683, .NetAddr = { .IPv6 = {.u8 = {0xff, 0x02, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 } } } };
const NetEp_t NetEp_IPv4_mulitcast = { .NetType = IPV4, .NetPort = 5683, .NetAddr = { .IPv4 = { .u8 = { 224, 0, 1, 187 } } } };

 bool _rom EpAreEqual(const NetEp_t* ep_A, const NetEp_t* ep_B)
 {
 800b71c:	b480      	push	{r7}
 800b71e:	b085      	sub	sp, #20
 800b720:	af00      	add	r7, sp, #0
 800b722:	6078      	str	r0, [r7, #4]
 800b724:	6039      	str	r1, [r7, #0]
	if (!ep_A || !ep_B) { return false; }
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	2b00      	cmp	r3, #0
 800b72a:	d002      	beq.n	800b732 <EpAreEqual+0x16>
 800b72c:	683b      	ldr	r3, [r7, #0]
 800b72e:	2b00      	cmp	r3, #0
 800b730:	d101      	bne.n	800b736 <EpAreEqual+0x1a>
 800b732:	2300      	movs	r3, #0
 800b734:	e063      	b.n	800b7fe <EpAreEqual+0xe2>
	if (ep_A->NetType != ep_B->NetType) { return false; }
 800b736:	687b      	ldr	r3, [r7, #4]
 800b738:	781a      	ldrb	r2, [r3, #0]
 800b73a:	683b      	ldr	r3, [r7, #0]
 800b73c:	781b      	ldrb	r3, [r3, #0]
 800b73e:	429a      	cmp	r2, r3
 800b740:	d001      	beq.n	800b746 <EpAreEqual+0x2a>
 800b742:	2300      	movs	r3, #0
 800b744:	e05b      	b.n	800b7fe <EpAreEqual+0xe2>
	if (ep_A->NetPort != ep_B->NetPort) { return false; }
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	8a9a      	ldrh	r2, [r3, #20]
 800b74a:	683b      	ldr	r3, [r7, #0]
 800b74c:	8a9b      	ldrh	r3, [r3, #20]
 800b74e:	429a      	cmp	r2, r3
 800b750:	d001      	beq.n	800b756 <EpAreEqual+0x3a>
 800b752:	2300      	movs	r3, #0
 800b754:	e053      	b.n	800b7fe <EpAreEqual+0xe2>

	if (ep_A->NetType == IPV6) {
 800b756:	687b      	ldr	r3, [r7, #4]
 800b758:	781b      	ldrb	r3, [r3, #0]
 800b75a:	2b01      	cmp	r3, #1
 800b75c:	d119      	bne.n	800b792 <EpAreEqual+0x76>
		if (ep_A->NetAddr.IPv6.u32[0] != ep_B->NetAddr.IPv6.u32[0]
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	685a      	ldr	r2, [r3, #4]
 800b762:	683b      	ldr	r3, [r7, #0]
 800b764:	685b      	ldr	r3, [r3, #4]
 800b766:	429a      	cmp	r2, r3
 800b768:	d111      	bne.n	800b78e <EpAreEqual+0x72>
			|| ep_A->NetAddr.IPv6.u32[1] != ep_B->NetAddr.IPv6.u32[1]
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	689a      	ldr	r2, [r3, #8]
 800b76e:	683b      	ldr	r3, [r7, #0]
 800b770:	689b      	ldr	r3, [r3, #8]
 800b772:	429a      	cmp	r2, r3
 800b774:	d10b      	bne.n	800b78e <EpAreEqual+0x72>
			|| ep_A->NetAddr.IPv6.u32[2] != ep_B->NetAddr.IPv6.u32[2]
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	68da      	ldr	r2, [r3, #12]
 800b77a:	683b      	ldr	r3, [r7, #0]
 800b77c:	68db      	ldr	r3, [r3, #12]
 800b77e:	429a      	cmp	r2, r3
 800b780:	d105      	bne.n	800b78e <EpAreEqual+0x72>
			|| ep_A->NetAddr.IPv6.u32[3] != ep_B->NetAddr.IPv6.u32[3]) { return false; }
 800b782:	687b      	ldr	r3, [r7, #4]
 800b784:	691a      	ldr	r2, [r3, #16]
 800b786:	683b      	ldr	r3, [r7, #0]
 800b788:	691b      	ldr	r3, [r3, #16]
 800b78a:	429a      	cmp	r2, r3
 800b78c:	d036      	beq.n	800b7fc <EpAreEqual+0xe0>
 800b78e:	2300      	movs	r3, #0
 800b790:	e035      	b.n	800b7fe <EpAreEqual+0xe2>
	} else if (ep_A->NetType == IPV4) {
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	781b      	ldrb	r3, [r3, #0]
 800b796:	2b02      	cmp	r3, #2
 800b798:	d119      	bne.n	800b7ce <EpAreEqual+0xb2>
		if (ep_A->NetAddr.IPv4.u8[0] != ep_B->NetAddr.IPv4.u8[0]
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	791a      	ldrb	r2, [r3, #4]
 800b79e:	683b      	ldr	r3, [r7, #0]
 800b7a0:	791b      	ldrb	r3, [r3, #4]
 800b7a2:	429a      	cmp	r2, r3
 800b7a4:	d111      	bne.n	800b7ca <EpAreEqual+0xae>
			|| ep_A->NetAddr.IPv4.u8[1] != ep_B->NetAddr.IPv4.u8[1]
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	795a      	ldrb	r2, [r3, #5]
 800b7aa:	683b      	ldr	r3, [r7, #0]
 800b7ac:	795b      	ldrb	r3, [r3, #5]
 800b7ae:	429a      	cmp	r2, r3
 800b7b0:	d10b      	bne.n	800b7ca <EpAreEqual+0xae>
			|| ep_A->NetAddr.IPv4.u8[2] != ep_B->NetAddr.IPv4.u8[2]
 800b7b2:	687b      	ldr	r3, [r7, #4]
 800b7b4:	799a      	ldrb	r2, [r3, #6]
 800b7b6:	683b      	ldr	r3, [r7, #0]
 800b7b8:	799b      	ldrb	r3, [r3, #6]
 800b7ba:	429a      	cmp	r2, r3
 800b7bc:	d105      	bne.n	800b7ca <EpAreEqual+0xae>
			|| ep_A->NetAddr.IPv4.u8[3] != ep_B->NetAddr.IPv4.u8[3]) { return false; }
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	79da      	ldrb	r2, [r3, #7]
 800b7c2:	683b      	ldr	r3, [r7, #0]
 800b7c4:	79db      	ldrb	r3, [r3, #7]
 800b7c6:	429a      	cmp	r2, r3
 800b7c8:	d018      	beq.n	800b7fc <EpAreEqual+0xe0>
 800b7ca:	2300      	movs	r3, #0
 800b7cc:	e017      	b.n	800b7fe <EpAreEqual+0xe2>
	} else {
		int i;
		for (i = 0; i < NetAddr_MAX_LENGTH; i++) {
 800b7ce:	2300      	movs	r3, #0
 800b7d0:	60fb      	str	r3, [r7, #12]
 800b7d2:	e010      	b.n	800b7f6 <EpAreEqual+0xda>
			if (ep_A->NetAddr.mem[i] != ep_B->NetAddr.mem[i]) { return false; }
 800b7d4:	687a      	ldr	r2, [r7, #4]
 800b7d6:	68fb      	ldr	r3, [r7, #12]
 800b7d8:	4413      	add	r3, r2
 800b7da:	3304      	adds	r3, #4
 800b7dc:	781a      	ldrb	r2, [r3, #0]
 800b7de:	6839      	ldr	r1, [r7, #0]
 800b7e0:	68fb      	ldr	r3, [r7, #12]
 800b7e2:	440b      	add	r3, r1
 800b7e4:	3304      	adds	r3, #4
 800b7e6:	781b      	ldrb	r3, [r3, #0]
 800b7e8:	429a      	cmp	r2, r3
 800b7ea:	d001      	beq.n	800b7f0 <EpAreEqual+0xd4>
 800b7ec:	2300      	movs	r3, #0
 800b7ee:	e006      	b.n	800b7fe <EpAreEqual+0xe2>
		for (i = 0; i < NetAddr_MAX_LENGTH; i++) {
 800b7f0:	68fb      	ldr	r3, [r7, #12]
 800b7f2:	3301      	adds	r3, #1
 800b7f4:	60fb      	str	r3, [r7, #12]
 800b7f6:	68fb      	ldr	r3, [r7, #12]
 800b7f8:	2b0f      	cmp	r3, #15
 800b7fa:	ddeb      	ble.n	800b7d4 <EpAreEqual+0xb8>
		}
	}

	return true;
 800b7fc:	2301      	movs	r3, #1
}
 800b7fe:	4618      	mov	r0, r3
 800b800:	3714      	adds	r7, #20
 800b802:	46bd      	mov	sp, r7
 800b804:	bc80      	pop	{r7}
 800b806:	4770      	bx	lr

0800b808 <CopyEndpoints>:

void _rom CopyEndpoints(NetEp_t* Destination, const NetEp_t* Source) {
 800b808:	b580      	push	{r7, lr}
 800b80a:	b082      	sub	sp, #8
 800b80c:	af00      	add	r7, sp, #0
 800b80e:	6078      	str	r0, [r7, #4]
 800b810:	6039      	str	r1, [r7, #0]
	memmove((void*) Destination, (const void*) Source, sizeof(NetEp_t));
 800b812:	2218      	movs	r2, #24
 800b814:	6839      	ldr	r1, [r7, #0]
 800b816:	6878      	ldr	r0, [r7, #4]
 800b818:	f01f fc54 	bl	802b0c4 <memmove>
}
 800b81c:	bf00      	nop
 800b81e:	3708      	adds	r7, #8
 800b820:	46bd      	mov	sp, r7
 800b822:	bd80      	pop	{r7, pc}

0800b824 <AllocSocket>:
	bool initDone;
} CoAP_SocketCtrl_t;

static CoAP_SocketCtrl_t SocketCtrl = {.initDone = false};

CoAP_Socket_t* _rom AllocSocket() {
 800b824:	b580      	push	{r7, lr}
 800b826:	b082      	sub	sp, #8
 800b828:	af00      	add	r7, sp, #0
	int i;
	if (!SocketCtrl.initDone) {
 800b82a:	4b23      	ldr	r3, [pc, #140]	; (800b8b8 <AllocSocket+0x94>)
 800b82c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b830:	f083 0301 	eor.w	r3, r3, #1
 800b834:	b2db      	uxtb	r3, r3
 800b836:	2b00      	cmp	r3, #0
 800b838:	d016      	beq.n	800b868 <AllocSocket+0x44>
		for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b83a:	2300      	movs	r3, #0
 800b83c:	607b      	str	r3, [r7, #4]
 800b83e:	e00c      	b.n	800b85a <AllocSocket+0x36>
			SocketCtrl.SocketMemory[i].Alive = false;
 800b840:	491d      	ldr	r1, [pc, #116]	; (800b8b8 <AllocSocket+0x94>)
 800b842:	687a      	ldr	r2, [r7, #4]
 800b844:	4613      	mov	r3, r2
 800b846:	005b      	lsls	r3, r3, #1
 800b848:	4413      	add	r3, r2
 800b84a:	009b      	lsls	r3, r3, #2
 800b84c:	440b      	add	r3, r1
 800b84e:	3308      	adds	r3, #8
 800b850:	2200      	movs	r2, #0
 800b852:	701a      	strb	r2, [r3, #0]
		for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b854:	687b      	ldr	r3, [r7, #4]
 800b856:	3301      	adds	r3, #1
 800b858:	607b      	str	r3, [r7, #4]
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	2b04      	cmp	r3, #4
 800b85e:	ddef      	ble.n	800b840 <AllocSocket+0x1c>
		}
		SocketCtrl.initDone = true;
 800b860:	4b15      	ldr	r3, [pc, #84]	; (800b8b8 <AllocSocket+0x94>)
 800b862:	2201      	movs	r2, #1
 800b864:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
	}

	for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b868:	2300      	movs	r3, #0
 800b86a:	607b      	str	r3, [r7, #4]
 800b86c:	e01b      	b.n	800b8a6 <AllocSocket+0x82>
		CoAP_Socket_t* socket = &(SocketCtrl.SocketMemory[i]);
 800b86e:	687a      	ldr	r2, [r7, #4]
 800b870:	4613      	mov	r3, r2
 800b872:	005b      	lsls	r3, r3, #1
 800b874:	4413      	add	r3, r2
 800b876:	009b      	lsls	r3, r3, #2
 800b878:	4a0f      	ldr	r2, [pc, #60]	; (800b8b8 <AllocSocket+0x94>)
 800b87a:	4413      	add	r3, r2
 800b87c:	603b      	str	r3, [r7, #0]
		if (socket->Alive == false) {
 800b87e:	683b      	ldr	r3, [r7, #0]
 800b880:	7a1b      	ldrb	r3, [r3, #8]
 800b882:	f083 0301 	eor.w	r3, r3, #1
 800b886:	b2db      	uxtb	r3, r3
 800b888:	2b00      	cmp	r3, #0
 800b88a:	d009      	beq.n	800b8a0 <AllocSocket+0x7c>
			memset(socket, 0, sizeof(*socket));
 800b88c:	220c      	movs	r2, #12
 800b88e:	2100      	movs	r1, #0
 800b890:	6838      	ldr	r0, [r7, #0]
 800b892:	f01f fc31 	bl	802b0f8 <memset>
			socket->Alive = true;
 800b896:	683b      	ldr	r3, [r7, #0]
 800b898:	2201      	movs	r2, #1
 800b89a:	721a      	strb	r2, [r3, #8]
			return socket;
 800b89c:	683b      	ldr	r3, [r7, #0]
 800b89e:	e006      	b.n	800b8ae <AllocSocket+0x8a>
	for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b8a0:	687b      	ldr	r3, [r7, #4]
 800b8a2:	3301      	adds	r3, #1
 800b8a4:	607b      	str	r3, [r7, #4]
 800b8a6:	687b      	ldr	r3, [r7, #4]
 800b8a8:	2b04      	cmp	r3, #4
 800b8aa:	dde0      	ble.n	800b86e <AllocSocket+0x4a>
		}
	}

	return NULL; //no free memory
 800b8ac:	2300      	movs	r3, #0
}
 800b8ae:	4618      	mov	r0, r3
 800b8b0:	3708      	adds	r7, #8
 800b8b2:	46bd      	mov	sp, r7
 800b8b4:	bd80      	pop	{r7, pc}
 800b8b6:	bf00      	nop
 800b8b8:	20000d48 	.word	0x20000d48

0800b8bc <RetrieveSocket>:

CoAP_Socket_t* _rom RetrieveSocket(SocketHandle_t handle) {
 800b8bc:	b480      	push	{r7}
 800b8be:	b085      	sub	sp, #20
 800b8c0:	af00      	add	r7, sp, #0
 800b8c2:	6078      	str	r0, [r7, #4]
	int i;
	for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b8c4:	2300      	movs	r3, #0
 800b8c6:	60fb      	str	r3, [r7, #12]
 800b8c8:	e020      	b.n	800b90c <RetrieveSocket+0x50>
		if (SocketCtrl.SocketMemory[i].Alive &&
 800b8ca:	4915      	ldr	r1, [pc, #84]	; (800b920 <RetrieveSocket+0x64>)
 800b8cc:	68fa      	ldr	r2, [r7, #12]
 800b8ce:	4613      	mov	r3, r2
 800b8d0:	005b      	lsls	r3, r3, #1
 800b8d2:	4413      	add	r3, r2
 800b8d4:	009b      	lsls	r3, r3, #2
 800b8d6:	440b      	add	r3, r1
 800b8d8:	3308      	adds	r3, #8
 800b8da:	781b      	ldrb	r3, [r3, #0]
 800b8dc:	2b00      	cmp	r3, #0
 800b8de:	d012      	beq.n	800b906 <RetrieveSocket+0x4a>
			SocketCtrl.SocketMemory[i].Handle == handle) //corresponding socket found!
 800b8e0:	490f      	ldr	r1, [pc, #60]	; (800b920 <RetrieveSocket+0x64>)
 800b8e2:	68fa      	ldr	r2, [r7, #12]
 800b8e4:	4613      	mov	r3, r2
 800b8e6:	005b      	lsls	r3, r3, #1
 800b8e8:	4413      	add	r3, r2
 800b8ea:	009b      	lsls	r3, r3, #2
 800b8ec:	440b      	add	r3, r1
 800b8ee:	681b      	ldr	r3, [r3, #0]
		if (SocketCtrl.SocketMemory[i].Alive &&
 800b8f0:	687a      	ldr	r2, [r7, #4]
 800b8f2:	429a      	cmp	r2, r3
 800b8f4:	d107      	bne.n	800b906 <RetrieveSocket+0x4a>
		{
			return &(SocketCtrl.SocketMemory[i]);
 800b8f6:	68fa      	ldr	r2, [r7, #12]
 800b8f8:	4613      	mov	r3, r2
 800b8fa:	005b      	lsls	r3, r3, #1
 800b8fc:	4413      	add	r3, r2
 800b8fe:	009b      	lsls	r3, r3, #2
 800b900:	4a07      	ldr	r2, [pc, #28]	; (800b920 <RetrieveSocket+0x64>)
 800b902:	4413      	add	r3, r2
 800b904:	e006      	b.n	800b914 <RetrieveSocket+0x58>
	for (i = 0; i < MAX_ACTIVE_SOCKETS; i++) {
 800b906:	68fb      	ldr	r3, [r7, #12]
 800b908:	3301      	adds	r3, #1
 800b90a:	60fb      	str	r3, [r7, #12]
 800b90c:	68fb      	ldr	r3, [r7, #12]
 800b90e:	2b04      	cmp	r3, #4
 800b910:	dddb      	ble.n	800b8ca <RetrieveSocket+0xe>
		}

	}
	return NULL; //not found
 800b912:	2300      	movs	r3, #0
 800b914:	4618      	mov	r0, r3
 800b916:	3714      	adds	r7, #20
 800b918:	46bd      	mov	sp, r7
 800b91a:	bc80      	pop	{r7}
 800b91c:	4770      	bx	lr
 800b91e:	bf00      	nop
 800b920:	20000d48 	.word	0x20000d48

0800b924 <AddBlkOptionToMsg>:

	return COAP_OK;
}

CoAP_Result_t _rom AddBlkOptionToMsg(CoAP_Message_t* msg, CoAP_blockwise_option_t* blkOption)
{
 800b924:	b580      	push	{r7, lr}
 800b926:	b086      	sub	sp, #24
 800b928:	af00      	add	r7, sp, #0
 800b92a:	6078      	str	r0, [r7, #4]
 800b92c:	6039      	str	r1, [r7, #0]
	if (blkOption->Type != BLOCK_1 && blkOption->Type != BLOCK_2)
 800b92e:	683b      	ldr	r3, [r7, #0]
 800b930:	781b      	ldrb	r3, [r3, #0]
 800b932:	2b1b      	cmp	r3, #27
 800b934:	d005      	beq.n	800b942 <AddBlkOptionToMsg+0x1e>
 800b936:	683b      	ldr	r3, [r7, #0]
 800b938:	781b      	ldrb	r3, [r3, #0]
 800b93a:	2b17      	cmp	r3, #23
 800b93c:	d001      	beq.n	800b942 <AddBlkOptionToMsg+0x1e>
		return COAP_ERR_WRONG_OPTION;
 800b93e:	2310      	movs	r3, #16
 800b940:	e089      	b.n	800ba56 <AddBlkOptionToMsg+0x132>

	if (blkOption->BlockNum == 0 && blkOption->BlockSize == BLOCK_SIZE_16 && blkOption->MoreFlag == false) //=> NUM, |M| and SZX are all coded to zero -> send zero-byte integer
 800b942:	683b      	ldr	r3, [r7, #0]
 800b944:	689b      	ldr	r3, [r3, #8]
 800b946:	2b00      	cmp	r3, #0
 800b948:	d116      	bne.n	800b978 <AddBlkOptionToMsg+0x54>
 800b94a:	683b      	ldr	r3, [r7, #0]
 800b94c:	885b      	ldrh	r3, [r3, #2]
 800b94e:	2b10      	cmp	r3, #16
 800b950:	d112      	bne.n	800b978 <AddBlkOptionToMsg+0x54>
 800b952:	683b      	ldr	r3, [r7, #0]
 800b954:	791b      	ldrb	r3, [r3, #4]
 800b956:	f083 0301 	eor.w	r3, r3, #1
 800b95a:	b2db      	uxtb	r3, r3
 800b95c:	2b00      	cmp	r3, #0
 800b95e:	d00b      	beq.n	800b978 <AddBlkOptionToMsg+0x54>
	{
		return CoAP_AppendOptionToList(&(msg->pOptionsList), (uint16_t) blkOption->Type, NULL, 0);
 800b960:	687b      	ldr	r3, [r7, #4]
 800b962:	f103 0018 	add.w	r0, r3, #24
 800b966:	683b      	ldr	r3, [r7, #0]
 800b968:	781b      	ldrb	r3, [r3, #0]
 800b96a:	b299      	uxth	r1, r3
 800b96c:	2300      	movs	r3, #0
 800b96e:	2200      	movs	r2, #0
 800b970:	f7ff f92a 	bl	800abc8 <CoAP_AppendOptionToList>
 800b974:	4603      	mov	r3, r0
 800b976:	e06e      	b.n	800ba56 <AddBlkOptionToMsg+0x132>
	}

	uint32_t OptionValue = 0;
 800b978:	2300      	movs	r3, #0
 800b97a:	617b      	str	r3, [r7, #20]

	//Block Size
	uint8_t szxCalc = (uint8_t) ((blkOption->BlockSize) >> 4u); // divide by 16
 800b97c:	683b      	ldr	r3, [r7, #0]
 800b97e:	885b      	ldrh	r3, [r3, #2]
 800b980:	091b      	lsrs	r3, r3, #4
 800b982:	b29b      	uxth	r3, r3
 800b984:	73fb      	strb	r3, [r7, #15]
	int i;
	for (i = 6; i >= 0; i--) //find highest bit, e.g. calc log2, i=7 forbidden
 800b986:	2306      	movs	r3, #6
 800b988:	613b      	str	r3, [r7, #16]
 800b98a:	e00f      	b.n	800b9ac <AddBlkOptionToMsg+0x88>
			{
		if (szxCalc & 1u << i)
 800b98c:	7bfa      	ldrb	r2, [r7, #15]
 800b98e:	693b      	ldr	r3, [r7, #16]
 800b990:	fa22 f303 	lsr.w	r3, r2, r3
 800b994:	f003 0301 	and.w	r3, r3, #1
 800b998:	2b00      	cmp	r3, #0
 800b99a:	d004      	beq.n	800b9a6 <AddBlkOptionToMsg+0x82>
				{
			OptionValue |= i;
 800b99c:	693b      	ldr	r3, [r7, #16]
 800b99e:	697a      	ldr	r2, [r7, #20]
 800b9a0:	4313      	orrs	r3, r2
 800b9a2:	617b      	str	r3, [r7, #20]
			break;
 800b9a4:	e005      	b.n	800b9b2 <AddBlkOptionToMsg+0x8e>
	for (i = 6; i >= 0; i--) //find highest bit, e.g. calc log2, i=7 forbidden
 800b9a6:	693b      	ldr	r3, [r7, #16]
 800b9a8:	3b01      	subs	r3, #1
 800b9aa:	613b      	str	r3, [r7, #16]
 800b9ac:	693b      	ldr	r3, [r7, #16]
 800b9ae:	2b00      	cmp	r3, #0
 800b9b0:	daec      	bge.n	800b98c <AddBlkOptionToMsg+0x68>
		}
	}

	//More Flag
	if (blkOption->MoreFlag)
 800b9b2:	683b      	ldr	r3, [r7, #0]
 800b9b4:	791b      	ldrb	r3, [r3, #4]
 800b9b6:	2b00      	cmp	r3, #0
 800b9b8:	d003      	beq.n	800b9c2 <AddBlkOptionToMsg+0x9e>
		OptionValue |= 1u << 3u;
 800b9ba:	697b      	ldr	r3, [r7, #20]
 800b9bc:	f043 0308 	orr.w	r3, r3, #8
 800b9c0:	617b      	str	r3, [r7, #20]

	//Num Value
	OptionValue |= (blkOption->BlockNum) << 4u;
 800b9c2:	683b      	ldr	r3, [r7, #0]
 800b9c4:	689b      	ldr	r3, [r3, #8]
 800b9c6:	011b      	lsls	r3, r3, #4
 800b9c8:	697a      	ldr	r2, [r7, #20]
 800b9ca:	4313      	orrs	r3, r2
 800b9cc:	617b      	str	r3, [r7, #20]

	uint8_t wBuf[3];

	if (blkOption->BlockNum < 16)
 800b9ce:	683b      	ldr	r3, [r7, #0]
 800b9d0:	689b      	ldr	r3, [r3, #8]
 800b9d2:	2b0f      	cmp	r3, #15
 800b9d4:	d80f      	bhi.n	800b9f6 <AddBlkOptionToMsg+0xd2>
			{
		//msg->Options[msg->OptionCount].Length = 1;
		//wBuf[0]=msg->Options[msg->OptionCount].Value[0] = (uint8_t)OptionValue;
		wBuf[0] = (uint8_t) OptionValue;
 800b9d6:	697b      	ldr	r3, [r7, #20]
 800b9d8:	b2db      	uxtb	r3, r3
 800b9da:	733b      	strb	r3, [r7, #12]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), (uint16_t) blkOption->Type, wBuf, 1);
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	f103 0018 	add.w	r0, r3, #24
 800b9e2:	683b      	ldr	r3, [r7, #0]
 800b9e4:	781b      	ldrb	r3, [r3, #0]
 800b9e6:	b299      	uxth	r1, r3
 800b9e8:	f107 020c 	add.w	r2, r7, #12
 800b9ec:	2301      	movs	r3, #1
 800b9ee:	f7ff f8eb 	bl	800abc8 <CoAP_AppendOptionToList>
 800b9f2:	4603      	mov	r3, r0
 800b9f4:	e02f      	b.n	800ba56 <AddBlkOptionToMsg+0x132>
	}
	else if (blkOption->BlockNum < 4096u)
 800b9f6:	683b      	ldr	r3, [r7, #0]
 800b9f8:	689b      	ldr	r3, [r3, #8]
 800b9fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b9fe:	d213      	bcs.n	800ba28 <AddBlkOptionToMsg+0x104>
			{
		//msg->Options[msg->OptionCount].Length = 2;
		wBuf[0] = (uint8_t) (OptionValue >> 8u);
 800ba00:	697b      	ldr	r3, [r7, #20]
 800ba02:	0a1b      	lsrs	r3, r3, #8
 800ba04:	b2db      	uxtb	r3, r3
 800ba06:	733b      	strb	r3, [r7, #12]
		wBuf[1] = (uint8_t) (OptionValue & 0xffu);
 800ba08:	697b      	ldr	r3, [r7, #20]
 800ba0a:	b2db      	uxtb	r3, r3
 800ba0c:	737b      	strb	r3, [r7, #13]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), (uint16_t) blkOption->Type, wBuf, 2);
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	f103 0018 	add.w	r0, r3, #24
 800ba14:	683b      	ldr	r3, [r7, #0]
 800ba16:	781b      	ldrb	r3, [r3, #0]
 800ba18:	b299      	uxth	r1, r3
 800ba1a:	f107 020c 	add.w	r2, r7, #12
 800ba1e:	2302      	movs	r3, #2
 800ba20:	f7ff f8d2 	bl	800abc8 <CoAP_AppendOptionToList>
 800ba24:	4603      	mov	r3, r0
 800ba26:	e016      	b.n	800ba56 <AddBlkOptionToMsg+0x132>
	}
	else
	{
		//msg->Options[msg->OptionCount].Length = 3;
		wBuf[0] = (uint8_t) (OptionValue >> 16u);
 800ba28:	697b      	ldr	r3, [r7, #20]
 800ba2a:	0c1b      	lsrs	r3, r3, #16
 800ba2c:	b2db      	uxtb	r3, r3
 800ba2e:	733b      	strb	r3, [r7, #12]
		wBuf[1] = (uint8_t) (OptionValue >> 8u);
 800ba30:	697b      	ldr	r3, [r7, #20]
 800ba32:	0a1b      	lsrs	r3, r3, #8
 800ba34:	b2db      	uxtb	r3, r3
 800ba36:	737b      	strb	r3, [r7, #13]
		wBuf[2] = (uint8_t) (OptionValue & 0xffu);
 800ba38:	697b      	ldr	r3, [r7, #20]
 800ba3a:	b2db      	uxtb	r3, r3
 800ba3c:	73bb      	strb	r3, [r7, #14]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), (uint16_t) blkOption->Type, wBuf, 3);
 800ba3e:	687b      	ldr	r3, [r7, #4]
 800ba40:	f103 0018 	add.w	r0, r3, #24
 800ba44:	683b      	ldr	r3, [r7, #0]
 800ba46:	781b      	ldrb	r3, [r3, #0]
 800ba48:	b299      	uxth	r1, r3
 800ba4a:	f107 020c 	add.w	r2, r7, #12
 800ba4e:	2303      	movs	r3, #3
 800ba50:	f7ff f8ba 	bl	800abc8 <CoAP_AppendOptionToList>
 800ba54:	4603      	mov	r3, r0
	}
}
 800ba56:	4618      	mov	r0, r3
 800ba58:	3718      	adds	r7, #24
 800ba5a:	46bd      	mov	sp, r7
 800ba5c:	bd80      	pop	{r7, pc}
	...

0800ba60 <CoAP_SetPayload>:
}

// Copies the given payload to the message. Respects the MAX_PAYLOAD_SIZE
// If the content does not fit into the response a Block options is added
CoAP_Result_t _rom CoAP_SetPayload(CoAP_Message_t* pMsgResp, uint8_t* pPayload, size_t payloadTotalSize, bool payloadIsVolatile)
{
 800ba60:	b590      	push	{r4, r7, lr}
 800ba62:	b089      	sub	sp, #36	; 0x24
 800ba64:	af00      	add	r7, sp, #0
 800ba66:	60f8      	str	r0, [r7, #12]
 800ba68:	60b9      	str	r1, [r7, #8]
 800ba6a:	607a      	str	r2, [r7, #4]
 800ba6c:	70fb      	strb	r3, [r7, #3]
	CoAP_blockwise_option_t B2opt = { .Type = BLOCK_2 };
 800ba6e:	f107 0310 	add.w	r3, r7, #16
 800ba72:	2200      	movs	r2, #0
 800ba74:	601a      	str	r2, [r3, #0]
 800ba76:	605a      	str	r2, [r3, #4]
 800ba78:	609a      	str	r2, [r3, #8]
 800ba7a:	2317      	movs	r3, #23
 800ba7c:	743b      	strb	r3, [r7, #16]
	int32_t BytesToSend = 0;
 800ba7e:	2300      	movs	r3, #0
 800ba80:	61fb      	str	r3, [r7, #28]

	if (payloadTotalSize == 0) {
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	2b00      	cmp	r3, #0
 800ba86:	d104      	bne.n	800ba92 <CoAP_SetPayload+0x32>
		pMsgResp->PayloadLength = 0;
 800ba88:	68fb      	ldr	r3, [r7, #12]
 800ba8a:	2200      	movs	r2, #0
 800ba8c:	811a      	strh	r2, [r3, #8]
		return COAP_OK;
 800ba8e:	2300      	movs	r3, #0
 800ba90:	e04d      	b.n	800bb2e <CoAP_SetPayload+0xce>
	}

	if (payloadTotalSize > MAX_PAYLOAD_SIZE) { //must use blockwise transfer?
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800ba98:	d911      	bls.n	800babe <CoAP_SetPayload+0x5e>
		B2opt.BlockSize = MAX_PAYLOAD_SIZE;
 800ba9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ba9e:	827b      	strh	r3, [r7, #18]
		B2opt.BlockNum = 0;
 800baa0:	2300      	movs	r3, #0
 800baa2:	61bb      	str	r3, [r7, #24]
		B2opt.MoreFlag = true;
 800baa4:	2301      	movs	r3, #1
 800baa6:	753b      	strb	r3, [r7, #20]
		AddBlkOptionToMsg(pMsgResp, &B2opt);
 800baa8:	68fb      	ldr	r3, [r7, #12]
 800baaa:	f107 0210 	add.w	r2, r7, #16
 800baae:	4611      	mov	r1, r2
 800bab0:	4618      	mov	r0, r3
 800bab2:	f7ff ff37 	bl	800b924 <AddBlkOptionToMsg>
		BytesToSend = MAX_PAYLOAD_SIZE;
 800bab6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800baba:	61fb      	str	r3, [r7, #28]
 800babc:	e001      	b.n	800bac2 <CoAP_SetPayload+0x62>
	} else {
		BytesToSend = payloadTotalSize;
 800babe:	687b      	ldr	r3, [r7, #4]
 800bac0:	61fb      	str	r3, [r7, #28]
	}

	if (pPayload != pMsgResp->Payload) {
 800bac2:	68fb      	ldr	r3, [r7, #12]
 800bac4:	69db      	ldr	r3, [r3, #28]
 800bac6:	68ba      	ldr	r2, [r7, #8]
 800bac8:	429a      	cmp	r2, r3
 800baca:	d02b      	beq.n	800bb24 <CoAP_SetPayload+0xc4>
		//set payload to beginning of given external payload buf
		if (payloadIsVolatile) {
 800bacc:	78fb      	ldrb	r3, [r7, #3]
 800bace:	2b00      	cmp	r3, #0
 800bad0:	d022      	beq.n	800bb18 <CoAP_SetPayload+0xb8>
			if (pMsgResp->PayloadBufSize < BytesToSend) {
 800bad2:	68fb      	ldr	r3, [r7, #12]
 800bad4:	895b      	ldrh	r3, [r3, #10]
 800bad6:	461a      	mov	r2, r3
 800bad8:	69fb      	ldr	r3, [r7, #28]
 800bada:	4293      	cmp	r3, r2
 800badc:	dd10      	ble.n	800bb00 <CoAP_SetPayload+0xa0>
				CoAP_free_MsgPayload(&pMsgResp); //this is save in any case because free routine checks location
 800bade:	f107 030c 	add.w	r3, r7, #12
 800bae2:	4618      	mov	r0, r3
 800bae4:	f7fd fd0e 	bl	8009504 <CoAP_free_MsgPayload>
				pMsgResp->Payload = (uint8_t*) CoAP.api.malloc(BytesToSend); //alloc new buffer to copy data to send to
 800bae8:	4b13      	ldr	r3, [pc, #76]	; (800bb38 <CoAP_SetPayload+0xd8>)
 800baea:	68db      	ldr	r3, [r3, #12]
 800baec:	69fa      	ldr	r2, [r7, #28]
 800baee:	68fc      	ldr	r4, [r7, #12]
 800baf0:	4610      	mov	r0, r2
 800baf2:	4798      	blx	r3
 800baf4:	4603      	mov	r3, r0
 800baf6:	61e3      	str	r3, [r4, #28]
				pMsgResp->PayloadBufSize = BytesToSend;
 800baf8:	68fb      	ldr	r3, [r7, #12]
 800bafa:	69fa      	ldr	r2, [r7, #28]
 800bafc:	b292      	uxth	r2, r2
 800bafe:	815a      	strh	r2, [r3, #10]
			}
			coap_memcpy(pMsgResp->Payload, pPayload, BytesToSend);
 800bb00:	68fb      	ldr	r3, [r7, #12]
 800bb02:	69db      	ldr	r3, [r3, #28]
 800bb04:	69fa      	ldr	r2, [r7, #28]
 800bb06:	68b9      	ldr	r1, [r7, #8]
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f01f fb94 	bl	802b236 <memcpy>
			pMsgResp->PayloadBufSize = BytesToSend;
 800bb0e:	68fb      	ldr	r3, [r7, #12]
 800bb10:	69fa      	ldr	r2, [r7, #28]
 800bb12:	b292      	uxth	r2, r2
 800bb14:	815a      	strh	r2, [r3, #10]
 800bb16:	e005      	b.n	800bb24 <CoAP_SetPayload+0xc4>
		} else {
			pMsgResp->Payload = pPayload; //use external set buffer (will not be freed, MUST be static!!!)
 800bb18:	68fb      	ldr	r3, [r7, #12]
 800bb1a:	68ba      	ldr	r2, [r7, #8]
 800bb1c:	61da      	str	r2, [r3, #28]
			pMsgResp->PayloadBufSize = 0; //protect external buf from unwanted overwrite
 800bb1e:	68fb      	ldr	r3, [r7, #12]
 800bb20:	2200      	movs	r2, #0
 800bb22:	815a      	strh	r2, [r3, #10]
		}
	} // [else] => no need to alter payload buf beside change payload length before return

	pMsgResp->PayloadLength = BytesToSend;
 800bb24:	68fb      	ldr	r3, [r7, #12]
 800bb26:	69fa      	ldr	r2, [r7, #28]
 800bb28:	b292      	uxth	r2, r2
 800bb2a:	811a      	strh	r2, [r3, #8]
	return COAP_OK;
 800bb2c:	2300      	movs	r3, #0
}
 800bb2e:	4618      	mov	r0, r3
 800bb30:	3724      	adds	r7, #36	; 0x24
 800bb32:	46bd      	mov	sp, r7
 800bb34:	bd90      	pop	{r4, r7, pc}
 800bb36:	bf00      	nop
 800bb38:	20000b0c 	.word	0x20000b0c

0800bb3c <CoAP_AddCfOptionToMsg>:
 * THE SOFTWARE.
 *******************************************************************************/
#include "../coap.h"

CoAP_Result_t _rom CoAP_AddCfOptionToMsg(CoAP_Message_t* msg, uint16_t contentFormat)
{
 800bb3c:	b580      	push	{r7, lr}
 800bb3e:	b082      	sub	sp, #8
 800bb40:	af00      	add	r7, sp, #0
 800bb42:	6078      	str	r0, [r7, #4]
 800bb44:	460b      	mov	r3, r1
 800bb46:	807b      	strh	r3, [r7, #2]
	return CoAP_AppendUintOptionToList(&(msg->pOptionsList), OPT_NUM_CONTENT_FORMAT, contentFormat);
 800bb48:	687b      	ldr	r3, [r7, #4]
 800bb4a:	3318      	adds	r3, #24
 800bb4c:	887a      	ldrh	r2, [r7, #2]
 800bb4e:	210c      	movs	r1, #12
 800bb50:	4618      	mov	r0, r3
 800bb52:	f7fe ffcf 	bl	800aaf4 <CoAP_AppendUintOptionToList>
 800bb56:	4603      	mov	r3, r0
}
 800bb58:	4618      	mov	r0, r3
 800bb5a:	3708      	adds	r7, #8
 800bb5c:	46bd      	mov	sp, r7
 800bb5e:	bd80      	pop	{r7, pc}

0800bb60 <AddObserveOptionToMsg>:
 *******************************************************************************/
#include "../coap_mem.h"
#include "../coap.h"

CoAP_Result_t _rom AddObserveOptionToMsg(CoAP_Message_t* msg, uint32_t val)
{
 800bb60:	b580      	push	{r7, lr}
 800bb62:	b084      	sub	sp, #16
 800bb64:	af00      	add	r7, sp, #0
 800bb66:	6078      	str	r0, [r7, #4]
 800bb68:	6039      	str	r1, [r7, #0]
	uint8_t wBuf[3];
	wBuf[2] = val & 0xffu;
 800bb6a:	683b      	ldr	r3, [r7, #0]
 800bb6c:	b2db      	uxtb	r3, r3
 800bb6e:	73bb      	strb	r3, [r7, #14]
	wBuf[1] = (val >> 8u) & 0xffu;
 800bb70:	683b      	ldr	r3, [r7, #0]
 800bb72:	0a1b      	lsrs	r3, r3, #8
 800bb74:	b2db      	uxtb	r3, r3
 800bb76:	737b      	strb	r3, [r7, #13]
	wBuf[0] = (val >> 16u) & 0xffu;
 800bb78:	683b      	ldr	r3, [r7, #0]
 800bb7a:	0c1b      	lsrs	r3, r3, #16
 800bb7c:	b2db      	uxtb	r3, r3
 800bb7e:	733b      	strb	r3, [r7, #12]

	if (val > 0xffff) {
 800bb80:	683b      	ldr	r3, [r7, #0]
 800bb82:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bb86:	d315      	bcc.n	800bbb4 <AddObserveOptionToMsg+0x54>
		wBuf[0] = (val >> 16u) & 0xffu;
 800bb88:	683b      	ldr	r3, [r7, #0]
 800bb8a:	0c1b      	lsrs	r3, r3, #16
 800bb8c:	b2db      	uxtb	r3, r3
 800bb8e:	733b      	strb	r3, [r7, #12]
		wBuf[1] = (val >> 8u) & 0xffu;
 800bb90:	683b      	ldr	r3, [r7, #0]
 800bb92:	0a1b      	lsrs	r3, r3, #8
 800bb94:	b2db      	uxtb	r3, r3
 800bb96:	737b      	strb	r3, [r7, #13]
		wBuf[2] = val & 0xffu;
 800bb98:	683b      	ldr	r3, [r7, #0]
 800bb9a:	b2db      	uxtb	r3, r3
 800bb9c:	73bb      	strb	r3, [r7, #14]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), OPT_NUM_OBSERVE, wBuf, 3);
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	f103 0018 	add.w	r0, r3, #24
 800bba4:	f107 020c 	add.w	r2, r7, #12
 800bba8:	2303      	movs	r3, #3
 800bbaa:	2106      	movs	r1, #6
 800bbac:	f7ff f80c 	bl	800abc8 <CoAP_AppendOptionToList>
 800bbb0:	4603      	mov	r3, r0
 800bbb2:	e02e      	b.n	800bc12 <AddObserveOptionToMsg+0xb2>
	} else if (val > 0xff) {
 800bbb4:	683b      	ldr	r3, [r7, #0]
 800bbb6:	2bff      	cmp	r3, #255	; 0xff
 800bbb8:	d911      	bls.n	800bbde <AddObserveOptionToMsg+0x7e>
		wBuf[0] = (val >> 8u) & 0xffu;
 800bbba:	683b      	ldr	r3, [r7, #0]
 800bbbc:	0a1b      	lsrs	r3, r3, #8
 800bbbe:	b2db      	uxtb	r3, r3
 800bbc0:	733b      	strb	r3, [r7, #12]
		wBuf[1] = val & 0xffu;
 800bbc2:	683b      	ldr	r3, [r7, #0]
 800bbc4:	b2db      	uxtb	r3, r3
 800bbc6:	737b      	strb	r3, [r7, #13]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), OPT_NUM_OBSERVE, wBuf, 2);
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	f103 0018 	add.w	r0, r3, #24
 800bbce:	f107 020c 	add.w	r2, r7, #12
 800bbd2:	2302      	movs	r3, #2
 800bbd4:	2106      	movs	r1, #6
 800bbd6:	f7fe fff7 	bl	800abc8 <CoAP_AppendOptionToList>
 800bbda:	4603      	mov	r3, r0
 800bbdc:	e019      	b.n	800bc12 <AddObserveOptionToMsg+0xb2>
	} else if (val > 0) {
 800bbde:	683b      	ldr	r3, [r7, #0]
 800bbe0:	2b00      	cmp	r3, #0
 800bbe2:	d00d      	beq.n	800bc00 <AddObserveOptionToMsg+0xa0>
		wBuf[0] = val & 0xffu;
 800bbe4:	683b      	ldr	r3, [r7, #0]
 800bbe6:	b2db      	uxtb	r3, r3
 800bbe8:	733b      	strb	r3, [r7, #12]
		return CoAP_AppendOptionToList(&(msg->pOptionsList), OPT_NUM_OBSERVE, wBuf, 1);
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	f103 0018 	add.w	r0, r3, #24
 800bbf0:	f107 020c 	add.w	r2, r7, #12
 800bbf4:	2301      	movs	r3, #1
 800bbf6:	2106      	movs	r1, #6
 800bbf8:	f7fe ffe6 	bl	800abc8 <CoAP_AppendOptionToList>
 800bbfc:	4603      	mov	r3, r0
 800bbfe:	e008      	b.n	800bc12 <AddObserveOptionToMsg+0xb2>
	} else { //val == 0
		return CoAP_AppendOptionToList(&(msg->pOptionsList), OPT_NUM_OBSERVE, NULL, 0);
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	f103 0018 	add.w	r0, r3, #24
 800bc06:	2300      	movs	r3, #0
 800bc08:	2200      	movs	r2, #0
 800bc0a:	2106      	movs	r1, #6
 800bc0c:	f7fe ffdc 	bl	800abc8 <CoAP_AppendOptionToList>
 800bc10:	4603      	mov	r3, r0
	}
}
 800bc12:	4618      	mov	r0, r3
 800bc14:	3710      	adds	r7, #16
 800bc16:	46bd      	mov	sp, r7
 800bc18:	bd80      	pop	{r7, pc}

0800bc1a <RemoveObserveOptionFromMsg>:

CoAP_Result_t _rom RemoveObserveOptionFromMsg(CoAP_Message_t* msg) {
 800bc1a:	b580      	push	{r7, lr}
 800bc1c:	b084      	sub	sp, #16
 800bc1e:	af00      	add	r7, sp, #0
 800bc20:	6078      	str	r0, [r7, #4]
	CoAP_option_t* pOpt;
	for (pOpt = msg->pOptionsList; pOpt != NULL; pOpt = pOpt->next) {
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	699b      	ldr	r3, [r3, #24]
 800bc26:	60fb      	str	r3, [r7, #12]
 800bc28:	e00e      	b.n	800bc48 <RemoveObserveOptionFromMsg+0x2e>
		if (pOpt->Number == OPT_NUM_OBSERVE) {
 800bc2a:	68fb      	ldr	r3, [r7, #12]
 800bc2c:	889b      	ldrh	r3, [r3, #4]
 800bc2e:	2b06      	cmp	r3, #6
 800bc30:	d107      	bne.n	800bc42 <RemoveObserveOptionFromMsg+0x28>
			CoAP_RemoveOptionFromList(&(msg->pOptionsList), pOpt);
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	3318      	adds	r3, #24
 800bc36:	68f9      	ldr	r1, [r7, #12]
 800bc38:	4618      	mov	r0, r3
 800bc3a:	f7fe feb5 	bl	800a9a8 <CoAP_RemoveOptionFromList>
			return COAP_OK;
 800bc3e:	2300      	movs	r3, #0
 800bc40:	e006      	b.n	800bc50 <RemoveObserveOptionFromMsg+0x36>
	for (pOpt = msg->pOptionsList; pOpt != NULL; pOpt = pOpt->next) {
 800bc42:	68fb      	ldr	r3, [r7, #12]
 800bc44:	681b      	ldr	r3, [r3, #0]
 800bc46:	60fb      	str	r3, [r7, #12]
 800bc48:	68fb      	ldr	r3, [r7, #12]
 800bc4a:	2b00      	cmp	r3, #0
 800bc4c:	d1ed      	bne.n	800bc2a <RemoveObserveOptionFromMsg+0x10>
		}
	}
	return COAP_NOT_FOUND;
 800bc4e:	2301      	movs	r3, #1
}
 800bc50:	4618      	mov	r0, r3
 800bc52:	3710      	adds	r7, #16
 800bc54:	46bd      	mov	sp, r7
 800bc56:	bd80      	pop	{r7, pc}

0800bc58 <UpdateObserveOptionInMsg>:

CoAP_Result_t _rom UpdateObserveOptionInMsg(CoAP_Message_t* msg, uint32_t val)
{
 800bc58:	b580      	push	{r7, lr}
 800bc5a:	b082      	sub	sp, #8
 800bc5c:	af00      	add	r7, sp, #0
 800bc5e:	6078      	str	r0, [r7, #4]
 800bc60:	6039      	str	r1, [r7, #0]
	RemoveObserveOptionFromMsg(msg);
 800bc62:	6878      	ldr	r0, [r7, #4]
 800bc64:	f7ff ffd9 	bl	800bc1a <RemoveObserveOptionFromMsg>
	return AddObserveOptionToMsg(msg, val);
 800bc68:	6839      	ldr	r1, [r7, #0]
 800bc6a:	6878      	ldr	r0, [r7, #4]
 800bc6c:	f7ff ff78 	bl	800bb60 <AddObserveOptionToMsg>
 800bc70:	4603      	mov	r3, r0
}
 800bc72:	4618      	mov	r0, r3
 800bc74:	3708      	adds	r7, #8
 800bc76:	46bd      	mov	sp, r7
 800bc78:	bd80      	pop	{r7, pc}

0800bc7a <GetObserveOptionFromMsg>:

CoAP_Result_t _rom GetObserveOptionFromMsg(CoAP_Message_t* msg, uint32_t* val) {
 800bc7a:	b480      	push	{r7}
 800bc7c:	b085      	sub	sp, #20
 800bc7e:	af00      	add	r7, sp, #0
 800bc80:	6078      	str	r0, [r7, #4]
 800bc82:	6039      	str	r1, [r7, #0]

	CoAP_option_t* pOpts = msg->pOptionsList;
 800bc84:	687b      	ldr	r3, [r7, #4]
 800bc86:	699b      	ldr	r3, [r3, #24]
 800bc88:	60fb      	str	r3, [r7, #12]
	*val = 0;
 800bc8a:	683b      	ldr	r3, [r7, #0]
 800bc8c:	2200      	movs	r2, #0
 800bc8e:	601a      	str	r2, [r3, #0]

	while (pOpts != NULL) {
 800bc90:	e049      	b.n	800bd26 <GetObserveOptionFromMsg+0xac>
		if (pOpts->Number == OPT_NUM_OBSERVE) {
 800bc92:	68fb      	ldr	r3, [r7, #12]
 800bc94:	889b      	ldrh	r3, [r3, #4]
 800bc96:	2b06      	cmp	r3, #6
 800bc98:	d142      	bne.n	800bd20 <GetObserveOptionFromMsg+0xa6>

			if (pOpts->Length == 0) { //implicit val = 0 (register)
 800bc9a:	68fb      	ldr	r3, [r7, #12]
 800bc9c:	88db      	ldrh	r3, [r3, #6]
 800bc9e:	2b00      	cmp	r3, #0
 800bca0:	d101      	bne.n	800bca6 <GetObserveOptionFromMsg+0x2c>
				return COAP_OK;
 800bca2:	2300      	movs	r3, #0
 800bca4:	e043      	b.n	800bd2e <GetObserveOptionFromMsg+0xb4>
			} else {
				if (pOpts->Length == 1) {
 800bca6:	68fb      	ldr	r3, [r7, #12]
 800bca8:	88db      	ldrh	r3, [r3, #6]
 800bcaa:	2b01      	cmp	r3, #1
 800bcac:	d108      	bne.n	800bcc0 <GetObserveOptionFromMsg+0x46>
					*val |= (uint32_t) (pOpts->Value[0]);
 800bcae:	683b      	ldr	r3, [r7, #0]
 800bcb0:	681b      	ldr	r3, [r3, #0]
 800bcb2:	68fa      	ldr	r2, [r7, #12]
 800bcb4:	6892      	ldr	r2, [r2, #8]
 800bcb6:	7812      	ldrb	r2, [r2, #0]
 800bcb8:	431a      	orrs	r2, r3
 800bcba:	683b      	ldr	r3, [r7, #0]
 800bcbc:	601a      	str	r2, [r3, #0]
 800bcbe:	e02d      	b.n	800bd1c <GetObserveOptionFromMsg+0xa2>
				} else if (pOpts->Length == 2) {
 800bcc0:	68fb      	ldr	r3, [r7, #12]
 800bcc2:	88db      	ldrh	r3, [r3, #6]
 800bcc4:	2b02      	cmp	r3, #2
 800bcc6:	d10e      	bne.n	800bce6 <GetObserveOptionFromMsg+0x6c>
					*val |= (((uint32_t) pOpts->Value[0]) << 8u) | ((uint32_t) pOpts->Value[1]);
 800bcc8:	683b      	ldr	r3, [r7, #0]
 800bcca:	681a      	ldr	r2, [r3, #0]
 800bccc:	68fb      	ldr	r3, [r7, #12]
 800bcce:	689b      	ldr	r3, [r3, #8]
 800bcd0:	781b      	ldrb	r3, [r3, #0]
 800bcd2:	021b      	lsls	r3, r3, #8
 800bcd4:	68f9      	ldr	r1, [r7, #12]
 800bcd6:	6889      	ldr	r1, [r1, #8]
 800bcd8:	3101      	adds	r1, #1
 800bcda:	7809      	ldrb	r1, [r1, #0]
 800bcdc:	430b      	orrs	r3, r1
 800bcde:	431a      	orrs	r2, r3
 800bce0:	683b      	ldr	r3, [r7, #0]
 800bce2:	601a      	str	r2, [r3, #0]
 800bce4:	e01a      	b.n	800bd1c <GetObserveOptionFromMsg+0xa2>
				} else if (pOpts->Length == 3) {
 800bce6:	68fb      	ldr	r3, [r7, #12]
 800bce8:	88db      	ldrh	r3, [r3, #6]
 800bcea:	2b03      	cmp	r3, #3
 800bcec:	d114      	bne.n	800bd18 <GetObserveOptionFromMsg+0x9e>
					*val |= (((uint32_t) pOpts->Value[0]) << 16u) | (((uint32_t) pOpts->Value[1]) << 8u) | ((uint32_t) pOpts->Value[2]);
 800bcee:	683b      	ldr	r3, [r7, #0]
 800bcf0:	681a      	ldr	r2, [r3, #0]
 800bcf2:	68fb      	ldr	r3, [r7, #12]
 800bcf4:	689b      	ldr	r3, [r3, #8]
 800bcf6:	781b      	ldrb	r3, [r3, #0]
 800bcf8:	0419      	lsls	r1, r3, #16
 800bcfa:	68fb      	ldr	r3, [r7, #12]
 800bcfc:	689b      	ldr	r3, [r3, #8]
 800bcfe:	3301      	adds	r3, #1
 800bd00:	781b      	ldrb	r3, [r3, #0]
 800bd02:	021b      	lsls	r3, r3, #8
 800bd04:	430b      	orrs	r3, r1
 800bd06:	68f9      	ldr	r1, [r7, #12]
 800bd08:	6889      	ldr	r1, [r1, #8]
 800bd0a:	3102      	adds	r1, #2
 800bd0c:	7809      	ldrb	r1, [r1, #0]
 800bd0e:	430b      	orrs	r3, r1
 800bd10:	431a      	orrs	r2, r3
 800bd12:	683b      	ldr	r3, [r7, #0]
 800bd14:	601a      	str	r2, [r3, #0]
 800bd16:	e001      	b.n	800bd1c <GetObserveOptionFromMsg+0xa2>
				} else {
					return COAP_BAD_OPTION_VAL;
 800bd18:	2315      	movs	r3, #21
 800bd1a:	e008      	b.n	800bd2e <GetObserveOptionFromMsg+0xb4>
				}
			}
			return COAP_OK;
 800bd1c:	2300      	movs	r3, #0
 800bd1e:	e006      	b.n	800bd2e <GetObserveOptionFromMsg+0xb4>
		}

		pOpts = pOpts->next;
 800bd20:	68fb      	ldr	r3, [r7, #12]
 800bd22:	681b      	ldr	r3, [r3, #0]
 800bd24:	60fb      	str	r3, [r7, #12]
	while (pOpts != NULL) {
 800bd26:	68fb      	ldr	r3, [r7, #12]
 800bd28:	2b00      	cmp	r3, #0
 800bd2a:	d1b2      	bne.n	800bc92 <GetObserveOptionFromMsg+0x18>
	}
	return COAP_NOT_FOUND;
 800bd2c:	2301      	movs	r3, #1
}
 800bd2e:	4618      	mov	r0, r3
 800bd30:	3714      	adds	r7, #20
 800bd32:	46bd      	mov	sp, r7
 800bd34:	bc80      	pop	{r7}
 800bd36:	4770      	bx	lr

0800bd38 <CoAP_AllocNewObserver>:

CoAP_Observer_t* _rom CoAP_AllocNewObserver()
{
 800bd38:	b580      	push	{r7, lr}
 800bd3a:	b082      	sub	sp, #8
 800bd3c:	af00      	add	r7, sp, #0
	CoAP_Observer_t* newObserver = (CoAP_Observer_t*) (CoAP_malloc0(sizeof(CoAP_Observer_t)));
 800bd3e:	2030      	movs	r0, #48	; 0x30
 800bd40:	f7fd fb6a 	bl	8009418 <CoAP_malloc0>
 800bd44:	6078      	str	r0, [r7, #4]
	if (newObserver == NULL) {
 800bd46:	687b      	ldr	r3, [r7, #4]
 800bd48:	2b00      	cmp	r3, #0
 800bd4a:	d101      	bne.n	800bd50 <CoAP_AllocNewObserver+0x18>
		return NULL;
 800bd4c:	2300      	movs	r3, #0
 800bd4e:	e005      	b.n	800bd5c <CoAP_AllocNewObserver+0x24>
	}

	memset(newObserver, 0, sizeof(CoAP_Observer_t));
 800bd50:	2230      	movs	r2, #48	; 0x30
 800bd52:	2100      	movs	r1, #0
 800bd54:	6878      	ldr	r0, [r7, #4]
 800bd56:	f01f f9cf 	bl	802b0f8 <memset>
	return newObserver;
 800bd5a:	687b      	ldr	r3, [r7, #4]
}
 800bd5c:	4618      	mov	r0, r3
 800bd5e:	3708      	adds	r7, #8
 800bd60:	46bd      	mov	sp, r7
 800bd62:	bd80      	pop	{r7, pc}

0800bd64 <CoAP_FreeObserver>:

CoAP_Result_t _rom CoAP_FreeObserver(CoAP_Observer_t** pObserver)
{
 800bd64:	b580      	push	{r7, lr}
 800bd66:	b082      	sub	sp, #8
 800bd68:	af00      	add	r7, sp, #0
 800bd6a:	6078      	str	r0, [r7, #4]
	INFO("Releasing pObserver\r\n");
 800bd6c:	490c      	ldr	r1, [pc, #48]	; (800bda0 <CoAP_FreeObserver+0x3c>)
 800bd6e:	480d      	ldr	r0, [pc, #52]	; (800bda4 <CoAP_FreeObserver+0x40>)
 800bd70:	f01f f8a0 	bl	802aeb4 <siprintf>
 800bd74:	480b      	ldr	r0, [pc, #44]	; (800bda4 <CoAP_FreeObserver+0x40>)
 800bd76:	f7fc fa3f 	bl	80081f8 <hal_debug_puts>
	//coap_mem_stats();

	CoAP_FreeOptionList(&((*pObserver)->pOptList));
 800bd7a:	687b      	ldr	r3, [r7, #4]
 800bd7c:	681b      	ldr	r3, [r3, #0]
 800bd7e:	3328      	adds	r3, #40	; 0x28
 800bd80:	4618      	mov	r0, r3
 800bd82:	f7fe ffb7 	bl	800acf4 <CoAP_FreeOptionList>
	CoAP_free((void*) (*pObserver));
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	681b      	ldr	r3, [r3, #0]
 800bd8a:	4618      	mov	r0, r3
 800bd8c:	f7fd fb26 	bl	80093dc <CoAP_free>
	*pObserver = NULL;
 800bd90:	687b      	ldr	r3, [r7, #4]
 800bd92:	2200      	movs	r2, #0
 800bd94:	601a      	str	r2, [r3, #0]

	return COAP_OK;
 800bd96:	2300      	movs	r3, #0
}
 800bd98:	4618      	mov	r0, r3
 800bd9a:	3708      	adds	r7, #8
 800bd9c:	46bd      	mov	sp, r7
 800bd9e:	bd80      	pop	{r7, pc}
 800bda0:	0802df80 	.word	0x0802df80
 800bda4:	20000b54 	.word	0x20000b54

0800bda8 <CoAP_AppendObserverToList>:

//does not copy!
CoAP_Result_t _rom CoAP_AppendObserverToList(CoAP_Observer_t** pListStart, CoAP_Observer_t* pObserverToAdd)
{
 800bda8:	b480      	push	{r7}
 800bdaa:	b085      	sub	sp, #20
 800bdac:	af00      	add	r7, sp, #0
 800bdae:	6078      	str	r0, [r7, #4]
 800bdb0:	6039      	str	r1, [r7, #0]
	if (pObserverToAdd == NULL)
 800bdb2:	683b      	ldr	r3, [r7, #0]
 800bdb4:	2b00      	cmp	r3, #0
 800bdb6:	d101      	bne.n	800bdbc <CoAP_AppendObserverToList+0x14>
		return COAP_ERR_ARGUMENT;
 800bdb8:	230a      	movs	r3, #10
 800bdba:	e020      	b.n	800bdfe <CoAP_AppendObserverToList+0x56>

	if (*pListStart == NULL) //List empty? create new first element
 800bdbc:	687b      	ldr	r3, [r7, #4]
 800bdbe:	681b      	ldr	r3, [r3, #0]
 800bdc0:	2b00      	cmp	r3, #0
 800bdc2:	d107      	bne.n	800bdd4 <CoAP_AppendObserverToList+0x2c>
	{
		*pListStart = pObserverToAdd;
 800bdc4:	687b      	ldr	r3, [r7, #4]
 800bdc6:	683a      	ldr	r2, [r7, #0]
 800bdc8:	601a      	str	r2, [r3, #0]
		(*pListStart)->next = NULL;
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	681b      	ldr	r3, [r3, #0]
 800bdce:	2200      	movs	r2, #0
 800bdd0:	62da      	str	r2, [r3, #44]	; 0x2c
 800bdd2:	e013      	b.n	800bdfc <CoAP_AppendObserverToList+0x54>
	}
	else //append new element at end
	{
		CoAP_Observer_t* pObs = *pListStart;
 800bdd4:	687b      	ldr	r3, [r7, #4]
 800bdd6:	681b      	ldr	r3, [r3, #0]
 800bdd8:	60fb      	str	r3, [r7, #12]
		while (pObs->next != NULL) {
 800bdda:	e002      	b.n	800bde2 <CoAP_AppendObserverToList+0x3a>
			pObs = pObs->next;
 800bddc:	68fb      	ldr	r3, [r7, #12]
 800bdde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bde0:	60fb      	str	r3, [r7, #12]
		while (pObs->next != NULL) {
 800bde2:	68fb      	ldr	r3, [r7, #12]
 800bde4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bde6:	2b00      	cmp	r3, #0
 800bde8:	d1f8      	bne.n	800bddc <CoAP_AppendObserverToList+0x34>
		}

		pObs->next = pObserverToAdd;
 800bdea:	68fb      	ldr	r3, [r7, #12]
 800bdec:	683a      	ldr	r2, [r7, #0]
 800bdee:	62da      	str	r2, [r3, #44]	; 0x2c
		pObs = pObs->next;
 800bdf0:	68fb      	ldr	r3, [r7, #12]
 800bdf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdf4:	60fb      	str	r3, [r7, #12]
		pObs->next = NULL;
 800bdf6:	68fb      	ldr	r3, [r7, #12]
 800bdf8:	2200      	movs	r2, #0
 800bdfa:	62da      	str	r2, [r3, #44]	; 0x2c
	}
	return COAP_OK;
 800bdfc:	2300      	movs	r3, #0
}
 800bdfe:	4618      	mov	r0, r3
 800be00:	3714      	adds	r7, #20
 800be02:	46bd      	mov	sp, r7
 800be04:	bc80      	pop	{r7}
 800be06:	4770      	bx	lr

0800be08 <CoAP_UnlinkObserverFromList>:

CoAP_Result_t _rom CoAP_UnlinkObserverFromList(CoAP_Observer_t** pListStart, CoAP_Observer_t* pObserverToRemove, bool FreeUnlinked)
{
 800be08:	b580      	push	{r7, lr}
 800be0a:	b086      	sub	sp, #24
 800be0c:	af00      	add	r7, sp, #0
 800be0e:	60f8      	str	r0, [r7, #12]
 800be10:	60b9      	str	r1, [r7, #8]
 800be12:	4613      	mov	r3, r2
 800be14:	71fb      	strb	r3, [r7, #7]
	CoAP_Observer_t* currP;
	CoAP_Observer_t* prevP;

	// For 1st node, indicate there is no previous.
	prevP = NULL;
 800be16:	2300      	movs	r3, #0
 800be18:	617b      	str	r3, [r7, #20]

	//Visit each node, maintaining a pointer to
	//the previous node we just visited.
	for (currP = *pListStart; currP != NULL; prevP = currP, currP = currP->next) {
 800be1a:	68fb      	ldr	r3, [r7, #12]
 800be1c:	681b      	ldr	r3, [r3, #0]
 800be1e:	613b      	str	r3, [r7, #16]
 800be20:	e01e      	b.n	800be60 <CoAP_UnlinkObserverFromList+0x58>

		if (currP == pObserverToRemove) {  // Found it.
 800be22:	693b      	ldr	r3, [r7, #16]
 800be24:	68ba      	ldr	r2, [r7, #8]
 800be26:	429a      	cmp	r2, r3
 800be28:	d115      	bne.n	800be56 <CoAP_UnlinkObserverFromList+0x4e>
			if (prevP == NULL) {
 800be2a:	697b      	ldr	r3, [r7, #20]
 800be2c:	2b00      	cmp	r3, #0
 800be2e:	d104      	bne.n	800be3a <CoAP_UnlinkObserverFromList+0x32>
				//Fix beginning pointer.
				*pListStart = currP->next;
 800be30:	693b      	ldr	r3, [r7, #16]
 800be32:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800be34:	68fb      	ldr	r3, [r7, #12]
 800be36:	601a      	str	r2, [r3, #0]
 800be38:	e003      	b.n	800be42 <CoAP_UnlinkObserverFromList+0x3a>
			} else {
				//Fix previous node's next to
				//skip over the removed node.
				prevP->next = currP->next;
 800be3a:	693b      	ldr	r3, [r7, #16]
 800be3c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800be3e:	697b      	ldr	r3, [r7, #20]
 800be40:	62da      	str	r2, [r3, #44]	; 0x2c
			}

			// Deallocate the node.
			if (FreeUnlinked) {
 800be42:	79fb      	ldrb	r3, [r7, #7]
 800be44:	2b00      	cmp	r3, #0
 800be46:	d004      	beq.n	800be52 <CoAP_UnlinkObserverFromList+0x4a>
				CoAP_FreeObserver(&currP);
 800be48:	f107 0310 	add.w	r3, r7, #16
 800be4c:	4618      	mov	r0, r3
 800be4e:	f7ff ff89 	bl	800bd64 <CoAP_FreeObserver>
			}
			//Done searching.
			return COAP_OK;
 800be52:	2300      	movs	r3, #0
 800be54:	e008      	b.n	800be68 <CoAP_UnlinkObserverFromList+0x60>
	for (currP = *pListStart; currP != NULL; prevP = currP, currP = currP->next) {
 800be56:	693b      	ldr	r3, [r7, #16]
 800be58:	617b      	str	r3, [r7, #20]
 800be5a:	693b      	ldr	r3, [r7, #16]
 800be5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800be5e:	613b      	str	r3, [r7, #16]
 800be60:	693b      	ldr	r3, [r7, #16]
 800be62:	2b00      	cmp	r3, #0
 800be64:	d1dd      	bne.n	800be22 <CoAP_UnlinkObserverFromList+0x1a>
		}
	}
	return COAP_OK;
 800be66:	2300      	movs	r3, #0
}
 800be68:	4618      	mov	r0, r3
 800be6a:	3718      	adds	r7, #24
 800be6c:	46bd      	mov	sp, r7
 800be6e:	bd80      	pop	{r7, pc}

0800be70 <ParseUriQueryFromStringToOption>:


//internal function
//QueryStr points to char AFTER ? in a uri query string e.g: 'O' in [...]myuri/bla?Option1=Val1&Option2=Val2
//todo: support percent encoding
static CoAP_Result_t _rom ParseUriQueryFromStringToOption(CoAP_option_t** pUriOptionsListBegin, const char* QueryStr) {
 800be70:	b580      	push	{r7, lr}
 800be72:	b084      	sub	sp, #16
 800be74:	af00      	add	r7, sp, #0
 800be76:	6078      	str	r0, [r7, #4]
 800be78:	6039      	str	r1, [r7, #0]
	INFO("Query string coming:\n");
 800be7a:	4925      	ldr	r1, [pc, #148]	; (800bf10 <ParseUriQueryFromStringToOption+0xa0>)
 800be7c:	4825      	ldr	r0, [pc, #148]	; (800bf14 <ParseUriQueryFromStringToOption+0xa4>)
 800be7e:	f01f f819 	bl	802aeb4 <siprintf>
 800be82:	4824      	ldr	r0, [pc, #144]	; (800bf14 <ParseUriQueryFromStringToOption+0xa4>)
 800be84:	f7fc f9b8 	bl	80081f8 <hal_debug_puts>
	INFO("Query string: '%s'\n", QueryStr);
 800be88:	683a      	ldr	r2, [r7, #0]
 800be8a:	4923      	ldr	r1, [pc, #140]	; (800bf18 <ParseUriQueryFromStringToOption+0xa8>)
 800be8c:	4821      	ldr	r0, [pc, #132]	; (800bf14 <ParseUriQueryFromStringToOption+0xa4>)
 800be8e:	f01f f811 	bl	802aeb4 <siprintf>
 800be92:	4820      	ldr	r0, [pc, #128]	; (800bf14 <ParseUriQueryFromStringToOption+0xa4>)
 800be94:	f7fc f9b0 	bl	80081f8 <hal_debug_puts>
	const char* pCurUriPartBegin = QueryStr;
 800be98:	683b      	ldr	r3, [r7, #0]
 800be9a:	60fb      	str	r3, [r7, #12]
	uint32_t cnt = 0;
 800be9c:	2300      	movs	r3, #0
 800be9e:	60bb      	str	r3, [r7, #8]

	while (*QueryStr != 0) { //str end
 800bea0:	e022      	b.n	800bee8 <ParseUriQueryFromStringToOption+0x78>
		if (*QueryStr == '&') {//query delimeter found
 800bea2:	683b      	ldr	r3, [r7, #0]
 800bea4:	781b      	ldrb	r3, [r3, #0]
 800bea6:	2b26      	cmp	r3, #38	; 0x26
 800bea8:	d118      	bne.n	800bedc <ParseUriQueryFromStringToOption+0x6c>
			if (cnt == 0) { //part begins with (another) delimiter -> skip it
 800beaa:	68bb      	ldr	r3, [r7, #8]
 800beac:	2b00      	cmp	r3, #0
 800beae:	d106      	bne.n	800bebe <ParseUriQueryFromStringToOption+0x4e>
				pCurUriPartBegin++;
 800beb0:	68fb      	ldr	r3, [r7, #12]
 800beb2:	3301      	adds	r3, #1
 800beb4:	60fb      	str	r3, [r7, #12]
				QueryStr++;
 800beb6:	683b      	ldr	r3, [r7, #0]
 800beb8:	3301      	adds	r3, #1
 800beba:	603b      	str	r3, [r7, #0]
				continue;
 800bebc:	e014      	b.n	800bee8 <ParseUriQueryFromStringToOption+0x78>
			}

			CoAP_AppendOptionToList(pUriOptionsListBegin, OPT_NUM_URI_QUERY, (const uint8_t *) pCurUriPartBegin, cnt); //copy & alloc mem
 800bebe:	68bb      	ldr	r3, [r7, #8]
 800bec0:	b29b      	uxth	r3, r3
 800bec2:	68fa      	ldr	r2, [r7, #12]
 800bec4:	210f      	movs	r1, #15
 800bec6:	6878      	ldr	r0, [r7, #4]
 800bec8:	f7fe fe7e 	bl	800abc8 <CoAP_AppendOptionToList>

			pCurUriPartBegin = pCurUriPartBegin + cnt + 1;//points to char following delimiter '&'
 800becc:	68bb      	ldr	r3, [r7, #8]
 800bece:	3301      	adds	r3, #1
 800bed0:	68fa      	ldr	r2, [r7, #12]
 800bed2:	4413      	add	r3, r2
 800bed4:	60fb      	str	r3, [r7, #12]
			cnt = 0;
 800bed6:	2300      	movs	r3, #0
 800bed8:	60bb      	str	r3, [r7, #8]
 800beda:	e002      	b.n	800bee2 <ParseUriQueryFromStringToOption+0x72>
		} else cnt++;
 800bedc:	68bb      	ldr	r3, [r7, #8]
 800bede:	3301      	adds	r3, #1
 800bee0:	60bb      	str	r3, [r7, #8]

		QueryStr++;
 800bee2:	683b      	ldr	r3, [r7, #0]
 800bee4:	3301      	adds	r3, #1
 800bee6:	603b      	str	r3, [r7, #0]
	while (*QueryStr != 0) { //str end
 800bee8:	683b      	ldr	r3, [r7, #0]
 800beea:	781b      	ldrb	r3, [r3, #0]
 800beec:	2b00      	cmp	r3, #0
 800beee:	d1d8      	bne.n	800bea2 <ParseUriQueryFromStringToOption+0x32>
	}

	//last uri part which is not a query string
	if (cnt != 0) {
 800bef0:	68bb      	ldr	r3, [r7, #8]
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	d006      	beq.n	800bf04 <ParseUriQueryFromStringToOption+0x94>
		CoAP_AppendOptionToList(pUriOptionsListBegin, OPT_NUM_URI_QUERY, (const uint8_t *) pCurUriPartBegin, cnt); //copy & alloc last uri part
 800bef6:	68bb      	ldr	r3, [r7, #8]
 800bef8:	b29b      	uxth	r3, r3
 800befa:	68fa      	ldr	r2, [r7, #12]
 800befc:	210f      	movs	r1, #15
 800befe:	6878      	ldr	r0, [r7, #4]
 800bf00:	f7fe fe62 	bl	800abc8 <CoAP_AppendOptionToList>
	}

	return COAP_OK;
 800bf04:	2300      	movs	r3, #0
}
 800bf06:	4618      	mov	r0, r3
 800bf08:	3710      	adds	r7, #16
 800bf0a:	46bd      	mov	sp, r7
 800bf0c:	bd80      	pop	{r7, pc}
 800bf0e:	bf00      	nop
 800bf10:	0802df98 	.word	0x0802df98
 800bf14:	20000b54 	.word	0x20000b54
 800bf18:	0802dfb0 	.word	0x0802dfb0

0800bf1c <CoAP_AppendUriOptionsFromString>:


// Appends to list of coap options uri-path and uri-query options from uri-string
CoAP_Result_t _rom CoAP_AppendUriOptionsFromString(CoAP_option_t** pUriOptionsListBegin, const char* UriStr) {
 800bf1c:	b580      	push	{r7, lr}
 800bf1e:	b084      	sub	sp, #16
 800bf20:	af00      	add	r7, sp, #0
 800bf22:	6078      	str	r0, [r7, #4]
 800bf24:	6039      	str	r1, [r7, #0]
	// "halloWelt/wiegehts/dir?var1=val1&var2=val2&"
	// "halloWelt/wiegehts/dir"
	// "/halloWelt/wiegehts/dir?bla&bla&bla&bla"
	// "halloWelt/wiegehts/dir/?bla&bla=n&bla&bla"

	if (UriStr == NULL) {
 800bf26:	683b      	ldr	r3, [r7, #0]
 800bf28:	2b00      	cmp	r3, #0
 800bf2a:	d101      	bne.n	800bf30 <CoAP_AppendUriOptionsFromString+0x14>
		return COAP_ERR_ARGUMENT;
 800bf2c:	230a      	movs	r3, #10
 800bf2e:	e056      	b.n	800bfde <CoAP_AppendUriOptionsFromString+0xc2>
	}

	const char* pCurUriPartBegin = UriStr;
 800bf30:	683b      	ldr	r3, [r7, #0]
 800bf32:	60fb      	str	r3, [r7, #12]
	uint32_t cnt = 0;
 800bf34:	2300      	movs	r3, #0
 800bf36:	60bb      	str	r3, [r7, #8]

	while (*UriStr != 0) { //str end
 800bf38:	e042      	b.n	800bfc0 <CoAP_AppendUriOptionsFromString+0xa4>
		if (*UriStr == '/' || *UriStr == ' ' || *UriStr == '?') { //uri delimeter found - do not count
 800bf3a:	683b      	ldr	r3, [r7, #0]
 800bf3c:	781b      	ldrb	r3, [r3, #0]
 800bf3e:	2b2f      	cmp	r3, #47	; 0x2f
 800bf40:	d007      	beq.n	800bf52 <CoAP_AppendUriOptionsFromString+0x36>
 800bf42:	683b      	ldr	r3, [r7, #0]
 800bf44:	781b      	ldrb	r3, [r3, #0]
 800bf46:	2b20      	cmp	r3, #32
 800bf48:	d003      	beq.n	800bf52 <CoAP_AppendUriOptionsFromString+0x36>
 800bf4a:	683b      	ldr	r3, [r7, #0]
 800bf4c:	781b      	ldrb	r3, [r3, #0]
 800bf4e:	2b3f      	cmp	r3, #63	; 0x3f
 800bf50:	d130      	bne.n	800bfb4 <CoAP_AppendUriOptionsFromString+0x98>

			if (cnt == 0) { //part begins with (another) delimiter -> skip it
 800bf52:	68bb      	ldr	r3, [r7, #8]
 800bf54:	2b00      	cmp	r3, #0
 800bf56:	d112      	bne.n	800bf7e <CoAP_AppendUriOptionsFromString+0x62>
				if (*UriStr == '?') {
 800bf58:	683b      	ldr	r3, [r7, #0]
 800bf5a:	781b      	ldrb	r3, [r3, #0]
 800bf5c:	2b3f      	cmp	r3, #63	; 0x3f
 800bf5e:	d107      	bne.n	800bf70 <CoAP_AppendUriOptionsFromString+0x54>
					return ParseUriQueryFromStringToOption(pUriOptionsListBegin, UriStr + 1);
 800bf60:	683b      	ldr	r3, [r7, #0]
 800bf62:	3301      	adds	r3, #1
 800bf64:	4619      	mov	r1, r3
 800bf66:	6878      	ldr	r0, [r7, #4]
 800bf68:	f7ff ff82 	bl	800be70 <ParseUriQueryFromStringToOption>
 800bf6c:	4603      	mov	r3, r0
 800bf6e:	e036      	b.n	800bfde <CoAP_AppendUriOptionsFromString+0xc2>
				}

				pCurUriPartBegin++;
 800bf70:	68fb      	ldr	r3, [r7, #12]
 800bf72:	3301      	adds	r3, #1
 800bf74:	60fb      	str	r3, [r7, #12]
				UriStr++;
 800bf76:	683b      	ldr	r3, [r7, #0]
 800bf78:	3301      	adds	r3, #1
 800bf7a:	603b      	str	r3, [r7, #0]
				continue;
 800bf7c:	e020      	b.n	800bfc0 <CoAP_AppendUriOptionsFromString+0xa4>
			}
			CoAP_AppendOptionToList(pUriOptionsListBegin, OPT_NUM_URI_PATH, (const uint8_t *) pCurUriPartBegin, cnt); //copy & alloc mem
 800bf7e:	68bb      	ldr	r3, [r7, #8]
 800bf80:	b29b      	uxth	r3, r3
 800bf82:	68fa      	ldr	r2, [r7, #12]
 800bf84:	210b      	movs	r1, #11
 800bf86:	6878      	ldr	r0, [r7, #4]
 800bf88:	f7fe fe1e 	bl	800abc8 <CoAP_AppendOptionToList>

			pCurUriPartBegin = pCurUriPartBegin + cnt + 1;//points to char following delimiter '/', ' ' or '?'
 800bf8c:	68bb      	ldr	r3, [r7, #8]
 800bf8e:	3301      	adds	r3, #1
 800bf90:	68fa      	ldr	r2, [r7, #12]
 800bf92:	4413      	add	r3, r2
 800bf94:	60fb      	str	r3, [r7, #12]

			if (*UriStr == '?') { //case /dir?var1 -> "dir" = path, "var1"=query begin (path component only MAY end with '\')
 800bf96:	683b      	ldr	r3, [r7, #0]
 800bf98:	781b      	ldrb	r3, [r3, #0]
 800bf9a:	2b3f      	cmp	r3, #63	; 0x3f
 800bf9c:	d107      	bne.n	800bfae <CoAP_AppendUriOptionsFromString+0x92>
				return ParseUriQueryFromStringToOption(pUriOptionsListBegin, UriStr + 1);
 800bf9e:	683b      	ldr	r3, [r7, #0]
 800bfa0:	3301      	adds	r3, #1
 800bfa2:	4619      	mov	r1, r3
 800bfa4:	6878      	ldr	r0, [r7, #4]
 800bfa6:	f7ff ff63 	bl	800be70 <ParseUriQueryFromStringToOption>
 800bfaa:	4603      	mov	r3, r0
 800bfac:	e017      	b.n	800bfde <CoAP_AppendUriOptionsFromString+0xc2>
			}

			cnt = 0;
 800bfae:	2300      	movs	r3, #0
 800bfb0:	60bb      	str	r3, [r7, #8]
 800bfb2:	e002      	b.n	800bfba <CoAP_AppendUriOptionsFromString+0x9e>
		} else cnt++;
 800bfb4:	68bb      	ldr	r3, [r7, #8]
 800bfb6:	3301      	adds	r3, #1
 800bfb8:	60bb      	str	r3, [r7, #8]

		UriStr++;
 800bfba:	683b      	ldr	r3, [r7, #0]
 800bfbc:	3301      	adds	r3, #1
 800bfbe:	603b      	str	r3, [r7, #0]
	while (*UriStr != 0) { //str end
 800bfc0:	683b      	ldr	r3, [r7, #0]
 800bfc2:	781b      	ldrb	r3, [r3, #0]
 800bfc4:	2b00      	cmp	r3, #0
 800bfc6:	d1b8      	bne.n	800bf3a <CoAP_AppendUriOptionsFromString+0x1e>
	}

	//last uri part which is not a query string
	if (cnt != 0) {
 800bfc8:	68bb      	ldr	r3, [r7, #8]
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d006      	beq.n	800bfdc <CoAP_AppendUriOptionsFromString+0xc0>
		CoAP_AppendOptionToList(pUriOptionsListBegin, OPT_NUM_URI_PATH, (const uint8_t *) pCurUriPartBegin, cnt); //copy & alloc last uri part
 800bfce:	68bb      	ldr	r3, [r7, #8]
 800bfd0:	b29b      	uxth	r3, r3
 800bfd2:	68fa      	ldr	r2, [r7, #12]
 800bfd4:	210b      	movs	r1, #11
 800bfd6:	6878      	ldr	r0, [r7, #4]
 800bfd8:	f7fe fdf6 	bl	800abc8 <CoAP_AppendOptionToList>
	}

	return COAP_OK;
 800bfdc:	2300      	movs	r3, #0
}
 800bfde:	4618      	mov	r0, r3
 800bfe0:	3710      	adds	r7, #16
 800bfe2:	46bd      	mov	sp, r7
 800bfe4:	bd80      	pop	{r7, pc}

0800bfe6 <CoAP_UriOptionsAreEqual>:
}

// Iterates over all URI_PATH options and match them one by one
// if any part of the URI does not match, return false
// uses implicit ordering of uri options!
bool _rom CoAP_UriOptionsAreEqual(CoAP_option_t* OptListA, CoAP_option_t* OptListB) {
 800bfe6:	b580      	push	{r7, lr}
 800bfe8:	b084      	sub	sp, #16
 800bfea:	af00      	add	r7, sp, #0
 800bfec:	6078      	str	r0, [r7, #4]
 800bfee:	6039      	str	r1, [r7, #0]

	CoAP_option_t* CurOptA = OptListA;
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	60fb      	str	r3, [r7, #12]
	CoAP_option_t* CurOptB = OptListB;
 800bff4:	683b      	ldr	r3, [r7, #0]
 800bff6:	60bb      	str	r3, [r7, #8]

	while (!(CurOptA == NULL && CurOptB == NULL)) {
 800bff8:	e030      	b.n	800c05c <CoAP_UriOptionsAreEqual+0x76>
		while (CurOptA != NULL) {
			if (CurOptA->Number == OPT_NUM_URI_PATH) {
 800bffa:	68fb      	ldr	r3, [r7, #12]
 800bffc:	889b      	ldrh	r3, [r3, #4]
 800bffe:	2b0b      	cmp	r3, #11
 800c000:	d006      	beq.n	800c010 <CoAP_UriOptionsAreEqual+0x2a>
				break;
			}
			CurOptA = CurOptA->next;
 800c002:	68fb      	ldr	r3, [r7, #12]
 800c004:	681b      	ldr	r3, [r3, #0]
 800c006:	60fb      	str	r3, [r7, #12]
		while (CurOptA != NULL) {
 800c008:	68fb      	ldr	r3, [r7, #12]
 800c00a:	2b00      	cmp	r3, #0
 800c00c:	d1f5      	bne.n	800bffa <CoAP_UriOptionsAreEqual+0x14>
 800c00e:	e008      	b.n	800c022 <CoAP_UriOptionsAreEqual+0x3c>
				break;
 800c010:	bf00      	nop
		}

		while (CurOptB != NULL) {
 800c012:	e006      	b.n	800c022 <CoAP_UriOptionsAreEqual+0x3c>
			if (CurOptB->Number == OPT_NUM_URI_PATH) {
 800c014:	68bb      	ldr	r3, [r7, #8]
 800c016:	889b      	ldrh	r3, [r3, #4]
 800c018:	2b0b      	cmp	r3, #11
 800c01a:	d006      	beq.n	800c02a <CoAP_UriOptionsAreEqual+0x44>
				break;
			}
			CurOptB = CurOptB->next;
 800c01c:	68bb      	ldr	r3, [r7, #8]
 800c01e:	681b      	ldr	r3, [r3, #0]
 800c020:	60bb      	str	r3, [r7, #8]
		while (CurOptB != NULL) {
 800c022:	68bb      	ldr	r3, [r7, #8]
 800c024:	2b00      	cmp	r3, #0
 800c026:	d1f5      	bne.n	800c014 <CoAP_UriOptionsAreEqual+0x2e>
 800c028:	e000      	b.n	800c02c <CoAP_UriOptionsAreEqual+0x46>
				break;
 800c02a:	bf00      	nop
		}

		if (!CoAP_OptionsAreEqual(CurOptA, CurOptB)) { //returns also true if both NULL! (implicit URI:"/")
 800c02c:	68b9      	ldr	r1, [r7, #8]
 800c02e:	68f8      	ldr	r0, [r7, #12]
 800c030:	f7fe fed4 	bl	800addc <CoAP_OptionsAreEqual>
 800c034:	4603      	mov	r3, r0
 800c036:	f083 0301 	eor.w	r3, r3, #1
 800c03a:	b2db      	uxtb	r3, r3
 800c03c:	2b00      	cmp	r3, #0
 800c03e:	d001      	beq.n	800c044 <CoAP_UriOptionsAreEqual+0x5e>
			return false;
 800c040:	2300      	movs	r3, #0
 800c042:	e012      	b.n	800c06a <CoAP_UriOptionsAreEqual+0x84>
		}

		if (CurOptB != NULL) {
 800c044:	68bb      	ldr	r3, [r7, #8]
 800c046:	2b00      	cmp	r3, #0
 800c048:	d002      	beq.n	800c050 <CoAP_UriOptionsAreEqual+0x6a>
			CurOptB = CurOptB->next;
 800c04a:	68bb      	ldr	r3, [r7, #8]
 800c04c:	681b      	ldr	r3, [r3, #0]
 800c04e:	60bb      	str	r3, [r7, #8]
		}
		if (CurOptA != NULL) {
 800c050:	68fb      	ldr	r3, [r7, #12]
 800c052:	2b00      	cmp	r3, #0
 800c054:	d002      	beq.n	800c05c <CoAP_UriOptionsAreEqual+0x76>
			CurOptA = CurOptA->next;
 800c056:	68fb      	ldr	r3, [r7, #12]
 800c058:	681b      	ldr	r3, [r3, #0]
 800c05a:	60fb      	str	r3, [r7, #12]
	while (!(CurOptA == NULL && CurOptB == NULL)) {
 800c05c:	68fb      	ldr	r3, [r7, #12]
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d1d2      	bne.n	800c008 <CoAP_UriOptionsAreEqual+0x22>
 800c062:	68bb      	ldr	r3, [r7, #8]
 800c064:	2b00      	cmp	r3, #0
 800c066:	d1cf      	bne.n	800c008 <CoAP_UriOptionsAreEqual+0x22>
		}
	}
	return true;
 800c068:	2301      	movs	r3, #1
}
 800c06a:	4618      	mov	r0, r3
 800c06c:	3710      	adds	r7, #16
 800c06e:	46bd      	mov	sp, r7
 800c070:	bd80      	pop	{r7, pc}

0800c072 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 800c072:	b480      	push	{r7}
 800c074:	b089      	sub	sp, #36	; 0x24
 800c076:	af00      	add	r7, sp, #0
 800c078:	60f8      	str	r0, [r7, #12]
 800c07a:	60b9      	str	r1, [r7, #8]
 800c07c:	607a      	str	r2, [r7, #4]
 800c07e:	68fb      	ldr	r3, [r7, #12]
 800c080:	61fb      	str	r3, [r7, #28]
 800c082:	68bb      	ldr	r3, [r7, #8]
 800c084:	61bb      	str	r3, [r7, #24]
 800c086:	687b      	ldr	r3, [r7, #4]
 800c088:	617b      	str	r3, [r7, #20]
 800c08a:	2300      	movs	r3, #0
 800c08c:	613b      	str	r3, [r7, #16]
 800c08e:	e00d      	b.n	800c0ac <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 800c090:	69ba      	ldr	r2, [r7, #24]
 800c092:	693b      	ldr	r3, [r7, #16]
 800c094:	441a      	add	r2, r3
 800c096:	6979      	ldr	r1, [r7, #20]
 800c098:	693b      	ldr	r3, [r7, #16]
 800c09a:	1acb      	subs	r3, r1, r3
 800c09c:	3b01      	subs	r3, #1
 800c09e:	69f9      	ldr	r1, [r7, #28]
 800c0a0:	440b      	add	r3, r1
 800c0a2:	7812      	ldrb	r2, [r2, #0]
 800c0a4:	701a      	strb	r2, [r3, #0]
 800c0a6:	693b      	ldr	r3, [r7, #16]
 800c0a8:	3301      	adds	r3, #1
 800c0aa:	613b      	str	r3, [r7, #16]
 800c0ac:	697a      	ldr	r2, [r7, #20]
 800c0ae:	693b      	ldr	r3, [r7, #16]
 800c0b0:	429a      	cmp	r2, r3
 800c0b2:	d8ed      	bhi.n	800c090 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 800c0b4:	bf00      	nop
 800c0b6:	bf00      	nop
 800c0b8:	3724      	adds	r7, #36	; 0x24
 800c0ba:	46bd      	mov	sp, r7
 800c0bc:	bc80      	pop	{r7}
 800c0be:	4770      	bx	lr

0800c0c0 <translateUdpStatus>:
 800c0c0:	b480      	push	{r7}
 800c0c2:	b083      	sub	sp, #12
 800c0c4:	af00      	add	r7, sp, #0
 800c0c6:	4603      	mov	r3, r0
 800c0c8:	71fb      	strb	r3, [r7, #7]
 800c0ca:	79fb      	ldrb	r3, [r7, #7]
 800c0cc:	2b05      	cmp	r3, #5
 800c0ce:	d819      	bhi.n	800c104 <translateUdpStatus+0x44>
 800c0d0:	a201      	add	r2, pc, #4	; (adr r2, 800c0d8 <translateUdpStatus+0x18>)
 800c0d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c0d6:	bf00      	nop
 800c0d8:	0800c0f1 	.word	0x0800c0f1
 800c0dc:	0800c105 	.word	0x0800c105
 800c0e0:	0800c0f5 	.word	0x0800c0f5
 800c0e4:	0800c101 	.word	0x0800c101
 800c0e8:	0800c0fd 	.word	0x0800c0fd
 800c0ec:	0800c0f9 	.word	0x0800c0f9
 800c0f0:	2300      	movs	r3, #0
 800c0f2:	e008      	b.n	800c106 <translateUdpStatus+0x46>
 800c0f4:	2308      	movs	r3, #8
 800c0f6:	e006      	b.n	800c106 <translateUdpStatus+0x46>
 800c0f8:	230a      	movs	r3, #10
 800c0fa:	e004      	b.n	800c106 <translateUdpStatus+0x46>
 800c0fc:	2309      	movs	r3, #9
 800c0fe:	e002      	b.n	800c106 <translateUdpStatus+0x46>
 800c100:	230b      	movs	r3, #11
 800c102:	e000      	b.n	800c106 <translateUdpStatus+0x46>
 800c104:	2301      	movs	r3, #1
 800c106:	4618      	mov	r0, r3
 800c108:	370c      	adds	r7, #12
 800c10a:	46bd      	mov	sp, r7
 800c10c:	bc80      	pop	{r7}
 800c10e:	4770      	bx	lr

0800c110 <2b020927d3c6eb407223a1baa3d6ce3597a3f88d>:
 800c110:	b590      	push	{r4, r7, lr}
 800c112:	b083      	sub	sp, #12
 800c114:	af00      	add	r7, sp, #0
 800c116:	4b17      	ldr	r3, [pc, #92]	; (800c174 <2b020927d3c6eb407223a1baa3d6ce3597a3f88d+0x64>)
 800c118:	681b      	ldr	r3, [r3, #0]
 800c11a:	607b      	str	r3, [r7, #4]
 800c11c:	f00b f8c6 	bl	80172ac <f245cef569e100f3b51b8078c1d070e2f387d00a>
 800c120:	f012 f8c2 	bl	801e2a8 <5b77f5d059012f38360090be73e77f682e6af1b1>
 800c124:	f00f f87e 	bl	801b224 <530f39758cfcff95a518bf89df4776da9faf92b4>
 800c128:	f01b fe5e 	bl	8027de8 <6607d1a8e0084dff834e59246aa78b5f6da467d9>
 800c12c:	f01b fc4c 	bl	80279c8 <c38d52ce980d1bffca8abbe7f4a5a8384c48b95c>
 800c130:	f017 fca7 	bl	8023a82 <7642e1952f3dfa50bc246e452b3db5bce6f65fea>
 800c134:	f018 ffdc 	bl	80250f0 <443e8a131efc1d3c180cec49dabd3d3f1c58eeac>
 800c138:	f019 f86c 	bl	8025214 <df2f78a5f231f323fc241372a3a00cee3087c107>
 800c13c:	f019 fa94 	bl	8025668 <a60e70bd13e8775612e7fe5ae94a36c965317289>
 800c140:	f006 fde4 	bl	8012d0c <7d1d6e9032260bf29a701dae9a5813b859a1535c>
 800c144:	687b      	ldr	r3, [r7, #4]
 800c146:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c14a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 800c14e:	2b00      	cmp	r3, #0
 800c150:	d00b      	beq.n	800c16a <2b020927d3c6eb407223a1baa3d6ce3597a3f88d+0x5a>
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c158:	f8d3 4168 	ldr.w	r4, [r3, #360]	; 0x168
 800c15c:	f000 fe32 	bl	800cdc4 <EMBENET_NODE_GetUID>
 800c160:	4602      	mov	r2, r0
 800c162:	460b      	mov	r3, r1
 800c164:	4610      	mov	r0, r2
 800c166:	4619      	mov	r1, r3
 800c168:	47a0      	blx	r4
 800c16a:	bf00      	nop
 800c16c:	370c      	adds	r7, #12
 800c16e:	46bd      	mov	sp, r7
 800c170:	bd90      	pop	{r4, r7, pc}
 800c172:	bf00      	nop
 800c174:	20000040 	.word	0x20000040

0800c178 <stop>:
 800c178:	b580      	push	{r7, lr}
 800c17a:	af00      	add	r7, sp, #0
 800c17c:	f00b f8b8 	bl	80172f0 <c37c52d5fcbad41724f29f060633d7770e309943>
 800c180:	f012 f8ca 	bl	801e318 <ae19410868335b64a066b6d27dd8944b8c55271b>
 800c184:	f00f f880 	bl	801b288 <53bc4933f2d7947a48dac4db096e7506c8e8667c>
 800c188:	f01b fe34 	bl	8027df4 <ac88c013d0ed7f5b742e43c5288111c1f79c1a36>
 800c18c:	f01b fc38 	bl	8027a00 <7c27c3f80cc08068333c14ac1b724ab469f4969f>
 800c190:	f017 fc7d 	bl	8023a8e <329b6edcbe2eed1a451d1df4c9584a68c1390127>
 800c194:	f018 ffb2 	bl	80250fc <cb5093c001ef61253a4d1da1a0188ff7663f0307>
 800c198:	f019 f854 	bl	8025244 <80b9218102010b739652963fa2fb0c366b6f860e>
 800c19c:	f019 fa86 	bl	80256ac <14e0e80443fa04d4f8b6b44eccb243ea385eea36>
 800c1a0:	f006 fdc2 	bl	8012d28 <b3455a2b4a7c58716d32ab9ee32d439bee656865>
 800c1a4:	bf00      	nop
 800c1a6:	bd80      	pop	{r7, pc}

0800c1a8 <c05e60d8280ba6d1de28a642094ab91f1147ad34>:
 800c1a8:	b5b0      	push	{r4, r5, r7, lr}
 800c1aa:	b088      	sub	sp, #32
 800c1ac:	af02      	add	r7, sp, #8
 800c1ae:	6078      	str	r0, [r7, #4]
 800c1b0:	687b      	ldr	r3, [r7, #4]
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d104      	bne.n	800c1c0 <c05e60d8280ba6d1de28a642094ab91f1147ad34+0x18>
 800c1b6:	2261      	movs	r2, #97	; 0x61
 800c1b8:	490a      	ldr	r1, [pc, #40]	; (800c1e4 <c05e60d8280ba6d1de28a642094ab91f1147ad34+0x3c>)
 800c1ba:	480b      	ldr	r0, [pc, #44]	; (800c1e8 <c05e60d8280ba6d1de28a642094ab91f1147ad34+0x40>)
 800c1bc:	f7f5 faa4 	bl	8001708 <EXPECT_OnAbortHandler>
 800c1c0:	687b      	ldr	r3, [r7, #4]
 800c1c2:	689c      	ldr	r4, [r3, #8]
 800c1c4:	687b      	ldr	r3, [r7, #4]
 800c1c6:	6818      	ldr	r0, [r3, #0]
 800c1c8:	687b      	ldr	r3, [r7, #4]
 800c1ca:	7b1d      	ldrb	r5, [r3, #12]
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 800c1d2:	6879      	ldr	r1, [r7, #4]
 800c1d4:	6989      	ldr	r1, [r1, #24]
 800c1d6:	9100      	str	r1, [sp, #0]
 800c1d8:	4629      	mov	r1, r5
 800c1da:	47a0      	blx	r4
 800c1dc:	bf00      	nop
 800c1de:	3718      	adds	r7, #24
 800c1e0:	46bd      	mov	sp, r7
 800c1e2:	bdb0      	pop	{r4, r5, r7, pc}
 800c1e4:	0802dfd8 	.word	0x0802dfd8
 800c1e8:	0802e040 	.word	0x0802e040

0800c1ec <scheduleNearestTasks>:
 800c1ec:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c1f0:	b096      	sub	sp, #88	; 0x58
 800c1f2:	af02      	add	r7, sp, #8
 800c1f4:	6278      	str	r0, [r7, #36]	; 0x24
 800c1f6:	4b65      	ldr	r3, [pc, #404]	; (800c38c <scheduleNearestTasks+0x1a0>)
 800c1f8:	681b      	ldr	r3, [r3, #0]
 800c1fa:	64bb      	str	r3, [r7, #72]	; 0x48
 800c1fc:	2300      	movs	r3, #0
 800c1fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c200:	e0b9      	b.n	800c376 <scheduleNearestTasks+0x18a>
 800c202:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c204:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c206:	015b      	lsls	r3, r3, #5
 800c208:	4413      	add	r3, r2
 800c20a:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c20e:	333c      	adds	r3, #60	; 0x3c
 800c210:	781b      	ldrb	r3, [r3, #0]
 800c212:	2b1f      	cmp	r3, #31
 800c214:	f000 80ac 	beq.w	800c370 <scheduleNearestTasks+0x184>
 800c218:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800c21a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c21c:	015b      	lsls	r3, r3, #5
 800c21e:	4413      	add	r3, r2
 800c220:	3328      	adds	r3, #40	; 0x28
 800c222:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c226:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c22a:	bf08      	it	eq
 800c22c:	f1b2 3fff 	cmpeq.w	r2, #4294967295
 800c230:	f000 809e 	beq.w	800c370 <scheduleNearestTasks+0x184>
 800c234:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c236:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800c23a:	f04f 0200 	mov.w	r2, #0
 800c23e:	f04f 0301 	mov.w	r3, #1
 800c242:	fb02 f501 	mul.w	r5, r2, r1
 800c246:	fb00 f403 	mul.w	r4, r0, r3
 800c24a:	442c      	add	r4, r5
 800c24c:	fba0 ab02 	umull	sl, fp, r0, r2
 800c250:	eb04 030b 	add.w	r3, r4, fp
 800c254:	469b      	mov	fp, r3
 800c256:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c258:	695b      	ldr	r3, [r3, #20]
 800c25a:	2200      	movs	r2, #0
 800c25c:	613b      	str	r3, [r7, #16]
 800c25e:	617a      	str	r2, [r7, #20]
 800c260:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800c264:	461a      	mov	r2, r3
 800c266:	eb1a 0202 	adds.w	r2, sl, r2
 800c26a:	60ba      	str	r2, [r7, #8]
 800c26c:	4623      	mov	r3, r4
 800c26e:	eb4b 0303 	adc.w	r3, fp, r3
 800c272:	60fb      	str	r3, [r7, #12]
 800c274:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
 800c278:	e9c7 3410 	strd	r3, r4, [r7, #64]	; 0x40
 800c27c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c27e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c280:	015b      	lsls	r3, r3, #5
 800c282:	4413      	add	r3, r2
 800c284:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c288:	3308      	adds	r3, #8
 800c28a:	e9d3 4500 	ldrd	r4, r5, [r3]
 800c28e:	4622      	mov	r2, r4
 800c290:	462b      	mov	r3, r5
 800c292:	f04f 0000 	mov.w	r0, #0
 800c296:	f04f 0100 	mov.w	r1, #0
 800c29a:	0159      	lsls	r1, r3, #5
 800c29c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800c2a0:	0150      	lsls	r0, r2, #5
 800c2a2:	4602      	mov	r2, r0
 800c2a4:	460b      	mov	r3, r1
 800c2a6:	ebb2 0804 	subs.w	r8, r2, r4
 800c2aa:	eb63 0905 	sbc.w	r9, r3, r5
 800c2ae:	f04f 0200 	mov.w	r2, #0
 800c2b2:	f04f 0300 	mov.w	r3, #0
 800c2b6:	ea4f 0389 	mov.w	r3, r9, lsl #2
 800c2ba:	ea43 7398 	orr.w	r3, r3, r8, lsr #30
 800c2be:	ea4f 0288 	mov.w	r2, r8, lsl #2
 800c2c2:	4690      	mov	r8, r2
 800c2c4:	4699      	mov	r9, r3
 800c2c6:	eb18 0304 	adds.w	r3, r8, r4
 800c2ca:	61bb      	str	r3, [r7, #24]
 800c2cc:	eb49 0305 	adc.w	r3, r9, r5
 800c2d0:	61fb      	str	r3, [r7, #28]
 800c2d2:	f04f 0200 	mov.w	r2, #0
 800c2d6:	f04f 0300 	mov.w	r3, #0
 800c2da:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 800c2de:	4629      	mov	r1, r5
 800c2e0:	00cb      	lsls	r3, r1, #3
 800c2e2:	4620      	mov	r0, r4
 800c2e4:	4629      	mov	r1, r5
 800c2e6:	4604      	mov	r4, r0
 800c2e8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800c2ec:	4601      	mov	r1, r0
 800c2ee:	00ca      	lsls	r2, r1, #3
 800c2f0:	461c      	mov	r4, r3
 800c2f2:	4613      	mov	r3, r2
 800c2f4:	e9c7 3406 	strd	r3, r4, [r7, #24]
 800c2f8:	e9c7 340e 	strd	r3, r4, [r7, #56]	; 0x38
 800c2fc:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800c300:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800c304:	1a84      	subs	r4, r0, r2
 800c306:	603c      	str	r4, [r7, #0]
 800c308:	eb61 0303 	sbc.w	r3, r1, r3
 800c30c:	607b      	str	r3, [r7, #4]
 800c30e:	e9d7 3400 	ldrd	r3, r4, [r7]
 800c312:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
 800c316:	f04f 0200 	mov.w	r2, #0
 800c31a:	f04f 0301 	mov.w	r3, #1
 800c31e:	f04f 0000 	mov.w	r0, #0
 800c322:	f04f 0100 	mov.w	r1, #0
 800c326:	0850      	lsrs	r0, r2, #1
 800c328:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
 800c32c:	0859      	lsrs	r1, r3, #1
 800c32e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800c332:	4290      	cmp	r0, r2
 800c334:	eb71 0303 	sbcs.w	r3, r1, r3
 800c338:	d31a      	bcc.n	800c370 <scheduleNearestTasks+0x184>
 800c33a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800c33c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c33e:	015b      	lsls	r3, r3, #5
 800c340:	4413      	add	r3, r2
 800c342:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c346:	333c      	adds	r3, #60	; 0x3c
 800c348:	781c      	ldrb	r4, [r3, #0]
 800c34a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800c34c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c34e:	6959      	ldr	r1, [r3, #20]
 800c350:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c352:	015b      	lsls	r3, r3, #5
 800c354:	f503 523f 	add.w	r2, r3, #12224	; 0x2fc0
 800c358:	3238      	adds	r2, #56	; 0x38
 800c35a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800c35c:	4413      	add	r3, r2
 800c35e:	9301      	str	r3, [sp, #4]
 800c360:	4b0b      	ldr	r3, [pc, #44]	; (800c390 <scheduleNearestTasks+0x1a4>)
 800c362:	9300      	str	r3, [sp, #0]
 800c364:	460b      	mov	r3, r1
 800c366:	4602      	mov	r2, r0
 800c368:	2101      	movs	r1, #1
 800c36a:	4620      	mov	r0, r4
 800c36c:	f005 fabe 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 800c370:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c372:	3301      	adds	r3, #1
 800c374:	64fb      	str	r3, [r7, #76]	; 0x4c
 800c376:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800c378:	2b0a      	cmp	r3, #10
 800c37a:	f67f af42 	bls.w	800c202 <scheduleNearestTasks+0x16>
 800c37e:	bf00      	nop
 800c380:	bf00      	nop
 800c382:	3750      	adds	r7, #80	; 0x50
 800c384:	46bd      	mov	sp, r7
 800c386:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800c38a:	bf00      	nop
 800c38c:	20000040 	.word	0x20000040
 800c390:	0800c1a9 	.word	0x0800c1a9

0800c394 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596>:
 800c394:	b590      	push	{r4, r7, lr}
 800c396:	b08d      	sub	sp, #52	; 0x34
 800c398:	af02      	add	r7, sp, #8
 800c39a:	60f8      	str	r0, [r7, #12]
 800c39c:	e9c7 2300 	strd	r2, r3, [r7]
 800c3a0:	460b      	mov	r3, r1
 800c3a2:	72fb      	strb	r3, [r7, #11]
 800c3a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c3a6:	2b00      	cmp	r3, #0
 800c3a8:	d104      	bne.n	800c3b4 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0x20>
 800c3aa:	2294      	movs	r2, #148	; 0x94
 800c3ac:	4927      	ldr	r1, [pc, #156]	; (800c44c <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0xb8>)
 800c3ae:	4828      	ldr	r0, [pc, #160]	; (800c450 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0xbc>)
 800c3b0:	f7f5 f9aa 	bl	8001708 <EXPECT_OnAbortHandler>
 800c3b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c3b6:	627b      	str	r3, [r7, #36]	; 0x24
 800c3b8:	4b26      	ldr	r3, [pc, #152]	; (800c454 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0xc0>)
 800c3ba:	681b      	ldr	r3, [r3, #0]
 800c3bc:	623b      	str	r3, [r7, #32]
 800c3be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3c0:	695b      	ldr	r3, [r3, #20]
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	d10e      	bne.n	800c3e4 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0x50>
 800c3c6:	f04f 0000 	mov.w	r0, #0
 800c3ca:	f04f 0101 	mov.w	r1, #1
 800c3ce:	f04f 0200 	mov.w	r2, #0
 800c3d2:	f04f 0300 	mov.w	r3, #0
 800c3d6:	0842      	lsrs	r2, r0, #1
 800c3d8:	ea42 72c1 	orr.w	r2, r2, r1, lsl #31
 800c3dc:	084b      	lsrs	r3, r1, #1
 800c3de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3e0:	615a      	str	r2, [r3, #20]
 800c3e2:	e002      	b.n	800c3ea <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0x56>
 800c3e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c3e6:	2200      	movs	r2, #0
 800c3e8:	615a      	str	r2, [r3, #20]
 800c3ea:	6a3a      	ldr	r2, [r7, #32]
 800c3ec:	68fb      	ldr	r3, [r7, #12]
 800c3ee:	015b      	lsls	r3, r3, #5
 800c3f0:	4413      	add	r3, r2
 800c3f2:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c3f6:	333c      	adds	r3, #60	; 0x3c
 800c3f8:	781c      	ldrb	r4, [r3, #0]
 800c3fa:	f04f 0000 	mov.w	r0, #0
 800c3fe:	f04f 0101 	mov.w	r1, #1
 800c402:	f04f 0200 	mov.w	r2, #0
 800c406:	f04f 0300 	mov.w	r3, #0
 800c40a:	0842      	lsrs	r2, r0, #1
 800c40c:	ea42 72c1 	orr.w	r2, r2, r1, lsl #31
 800c410:	084b      	lsrs	r3, r1, #1
 800c412:	4610      	mov	r0, r2
 800c414:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c416:	6959      	ldr	r1, [r3, #20]
 800c418:	68fb      	ldr	r3, [r7, #12]
 800c41a:	015b      	lsls	r3, r3, #5
 800c41c:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c420:	3338      	adds	r3, #56	; 0x38
 800c422:	6a3a      	ldr	r2, [r7, #32]
 800c424:	4413      	add	r3, r2
 800c426:	9301      	str	r3, [sp, #4]
 800c428:	4b0b      	ldr	r3, [pc, #44]	; (800c458 <00aa5e9c55481e7f5f1b699343b2f81ea40b5596+0xc4>)
 800c42a:	9300      	str	r3, [sp, #0]
 800c42c:	460b      	mov	r3, r1
 800c42e:	4602      	mov	r2, r0
 800c430:	2101      	movs	r1, #1
 800c432:	4620      	mov	r0, r4
 800c434:	f005 fa5a 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 800c438:	f000 f9c2 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 800c43c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800c43e:	f7ff fed5 	bl	800c1ec <scheduleNearestTasks>
 800c442:	bf00      	nop
 800c444:	372c      	adds	r7, #44	; 0x2c
 800c446:	46bd      	mov	sp, r7
 800c448:	bd90      	pop	{r4, r7, pc}
 800c44a:	bf00      	nop
 800c44c:	0802dfd8 	.word	0x0802dfd8
 800c450:	0802e040 	.word	0x0802e040
 800c454:	20000040 	.word	0x20000040
 800c458:	0800c1a9 	.word	0x0800c1a9

0800c45c <EMBENET_NODE_Init>:
 800c45c:	b5b0      	push	{r4, r5, r7, lr}
 800c45e:	b092      	sub	sp, #72	; 0x48
 800c460:	af02      	add	r7, sp, #8
 800c462:	6078      	str	r0, [r7, #4]
 800c464:	4a7c      	ldr	r2, [pc, #496]	; (800c658 <EMBENET_NODE_Init+0x1fc>)
 800c466:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c46a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c46e:	e883 0003 	stmia.w	r3, {r0, r1}
 800c472:	4a7a      	ldr	r2, [pc, #488]	; (800c65c <EMBENET_NODE_Init+0x200>)
 800c474:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c478:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c47c:	f008 fec4 	bl	8015208 <LOGGER_PrintLine>
 800c480:	4b77      	ldr	r3, [pc, #476]	; (800c660 <EMBENET_NODE_Init+0x204>)
 800c482:	681b      	ldr	r3, [r3, #0]
 800c484:	63bb      	str	r3, [r7, #56]	; 0x38
 800c486:	687b      	ldr	r3, [r7, #4]
 800c488:	2b00      	cmp	r3, #0
 800c48a:	d00b      	beq.n	800c4a4 <EMBENET_NODE_Init+0x48>
 800c48c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c48e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c492:	461a      	mov	r2, r3
 800c494:	687b      	ldr	r3, [r7, #4]
 800c496:	f602 74c8 	addw	r4, r2, #4040	; 0xfc8
 800c49a:	461d      	mov	r5, r3
 800c49c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c49e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c4a0:	682b      	ldr	r3, [r5, #0]
 800c4a2:	6023      	str	r3, [r4, #0]
 800c4a4:	2300      	movs	r3, #0
 800c4a6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c4a8:	e03b      	b.n	800c522 <EMBENET_NODE_Init+0xc6>
 800c4aa:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c4ac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4ae:	015b      	lsls	r3, r3, #5
 800c4b0:	4413      	add	r3, r2
 800c4b2:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c4b6:	3338      	adds	r3, #56	; 0x38
 800c4b8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800c4ba:	601a      	str	r2, [r3, #0]
 800c4bc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c4be:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4c0:	015b      	lsls	r3, r3, #5
 800c4c2:	4413      	add	r3, r2
 800c4c4:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c4c8:	333c      	adds	r3, #60	; 0x3c
 800c4ca:	221f      	movs	r2, #31
 800c4cc:	701a      	strb	r2, [r3, #0]
 800c4ce:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c4d0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4d2:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800c4d6:	015b      	lsls	r3, r3, #5
 800c4d8:	4413      	add	r3, r2
 800c4da:	2200      	movs	r2, #0
 800c4dc:	601a      	str	r2, [r3, #0]
 800c4de:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c4e0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4e2:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800c4e6:	015b      	lsls	r3, r3, #5
 800c4e8:	4413      	add	r3, r2
 800c4ea:	3304      	adds	r3, #4
 800c4ec:	22ff      	movs	r2, #255	; 0xff
 800c4ee:	701a      	strb	r2, [r3, #0]
 800c4f0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c4f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c4f4:	015b      	lsls	r3, r3, #5
 800c4f6:	4413      	add	r3, r2
 800c4f8:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c4fc:	3308      	adds	r3, #8
 800c4fe:	f04f 30ff 	mov.w	r0, #4294967295
 800c502:	f04f 31ff 	mov.w	r1, #4294967295
 800c506:	e9c3 0100 	strd	r0, r1, [r3]
 800c50a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c50c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c50e:	015b      	lsls	r3, r3, #5
 800c510:	4413      	add	r3, r2
 800c512:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c516:	3310      	adds	r3, #16
 800c518:	2200      	movs	r2, #0
 800c51a:	601a      	str	r2, [r3, #0]
 800c51c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c51e:	3301      	adds	r3, #1
 800c520:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c522:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800c524:	2b0b      	cmp	r3, #11
 800c526:	d1c0      	bne.n	800c4aa <EMBENET_NODE_Init+0x4e>
 800c528:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c52a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c52e:	461a      	mov	r2, r3
 800c530:	2300      	movs	r3, #0
 800c532:	f8c2 3ff0 	str.w	r3, [r2, #4080]	; 0xff0
 800c536:	f005 f953 	bl	80117e0 <bbe099565971cd2d437b6a8e152f225cced7c4ee>
 800c53a:	f7f9 feb3 	bl	80062a4 <EMBENET_RADIO_Init>
 800c53e:	f7f9 fb05 	bl	8005b4c <EMBENET_AES128_Init>
 800c542:	f006 ff25 	bl	8013390 <bf6cd42aa4b8da9fc5f5650bf0a6c717df5ed505>
 800c546:	f000 fcbf 	bl	800cec8 <62d16b48e9529b8b29eb67945bd8081213959681>
 800c54a:	f002 ffa9 	bl	800f4a0 <8651bfcf35514b04809eb22bd8aa118172b46770>
 800c54e:	f005 fc5d 	bl	8011e0c <da97346f7fa50b65fe6c97432d29b132cbef037c>
 800c552:	f00a f8d3 	bl	80166fc <36fc8fd3531c1a40f267c168c66ed988dd7f65d6>
 800c556:	f005 ff6b 	bl	8012430 <a2cfc355d32e55b8b56cc48ae29213a5fcc061ca>
 800c55a:	f00a fce5 	bl	8016f28 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79>
 800c55e:	f010 f991 	bl	801c884 <eea52b91d7a1bb91cb2c756cbb75125f1315d891>
 800c562:	f011 fe63 	bl	801e22c <fbe24b77062e695b9b69518d2423c2cc606c842f>
 800c566:	f000 fe6d 	bl	800d244 <a65a9e0e9d2172731582a842552346b36304a3e3>
 800c56a:	f00e fe3d 	bl	801b1e8 <d3d7042d854d8905136f03fa99a8893947aafdc7>
 800c56e:	f00e fc0b 	bl	801ad88 <bcbd76277dc83b5a545ee18a3f2075697c040c84>
 800c572:	f01b fa1b 	bl	80279ac <082eefb804d1e0ed7226bf17620f026c0888c274>
 800c576:	f01b fc27 	bl	8027dc8 <73cd113f0512e09e8865b1dc11046143bbfb5214>
 800c57a:	f017 fa7c 	bl	8023a76 <294ac47dbf0553b0bc1a0d13a73dce6f2c303667>
 800c57e:	f018 fdb1 	bl	80250e4 <1d524c1b514218a64c10ce09ef25ee3b26d5aac8>
 800c582:	f018 ff87 	bl	8025494 <cb684a375f86ba40b2b36632ce4bd2a58554e76c>
 800c586:	f01b fd91 	bl	80280ac <9aa1c7f7136549b4c61c7ca6983f673760c5352f>
 800c58a:	f006 fb93 	bl	8012cb4 <781f8340fa417dd87327132209f6d0b889d0ff2a>
 800c58e:	4b34      	ldr	r3, [pc, #208]	; (800c660 <EMBENET_NODE_Init+0x204>)
 800c590:	681b      	ldr	r3, [r3, #0]
 800c592:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c596:	2200      	movs	r2, #0
 800c598:	f883 2158 	strb.w	r2, [r3, #344]	; 0x158
 800c59c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c59e:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c5a2:	3320      	adds	r3, #32
 800c5a4:	4619      	mov	r1, r3
 800c5a6:	482f      	ldr	r0, [pc, #188]	; (800c664 <EMBENET_NODE_Init+0x208>)
 800c5a8:	f000 f970 	bl	800c88c <EMBENET_NODE_TaskCreate>
 800c5ac:	4602      	mov	r2, r0
 800c5ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c5b0:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c5b4:	f8c3 2fe0 	str.w	r2, [r3, #4064]	; 0xfe0
 800c5b8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c5ba:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c5be:	461a      	mov	r2, r3
 800c5c0:	2300      	movs	r3, #0
 800c5c2:	f8c2 3ff4 	str.w	r3, [r2, #4084]	; 0xff4
 800c5c6:	4a24      	ldr	r2, [pc, #144]	; (800c658 <EMBENET_NODE_Init+0x1fc>)
 800c5c8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800c5cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c5d0:	e883 0003 	stmia.w	r3, {r0, r1}
 800c5d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c5d6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c5da:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
 800c5de:	4a22      	ldr	r2, [pc, #136]	; (800c668 <EMBENET_NODE_Init+0x20c>)
 800c5e0:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800c5e4:	c903      	ldmia	r1, {r0, r1}
 800c5e6:	f008 fe0f 	bl	8015208 <LOGGER_PrintLine>
 800c5ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c5ec:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c5f0:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
 800c5f4:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c5f6:	015b      	lsls	r3, r3, #5
 800c5f8:	4413      	add	r3, r2
 800c5fa:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c5fe:	333c      	adds	r3, #60	; 0x3c
 800c600:	781c      	ldrb	r4, [r3, #0]
 800c602:	f04f 0000 	mov.w	r0, #0
 800c606:	f04f 0101 	mov.w	r1, #1
 800c60a:	f04f 0200 	mov.w	r2, #0
 800c60e:	f04f 0300 	mov.w	r3, #0
 800c612:	0842      	lsrs	r2, r0, #1
 800c614:	ea42 72c1 	orr.w	r2, r2, r1, lsl #31
 800c618:	084b      	lsrs	r3, r1, #1
 800c61a:	4610      	mov	r0, r2
 800c61c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c61e:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c622:	f8d3 1ff4 	ldr.w	r1, [r3, #4084]	; 0xff4
 800c626:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800c628:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c62c:	f8d3 3fe0 	ldr.w	r3, [r3, #4064]	; 0xfe0
 800c630:	015b      	lsls	r3, r3, #5
 800c632:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c636:	3338      	adds	r3, #56	; 0x38
 800c638:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800c63a:	4413      	add	r3, r2
 800c63c:	9301      	str	r3, [sp, #4]
 800c63e:	4b0b      	ldr	r3, [pc, #44]	; (800c66c <EMBENET_NODE_Init+0x210>)
 800c640:	9300      	str	r3, [sp, #0]
 800c642:	460b      	mov	r3, r1
 800c644:	4602      	mov	r2, r0
 800c646:	2101      	movs	r1, #1
 800c648:	4620      	mov	r0, r4
 800c64a:	f005 f94f 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 800c64e:	2300      	movs	r3, #0
 800c650:	4618      	mov	r0, r3
 800c652:	3740      	adds	r7, #64	; 0x40
 800c654:	46bd      	mov	sp, r7
 800c656:	bdb0      	pop	{r4, r5, r7, pc}
 800c658:	0802e094 	.word	0x0802e094
 800c65c:	0802e044 	.word	0x0802e044
 800c660:	20000040 	.word	0x20000040
 800c664:	0800c395 	.word	0x0800c395
 800c668:	0802e060 	.word	0x0802e060
 800c66c:	0800c1a9 	.word	0x0800c1a9

0800c670 <EMBENET_NODE_Join>:
 800c670:	b580      	push	{r7, lr}
 800c672:	b086      	sub	sp, #24
 800c674:	af00      	add	r7, sp, #0
 800c676:	6078      	str	r0, [r7, #4]
 800c678:	687b      	ldr	r3, [r7, #4]
 800c67a:	2b00      	cmp	r3, #0
 800c67c:	d101      	bne.n	800c682 <EMBENET_NODE_Join+0x12>
 800c67e:	2302      	movs	r3, #2
 800c680:	e026      	b.n	800c6d0 <EMBENET_NODE_Join+0x60>
 800c682:	4b15      	ldr	r3, [pc, #84]	; (800c6d8 <EMBENET_NODE_Join+0x68>)
 800c684:	681b      	ldr	r3, [r3, #0]
 800c686:	617b      	str	r3, [r7, #20]
 800c688:	4a14      	ldr	r2, [pc, #80]	; (800c6dc <EMBENET_NODE_Join+0x6c>)
 800c68a:	f107 030c 	add.w	r3, r7, #12
 800c68e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c692:	e883 0003 	stmia.w	r3, {r0, r1}
 800c696:	4a12      	ldr	r2, [pc, #72]	; (800c6e0 <EMBENET_NODE_Join+0x70>)
 800c698:	f107 030c 	add.w	r3, r7, #12
 800c69c:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c6a0:	f008 fdb2 	bl	8015208 <LOGGER_PrintLine>
 800c6a4:	697b      	ldr	r3, [r7, #20]
 800c6a6:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 800c6aa:	333e      	adds	r3, #62	; 0x3e
 800c6ac:	2220      	movs	r2, #32
 800c6ae:	6879      	ldr	r1, [r7, #4]
 800c6b0:	4618      	mov	r0, r3
 800c6b2:	f01e fdc0 	bl	802b236 <memcpy>
 800c6b6:	687b      	ldr	r3, [r7, #4]
 800c6b8:	4619      	mov	r1, r3
 800c6ba:	2001      	movs	r0, #1
 800c6bc:	f00a f848 	bl	8016750 <bdbe454f364e40446632df307cd018fd5121d6b0>
 800c6c0:	687b      	ldr	r3, [r7, #4]
 800c6c2:	3310      	adds	r3, #16
 800c6c4:	4618      	mov	r0, r3
 800c6c6:	f005 fec9 	bl	801245c <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8>
 800c6ca:	f7ff fd21 	bl	800c110 <2b020927d3c6eb407223a1baa3d6ce3597a3f88d>
 800c6ce:	2300      	movs	r3, #0
 800c6d0:	4618      	mov	r0, r3
 800c6d2:	3718      	adds	r7, #24
 800c6d4:	46bd      	mov	sp, r7
 800c6d6:	bd80      	pop	{r7, pc}
 800c6d8:	20000040 	.word	0x20000040
 800c6dc:	0802e094 	.word	0x0802e094
 800c6e0:	0802e09c 	.word	0x0802e09c

0800c6e4 <EMBENET_UDP_RegisterSocket>:
 800c6e4:	b580      	push	{r7, lr}
 800c6e6:	b082      	sub	sp, #8
 800c6e8:	af00      	add	r7, sp, #0
 800c6ea:	6078      	str	r0, [r7, #4]
 800c6ec:	6878      	ldr	r0, [r7, #4]
 800c6ee:	f01b fceb 	bl	80280c8 <76cd6211f2085e3d946bd747f2187c2e80301a64>
 800c6f2:	4603      	mov	r3, r0
 800c6f4:	4618      	mov	r0, r3
 800c6f6:	f7ff fce3 	bl	800c0c0 <translateUdpStatus>
 800c6fa:	4603      	mov	r3, r0
 800c6fc:	4618      	mov	r0, r3
 800c6fe:	3708      	adds	r7, #8
 800c700:	46bd      	mov	sp, r7
 800c702:	bd80      	pop	{r7, pc}

0800c704 <EMBENET_UDP_UnregisterSocket>:
 800c704:	b580      	push	{r7, lr}
 800c706:	b082      	sub	sp, #8
 800c708:	af00      	add	r7, sp, #0
 800c70a:	6078      	str	r0, [r7, #4]
 800c70c:	6878      	ldr	r0, [r7, #4]
 800c70e:	f01b fd15 	bl	802813c <008a3a43d97272e7b0f59f361a8c8969876e60dd>
 800c712:	4603      	mov	r3, r0
 800c714:	4618      	mov	r0, r3
 800c716:	f7ff fcd3 	bl	800c0c0 <translateUdpStatus>
 800c71a:	4603      	mov	r3, r0
 800c71c:	4618      	mov	r0, r3
 800c71e:	3708      	adds	r7, #8
 800c720:	46bd      	mov	sp, r7
 800c722:	bd80      	pop	{r7, pc}

0800c724 <EMBENET_UDP_Send>:
 800c724:	b580      	push	{r7, lr}
 800c726:	b086      	sub	sp, #24
 800c728:	af02      	add	r7, sp, #8
 800c72a:	60f8      	str	r0, [r7, #12]
 800c72c:	60b9      	str	r1, [r7, #8]
 800c72e:	603b      	str	r3, [r7, #0]
 800c730:	4613      	mov	r3, r2
 800c732:	80fb      	strh	r3, [r7, #6]
 800c734:	68fb      	ldr	r3, [r7, #12]
 800c736:	2b00      	cmp	r3, #0
 800c738:	d002      	beq.n	800c740 <EMBENET_UDP_Send+0x1c>
 800c73a:	683b      	ldr	r3, [r7, #0]
 800c73c:	2b00      	cmp	r3, #0
 800c73e:	d101      	bne.n	800c744 <EMBENET_UDP_Send+0x20>
 800c740:	2302      	movs	r3, #2
 800c742:	e00d      	b.n	800c760 <EMBENET_UDP_Send+0x3c>
 800c744:	69bb      	ldr	r3, [r7, #24]
 800c746:	b2db      	uxtb	r3, r3
 800c748:	88fa      	ldrh	r2, [r7, #6]
 800c74a:	9300      	str	r3, [sp, #0]
 800c74c:	683b      	ldr	r3, [r7, #0]
 800c74e:	68f9      	ldr	r1, [r7, #12]
 800c750:	68b8      	ldr	r0, [r7, #8]
 800c752:	f01b fd19 	bl	8028188 <09c9c31144d89e446fc56189171072a9b46992fd>
 800c756:	4603      	mov	r3, r0
 800c758:	4618      	mov	r0, r3
 800c75a:	f7ff fcb1 	bl	800c0c0 <translateUdpStatus>
 800c75e:	4603      	mov	r3, r0
 800c760:	4618      	mov	r0, r3
 800c762:	3710      	adds	r7, #16
 800c764:	46bd      	mov	sp, r7
 800c766:	bd80      	pop	{r7, pc}

0800c768 <EMBENET_NODE_Proc>:
 800c768:	b5b0      	push	{r4, r5, r7, lr}
 800c76a:	af00      	add	r7, sp, #0
 800c76c:	f006 fe26 	bl	80133bc <ef153328aa1040603d831896041b65ee1135a0ee>
 800c770:	4b12      	ldr	r3, [pc, #72]	; (800c7bc <EMBENET_NODE_Proc+0x54>)
 800c772:	681b      	ldr	r3, [r3, #0]
 800c774:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c778:	f893 3158 	ldrb.w	r3, [r3, #344]	; 0x158
 800c77c:	2b00      	cmp	r3, #0
 800c77e:	d01a      	beq.n	800c7b6 <EMBENET_NODE_Proc+0x4e>
 800c780:	f000 f81e 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 800c784:	4b0d      	ldr	r3, [pc, #52]	; (800c7bc <EMBENET_NODE_Proc+0x54>)
 800c786:	681b      	ldr	r3, [r3, #0]
 800c788:	f503 5345 	add.w	r3, r3, #12608	; 0x3140
 800c78c:	3320      	adds	r3, #32
 800c78e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c792:	1a84      	subs	r4, r0, r2
 800c794:	eb61 0503 	sbc.w	r5, r1, r3
 800c798:	f640 73a1 	movw	r3, #4001	; 0xfa1
 800c79c:	429c      	cmp	r4, r3
 800c79e:	f175 0300 	sbcs.w	r3, r5, #0
 800c7a2:	d308      	bcc.n	800c7b6 <EMBENET_NODE_Proc+0x4e>
 800c7a4:	f7ff fce8 	bl	800c178 <stop>
 800c7a8:	4b04      	ldr	r3, [pc, #16]	; (800c7bc <EMBENET_NODE_Proc+0x54>)
 800c7aa:	681b      	ldr	r3, [r3, #0]
 800c7ac:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c7b0:	2200      	movs	r2, #0
 800c7b2:	f883 2158 	strb.w	r2, [r3, #344]	; 0x158
 800c7b6:	bf00      	nop
 800c7b8:	bdb0      	pop	{r4, r5, r7, pc}
 800c7ba:	bf00      	nop
 800c7bc:	20000040 	.word	0x20000040

0800c7c0 <EMBENET_NODE_GetLocalTime>:
 800c7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7c4:	b087      	sub	sp, #28
 800c7c6:	af00      	add	r7, sp, #0
 800c7c8:	4b2f      	ldr	r3, [pc, #188]	; (800c888 <EMBENET_NODE_GetLocalTime+0xc8>)
 800c7ca:	681b      	ldr	r3, [r3, #0]
 800c7cc:	617b      	str	r3, [r7, #20]
 800c7ce:	f7f9 fc3f 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800c7d2:	f005 f99d 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 800c7d6:	6138      	str	r0, [r7, #16]
 800c7d8:	697b      	ldr	r3, [r7, #20]
 800c7da:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c7de:	f8d3 3ff0 	ldr.w	r3, [r3, #4080]	; 0xff0
 800c7e2:	693a      	ldr	r2, [r7, #16]
 800c7e4:	429a      	cmp	r2, r3
 800c7e6:	d212      	bcs.n	800c80e <EMBENET_NODE_GetLocalTime+0x4e>
 800c7e8:	697b      	ldr	r3, [r7, #20]
 800c7ea:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c7ee:	3330      	adds	r3, #48	; 0x30
 800c7f0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800c7f4:	1c51      	adds	r1, r2, #1
 800c7f6:	6039      	str	r1, [r7, #0]
 800c7f8:	f143 0300 	adc.w	r3, r3, #0
 800c7fc:	607b      	str	r3, [r7, #4]
 800c7fe:	697b      	ldr	r3, [r7, #20]
 800c800:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c804:	3330      	adds	r3, #48	; 0x30
 800c806:	e9d7 1200 	ldrd	r1, r2, [r7]
 800c80a:	e943 1202 	strd	r1, r2, [r3, #-8]
 800c80e:	697b      	ldr	r3, [r7, #20]
 800c810:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800c814:	461a      	mov	r2, r3
 800c816:	693b      	ldr	r3, [r7, #16]
 800c818:	f8c2 3ff0 	str.w	r3, [r2, #4080]	; 0xff0
 800c81c:	697b      	ldr	r3, [r7, #20]
 800c81e:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c822:	3330      	adds	r3, #48	; 0x30
 800c824:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800c828:	f04f 0000 	mov.w	r0, #0
 800c82c:	f04f 0101 	mov.w	r1, #1
 800c830:	fb00 fc03 	mul.w	ip, r0, r3
 800c834:	fb02 f601 	mul.w	r6, r2, r1
 800c838:	4466      	add	r6, ip
 800c83a:	fba2 4500 	umull	r4, r5, r2, r0
 800c83e:	1973      	adds	r3, r6, r5
 800c840:	461d      	mov	r5, r3
 800c842:	e9c7 4502 	strd	r4, r5, [r7, #8]
 800c846:	e9c7 4502 	strd	r4, r5, [r7, #8]
 800c84a:	693b      	ldr	r3, [r7, #16]
 800c84c:	2200      	movs	r2, #0
 800c84e:	4698      	mov	r8, r3
 800c850:	4691      	mov	r9, r2
 800c852:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800c856:	eb12 0a08 	adds.w	sl, r2, r8
 800c85a:	eb43 0b09 	adc.w	fp, r3, r9
 800c85e:	e9c7 ab02 	strd	sl, fp, [r7, #8]
 800c862:	f7f9 fc15 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800c866:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800c86a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c86e:	f04f 0300 	mov.w	r3, #0
 800c872:	f7f4 f8e3 	bl	8000a3c <__aeabi_uldivmod>
 800c876:	4602      	mov	r2, r0
 800c878:	460b      	mov	r3, r1
 800c87a:	4610      	mov	r0, r2
 800c87c:	4619      	mov	r1, r3
 800c87e:	371c      	adds	r7, #28
 800c880:	46bd      	mov	sp, r7
 800c882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c886:	bf00      	nop
 800c888:	20000040 	.word	0x20000040

0800c88c <EMBENET_NODE_TaskCreate>:
 800c88c:	b580      	push	{r7, lr}
 800c88e:	b08a      	sub	sp, #40	; 0x28
 800c890:	af00      	add	r7, sp, #0
 800c892:	6078      	str	r0, [r7, #4]
 800c894:	6039      	str	r1, [r7, #0]
 800c896:	687b      	ldr	r3, [r7, #4]
 800c898:	2b00      	cmp	r3, #0
 800c89a:	d102      	bne.n	800c8a2 <EMBENET_NODE_TaskCreate+0x16>
 800c89c:	f04f 33ff 	mov.w	r3, #4294967295
 800c8a0:	e077      	b.n	800c992 <EMBENET_NODE_TaskCreate+0x106>
 800c8a2:	4b3e      	ldr	r3, [pc, #248]	; (800c99c <EMBENET_NODE_TaskCreate+0x110>)
 800c8a4:	681b      	ldr	r3, [r3, #0]
 800c8a6:	623b      	str	r3, [r7, #32]
 800c8a8:	2300      	movs	r3, #0
 800c8aa:	627b      	str	r3, [r7, #36]	; 0x24
 800c8ac:	e05e      	b.n	800c96c <EMBENET_NODE_TaskCreate+0xe0>
 800c8ae:	6a3a      	ldr	r2, [r7, #32]
 800c8b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8b2:	015b      	lsls	r3, r3, #5
 800c8b4:	4413      	add	r3, r2
 800c8b6:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c8ba:	333c      	adds	r3, #60	; 0x3c
 800c8bc:	781b      	ldrb	r3, [r3, #0]
 800c8be:	2b1f      	cmp	r3, #31
 800c8c0:	d151      	bne.n	800c966 <EMBENET_NODE_TaskCreate+0xda>
 800c8c2:	2001      	movs	r0, #1
 800c8c4:	f004 ffae 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 800c8c8:	4603      	mov	r3, r0
 800c8ca:	4619      	mov	r1, r3
 800c8cc:	6a3a      	ldr	r2, [r7, #32]
 800c8ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8d0:	015b      	lsls	r3, r3, #5
 800c8d2:	4413      	add	r3, r2
 800c8d4:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c8d8:	333c      	adds	r3, #60	; 0x3c
 800c8da:	460a      	mov	r2, r1
 800c8dc:	701a      	strb	r2, [r3, #0]
 800c8de:	6a3a      	ldr	r2, [r7, #32]
 800c8e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8e2:	015b      	lsls	r3, r3, #5
 800c8e4:	4413      	add	r3, r2
 800c8e6:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c8ea:	333c      	adds	r3, #60	; 0x3c
 800c8ec:	781b      	ldrb	r3, [r3, #0]
 800c8ee:	2b1f      	cmp	r3, #31
 800c8f0:	d028      	beq.n	800c944 <EMBENET_NODE_TaskCreate+0xb8>
 800c8f2:	6a3a      	ldr	r2, [r7, #32]
 800c8f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c8f6:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800c8fa:	015b      	lsls	r3, r3, #5
 800c8fc:	4413      	add	r3, r2
 800c8fe:	687a      	ldr	r2, [r7, #4]
 800c900:	601a      	str	r2, [r3, #0]
 800c902:	6a3a      	ldr	r2, [r7, #32]
 800c904:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c906:	015b      	lsls	r3, r3, #5
 800c908:	4413      	add	r3, r2
 800c90a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c90e:	3310      	adds	r3, #16
 800c910:	683a      	ldr	r2, [r7, #0]
 800c912:	601a      	str	r2, [r3, #0]
 800c914:	6a3a      	ldr	r2, [r7, #32]
 800c916:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c918:	015b      	lsls	r3, r3, #5
 800c91a:	4413      	add	r3, r2
 800c91c:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800c920:	3308      	adds	r3, #8
 800c922:	f04f 30ff 	mov.w	r0, #4294967295
 800c926:	f04f 31ff 	mov.w	r1, #4294967295
 800c92a:	e9c3 0100 	strd	r0, r1, [r3]
 800c92e:	6a3a      	ldr	r2, [r7, #32]
 800c930:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c932:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800c936:	015b      	lsls	r3, r3, #5
 800c938:	4413      	add	r3, r2
 800c93a:	3304      	adds	r3, #4
 800c93c:	22ff      	movs	r2, #255	; 0xff
 800c93e:	701a      	strb	r2, [r3, #0]
 800c940:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c942:	e026      	b.n	800c992 <EMBENET_NODE_TaskCreate+0x106>
 800c944:	4a16      	ldr	r2, [pc, #88]	; (800c9a0 <EMBENET_NODE_TaskCreate+0x114>)
 800c946:	f107 0310 	add.w	r3, r7, #16
 800c94a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c94e:	e883 0003 	stmia.w	r3, {r0, r1}
 800c952:	4a14      	ldr	r2, [pc, #80]	; (800c9a4 <EMBENET_NODE_TaskCreate+0x118>)
 800c954:	f107 0310 	add.w	r3, r7, #16
 800c958:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c95c:	f008 fc54 	bl	8015208 <LOGGER_PrintLine>
 800c960:	f04f 33ff 	mov.w	r3, #4294967295
 800c964:	e015      	b.n	800c992 <EMBENET_NODE_TaskCreate+0x106>
 800c966:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c968:	3301      	adds	r3, #1
 800c96a:	627b      	str	r3, [r7, #36]	; 0x24
 800c96c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c96e:	2b0a      	cmp	r3, #10
 800c970:	d99d      	bls.n	800c8ae <EMBENET_NODE_TaskCreate+0x22>
 800c972:	4a0b      	ldr	r2, [pc, #44]	; (800c9a0 <EMBENET_NODE_TaskCreate+0x114>)
 800c974:	f107 0308 	add.w	r3, r7, #8
 800c978:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c97c:	e883 0003 	stmia.w	r3, {r0, r1}
 800c980:	4a09      	ldr	r2, [pc, #36]	; (800c9a8 <EMBENET_NODE_TaskCreate+0x11c>)
 800c982:	f107 0308 	add.w	r3, r7, #8
 800c986:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c98a:	f008 fc3d 	bl	8015208 <LOGGER_PrintLine>
 800c98e:	f04f 33ff 	mov.w	r3, #4294967295
 800c992:	4618      	mov	r0, r3
 800c994:	3728      	adds	r7, #40	; 0x28
 800c996:	46bd      	mov	sp, r7
 800c998:	bd80      	pop	{r7, pc}
 800c99a:	bf00      	nop
 800c99c:	20000040 	.word	0x20000040
 800c9a0:	0802e174 	.word	0x0802e174
 800c9a4:	0802e104 	.word	0x0802e104
 800c9a8:	0802e13c 	.word	0x0802e13c

0800c9ac <EMBENET_NODE_TaskSchedule>:
 800c9ac:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c9b0:	b0b4      	sub	sp, #208	; 0xd0
 800c9b2:	af02      	add	r7, sp, #8
 800c9b4:	65f8      	str	r0, [r7, #92]	; 0x5c
 800c9b6:	e9c7 2314 	strd	r2, r3, [r7, #80]	; 0x50
 800c9ba:	460b      	mov	r3, r1
 800c9bc:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
 800c9c0:	4b75      	ldr	r3, [pc, #468]	; (800cb98 <EMBENET_NODE_TaskSchedule+0x1ec>)
 800c9c2:	681b      	ldr	r3, [r3, #0]
 800c9c4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800c9c8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c9ca:	2b0a      	cmp	r3, #10
 800c9cc:	d901      	bls.n	800c9d2 <EMBENET_NODE_TaskSchedule+0x26>
 800c9ce:	2302      	movs	r3, #2
 800c9d0:	e1b2      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800c9d2:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800c9d6:	2b00      	cmp	r3, #0
 800c9d8:	d005      	beq.n	800c9e6 <EMBENET_NODE_TaskSchedule+0x3a>
 800c9da:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800c9de:	2b01      	cmp	r3, #1
 800c9e0:	d001      	beq.n	800c9e6 <EMBENET_NODE_TaskSchedule+0x3a>
 800c9e2:	2302      	movs	r3, #2
 800c9e4:	e1a8      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800c9e6:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800c9ea:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800c9ec:	015b      	lsls	r3, r3, #5
 800c9ee:	4413      	add	r3, r2
 800c9f0:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800c9f4:	333c      	adds	r3, #60	; 0x3c
 800c9f6:	781b      	ldrb	r3, [r3, #0]
 800c9f8:	2b1f      	cmp	r3, #31
 800c9fa:	d101      	bne.n	800ca00 <EMBENET_NODE_TaskSchedule+0x54>
 800c9fc:	2302      	movs	r3, #2
 800c9fe:	e19b      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800ca00:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ca04:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ca06:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800ca0a:	015b      	lsls	r3, r3, #5
 800ca0c:	4413      	add	r3, r2
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	2b00      	cmp	r3, #0
 800ca12:	d101      	bne.n	800ca18 <EMBENET_NODE_TaskSchedule+0x6c>
 800ca14:	2301      	movs	r3, #1
 800ca16:	e18f      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800ca18:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800ca1c:	2b01      	cmp	r3, #1
 800ca1e:	f040 80a8 	bne.w	800cb72 <EMBENET_NODE_TaskSchedule+0x1c6>
 800ca22:	f107 027c 	add.w	r2, r7, #124	; 0x7c
 800ca26:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800ca2a:	4611      	mov	r1, r2
 800ca2c:	4618      	mov	r0, r3
 800ca2e:	f00e f927 	bl	801ac80 <423de69afc5c7b88ba71928d815161412a3b9f11>
 800ca32:	4603      	mov	r3, r0
 800ca34:	2b00      	cmp	r3, #0
 800ca36:	f000 809a 	beq.w	800cb6e <EMBENET_NODE_TaskSchedule+0x1c2>
 800ca3a:	f8d7 0080 	ldr.w	r0, [r7, #128]	; 0x80
 800ca3e:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 800ca42:	4619      	mov	r1, r3
 800ca44:	4b55      	ldr	r3, [pc, #340]	; (800cb9c <EMBENET_NODE_TaskSchedule+0x1f0>)
 800ca46:	691b      	ldr	r3, [r3, #16]
 800ca48:	f503 72fa 	add.w	r2, r3, #500	; 0x1f4
 800ca4c:	4b54      	ldr	r3, [pc, #336]	; (800cba0 <EMBENET_NODE_TaskSchedule+0x1f4>)
 800ca4e:	fba3 2302 	umull	r2, r3, r3, r2
 800ca52:	099b      	lsrs	r3, r3, #6
 800ca54:	2200      	movs	r2, #0
 800ca56:	64bb      	str	r3, [r7, #72]	; 0x48
 800ca58:	64fa      	str	r2, [r7, #76]	; 0x4c
 800ca5a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800ca5c:	fb03 f201 	mul.w	r2, r3, r1
 800ca60:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ca62:	fb00 f303 	mul.w	r3, r0, r3
 800ca66:	4413      	add	r3, r2
 800ca68:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800ca6a:	fba0 4502 	umull	r4, r5, r0, r2
 800ca6e:	442b      	add	r3, r5
 800ca70:	461d      	mov	r5, r3
 800ca72:	e9c7 452e 	strd	r4, r5, [r7, #184]	; 0xb8
 800ca76:	e9c7 452e 	strd	r4, r5, [r7, #184]	; 0xb8
 800ca7a:	f005 f849 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 800ca7e:	4603      	mov	r3, r0
 800ca80:	2200      	movs	r2, #0
 800ca82:	643b      	str	r3, [r7, #64]	; 0x40
 800ca84:	647a      	str	r2, [r7, #68]	; 0x44
 800ca86:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800ca88:	2200      	movs	r2, #0
 800ca8a:	63bb      	str	r3, [r7, #56]	; 0x38
 800ca8c:	63fa      	str	r2, [r7, #60]	; 0x3c
 800ca8e:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 800ca92:	4608      	mov	r0, r1
 800ca94:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	; 0x38
 800ca98:	461d      	mov	r5, r3
 800ca9a:	1b40      	subs	r0, r0, r5
 800ca9c:	6338      	str	r0, [r7, #48]	; 0x30
 800ca9e:	4623      	mov	r3, r4
 800caa0:	eb62 0303 	sbc.w	r3, r2, r3
 800caa4:	637b      	str	r3, [r7, #52]	; 0x34
 800caa6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800caaa:	f04f 0300 	mov.w	r3, #0
 800caae:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800cab2:	f7f3 ff73 	bl	800099c <__aeabi_ldivmod>
 800cab6:	4602      	mov	r2, r0
 800cab8:	460b      	mov	r3, r1
 800caba:	4610      	mov	r0, r2
 800cabc:	4619      	mov	r1, r3
 800cabe:	e9d7 232e 	ldrd	r2, r3, [r7, #184]	; 0xb8
 800cac2:	1884      	adds	r4, r0, r2
 800cac4:	62bc      	str	r4, [r7, #40]	; 0x28
 800cac6:	eb41 0303 	adc.w	r3, r1, r3
 800caca:	62fb      	str	r3, [r7, #44]	; 0x2c
 800cacc:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 800cad0:	e9c7 342c 	strd	r3, r4, [r7, #176]	; 0xb0
 800cad4:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800cad8:	1c51      	adds	r1, r2, #1
 800cada:	6239      	str	r1, [r7, #32]
 800cadc:	f143 0300 	adc.w	r3, r3, #0
 800cae0:	627b      	str	r3, [r7, #36]	; 0x24
 800cae2:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 800cae6:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800caea:	4604      	mov	r4, r0
 800caec:	42a2      	cmp	r2, r4
 800caee:	418b      	sbcs	r3, r1
 800caf0:	d301      	bcc.n	800caf6 <EMBENET_NODE_TaskSchedule+0x14a>
 800caf2:	2305      	movs	r3, #5
 800caf4:	e120      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800caf6:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800caf8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800cafc:	1ad3      	subs	r3, r2, r3
 800cafe:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cb02:	fb02 f303 	mul.w	r3, r2, r3
 800cb06:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800cb0a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cb0e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cb10:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800cb14:	015b      	lsls	r3, r3, #5
 800cb16:	4413      	add	r3, r2
 800cb18:	1d1a      	adds	r2, r3, #4
 800cb1a:	2301      	movs	r3, #1
 800cb1c:	7013      	strb	r3, [r2, #0]
 800cb1e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cb22:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cb24:	015b      	lsls	r3, r3, #5
 800cb26:	4413      	add	r3, r2
 800cb28:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800cb2c:	3308      	adds	r3, #8
 800cb2e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800cb32:	e9c3 0100 	strd	r0, r1, [r3]
 800cb36:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cb3a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cb3c:	015b      	lsls	r3, r3, #5
 800cb3e:	4413      	add	r3, r2
 800cb40:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800cb44:	333c      	adds	r3, #60	; 0x3c
 800cb46:	7818      	ldrb	r0, [r3, #0]
 800cb48:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800cb4a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cb4c:	015b      	lsls	r3, r3, #5
 800cb4e:	f503 523f 	add.w	r2, r3, #12224	; 0x2fc0
 800cb52:	3238      	adds	r2, #56	; 0x38
 800cb54:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800cb58:	4413      	add	r3, r2
 800cb5a:	9301      	str	r3, [sp, #4]
 800cb5c:	4b11      	ldr	r3, [pc, #68]	; (800cba4 <EMBENET_NODE_TaskSchedule+0x1f8>)
 800cb5e:	9300      	str	r3, [sp, #0]
 800cb60:	460b      	mov	r3, r1
 800cb62:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800cb66:	2101      	movs	r1, #1
 800cb68:	f004 fec0 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 800cb6c:	e001      	b.n	800cb72 <EMBENET_NODE_TaskSchedule+0x1c6>
 800cb6e:	2304      	movs	r3, #4
 800cb70:	e0e2      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800cb72:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 800cb76:	2b00      	cmp	r3, #0
 800cb78:	f040 80dd 	bne.w	800cd36 <EMBENET_NODE_TaskSchedule+0x38a>
 800cb7c:	f7ff fe20 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 800cb80:	e9c7 0128 	strd	r0, r1, [r7, #160]	; 0xa0
 800cb84:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800cb88:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	; 0xa0
 800cb8c:	4290      	cmp	r0, r2
 800cb8e:	eb71 0303 	sbcs.w	r3, r1, r3
 800cb92:	d209      	bcs.n	800cba8 <EMBENET_NODE_TaskSchedule+0x1fc>
 800cb94:	2305      	movs	r3, #5
 800cb96:	e0cf      	b.n	800cd38 <EMBENET_NODE_TaskSchedule+0x38c>
 800cb98:	20000040 	.word	0x20000040
 800cb9c:	080318ac 	.word	0x080318ac
 800cba0:	10624dd3 	.word	0x10624dd3
 800cba4:	0800c1a9 	.word	0x0800c1a9
 800cba8:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cbac:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cbae:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 800cbb2:	015b      	lsls	r3, r3, #5
 800cbb4:	4413      	add	r3, r2
 800cbb6:	1d1a      	adds	r2, r3, #4
 800cbb8:	2300      	movs	r3, #0
 800cbba:	7013      	strb	r3, [r2, #0]
 800cbbc:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cbc0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cbc2:	015b      	lsls	r3, r3, #5
 800cbc4:	4413      	add	r3, r2
 800cbc6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800cbca:	3308      	adds	r3, #8
 800cbcc:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 800cbd0:	e9c3 0100 	strd	r0, r1, [r3]
 800cbd4:	f7f9 fa3c 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800cbd8:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800cbdc:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800cbe0:	3330      	adds	r3, #48	; 0x30
 800cbe2:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 800cbe6:	f04f 0200 	mov.w	r2, #0
 800cbea:	f04f 0301 	mov.w	r3, #1
 800cbee:	fb02 f501 	mul.w	r5, r2, r1
 800cbf2:	fb00 f403 	mul.w	r4, r0, r3
 800cbf6:	442c      	add	r4, r5
 800cbf8:	fba0 ab02 	umull	sl, fp, r0, r2
 800cbfc:	eb04 030b 	add.w	r3, r4, fp
 800cc00:	469b      	mov	fp, r3
 800cc02:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800cc06:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800cc0a:	f8d3 3ff4 	ldr.w	r3, [r3, #4084]	; 0xff4
 800cc0e:	2200      	movs	r2, #0
 800cc10:	61bb      	str	r3, [r7, #24]
 800cc12:	61fa      	str	r2, [r7, #28]
 800cc14:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
 800cc18:	461a      	mov	r2, r3
 800cc1a:	eb1a 0202 	adds.w	r2, sl, r2
 800cc1e:	613a      	str	r2, [r7, #16]
 800cc20:	4623      	mov	r3, r4
 800cc22:	eb4b 0303 	adc.w	r3, fp, r3
 800cc26:	617b      	str	r3, [r7, #20]
 800cc28:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800cc2c:	e9c7 3426 	strd	r3, r4, [r7, #152]	; 0x98
 800cc30:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cc34:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cc36:	015b      	lsls	r3, r3, #5
 800cc38:	4413      	add	r3, r2
 800cc3a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 800cc3e:	3308      	adds	r3, #8
 800cc40:	e9d3 0100 	ldrd	r0, r1, [r3]
 800cc44:	4602      	mov	r2, r0
 800cc46:	460b      	mov	r3, r1
 800cc48:	f04f 0400 	mov.w	r4, #0
 800cc4c:	f04f 0500 	mov.w	r5, #0
 800cc50:	015d      	lsls	r5, r3, #5
 800cc52:	ea45 65d2 	orr.w	r5, r5, r2, lsr #27
 800cc56:	0154      	lsls	r4, r2, #5
 800cc58:	4622      	mov	r2, r4
 800cc5a:	462b      	mov	r3, r5
 800cc5c:	ebb2 0800 	subs.w	r8, r2, r0
 800cc60:	eb63 0901 	sbc.w	r9, r3, r1
 800cc64:	f04f 0200 	mov.w	r2, #0
 800cc68:	f04f 0300 	mov.w	r3, #0
 800cc6c:	ea4f 0389 	mov.w	r3, r9, lsl #2
 800cc70:	ea43 7398 	orr.w	r3, r3, r8, lsr #30
 800cc74:	ea4f 0288 	mov.w	r2, r8, lsl #2
 800cc78:	4690      	mov	r8, r2
 800cc7a:	4699      	mov	r9, r3
 800cc7c:	eb18 0300 	adds.w	r3, r8, r0
 800cc80:	60bb      	str	r3, [r7, #8]
 800cc82:	eb49 0301 	adc.w	r3, r9, r1
 800cc86:	60fb      	str	r3, [r7, #12]
 800cc88:	f04f 0200 	mov.w	r2, #0
 800cc8c:	f04f 0300 	mov.w	r3, #0
 800cc90:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800cc94:	4629      	mov	r1, r5
 800cc96:	00cb      	lsls	r3, r1, #3
 800cc98:	4620      	mov	r0, r4
 800cc9a:	4629      	mov	r1, r5
 800cc9c:	4604      	mov	r4, r0
 800cc9e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800cca2:	4601      	mov	r1, r0
 800cca4:	00ca      	lsls	r2, r1, #3
 800cca6:	461c      	mov	r4, r3
 800cca8:	4613      	mov	r3, r2
 800ccaa:	e9c7 3424 	strd	r3, r4, [r7, #144]	; 0x90
 800ccae:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	; 0x90
 800ccb2:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 800ccb6:	1a84      	subs	r4, r0, r2
 800ccb8:	603c      	str	r4, [r7, #0]
 800ccba:	eb61 0303 	sbc.w	r3, r1, r3
 800ccbe:	607b      	str	r3, [r7, #4]
 800ccc0:	e9d7 3400 	ldrd	r3, r4, [r7]
 800ccc4:	e9c7 3422 	strd	r3, r4, [r7, #136]	; 0x88
 800ccc8:	f04f 0000 	mov.w	r0, #0
 800cccc:	f04f 0101 	mov.w	r1, #1
 800ccd0:	f04f 0200 	mov.w	r2, #0
 800ccd4:	f04f 0300 	mov.w	r3, #0
 800ccd8:	0842      	lsrs	r2, r0, #1
 800ccda:	ea42 72c1 	orr.w	r2, r2, r1, lsl #31
 800ccde:	084b      	lsrs	r3, r1, #1
 800cce0:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	; 0x88
 800cce4:	4282      	cmp	r2, r0
 800cce6:	418b      	sbcs	r3, r1
 800cce8:	d323      	bcc.n	800cd32 <EMBENET_NODE_TaskSchedule+0x386>
 800ccea:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ccee:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ccf0:	015b      	lsls	r3, r3, #5
 800ccf2:	4413      	add	r3, r2
 800ccf4:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800ccf8:	333c      	adds	r3, #60	; 0x3c
 800ccfa:	7818      	ldrb	r0, [r3, #0]
 800ccfc:	f8d7 1088 	ldr.w	r1, [r7, #136]	; 0x88
 800cd00:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800cd04:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 800cd08:	f8d3 4ff4 	ldr.w	r4, [r3, #4084]	; 0xff4
 800cd0c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cd0e:	015b      	lsls	r3, r3, #5
 800cd10:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800cd14:	3338      	adds	r3, #56	; 0x38
 800cd16:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800cd1a:	4413      	add	r3, r2
 800cd1c:	9301      	str	r3, [sp, #4]
 800cd1e:	4b09      	ldr	r3, [pc, #36]	; (800cd44 <EMBENET_NODE_TaskSchedule+0x398>)
 800cd20:	9300      	str	r3, [sp, #0]
 800cd22:	4623      	mov	r3, r4
 800cd24:	460a      	mov	r2, r1
 800cd26:	2101      	movs	r1, #1
 800cd28:	f004 fde0 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 800cd2c:	f7f9 f9b0 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800cd30:	e001      	b.n	800cd36 <EMBENET_NODE_TaskSchedule+0x38a>
 800cd32:	f7f9 f9ad 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800cd36:	2300      	movs	r3, #0
 800cd38:	4618      	mov	r0, r3
 800cd3a:	37c8      	adds	r7, #200	; 0xc8
 800cd3c:	46bd      	mov	sp, r7
 800cd3e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800cd42:	bf00      	nop
 800cd44:	0800c1a9 	.word	0x0800c1a9

0800cd48 <EMBENET_NODE_TaskCancel>:
 800cd48:	b580      	push	{r7, lr}
 800cd4a:	b084      	sub	sp, #16
 800cd4c:	af00      	add	r7, sp, #0
 800cd4e:	6078      	str	r0, [r7, #4]
 800cd50:	4b11      	ldr	r3, [pc, #68]	; (800cd98 <EMBENET_NODE_TaskCancel+0x50>)
 800cd52:	681b      	ldr	r3, [r3, #0]
 800cd54:	60fb      	str	r3, [r7, #12]
 800cd56:	687b      	ldr	r3, [r7, #4]
 800cd58:	2b0a      	cmp	r3, #10
 800cd5a:	d901      	bls.n	800cd60 <EMBENET_NODE_TaskCancel+0x18>
 800cd5c:	2302      	movs	r3, #2
 800cd5e:	e017      	b.n	800cd90 <EMBENET_NODE_TaskCancel+0x48>
 800cd60:	68fa      	ldr	r2, [r7, #12]
 800cd62:	687b      	ldr	r3, [r7, #4]
 800cd64:	015b      	lsls	r3, r3, #5
 800cd66:	4413      	add	r3, r2
 800cd68:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800cd6c:	333c      	adds	r3, #60	; 0x3c
 800cd6e:	781b      	ldrb	r3, [r3, #0]
 800cd70:	2b1f      	cmp	r3, #31
 800cd72:	d00c      	beq.n	800cd8e <EMBENET_NODE_TaskCancel+0x46>
 800cd74:	68fa      	ldr	r2, [r7, #12]
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	015b      	lsls	r3, r3, #5
 800cd7a:	4413      	add	r3, r2
 800cd7c:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 800cd80:	333c      	adds	r3, #60	; 0x3c
 800cd82:	781b      	ldrb	r3, [r3, #0]
 800cd84:	4618      	mov	r0, r3
 800cd86:	f004 fe9d 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 800cd8a:	2300      	movs	r3, #0
 800cd8c:	e000      	b.n	800cd90 <EMBENET_NODE_TaskCancel+0x48>
 800cd8e:	2302      	movs	r3, #2
 800cd90:	4618      	mov	r0, r3
 800cd92:	3710      	adds	r7, #16
 800cd94:	46bd      	mov	sp, r7
 800cd96:	bd80      	pop	{r7, pc}
 800cd98:	20000040 	.word	0x20000040

0800cd9c <EMBENET_NODE_GetBorderRouterAddress>:
 800cd9c:	b580      	push	{r7, lr}
 800cd9e:	b082      	sub	sp, #8
 800cda0:	af00      	add	r7, sp, #0
 800cda2:	6078      	str	r0, [r7, #4]
 800cda4:	6878      	ldr	r0, [r7, #4]
 800cda6:	f018 fcd9 	bl	802575c <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0>
 800cdaa:	4603      	mov	r3, r0
 800cdac:	f083 0301 	eor.w	r3, r3, #1
 800cdb0:	b2db      	uxtb	r3, r3
 800cdb2:	2b00      	cmp	r3, #0
 800cdb4:	d001      	beq.n	800cdba <EMBENET_NODE_GetBorderRouterAddress+0x1e>
 800cdb6:	2301      	movs	r3, #1
 800cdb8:	e000      	b.n	800cdbc <EMBENET_NODE_GetBorderRouterAddress+0x20>
 800cdba:	2300      	movs	r3, #0
 800cdbc:	4618      	mov	r0, r3
 800cdbe:	3708      	adds	r7, #8
 800cdc0:	46bd      	mov	sp, r7
 800cdc2:	bd80      	pop	{r7, pc}

0800cdc4 <EMBENET_NODE_GetUID>:
 800cdc4:	b580      	push	{r7, lr}
 800cdc6:	b082      	sub	sp, #8
 800cdc8:	af00      	add	r7, sp, #0
 800cdca:	2002      	movs	r0, #2
 800cdcc:	f000 f916 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 800cdd0:	4603      	mov	r3, r0
 800cdd2:	1c59      	adds	r1, r3, #1
 800cdd4:	463b      	mov	r3, r7
 800cdd6:	2208      	movs	r2, #8
 800cdd8:	4618      	mov	r0, r3
 800cdda:	f7ff f94a 	bl	800c072 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800cdde:	e9d7 2300 	ldrd	r2, r3, [r7]
 800cde2:	4610      	mov	r0, r2
 800cde4:	4619      	mov	r1, r3
 800cde6:	3708      	adds	r7, #8
 800cde8:	46bd      	mov	sp, r7
 800cdea:	bd80      	pop	{r7, pc}

0800cdec <EMBENET_NODE_GetRandomValue>:
 800cdec:	b580      	push	{r7, lr}
 800cdee:	b082      	sub	sp, #8
 800cdf0:	af00      	add	r7, sp, #0
 800cdf2:	6078      	str	r0, [r7, #4]
 800cdf4:	6039      	str	r1, [r7, #0]
 800cdf6:	6839      	ldr	r1, [r7, #0]
 800cdf8:	6878      	ldr	r0, [r7, #4]
 800cdfa:	f005 f86f 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 800cdfe:	4603      	mov	r3, r0
 800ce00:	4618      	mov	r0, r3
 800ce02:	3708      	adds	r7, #8
 800ce04:	46bd      	mov	sp, r7
 800ce06:	bd80      	pop	{r7, pc}

0800ce08 <EMBENET_NODE_GetVersion>:
 800ce08:	b480      	push	{r7}
 800ce0a:	b083      	sub	sp, #12
 800ce0c:	af00      	add	r7, sp, #0
 800ce0e:	4b08      	ldr	r3, [pc, #32]	; (800ce30 <EMBENET_NODE_GetVersion+0x28>)
 800ce10:	681b      	ldr	r3, [r3, #0]
 800ce12:	603b      	str	r3, [r7, #0]
 800ce14:	683b      	ldr	r3, [r7, #0]
 800ce16:	607b      	str	r3, [r7, #4]
 800ce18:	2300      	movs	r3, #0
 800ce1a:	88ba      	ldrh	r2, [r7, #4]
 800ce1c:	f362 030f 	bfi	r3, r2, #0, #16
 800ce20:	88fa      	ldrh	r2, [r7, #6]
 800ce22:	f362 431f 	bfi	r3, r2, #16, #16
 800ce26:	4618      	mov	r0, r3
 800ce28:	370c      	adds	r7, #12
 800ce2a:	46bd      	mov	sp, r7
 800ce2c:	bc80      	pop	{r7}
 800ce2e:	4770      	bx	lr
 800ce30:	0802e17c 	.word	0x0802e17c

0800ce34 <EMBENET_NODE_GetGroupCount>:
 800ce34:	b580      	push	{r7, lr}
 800ce36:	af00      	add	r7, sp, #0
 800ce38:	f01a feaa 	bl	8027b90 <84780c9f08e19cea1884da40f03f0c5650f281d0>
 800ce3c:	4603      	mov	r3, r0
 800ce3e:	4618      	mov	r0, r3
 800ce40:	bd80      	pop	{r7, pc}

0800ce42 <EMBENET_NODE_GetGroupByIndex>:
 800ce42:	b580      	push	{r7, lr}
 800ce44:	b084      	sub	sp, #16
 800ce46:	af00      	add	r7, sp, #0
 800ce48:	6078      	str	r0, [r7, #4]
 800ce4a:	2300      	movs	r3, #0
 800ce4c:	81fb      	strh	r3, [r7, #14]
 800ce4e:	f107 030c 	add.w	r3, r7, #12
 800ce52:	4619      	mov	r1, r3
 800ce54:	6878      	ldr	r0, [r7, #4]
 800ce56:	f01a fec1 	bl	8027bdc <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e>
 800ce5a:	4603      	mov	r3, r0
 800ce5c:	2b00      	cmp	r3, #0
 800ce5e:	d007      	beq.n	800ce70 <EMBENET_NODE_GetGroupByIndex+0x2e>
 800ce60:	f107 010c 	add.w	r1, r7, #12
 800ce64:	f107 030e 	add.w	r3, r7, #14
 800ce68:	2202      	movs	r2, #2
 800ce6a:	4618      	mov	r0, r3
 800ce6c:	f7ff f901 	bl	800c072 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800ce70:	89fb      	ldrh	r3, [r7, #14]
 800ce72:	4618      	mov	r0, r3
 800ce74:	3710      	adds	r7, #16
 800ce76:	46bd      	mov	sp, r7
 800ce78:	bd80      	pop	{r7, pc}

0800ce7a <c5868198428dfaffddb0900c3d01452778b19d11>:
 800ce7a:	b480      	push	{r7}
 800ce7c:	b089      	sub	sp, #36	; 0x24
 800ce7e:	af00      	add	r7, sp, #0
 800ce80:	60f8      	str	r0, [r7, #12]
 800ce82:	60b9      	str	r1, [r7, #8]
 800ce84:	607a      	str	r2, [r7, #4]
 800ce86:	68fb      	ldr	r3, [r7, #12]
 800ce88:	61fb      	str	r3, [r7, #28]
 800ce8a:	68bb      	ldr	r3, [r7, #8]
 800ce8c:	61bb      	str	r3, [r7, #24]
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	617b      	str	r3, [r7, #20]
 800ce92:	2300      	movs	r3, #0
 800ce94:	613b      	str	r3, [r7, #16]
 800ce96:	e00d      	b.n	800ceb4 <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 800ce98:	69ba      	ldr	r2, [r7, #24]
 800ce9a:	693b      	ldr	r3, [r7, #16]
 800ce9c:	441a      	add	r2, r3
 800ce9e:	6979      	ldr	r1, [r7, #20]
 800cea0:	693b      	ldr	r3, [r7, #16]
 800cea2:	1acb      	subs	r3, r1, r3
 800cea4:	3b01      	subs	r3, #1
 800cea6:	69f9      	ldr	r1, [r7, #28]
 800cea8:	440b      	add	r3, r1
 800ceaa:	7812      	ldrb	r2, [r2, #0]
 800ceac:	701a      	strb	r2, [r3, #0]
 800ceae:	693b      	ldr	r3, [r7, #16]
 800ceb0:	3301      	adds	r3, #1
 800ceb2:	613b      	str	r3, [r7, #16]
 800ceb4:	697a      	ldr	r2, [r7, #20]
 800ceb6:	693b      	ldr	r3, [r7, #16]
 800ceb8:	429a      	cmp	r2, r3
 800ceba:	d8ed      	bhi.n	800ce98 <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 800cebc:	bf00      	nop
 800cebe:	bf00      	nop
 800cec0:	3724      	adds	r7, #36	; 0x24
 800cec2:	46bd      	mov	sp, r7
 800cec4:	bc80      	pop	{r7}
 800cec6:	4770      	bx	lr

0800cec8 <62d16b48e9529b8b29eb67945bd8081213959681>:
 800cec8:	b5b0      	push	{r4, r5, r7, lr}
 800ceca:	b09c      	sub	sp, #112	; 0x70
 800cecc:	af00      	add	r7, sp, #0
 800cece:	4b28      	ldr	r3, [pc, #160]	; (800cf70 <62d16b48e9529b8b29eb67945bd8081213959681+0xa8>)
 800ced0:	681b      	ldr	r3, [r3, #0]
 800ced2:	f603 234c 	addw	r3, r3, #2636	; 0xa4c
 800ced6:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ced8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ceda:	4618      	mov	r0, r3
 800cedc:	2345      	movs	r3, #69	; 0x45
 800cede:	461a      	mov	r2, r3
 800cee0:	2100      	movs	r1, #0
 800cee2:	f01e f909 	bl	802b0f8 <memset>
 800cee6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cee8:	2204      	movs	r2, #4
 800ceea:	705a      	strb	r2, [r3, #1]
 800ceec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ceee:	22ca      	movs	r2, #202	; 0xca
 800cef0:	709a      	strb	r2, [r3, #2]
 800cef2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cef4:	22fe      	movs	r2, #254	; 0xfe
 800cef6:	70da      	strb	r2, [r3, #3]
 800cef8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cefa:	2205      	movs	r2, #5
 800cefc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800cf00:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf02:	f103 0435 	add.w	r4, r3, #53	; 0x35
 800cf06:	f002 fac1 	bl	800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>
 800cf0a:	4603      	mov	r3, r0
 800cf0c:	2208      	movs	r2, #8
 800cf0e:	4619      	mov	r1, r3
 800cf10:	4620      	mov	r0, r4
 800cf12:	f01e f990 	bl	802b236 <memcpy>
 800cf16:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf18:	2202      	movs	r2, #2
 800cf1a:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
 800cf1e:	f7f9 f8d7 	bl	80060d0 <EMBENET_EUI64_Get>
 800cf22:	4602      	mov	r2, r0
 800cf24:	460b      	mov	r3, r1
 800cf26:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800cf2a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf2c:	3324      	adds	r3, #36	; 0x24
 800cf2e:	f107 0118 	add.w	r1, r7, #24
 800cf32:	2208      	movs	r2, #8
 800cf34:	4618      	mov	r0, r3
 800cf36:	f7ff ffa0 	bl	800ce7a <c5868198428dfaffddb0900c3d01452778b19d11>
 800cf3a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800cf3c:	f103 0223 	add.w	r2, r3, #35	; 0x23
 800cf40:	6efc      	ldr	r4, [r7, #108]	; 0x6c
 800cf42:	463b      	mov	r3, r7
 800cf44:	4611      	mov	r1, r2
 800cf46:	4618      	mov	r0, r3
 800cf48:	f001 ff28 	bl	800ed9c <b4e42b26493966bc617e4c89906d69f121a97c96>
 800cf4c:	f104 0312 	add.w	r3, r4, #18
 800cf50:	463a      	mov	r2, r7
 800cf52:	6815      	ldr	r5, [r2, #0]
 800cf54:	6854      	ldr	r4, [r2, #4]
 800cf56:	6890      	ldr	r0, [r2, #8]
 800cf58:	68d1      	ldr	r1, [r2, #12]
 800cf5a:	601d      	str	r5, [r3, #0]
 800cf5c:	605c      	str	r4, [r3, #4]
 800cf5e:	6098      	str	r0, [r3, #8]
 800cf60:	60d9      	str	r1, [r3, #12]
 800cf62:	7c12      	ldrb	r2, [r2, #16]
 800cf64:	741a      	strb	r2, [r3, #16]
 800cf66:	bf00      	nop
 800cf68:	3770      	adds	r7, #112	; 0x70
 800cf6a:	46bd      	mov	sp, r7
 800cf6c:	bdb0      	pop	{r4, r5, r7, pc}
 800cf6e:	bf00      	nop
 800cf70:	20000040 	.word	0x20000040

0800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>:
 800cf74:	b580      	push	{r7, lr}
 800cf76:	b082      	sub	sp, #8
 800cf78:	af00      	add	r7, sp, #0
 800cf7a:	f7f9 f869 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800cf7e:	4b06      	ldr	r3, [pc, #24]	; (800cf98 <cb03b4776ba370511f18aa83227a6716bbc89321+0x24>)
 800cf80:	681b      	ldr	r3, [r3, #0]
 800cf82:	f893 3a4c 	ldrb.w	r3, [r3, #2636]	; 0xa4c
 800cf86:	71fb      	strb	r3, [r7, #7]
 800cf88:	f7f9 f882 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800cf8c:	79fb      	ldrb	r3, [r7, #7]
 800cf8e:	4618      	mov	r0, r3
 800cf90:	3708      	adds	r7, #8
 800cf92:	46bd      	mov	sp, r7
 800cf94:	bd80      	pop	{r7, pc}
 800cf96:	bf00      	nop
 800cf98:	20000040 	.word	0x20000040

0800cf9c <46db78497509f29217d6d083aca2de1a300413c6>:
 800cf9c:	b580      	push	{r7, lr}
 800cf9e:	b088      	sub	sp, #32
 800cfa0:	af00      	add	r7, sp, #0
 800cfa2:	6078      	str	r0, [r7, #4]
 800cfa4:	687b      	ldr	r3, [r7, #4]
 800cfa6:	781b      	ldrb	r3, [r3, #0]
 800cfa8:	2b03      	cmp	r3, #3
 800cfaa:	d004      	beq.n	800cfb6 <46db78497509f29217d6d083aca2de1a300413c6+0x1a>
 800cfac:	2240      	movs	r2, #64	; 0x40
 800cfae:	4910      	ldr	r1, [pc, #64]	; (800cff0 <46db78497509f29217d6d083aca2de1a300413c6+0x54>)
 800cfb0:	4810      	ldr	r0, [pc, #64]	; (800cff4 <46db78497509f29217d6d083aca2de1a300413c6+0x58>)
 800cfb2:	f7f4 fba9 	bl	8001708 <EXPECT_OnAbortHandler>
 800cfb6:	2305      	movs	r3, #5
 800cfb8:	733b      	strb	r3, [r7, #12]
 800cfba:	687b      	ldr	r3, [r7, #4]
 800cfbc:	1c59      	adds	r1, r3, #1
 800cfbe:	f107 030c 	add.w	r3, r7, #12
 800cfc2:	3301      	adds	r3, #1
 800cfc4:	2208      	movs	r2, #8
 800cfc6:	4618      	mov	r0, r3
 800cfc8:	f01e f935 	bl	802b236 <memcpy>
 800cfcc:	f7f9 f840 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800cfd0:	f107 030c 	add.w	r3, r7, #12
 800cfd4:	4618      	mov	r0, r3
 800cfd6:	f000 f849 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 800cfda:	4b07      	ldr	r3, [pc, #28]	; (800cff8 <46db78497509f29217d6d083aca2de1a300413c6+0x5c>)
 800cfdc:	681b      	ldr	r3, [r3, #0]
 800cfde:	2201      	movs	r2, #1
 800cfe0:	f883 2a4c 	strb.w	r2, [r3, #2636]	; 0xa4c
 800cfe4:	f7f9 f854 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800cfe8:	bf00      	nop
 800cfea:	3720      	adds	r7, #32
 800cfec:	46bd      	mov	sp, r7
 800cfee:	bd80      	pop	{r7, pc}
 800cff0:	0802e180 	.word	0x0802e180
 800cff4:	0802e1e8 	.word	0x0802e1e8
 800cff8:	20000040 	.word	0x20000040

0800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>:
 800cffc:	b580      	push	{r7, lr}
 800cffe:	b084      	sub	sp, #16
 800d000:	af00      	add	r7, sp, #0
 800d002:	4603      	mov	r3, r0
 800d004:	71fb      	strb	r3, [r7, #7]
 800d006:	4b16      	ldr	r3, [pc, #88]	; (800d060 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x64>)
 800d008:	681b      	ldr	r3, [r3, #0]
 800d00a:	f603 234c 	addw	r3, r3, #2636	; 0xa4c
 800d00e:	60fb      	str	r3, [r7, #12]
 800d010:	79fb      	ldrb	r3, [r7, #7]
 800d012:	3b01      	subs	r3, #1
 800d014:	2b04      	cmp	r3, #4
 800d016:	d819      	bhi.n	800d04c <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x50>
 800d018:	a201      	add	r2, pc, #4	; (adr r2, 800d020 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x24>)
 800d01a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d01e:	bf00      	nop
 800d020:	0800d035 	.word	0x0800d035
 800d024:	0800d03b 	.word	0x0800d03b
 800d028:	0800d04d 	.word	0x0800d04d
 800d02c:	0800d041 	.word	0x0800d041
 800d030:	0800d047 	.word	0x0800d047
 800d034:	68fb      	ldr	r3, [r7, #12]
 800d036:	3312      	adds	r3, #18
 800d038:	e00d      	b.n	800d056 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x5a>
 800d03a:	68fb      	ldr	r3, [r7, #12]
 800d03c:	3323      	adds	r3, #35	; 0x23
 800d03e:	e00a      	b.n	800d056 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x5a>
 800d040:	68fb      	ldr	r3, [r7, #12]
 800d042:	3301      	adds	r3, #1
 800d044:	e007      	b.n	800d056 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x5a>
 800d046:	68fb      	ldr	r3, [r7, #12]
 800d048:	3334      	adds	r3, #52	; 0x34
 800d04a:	e004      	b.n	800d056 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x5a>
 800d04c:	2257      	movs	r2, #87	; 0x57
 800d04e:	4905      	ldr	r1, [pc, #20]	; (800d064 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x68>)
 800d050:	4805      	ldr	r0, [pc, #20]	; (800d068 <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a+0x6c>)
 800d052:	f7f4 fb59 	bl	8001708 <EXPECT_OnAbortHandler>
 800d056:	4618      	mov	r0, r3
 800d058:	3710      	adds	r7, #16
 800d05a:	46bd      	mov	sp, r7
 800d05c:	bd80      	pop	{r7, pc}
 800d05e:	bf00      	nop
 800d060:	20000040 	.word	0x20000040
 800d064:	0802e180 	.word	0x0802e180
 800d068:	0802e1e8 	.word	0x0802e1e8

0800d06c <00481873317fdef387db1bb310377b408b8e47be>:
 800d06c:	b580      	push	{r7, lr}
 800d06e:	b084      	sub	sp, #16
 800d070:	af00      	add	r7, sp, #0
 800d072:	6078      	str	r0, [r7, #4]
 800d074:	4b22      	ldr	r3, [pc, #136]	; (800d100 <00481873317fdef387db1bb310377b408b8e47be+0x94>)
 800d076:	681b      	ldr	r3, [r3, #0]
 800d078:	f603 234c 	addw	r3, r3, #2636	; 0xa4c
 800d07c:	60fb      	str	r3, [r7, #12]
 800d07e:	f7f8 ffe7 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800d082:	687b      	ldr	r3, [r7, #4]
 800d084:	781b      	ldrb	r3, [r3, #0]
 800d086:	3b01      	subs	r3, #1
 800d088:	2b04      	cmp	r3, #4
 800d08a:	d82d      	bhi.n	800d0e8 <00481873317fdef387db1bb310377b408b8e47be+0x7c>
 800d08c:	a201      	add	r2, pc, #4	; (adr r2, 800d094 <00481873317fdef387db1bb310377b408b8e47be+0x28>)
 800d08e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d092:	bf00      	nop
 800d094:	0800d0a9 	.word	0x0800d0a9
 800d098:	0800d0b9 	.word	0x0800d0b9
 800d09c:	0800d0e9 	.word	0x0800d0e9
 800d0a0:	0800d0c9 	.word	0x0800d0c9
 800d0a4:	0800d0d9 	.word	0x0800d0d9
 800d0a8:	68fb      	ldr	r3, [r7, #12]
 800d0aa:	3312      	adds	r3, #18
 800d0ac:	2211      	movs	r2, #17
 800d0ae:	6879      	ldr	r1, [r7, #4]
 800d0b0:	4618      	mov	r0, r3
 800d0b2:	f01e f8c0 	bl	802b236 <memcpy>
 800d0b6:	e01c      	b.n	800d0f2 <00481873317fdef387db1bb310377b408b8e47be+0x86>
 800d0b8:	68fb      	ldr	r3, [r7, #12]
 800d0ba:	3323      	adds	r3, #35	; 0x23
 800d0bc:	2211      	movs	r2, #17
 800d0be:	6879      	ldr	r1, [r7, #4]
 800d0c0:	4618      	mov	r0, r3
 800d0c2:	f01e f8b8 	bl	802b236 <memcpy>
 800d0c6:	e014      	b.n	800d0f2 <00481873317fdef387db1bb310377b408b8e47be+0x86>
 800d0c8:	68fb      	ldr	r3, [r7, #12]
 800d0ca:	3301      	adds	r3, #1
 800d0cc:	2211      	movs	r2, #17
 800d0ce:	6879      	ldr	r1, [r7, #4]
 800d0d0:	4618      	mov	r0, r3
 800d0d2:	f01e f8b0 	bl	802b236 <memcpy>
 800d0d6:	e00c      	b.n	800d0f2 <00481873317fdef387db1bb310377b408b8e47be+0x86>
 800d0d8:	68fb      	ldr	r3, [r7, #12]
 800d0da:	3334      	adds	r3, #52	; 0x34
 800d0dc:	2211      	movs	r2, #17
 800d0de:	6879      	ldr	r1, [r7, #4]
 800d0e0:	4618      	mov	r0, r3
 800d0e2:	f01e f8a8 	bl	802b236 <memcpy>
 800d0e6:	e004      	b.n	800d0f2 <00481873317fdef387db1bb310377b408b8e47be+0x86>
 800d0e8:	2265      	movs	r2, #101	; 0x65
 800d0ea:	4906      	ldr	r1, [pc, #24]	; (800d104 <00481873317fdef387db1bb310377b408b8e47be+0x98>)
 800d0ec:	4806      	ldr	r0, [pc, #24]	; (800d108 <00481873317fdef387db1bb310377b408b8e47be+0x9c>)
 800d0ee:	f7f4 fb0b 	bl	8001708 <EXPECT_OnAbortHandler>
 800d0f2:	f7f8 ffcd 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800d0f6:	bf00      	nop
 800d0f8:	3710      	adds	r7, #16
 800d0fa:	46bd      	mov	sp, r7
 800d0fc:	bd80      	pop	{r7, pc}
 800d0fe:	bf00      	nop
 800d100:	20000040 	.word	0x20000040
 800d104:	0802e180 	.word	0x0802e180
 800d108:	0802e1e8 	.word	0x0802e1e8

0800d10c <ef42a56931e541b0c8c1f2660a00aa81f857110a>:
 800d10c:	b580      	push	{r7, lr}
 800d10e:	b08a      	sub	sp, #40	; 0x28
 800d110:	af00      	add	r7, sp, #0
 800d112:	6078      	str	r0, [r7, #4]
 800d114:	4b36      	ldr	r3, [pc, #216]	; (800d1f0 <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xe4>)
 800d116:	681b      	ldr	r3, [r3, #0]
 800d118:	f603 234c 	addw	r3, r3, #2636	; 0xa4c
 800d11c:	623b      	str	r3, [r7, #32]
 800d11e:	2300      	movs	r3, #0
 800d120:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d124:	f7f8 ff94 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	781b      	ldrb	r3, [r3, #0]
 800d12c:	3b01      	subs	r3, #1
 800d12e:	2b04      	cmp	r3, #4
 800d130:	d854      	bhi.n	800d1dc <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd0>
 800d132:	a201      	add	r2, pc, #4	; (adr r2, 800d138 <ef42a56931e541b0c8c1f2660a00aa81f857110a+0x2c>)
 800d134:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d138:	0800d14d 	.word	0x0800d14d
 800d13c:	0800d161 	.word	0x0800d161
 800d140:	0800d19d 	.word	0x0800d19d
 800d144:	0800d175 	.word	0x0800d175
 800d148:	0800d189 	.word	0x0800d189
 800d14c:	6a3b      	ldr	r3, [r7, #32]
 800d14e:	3312      	adds	r3, #18
 800d150:	4619      	mov	r1, r3
 800d152:	6878      	ldr	r0, [r7, #4]
 800d154:	f002 f8ea 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800d158:	4603      	mov	r3, r0
 800d15a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d15e:	e03e      	b.n	800d1de <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd2>
 800d160:	6a3b      	ldr	r3, [r7, #32]
 800d162:	3323      	adds	r3, #35	; 0x23
 800d164:	4619      	mov	r1, r3
 800d166:	6878      	ldr	r0, [r7, #4]
 800d168:	f002 f8e0 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800d16c:	4603      	mov	r3, r0
 800d16e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d172:	e034      	b.n	800d1de <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd2>
 800d174:	6a3b      	ldr	r3, [r7, #32]
 800d176:	3301      	adds	r3, #1
 800d178:	4619      	mov	r1, r3
 800d17a:	6878      	ldr	r0, [r7, #4]
 800d17c:	f002 f8d6 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800d180:	4603      	mov	r3, r0
 800d182:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d186:	e02a      	b.n	800d1de <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd2>
 800d188:	6a3b      	ldr	r3, [r7, #32]
 800d18a:	3334      	adds	r3, #52	; 0x34
 800d18c:	4619      	mov	r1, r3
 800d18e:	6878      	ldr	r0, [r7, #4]
 800d190:	f002 f8cc 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800d194:	4603      	mov	r3, r0
 800d196:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d19a:	e020      	b.n	800d1de <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd2>
 800d19c:	2303      	movs	r3, #3
 800d19e:	733b      	strb	r3, [r7, #12]
 800d1a0:	6a3b      	ldr	r3, [r7, #32]
 800d1a2:	f103 0135 	add.w	r1, r3, #53	; 0x35
 800d1a6:	f107 030c 	add.w	r3, r7, #12
 800d1aa:	3301      	adds	r3, #1
 800d1ac:	2208      	movs	r2, #8
 800d1ae:	4618      	mov	r0, r3
 800d1b0:	f01e f841 	bl	802b236 <memcpy>
 800d1b4:	6a3b      	ldr	r3, [r7, #32]
 800d1b6:	f103 0124 	add.w	r1, r3, #36	; 0x24
 800d1ba:	f107 030c 	add.w	r3, r7, #12
 800d1be:	3309      	adds	r3, #9
 800d1c0:	2208      	movs	r2, #8
 800d1c2:	4618      	mov	r0, r3
 800d1c4:	f01e f837 	bl	802b236 <memcpy>
 800d1c8:	f107 030c 	add.w	r3, r7, #12
 800d1cc:	4619      	mov	r1, r3
 800d1ce:	6878      	ldr	r0, [r7, #4]
 800d1d0:	f002 f8ac 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800d1d4:	4603      	mov	r3, r0
 800d1d6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800d1da:	e000      	b.n	800d1de <ef42a56931e541b0c8c1f2660a00aa81f857110a+0xd2>
 800d1dc:	bf00      	nop
 800d1de:	f7f8 ff57 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800d1e2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800d1e6:	4618      	mov	r0, r3
 800d1e8:	3728      	adds	r7, #40	; 0x28
 800d1ea:	46bd      	mov	sp, r7
 800d1ec:	bd80      	pop	{r7, pc}
 800d1ee:	bf00      	nop
 800d1f0:	20000040 	.word	0x20000040

0800d1f4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 800d1f4:	b480      	push	{r7}
 800d1f6:	b089      	sub	sp, #36	; 0x24
 800d1f8:	af00      	add	r7, sp, #0
 800d1fa:	60f8      	str	r0, [r7, #12]
 800d1fc:	60b9      	str	r1, [r7, #8]
 800d1fe:	607a      	str	r2, [r7, #4]
 800d200:	68fb      	ldr	r3, [r7, #12]
 800d202:	61fb      	str	r3, [r7, #28]
 800d204:	68bb      	ldr	r3, [r7, #8]
 800d206:	61bb      	str	r3, [r7, #24]
 800d208:	687b      	ldr	r3, [r7, #4]
 800d20a:	617b      	str	r3, [r7, #20]
 800d20c:	2300      	movs	r3, #0
 800d20e:	613b      	str	r3, [r7, #16]
 800d210:	e00d      	b.n	800d22e <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 800d212:	69ba      	ldr	r2, [r7, #24]
 800d214:	693b      	ldr	r3, [r7, #16]
 800d216:	441a      	add	r2, r3
 800d218:	6979      	ldr	r1, [r7, #20]
 800d21a:	693b      	ldr	r3, [r7, #16]
 800d21c:	1acb      	subs	r3, r1, r3
 800d21e:	3b01      	subs	r3, #1
 800d220:	69f9      	ldr	r1, [r7, #28]
 800d222:	440b      	add	r3, r1
 800d224:	7812      	ldrb	r2, [r2, #0]
 800d226:	701a      	strb	r2, [r3, #0]
 800d228:	693b      	ldr	r3, [r7, #16]
 800d22a:	3301      	adds	r3, #1
 800d22c:	613b      	str	r3, [r7, #16]
 800d22e:	697a      	ldr	r2, [r7, #20]
 800d230:	693b      	ldr	r3, [r7, #16]
 800d232:	429a      	cmp	r2, r3
 800d234:	d8ed      	bhi.n	800d212 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 800d236:	bf00      	nop
 800d238:	bf00      	nop
 800d23a:	3724      	adds	r7, #36	; 0x24
 800d23c:	46bd      	mov	sp, r7
 800d23e:	bc80      	pop	{r7}
 800d240:	4770      	bx	lr
	...

0800d244 <a65a9e0e9d2172731582a842552346b36304a3e3>:
 800d244:	b580      	push	{r7, lr}
 800d246:	b082      	sub	sp, #8
 800d248:	af00      	add	r7, sp, #0
 800d24a:	4b0a      	ldr	r3, [pc, #40]	; (800d274 <a65a9e0e9d2172731582a842552346b36304a3e3+0x30>)
 800d24c:	681b      	ldr	r3, [r3, #0]
 800d24e:	607b      	str	r3, [r7, #4]
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d256:	603b      	str	r3, [r7, #0]
 800d258:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
 800d25c:	2100      	movs	r1, #0
 800d25e:	6838      	ldr	r0, [r7, #0]
 800d260:	f01d ff4a 	bl	802b0f8 <memset>
 800d264:	683b      	ldr	r3, [r7, #0]
 800d266:	220a      	movs	r2, #10
 800d268:	f883 21b8 	strb.w	r2, [r3, #440]	; 0x1b8
 800d26c:	bf00      	nop
 800d26e:	3708      	adds	r7, #8
 800d270:	46bd      	mov	sp, r7
 800d272:	bd80      	pop	{r7, pc}
 800d274:	20000040 	.word	0x20000040

0800d278 <5dd6fb766eeca12f408d546c8d4a40a272e3f785>:
 800d278:	b480      	push	{r7}
 800d27a:	b085      	sub	sp, #20
 800d27c:	af00      	add	r7, sp, #0
 800d27e:	4b13      	ldr	r3, [pc, #76]	; (800d2cc <5dd6fb766eeca12f408d546c8d4a40a272e3f785+0x54>)
 800d280:	681b      	ldr	r3, [r3, #0]
 800d282:	607b      	str	r3, [r7, #4]
 800d284:	687b      	ldr	r3, [r7, #4]
 800d286:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d28a:	603b      	str	r3, [r7, #0]
 800d28c:	2300      	movs	r3, #0
 800d28e:	73fb      	strb	r3, [r7, #15]
 800d290:	2300      	movs	r3, #0
 800d292:	73fb      	strb	r3, [r7, #15]
 800d294:	2300      	movs	r3, #0
 800d296:	60bb      	str	r3, [r7, #8]
 800d298:	e00e      	b.n	800d2b8 <5dd6fb766eeca12f408d546c8d4a40a272e3f785+0x40>
 800d29a:	683a      	ldr	r2, [r7, #0]
 800d29c:	68bb      	ldr	r3, [r7, #8]
 800d29e:	212c      	movs	r1, #44	; 0x2c
 800d2a0:	fb01 f303 	mul.w	r3, r1, r3
 800d2a4:	4413      	add	r3, r2
 800d2a6:	781b      	ldrb	r3, [r3, #0]
 800d2a8:	2b00      	cmp	r3, #0
 800d2aa:	d002      	beq.n	800d2b2 <5dd6fb766eeca12f408d546c8d4a40a272e3f785+0x3a>
 800d2ac:	7bfb      	ldrb	r3, [r7, #15]
 800d2ae:	3301      	adds	r3, #1
 800d2b0:	73fb      	strb	r3, [r7, #15]
 800d2b2:	68bb      	ldr	r3, [r7, #8]
 800d2b4:	3301      	adds	r3, #1
 800d2b6:	60bb      	str	r3, [r7, #8]
 800d2b8:	68bb      	ldr	r3, [r7, #8]
 800d2ba:	2b09      	cmp	r3, #9
 800d2bc:	d9ed      	bls.n	800d29a <5dd6fb766eeca12f408d546c8d4a40a272e3f785+0x22>
 800d2be:	7bfb      	ldrb	r3, [r7, #15]
 800d2c0:	4618      	mov	r0, r3
 800d2c2:	3714      	adds	r7, #20
 800d2c4:	46bd      	mov	sp, r7
 800d2c6:	bc80      	pop	{r7}
 800d2c8:	4770      	bx	lr
 800d2ca:	bf00      	nop
 800d2cc:	20000040 	.word	0x20000040

0800d2d0 <NEIGHBORS_GetNeighborInfo>:
 800d2d0:	b590      	push	{r4, r7, lr}
 800d2d2:	b08b      	sub	sp, #44	; 0x2c
 800d2d4:	af00      	add	r7, sp, #0
 800d2d6:	6078      	str	r0, [r7, #4]
 800d2d8:	6039      	str	r1, [r7, #0]
 800d2da:	4b34      	ldr	r3, [pc, #208]	; (800d3ac <NEIGHBORS_GetNeighborInfo+0xdc>)
 800d2dc:	681b      	ldr	r3, [r3, #0]
 800d2de:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d2e2:	61fb      	str	r3, [r7, #28]
 800d2e4:	f107 0308 	add.w	r3, r7, #8
 800d2e8:	2200      	movs	r2, #0
 800d2ea:	601a      	str	r2, [r3, #0]
 800d2ec:	605a      	str	r2, [r3, #4]
 800d2ee:	609a      	str	r2, [r3, #8]
 800d2f0:	60da      	str	r2, [r3, #12]
 800d2f2:	f7ff ffc1 	bl	800d278 <5dd6fb766eeca12f408d546c8d4a40a272e3f785>
 800d2f6:	4603      	mov	r3, r0
 800d2f8:	461a      	mov	r2, r3
 800d2fa:	683b      	ldr	r3, [r7, #0]
 800d2fc:	4293      	cmp	r3, r2
 800d2fe:	d24a      	bcs.n	800d396 <NEIGHBORS_GetNeighborInfo+0xc6>
 800d300:	2300      	movs	r3, #0
 800d302:	627b      	str	r3, [r7, #36]	; 0x24
 800d304:	2300      	movs	r3, #0
 800d306:	623b      	str	r3, [r7, #32]
 800d308:	e042      	b.n	800d390 <NEIGHBORS_GetNeighborInfo+0xc0>
 800d30a:	69fa      	ldr	r2, [r7, #28]
 800d30c:	6a3b      	ldr	r3, [r7, #32]
 800d30e:	212c      	movs	r1, #44	; 0x2c
 800d310:	fb01 f303 	mul.w	r3, r1, r3
 800d314:	4413      	add	r3, r2
 800d316:	781b      	ldrb	r3, [r3, #0]
 800d318:	2b00      	cmp	r3, #0
 800d31a:	d036      	beq.n	800d38a <NEIGHBORS_GetNeighborInfo+0xba>
 800d31c:	683a      	ldr	r2, [r7, #0]
 800d31e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d320:	429a      	cmp	r2, r3
 800d322:	d12f      	bne.n	800d384 <NEIGHBORS_GetNeighborInfo+0xb4>
 800d324:	6a3b      	ldr	r3, [r7, #32]
 800d326:	222c      	movs	r2, #44	; 0x2c
 800d328:	fb02 f303 	mul.w	r3, r2, r3
 800d32c:	69fa      	ldr	r2, [r7, #28]
 800d32e:	4413      	add	r3, r2
 800d330:	1c99      	adds	r1, r3, #2
 800d332:	f107 0308 	add.w	r3, r7, #8
 800d336:	2208      	movs	r2, #8
 800d338:	4618      	mov	r0, r3
 800d33a:	f7ff ff5b 	bl	800d1f4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800d33e:	69fa      	ldr	r2, [r7, #28]
 800d340:	6a3b      	ldr	r3, [r7, #32]
 800d342:	212c      	movs	r1, #44	; 0x2c
 800d344:	fb01 f303 	mul.w	r3, r1, r3
 800d348:	4413      	add	r3, r2
 800d34a:	330c      	adds	r3, #12
 800d34c:	f993 3000 	ldrsb.w	r3, [r3]
 800d350:	743b      	strb	r3, [r7, #16]
 800d352:	69fb      	ldr	r3, [r7, #28]
 800d354:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800d358:	461a      	mov	r2, r3
 800d35a:	6a3b      	ldr	r3, [r7, #32]
 800d35c:	4293      	cmp	r3, r2
 800d35e:	d102      	bne.n	800d366 <NEIGHBORS_GetNeighborInfo+0x96>
 800d360:	2300      	movs	r3, #0
 800d362:	747b      	strb	r3, [r7, #17]
 800d364:	e00e      	b.n	800d384 <NEIGHBORS_GetNeighborInfo+0xb4>
 800d366:	69fa      	ldr	r2, [r7, #28]
 800d368:	6a3b      	ldr	r3, [r7, #32]
 800d36a:	212c      	movs	r1, #44	; 0x2c
 800d36c:	fb01 f303 	mul.w	r3, r1, r3
 800d370:	4413      	add	r3, r2
 800d372:	332b      	adds	r3, #43	; 0x2b
 800d374:	781b      	ldrb	r3, [r3, #0]
 800d376:	2b00      	cmp	r3, #0
 800d378:	d002      	beq.n	800d380 <NEIGHBORS_GetNeighborInfo+0xb0>
 800d37a:	2301      	movs	r3, #1
 800d37c:	747b      	strb	r3, [r7, #17]
 800d37e:	e001      	b.n	800d384 <NEIGHBORS_GetNeighborInfo+0xb4>
 800d380:	2302      	movs	r3, #2
 800d382:	747b      	strb	r3, [r7, #17]
 800d384:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d386:	3301      	adds	r3, #1
 800d388:	627b      	str	r3, [r7, #36]	; 0x24
 800d38a:	6a3b      	ldr	r3, [r7, #32]
 800d38c:	3301      	adds	r3, #1
 800d38e:	623b      	str	r3, [r7, #32]
 800d390:	6a3b      	ldr	r3, [r7, #32]
 800d392:	2b09      	cmp	r3, #9
 800d394:	d9b9      	bls.n	800d30a <NEIGHBORS_GetNeighborInfo+0x3a>
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	461c      	mov	r4, r3
 800d39a:	f107 0308 	add.w	r3, r7, #8
 800d39e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800d3a0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d3a4:	6878      	ldr	r0, [r7, #4]
 800d3a6:	372c      	adds	r7, #44	; 0x2c
 800d3a8:	46bd      	mov	sp, r7
 800d3aa:	bd90      	pop	{r4, r7, pc}
 800d3ac:	20000040 	.word	0x20000040

0800d3b0 <8cfb94024ca5b6140fb568011b57a078749e2ff0>:
 800d3b0:	b580      	push	{r7, lr}
 800d3b2:	b084      	sub	sp, #16
 800d3b4:	af00      	add	r7, sp, #0
 800d3b6:	4603      	mov	r3, r0
 800d3b8:	71fb      	strb	r3, [r7, #7]
 800d3ba:	4b13      	ldr	r3, [pc, #76]	; (800d408 <8cfb94024ca5b6140fb568011b57a078749e2ff0+0x58>)
 800d3bc:	681b      	ldr	r3, [r3, #0]
 800d3be:	60fb      	str	r3, [r7, #12]
 800d3c0:	68fb      	ldr	r3, [r7, #12]
 800d3c2:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d3c6:	60bb      	str	r3, [r7, #8]
 800d3c8:	79fb      	ldrb	r3, [r7, #7]
 800d3ca:	2b09      	cmp	r3, #9
 800d3cc:	d80b      	bhi.n	800d3e6 <8cfb94024ca5b6140fb568011b57a078749e2ff0+0x36>
 800d3ce:	79fb      	ldrb	r3, [r7, #7]
 800d3d0:	68ba      	ldr	r2, [r7, #8]
 800d3d2:	212c      	movs	r1, #44	; 0x2c
 800d3d4:	fb01 f303 	mul.w	r3, r1, r3
 800d3d8:	4413      	add	r3, r2
 800d3da:	781b      	ldrb	r3, [r3, #0]
 800d3dc:	f083 0301 	eor.w	r3, r3, #1
 800d3e0:	b2db      	uxtb	r3, r3
 800d3e2:	2b00      	cmp	r3, #0
 800d3e4:	d004      	beq.n	800d3f0 <8cfb94024ca5b6140fb568011b57a078749e2ff0+0x40>
 800d3e6:	2260      	movs	r2, #96	; 0x60
 800d3e8:	4908      	ldr	r1, [pc, #32]	; (800d40c <8cfb94024ca5b6140fb568011b57a078749e2ff0+0x5c>)
 800d3ea:	4809      	ldr	r0, [pc, #36]	; (800d410 <8cfb94024ca5b6140fb568011b57a078749e2ff0+0x60>)
 800d3ec:	f7f4 f98c 	bl	8001708 <EXPECT_OnAbortHandler>
 800d3f0:	79fb      	ldrb	r3, [r7, #7]
 800d3f2:	68ba      	ldr	r2, [r7, #8]
 800d3f4:	212c      	movs	r1, #44	; 0x2c
 800d3f6:	fb01 f303 	mul.w	r3, r1, r3
 800d3fa:	4413      	add	r3, r2
 800d3fc:	330a      	adds	r3, #10
 800d3fe:	881b      	ldrh	r3, [r3, #0]
 800d400:	4618      	mov	r0, r3
 800d402:	3710      	adds	r7, #16
 800d404:	46bd      	mov	sp, r7
 800d406:	bd80      	pop	{r7, pc}
 800d408:	20000040 	.word	0x20000040
 800d40c:	0802e1fc 	.word	0x0802e1fc
 800d410:	0802e264 	.word	0x0802e264

0800d414 <231ee13350ba09f13191bc6eb894c2ea8bf59b41>:
 800d414:	b580      	push	{r7, lr}
 800d416:	b084      	sub	sp, #16
 800d418:	af00      	add	r7, sp, #0
 800d41a:	4603      	mov	r3, r0
 800d41c:	460a      	mov	r2, r1
 800d41e:	71fb      	strb	r3, [r7, #7]
 800d420:	4613      	mov	r3, r2
 800d422:	80bb      	strh	r3, [r7, #4]
 800d424:	4b13      	ldr	r3, [pc, #76]	; (800d474 <231ee13350ba09f13191bc6eb894c2ea8bf59b41+0x60>)
 800d426:	681b      	ldr	r3, [r3, #0]
 800d428:	60fb      	str	r3, [r7, #12]
 800d42a:	68fb      	ldr	r3, [r7, #12]
 800d42c:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d430:	60bb      	str	r3, [r7, #8]
 800d432:	79fb      	ldrb	r3, [r7, #7]
 800d434:	2b09      	cmp	r3, #9
 800d436:	d80b      	bhi.n	800d450 <231ee13350ba09f13191bc6eb894c2ea8bf59b41+0x3c>
 800d438:	79fb      	ldrb	r3, [r7, #7]
 800d43a:	68ba      	ldr	r2, [r7, #8]
 800d43c:	212c      	movs	r1, #44	; 0x2c
 800d43e:	fb01 f303 	mul.w	r3, r1, r3
 800d442:	4413      	add	r3, r2
 800d444:	781b      	ldrb	r3, [r3, #0]
 800d446:	f083 0301 	eor.w	r3, r3, #1
 800d44a:	b2db      	uxtb	r3, r3
 800d44c:	2b00      	cmp	r3, #0
 800d44e:	d004      	beq.n	800d45a <231ee13350ba09f13191bc6eb894c2ea8bf59b41+0x46>
 800d450:	2269      	movs	r2, #105	; 0x69
 800d452:	4909      	ldr	r1, [pc, #36]	; (800d478 <231ee13350ba09f13191bc6eb894c2ea8bf59b41+0x64>)
 800d454:	4809      	ldr	r0, [pc, #36]	; (800d47c <231ee13350ba09f13191bc6eb894c2ea8bf59b41+0x68>)
 800d456:	f7f4 f957 	bl	8001708 <EXPECT_OnAbortHandler>
 800d45a:	79fb      	ldrb	r3, [r7, #7]
 800d45c:	68ba      	ldr	r2, [r7, #8]
 800d45e:	212c      	movs	r1, #44	; 0x2c
 800d460:	fb01 f303 	mul.w	r3, r1, r3
 800d464:	4413      	add	r3, r2
 800d466:	330a      	adds	r3, #10
 800d468:	88ba      	ldrh	r2, [r7, #4]
 800d46a:	801a      	strh	r2, [r3, #0]
 800d46c:	bf00      	nop
 800d46e:	3710      	adds	r7, #16
 800d470:	46bd      	mov	sp, r7
 800d472:	bd80      	pop	{r7, pc}
 800d474:	20000040 	.word	0x20000040
 800d478:	0802e1fc 	.word	0x0802e1fc
 800d47c:	0802e278 	.word	0x0802e278

0800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>:
 800d480:	b580      	push	{r7, lr}
 800d482:	b086      	sub	sp, #24
 800d484:	af00      	add	r7, sp, #0
 800d486:	6078      	str	r0, [r7, #4]
 800d488:	460b      	mov	r3, r1
 800d48a:	70fb      	strb	r3, [r7, #3]
 800d48c:	4b20      	ldr	r3, [pc, #128]	; (800d510 <734215ec60b076a73ccd748a6d2a9ef259a5be9c+0x90>)
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d494:	617b      	str	r3, [r7, #20]
 800d496:	78fb      	ldrb	r3, [r7, #3]
 800d498:	2b09      	cmp	r3, #9
 800d49a:	d80b      	bhi.n	800d4b4 <734215ec60b076a73ccd748a6d2a9ef259a5be9c+0x34>
 800d49c:	78fb      	ldrb	r3, [r7, #3]
 800d49e:	697a      	ldr	r2, [r7, #20]
 800d4a0:	212c      	movs	r1, #44	; 0x2c
 800d4a2:	fb01 f303 	mul.w	r3, r1, r3
 800d4a6:	4413      	add	r3, r2
 800d4a8:	781b      	ldrb	r3, [r3, #0]
 800d4aa:	f083 0301 	eor.w	r3, r3, #1
 800d4ae:	b2db      	uxtb	r3, r3
 800d4b0:	2b00      	cmp	r3, #0
 800d4b2:	d004      	beq.n	800d4be <734215ec60b076a73ccd748a6d2a9ef259a5be9c+0x3e>
 800d4b4:	2271      	movs	r2, #113	; 0x71
 800d4b6:	4917      	ldr	r1, [pc, #92]	; (800d514 <734215ec60b076a73ccd748a6d2a9ef259a5be9c+0x94>)
 800d4b8:	4817      	ldr	r0, [pc, #92]	; (800d518 <734215ec60b076a73ccd748a6d2a9ef259a5be9c+0x98>)
 800d4ba:	f7f4 f925 	bl	8001708 <EXPECT_OnAbortHandler>
 800d4be:	78fb      	ldrb	r3, [r7, #3]
 800d4c0:	697a      	ldr	r2, [r7, #20]
 800d4c2:	212c      	movs	r1, #44	; 0x2c
 800d4c4:	fb01 f303 	mul.w	r3, r1, r3
 800d4c8:	4413      	add	r3, r2
 800d4ca:	330e      	adds	r3, #14
 800d4cc:	881b      	ldrh	r3, [r3, #0]
 800d4ce:	81bb      	strh	r3, [r7, #12]
 800d4d0:	78fb      	ldrb	r3, [r7, #3]
 800d4d2:	697a      	ldr	r2, [r7, #20]
 800d4d4:	212c      	movs	r1, #44	; 0x2c
 800d4d6:	fb01 f303 	mul.w	r3, r1, r3
 800d4da:	4413      	add	r3, r2
 800d4dc:	3310      	adds	r3, #16
 800d4de:	881b      	ldrh	r3, [r3, #0]
 800d4e0:	81fb      	strh	r3, [r7, #14]
 800d4e2:	78fb      	ldrb	r3, [r7, #3]
 800d4e4:	697a      	ldr	r2, [r7, #20]
 800d4e6:	212c      	movs	r1, #44	; 0x2c
 800d4e8:	fb01 f303 	mul.w	r3, r1, r3
 800d4ec:	4413      	add	r3, r2
 800d4ee:	330c      	adds	r3, #12
 800d4f0:	f993 3000 	ldrsb.w	r3, [r3]
 800d4f4:	743b      	strb	r3, [r7, #16]
 800d4f6:	687b      	ldr	r3, [r7, #4]
 800d4f8:	461a      	mov	r2, r3
 800d4fa:	f107 030c 	add.w	r3, r7, #12
 800d4fe:	6818      	ldr	r0, [r3, #0]
 800d500:	6010      	str	r0, [r2, #0]
 800d502:	889b      	ldrh	r3, [r3, #4]
 800d504:	8093      	strh	r3, [r2, #4]
 800d506:	6878      	ldr	r0, [r7, #4]
 800d508:	3718      	adds	r7, #24
 800d50a:	46bd      	mov	sp, r7
 800d50c:	bd80      	pop	{r7, pc}
 800d50e:	bf00      	nop
 800d510:	20000040 	.word	0x20000040
 800d514:	0802e1fc 	.word	0x0802e1fc
 800d518:	0802e288 	.word	0x0802e288

0800d51c <5b63cb34daec6664391bfc943c457a7558e21261>:
 800d51c:	b580      	push	{r7, lr}
 800d51e:	b088      	sub	sp, #32
 800d520:	af00      	add	r7, sp, #0
 800d522:	4603      	mov	r3, r0
 800d524:	71fb      	strb	r3, [r7, #7]
 800d526:	4b33      	ldr	r3, [pc, #204]	; (800d5f4 <5b63cb34daec6664391bfc943c457a7558e21261+0xd8>)
 800d528:	681b      	ldr	r3, [r3, #0]
 800d52a:	61fb      	str	r3, [r7, #28]
 800d52c:	69fb      	ldr	r3, [r7, #28]
 800d52e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d532:	61bb      	str	r3, [r7, #24]
 800d534:	79fb      	ldrb	r3, [r7, #7]
 800d536:	2b09      	cmp	r3, #9
 800d538:	d80b      	bhi.n	800d552 <5b63cb34daec6664391bfc943c457a7558e21261+0x36>
 800d53a:	79fb      	ldrb	r3, [r7, #7]
 800d53c:	69ba      	ldr	r2, [r7, #24]
 800d53e:	212c      	movs	r1, #44	; 0x2c
 800d540:	fb01 f303 	mul.w	r3, r1, r3
 800d544:	4413      	add	r3, r2
 800d546:	781b      	ldrb	r3, [r3, #0]
 800d548:	f083 0301 	eor.w	r3, r3, #1
 800d54c:	b2db      	uxtb	r3, r3
 800d54e:	2b00      	cmp	r3, #0
 800d550:	d004      	beq.n	800d55c <5b63cb34daec6664391bfc943c457a7558e21261+0x40>
 800d552:	227e      	movs	r2, #126	; 0x7e
 800d554:	4928      	ldr	r1, [pc, #160]	; (800d5f8 <5b63cb34daec6664391bfc943c457a7558e21261+0xdc>)
 800d556:	4829      	ldr	r0, [pc, #164]	; (800d5fc <5b63cb34daec6664391bfc943c457a7558e21261+0xe0>)
 800d558:	f7f4 f8d6 	bl	8001708 <EXPECT_OnAbortHandler>
 800d55c:	79fb      	ldrb	r3, [r7, #7]
 800d55e:	69ba      	ldr	r2, [r7, #24]
 800d560:	212c      	movs	r1, #44	; 0x2c
 800d562:	fb01 f303 	mul.w	r3, r1, r3
 800d566:	4413      	add	r3, r2
 800d568:	3310      	adds	r3, #16
 800d56a:	881a      	ldrh	r2, [r3, #0]
 800d56c:	79fb      	ldrb	r3, [r7, #7]
 800d56e:	69b9      	ldr	r1, [r7, #24]
 800d570:	202c      	movs	r0, #44	; 0x2c
 800d572:	fb00 f303 	mul.w	r3, r0, r3
 800d576:	440b      	add	r3, r1
 800d578:	330e      	adds	r3, #14
 800d57a:	881b      	ldrh	r3, [r3, #0]
 800d57c:	429a      	cmp	r2, r3
 800d57e:	d910      	bls.n	800d5a2 <5b63cb34daec6664391bfc943c457a7558e21261+0x86>
 800d580:	4a1f      	ldr	r2, [pc, #124]	; (800d600 <5b63cb34daec6664391bfc943c457a7558e21261+0xe4>)
 800d582:	f107 0308 	add.w	r3, r7, #8
 800d586:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d58a:	e883 0003 	stmia.w	r3, {r0, r1}
 800d58e:	4a1d      	ldr	r2, [pc, #116]	; (800d604 <5b63cb34daec6664391bfc943c457a7558e21261+0xe8>)
 800d590:	f107 0308 	add.w	r3, r7, #8
 800d594:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d598:	f007 fe36 	bl	8015208 <LOGGER_PrintLine>
 800d59c:	f242 7310 	movw	r3, #10000	; 0x2710
 800d5a0:	e024      	b.n	800d5ec <5b63cb34daec6664391bfc943c457a7558e21261+0xd0>
 800d5a2:	79fb      	ldrb	r3, [r7, #7]
 800d5a4:	69ba      	ldr	r2, [r7, #24]
 800d5a6:	212c      	movs	r1, #44	; 0x2c
 800d5a8:	fb01 f303 	mul.w	r3, r1, r3
 800d5ac:	4413      	add	r3, r2
 800d5ae:	330e      	adds	r3, #14
 800d5b0:	881b      	ldrh	r3, [r3, #0]
 800d5b2:	2b00      	cmp	r3, #0
 800d5b4:	d102      	bne.n	800d5bc <5b63cb34daec6664391bfc943c457a7558e21261+0xa0>
 800d5b6:	f242 7310 	movw	r3, #10000	; 0x2710
 800d5ba:	e017      	b.n	800d5ec <5b63cb34daec6664391bfc943c457a7558e21261+0xd0>
 800d5bc:	79fb      	ldrb	r3, [r7, #7]
 800d5be:	69ba      	ldr	r2, [r7, #24]
 800d5c0:	212c      	movs	r1, #44	; 0x2c
 800d5c2:	fb01 f303 	mul.w	r3, r1, r3
 800d5c6:	4413      	add	r3, r2
 800d5c8:	3310      	adds	r3, #16
 800d5ca:	881b      	ldrh	r3, [r3, #0]
 800d5cc:	461a      	mov	r2, r3
 800d5ce:	f242 7310 	movw	r3, #10000	; 0x2710
 800d5d2:	fb02 f303 	mul.w	r3, r2, r3
 800d5d6:	79fa      	ldrb	r2, [r7, #7]
 800d5d8:	69b9      	ldr	r1, [r7, #24]
 800d5da:	202c      	movs	r0, #44	; 0x2c
 800d5dc:	fb00 f202 	mul.w	r2, r0, r2
 800d5e0:	440a      	add	r2, r1
 800d5e2:	320e      	adds	r2, #14
 800d5e4:	8812      	ldrh	r2, [r2, #0]
 800d5e6:	fbb3 f3f2 	udiv	r3, r3, r2
 800d5ea:	b29b      	uxth	r3, r3
 800d5ec:	4618      	mov	r0, r3
 800d5ee:	3720      	adds	r7, #32
 800d5f0:	46bd      	mov	sp, r7
 800d5f2:	bd80      	pop	{r7, pc}
 800d5f4:	20000040 	.word	0x20000040
 800d5f8:	0802e1fc 	.word	0x0802e1fc
 800d5fc:	0802e278 	.word	0x0802e278
 800d600:	0802e2bc 	.word	0x0802e2bc
 800d604:	0802e29c 	.word	0x0802e29c

0800d608 <7df3ba357f7f62320ead08135508bf101de27d80>:
 800d608:	b580      	push	{r7, lr}
 800d60a:	b084      	sub	sp, #16
 800d60c:	af00      	add	r7, sp, #0
 800d60e:	6078      	str	r0, [r7, #4]
 800d610:	460b      	mov	r3, r1
 800d612:	70fb      	strb	r3, [r7, #3]
 800d614:	4b16      	ldr	r3, [pc, #88]	; (800d670 <7df3ba357f7f62320ead08135508bf101de27d80+0x68>)
 800d616:	681b      	ldr	r3, [r3, #0]
 800d618:	60fb      	str	r3, [r7, #12]
 800d61a:	68fb      	ldr	r3, [r7, #12]
 800d61c:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d620:	60bb      	str	r3, [r7, #8]
 800d622:	78fb      	ldrb	r3, [r7, #3]
 800d624:	2b09      	cmp	r3, #9
 800d626:	d80b      	bhi.n	800d640 <7df3ba357f7f62320ead08135508bf101de27d80+0x38>
 800d628:	78fb      	ldrb	r3, [r7, #3]
 800d62a:	68ba      	ldr	r2, [r7, #8]
 800d62c:	212c      	movs	r1, #44	; 0x2c
 800d62e:	fb01 f303 	mul.w	r3, r1, r3
 800d632:	4413      	add	r3, r2
 800d634:	781b      	ldrb	r3, [r3, #0]
 800d636:	f083 0301 	eor.w	r3, r3, #1
 800d63a:	b2db      	uxtb	r3, r3
 800d63c:	2b00      	cmp	r3, #0
 800d63e:	d004      	beq.n	800d64a <7df3ba357f7f62320ead08135508bf101de27d80+0x42>
 800d640:	2293      	movs	r2, #147	; 0x93
 800d642:	490c      	ldr	r1, [pc, #48]	; (800d674 <7df3ba357f7f62320ead08135508bf101de27d80+0x6c>)
 800d644:	480c      	ldr	r0, [pc, #48]	; (800d678 <7df3ba357f7f62320ead08135508bf101de27d80+0x70>)
 800d646:	f7f4 f85f 	bl	8001708 <EXPECT_OnAbortHandler>
 800d64a:	78fb      	ldrb	r3, [r7, #3]
 800d64c:	6878      	ldr	r0, [r7, #4]
 800d64e:	68ba      	ldr	r2, [r7, #8]
 800d650:	212c      	movs	r1, #44	; 0x2c
 800d652:	fb01 f303 	mul.w	r3, r1, r3
 800d656:	4413      	add	r3, r2
 800d658:	3310      	adds	r3, #16
 800d65a:	4602      	mov	r2, r0
 800d65c:	3302      	adds	r3, #2
 800d65e:	6819      	ldr	r1, [r3, #0]
 800d660:	6011      	str	r1, [r2, #0]
 800d662:	791b      	ldrb	r3, [r3, #4]
 800d664:	7113      	strb	r3, [r2, #4]
 800d666:	6878      	ldr	r0, [r7, #4]
 800d668:	3710      	adds	r7, #16
 800d66a:	46bd      	mov	sp, r7
 800d66c:	bd80      	pop	{r7, pc}
 800d66e:	bf00      	nop
 800d670:	20000040 	.word	0x20000040
 800d674:	0802e1fc 	.word	0x0802e1fc
 800d678:	0802e278 	.word	0x0802e278

0800d67c <5004528a8ffa5581bbd161cf1057e8d5d3867843>:
 800d67c:	b590      	push	{r4, r7, lr}
 800d67e:	b087      	sub	sp, #28
 800d680:	af00      	add	r7, sp, #0
 800d682:	1d39      	adds	r1, r7, #4
 800d684:	e881 000c 	stmia.w	r1, {r2, r3}
 800d688:	4603      	mov	r3, r0
 800d68a:	73fb      	strb	r3, [r7, #15]
 800d68c:	4b17      	ldr	r3, [pc, #92]	; (800d6ec <5004528a8ffa5581bbd161cf1057e8d5d3867843+0x70>)
 800d68e:	681b      	ldr	r3, [r3, #0]
 800d690:	617b      	str	r3, [r7, #20]
 800d692:	697b      	ldr	r3, [r7, #20]
 800d694:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d698:	613b      	str	r3, [r7, #16]
 800d69a:	7bfb      	ldrb	r3, [r7, #15]
 800d69c:	2b09      	cmp	r3, #9
 800d69e:	d80b      	bhi.n	800d6b8 <5004528a8ffa5581bbd161cf1057e8d5d3867843+0x3c>
 800d6a0:	7bfb      	ldrb	r3, [r7, #15]
 800d6a2:	693a      	ldr	r2, [r7, #16]
 800d6a4:	212c      	movs	r1, #44	; 0x2c
 800d6a6:	fb01 f303 	mul.w	r3, r1, r3
 800d6aa:	4413      	add	r3, r2
 800d6ac:	781b      	ldrb	r3, [r3, #0]
 800d6ae:	f083 0301 	eor.w	r3, r3, #1
 800d6b2:	b2db      	uxtb	r3, r3
 800d6b4:	2b00      	cmp	r3, #0
 800d6b6:	d004      	beq.n	800d6c2 <5004528a8ffa5581bbd161cf1057e8d5d3867843+0x46>
 800d6b8:	229c      	movs	r2, #156	; 0x9c
 800d6ba:	490d      	ldr	r1, [pc, #52]	; (800d6f0 <5004528a8ffa5581bbd161cf1057e8d5d3867843+0x74>)
 800d6bc:	480d      	ldr	r0, [pc, #52]	; (800d6f4 <5004528a8ffa5581bbd161cf1057e8d5d3867843+0x78>)
 800d6be:	f7f4 f823 	bl	8001708 <EXPECT_OnAbortHandler>
 800d6c2:	7bf9      	ldrb	r1, [r7, #15]
 800d6c4:	687a      	ldr	r2, [r7, #4]
 800d6c6:	7a38      	ldrb	r0, [r7, #8]
 800d6c8:	4603      	mov	r3, r0
 800d6ca:	6938      	ldr	r0, [r7, #16]
 800d6cc:	242c      	movs	r4, #44	; 0x2c
 800d6ce:	fb04 f101 	mul.w	r1, r4, r1
 800d6d2:	4401      	add	r1, r0
 800d6d4:	3110      	adds	r1, #16
 800d6d6:	f8c1 2002 	str.w	r2, [r1, #2]
 800d6da:	7988      	ldrb	r0, [r1, #6]
 800d6dc:	f363 0007 	bfi	r0, r3, #0, #8
 800d6e0:	7188      	strb	r0, [r1, #6]
 800d6e2:	bf00      	nop
 800d6e4:	371c      	adds	r7, #28
 800d6e6:	46bd      	mov	sp, r7
 800d6e8:	bd90      	pop	{r4, r7, pc}
 800d6ea:	bf00      	nop
 800d6ec:	20000040 	.word	0x20000040
 800d6f0:	0802e1fc 	.word	0x0802e1fc
 800d6f4:	0802e278 	.word	0x0802e278

0800d6f8 <0fa1209e048698b86219960838c5b2bdc21151fc>:
 800d6f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d6fc:	b089      	sub	sp, #36	; 0x24
 800d6fe:	af00      	add	r7, sp, #0
 800d700:	f107 0608 	add.w	r6, r7, #8
 800d704:	e886 0003 	stmia.w	r6, {r0, r1}
 800d708:	4639      	mov	r1, r7
 800d70a:	e881 000c 	stmia.w	r1, {r2, r3}
 800d70e:	4b23      	ldr	r3, [pc, #140]	; (800d79c <0fa1209e048698b86219960838c5b2bdc21151fc+0xa4>)
 800d710:	681b      	ldr	r3, [r3, #0]
 800d712:	61fb      	str	r3, [r7, #28]
 800d714:	69fb      	ldr	r3, [r7, #28]
 800d716:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d71a:	61bb      	str	r3, [r7, #24]
 800d71c:	f107 0317 	add.w	r3, r7, #23
 800d720:	2100      	movs	r1, #0
 800d722:	4618      	mov	r0, r3
 800d724:	f000 fd24 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 800d728:	4603      	mov	r3, r0
 800d72a:	2b00      	cmp	r3, #0
 800d72c:	d030      	beq.n	800d790 <0fa1209e048698b86219960838c5b2bdc21151fc+0x98>
 800d72e:	7dfb      	ldrb	r3, [r7, #23]
 800d730:	4619      	mov	r1, r3
 800d732:	69ba      	ldr	r2, [r7, #24]
 800d734:	232c      	movs	r3, #44	; 0x2c
 800d736:	fb01 f303 	mul.w	r3, r1, r3
 800d73a:	4413      	add	r3, r2
 800d73c:	781b      	ldrb	r3, [r3, #0]
 800d73e:	2b00      	cmp	r3, #0
 800d740:	d026      	beq.n	800d790 <0fa1209e048698b86219960838c5b2bdc21151fc+0x98>
 800d742:	6838      	ldr	r0, [r7, #0]
 800d744:	793b      	ldrb	r3, [r7, #4]
 800d746:	4619      	mov	r1, r3
 800d748:	7dfb      	ldrb	r3, [r7, #23]
 800d74a:	461e      	mov	r6, r3
 800d74c:	69ba      	ldr	r2, [r7, #24]
 800d74e:	232c      	movs	r3, #44	; 0x2c
 800d750:	fb06 f303 	mul.w	r3, r6, r3
 800d754:	4413      	add	r3, r2
 800d756:	f103 0610 	add.w	r6, r3, #16
 800d75a:	f8d6 2002 	ldr.w	r2, [r6, #2]
 800d75e:	79b6      	ldrb	r6, [r6, #6]
 800d760:	4633      	mov	r3, r6
 800d762:	1a84      	subs	r4, r0, r2
 800d764:	eb61 0503 	sbc.w	r5, r1, r3
 800d768:	46a0      	mov	r8, r4
 800d76a:	f005 09ff 	and.w	r9, r5, #255	; 0xff
 800d76e:	4644      	mov	r4, r8
 800d770:	464d      	mov	r5, r9
 800d772:	68ba      	ldr	r2, [r7, #8]
 800d774:	7b39      	ldrb	r1, [r7, #12]
 800d776:	460b      	mov	r3, r1
 800d778:	42a2      	cmp	r2, r4
 800d77a:	41ab      	sbcs	r3, r5
 800d77c:	d208      	bcs.n	800d790 <0fa1209e048698b86219960838c5b2bdc21151fc+0x98>
 800d77e:	7dfb      	ldrb	r3, [r7, #23]
 800d780:	461a      	mov	r2, r3
 800d782:	232c      	movs	r3, #44	; 0x2c
 800d784:	fb02 f303 	mul.w	r3, r2, r3
 800d788:	69ba      	ldr	r2, [r7, #24]
 800d78a:	4413      	add	r3, r2
 800d78c:	3302      	adds	r3, #2
 800d78e:	e000      	b.n	800d792 <0fa1209e048698b86219960838c5b2bdc21151fc+0x9a>
 800d790:	2300      	movs	r3, #0
 800d792:	4618      	mov	r0, r3
 800d794:	3724      	adds	r7, #36	; 0x24
 800d796:	46bd      	mov	sp, r7
 800d798:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d79c:	20000040 	.word	0x20000040

0800d7a0 <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1>:
 800d7a0:	b580      	push	{r7, lr}
 800d7a2:	b086      	sub	sp, #24
 800d7a4:	af00      	add	r7, sp, #0
 800d7a6:	4b27      	ldr	r3, [pc, #156]	; (800d844 <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0xa4>)
 800d7a8:	681b      	ldr	r3, [r3, #0]
 800d7aa:	60bb      	str	r3, [r7, #8]
 800d7ac:	68bb      	ldr	r3, [r7, #8]
 800d7ae:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d7b2:	607b      	str	r3, [r7, #4]
 800d7b4:	23ff      	movs	r3, #255	; 0xff
 800d7b6:	75fb      	strb	r3, [r7, #23]
 800d7b8:	2300      	movs	r3, #0
 800d7ba:	613b      	str	r3, [r7, #16]
 800d7bc:	f7f8 ff24 	bl	8006608 <EMBENET_RADIO_GetCapabilities>
 800d7c0:	6038      	str	r0, [r7, #0]
 800d7c2:	2300      	movs	r3, #0
 800d7c4:	60fb      	str	r3, [r7, #12]
 800d7c6:	e035      	b.n	800d834 <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0x94>
 800d7c8:	687a      	ldr	r2, [r7, #4]
 800d7ca:	68fb      	ldr	r3, [r7, #12]
 800d7cc:	212c      	movs	r1, #44	; 0x2c
 800d7ce:	fb01 f303 	mul.w	r3, r1, r3
 800d7d2:	4413      	add	r3, r2
 800d7d4:	781b      	ldrb	r3, [r3, #0]
 800d7d6:	2b00      	cmp	r3, #0
 800d7d8:	d029      	beq.n	800d82e <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0x8e>
 800d7da:	687a      	ldr	r2, [r7, #4]
 800d7dc:	68fb      	ldr	r3, [r7, #12]
 800d7de:	212c      	movs	r1, #44	; 0x2c
 800d7e0:	fb01 f303 	mul.w	r3, r1, r3
 800d7e4:	4413      	add	r3, r2
 800d7e6:	3317      	adds	r3, #23
 800d7e8:	781b      	ldrb	r3, [r3, #0]
 800d7ea:	7dfa      	ldrb	r2, [r7, #23]
 800d7ec:	429a      	cmp	r2, r3
 800d7ee:	d31e      	bcc.n	800d82e <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0x8e>
 800d7f0:	687a      	ldr	r2, [r7, #4]
 800d7f2:	68fb      	ldr	r3, [r7, #12]
 800d7f4:	212c      	movs	r1, #44	; 0x2c
 800d7f6:	fb01 f303 	mul.w	r3, r1, r3
 800d7fa:	4413      	add	r3, r2
 800d7fc:	330c      	adds	r3, #12
 800d7fe:	f993 2000 	ldrsb.w	r2, [r3]
 800d802:	683b      	ldr	r3, [r7, #0]
 800d804:	f993 301c 	ldrsb.w	r3, [r3, #28]
 800d808:	429a      	cmp	r2, r3
 800d80a:	db10      	blt.n	800d82e <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0x8e>
 800d80c:	68fb      	ldr	r3, [r7, #12]
 800d80e:	222c      	movs	r2, #44	; 0x2c
 800d810:	fb02 f303 	mul.w	r3, r2, r3
 800d814:	687a      	ldr	r2, [r7, #4]
 800d816:	4413      	add	r3, r2
 800d818:	3302      	adds	r3, #2
 800d81a:	613b      	str	r3, [r7, #16]
 800d81c:	687a      	ldr	r2, [r7, #4]
 800d81e:	68fb      	ldr	r3, [r7, #12]
 800d820:	212c      	movs	r1, #44	; 0x2c
 800d822:	fb01 f303 	mul.w	r3, r1, r3
 800d826:	4413      	add	r3, r2
 800d828:	3317      	adds	r3, #23
 800d82a:	781b      	ldrb	r3, [r3, #0]
 800d82c:	75fb      	strb	r3, [r7, #23]
 800d82e:	68fb      	ldr	r3, [r7, #12]
 800d830:	3301      	adds	r3, #1
 800d832:	60fb      	str	r3, [r7, #12]
 800d834:	68fb      	ldr	r3, [r7, #12]
 800d836:	2b09      	cmp	r3, #9
 800d838:	d9c6      	bls.n	800d7c8 <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1+0x28>
 800d83a:	693b      	ldr	r3, [r7, #16]
 800d83c:	4618      	mov	r0, r3
 800d83e:	3718      	adds	r7, #24
 800d840:	46bd      	mov	sp, r7
 800d842:	bd80      	pop	{r7, pc}
 800d844:	20000040 	.word	0x20000040

0800d848 <4f011439265b330ba2d9f164eb1f6389866b01df>:
 800d848:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d84c:	b089      	sub	sp, #36	; 0x24
 800d84e:	af00      	add	r7, sp, #0
 800d850:	6039      	str	r1, [r7, #0]
 800d852:	4601      	mov	r1, r0
 800d854:	71f9      	strb	r1, [r7, #7]
 800d856:	492c      	ldr	r1, [pc, #176]	; (800d908 <4f011439265b330ba2d9f164eb1f6389866b01df+0xc0>)
 800d858:	6809      	ldr	r1, [r1, #0]
 800d85a:	61f9      	str	r1, [r7, #28]
 800d85c:	69f9      	ldr	r1, [r7, #28]
 800d85e:	f601 21c8 	addw	r1, r1, #2760	; 0xac8
 800d862:	61b9      	str	r1, [r7, #24]
 800d864:	79f9      	ldrb	r1, [r7, #7]
 800d866:	2909      	cmp	r1, #9
 800d868:	d80b      	bhi.n	800d882 <4f011439265b330ba2d9f164eb1f6389866b01df+0x3a>
 800d86a:	79f9      	ldrb	r1, [r7, #7]
 800d86c:	69b8      	ldr	r0, [r7, #24]
 800d86e:	242c      	movs	r4, #44	; 0x2c
 800d870:	fb04 f101 	mul.w	r1, r4, r1
 800d874:	4401      	add	r1, r0
 800d876:	7809      	ldrb	r1, [r1, #0]
 800d878:	f081 0101 	eor.w	r1, r1, #1
 800d87c:	b2c9      	uxtb	r1, r1
 800d87e:	2900      	cmp	r1, #0
 800d880:	d004      	beq.n	800d88c <4f011439265b330ba2d9f164eb1f6389866b01df+0x44>
 800d882:	22cc      	movs	r2, #204	; 0xcc
 800d884:	4921      	ldr	r1, [pc, #132]	; (800d90c <4f011439265b330ba2d9f164eb1f6389866b01df+0xc4>)
 800d886:	4822      	ldr	r0, [pc, #136]	; (800d910 <4f011439265b330ba2d9f164eb1f6389866b01df+0xc8>)
 800d888:	f7f3 ff3e 	bl	8001708 <EXPECT_OnAbortHandler>
 800d88c:	79f9      	ldrb	r1, [r7, #7]
 800d88e:	69b8      	ldr	r0, [r7, #24]
 800d890:	242c      	movs	r4, #44	; 0x2c
 800d892:	fb04 f101 	mul.w	r1, r4, r1
 800d896:	4401      	add	r1, r0
 800d898:	3118      	adds	r1, #24
 800d89a:	7809      	ldrb	r1, [r1, #0]
 800d89c:	2900      	cmp	r1, #0
 800d89e:	d025      	beq.n	800d8ec <4f011439265b330ba2d9f164eb1f6389866b01df+0xa4>
 800d8a0:	6839      	ldr	r1, [r7, #0]
 800d8a2:	680c      	ldr	r4, [r1, #0]
 800d8a4:	7909      	ldrb	r1, [r1, #4]
 800d8a6:	460d      	mov	r5, r1
 800d8a8:	79f9      	ldrb	r1, [r7, #7]
 800d8aa:	69b8      	ldr	r0, [r7, #24]
 800d8ac:	262c      	movs	r6, #44	; 0x2c
 800d8ae:	fb06 f101 	mul.w	r1, r6, r1
 800d8b2:	4401      	add	r1, r0
 800d8b4:	f101 0618 	add.w	r6, r1, #24
 800d8b8:	f8d6 0001 	ldr.w	r0, [r6, #1]
 800d8bc:	7976      	ldrb	r6, [r6, #5]
 800d8be:	4631      	mov	r1, r6
 800d8c0:	1a22      	subs	r2, r4, r0
 800d8c2:	eb65 0301 	sbc.w	r3, r5, r1
 800d8c6:	4690      	mov	r8, r2
 800d8c8:	f003 09ff 	and.w	r9, r3, #255	; 0xff
 800d8cc:	4642      	mov	r2, r8
 800d8ce:	464b      	mov	r3, r9
 800d8d0:	4910      	ldr	r1, [pc, #64]	; (800d914 <4f011439265b330ba2d9f164eb1f6389866b01df+0xcc>)
 800d8d2:	428a      	cmp	r2, r1
 800d8d4:	f173 0300 	sbcs.w	r3, r3, #0
 800d8d8:	d308      	bcc.n	800d8ec <4f011439265b330ba2d9f164eb1f6389866b01df+0xa4>
 800d8da:	79fb      	ldrb	r3, [r7, #7]
 800d8dc:	69ba      	ldr	r2, [r7, #24]
 800d8de:	212c      	movs	r1, #44	; 0x2c
 800d8e0:	fb01 f303 	mul.w	r3, r1, r3
 800d8e4:	4413      	add	r3, r2
 800d8e6:	3318      	adds	r3, #24
 800d8e8:	2200      	movs	r2, #0
 800d8ea:	701a      	strb	r2, [r3, #0]
 800d8ec:	79fb      	ldrb	r3, [r7, #7]
 800d8ee:	69ba      	ldr	r2, [r7, #24]
 800d8f0:	212c      	movs	r1, #44	; 0x2c
 800d8f2:	fb01 f303 	mul.w	r3, r1, r3
 800d8f6:	4413      	add	r3, r2
 800d8f8:	3318      	adds	r3, #24
 800d8fa:	781b      	ldrb	r3, [r3, #0]
 800d8fc:	4618      	mov	r0, r3
 800d8fe:	3724      	adds	r7, #36	; 0x24
 800d900:	46bd      	mov	sp, r7
 800d902:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d906:	bf00      	nop
 800d908:	20000040 	.word	0x20000040
 800d90c:	0802e1fc 	.word	0x0802e1fc
 800d910:	0802e264 	.word	0x0802e264
 800d914:	000f4241 	.word	0x000f4241

0800d918 <027deecf67887395ef5db16208d3312ee727e45e>:
 800d918:	b580      	push	{r7, lr}
 800d91a:	b088      	sub	sp, #32
 800d91c:	af00      	add	r7, sp, #0
 800d91e:	4603      	mov	r3, r0
 800d920:	6039      	str	r1, [r7, #0]
 800d922:	71fb      	strb	r3, [r7, #7]
 800d924:	4b1e      	ldr	r3, [pc, #120]	; (800d9a0 <027deecf67887395ef5db16208d3312ee727e45e+0x88>)
 800d926:	681b      	ldr	r3, [r3, #0]
 800d928:	61fb      	str	r3, [r7, #28]
 800d92a:	69fb      	ldr	r3, [r7, #28]
 800d92c:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d930:	61bb      	str	r3, [r7, #24]
 800d932:	79fb      	ldrb	r3, [r7, #7]
 800d934:	2b09      	cmp	r3, #9
 800d936:	d80b      	bhi.n	800d950 <027deecf67887395ef5db16208d3312ee727e45e+0x38>
 800d938:	79fb      	ldrb	r3, [r7, #7]
 800d93a:	69ba      	ldr	r2, [r7, #24]
 800d93c:	212c      	movs	r1, #44	; 0x2c
 800d93e:	fb01 f303 	mul.w	r3, r1, r3
 800d942:	4413      	add	r3, r2
 800d944:	781b      	ldrb	r3, [r3, #0]
 800d946:	f083 0301 	eor.w	r3, r3, #1
 800d94a:	b2db      	uxtb	r3, r3
 800d94c:	2b00      	cmp	r3, #0
 800d94e:	d004      	beq.n	800d95a <027deecf67887395ef5db16208d3312ee727e45e+0x42>
 800d950:	22e0      	movs	r2, #224	; 0xe0
 800d952:	4914      	ldr	r1, [pc, #80]	; (800d9a4 <027deecf67887395ef5db16208d3312ee727e45e+0x8c>)
 800d954:	4814      	ldr	r0, [pc, #80]	; (800d9a8 <027deecf67887395ef5db16208d3312ee727e45e+0x90>)
 800d956:	f7f3 fed7 	bl	8001708 <EXPECT_OnAbortHandler>
 800d95a:	79fb      	ldrb	r3, [r7, #7]
 800d95c:	69ba      	ldr	r2, [r7, #24]
 800d95e:	212c      	movs	r1, #44	; 0x2c
 800d960:	fb01 f303 	mul.w	r3, r1, r3
 800d964:	4413      	add	r3, r2
 800d966:	3318      	adds	r3, #24
 800d968:	2201      	movs	r2, #1
 800d96a:	701a      	strb	r2, [r3, #0]
 800d96c:	79fb      	ldrb	r3, [r7, #7]
 800d96e:	69ba      	ldr	r2, [r7, #24]
 800d970:	212c      	movs	r1, #44	; 0x2c
 800d972:	fb01 f303 	mul.w	r3, r1, r3
 800d976:	4413      	add	r3, r2
 800d978:	3318      	adds	r3, #24
 800d97a:	683a      	ldr	r2, [r7, #0]
 800d97c:	3301      	adds	r3, #1
 800d97e:	6811      	ldr	r1, [r2, #0]
 800d980:	6019      	str	r1, [r3, #0]
 800d982:	7912      	ldrb	r2, [r2, #4]
 800d984:	711a      	strb	r2, [r3, #4]
 800d986:	69bb      	ldr	r3, [r7, #24]
 800d988:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800d98c:	79fa      	ldrb	r2, [r7, #7]
 800d98e:	429a      	cmp	r2, r3
 800d990:	d101      	bne.n	800d996 <027deecf67887395ef5db16208d3312ee727e45e+0x7e>
 800d992:	2301      	movs	r3, #1
 800d994:	e000      	b.n	800d998 <027deecf67887395ef5db16208d3312ee727e45e+0x80>
 800d996:	2300      	movs	r3, #0
 800d998:	4618      	mov	r0, r3
 800d99a:	3720      	adds	r7, #32
 800d99c:	46bd      	mov	sp, r7
 800d99e:	bd80      	pop	{r7, pc}
 800d9a0:	20000040 	.word	0x20000040
 800d9a4:	0802e1fc 	.word	0x0802e1fc
 800d9a8:	0802e264 	.word	0x0802e264

0800d9ac <0a8a8543f799df9767389ce496f81ab8433a71f4>:
 800d9ac:	b580      	push	{r7, lr}
 800d9ae:	b086      	sub	sp, #24
 800d9b0:	af00      	add	r7, sp, #0
 800d9b2:	6078      	str	r0, [r7, #4]
 800d9b4:	2300      	movs	r3, #0
 800d9b6:	617b      	str	r3, [r7, #20]
 800d9b8:	4b1d      	ldr	r3, [pc, #116]	; (800da30 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x84>)
 800d9ba:	681b      	ldr	r3, [r3, #0]
 800d9bc:	613b      	str	r3, [r7, #16]
 800d9be:	693b      	ldr	r3, [r7, #16]
 800d9c0:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800d9c4:	60fb      	str	r3, [r7, #12]
 800d9c6:	e01a      	b.n	800d9fe <0a8a8543f799df9767389ce496f81ab8433a71f4+0x52>
 800d9c8:	68fa      	ldr	r2, [r7, #12]
 800d9ca:	697b      	ldr	r3, [r7, #20]
 800d9cc:	212c      	movs	r1, #44	; 0x2c
 800d9ce:	fb01 f303 	mul.w	r3, r1, r3
 800d9d2:	4413      	add	r3, r2
 800d9d4:	781b      	ldrb	r3, [r3, #0]
 800d9d6:	2b00      	cmp	r3, #0
 800d9d8:	d00e      	beq.n	800d9f8 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x4c>
 800d9da:	697b      	ldr	r3, [r7, #20]
 800d9dc:	222c      	movs	r2, #44	; 0x2c
 800d9de:	fb02 f303 	mul.w	r3, r2, r3
 800d9e2:	68fa      	ldr	r2, [r7, #12]
 800d9e4:	4413      	add	r3, r2
 800d9e6:	3302      	adds	r3, #2
 800d9e8:	2208      	movs	r2, #8
 800d9ea:	6879      	ldr	r1, [r7, #4]
 800d9ec:	4618      	mov	r0, r3
 800d9ee:	f01d fb59 	bl	802b0a4 <memcmp>
 800d9f2:	4603      	mov	r3, r0
 800d9f4:	2b00      	cmp	r3, #0
 800d9f6:	d006      	beq.n	800da06 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x5a>
 800d9f8:	697b      	ldr	r3, [r7, #20]
 800d9fa:	3301      	adds	r3, #1
 800d9fc:	617b      	str	r3, [r7, #20]
 800d9fe:	697b      	ldr	r3, [r7, #20]
 800da00:	2b09      	cmp	r3, #9
 800da02:	d9e1      	bls.n	800d9c8 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x1c>
 800da04:	e000      	b.n	800da08 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x5c>
 800da06:	bf00      	nop
 800da08:	697b      	ldr	r3, [r7, #20]
 800da0a:	2b09      	cmp	r3, #9
 800da0c:	d904      	bls.n	800da18 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x6c>
 800da0e:	22fd      	movs	r2, #253	; 0xfd
 800da10:	4908      	ldr	r1, [pc, #32]	; (800da34 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x88>)
 800da12:	4809      	ldr	r0, [pc, #36]	; (800da38 <0a8a8543f799df9767389ce496f81ab8433a71f4+0x8c>)
 800da14:	f7f3 fe78 	bl	8001708 <EXPECT_OnAbortHandler>
 800da18:	68fa      	ldr	r2, [r7, #12]
 800da1a:	697b      	ldr	r3, [r7, #20]
 800da1c:	212c      	movs	r1, #44	; 0x2c
 800da1e:	fb01 f303 	mul.w	r3, r1, r3
 800da22:	4413      	add	r3, r2
 800da24:	331e      	adds	r3, #30
 800da26:	781b      	ldrb	r3, [r3, #0]
 800da28:	4618      	mov	r0, r3
 800da2a:	3718      	adds	r7, #24
 800da2c:	46bd      	mov	sp, r7
 800da2e:	bd80      	pop	{r7, pc}
 800da30:	20000040 	.word	0x20000040
 800da34:	0802e1fc 	.word	0x0802e1fc
 800da38:	0802e2c4 	.word	0x0802e2c4

0800da3c <91ad02464a5553c72b508f812e77f83c74a657ed>:
 800da3c:	b580      	push	{r7, lr}
 800da3e:	b086      	sub	sp, #24
 800da40:	af00      	add	r7, sp, #0
 800da42:	4603      	mov	r3, r0
 800da44:	460a      	mov	r2, r1
 800da46:	71fb      	strb	r3, [r7, #7]
 800da48:	4613      	mov	r3, r2
 800da4a:	80bb      	strh	r3, [r7, #4]
 800da4c:	79fb      	ldrb	r3, [r7, #7]
 800da4e:	2b09      	cmp	r3, #9
 800da50:	d905      	bls.n	800da5e <91ad02464a5553c72b508f812e77f83c74a657ed+0x22>
 800da52:	f44f 728a 	mov.w	r2, #276	; 0x114
 800da56:	4914      	ldr	r1, [pc, #80]	; (800daa8 <91ad02464a5553c72b508f812e77f83c74a657ed+0x6c>)
 800da58:	4814      	ldr	r0, [pc, #80]	; (800daac <91ad02464a5553c72b508f812e77f83c74a657ed+0x70>)
 800da5a:	f7f3 fe55 	bl	8001708 <EXPECT_OnAbortHandler>
 800da5e:	4b14      	ldr	r3, [pc, #80]	; (800dab0 <91ad02464a5553c72b508f812e77f83c74a657ed+0x74>)
 800da60:	681b      	ldr	r3, [r3, #0]
 800da62:	613b      	str	r3, [r7, #16]
 800da64:	693b      	ldr	r3, [r7, #16]
 800da66:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800da6a:	60fb      	str	r3, [r7, #12]
 800da6c:	79fb      	ldrb	r3, [r7, #7]
 800da6e:	68fa      	ldr	r2, [r7, #12]
 800da70:	212c      	movs	r1, #44	; 0x2c
 800da72:	fb01 f303 	mul.w	r3, r1, r3
 800da76:	4413      	add	r3, r2
 800da78:	781b      	ldrb	r3, [r3, #0]
 800da7a:	2b00      	cmp	r3, #0
 800da7c:	d00d      	beq.n	800da9a <91ad02464a5553c72b508f812e77f83c74a657ed+0x5e>
 800da7e:	79fb      	ldrb	r3, [r7, #7]
 800da80:	68fa      	ldr	r2, [r7, #12]
 800da82:	212c      	movs	r1, #44	; 0x2c
 800da84:	fb01 f303 	mul.w	r3, r1, r3
 800da88:	4413      	add	r3, r2
 800da8a:	330a      	adds	r3, #10
 800da8c:	881b      	ldrh	r3, [r3, #0]
 800da8e:	88ba      	ldrh	r2, [r7, #4]
 800da90:	429a      	cmp	r2, r3
 800da92:	d802      	bhi.n	800da9a <91ad02464a5553c72b508f812e77f83c74a657ed+0x5e>
 800da94:	2301      	movs	r3, #1
 800da96:	75fb      	strb	r3, [r7, #23]
 800da98:	e001      	b.n	800da9e <91ad02464a5553c72b508f812e77f83c74a657ed+0x62>
 800da9a:	2300      	movs	r3, #0
 800da9c:	75fb      	strb	r3, [r7, #23]
 800da9e:	7dfb      	ldrb	r3, [r7, #23]
 800daa0:	4618      	mov	r0, r3
 800daa2:	3718      	adds	r7, #24
 800daa4:	46bd      	mov	sp, r7
 800daa6:	bd80      	pop	{r7, pc}
 800daa8:	0802e1fc 	.word	0x0802e1fc
 800daac:	0802e278 	.word	0x0802e278
 800dab0:	20000040 	.word	0x20000040

0800dab4 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86>:
 800dab4:	b590      	push	{r4, r7, lr}
 800dab6:	b08d      	sub	sp, #52	; 0x34
 800dab8:	af02      	add	r7, sp, #8
 800daba:	60f8      	str	r0, [r7, #12]
 800dabc:	607a      	str	r2, [r7, #4]
 800dabe:	461a      	mov	r2, r3
 800dac0:	460b      	mov	r3, r1
 800dac2:	72fb      	strb	r3, [r7, #11]
 800dac4:	4613      	mov	r3, r2
 800dac6:	72bb      	strb	r3, [r7, #10]
 800dac8:	2301      	movs	r3, #1
 800daca:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800dace:	4b4a      	ldr	r3, [pc, #296]	; (800dbf8 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x144>)
 800dad0:	681b      	ldr	r3, [r3, #0]
 800dad2:	61fb      	str	r3, [r7, #28]
 800dad4:	69fb      	ldr	r3, [r7, #28]
 800dad6:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800dada:	61bb      	str	r3, [r7, #24]
 800dadc:	2300      	movs	r3, #0
 800dade:	623b      	str	r3, [r7, #32]
 800dae0:	e06e      	b.n	800dbc0 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x10c>
 800dae2:	69ba      	ldr	r2, [r7, #24]
 800dae4:	6a3b      	ldr	r3, [r7, #32]
 800dae6:	212c      	movs	r1, #44	; 0x2c
 800dae8:	fb01 f303 	mul.w	r3, r1, r3
 800daec:	4413      	add	r3, r2
 800daee:	781b      	ldrb	r3, [r3, #0]
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	d062      	beq.n	800dbba <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x106>
 800daf4:	6a3b      	ldr	r3, [r7, #32]
 800daf6:	222c      	movs	r2, #44	; 0x2c
 800daf8:	fb02 f303 	mul.w	r3, r2, r3
 800dafc:	69ba      	ldr	r2, [r7, #24]
 800dafe:	4413      	add	r3, r2
 800db00:	3302      	adds	r3, #2
 800db02:	2208      	movs	r2, #8
 800db04:	68f9      	ldr	r1, [r7, #12]
 800db06:	4618      	mov	r0, r3
 800db08:	f01d facc 	bl	802b0a4 <memcmp>
 800db0c:	4603      	mov	r3, r0
 800db0e:	2b00      	cmp	r3, #0
 800db10:	d153      	bne.n	800dbba <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x106>
 800db12:	2300      	movs	r3, #0
 800db14:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800db18:	69ba      	ldr	r2, [r7, #24]
 800db1a:	6a3b      	ldr	r3, [r7, #32]
 800db1c:	212c      	movs	r1, #44	; 0x2c
 800db1e:	fb01 f303 	mul.w	r3, r1, r3
 800db22:	4413      	add	r3, r2
 800db24:	3301      	adds	r3, #1
 800db26:	f897 203c 	ldrb.w	r2, [r7, #60]	; 0x3c
 800db2a:	701a      	strb	r2, [r3, #0]
 800db2c:	69ba      	ldr	r2, [r7, #24]
 800db2e:	6a3b      	ldr	r3, [r7, #32]
 800db30:	212c      	movs	r1, #44	; 0x2c
 800db32:	fb01 f303 	mul.w	r3, r1, r3
 800db36:	4413      	add	r3, r2
 800db38:	330c      	adds	r3, #12
 800db3a:	f993 3000 	ldrsb.w	r3, [r3]
 800db3e:	461a      	mov	r2, r3
 800db40:	4613      	mov	r3, r2
 800db42:	00db      	lsls	r3, r3, #3
 800db44:	1a9a      	subs	r2, r3, r2
 800db46:	f997 300b 	ldrsb.w	r3, [r7, #11]
 800db4a:	4413      	add	r3, r2
 800db4c:	2b00      	cmp	r3, #0
 800db4e:	da00      	bge.n	800db52 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x9e>
 800db50:	3307      	adds	r3, #7
 800db52:	10db      	asrs	r3, r3, #3
 800db54:	b258      	sxtb	r0, r3
 800db56:	69ba      	ldr	r2, [r7, #24]
 800db58:	6a3b      	ldr	r3, [r7, #32]
 800db5a:	212c      	movs	r1, #44	; 0x2c
 800db5c:	fb01 f303 	mul.w	r3, r1, r3
 800db60:	4413      	add	r3, r2
 800db62:	330c      	adds	r3, #12
 800db64:	4602      	mov	r2, r0
 800db66:	701a      	strb	r2, [r3, #0]
 800db68:	6879      	ldr	r1, [r7, #4]
 800db6a:	680a      	ldr	r2, [r1, #0]
 800db6c:	7909      	ldrb	r1, [r1, #4]
 800db6e:	460b      	mov	r3, r1
 800db70:	69b8      	ldr	r0, [r7, #24]
 800db72:	6a39      	ldr	r1, [r7, #32]
 800db74:	242c      	movs	r4, #44	; 0x2c
 800db76:	fb04 f101 	mul.w	r1, r4, r1
 800db7a:	4401      	add	r1, r0
 800db7c:	3110      	adds	r1, #16
 800db7e:	f8c1 2002 	str.w	r2, [r1, #2]
 800db82:	7988      	ldrb	r0, [r1, #6]
 800db84:	f363 0007 	bfi	r0, r3, #0, #8
 800db88:	7188      	strb	r0, [r1, #6]
 800db8a:	7abb      	ldrb	r3, [r7, #10]
 800db8c:	2b00      	cmp	r3, #0
 800db8e:	d00a      	beq.n	800dba6 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0xf2>
 800db90:	69ba      	ldr	r2, [r7, #24]
 800db92:	6a3b      	ldr	r3, [r7, #32]
 800db94:	212c      	movs	r1, #44	; 0x2c
 800db96:	fb01 f303 	mul.w	r3, r1, r3
 800db9a:	4413      	add	r3, r2
 800db9c:	3317      	adds	r3, #23
 800db9e:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800dba2:	701a      	strb	r2, [r3, #0]
 800dba4:	e00f      	b.n	800dbc6 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x112>
 800dba6:	69ba      	ldr	r2, [r7, #24]
 800dba8:	6a3b      	ldr	r3, [r7, #32]
 800dbaa:	212c      	movs	r1, #44	; 0x2c
 800dbac:	fb01 f303 	mul.w	r3, r1, r3
 800dbb0:	4413      	add	r3, r2
 800dbb2:	3317      	adds	r3, #23
 800dbb4:	22ff      	movs	r2, #255	; 0xff
 800dbb6:	701a      	strb	r2, [r3, #0]
 800dbb8:	e005      	b.n	800dbc6 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x112>
 800dbba:	6a3b      	ldr	r3, [r7, #32]
 800dbbc:	3301      	adds	r3, #1
 800dbbe:	623b      	str	r3, [r7, #32]
 800dbc0:	6a3b      	ldr	r3, [r7, #32]
 800dbc2:	2b09      	cmp	r3, #9
 800dbc4:	d98d      	bls.n	800dae2 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x2e>
 800dbc6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800dbca:	2b00      	cmp	r3, #0
 800dbcc:	d00f      	beq.n	800dbee <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x13a>
 800dbce:	7aba      	ldrb	r2, [r7, #10]
 800dbd0:	f997 100b 	ldrsb.w	r1, [r7, #11]
 800dbd4:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 800dbd8:	9301      	str	r3, [sp, #4]
 800dbda:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 800dbde:	9300      	str	r3, [sp, #0]
 800dbe0:	4613      	mov	r3, r2
 800dbe2:	687a      	ldr	r2, [r7, #4]
 800dbe4:	68f8      	ldr	r0, [r7, #12]
 800dbe6:	f000 fc0b 	bl	800e400 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a>
 800dbea:	4603      	mov	r3, r0
 800dbec:	e000      	b.n	800dbf0 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86+0x13c>
 800dbee:	2301      	movs	r3, #1
 800dbf0:	4618      	mov	r0, r3
 800dbf2:	372c      	adds	r7, #44	; 0x2c
 800dbf4:	46bd      	mov	sp, r7
 800dbf6:	bd90      	pop	{r4, r7, pc}
 800dbf8:	20000040 	.word	0x20000040

0800dbfc <8c07271647b7d6eded14e64818e8777967155b78>:
 800dbfc:	b580      	push	{r7, lr}
 800dbfe:	b086      	sub	sp, #24
 800dc00:	af00      	add	r7, sp, #0
 800dc02:	6078      	str	r0, [r7, #4]
 800dc04:	4608      	mov	r0, r1
 800dc06:	4611      	mov	r1, r2
 800dc08:	461a      	mov	r2, r3
 800dc0a:	4603      	mov	r3, r0
 800dc0c:	70fb      	strb	r3, [r7, #3]
 800dc0e:	460b      	mov	r3, r1
 800dc10:	70bb      	strb	r3, [r7, #2]
 800dc12:	4613      	mov	r3, r2
 800dc14:	707b      	strb	r3, [r7, #1]
 800dc16:	4b4f      	ldr	r3, [pc, #316]	; (800dd54 <8c07271647b7d6eded14e64818e8777967155b78+0x158>)
 800dc18:	681b      	ldr	r3, [r3, #0]
 800dc1a:	613b      	str	r3, [r7, #16]
 800dc1c:	693b      	ldr	r3, [r7, #16]
 800dc1e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800dc22:	60fb      	str	r3, [r7, #12]
 800dc24:	2300      	movs	r3, #0
 800dc26:	617b      	str	r3, [r7, #20]
 800dc28:	e08a      	b.n	800dd40 <8c07271647b7d6eded14e64818e8777967155b78+0x144>
 800dc2a:	68fa      	ldr	r2, [r7, #12]
 800dc2c:	697b      	ldr	r3, [r7, #20]
 800dc2e:	212c      	movs	r1, #44	; 0x2c
 800dc30:	fb01 f303 	mul.w	r3, r1, r3
 800dc34:	4413      	add	r3, r2
 800dc36:	781b      	ldrb	r3, [r3, #0]
 800dc38:	2b00      	cmp	r3, #0
 800dc3a:	d07e      	beq.n	800dd3a <8c07271647b7d6eded14e64818e8777967155b78+0x13e>
 800dc3c:	697b      	ldr	r3, [r7, #20]
 800dc3e:	222c      	movs	r2, #44	; 0x2c
 800dc40:	fb02 f303 	mul.w	r3, r2, r3
 800dc44:	68fa      	ldr	r2, [r7, #12]
 800dc46:	4413      	add	r3, r2
 800dc48:	3302      	adds	r3, #2
 800dc4a:	2208      	movs	r2, #8
 800dc4c:	6879      	ldr	r1, [r7, #4]
 800dc4e:	4618      	mov	r0, r3
 800dc50:	f01d fa28 	bl	802b0a4 <memcmp>
 800dc54:	4603      	mov	r3, r0
 800dc56:	2b00      	cmp	r3, #0
 800dc58:	d16f      	bne.n	800dd3a <8c07271647b7d6eded14e64818e8777967155b78+0x13e>
 800dc5a:	787b      	ldrb	r3, [r7, #1]
 800dc5c:	2b00      	cmp	r3, #0
 800dc5e:	d00c      	beq.n	800dc7a <8c07271647b7d6eded14e64818e8777967155b78+0x7e>
 800dc60:	697b      	ldr	r3, [r7, #20]
 800dc62:	222c      	movs	r2, #44	; 0x2c
 800dc64:	fb02 f303 	mul.w	r3, r2, r3
 800dc68:	3310      	adds	r3, #16
 800dc6a:	68fa      	ldr	r2, [r7, #12]
 800dc6c:	4413      	add	r3, r2
 800dc6e:	3302      	adds	r3, #2
 800dc70:	2205      	movs	r2, #5
 800dc72:	6a39      	ldr	r1, [r7, #32]
 800dc74:	4618      	mov	r0, r3
 800dc76:	f01d fade 	bl	802b236 <memcpy>
 800dc7a:	78bb      	ldrb	r3, [r7, #2]
 800dc7c:	2b00      	cmp	r3, #0
 800dc7e:	d064      	beq.n	800dd4a <8c07271647b7d6eded14e64818e8777967155b78+0x14e>
 800dc80:	68fa      	ldr	r2, [r7, #12]
 800dc82:	697b      	ldr	r3, [r7, #20]
 800dc84:	212c      	movs	r1, #44	; 0x2c
 800dc86:	fb01 f303 	mul.w	r3, r1, r3
 800dc8a:	4413      	add	r3, r2
 800dc8c:	330e      	adds	r3, #14
 800dc8e:	881b      	ldrh	r3, [r3, #0]
 800dc90:	b21b      	sxth	r3, r3
 800dc92:	2b00      	cmp	r3, #0
 800dc94:	da25      	bge.n	800dce2 <8c07271647b7d6eded14e64818e8777967155b78+0xe6>
 800dc96:	68fa      	ldr	r2, [r7, #12]
 800dc98:	697b      	ldr	r3, [r7, #20]
 800dc9a:	212c      	movs	r1, #44	; 0x2c
 800dc9c:	fb01 f303 	mul.w	r3, r1, r3
 800dca0:	4413      	add	r3, r2
 800dca2:	330e      	adds	r3, #14
 800dca4:	881b      	ldrh	r3, [r3, #0]
 800dca6:	085b      	lsrs	r3, r3, #1
 800dca8:	b298      	uxth	r0, r3
 800dcaa:	68fa      	ldr	r2, [r7, #12]
 800dcac:	697b      	ldr	r3, [r7, #20]
 800dcae:	212c      	movs	r1, #44	; 0x2c
 800dcb0:	fb01 f303 	mul.w	r3, r1, r3
 800dcb4:	4413      	add	r3, r2
 800dcb6:	330e      	adds	r3, #14
 800dcb8:	4602      	mov	r2, r0
 800dcba:	801a      	strh	r2, [r3, #0]
 800dcbc:	68fa      	ldr	r2, [r7, #12]
 800dcbe:	697b      	ldr	r3, [r7, #20]
 800dcc0:	212c      	movs	r1, #44	; 0x2c
 800dcc2:	fb01 f303 	mul.w	r3, r1, r3
 800dcc6:	4413      	add	r3, r2
 800dcc8:	3310      	adds	r3, #16
 800dcca:	881b      	ldrh	r3, [r3, #0]
 800dccc:	085b      	lsrs	r3, r3, #1
 800dcce:	b298      	uxth	r0, r3
 800dcd0:	68fa      	ldr	r2, [r7, #12]
 800dcd2:	697b      	ldr	r3, [r7, #20]
 800dcd4:	212c      	movs	r1, #44	; 0x2c
 800dcd6:	fb01 f303 	mul.w	r3, r1, r3
 800dcda:	4413      	add	r3, r2
 800dcdc:	3310      	adds	r3, #16
 800dcde:	4602      	mov	r2, r0
 800dce0:	801a      	strh	r2, [r3, #0]
 800dce2:	68fa      	ldr	r2, [r7, #12]
 800dce4:	697b      	ldr	r3, [r7, #20]
 800dce6:	212c      	movs	r1, #44	; 0x2c
 800dce8:	fb01 f303 	mul.w	r3, r1, r3
 800dcec:	4413      	add	r3, r2
 800dcee:	330e      	adds	r3, #14
 800dcf0:	881a      	ldrh	r2, [r3, #0]
 800dcf2:	78fb      	ldrb	r3, [r7, #3]
 800dcf4:	b29b      	uxth	r3, r3
 800dcf6:	4413      	add	r3, r2
 800dcf8:	b298      	uxth	r0, r3
 800dcfa:	68fa      	ldr	r2, [r7, #12]
 800dcfc:	697b      	ldr	r3, [r7, #20]
 800dcfe:	212c      	movs	r1, #44	; 0x2c
 800dd00:	fb01 f303 	mul.w	r3, r1, r3
 800dd04:	4413      	add	r3, r2
 800dd06:	330e      	adds	r3, #14
 800dd08:	4602      	mov	r2, r0
 800dd0a:	801a      	strh	r2, [r3, #0]
 800dd0c:	787b      	ldrb	r3, [r7, #1]
 800dd0e:	2b00      	cmp	r3, #0
 800dd10:	d01b      	beq.n	800dd4a <8c07271647b7d6eded14e64818e8777967155b78+0x14e>
 800dd12:	68fa      	ldr	r2, [r7, #12]
 800dd14:	697b      	ldr	r3, [r7, #20]
 800dd16:	212c      	movs	r1, #44	; 0x2c
 800dd18:	fb01 f303 	mul.w	r3, r1, r3
 800dd1c:	4413      	add	r3, r2
 800dd1e:	3310      	adds	r3, #16
 800dd20:	881b      	ldrh	r3, [r3, #0]
 800dd22:	3301      	adds	r3, #1
 800dd24:	b298      	uxth	r0, r3
 800dd26:	68fa      	ldr	r2, [r7, #12]
 800dd28:	697b      	ldr	r3, [r7, #20]
 800dd2a:	212c      	movs	r1, #44	; 0x2c
 800dd2c:	fb01 f303 	mul.w	r3, r1, r3
 800dd30:	4413      	add	r3, r2
 800dd32:	3310      	adds	r3, #16
 800dd34:	4602      	mov	r2, r0
 800dd36:	801a      	strh	r2, [r3, #0]
 800dd38:	e007      	b.n	800dd4a <8c07271647b7d6eded14e64818e8777967155b78+0x14e>
 800dd3a:	697b      	ldr	r3, [r7, #20]
 800dd3c:	3301      	adds	r3, #1
 800dd3e:	617b      	str	r3, [r7, #20]
 800dd40:	697b      	ldr	r3, [r7, #20]
 800dd42:	2b09      	cmp	r3, #9
 800dd44:	f67f af71 	bls.w	800dc2a <8c07271647b7d6eded14e64818e8777967155b78+0x2e>
 800dd48:	e000      	b.n	800dd4c <8c07271647b7d6eded14e64818e8777967155b78+0x150>
 800dd4a:	bf00      	nop
 800dd4c:	bf00      	nop
 800dd4e:	3718      	adds	r7, #24
 800dd50:	46bd      	mov	sp, r7
 800dd52:	bd80      	pop	{r7, pc}
 800dd54:	20000040 	.word	0x20000040

0800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>:
 800dd58:	b580      	push	{r7, lr}
 800dd5a:	b086      	sub	sp, #24
 800dd5c:	af00      	add	r7, sp, #0
 800dd5e:	6078      	str	r0, [r7, #4]
 800dd60:	4b2a      	ldr	r3, [pc, #168]	; (800de0c <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0xb4>)
 800dd62:	681b      	ldr	r3, [r3, #0]
 800dd64:	613b      	str	r3, [r7, #16]
 800dd66:	693b      	ldr	r3, [r7, #16]
 800dd68:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800dd6c:	60fb      	str	r3, [r7, #12]
 800dd6e:	2300      	movs	r3, #0
 800dd70:	617b      	str	r3, [r7, #20]
 800dd72:	e041      	b.n	800ddf8 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0xa0>
 800dd74:	68fa      	ldr	r2, [r7, #12]
 800dd76:	697b      	ldr	r3, [r7, #20]
 800dd78:	212c      	movs	r1, #44	; 0x2c
 800dd7a:	fb01 f303 	mul.w	r3, r1, r3
 800dd7e:	4413      	add	r3, r2
 800dd80:	781b      	ldrb	r3, [r3, #0]
 800dd82:	2b00      	cmp	r3, #0
 800dd84:	d035      	beq.n	800ddf2 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0x9a>
 800dd86:	697b      	ldr	r3, [r7, #20]
 800dd88:	222c      	movs	r2, #44	; 0x2c
 800dd8a:	fb02 f303 	mul.w	r3, r2, r3
 800dd8e:	68fa      	ldr	r2, [r7, #12]
 800dd90:	4413      	add	r3, r2
 800dd92:	3302      	adds	r3, #2
 800dd94:	2208      	movs	r2, #8
 800dd96:	6879      	ldr	r1, [r7, #4]
 800dd98:	4618      	mov	r0, r3
 800dd9a:	f01d f983 	bl	802b0a4 <memcmp>
 800dd9e:	4603      	mov	r3, r0
 800dda0:	2b00      	cmp	r3, #0
 800dda2:	d126      	bne.n	800ddf2 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0x9a>
 800dda4:	68fa      	ldr	r2, [r7, #12]
 800dda6:	697b      	ldr	r3, [r7, #20]
 800dda8:	212c      	movs	r1, #44	; 0x2c
 800ddaa:	fb01 f303 	mul.w	r3, r1, r3
 800ddae:	4413      	add	r3, r2
 800ddb0:	331e      	adds	r3, #30
 800ddb2:	781b      	ldrb	r3, [r3, #0]
 800ddb4:	3301      	adds	r3, #1
 800ddb6:	b2d8      	uxtb	r0, r3
 800ddb8:	68fa      	ldr	r2, [r7, #12]
 800ddba:	697b      	ldr	r3, [r7, #20]
 800ddbc:	212c      	movs	r1, #44	; 0x2c
 800ddbe:	fb01 f303 	mul.w	r3, r1, r3
 800ddc2:	4413      	add	r3, r2
 800ddc4:	331e      	adds	r3, #30
 800ddc6:	4602      	mov	r2, r0
 800ddc8:	701a      	strb	r2, [r3, #0]
 800ddca:	68fa      	ldr	r2, [r7, #12]
 800ddcc:	697b      	ldr	r3, [r7, #20]
 800ddce:	212c      	movs	r1, #44	; 0x2c
 800ddd0:	fb01 f303 	mul.w	r3, r1, r3
 800ddd4:	4413      	add	r3, r2
 800ddd6:	331e      	adds	r3, #30
 800ddd8:	781b      	ldrb	r3, [r3, #0]
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	d110      	bne.n	800de00 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0xa8>
 800ddde:	68fa      	ldr	r2, [r7, #12]
 800dde0:	697b      	ldr	r3, [r7, #20]
 800dde2:	212c      	movs	r1, #44	; 0x2c
 800dde4:	fb01 f303 	mul.w	r3, r1, r3
 800dde8:	4413      	add	r3, r2
 800ddea:	331e      	adds	r3, #30
 800ddec:	2201      	movs	r2, #1
 800ddee:	701a      	strb	r2, [r3, #0]
 800ddf0:	e006      	b.n	800de00 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0xa8>
 800ddf2:	697b      	ldr	r3, [r7, #20]
 800ddf4:	3301      	adds	r3, #1
 800ddf6:	617b      	str	r3, [r7, #20]
 800ddf8:	697b      	ldr	r3, [r7, #20]
 800ddfa:	2b09      	cmp	r3, #9
 800ddfc:	d9ba      	bls.n	800dd74 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0x1c>
 800ddfe:	e000      	b.n	800de02 <cf0ffb3730b01ad23c777b55262f1b704e362e5b+0xaa>
 800de00:	bf00      	nop
 800de02:	bf00      	nop
 800de04:	3718      	adds	r7, #24
 800de06:	46bd      	mov	sp, r7
 800de08:	bd80      	pop	{r7, pc}
 800de0a:	bf00      	nop
 800de0c:	20000040 	.word	0x20000040

0800de10 <cbc0e88a681a951e559d988b61bbaa7895224382>:
 800de10:	b580      	push	{r7, lr}
 800de12:	b086      	sub	sp, #24
 800de14:	af00      	add	r7, sp, #0
 800de16:	6078      	str	r0, [r7, #4]
 800de18:	4b1b      	ldr	r3, [pc, #108]	; (800de88 <cbc0e88a681a951e559d988b61bbaa7895224382+0x78>)
 800de1a:	681b      	ldr	r3, [r3, #0]
 800de1c:	613b      	str	r3, [r7, #16]
 800de1e:	693b      	ldr	r3, [r7, #16]
 800de20:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800de24:	60fb      	str	r3, [r7, #12]
 800de26:	2300      	movs	r3, #0
 800de28:	617b      	str	r3, [r7, #20]
 800de2a:	e024      	b.n	800de76 <cbc0e88a681a951e559d988b61bbaa7895224382+0x66>
 800de2c:	68fa      	ldr	r2, [r7, #12]
 800de2e:	697b      	ldr	r3, [r7, #20]
 800de30:	212c      	movs	r1, #44	; 0x2c
 800de32:	fb01 f303 	mul.w	r3, r1, r3
 800de36:	4413      	add	r3, r2
 800de38:	781b      	ldrb	r3, [r3, #0]
 800de3a:	2b00      	cmp	r3, #0
 800de3c:	d018      	beq.n	800de70 <cbc0e88a681a951e559d988b61bbaa7895224382+0x60>
 800de3e:	697b      	ldr	r3, [r7, #20]
 800de40:	222c      	movs	r2, #44	; 0x2c
 800de42:	fb02 f303 	mul.w	r3, r2, r3
 800de46:	68fa      	ldr	r2, [r7, #12]
 800de48:	4413      	add	r3, r2
 800de4a:	3302      	adds	r3, #2
 800de4c:	2208      	movs	r2, #8
 800de4e:	6879      	ldr	r1, [r7, #4]
 800de50:	4618      	mov	r0, r3
 800de52:	f01d f927 	bl	802b0a4 <memcmp>
 800de56:	4603      	mov	r3, r0
 800de58:	2b00      	cmp	r3, #0
 800de5a:	d109      	bne.n	800de70 <cbc0e88a681a951e559d988b61bbaa7895224382+0x60>
 800de5c:	68fa      	ldr	r2, [r7, #12]
 800de5e:	697b      	ldr	r3, [r7, #20]
 800de60:	212c      	movs	r1, #44	; 0x2c
 800de62:	fb01 f303 	mul.w	r3, r1, r3
 800de66:	4413      	add	r3, r2
 800de68:	331e      	adds	r3, #30
 800de6a:	2200      	movs	r2, #0
 800de6c:	701a      	strb	r2, [r3, #0]
 800de6e:	e006      	b.n	800de7e <cbc0e88a681a951e559d988b61bbaa7895224382+0x6e>
 800de70:	697b      	ldr	r3, [r7, #20]
 800de72:	3301      	adds	r3, #1
 800de74:	617b      	str	r3, [r7, #20]
 800de76:	697b      	ldr	r3, [r7, #20]
 800de78:	2b09      	cmp	r3, #9
 800de7a:	d9d7      	bls.n	800de2c <cbc0e88a681a951e559d988b61bbaa7895224382+0x1c>
 800de7c:	bf00      	nop
 800de7e:	bf00      	nop
 800de80:	3718      	adds	r7, #24
 800de82:	46bd      	mov	sp, r7
 800de84:	bd80      	pop	{r7, pc}
 800de86:	bf00      	nop
 800de88:	20000040 	.word	0x20000040

0800de8c <5e760e12acdfba35bd9ad67595126b5a8623f934>:
 800de8c:	b580      	push	{r7, lr}
 800de8e:	b088      	sub	sp, #32
 800de90:	af00      	add	r7, sp, #0
 800de92:	1d39      	adds	r1, r7, #4
 800de94:	e881 000c 	stmia.w	r1, {r2, r3}
 800de98:	4603      	mov	r3, r0
 800de9a:	73fb      	strb	r3, [r7, #15]
 800de9c:	4b21      	ldr	r3, [pc, #132]	; (800df24 <5e760e12acdfba35bd9ad67595126b5a8623f934+0x98>)
 800de9e:	681b      	ldr	r3, [r3, #0]
 800dea0:	61bb      	str	r3, [r7, #24]
 800dea2:	69bb      	ldr	r3, [r7, #24]
 800dea4:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800dea8:	617b      	str	r3, [r7, #20]
 800deaa:	2300      	movs	r3, #0
 800deac:	61fb      	str	r3, [r7, #28]
 800deae:	e030      	b.n	800df12 <5e760e12acdfba35bd9ad67595126b5a8623f934+0x86>
 800deb0:	697a      	ldr	r2, [r7, #20]
 800deb2:	69fb      	ldr	r3, [r7, #28]
 800deb4:	212c      	movs	r1, #44	; 0x2c
 800deb6:	fb01 f303 	mul.w	r3, r1, r3
 800deba:	4413      	add	r3, r2
 800debc:	781b      	ldrb	r3, [r3, #0]
 800debe:	2b00      	cmp	r3, #0
 800dec0:	d024      	beq.n	800df0c <5e760e12acdfba35bd9ad67595126b5a8623f934+0x80>
 800dec2:	69fb      	ldr	r3, [r7, #28]
 800dec4:	222c      	movs	r2, #44	; 0x2c
 800dec6:	fb02 f303 	mul.w	r3, r2, r3
 800deca:	697a      	ldr	r2, [r7, #20]
 800decc:	4413      	add	r3, r2
 800dece:	3302      	adds	r3, #2
 800ded0:	2208      	movs	r2, #8
 800ded2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800ded4:	4618      	mov	r0, r3
 800ded6:	f01d f8e5 	bl	802b0a4 <memcmp>
 800deda:	4603      	mov	r3, r0
 800dedc:	2b00      	cmp	r3, #0
 800dede:	d115      	bne.n	800df0c <5e760e12acdfba35bd9ad67595126b5a8623f934+0x80>
 800dee0:	697a      	ldr	r2, [r7, #20]
 800dee2:	69fb      	ldr	r3, [r7, #28]
 800dee4:	212c      	movs	r1, #44	; 0x2c
 800dee6:	fb01 f303 	mul.w	r3, r1, r3
 800deea:	4413      	add	r3, r2
 800deec:	331f      	adds	r3, #31
 800deee:	7bfa      	ldrb	r2, [r7, #15]
 800def0:	701a      	strb	r2, [r3, #0]
 800def2:	697a      	ldr	r2, [r7, #20]
 800def4:	69fb      	ldr	r3, [r7, #28]
 800def6:	212c      	movs	r1, #44	; 0x2c
 800def8:	fb01 f303 	mul.w	r3, r1, r3
 800defc:	4413      	add	r3, r2
 800defe:	3320      	adds	r3, #32
 800df00:	461a      	mov	r2, r3
 800df02:	1d3b      	adds	r3, r7, #4
 800df04:	6818      	ldr	r0, [r3, #0]
 800df06:	6010      	str	r0, [r2, #0]
 800df08:	791b      	ldrb	r3, [r3, #4]
 800df0a:	7113      	strb	r3, [r2, #4]
 800df0c:	69fb      	ldr	r3, [r7, #28]
 800df0e:	3301      	adds	r3, #1
 800df10:	61fb      	str	r3, [r7, #28]
 800df12:	69fb      	ldr	r3, [r7, #28]
 800df14:	2b09      	cmp	r3, #9
 800df16:	d9cb      	bls.n	800deb0 <5e760e12acdfba35bd9ad67595126b5a8623f934+0x24>
 800df18:	bf00      	nop
 800df1a:	bf00      	nop
 800df1c:	3720      	adds	r7, #32
 800df1e:	46bd      	mov	sp, r7
 800df20:	bd80      	pop	{r7, pc}
 800df22:	bf00      	nop
 800df24:	20000040 	.word	0x20000040

0800df28 <e5d2a5998d8277723156e3d7efef427ee7af0c3f>:
 800df28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df2c:	b08b      	sub	sp, #44	; 0x2c
 800df2e:	af00      	add	r7, sp, #0
 800df30:	1d39      	adds	r1, r7, #4
 800df32:	e881 000c 	stmia.w	r1, {r2, r3}
 800df36:	4603      	mov	r3, r0
 800df38:	73fb      	strb	r3, [r7, #15]
 800df3a:	4b36      	ldr	r3, [pc, #216]	; (800e014 <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xec>)
 800df3c:	681b      	ldr	r3, [r3, #0]
 800df3e:	623b      	str	r3, [r7, #32]
 800df40:	6a3b      	ldr	r3, [r7, #32]
 800df42:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800df46:	61fb      	str	r3, [r7, #28]
 800df48:	2300      	movs	r3, #0
 800df4a:	627b      	str	r3, [r7, #36]	; 0x24
 800df4c:	e058      	b.n	800e000 <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd8>
 800df4e:	69fa      	ldr	r2, [r7, #28]
 800df50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800df52:	212c      	movs	r1, #44	; 0x2c
 800df54:	fb01 f303 	mul.w	r3, r1, r3
 800df58:	4413      	add	r3, r2
 800df5a:	781b      	ldrb	r3, [r3, #0]
 800df5c:	2b00      	cmp	r3, #0
 800df5e:	d04c      	beq.n	800dffa <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd2>
 800df60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800df62:	222c      	movs	r2, #44	; 0x2c
 800df64:	fb02 f303 	mul.w	r3, r2, r3
 800df68:	69fa      	ldr	r2, [r7, #28]
 800df6a:	4413      	add	r3, r2
 800df6c:	3302      	adds	r3, #2
 800df6e:	2208      	movs	r2, #8
 800df70:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800df72:	4618      	mov	r0, r3
 800df74:	f01d f896 	bl	802b0a4 <memcmp>
 800df78:	4603      	mov	r3, r0
 800df7a:	2b00      	cmp	r3, #0
 800df7c:	d13d      	bne.n	800dffa <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd2>
 800df7e:	69fa      	ldr	r2, [r7, #28]
 800df80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800df82:	212c      	movs	r1, #44	; 0x2c
 800df84:	fb01 f303 	mul.w	r3, r1, r3
 800df88:	4413      	add	r3, r2
 800df8a:	f103 0120 	add.w	r1, r3, #32
 800df8e:	680a      	ldr	r2, [r1, #0]
 800df90:	7909      	ldrb	r1, [r1, #4]
 800df92:	460b      	mov	r3, r1
 800df94:	4313      	orrs	r3, r2
 800df96:	d030      	beq.n	800dffa <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd2>
 800df98:	6878      	ldr	r0, [r7, #4]
 800df9a:	7a3b      	ldrb	r3, [r7, #8]
 800df9c:	4619      	mov	r1, r3
 800df9e:	69fa      	ldr	r2, [r7, #28]
 800dfa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dfa2:	262c      	movs	r6, #44	; 0x2c
 800dfa4:	fb06 f303 	mul.w	r3, r6, r3
 800dfa8:	4413      	add	r3, r2
 800dfaa:	f103 0620 	add.w	r6, r3, #32
 800dfae:	6832      	ldr	r2, [r6, #0]
 800dfb0:	7936      	ldrb	r6, [r6, #4]
 800dfb2:	4633      	mov	r3, r6
 800dfb4:	1a84      	subs	r4, r0, r2
 800dfb6:	eb61 0503 	sbc.w	r5, r1, r3
 800dfba:	46a0      	mov	r8, r4
 800dfbc:	f005 09ff 	and.w	r9, r5, #255	; 0xff
 800dfc0:	4644      	mov	r4, r8
 800dfc2:	464d      	mov	r5, r9
 800dfc4:	4623      	mov	r3, r4
 800dfc6:	617b      	str	r3, [r7, #20]
 800dfc8:	7e3b      	ldrb	r3, [r7, #24]
 800dfca:	462a      	mov	r2, r5
 800dfcc:	f362 0307 	bfi	r3, r2, #0, #8
 800dfd0:	763b      	strb	r3, [r7, #24]
 800dfd2:	697a      	ldr	r2, [r7, #20]
 800dfd4:	7e39      	ldrb	r1, [r7, #24]
 800dfd6:	460b      	mov	r3, r1
 800dfd8:	2a64      	cmp	r2, #100	; 0x64
 800dfda:	f173 0300 	sbcs.w	r3, r3, #0
 800dfde:	d20c      	bcs.n	800dffa <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd2>
 800dfe0:	69fa      	ldr	r2, [r7, #28]
 800dfe2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dfe4:	212c      	movs	r1, #44	; 0x2c
 800dfe6:	fb01 f303 	mul.w	r3, r1, r3
 800dfea:	4413      	add	r3, r2
 800dfec:	331f      	adds	r3, #31
 800dfee:	781b      	ldrb	r3, [r3, #0]
 800dff0:	7bfa      	ldrb	r2, [r7, #15]
 800dff2:	429a      	cmp	r2, r3
 800dff4:	d101      	bne.n	800dffa <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xd2>
 800dff6:	2301      	movs	r3, #1
 800dff8:	e006      	b.n	800e008 <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0xe0>
 800dffa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dffc:	3301      	adds	r3, #1
 800dffe:	627b      	str	r3, [r7, #36]	; 0x24
 800e000:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e002:	2b09      	cmp	r3, #9
 800e004:	d9a3      	bls.n	800df4e <e5d2a5998d8277723156e3d7efef427ee7af0c3f+0x26>
 800e006:	2300      	movs	r3, #0
 800e008:	4618      	mov	r0, r3
 800e00a:	372c      	adds	r7, #44	; 0x2c
 800e00c:	46bd      	mov	sp, r7
 800e00e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e012:	bf00      	nop
 800e014:	20000040 	.word	0x20000040

0800e018 <b7be15738b198492e50cb8023d171fca112169af>:
 800e018:	b580      	push	{r7, lr}
 800e01a:	b084      	sub	sp, #16
 800e01c:	af00      	add	r7, sp, #0
 800e01e:	4603      	mov	r3, r0
 800e020:	6039      	str	r1, [r7, #0]
 800e022:	71fb      	strb	r3, [r7, #7]
 800e024:	79fb      	ldrb	r3, [r7, #7]
 800e026:	2b09      	cmp	r3, #9
 800e028:	d905      	bls.n	800e036 <b7be15738b198492e50cb8023d171fca112169af+0x1e>
 800e02a:	f240 12a9 	movw	r2, #425	; 0x1a9
 800e02e:	4913      	ldr	r1, [pc, #76]	; (800e07c <b7be15738b198492e50cb8023d171fca112169af+0x64>)
 800e030:	4813      	ldr	r0, [pc, #76]	; (800e080 <b7be15738b198492e50cb8023d171fca112169af+0x68>)
 800e032:	f7f3 fb69 	bl	8001708 <EXPECT_OnAbortHandler>
 800e036:	4b13      	ldr	r3, [pc, #76]	; (800e084 <b7be15738b198492e50cb8023d171fca112169af+0x6c>)
 800e038:	681b      	ldr	r3, [r3, #0]
 800e03a:	60fb      	str	r3, [r7, #12]
 800e03c:	68fb      	ldr	r3, [r7, #12]
 800e03e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e042:	60bb      	str	r3, [r7, #8]
 800e044:	79fb      	ldrb	r3, [r7, #7]
 800e046:	68ba      	ldr	r2, [r7, #8]
 800e048:	212c      	movs	r1, #44	; 0x2c
 800e04a:	fb01 f303 	mul.w	r3, r1, r3
 800e04e:	4413      	add	r3, r2
 800e050:	781b      	ldrb	r3, [r3, #0]
 800e052:	2b00      	cmp	r3, #0
 800e054:	d00d      	beq.n	800e072 <b7be15738b198492e50cb8023d171fca112169af+0x5a>
 800e056:	79fb      	ldrb	r3, [r7, #7]
 800e058:	222c      	movs	r2, #44	; 0x2c
 800e05a:	fb02 f303 	mul.w	r3, r2, r3
 800e05e:	68ba      	ldr	r2, [r7, #8]
 800e060:	4413      	add	r3, r2
 800e062:	3302      	adds	r3, #2
 800e064:	2208      	movs	r2, #8
 800e066:	4619      	mov	r1, r3
 800e068:	6838      	ldr	r0, [r7, #0]
 800e06a:	f01d f8e4 	bl	802b236 <memcpy>
 800e06e:	2301      	movs	r3, #1
 800e070:	e000      	b.n	800e074 <b7be15738b198492e50cb8023d171fca112169af+0x5c>
 800e072:	2300      	movs	r3, #0
 800e074:	4618      	mov	r0, r3
 800e076:	3710      	adds	r7, #16
 800e078:	46bd      	mov	sp, r7
 800e07a:	bd80      	pop	{r7, pc}
 800e07c:	0802e1fc 	.word	0x0802e1fc
 800e080:	0802e278 	.word	0x0802e278
 800e084:	20000040 	.word	0x20000040

0800e088 <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1>:
 800e088:	b580      	push	{r7, lr}
 800e08a:	b084      	sub	sp, #16
 800e08c:	af00      	add	r7, sp, #0
 800e08e:	4603      	mov	r3, r0
 800e090:	71fb      	strb	r3, [r7, #7]
 800e092:	79fb      	ldrb	r3, [r7, #7]
 800e094:	2b09      	cmp	r3, #9
 800e096:	d905      	bls.n	800e0a4 <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1+0x1c>
 800e098:	f240 12b7 	movw	r2, #439	; 0x1b7
 800e09c:	490a      	ldr	r1, [pc, #40]	; (800e0c8 <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1+0x40>)
 800e09e:	480b      	ldr	r0, [pc, #44]	; (800e0cc <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1+0x44>)
 800e0a0:	f7f3 fb32 	bl	8001708 <EXPECT_OnAbortHandler>
 800e0a4:	4b0a      	ldr	r3, [pc, #40]	; (800e0d0 <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1+0x48>)
 800e0a6:	681b      	ldr	r3, [r3, #0]
 800e0a8:	60fb      	str	r3, [r7, #12]
 800e0aa:	68fb      	ldr	r3, [r7, #12]
 800e0ac:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e0b0:	60bb      	str	r3, [r7, #8]
 800e0b2:	79fb      	ldrb	r3, [r7, #7]
 800e0b4:	68ba      	ldr	r2, [r7, #8]
 800e0b6:	212c      	movs	r1, #44	; 0x2c
 800e0b8:	fb01 f303 	mul.w	r3, r1, r3
 800e0bc:	4413      	add	r3, r2
 800e0be:	781b      	ldrb	r3, [r3, #0]
 800e0c0:	4618      	mov	r0, r3
 800e0c2:	3710      	adds	r7, #16
 800e0c4:	46bd      	mov	sp, r7
 800e0c6:	bd80      	pop	{r7, pc}
 800e0c8:	0802e1fc 	.word	0x0802e1fc
 800e0cc:	0802e264 	.word	0x0802e264
 800e0d0:	20000040 	.word	0x20000040

0800e0d4 <a1f453367df5fb7326959ac01438704c8522c5f4>:
 800e0d4:	b480      	push	{r7}
 800e0d6:	b083      	sub	sp, #12
 800e0d8:	af00      	add	r7, sp, #0
 800e0da:	4b08      	ldr	r3, [pc, #32]	; (800e0fc <a1f453367df5fb7326959ac01438704c8522c5f4+0x28>)
 800e0dc:	681b      	ldr	r3, [r3, #0]
 800e0de:	607b      	str	r3, [r7, #4]
 800e0e0:	687b      	ldr	r3, [r7, #4]
 800e0e2:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e0e6:	603b      	str	r3, [r7, #0]
 800e0e8:	683b      	ldr	r3, [r7, #0]
 800e0ea:	220a      	movs	r2, #10
 800e0ec:	f883 21b8 	strb.w	r2, [r3, #440]	; 0x1b8
 800e0f0:	bf00      	nop
 800e0f2:	370c      	adds	r7, #12
 800e0f4:	46bd      	mov	sp, r7
 800e0f6:	bc80      	pop	{r7}
 800e0f8:	4770      	bx	lr
 800e0fa:	bf00      	nop
 800e0fc:	20000040 	.word	0x20000040

0800e100 <bc730516ff4e3e92f0649500c5c053783837fa16>:
 800e100:	b580      	push	{r7, lr}
 800e102:	b084      	sub	sp, #16
 800e104:	af00      	add	r7, sp, #0
 800e106:	4603      	mov	r3, r0
 800e108:	71fb      	strb	r3, [r7, #7]
 800e10a:	4b16      	ldr	r3, [pc, #88]	; (800e164 <bc730516ff4e3e92f0649500c5c053783837fa16+0x64>)
 800e10c:	681b      	ldr	r3, [r3, #0]
 800e10e:	60fb      	str	r3, [r7, #12]
 800e110:	68fb      	ldr	r3, [r7, #12]
 800e112:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e116:	60bb      	str	r3, [r7, #8]
 800e118:	79fb      	ldrb	r3, [r7, #7]
 800e11a:	2b09      	cmp	r3, #9
 800e11c:	d80b      	bhi.n	800e136 <bc730516ff4e3e92f0649500c5c053783837fa16+0x36>
 800e11e:	79fb      	ldrb	r3, [r7, #7]
 800e120:	68ba      	ldr	r2, [r7, #8]
 800e122:	212c      	movs	r1, #44	; 0x2c
 800e124:	fb01 f303 	mul.w	r3, r1, r3
 800e128:	4413      	add	r3, r2
 800e12a:	781b      	ldrb	r3, [r3, #0]
 800e12c:	f083 0301 	eor.w	r3, r3, #1
 800e130:	b2db      	uxtb	r3, r3
 800e132:	2b00      	cmp	r3, #0
 800e134:	d005      	beq.n	800e142 <bc730516ff4e3e92f0649500c5c053783837fa16+0x42>
 800e136:	f44f 72e4 	mov.w	r2, #456	; 0x1c8
 800e13a:	490b      	ldr	r1, [pc, #44]	; (800e168 <bc730516ff4e3e92f0649500c5c053783837fa16+0x68>)
 800e13c:	480b      	ldr	r0, [pc, #44]	; (800e16c <bc730516ff4e3e92f0649500c5c053783837fa16+0x6c>)
 800e13e:	f7f3 fae3 	bl	8001708 <EXPECT_OnAbortHandler>
 800e142:	68bb      	ldr	r3, [r7, #8]
 800e144:	79fa      	ldrb	r2, [r7, #7]
 800e146:	f883 21b8 	strb.w	r2, [r3, #440]	; 0x1b8
 800e14a:	79fb      	ldrb	r3, [r7, #7]
 800e14c:	68ba      	ldr	r2, [r7, #8]
 800e14e:	212c      	movs	r1, #44	; 0x2c
 800e150:	fb01 f303 	mul.w	r3, r1, r3
 800e154:	4413      	add	r3, r2
 800e156:	332a      	adds	r3, #42	; 0x2a
 800e158:	2200      	movs	r2, #0
 800e15a:	701a      	strb	r2, [r3, #0]
 800e15c:	bf00      	nop
 800e15e:	3710      	adds	r7, #16
 800e160:	46bd      	mov	sp, r7
 800e162:	bd80      	pop	{r7, pc}
 800e164:	20000040 	.word	0x20000040
 800e168:	0802e1fc 	.word	0x0802e1fc
 800e16c:	0802e264 	.word	0x0802e264

0800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>:
 800e170:	b580      	push	{r7, lr}
 800e172:	b084      	sub	sp, #16
 800e174:	af00      	add	r7, sp, #0
 800e176:	6078      	str	r0, [r7, #4]
 800e178:	6039      	str	r1, [r7, #0]
 800e17a:	4b12      	ldr	r3, [pc, #72]	; (800e1c4 <aa4ba635fab2a57cfac739bffc367cf6103ea92f+0x54>)
 800e17c:	681b      	ldr	r3, [r3, #0]
 800e17e:	60fb      	str	r3, [r7, #12]
 800e180:	68fb      	ldr	r3, [r7, #12]
 800e182:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e186:	60bb      	str	r3, [r7, #8]
 800e188:	68bb      	ldr	r3, [r7, #8]
 800e18a:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e18e:	2b09      	cmp	r3, #9
 800e190:	d813      	bhi.n	800e1ba <aa4ba635fab2a57cfac739bffc367cf6103ea92f+0x4a>
 800e192:	687b      	ldr	r3, [r7, #4]
 800e194:	2b00      	cmp	r3, #0
 800e196:	d004      	beq.n	800e1a2 <aa4ba635fab2a57cfac739bffc367cf6103ea92f+0x32>
 800e198:	68bb      	ldr	r3, [r7, #8]
 800e19a:	f893 21b8 	ldrb.w	r2, [r3, #440]	; 0x1b8
 800e19e:	687b      	ldr	r3, [r7, #4]
 800e1a0:	701a      	strb	r2, [r3, #0]
 800e1a2:	683b      	ldr	r3, [r7, #0]
 800e1a4:	2b00      	cmp	r3, #0
 800e1a6:	d006      	beq.n	800e1b6 <aa4ba635fab2a57cfac739bffc367cf6103ea92f+0x46>
 800e1a8:	68bb      	ldr	r3, [r7, #8]
 800e1aa:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e1ae:	6839      	ldr	r1, [r7, #0]
 800e1b0:	4618      	mov	r0, r3
 800e1b2:	f7ff ff31 	bl	800e018 <b7be15738b198492e50cb8023d171fca112169af>
 800e1b6:	2301      	movs	r3, #1
 800e1b8:	e000      	b.n	800e1bc <aa4ba635fab2a57cfac739bffc367cf6103ea92f+0x4c>
 800e1ba:	2300      	movs	r3, #0
 800e1bc:	4618      	mov	r0, r3
 800e1be:	3710      	adds	r7, #16
 800e1c0:	46bd      	mov	sp, r7
 800e1c2:	bd80      	pop	{r7, pc}
 800e1c4:	20000040 	.word	0x20000040

0800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>:
 800e1c8:	b580      	push	{r7, lr}
 800e1ca:	b084      	sub	sp, #16
 800e1cc:	af00      	add	r7, sp, #0
 800e1ce:	6078      	str	r0, [r7, #4]
 800e1d0:	f107 0308 	add.w	r3, r7, #8
 800e1d4:	4619      	mov	r1, r3
 800e1d6:	2000      	movs	r0, #0
 800e1d8:	f7ff ffca 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 800e1dc:	4603      	mov	r3, r0
 800e1de:	2b00      	cmp	r3, #0
 800e1e0:	d00d      	beq.n	800e1fe <fdce4034d9451f08e0a61574976ed9ce452b5ba4+0x36>
 800e1e2:	f107 0308 	add.w	r3, r7, #8
 800e1e6:	2208      	movs	r2, #8
 800e1e8:	6879      	ldr	r1, [r7, #4]
 800e1ea:	4618      	mov	r0, r3
 800e1ec:	f01c ff5a 	bl	802b0a4 <memcmp>
 800e1f0:	4603      	mov	r3, r0
 800e1f2:	2b00      	cmp	r3, #0
 800e1f4:	bf0c      	ite	eq
 800e1f6:	2301      	moveq	r3, #1
 800e1f8:	2300      	movne	r3, #0
 800e1fa:	b2db      	uxtb	r3, r3
 800e1fc:	e000      	b.n	800e200 <fdce4034d9451f08e0a61574976ed9ce452b5ba4+0x38>
 800e1fe:	2300      	movs	r3, #0
 800e200:	4618      	mov	r0, r3
 800e202:	3710      	adds	r7, #16
 800e204:	46bd      	mov	sp, r7
 800e206:	bd80      	pop	{r7, pc}

0800e208 <aee20a6aed232d40647d21a3bace71ea0c450c20>:
 800e208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e20c:	b08d      	sub	sp, #52	; 0x34
 800e20e:	af00      	add	r7, sp, #0
 800e210:	f107 0308 	add.w	r3, r7, #8
 800e214:	e883 0003 	stmia.w	r3, {r0, r1}
 800e218:	4b3c      	ldr	r3, [pc, #240]	; (800e30c <aee20a6aed232d40647d21a3bace71ea0c450c20+0x104>)
 800e21a:	681b      	ldr	r3, [r3, #0]
 800e21c:	62bb      	str	r3, [r7, #40]	; 0x28
 800e21e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e220:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e224:	627b      	str	r3, [r7, #36]	; 0x24
 800e226:	2300      	movs	r3, #0
 800e228:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e22a:	e065      	b.n	800e2f8 <aee20a6aed232d40647d21a3bace71ea0c450c20+0xf0>
 800e22c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800e22e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e230:	212c      	movs	r1, #44	; 0x2c
 800e232:	fb01 f303 	mul.w	r3, r1, r3
 800e236:	4413      	add	r3, r2
 800e238:	781b      	ldrb	r3, [r3, #0]
 800e23a:	2b00      	cmp	r3, #0
 800e23c:	d059      	beq.n	800e2f2 <aee20a6aed232d40647d21a3bace71ea0c450c20+0xea>
 800e23e:	68b8      	ldr	r0, [r7, #8]
 800e240:	7b3b      	ldrb	r3, [r7, #12]
 800e242:	4619      	mov	r1, r3
 800e244:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800e246:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e248:	262c      	movs	r6, #44	; 0x2c
 800e24a:	fb06 f303 	mul.w	r3, r6, r3
 800e24e:	4413      	add	r3, r2
 800e250:	f103 0610 	add.w	r6, r3, #16
 800e254:	f8d6 2002 	ldr.w	r2, [r6, #2]
 800e258:	79b6      	ldrb	r6, [r6, #6]
 800e25a:	4633      	mov	r3, r6
 800e25c:	1a84      	subs	r4, r0, r2
 800e25e:	eb61 0503 	sbc.w	r5, r1, r3
 800e262:	46a2      	mov	sl, r4
 800e264:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 800e268:	4654      	mov	r4, sl
 800e26a:	465d      	mov	r5, fp
 800e26c:	4b28      	ldr	r3, [pc, #160]	; (800e310 <aee20a6aed232d40647d21a3bace71ea0c450c20+0x108>)
 800e26e:	691b      	ldr	r3, [r3, #16]
 800e270:	4a28      	ldr	r2, [pc, #160]	; (800e314 <aee20a6aed232d40647d21a3bace71ea0c450c20+0x10c>)
 800e272:	fbb2 f3f3 	udiv	r3, r2, r3
 800e276:	2200      	movs	r2, #0
 800e278:	4698      	mov	r8, r3
 800e27a:	4691      	mov	r9, r2
 800e27c:	f8c7 8000 	str.w	r8, [r7]
 800e280:	f009 03ff 	and.w	r3, r9, #255	; 0xff
 800e284:	607b      	str	r3, [r7, #4]
 800e286:	e9d7 8900 	ldrd	r8, r9, [r7]
 800e28a:	45a0      	cmp	r8, r4
 800e28c:	eb79 0305 	sbcs.w	r3, r9, r5
 800e290:	d22f      	bcs.n	800e2f2 <aee20a6aed232d40647d21a3bace71ea0c450c20+0xea>
 800e292:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800e294:	f000 fbd6 	bl	800ea44 <80ac95a5fac5ddca81a9142111919316b6f3e38c>
 800e298:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e29a:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e29e:	461a      	mov	r2, r3
 800e2a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e2a2:	4293      	cmp	r3, r2
 800e2a4:	d10d      	bne.n	800e2c2 <aee20a6aed232d40647d21a3bace71ea0c450c20+0xba>
 800e2a6:	4a1c      	ldr	r2, [pc, #112]	; (800e318 <aee20a6aed232d40647d21a3bace71ea0c450c20+0x110>)
 800e2a8:	f107 031c 	add.w	r3, r7, #28
 800e2ac:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e2b0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e2b4:	4a19      	ldr	r2, [pc, #100]	; (800e31c <aee20a6aed232d40647d21a3bace71ea0c450c20+0x114>)
 800e2b6:	f107 031c 	add.w	r3, r7, #28
 800e2ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e2be:	f006 ffa3 	bl	8015208 <LOGGER_PrintLine>
 800e2c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800e2c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e2c6:	212c      	movs	r1, #44	; 0x2c
 800e2c8:	fb01 f303 	mul.w	r3, r1, r3
 800e2cc:	4413      	add	r3, r2
 800e2ce:	3318      	adds	r3, #24
 800e2d0:	781b      	ldrb	r3, [r3, #0]
 800e2d2:	2b00      	cmp	r3, #0
 800e2d4:	d00d      	beq.n	800e2f2 <aee20a6aed232d40647d21a3bace71ea0c450c20+0xea>
 800e2d6:	4a12      	ldr	r2, [pc, #72]	; (800e320 <aee20a6aed232d40647d21a3bace71ea0c450c20+0x118>)
 800e2d8:	f107 0314 	add.w	r3, r7, #20
 800e2dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e2e0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e2e4:	4a0f      	ldr	r2, [pc, #60]	; (800e324 <aee20a6aed232d40647d21a3bace71ea0c450c20+0x11c>)
 800e2e6:	f107 0314 	add.w	r3, r7, #20
 800e2ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e2ee:	f006 ff8b 	bl	8015208 <LOGGER_PrintLine>
 800e2f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e2f4:	3301      	adds	r3, #1
 800e2f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e2f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e2fa:	2b09      	cmp	r3, #9
 800e2fc:	d996      	bls.n	800e22c <aee20a6aed232d40647d21a3bace71ea0c450c20+0x24>
 800e2fe:	bf00      	nop
 800e300:	bf00      	nop
 800e302:	3734      	adds	r7, #52	; 0x34
 800e304:	46bd      	mov	sp, r7
 800e306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e30a:	bf00      	nop
 800e30c:	20000040 	.word	0x20000040
 800e310:	080318ac 	.word	0x080318ac
 800e314:	d693a400 	.word	0xd693a400
 800e318:	0802e314 	.word	0x0802e314
 800e31c:	0802e2dc 	.word	0x0802e2dc
 800e320:	0802e31c 	.word	0x0802e31c
 800e324:	0802e2f8 	.word	0x0802e2f8

0800e328 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c>:
 800e328:	b580      	push	{r7, lr}
 800e32a:	b084      	sub	sp, #16
 800e32c:	af00      	add	r7, sp, #0
 800e32e:	4603      	mov	r3, r0
 800e330:	460a      	mov	r2, r1
 800e332:	71fb      	strb	r3, [r7, #7]
 800e334:	4613      	mov	r3, r2
 800e336:	80bb      	strh	r3, [r7, #4]
 800e338:	4b14      	ldr	r3, [pc, #80]	; (800e38c <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c+0x64>)
 800e33a:	681b      	ldr	r3, [r3, #0]
 800e33c:	60fb      	str	r3, [r7, #12]
 800e33e:	68fb      	ldr	r3, [r7, #12]
 800e340:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e344:	60bb      	str	r3, [r7, #8]
 800e346:	79fb      	ldrb	r3, [r7, #7]
 800e348:	2b09      	cmp	r3, #9
 800e34a:	d80b      	bhi.n	800e364 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c+0x3c>
 800e34c:	79fb      	ldrb	r3, [r7, #7]
 800e34e:	68ba      	ldr	r2, [r7, #8]
 800e350:	212c      	movs	r1, #44	; 0x2c
 800e352:	fb01 f303 	mul.w	r3, r1, r3
 800e356:	4413      	add	r3, r2
 800e358:	781b      	ldrb	r3, [r3, #0]
 800e35a:	f083 0301 	eor.w	r3, r3, #1
 800e35e:	b2db      	uxtb	r3, r3
 800e360:	2b00      	cmp	r3, #0
 800e362:	d005      	beq.n	800e370 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c+0x48>
 800e364:	f240 2203 	movw	r2, #515	; 0x203
 800e368:	4909      	ldr	r1, [pc, #36]	; (800e390 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c+0x68>)
 800e36a:	480a      	ldr	r0, [pc, #40]	; (800e394 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c+0x6c>)
 800e36c:	f7f3 f9cc 	bl	8001708 <EXPECT_OnAbortHandler>
 800e370:	79fb      	ldrb	r3, [r7, #7]
 800e372:	68ba      	ldr	r2, [r7, #8]
 800e374:	212c      	movs	r1, #44	; 0x2c
 800e376:	fb01 f303 	mul.w	r3, r1, r3
 800e37a:	4413      	add	r3, r2
 800e37c:	3326      	adds	r3, #38	; 0x26
 800e37e:	88ba      	ldrh	r2, [r7, #4]
 800e380:	801a      	strh	r2, [r3, #0]
 800e382:	bf00      	nop
 800e384:	3710      	adds	r7, #16
 800e386:	46bd      	mov	sp, r7
 800e388:	bd80      	pop	{r7, pc}
 800e38a:	bf00      	nop
 800e38c:	20000040 	.word	0x20000040
 800e390:	0802e1fc 	.word	0x0802e1fc
 800e394:	0802e278 	.word	0x0802e278

0800e398 <284c3d2939813df9bbc67851898b3a4c94b0a9cc>:
 800e398:	b580      	push	{r7, lr}
 800e39a:	b084      	sub	sp, #16
 800e39c:	af00      	add	r7, sp, #0
 800e39e:	4603      	mov	r3, r0
 800e3a0:	71fb      	strb	r3, [r7, #7]
 800e3a2:	4b14      	ldr	r3, [pc, #80]	; (800e3f4 <284c3d2939813df9bbc67851898b3a4c94b0a9cc+0x5c>)
 800e3a4:	681b      	ldr	r3, [r3, #0]
 800e3a6:	60fb      	str	r3, [r7, #12]
 800e3a8:	68fb      	ldr	r3, [r7, #12]
 800e3aa:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e3ae:	60bb      	str	r3, [r7, #8]
 800e3b0:	79fb      	ldrb	r3, [r7, #7]
 800e3b2:	2b09      	cmp	r3, #9
 800e3b4:	d80b      	bhi.n	800e3ce <284c3d2939813df9bbc67851898b3a4c94b0a9cc+0x36>
 800e3b6:	79fb      	ldrb	r3, [r7, #7]
 800e3b8:	68ba      	ldr	r2, [r7, #8]
 800e3ba:	212c      	movs	r1, #44	; 0x2c
 800e3bc:	fb01 f303 	mul.w	r3, r1, r3
 800e3c0:	4413      	add	r3, r2
 800e3c2:	781b      	ldrb	r3, [r3, #0]
 800e3c4:	f083 0301 	eor.w	r3, r3, #1
 800e3c8:	b2db      	uxtb	r3, r3
 800e3ca:	2b00      	cmp	r3, #0
 800e3cc:	d005      	beq.n	800e3da <284c3d2939813df9bbc67851898b3a4c94b0a9cc+0x42>
 800e3ce:	f44f 7203 	mov.w	r2, #524	; 0x20c
 800e3d2:	4909      	ldr	r1, [pc, #36]	; (800e3f8 <284c3d2939813df9bbc67851898b3a4c94b0a9cc+0x60>)
 800e3d4:	4809      	ldr	r0, [pc, #36]	; (800e3fc <284c3d2939813df9bbc67851898b3a4c94b0a9cc+0x64>)
 800e3d6:	f7f3 f997 	bl	8001708 <EXPECT_OnAbortHandler>
 800e3da:	79fb      	ldrb	r3, [r7, #7]
 800e3dc:	68ba      	ldr	r2, [r7, #8]
 800e3de:	212c      	movs	r1, #44	; 0x2c
 800e3e0:	fb01 f303 	mul.w	r3, r1, r3
 800e3e4:	4413      	add	r3, r2
 800e3e6:	3326      	adds	r3, #38	; 0x26
 800e3e8:	881b      	ldrh	r3, [r3, #0]
 800e3ea:	4618      	mov	r0, r3
 800e3ec:	3710      	adds	r7, #16
 800e3ee:	46bd      	mov	sp, r7
 800e3f0:	bd80      	pop	{r7, pc}
 800e3f2:	bf00      	nop
 800e3f4:	20000040 	.word	0x20000040
 800e3f8:	0802e1fc 	.word	0x0802e1fc
 800e3fc:	0802e278 	.word	0x0802e278

0800e400 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a>:
 800e400:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e404:	b093      	sub	sp, #76	; 0x4c
 800e406:	af00      	add	r7, sp, #0
 800e408:	60f8      	str	r0, [r7, #12]
 800e40a:	607a      	str	r2, [r7, #4]
 800e40c:	461a      	mov	r2, r3
 800e40e:	460b      	mov	r3, r1
 800e410:	72fb      	strb	r3, [r7, #11]
 800e412:	4613      	mov	r3, r2
 800e414:	72bb      	strb	r3, [r7, #10]
 800e416:	4bab      	ldr	r3, [pc, #684]	; (800e6c4 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x2c4>)
 800e418:	681b      	ldr	r3, [r3, #0]
 800e41a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e41c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e41e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e422:	63bb      	str	r3, [r7, #56]	; 0x38
 800e424:	68f8      	ldr	r0, [r7, #12]
 800e426:	f000 fad7 	bl	800e9d8 <isNeighbor>
 800e42a:	4603      	mov	r3, r0
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	d001      	beq.n	800e434 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x34>
 800e430:	2301      	movs	r3, #1
 800e432:	e141      	b.n	800e6b8 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x2b8>
 800e434:	2300      	movs	r3, #0
 800e436:	633b      	str	r3, [r7, #48]	; 0x30
 800e438:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800e43c:	f36f 0307 	bfc	r3, #0, #8
 800e440:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 800e444:	230a      	movs	r3, #10
 800e446:	647b      	str	r3, [r7, #68]	; 0x44
 800e448:	2300      	movs	r3, #0
 800e44a:	643b      	str	r3, [r7, #64]	; 0x40
 800e44c:	2300      	movs	r3, #0
 800e44e:	643b      	str	r3, [r7, #64]	; 0x40
 800e450:	e057      	b.n	800e502 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x102>
 800e452:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e454:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e456:	212c      	movs	r1, #44	; 0x2c
 800e458:	fb01 f303 	mul.w	r3, r1, r3
 800e45c:	4413      	add	r3, r2
 800e45e:	781b      	ldrb	r3, [r3, #0]
 800e460:	2b00      	cmp	r3, #0
 800e462:	d052      	beq.n	800e50a <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x10a>
 800e464:	687b      	ldr	r3, [r7, #4]
 800e466:	6818      	ldr	r0, [r3, #0]
 800e468:	791b      	ldrb	r3, [r3, #4]
 800e46a:	4619      	mov	r1, r3
 800e46c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e46e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e470:	262c      	movs	r6, #44	; 0x2c
 800e472:	fb06 f303 	mul.w	r3, r6, r3
 800e476:	4413      	add	r3, r2
 800e478:	f103 0610 	add.w	r6, r3, #16
 800e47c:	f8d6 2002 	ldr.w	r2, [r6, #2]
 800e480:	79b6      	ldrb	r6, [r6, #6]
 800e482:	4633      	mov	r3, r6
 800e484:	1a84      	subs	r4, r0, r2
 800e486:	eb61 0503 	sbc.w	r5, r1, r3
 800e48a:	46a0      	mov	r8, r4
 800e48c:	f005 09ff 	and.w	r9, r5, #255	; 0xff
 800e490:	4644      	mov	r4, r8
 800e492:	464d      	mov	r5, r9
 800e494:	4623      	mov	r3, r4
 800e496:	623b      	str	r3, [r7, #32]
 800e498:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800e49c:	462a      	mov	r2, r5
 800e49e:	f362 0307 	bfi	r3, r2, #0, #8
 800e4a2:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 800e4a6:	6a3a      	ldr	r2, [r7, #32]
 800e4a8:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 800e4ac:	460b      	mov	r3, r1
 800e4ae:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e4b0:	f897 6034 	ldrb.w	r6, [r7, #52]	; 0x34
 800e4b4:	4631      	mov	r1, r6
 800e4b6:	4290      	cmp	r0, r2
 800e4b8:	eb71 0303 	sbcs.w	r3, r1, r3
 800e4bc:	d21e      	bcs.n	800e4fc <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0xfc>
 800e4be:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e4c0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e4c2:	212c      	movs	r1, #44	; 0x2c
 800e4c4:	fb01 f303 	mul.w	r3, r1, r3
 800e4c8:	4413      	add	r3, r2
 800e4ca:	332b      	adds	r3, #43	; 0x2b
 800e4cc:	781b      	ldrb	r3, [r3, #0]
 800e4ce:	f083 0301 	eor.w	r3, r3, #1
 800e4d2:	b2db      	uxtb	r3, r3
 800e4d4:	2b00      	cmp	r3, #0
 800e4d6:	d011      	beq.n	800e4fc <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0xfc>
 800e4d8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e4da:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e4de:	461a      	mov	r2, r3
 800e4e0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e4e2:	4293      	cmp	r3, r2
 800e4e4:	d00a      	beq.n	800e4fc <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0xfc>
 800e4e6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800e4ea:	f107 0220 	add.w	r2, r7, #32
 800e4ee:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e4f2:	6018      	str	r0, [r3, #0]
 800e4f4:	3304      	adds	r3, #4
 800e4f6:	7019      	strb	r1, [r3, #0]
 800e4f8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e4fa:	647b      	str	r3, [r7, #68]	; 0x44
 800e4fc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e4fe:	3301      	adds	r3, #1
 800e500:	643b      	str	r3, [r7, #64]	; 0x40
 800e502:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e504:	2b09      	cmp	r3, #9
 800e506:	d9a4      	bls.n	800e452 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x52>
 800e508:	e000      	b.n	800e50c <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x10c>
 800e50a:	bf00      	nop
 800e50c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e50e:	2b0a      	cmp	r3, #10
 800e510:	d10a      	bne.n	800e528 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x128>
 800e512:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800e514:	2b0a      	cmp	r3, #10
 800e516:	d005      	beq.n	800e524 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x124>
 800e518:	6c78      	ldr	r0, [r7, #68]	; 0x44
 800e51a:	f000 fa93 	bl	800ea44 <80ac95a5fac5ddca81a9142111919316b6f3e38c>
 800e51e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800e520:	643b      	str	r3, [r7, #64]	; 0x40
 800e522:	e001      	b.n	800e528 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x128>
 800e524:	2300      	movs	r3, #0
 800e526:	e0c7      	b.n	800e6b8 <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x2b8>
 800e528:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e52a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e52c:	212c      	movs	r1, #44	; 0x2c
 800e52e:	fb01 f303 	mul.w	r3, r1, r3
 800e532:	4413      	add	r3, r2
 800e534:	2201      	movs	r2, #1
 800e536:	701a      	strb	r2, [r3, #0]
 800e538:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e53a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e53c:	212c      	movs	r1, #44	; 0x2c
 800e53e:	fb01 f303 	mul.w	r3, r1, r3
 800e542:	4413      	add	r3, r2
 800e544:	3301      	adds	r3, #1
 800e546:	f897 206c 	ldrb.w	r2, [r7, #108]	; 0x6c
 800e54a:	701a      	strb	r2, [r3, #0]
 800e54c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e54e:	222c      	movs	r2, #44	; 0x2c
 800e550:	fb02 f303 	mul.w	r3, r2, r3
 800e554:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e556:	4413      	add	r3, r2
 800e558:	3302      	adds	r3, #2
 800e55a:	2208      	movs	r2, #8
 800e55c:	68f9      	ldr	r1, [r7, #12]
 800e55e:	4618      	mov	r0, r3
 800e560:	f01c fe69 	bl	802b236 <memcpy>
 800e564:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e566:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e568:	212c      	movs	r1, #44	; 0x2c
 800e56a:	fb01 f303 	mul.w	r3, r1, r3
 800e56e:	4413      	add	r3, r2
 800e570:	330a      	adds	r3, #10
 800e572:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e576:	801a      	strh	r2, [r3, #0]
 800e578:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e57a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e57c:	212c      	movs	r1, #44	; 0x2c
 800e57e:	fb01 f303 	mul.w	r3, r1, r3
 800e582:	4413      	add	r3, r2
 800e584:	330c      	adds	r3, #12
 800e586:	7afa      	ldrb	r2, [r7, #11]
 800e588:	701a      	strb	r2, [r3, #0]
 800e58a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e58c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e58e:	212c      	movs	r1, #44	; 0x2c
 800e590:	fb01 f303 	mul.w	r3, r1, r3
 800e594:	4413      	add	r3, r2
 800e596:	330e      	adds	r3, #14
 800e598:	2200      	movs	r2, #0
 800e59a:	801a      	strh	r2, [r3, #0]
 800e59c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e59e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e5a0:	212c      	movs	r1, #44	; 0x2c
 800e5a2:	fb01 f303 	mul.w	r3, r1, r3
 800e5a6:	4413      	add	r3, r2
 800e5a8:	3310      	adds	r3, #16
 800e5aa:	2200      	movs	r2, #0
 800e5ac:	801a      	strh	r2, [r3, #0]
 800e5ae:	6879      	ldr	r1, [r7, #4]
 800e5b0:	680a      	ldr	r2, [r1, #0]
 800e5b2:	7909      	ldrb	r1, [r1, #4]
 800e5b4:	460b      	mov	r3, r1
 800e5b6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 800e5b8:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800e5ba:	242c      	movs	r4, #44	; 0x2c
 800e5bc:	fb04 f101 	mul.w	r1, r4, r1
 800e5c0:	4401      	add	r1, r0
 800e5c2:	3110      	adds	r1, #16
 800e5c4:	f8c1 2002 	str.w	r2, [r1, #2]
 800e5c8:	7988      	ldrb	r0, [r1, #6]
 800e5ca:	f363 0007 	bfi	r0, r3, #0, #8
 800e5ce:	7188      	strb	r0, [r1, #6]
 800e5d0:	7abb      	ldrb	r3, [r7, #10]
 800e5d2:	2b00      	cmp	r3, #0
 800e5d4:	d00a      	beq.n	800e5ec <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x1ec>
 800e5d6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e5d8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e5da:	212c      	movs	r1, #44	; 0x2c
 800e5dc:	fb01 f303 	mul.w	r3, r1, r3
 800e5e0:	4413      	add	r3, r2
 800e5e2:	3317      	adds	r3, #23
 800e5e4:	f897 2068 	ldrb.w	r2, [r7, #104]	; 0x68
 800e5e8:	701a      	strb	r2, [r3, #0]
 800e5ea:	e008      	b.n	800e5fe <d5581a03a7943b95f7fabafbaf8177c4d06e5b3a+0x1fe>
 800e5ec:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e5ee:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e5f0:	212c      	movs	r1, #44	; 0x2c
 800e5f2:	fb01 f303 	mul.w	r3, r1, r3
 800e5f6:	4413      	add	r3, r2
 800e5f8:	3317      	adds	r3, #23
 800e5fa:	22ff      	movs	r2, #255	; 0xff
 800e5fc:	701a      	strb	r2, [r3, #0]
 800e5fe:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e600:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e602:	212c      	movs	r1, #44	; 0x2c
 800e604:	fb01 f303 	mul.w	r3, r1, r3
 800e608:	4413      	add	r3, r2
 800e60a:	3318      	adds	r3, #24
 800e60c:	2200      	movs	r2, #0
 800e60e:	701a      	strb	r2, [r3, #0]
 800e610:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e612:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e614:	212c      	movs	r1, #44	; 0x2c
 800e616:	fb01 f303 	mul.w	r3, r1, r3
 800e61a:	4413      	add	r3, r2
 800e61c:	331e      	adds	r3, #30
 800e61e:	2200      	movs	r2, #0
 800e620:	701a      	strb	r2, [r3, #0]
 800e622:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e624:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e626:	212c      	movs	r1, #44	; 0x2c
 800e628:	fb01 f303 	mul.w	r3, r1, r3
 800e62c:	4413      	add	r3, r2
 800e62e:	331f      	adds	r3, #31
 800e630:	2200      	movs	r2, #0
 800e632:	701a      	strb	r2, [r3, #0]
 800e634:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e636:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e638:	212c      	movs	r1, #44	; 0x2c
 800e63a:	fb01 f303 	mul.w	r3, r1, r3
 800e63e:	4413      	add	r3, r2
 800e640:	3320      	adds	r3, #32
 800e642:	2200      	movs	r2, #0
 800e644:	801a      	strh	r2, [r3, #0]
 800e646:	2200      	movs	r2, #0
 800e648:	805a      	strh	r2, [r3, #2]
 800e64a:	791a      	ldrb	r2, [r3, #4]
 800e64c:	f36f 0207 	bfc	r2, #0, #8
 800e650:	711a      	strb	r2, [r3, #4]
 800e652:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e654:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e656:	212c      	movs	r1, #44	; 0x2c
 800e658:	fb01 f303 	mul.w	r3, r1, r3
 800e65c:	4413      	add	r3, r2
 800e65e:	3326      	adds	r3, #38	; 0x26
 800e660:	2200      	movs	r2, #0
 800e662:	801a      	strh	r2, [r3, #0]
 800e664:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e666:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e668:	212c      	movs	r1, #44	; 0x2c
 800e66a:	fb01 f303 	mul.w	r3, r1, r3
 800e66e:	4413      	add	r3, r2
 800e670:	3328      	adds	r3, #40	; 0x28
 800e672:	2200      	movs	r2, #0
 800e674:	801a      	strh	r2, [r3, #0]
 800e676:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e678:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e67a:	212c      	movs	r1, #44	; 0x2c
 800e67c:	fb01 f303 	mul.w	r3, r1, r3
 800e680:	4413      	add	r3, r2
 800e682:	332a      	adds	r3, #42	; 0x2a
 800e684:	2200      	movs	r2, #0
 800e686:	701a      	strb	r2, [r3, #0]
 800e688:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800e68a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e68c:	212c      	movs	r1, #44	; 0x2c
 800e68e:	fb01 f303 	mul.w	r3, r1, r3
 800e692:	4413      	add	r3, r2
 800e694:	332b      	adds	r3, #43	; 0x2b
 800e696:	2200      	movs	r2, #0
 800e698:	701a      	strb	r2, [r3, #0]
 800e69a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e69e:	2208      	movs	r2, #8
 800e6a0:	68f9      	ldr	r1, [r7, #12]
 800e6a2:	4618      	mov	r0, r3
 800e6a4:	f7fe fda6 	bl	800d1f4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800e6a8:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 800e6ac:	f997 300b 	ldrsb.w	r3, [r7, #11]
 800e6b0:	461a      	mov	r2, r3
 800e6b2:	f01a fb47 	bl	8028d44 <ed1ec3dc0708953023c494b9efb045669b41a337>
 800e6b6:	2301      	movs	r3, #1
 800e6b8:	4618      	mov	r0, r3
 800e6ba:	374c      	adds	r7, #76	; 0x4c
 800e6bc:	46bd      	mov	sp, r7
 800e6be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e6c2:	bf00      	nop
 800e6c4:	20000040 	.word	0x20000040

0800e6c8 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5>:
 800e6c8:	b580      	push	{r7, lr}
 800e6ca:	b084      	sub	sp, #16
 800e6cc:	af00      	add	r7, sp, #0
 800e6ce:	4603      	mov	r3, r0
 800e6d0:	71fb      	strb	r3, [r7, #7]
 800e6d2:	79fb      	ldrb	r3, [r7, #7]
 800e6d4:	2b09      	cmp	r3, #9
 800e6d6:	d905      	bls.n	800e6e4 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5+0x1c>
 800e6d8:	f240 226f 	movw	r2, #623	; 0x26f
 800e6dc:	490d      	ldr	r1, [pc, #52]	; (800e714 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5+0x4c>)
 800e6de:	480e      	ldr	r0, [pc, #56]	; (800e718 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5+0x50>)
 800e6e0:	f7f3 f812 	bl	8001708 <EXPECT_OnAbortHandler>
 800e6e4:	4b0d      	ldr	r3, [pc, #52]	; (800e71c <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5+0x54>)
 800e6e6:	681b      	ldr	r3, [r3, #0]
 800e6e8:	60fb      	str	r3, [r7, #12]
 800e6ea:	68fb      	ldr	r3, [r7, #12]
 800e6ec:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e6f0:	60bb      	str	r3, [r7, #8]
 800e6f2:	79fb      	ldrb	r3, [r7, #7]
 800e6f4:	68ba      	ldr	r2, [r7, #8]
 800e6f6:	212c      	movs	r1, #44	; 0x2c
 800e6f8:	fb01 f303 	mul.w	r3, r1, r3
 800e6fc:	4413      	add	r3, r2
 800e6fe:	781b      	ldrb	r3, [r3, #0]
 800e700:	2b00      	cmp	r3, #0
 800e702:	d003      	beq.n	800e70c <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5+0x44>
 800e704:	79fb      	ldrb	r3, [r7, #7]
 800e706:	4618      	mov	r0, r3
 800e708:	f000 f99c 	bl	800ea44 <80ac95a5fac5ddca81a9142111919316b6f3e38c>
 800e70c:	bf00      	nop
 800e70e:	3710      	adds	r7, #16
 800e710:	46bd      	mov	sp, r7
 800e712:	bd80      	pop	{r7, pc}
 800e714:	0802e1fc 	.word	0x0802e1fc
 800e718:	0802e278 	.word	0x0802e278
 800e71c:	20000040 	.word	0x20000040

0800e720 <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37>:
 800e720:	b580      	push	{r7, lr}
 800e722:	b084      	sub	sp, #16
 800e724:	af00      	add	r7, sp, #0
 800e726:	4b12      	ldr	r3, [pc, #72]	; (800e770 <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37+0x50>)
 800e728:	681b      	ldr	r3, [r3, #0]
 800e72a:	60bb      	str	r3, [r7, #8]
 800e72c:	68bb      	ldr	r3, [r7, #8]
 800e72e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e732:	607b      	str	r3, [r7, #4]
 800e734:	f7ff fcce 	bl	800e0d4 <a1f453367df5fb7326959ac01438704c8522c5f4>
 800e738:	2300      	movs	r3, #0
 800e73a:	60fb      	str	r3, [r7, #12]
 800e73c:	e010      	b.n	800e760 <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37+0x40>
 800e73e:	687a      	ldr	r2, [r7, #4]
 800e740:	68fb      	ldr	r3, [r7, #12]
 800e742:	212c      	movs	r1, #44	; 0x2c
 800e744:	fb01 f303 	mul.w	r3, r1, r3
 800e748:	4413      	add	r3, r2
 800e74a:	781b      	ldrb	r3, [r3, #0]
 800e74c:	2b00      	cmp	r3, #0
 800e74e:	d004      	beq.n	800e75a <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37+0x3a>
 800e750:	68fb      	ldr	r3, [r7, #12]
 800e752:	b2db      	uxtb	r3, r3
 800e754:	4618      	mov	r0, r3
 800e756:	f7ff ffb7 	bl	800e6c8 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5>
 800e75a:	68fb      	ldr	r3, [r7, #12]
 800e75c:	3301      	adds	r3, #1
 800e75e:	60fb      	str	r3, [r7, #12]
 800e760:	68fb      	ldr	r3, [r7, #12]
 800e762:	2b09      	cmp	r3, #9
 800e764:	d9eb      	bls.n	800e73e <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37+0x1e>
 800e766:	bf00      	nop
 800e768:	bf00      	nop
 800e76a:	3710      	adds	r7, #16
 800e76c:	46bd      	mov	sp, r7
 800e76e:	bd80      	pop	{r7, pc}
 800e770:	20000040 	.word	0x20000040

0800e774 <52a2c697077f87280125159eda12d46a7578d4b9>:
 800e774:	b580      	push	{r7, lr}
 800e776:	b086      	sub	sp, #24
 800e778:	af00      	add	r7, sp, #0
 800e77a:	6078      	str	r0, [r7, #4]
 800e77c:	6039      	str	r1, [r7, #0]
 800e77e:	4b19      	ldr	r3, [pc, #100]	; (800e7e4 <52a2c697077f87280125159eda12d46a7578d4b9+0x70>)
 800e780:	681b      	ldr	r3, [r3, #0]
 800e782:	613b      	str	r3, [r7, #16]
 800e784:	693b      	ldr	r3, [r7, #16]
 800e786:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e78a:	60fb      	str	r3, [r7, #12]
 800e78c:	2300      	movs	r3, #0
 800e78e:	617b      	str	r3, [r7, #20]
 800e790:	e020      	b.n	800e7d4 <52a2c697077f87280125159eda12d46a7578d4b9+0x60>
 800e792:	68fa      	ldr	r2, [r7, #12]
 800e794:	697b      	ldr	r3, [r7, #20]
 800e796:	212c      	movs	r1, #44	; 0x2c
 800e798:	fb01 f303 	mul.w	r3, r1, r3
 800e79c:	4413      	add	r3, r2
 800e79e:	781b      	ldrb	r3, [r3, #0]
 800e7a0:	2b00      	cmp	r3, #0
 800e7a2:	d014      	beq.n	800e7ce <52a2c697077f87280125159eda12d46a7578d4b9+0x5a>
 800e7a4:	697b      	ldr	r3, [r7, #20]
 800e7a6:	222c      	movs	r2, #44	; 0x2c
 800e7a8:	fb02 f303 	mul.w	r3, r2, r3
 800e7ac:	68fa      	ldr	r2, [r7, #12]
 800e7ae:	4413      	add	r3, r2
 800e7b0:	3302      	adds	r3, #2
 800e7b2:	2208      	movs	r2, #8
 800e7b4:	6879      	ldr	r1, [r7, #4]
 800e7b6:	4618      	mov	r0, r3
 800e7b8:	f01c fc74 	bl	802b0a4 <memcmp>
 800e7bc:	4603      	mov	r3, r0
 800e7be:	2b00      	cmp	r3, #0
 800e7c0:	d105      	bne.n	800e7ce <52a2c697077f87280125159eda12d46a7578d4b9+0x5a>
 800e7c2:	697b      	ldr	r3, [r7, #20]
 800e7c4:	b2da      	uxtb	r2, r3
 800e7c6:	683b      	ldr	r3, [r7, #0]
 800e7c8:	701a      	strb	r2, [r3, #0]
 800e7ca:	2301      	movs	r3, #1
 800e7cc:	e006      	b.n	800e7dc <52a2c697077f87280125159eda12d46a7578d4b9+0x68>
 800e7ce:	697b      	ldr	r3, [r7, #20]
 800e7d0:	3301      	adds	r3, #1
 800e7d2:	617b      	str	r3, [r7, #20]
 800e7d4:	697b      	ldr	r3, [r7, #20]
 800e7d6:	2b09      	cmp	r3, #9
 800e7d8:	d9db      	bls.n	800e792 <52a2c697077f87280125159eda12d46a7578d4b9+0x1e>
 800e7da:	2300      	movs	r3, #0
 800e7dc:	4618      	mov	r0, r3
 800e7de:	3718      	adds	r7, #24
 800e7e0:	46bd      	mov	sp, r7
 800e7e2:	bd80      	pop	{r7, pc}
 800e7e4:	20000040 	.word	0x20000040

0800e7e8 <5cf48605db24e77c7dc4310895ecb68238b276e7>:
 800e7e8:	b580      	push	{r7, lr}
 800e7ea:	b084      	sub	sp, #16
 800e7ec:	af00      	add	r7, sp, #0
 800e7ee:	4603      	mov	r3, r0
 800e7f0:	71fb      	strb	r3, [r7, #7]
 800e7f2:	4b14      	ldr	r3, [pc, #80]	; (800e844 <5cf48605db24e77c7dc4310895ecb68238b276e7+0x5c>)
 800e7f4:	681b      	ldr	r3, [r3, #0]
 800e7f6:	60fb      	str	r3, [r7, #12]
 800e7f8:	68fb      	ldr	r3, [r7, #12]
 800e7fa:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e7fe:	60bb      	str	r3, [r7, #8]
 800e800:	79fb      	ldrb	r3, [r7, #7]
 800e802:	2b09      	cmp	r3, #9
 800e804:	d80b      	bhi.n	800e81e <5cf48605db24e77c7dc4310895ecb68238b276e7+0x36>
 800e806:	79fb      	ldrb	r3, [r7, #7]
 800e808:	68ba      	ldr	r2, [r7, #8]
 800e80a:	212c      	movs	r1, #44	; 0x2c
 800e80c:	fb01 f303 	mul.w	r3, r1, r3
 800e810:	4413      	add	r3, r2
 800e812:	781b      	ldrb	r3, [r3, #0]
 800e814:	f083 0301 	eor.w	r3, r3, #1
 800e818:	b2db      	uxtb	r3, r3
 800e81a:	2b00      	cmp	r3, #0
 800e81c:	d005      	beq.n	800e82a <5cf48605db24e77c7dc4310895ecb68238b276e7+0x42>
 800e81e:	f44f 7225 	mov.w	r2, #660	; 0x294
 800e822:	4909      	ldr	r1, [pc, #36]	; (800e848 <5cf48605db24e77c7dc4310895ecb68238b276e7+0x60>)
 800e824:	4809      	ldr	r0, [pc, #36]	; (800e84c <5cf48605db24e77c7dc4310895ecb68238b276e7+0x64>)
 800e826:	f7f2 ff6f 	bl	8001708 <EXPECT_OnAbortHandler>
 800e82a:	79fb      	ldrb	r3, [r7, #7]
 800e82c:	68ba      	ldr	r2, [r7, #8]
 800e82e:	212c      	movs	r1, #44	; 0x2c
 800e830:	fb01 f303 	mul.w	r3, r1, r3
 800e834:	4413      	add	r3, r2
 800e836:	332b      	adds	r3, #43	; 0x2b
 800e838:	781b      	ldrb	r3, [r3, #0]
 800e83a:	4618      	mov	r0, r3
 800e83c:	3710      	adds	r7, #16
 800e83e:	46bd      	mov	sp, r7
 800e840:	bd80      	pop	{r7, pc}
 800e842:	bf00      	nop
 800e844:	20000040 	.word	0x20000040
 800e848:	0802e1fc 	.word	0x0802e1fc
 800e84c:	0802e264 	.word	0x0802e264

0800e850 <ca04a83f27bd1933b342c8619a464a402518176b>:
 800e850:	b580      	push	{r7, lr}
 800e852:	b084      	sub	sp, #16
 800e854:	af00      	add	r7, sp, #0
 800e856:	4603      	mov	r3, r0
 800e858:	460a      	mov	r2, r1
 800e85a:	71fb      	strb	r3, [r7, #7]
 800e85c:	4613      	mov	r3, r2
 800e85e:	71bb      	strb	r3, [r7, #6]
 800e860:	4b14      	ldr	r3, [pc, #80]	; (800e8b4 <ca04a83f27bd1933b342c8619a464a402518176b+0x64>)
 800e862:	681b      	ldr	r3, [r3, #0]
 800e864:	60fb      	str	r3, [r7, #12]
 800e866:	68fb      	ldr	r3, [r7, #12]
 800e868:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e86c:	60bb      	str	r3, [r7, #8]
 800e86e:	79fb      	ldrb	r3, [r7, #7]
 800e870:	2b09      	cmp	r3, #9
 800e872:	d80b      	bhi.n	800e88c <ca04a83f27bd1933b342c8619a464a402518176b+0x3c>
 800e874:	79fb      	ldrb	r3, [r7, #7]
 800e876:	68ba      	ldr	r2, [r7, #8]
 800e878:	212c      	movs	r1, #44	; 0x2c
 800e87a:	fb01 f303 	mul.w	r3, r1, r3
 800e87e:	4413      	add	r3, r2
 800e880:	781b      	ldrb	r3, [r3, #0]
 800e882:	f083 0301 	eor.w	r3, r3, #1
 800e886:	b2db      	uxtb	r3, r3
 800e888:	2b00      	cmp	r3, #0
 800e88a:	d005      	beq.n	800e898 <ca04a83f27bd1933b342c8619a464a402518176b+0x48>
 800e88c:	f240 229d 	movw	r2, #669	; 0x29d
 800e890:	4909      	ldr	r1, [pc, #36]	; (800e8b8 <ca04a83f27bd1933b342c8619a464a402518176b+0x68>)
 800e892:	480a      	ldr	r0, [pc, #40]	; (800e8bc <ca04a83f27bd1933b342c8619a464a402518176b+0x6c>)
 800e894:	f7f2 ff38 	bl	8001708 <EXPECT_OnAbortHandler>
 800e898:	79fb      	ldrb	r3, [r7, #7]
 800e89a:	68ba      	ldr	r2, [r7, #8]
 800e89c:	212c      	movs	r1, #44	; 0x2c
 800e89e:	fb01 f303 	mul.w	r3, r1, r3
 800e8a2:	4413      	add	r3, r2
 800e8a4:	332b      	adds	r3, #43	; 0x2b
 800e8a6:	79ba      	ldrb	r2, [r7, #6]
 800e8a8:	701a      	strb	r2, [r3, #0]
 800e8aa:	bf00      	nop
 800e8ac:	3710      	adds	r7, #16
 800e8ae:	46bd      	mov	sp, r7
 800e8b0:	bd80      	pop	{r7, pc}
 800e8b2:	bf00      	nop
 800e8b4:	20000040 	.word	0x20000040
 800e8b8:	0802e1fc 	.word	0x0802e1fc
 800e8bc:	0802e278 	.word	0x0802e278

0800e8c0 <963d67651eaddeb307ab0b02134cee28199d533d>:
 800e8c0:	b480      	push	{r7}
 800e8c2:	b085      	sub	sp, #20
 800e8c4:	af00      	add	r7, sp, #0
 800e8c6:	4b17      	ldr	r3, [pc, #92]	; (800e924 <963d67651eaddeb307ab0b02134cee28199d533d+0x64>)
 800e8c8:	681b      	ldr	r3, [r3, #0]
 800e8ca:	607b      	str	r3, [r7, #4]
 800e8cc:	687b      	ldr	r3, [r7, #4]
 800e8ce:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e8d2:	603b      	str	r3, [r7, #0]
 800e8d4:	2300      	movs	r3, #0
 800e8d6:	60fb      	str	r3, [r7, #12]
 800e8d8:	2300      	movs	r3, #0
 800e8da:	60bb      	str	r3, [r7, #8]
 800e8dc:	e018      	b.n	800e910 <963d67651eaddeb307ab0b02134cee28199d533d+0x50>
 800e8de:	683a      	ldr	r2, [r7, #0]
 800e8e0:	68bb      	ldr	r3, [r7, #8]
 800e8e2:	212c      	movs	r1, #44	; 0x2c
 800e8e4:	fb01 f303 	mul.w	r3, r1, r3
 800e8e8:	4413      	add	r3, r2
 800e8ea:	781b      	ldrb	r3, [r3, #0]
 800e8ec:	2b00      	cmp	r3, #0
 800e8ee:	d00c      	beq.n	800e90a <963d67651eaddeb307ab0b02134cee28199d533d+0x4a>
 800e8f0:	683a      	ldr	r2, [r7, #0]
 800e8f2:	68bb      	ldr	r3, [r7, #8]
 800e8f4:	212c      	movs	r1, #44	; 0x2c
 800e8f6:	fb01 f303 	mul.w	r3, r1, r3
 800e8fa:	4413      	add	r3, r2
 800e8fc:	332b      	adds	r3, #43	; 0x2b
 800e8fe:	781b      	ldrb	r3, [r3, #0]
 800e900:	2b00      	cmp	r3, #0
 800e902:	d002      	beq.n	800e90a <963d67651eaddeb307ab0b02134cee28199d533d+0x4a>
 800e904:	68fb      	ldr	r3, [r7, #12]
 800e906:	3301      	adds	r3, #1
 800e908:	60fb      	str	r3, [r7, #12]
 800e90a:	68bb      	ldr	r3, [r7, #8]
 800e90c:	3301      	adds	r3, #1
 800e90e:	60bb      	str	r3, [r7, #8]
 800e910:	68bb      	ldr	r3, [r7, #8]
 800e912:	2b09      	cmp	r3, #9
 800e914:	d9e3      	bls.n	800e8de <963d67651eaddeb307ab0b02134cee28199d533d+0x1e>
 800e916:	68fb      	ldr	r3, [r7, #12]
 800e918:	4618      	mov	r0, r3
 800e91a:	3714      	adds	r7, #20
 800e91c:	46bd      	mov	sp, r7
 800e91e:	bc80      	pop	{r7}
 800e920:	4770      	bx	lr
 800e922:	bf00      	nop
 800e924:	20000040 	.word	0x20000040

0800e928 <a72cb89288ba405a2fc975c124a720574840c109>:
 800e928:	b580      	push	{r7, lr}
 800e92a:	b082      	sub	sp, #8
 800e92c:	af00      	add	r7, sp, #0
 800e92e:	4b10      	ldr	r3, [pc, #64]	; (800e970 <a72cb89288ba405a2fc975c124a720574840c109+0x48>)
 800e930:	681b      	ldr	r3, [r3, #0]
 800e932:	607b      	str	r3, [r7, #4]
 800e934:	687b      	ldr	r3, [r7, #4]
 800e936:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e93a:	603b      	str	r3, [r7, #0]
 800e93c:	683b      	ldr	r3, [r7, #0]
 800e93e:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e942:	2b09      	cmp	r3, #9
 800e944:	d905      	bls.n	800e952 <a72cb89288ba405a2fc975c124a720574840c109+0x2a>
 800e946:	f240 22b3 	movw	r2, #691	; 0x2b3
 800e94a:	490a      	ldr	r1, [pc, #40]	; (800e974 <a72cb89288ba405a2fc975c124a720574840c109+0x4c>)
 800e94c:	480a      	ldr	r0, [pc, #40]	; (800e978 <a72cb89288ba405a2fc975c124a720574840c109+0x50>)
 800e94e:	f7f2 fedb 	bl	8001708 <EXPECT_OnAbortHandler>
 800e952:	683b      	ldr	r3, [r7, #0]
 800e954:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e958:	4619      	mov	r1, r3
 800e95a:	683a      	ldr	r2, [r7, #0]
 800e95c:	232c      	movs	r3, #44	; 0x2c
 800e95e:	fb01 f303 	mul.w	r3, r1, r3
 800e962:	4413      	add	r3, r2
 800e964:	332a      	adds	r3, #42	; 0x2a
 800e966:	781b      	ldrb	r3, [r3, #0]
 800e968:	4618      	mov	r0, r3
 800e96a:	3708      	adds	r7, #8
 800e96c:	46bd      	mov	sp, r7
 800e96e:	bd80      	pop	{r7, pc}
 800e970:	20000040 	.word	0x20000040
 800e974:	0802e1fc 	.word	0x0802e1fc
 800e978:	0802e324 	.word	0x0802e324

0800e97c <201075ddfc12155ac10a81b74045472dd935ece2>:
 800e97c:	b580      	push	{r7, lr}
 800e97e:	b084      	sub	sp, #16
 800e980:	af00      	add	r7, sp, #0
 800e982:	4603      	mov	r3, r0
 800e984:	71fb      	strb	r3, [r7, #7]
 800e986:	4b11      	ldr	r3, [pc, #68]	; (800e9cc <201075ddfc12155ac10a81b74045472dd935ece2+0x50>)
 800e988:	681b      	ldr	r3, [r3, #0]
 800e98a:	60fb      	str	r3, [r7, #12]
 800e98c:	68fb      	ldr	r3, [r7, #12]
 800e98e:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e992:	60bb      	str	r3, [r7, #8]
 800e994:	68bb      	ldr	r3, [r7, #8]
 800e996:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e99a:	2b09      	cmp	r3, #9
 800e99c:	d905      	bls.n	800e9aa <201075ddfc12155ac10a81b74045472dd935ece2+0x2e>
 800e99e:	f240 22bb 	movw	r2, #699	; 0x2bb
 800e9a2:	490b      	ldr	r1, [pc, #44]	; (800e9d0 <201075ddfc12155ac10a81b74045472dd935ece2+0x54>)
 800e9a4:	480b      	ldr	r0, [pc, #44]	; (800e9d4 <201075ddfc12155ac10a81b74045472dd935ece2+0x58>)
 800e9a6:	f7f2 feaf 	bl	8001708 <EXPECT_OnAbortHandler>
 800e9aa:	68bb      	ldr	r3, [r7, #8]
 800e9ac:	f893 31b8 	ldrb.w	r3, [r3, #440]	; 0x1b8
 800e9b0:	4619      	mov	r1, r3
 800e9b2:	68ba      	ldr	r2, [r7, #8]
 800e9b4:	232c      	movs	r3, #44	; 0x2c
 800e9b6:	fb01 f303 	mul.w	r3, r1, r3
 800e9ba:	4413      	add	r3, r2
 800e9bc:	332a      	adds	r3, #42	; 0x2a
 800e9be:	79fa      	ldrb	r2, [r7, #7]
 800e9c0:	701a      	strb	r2, [r3, #0]
 800e9c2:	bf00      	nop
 800e9c4:	3710      	adds	r7, #16
 800e9c6:	46bd      	mov	sp, r7
 800e9c8:	bd80      	pop	{r7, pc}
 800e9ca:	bf00      	nop
 800e9cc:	20000040 	.word	0x20000040
 800e9d0:	0802e1fc 	.word	0x0802e1fc
 800e9d4:	0802e324 	.word	0x0802e324

0800e9d8 <isNeighbor>:
 800e9d8:	b580      	push	{r7, lr}
 800e9da:	b086      	sub	sp, #24
 800e9dc:	af00      	add	r7, sp, #0
 800e9de:	6078      	str	r0, [r7, #4]
 800e9e0:	4b17      	ldr	r3, [pc, #92]	; (800ea40 <isNeighbor+0x68>)
 800e9e2:	681b      	ldr	r3, [r3, #0]
 800e9e4:	613b      	str	r3, [r7, #16]
 800e9e6:	693b      	ldr	r3, [r7, #16]
 800e9e8:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800e9ec:	60fb      	str	r3, [r7, #12]
 800e9ee:	2300      	movs	r3, #0
 800e9f0:	617b      	str	r3, [r7, #20]
 800e9f2:	e01c      	b.n	800ea2e <isNeighbor+0x56>
 800e9f4:	68fa      	ldr	r2, [r7, #12]
 800e9f6:	697b      	ldr	r3, [r7, #20]
 800e9f8:	212c      	movs	r1, #44	; 0x2c
 800e9fa:	fb01 f303 	mul.w	r3, r1, r3
 800e9fe:	4413      	add	r3, r2
 800ea00:	781b      	ldrb	r3, [r3, #0]
 800ea02:	2b00      	cmp	r3, #0
 800ea04:	d010      	beq.n	800ea28 <isNeighbor+0x50>
 800ea06:	697b      	ldr	r3, [r7, #20]
 800ea08:	222c      	movs	r2, #44	; 0x2c
 800ea0a:	fb02 f303 	mul.w	r3, r2, r3
 800ea0e:	68fa      	ldr	r2, [r7, #12]
 800ea10:	4413      	add	r3, r2
 800ea12:	3302      	adds	r3, #2
 800ea14:	2208      	movs	r2, #8
 800ea16:	6879      	ldr	r1, [r7, #4]
 800ea18:	4618      	mov	r0, r3
 800ea1a:	f01c fb43 	bl	802b0a4 <memcmp>
 800ea1e:	4603      	mov	r3, r0
 800ea20:	2b00      	cmp	r3, #0
 800ea22:	d101      	bne.n	800ea28 <isNeighbor+0x50>
 800ea24:	2301      	movs	r3, #1
 800ea26:	e006      	b.n	800ea36 <isNeighbor+0x5e>
 800ea28:	697b      	ldr	r3, [r7, #20]
 800ea2a:	3301      	adds	r3, #1
 800ea2c:	617b      	str	r3, [r7, #20]
 800ea2e:	697b      	ldr	r3, [r7, #20]
 800ea30:	2b09      	cmp	r3, #9
 800ea32:	d9df      	bls.n	800e9f4 <isNeighbor+0x1c>
 800ea34:	2300      	movs	r3, #0
 800ea36:	4618      	mov	r0, r3
 800ea38:	3718      	adds	r7, #24
 800ea3a:	46bd      	mov	sp, r7
 800ea3c:	bd80      	pop	{r7, pc}
 800ea3e:	bf00      	nop
 800ea40:	20000040 	.word	0x20000040

0800ea44 <80ac95a5fac5ddca81a9142111919316b6f3e38c>:
 800ea44:	b580      	push	{r7, lr}
 800ea46:	b086      	sub	sp, #24
 800ea48:	af00      	add	r7, sp, #0
 800ea4a:	6078      	str	r0, [r7, #4]
 800ea4c:	4b17      	ldr	r3, [pc, #92]	; (800eaac <80ac95a5fac5ddca81a9142111919316b6f3e38c+0x68>)
 800ea4e:	681b      	ldr	r3, [r3, #0]
 800ea50:	617b      	str	r3, [r7, #20]
 800ea52:	697b      	ldr	r3, [r7, #20]
 800ea54:	f603 23c8 	addw	r3, r3, #2760	; 0xac8
 800ea58:	613b      	str	r3, [r7, #16]
 800ea5a:	687b      	ldr	r3, [r7, #4]
 800ea5c:	2b09      	cmp	r3, #9
 800ea5e:	d905      	bls.n	800ea6c <80ac95a5fac5ddca81a9142111919316b6f3e38c+0x28>
 800ea60:	f240 22cf 	movw	r2, #719	; 0x2cf
 800ea64:	4912      	ldr	r1, [pc, #72]	; (800eab0 <80ac95a5fac5ddca81a9142111919316b6f3e38c+0x6c>)
 800ea66:	4813      	ldr	r0, [pc, #76]	; (800eab4 <80ac95a5fac5ddca81a9142111919316b6f3e38c+0x70>)
 800ea68:	f7f2 fe4e 	bl	8001708 <EXPECT_OnAbortHandler>
 800ea6c:	687b      	ldr	r3, [r7, #4]
 800ea6e:	222c      	movs	r2, #44	; 0x2c
 800ea70:	fb02 f303 	mul.w	r3, r2, r3
 800ea74:	693a      	ldr	r2, [r7, #16]
 800ea76:	4413      	add	r3, r2
 800ea78:	1c99      	adds	r1, r3, #2
 800ea7a:	f107 0308 	add.w	r3, r7, #8
 800ea7e:	2208      	movs	r2, #8
 800ea80:	4618      	mov	r0, r3
 800ea82:	f7fe fbb7 	bl	800d1f4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800ea86:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ea8a:	4610      	mov	r0, r2
 800ea8c:	4619      	mov	r1, r3
 800ea8e:	f01a f97b 	bl	8028d88 <24da9999ddd48c4f3f286257592f6695f75e30ed>
 800ea92:	693a      	ldr	r2, [r7, #16]
 800ea94:	687b      	ldr	r3, [r7, #4]
 800ea96:	212c      	movs	r1, #44	; 0x2c
 800ea98:	fb01 f303 	mul.w	r3, r1, r3
 800ea9c:	4413      	add	r3, r2
 800ea9e:	2200      	movs	r2, #0
 800eaa0:	701a      	strb	r2, [r3, #0]
 800eaa2:	bf00      	nop
 800eaa4:	3718      	adds	r7, #24
 800eaa6:	46bd      	mov	sp, r7
 800eaa8:	bd80      	pop	{r7, pc}
 800eaaa:	bf00      	nop
 800eaac:	20000040 	.word	0x20000040
 800eab0:	0802e1fc 	.word	0x0802e1fc
 800eab4:	0802e278 	.word	0x0802e278

0800eab8 <ADDR_GetLength>:
 800eab8:	b480      	push	{r7}
 800eaba:	b083      	sub	sp, #12
 800eabc:	af00      	add	r7, sp, #0
 800eabe:	6078      	str	r0, [r7, #4]
 800eac0:	687b      	ldr	r3, [r7, #4]
 800eac2:	781b      	ldrb	r3, [r3, #0]
 800eac4:	3b01      	subs	r3, #1
 800eac6:	2b06      	cmp	r3, #6
 800eac8:	d810      	bhi.n	800eaec <ADDR_GetLength+0x34>
 800eaca:	a201      	add	r2, pc, #4	; (adr r2, 800ead0 <ADDR_GetLength+0x18>)
 800eacc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ead0:	0800eaf1 	.word	0x0800eaf1
 800ead4:	0800eaf5 	.word	0x0800eaf5
 800ead8:	0800eaf9 	.word	0x0800eaf9
 800eadc:	0800eafd 	.word	0x0800eafd
 800eae0:	0800eb01 	.word	0x0800eb01
 800eae4:	0800eb05 	.word	0x0800eb05
 800eae8:	0800eb09 	.word	0x0800eb09
 800eaec:	2300      	movs	r3, #0
 800eaee:	e00c      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eaf0:	2302      	movs	r3, #2
 800eaf2:	e00a      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eaf4:	2308      	movs	r3, #8
 800eaf6:	e008      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eaf8:	2310      	movs	r3, #16
 800eafa:	e006      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eafc:	2302      	movs	r3, #2
 800eafe:	e004      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eb00:	2308      	movs	r3, #8
 800eb02:	e002      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eb04:	2310      	movs	r3, #16
 800eb06:	e000      	b.n	800eb0a <ADDR_GetLength+0x52>
 800eb08:	2302      	movs	r3, #2
 800eb0a:	4618      	mov	r0, r3
 800eb0c:	370c      	adds	r7, #12
 800eb0e:	46bd      	mov	sp, r7
 800eb10:	bc80      	pop	{r7}
 800eb12:	4770      	bx	lr

0800eb14 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 800eb14:	b480      	push	{r7}
 800eb16:	b089      	sub	sp, #36	; 0x24
 800eb18:	af00      	add	r7, sp, #0
 800eb1a:	60f8      	str	r0, [r7, #12]
 800eb1c:	60b9      	str	r1, [r7, #8]
 800eb1e:	607a      	str	r2, [r7, #4]
 800eb20:	68fb      	ldr	r3, [r7, #12]
 800eb22:	61fb      	str	r3, [r7, #28]
 800eb24:	68bb      	ldr	r3, [r7, #8]
 800eb26:	61bb      	str	r3, [r7, #24]
 800eb28:	687b      	ldr	r3, [r7, #4]
 800eb2a:	617b      	str	r3, [r7, #20]
 800eb2c:	2300      	movs	r3, #0
 800eb2e:	613b      	str	r3, [r7, #16]
 800eb30:	e00d      	b.n	800eb4e <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 800eb32:	69ba      	ldr	r2, [r7, #24]
 800eb34:	693b      	ldr	r3, [r7, #16]
 800eb36:	441a      	add	r2, r3
 800eb38:	6979      	ldr	r1, [r7, #20]
 800eb3a:	693b      	ldr	r3, [r7, #16]
 800eb3c:	1acb      	subs	r3, r1, r3
 800eb3e:	3b01      	subs	r3, #1
 800eb40:	69f9      	ldr	r1, [r7, #28]
 800eb42:	440b      	add	r3, r1
 800eb44:	7812      	ldrb	r2, [r2, #0]
 800eb46:	701a      	strb	r2, [r3, #0]
 800eb48:	693b      	ldr	r3, [r7, #16]
 800eb4a:	3301      	adds	r3, #1
 800eb4c:	613b      	str	r3, [r7, #16]
 800eb4e:	697a      	ldr	r2, [r7, #20]
 800eb50:	693b      	ldr	r3, [r7, #16]
 800eb52:	429a      	cmp	r2, r3
 800eb54:	d8ed      	bhi.n	800eb32 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 800eb56:	bf00      	nop
 800eb58:	bf00      	nop
 800eb5a:	3724      	adds	r7, #36	; 0x24
 800eb5c:	46bd      	mov	sp, r7
 800eb5e:	bc80      	pop	{r7}
 800eb60:	4770      	bx	lr
	...

0800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>:
 800eb64:	b5b0      	push	{r4, r5, r7, lr}
 800eb66:	b08a      	sub	sp, #40	; 0x28
 800eb68:	af00      	add	r7, sp, #0
 800eb6a:	6078      	str	r0, [r7, #4]
 800eb6c:	6039      	str	r1, [r7, #0]
 800eb6e:	683b      	ldr	r3, [r7, #0]
 800eb70:	2b00      	cmp	r3, #0
 800eb72:	d104      	bne.n	800eb7e <c830e52416e40936b7f282734abfc3137eeaf4dc+0x1a>
 800eb74:	2219      	movs	r2, #25
 800eb76:	4924      	ldr	r1, [pc, #144]	; (800ec08 <c830e52416e40936b7f282734abfc3137eeaf4dc+0xa4>)
 800eb78:	4824      	ldr	r0, [pc, #144]	; (800ec0c <c830e52416e40936b7f282734abfc3137eeaf4dc+0xa8>)
 800eb7a:	f7f2 fdc5 	bl	8001708 <EXPECT_OnAbortHandler>
 800eb7e:	f107 0314 	add.w	r3, r7, #20
 800eb82:	2200      	movs	r2, #0
 800eb84:	601a      	str	r2, [r3, #0]
 800eb86:	605a      	str	r2, [r3, #4]
 800eb88:	609a      	str	r2, [r3, #8]
 800eb8a:	60da      	str	r2, [r3, #12]
 800eb8c:	741a      	strb	r2, [r3, #16]
 800eb8e:	683b      	ldr	r3, [r7, #0]
 800eb90:	781b      	ldrb	r3, [r3, #0]
 800eb92:	2b03      	cmp	r3, #3
 800eb94:	d118      	bne.n	800ebc8 <c830e52416e40936b7f282734abfc3137eeaf4dc+0x64>
 800eb96:	2302      	movs	r3, #2
 800eb98:	753b      	strb	r3, [r7, #20]
 800eb9a:	6838      	ldr	r0, [r7, #0]
 800eb9c:	f000 fac0 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 800eba0:	4603      	mov	r3, r0
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d006      	beq.n	800ebb4 <c830e52416e40936b7f282734abfc3137eeaf4dc+0x50>
 800eba6:	683b      	ldr	r3, [r7, #0]
 800eba8:	330f      	adds	r3, #15
 800ebaa:	881b      	ldrh	r3, [r3, #0]
 800ebac:	b29b      	uxth	r3, r3
 800ebae:	f8a7 301b 	strh.w	r3, [r7, #27]
 800ebb2:	e01a      	b.n	800ebea <c830e52416e40936b7f282734abfc3137eeaf4dc+0x86>
 800ebb4:	683b      	ldr	r3, [r7, #0]
 800ebb6:	f103 0209 	add.w	r2, r3, #9
 800ebba:	f107 0315 	add.w	r3, r7, #21
 800ebbe:	6811      	ldr	r1, [r2, #0]
 800ebc0:	6852      	ldr	r2, [r2, #4]
 800ebc2:	6019      	str	r1, [r3, #0]
 800ebc4:	605a      	str	r2, [r3, #4]
 800ebc6:	e010      	b.n	800ebea <c830e52416e40936b7f282734abfc3137eeaf4dc+0x86>
 800ebc8:	4a11      	ldr	r2, [pc, #68]	; (800ec10 <c830e52416e40936b7f282734abfc3137eeaf4dc+0xac>)
 800ebca:	f107 030c 	add.w	r3, r7, #12
 800ebce:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ebd2:	e883 0003 	stmia.w	r3, {r0, r1}
 800ebd6:	4a0f      	ldr	r2, [pc, #60]	; (800ec14 <c830e52416e40936b7f282734abfc3137eeaf4dc+0xb0>)
 800ebd8:	f107 030c 	add.w	r3, r7, #12
 800ebdc:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ebe0:	f006 fb12 	bl	8015208 <LOGGER_PrintLine>
 800ebe4:	6838      	ldr	r0, [r7, #0]
 800ebe6:	f000 fbc5 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800ebea:	687b      	ldr	r3, [r7, #4]
 800ebec:	461d      	mov	r5, r3
 800ebee:	f107 0414 	add.w	r4, r7, #20
 800ebf2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ebf4:	6028      	str	r0, [r5, #0]
 800ebf6:	6069      	str	r1, [r5, #4]
 800ebf8:	60aa      	str	r2, [r5, #8]
 800ebfa:	60eb      	str	r3, [r5, #12]
 800ebfc:	7823      	ldrb	r3, [r4, #0]
 800ebfe:	742b      	strb	r3, [r5, #16]
 800ec00:	6878      	ldr	r0, [r7, #4]
 800ec02:	3728      	adds	r7, #40	; 0x28
 800ec04:	46bd      	mov	sp, r7
 800ec06:	bdb0      	pop	{r4, r5, r7, pc}
 800ec08:	0802e338 	.word	0x0802e338
 800ec0c:	0802e3a4 	.word	0x0802e3a4
 800ec10:	0802e3c0 	.word	0x0802e3c0
 800ec14:	0802e3a8 	.word	0x0802e3a8

0800ec18 <2af6233fa7118fd11caf81b4f86d81e84f105465>:
 800ec18:	b5b0      	push	{r4, r5, r7, lr}
 800ec1a:	b08a      	sub	sp, #40	; 0x28
 800ec1c:	af00      	add	r7, sp, #0
 800ec1e:	6078      	str	r0, [r7, #4]
 800ec20:	6039      	str	r1, [r7, #0]
 800ec22:	683b      	ldr	r3, [r7, #0]
 800ec24:	2b00      	cmp	r3, #0
 800ec26:	d104      	bne.n	800ec32 <2af6233fa7118fd11caf81b4f86d81e84f105465+0x1a>
 800ec28:	222c      	movs	r2, #44	; 0x2c
 800ec2a:	4925      	ldr	r1, [pc, #148]	; (800ecc0 <2af6233fa7118fd11caf81b4f86d81e84f105465+0xa8>)
 800ec2c:	4825      	ldr	r0, [pc, #148]	; (800ecc4 <2af6233fa7118fd11caf81b4f86d81e84f105465+0xac>)
 800ec2e:	f7f2 fd6b 	bl	8001708 <EXPECT_OnAbortHandler>
 800ec32:	f107 0314 	add.w	r3, r7, #20
 800ec36:	2200      	movs	r2, #0
 800ec38:	601a      	str	r2, [r3, #0]
 800ec3a:	605a      	str	r2, [r3, #4]
 800ec3c:	609a      	str	r2, [r3, #8]
 800ec3e:	60da      	str	r2, [r3, #12]
 800ec40:	741a      	strb	r2, [r3, #16]
 800ec42:	683b      	ldr	r3, [r7, #0]
 800ec44:	781b      	ldrb	r3, [r3, #0]
 800ec46:	2b03      	cmp	r3, #3
 800ec48:	d119      	bne.n	800ec7e <2af6233fa7118fd11caf81b4f86d81e84f105465+0x66>
 800ec4a:	2305      	movs	r3, #5
 800ec4c:	753b      	strb	r3, [r7, #20]
 800ec4e:	6838      	ldr	r0, [r7, #0]
 800ec50:	f000 fa66 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 800ec54:	4603      	mov	r3, r0
 800ec56:	2b00      	cmp	r3, #0
 800ec58:	d008      	beq.n	800ec6c <2af6233fa7118fd11caf81b4f86d81e84f105465+0x54>
 800ec5a:	683b      	ldr	r3, [r7, #0]
 800ec5c:	1d5a      	adds	r2, r3, #5
 800ec5e:	f107 0315 	add.w	r3, r7, #21
 800ec62:	6811      	ldr	r1, [r2, #0]
 800ec64:	6852      	ldr	r2, [r2, #4]
 800ec66:	6019      	str	r1, [r3, #0]
 800ec68:	605a      	str	r2, [r3, #4]
 800ec6a:	e019      	b.n	800eca0 <2af6233fa7118fd11caf81b4f86d81e84f105465+0x88>
 800ec6c:	683b      	ldr	r3, [r7, #0]
 800ec6e:	1c5a      	adds	r2, r3, #1
 800ec70:	f107 0315 	add.w	r3, r7, #21
 800ec74:	6811      	ldr	r1, [r2, #0]
 800ec76:	6852      	ldr	r2, [r2, #4]
 800ec78:	6019      	str	r1, [r3, #0]
 800ec7a:	605a      	str	r2, [r3, #4]
 800ec7c:	e010      	b.n	800eca0 <2af6233fa7118fd11caf81b4f86d81e84f105465+0x88>
 800ec7e:	4a12      	ldr	r2, [pc, #72]	; (800ecc8 <2af6233fa7118fd11caf81b4f86d81e84f105465+0xb0>)
 800ec80:	f107 030c 	add.w	r3, r7, #12
 800ec84:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ec88:	e883 0003 	stmia.w	r3, {r0, r1}
 800ec8c:	4a0f      	ldr	r2, [pc, #60]	; (800eccc <2af6233fa7118fd11caf81b4f86d81e84f105465+0xb4>)
 800ec8e:	f107 030c 	add.w	r3, r7, #12
 800ec92:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ec96:	f006 fab7 	bl	8015208 <LOGGER_PrintLine>
 800ec9a:	6838      	ldr	r0, [r7, #0]
 800ec9c:	f000 fb6a 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800eca0:	687b      	ldr	r3, [r7, #4]
 800eca2:	461d      	mov	r5, r3
 800eca4:	f107 0414 	add.w	r4, r7, #20
 800eca8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ecaa:	6028      	str	r0, [r5, #0]
 800ecac:	6069      	str	r1, [r5, #4]
 800ecae:	60aa      	str	r2, [r5, #8]
 800ecb0:	60eb      	str	r3, [r5, #12]
 800ecb2:	7823      	ldrb	r3, [r4, #0]
 800ecb4:	742b      	strb	r3, [r5, #16]
 800ecb6:	6878      	ldr	r0, [r7, #4]
 800ecb8:	3728      	adds	r7, #40	; 0x28
 800ecba:	46bd      	mov	sp, r7
 800ecbc:	bdb0      	pop	{r4, r5, r7, pc}
 800ecbe:	bf00      	nop
 800ecc0:	0802e338 	.word	0x0802e338
 800ecc4:	0802e3a4 	.word	0x0802e3a4
 800ecc8:	0802e3c0 	.word	0x0802e3c0
 800eccc:	0802e3a8 	.word	0x0802e3a8

0800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>:
 800ecd0:	b5b0      	push	{r4, r5, r7, lr}
 800ecd2:	b08c      	sub	sp, #48	; 0x30
 800ecd4:	af00      	add	r7, sp, #0
 800ecd6:	60f8      	str	r0, [r7, #12]
 800ecd8:	60b9      	str	r1, [r7, #8]
 800ecda:	607a      	str	r2, [r7, #4]
 800ecdc:	68bb      	ldr	r3, [r7, #8]
 800ecde:	2b00      	cmp	r3, #0
 800ece0:	d104      	bne.n	800ecec <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0x1c>
 800ece2:	2240      	movs	r2, #64	; 0x40
 800ece4:	4929      	ldr	r1, [pc, #164]	; (800ed8c <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xbc>)
 800ece6:	482a      	ldr	r0, [pc, #168]	; (800ed90 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xc0>)
 800ece8:	f7f2 fd0e 	bl	8001708 <EXPECT_OnAbortHandler>
 800ecec:	687b      	ldr	r3, [r7, #4]
 800ecee:	2b00      	cmp	r3, #0
 800ecf0:	d104      	bne.n	800ecfc <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0x2c>
 800ecf2:	2241      	movs	r2, #65	; 0x41
 800ecf4:	4925      	ldr	r1, [pc, #148]	; (800ed8c <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xbc>)
 800ecf6:	4826      	ldr	r0, [pc, #152]	; (800ed90 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xc0>)
 800ecf8:	f7f2 fd06 	bl	8001708 <EXPECT_OnAbortHandler>
 800ecfc:	f107 031c 	add.w	r3, r7, #28
 800ed00:	2200      	movs	r2, #0
 800ed02:	601a      	str	r2, [r3, #0]
 800ed04:	605a      	str	r2, [r3, #4]
 800ed06:	609a      	str	r2, [r3, #8]
 800ed08:	60da      	str	r2, [r3, #12]
 800ed0a:	741a      	strb	r2, [r3, #16]
 800ed0c:	68bb      	ldr	r3, [r7, #8]
 800ed0e:	781b      	ldrb	r3, [r3, #0]
 800ed10:	2b05      	cmp	r3, #5
 800ed12:	d118      	bne.n	800ed46 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0x76>
 800ed14:	687b      	ldr	r3, [r7, #4]
 800ed16:	781b      	ldrb	r3, [r3, #0]
 800ed18:	2b02      	cmp	r3, #2
 800ed1a:	d114      	bne.n	800ed46 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0x76>
 800ed1c:	2303      	movs	r3, #3
 800ed1e:	773b      	strb	r3, [r7, #28]
 800ed20:	68bb      	ldr	r3, [r7, #8]
 800ed22:	1c59      	adds	r1, r3, #1
 800ed24:	f107 031c 	add.w	r3, r7, #28
 800ed28:	3301      	adds	r3, #1
 800ed2a:	2208      	movs	r2, #8
 800ed2c:	4618      	mov	r0, r3
 800ed2e:	f01c fa82 	bl	802b236 <memcpy>
 800ed32:	687b      	ldr	r3, [r7, #4]
 800ed34:	1c59      	adds	r1, r3, #1
 800ed36:	f107 031c 	add.w	r3, r7, #28
 800ed3a:	3309      	adds	r3, #9
 800ed3c:	2208      	movs	r2, #8
 800ed3e:	4618      	mov	r0, r3
 800ed40:	f01c fa79 	bl	802b236 <memcpy>
 800ed44:	e013      	b.n	800ed6e <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0x9e>
 800ed46:	4a13      	ldr	r2, [pc, #76]	; (800ed94 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xc4>)
 800ed48:	f107 0314 	add.w	r3, r7, #20
 800ed4c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ed50:	e883 0003 	stmia.w	r3, {r0, r1}
 800ed54:	4a10      	ldr	r2, [pc, #64]	; (800ed98 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4+0xc8>)
 800ed56:	f107 0314 	add.w	r3, r7, #20
 800ed5a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ed5e:	f006 fa53 	bl	8015208 <LOGGER_PrintLine>
 800ed62:	68b8      	ldr	r0, [r7, #8]
 800ed64:	f000 fb06 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800ed68:	6878      	ldr	r0, [r7, #4]
 800ed6a:	f000 fb03 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800ed6e:	68fb      	ldr	r3, [r7, #12]
 800ed70:	461d      	mov	r5, r3
 800ed72:	f107 041c 	add.w	r4, r7, #28
 800ed76:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed78:	6028      	str	r0, [r5, #0]
 800ed7a:	6069      	str	r1, [r5, #4]
 800ed7c:	60aa      	str	r2, [r5, #8]
 800ed7e:	60eb      	str	r3, [r5, #12]
 800ed80:	7823      	ldrb	r3, [r4, #0]
 800ed82:	742b      	strb	r3, [r5, #16]
 800ed84:	68f8      	ldr	r0, [r7, #12]
 800ed86:	3730      	adds	r7, #48	; 0x30
 800ed88:	46bd      	mov	sp, r7
 800ed8a:	bdb0      	pop	{r4, r5, r7, pc}
 800ed8c:	0802e338 	.word	0x0802e338
 800ed90:	0802e3a4 	.word	0x0802e3a4
 800ed94:	0802e3c0 	.word	0x0802e3c0
 800ed98:	0802e3c8 	.word	0x0802e3c8

0800ed9c <b4e42b26493966bc617e4c89906d69f121a97c96>:
 800ed9c:	b5b0      	push	{r4, r5, r7, lr}
 800ed9e:	b08a      	sub	sp, #40	; 0x28
 800eda0:	af00      	add	r7, sp, #0
 800eda2:	6078      	str	r0, [r7, #4]
 800eda4:	6039      	str	r1, [r7, #0]
 800eda6:	683b      	ldr	r3, [r7, #0]
 800eda8:	2b00      	cmp	r3, #0
 800edaa:	d104      	bne.n	800edb6 <b4e42b26493966bc617e4c89906d69f121a97c96+0x1a>
 800edac:	2252      	movs	r2, #82	; 0x52
 800edae:	491c      	ldr	r1, [pc, #112]	; (800ee20 <b4e42b26493966bc617e4c89906d69f121a97c96+0x84>)
 800edb0:	481c      	ldr	r0, [pc, #112]	; (800ee24 <b4e42b26493966bc617e4c89906d69f121a97c96+0x88>)
 800edb2:	f7f2 fca9 	bl	8001708 <EXPECT_OnAbortHandler>
 800edb6:	f107 0314 	add.w	r3, r7, #20
 800edba:	2200      	movs	r2, #0
 800edbc:	601a      	str	r2, [r3, #0]
 800edbe:	605a      	str	r2, [r3, #4]
 800edc0:	609a      	str	r2, [r3, #8]
 800edc2:	60da      	str	r2, [r3, #12]
 800edc4:	741a      	strb	r2, [r3, #16]
 800edc6:	683b      	ldr	r3, [r7, #0]
 800edc8:	781b      	ldrb	r3, [r3, #0]
 800edca:	2b02      	cmp	r3, #2
 800edcc:	d108      	bne.n	800ede0 <b4e42b26493966bc617e4c89906d69f121a97c96+0x44>
 800edce:	2301      	movs	r3, #1
 800edd0:	753b      	strb	r3, [r7, #20]
 800edd2:	683b      	ldr	r3, [r7, #0]
 800edd4:	79db      	ldrb	r3, [r3, #7]
 800edd6:	757b      	strb	r3, [r7, #21]
 800edd8:	683b      	ldr	r3, [r7, #0]
 800edda:	7a1b      	ldrb	r3, [r3, #8]
 800eddc:	75bb      	strb	r3, [r7, #22]
 800edde:	e010      	b.n	800ee02 <b4e42b26493966bc617e4c89906d69f121a97c96+0x66>
 800ede0:	4a11      	ldr	r2, [pc, #68]	; (800ee28 <b4e42b26493966bc617e4c89906d69f121a97c96+0x8c>)
 800ede2:	f107 030c 	add.w	r3, r7, #12
 800ede6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800edea:	e883 0003 	stmia.w	r3, {r0, r1}
 800edee:	4a0f      	ldr	r2, [pc, #60]	; (800ee2c <b4e42b26493966bc617e4c89906d69f121a97c96+0x90>)
 800edf0:	f107 030c 	add.w	r3, r7, #12
 800edf4:	e893 0003 	ldmia.w	r3, {r0, r1}
 800edf8:	f006 fa06 	bl	8015208 <LOGGER_PrintLine>
 800edfc:	6838      	ldr	r0, [r7, #0]
 800edfe:	f000 fab9 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	461d      	mov	r5, r3
 800ee06:	f107 0414 	add.w	r4, r7, #20
 800ee0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee0c:	6028      	str	r0, [r5, #0]
 800ee0e:	6069      	str	r1, [r5, #4]
 800ee10:	60aa      	str	r2, [r5, #8]
 800ee12:	60eb      	str	r3, [r5, #12]
 800ee14:	7823      	ldrb	r3, [r4, #0]
 800ee16:	742b      	strb	r3, [r5, #16]
 800ee18:	6878      	ldr	r0, [r7, #4]
 800ee1a:	3728      	adds	r7, #40	; 0x28
 800ee1c:	46bd      	mov	sp, r7
 800ee1e:	bdb0      	pop	{r4, r5, r7, pc}
 800ee20:	0802e338 	.word	0x0802e338
 800ee24:	0802e3a4 	.word	0x0802e3a4
 800ee28:	0802e3c0 	.word	0x0802e3c0
 800ee2c:	0802e3e4 	.word	0x0802e3e4

0800ee30 <9730579196d24a2a06a66ac441c59b7f99b57834>:
 800ee30:	b5b0      	push	{r4, r5, r7, lr}
 800ee32:	b08a      	sub	sp, #40	; 0x28
 800ee34:	af00      	add	r7, sp, #0
 800ee36:	6078      	str	r0, [r7, #4]
 800ee38:	6039      	str	r1, [r7, #0]
 800ee3a:	683b      	ldr	r3, [r7, #0]
 800ee3c:	2b00      	cmp	r3, #0
 800ee3e:	d104      	bne.n	800ee4a <9730579196d24a2a06a66ac441c59b7f99b57834+0x1a>
 800ee40:	2262      	movs	r2, #98	; 0x62
 800ee42:	4920      	ldr	r1, [pc, #128]	; (800eec4 <9730579196d24a2a06a66ac441c59b7f99b57834+0x94>)
 800ee44:	4820      	ldr	r0, [pc, #128]	; (800eec8 <9730579196d24a2a06a66ac441c59b7f99b57834+0x98>)
 800ee46:	f7f2 fc5f 	bl	8001708 <EXPECT_OnAbortHandler>
 800ee4a:	f107 0314 	add.w	r3, r7, #20
 800ee4e:	2200      	movs	r2, #0
 800ee50:	601a      	str	r2, [r3, #0]
 800ee52:	605a      	str	r2, [r3, #4]
 800ee54:	609a      	str	r2, [r3, #8]
 800ee56:	60da      	str	r2, [r3, #12]
 800ee58:	741a      	strb	r2, [r3, #16]
 800ee5a:	683b      	ldr	r3, [r7, #0]
 800ee5c:	781b      	ldrb	r3, [r3, #0]
 800ee5e:	2b01      	cmp	r3, #1
 800ee60:	d110      	bne.n	800ee84 <9730579196d24a2a06a66ac441c59b7f99b57834+0x54>
 800ee62:	2302      	movs	r3, #2
 800ee64:	753b      	strb	r3, [r7, #20]
 800ee66:	f107 0314 	add.w	r3, r7, #20
 800ee6a:	3301      	adds	r3, #1
 800ee6c:	2208      	movs	r2, #8
 800ee6e:	2100      	movs	r1, #0
 800ee70:	4618      	mov	r0, r3
 800ee72:	f01c f941 	bl	802b0f8 <memset>
 800ee76:	683b      	ldr	r3, [r7, #0]
 800ee78:	785b      	ldrb	r3, [r3, #1]
 800ee7a:	76fb      	strb	r3, [r7, #27]
 800ee7c:	683b      	ldr	r3, [r7, #0]
 800ee7e:	789b      	ldrb	r3, [r3, #2]
 800ee80:	773b      	strb	r3, [r7, #28]
 800ee82:	e010      	b.n	800eea6 <9730579196d24a2a06a66ac441c59b7f99b57834+0x76>
 800ee84:	4a11      	ldr	r2, [pc, #68]	; (800eecc <9730579196d24a2a06a66ac441c59b7f99b57834+0x9c>)
 800ee86:	f107 030c 	add.w	r3, r7, #12
 800ee8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ee8e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ee92:	4a0f      	ldr	r2, [pc, #60]	; (800eed0 <9730579196d24a2a06a66ac441c59b7f99b57834+0xa0>)
 800ee94:	f107 030c 	add.w	r3, r7, #12
 800ee98:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ee9c:	f006 f9b4 	bl	8015208 <LOGGER_PrintLine>
 800eea0:	6838      	ldr	r0, [r7, #0]
 800eea2:	f000 fa67 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800eea6:	687b      	ldr	r3, [r7, #4]
 800eea8:	461d      	mov	r5, r3
 800eeaa:	f107 0414 	add.w	r4, r7, #20
 800eeae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800eeb0:	6028      	str	r0, [r5, #0]
 800eeb2:	6069      	str	r1, [r5, #4]
 800eeb4:	60aa      	str	r2, [r5, #8]
 800eeb6:	60eb      	str	r3, [r5, #12]
 800eeb8:	7823      	ldrb	r3, [r4, #0]
 800eeba:	742b      	strb	r3, [r5, #16]
 800eebc:	6878      	ldr	r0, [r7, #4]
 800eebe:	3728      	adds	r7, #40	; 0x28
 800eec0:	46bd      	mov	sp, r7
 800eec2:	bdb0      	pop	{r4, r5, r7, pc}
 800eec4:	0802e338 	.word	0x0802e338
 800eec8:	0802e3a4 	.word	0x0802e3a4
 800eecc:	0802e3c0 	.word	0x0802e3c0
 800eed0:	0802e3f4 	.word	0x0802e3f4

0800eed4 <144ed7de545b4a42832ce04a16bf065a50d4ff30>:
 800eed4:	b5b0      	push	{r4, r5, r7, lr}
 800eed6:	b08c      	sub	sp, #48	; 0x30
 800eed8:	af00      	add	r7, sp, #0
 800eeda:	60f8      	str	r0, [r7, #12]
 800eedc:	60b9      	str	r1, [r7, #8]
 800eede:	607a      	str	r2, [r7, #4]
 800eee0:	68bb      	ldr	r3, [r7, #8]
 800eee2:	2b00      	cmp	r3, #0
 800eee4:	d104      	bne.n	800eef0 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x1c>
 800eee6:	2273      	movs	r2, #115	; 0x73
 800eee8:	4942      	ldr	r1, [pc, #264]	; (800eff4 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x120>)
 800eeea:	4843      	ldr	r0, [pc, #268]	; (800eff8 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x124>)
 800eeec:	f7f2 fc0c 	bl	8001708 <EXPECT_OnAbortHandler>
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	2b00      	cmp	r3, #0
 800eef4:	d104      	bne.n	800ef00 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x2c>
 800eef6:	2274      	movs	r2, #116	; 0x74
 800eef8:	493e      	ldr	r1, [pc, #248]	; (800eff4 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x120>)
 800eefa:	483f      	ldr	r0, [pc, #252]	; (800eff8 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x124>)
 800eefc:	f7f2 fc04 	bl	8001708 <EXPECT_OnAbortHandler>
 800ef00:	f107 031c 	add.w	r3, r7, #28
 800ef04:	2200      	movs	r2, #0
 800ef06:	601a      	str	r2, [r3, #0]
 800ef08:	605a      	str	r2, [r3, #4]
 800ef0a:	609a      	str	r2, [r3, #8]
 800ef0c:	60da      	str	r2, [r3, #12]
 800ef0e:	741a      	strb	r2, [r3, #16]
 800ef10:	f107 031c 	add.w	r3, r7, #28
 800ef14:	3301      	adds	r3, #1
 800ef16:	2210      	movs	r2, #16
 800ef18:	2100      	movs	r1, #0
 800ef1a:	4618      	mov	r0, r3
 800ef1c:	f01c f8ec 	bl	802b0f8 <memset>
 800ef20:	68bb      	ldr	r3, [r7, #8]
 800ef22:	781b      	ldrb	r3, [r3, #0]
 800ef24:	2b05      	cmp	r3, #5
 800ef26:	d141      	bne.n	800efac <144ed7de545b4a42832ce04a16bf065a50d4ff30+0xd8>
 800ef28:	687b      	ldr	r3, [r7, #4]
 800ef2a:	781b      	ldrb	r3, [r3, #0]
 800ef2c:	2b07      	cmp	r3, #7
 800ef2e:	d003      	beq.n	800ef38 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x64>
 800ef30:	687b      	ldr	r3, [r7, #4]
 800ef32:	781b      	ldrb	r3, [r3, #0]
 800ef34:	2b01      	cmp	r3, #1
 800ef36:	d139      	bne.n	800efac <144ed7de545b4a42832ce04a16bf065a50d4ff30+0xd8>
 800ef38:	2303      	movs	r3, #3
 800ef3a:	773b      	strb	r3, [r7, #28]
 800ef3c:	23ff      	movs	r3, #255	; 0xff
 800ef3e:	777b      	strb	r3, [r7, #29]
 800ef40:	2305      	movs	r3, #5
 800ef42:	77bb      	strb	r3, [r7, #30]
 800ef44:	2300      	movs	r3, #0
 800ef46:	77fb      	strb	r3, [r7, #31]
 800ef48:	2300      	movs	r3, #0
 800ef4a:	f887 3020 	strb.w	r3, [r7, #32]
 800ef4e:	68bb      	ldr	r3, [r7, #8]
 800ef50:	785b      	ldrb	r3, [r3, #1]
 800ef52:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 800ef56:	68bb      	ldr	r3, [r7, #8]
 800ef58:	789b      	ldrb	r3, [r3, #2]
 800ef5a:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800ef5e:	68bb      	ldr	r3, [r7, #8]
 800ef60:	78db      	ldrb	r3, [r3, #3]
 800ef62:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800ef66:	68bb      	ldr	r3, [r7, #8]
 800ef68:	791b      	ldrb	r3, [r3, #4]
 800ef6a:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 800ef6e:	68bb      	ldr	r3, [r7, #8]
 800ef70:	795b      	ldrb	r3, [r3, #5]
 800ef72:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 800ef76:	68bb      	ldr	r3, [r7, #8]
 800ef78:	799b      	ldrb	r3, [r3, #6]
 800ef7a:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 800ef7e:	68bb      	ldr	r3, [r7, #8]
 800ef80:	79db      	ldrb	r3, [r3, #7]
 800ef82:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800ef86:	68bb      	ldr	r3, [r7, #8]
 800ef88:	7a1b      	ldrb	r3, [r3, #8]
 800ef8a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800ef8e:	2300      	movs	r3, #0
 800ef90:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 800ef94:	2300      	movs	r3, #0
 800ef96:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800ef9a:	687b      	ldr	r3, [r7, #4]
 800ef9c:	785b      	ldrb	r3, [r3, #1]
 800ef9e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800efa2:	687b      	ldr	r3, [r7, #4]
 800efa4:	789b      	ldrb	r3, [r3, #2]
 800efa6:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 800efaa:	e013      	b.n	800efd4 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x100>
 800efac:	4a13      	ldr	r2, [pc, #76]	; (800effc <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x128>)
 800efae:	f107 0314 	add.w	r3, r7, #20
 800efb2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800efb6:	e883 0003 	stmia.w	r3, {r0, r1}
 800efba:	4a11      	ldr	r2, [pc, #68]	; (800f000 <144ed7de545b4a42832ce04a16bf065a50d4ff30+0x12c>)
 800efbc:	f107 0314 	add.w	r3, r7, #20
 800efc0:	e893 0003 	ldmia.w	r3, {r0, r1}
 800efc4:	f006 f920 	bl	8015208 <LOGGER_PrintLine>
 800efc8:	68b8      	ldr	r0, [r7, #8]
 800efca:	f000 f9d3 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800efce:	6878      	ldr	r0, [r7, #4]
 800efd0:	f000 f9d0 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800efd4:	68fb      	ldr	r3, [r7, #12]
 800efd6:	461d      	mov	r5, r3
 800efd8:	f107 041c 	add.w	r4, r7, #28
 800efdc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800efde:	6028      	str	r0, [r5, #0]
 800efe0:	6069      	str	r1, [r5, #4]
 800efe2:	60aa      	str	r2, [r5, #8]
 800efe4:	60eb      	str	r3, [r5, #12]
 800efe6:	7823      	ldrb	r3, [r4, #0]
 800efe8:	742b      	strb	r3, [r5, #16]
 800efea:	68f8      	ldr	r0, [r7, #12]
 800efec:	3730      	adds	r7, #48	; 0x30
 800efee:	46bd      	mov	sp, r7
 800eff0:	bdb0      	pop	{r4, r5, r7, pc}
 800eff2:	bf00      	nop
 800eff4:	0802e338 	.word	0x0802e338
 800eff8:	0802e3a4 	.word	0x0802e3a4
 800effc:	0802e3c0 	.word	0x0802e3c0
 800f000:	0802e404 	.word	0x0802e404

0800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>:
 800f004:	b580      	push	{r7, lr}
 800f006:	b084      	sub	sp, #16
 800f008:	af00      	add	r7, sp, #0
 800f00a:	6078      	str	r0, [r7, #4]
 800f00c:	687b      	ldr	r3, [r7, #4]
 800f00e:	2b00      	cmp	r3, #0
 800f010:	d104      	bne.n	800f01c <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x18>
 800f012:	2294      	movs	r2, #148	; 0x94
 800f014:	491f      	ldr	r1, [pc, #124]	; (800f094 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x90>)
 800f016:	4820      	ldr	r0, [pc, #128]	; (800f098 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x94>)
 800f018:	f7f2 fb76 	bl	8001708 <EXPECT_OnAbortHandler>
 800f01c:	f04f 0200 	mov.w	r2, #0
 800f020:	f04f 0300 	mov.w	r3, #0
 800f024:	e9c7 2302 	strd	r2, r3, [r7, #8]
 800f028:	687b      	ldr	r3, [r7, #4]
 800f02a:	781b      	ldrb	r3, [r3, #0]
 800f02c:	2b03      	cmp	r3, #3
 800f02e:	d01c      	beq.n	800f06a <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x66>
 800f030:	2b03      	cmp	r3, #3
 800f032:	dc24      	bgt.n	800f07e <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x7a>
 800f034:	2b01      	cmp	r3, #1
 800f036:	d002      	beq.n	800f03e <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x3a>
 800f038:	2b02      	cmp	r3, #2
 800f03a:	d00d      	beq.n	800f058 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x54>
 800f03c:	e01f      	b.n	800f07e <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x7a>
 800f03e:	6878      	ldr	r0, [r7, #4]
 800f040:	f000 f86e 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 800f044:	4603      	mov	r3, r0
 800f046:	2b00      	cmp	r3, #0
 800f048:	d01b      	beq.n	800f082 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x7e>
 800f04a:	f04f 32ff 	mov.w	r2, #4294967295
 800f04e:	f04f 33ff 	mov.w	r3, #4294967295
 800f052:	e9c7 2302 	strd	r2, r3, [r7, #8]
 800f056:	e014      	b.n	800f082 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x7e>
 800f058:	687b      	ldr	r3, [r7, #4]
 800f05a:	1c59      	adds	r1, r3, #1
 800f05c:	f107 0308 	add.w	r3, r7, #8
 800f060:	2208      	movs	r2, #8
 800f062:	4618      	mov	r0, r3
 800f064:	f7ff fd56 	bl	800eb14 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800f068:	e00c      	b.n	800f084 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x80>
 800f06a:	687b      	ldr	r3, [r7, #4]
 800f06c:	f103 0109 	add.w	r1, r3, #9
 800f070:	f107 0308 	add.w	r3, r7, #8
 800f074:	2208      	movs	r2, #8
 800f076:	4618      	mov	r0, r3
 800f078:	f7ff fd4c 	bl	800eb14 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 800f07c:	e002      	b.n	800f084 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x80>
 800f07e:	bf00      	nop
 800f080:	e000      	b.n	800f084 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b+0x80>
 800f082:	bf00      	nop
 800f084:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800f088:	4610      	mov	r0, r2
 800f08a:	4619      	mov	r1, r3
 800f08c:	3710      	adds	r7, #16
 800f08e:	46bd      	mov	sp, r7
 800f090:	bd80      	pop	{r7, pc}
 800f092:	bf00      	nop
 800f094:	0802e338 	.word	0x0802e338
 800f098:	0802e3a4 	.word	0x0802e3a4

0800f09c <f26cfbfa45ddc428fa93a21aa284ea921322a858>:
 800f09c:	b580      	push	{r7, lr}
 800f09e:	b086      	sub	sp, #24
 800f0a0:	af00      	add	r7, sp, #0
 800f0a2:	6078      	str	r0, [r7, #4]
 800f0a4:	687b      	ldr	r3, [r7, #4]
 800f0a6:	2b00      	cmp	r3, #0
 800f0a8:	d104      	bne.n	800f0b4 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x18>
 800f0aa:	22a6      	movs	r2, #166	; 0xa6
 800f0ac:	4918      	ldr	r1, [pc, #96]	; (800f110 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x74>)
 800f0ae:	4819      	ldr	r0, [pc, #100]	; (800f114 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x78>)
 800f0b0:	f7f2 fb2a 	bl	8001708 <EXPECT_OnAbortHandler>
 800f0b4:	2300      	movs	r3, #0
 800f0b6:	82fb      	strh	r3, [r7, #22]
 800f0b8:	687b      	ldr	r3, [r7, #4]
 800f0ba:	781b      	ldrb	r3, [r3, #0]
 800f0bc:	2b03      	cmp	r3, #3
 800f0be:	d110      	bne.n	800f0e2 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x46>
 800f0c0:	6878      	ldr	r0, [r7, #4]
 800f0c2:	f000 f82d 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 800f0c6:	4603      	mov	r3, r0
 800f0c8:	2b00      	cmp	r3, #0
 800f0ca:	d00a      	beq.n	800f0e2 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x46>
 800f0cc:	687b      	ldr	r3, [r7, #4]
 800f0ce:	7bdb      	ldrb	r3, [r3, #15]
 800f0d0:	021b      	lsls	r3, r3, #8
 800f0d2:	b21a      	sxth	r2, r3
 800f0d4:	687b      	ldr	r3, [r7, #4]
 800f0d6:	7c1b      	ldrb	r3, [r3, #16]
 800f0d8:	b21b      	sxth	r3, r3
 800f0da:	4313      	orrs	r3, r2
 800f0dc:	b21b      	sxth	r3, r3
 800f0de:	82fb      	strh	r3, [r7, #22]
 800f0e0:	e010      	b.n	800f104 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x68>
 800f0e2:	4a0d      	ldr	r2, [pc, #52]	; (800f118 <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x7c>)
 800f0e4:	f107 030c 	add.w	r3, r7, #12
 800f0e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f0ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800f0f0:	4a0a      	ldr	r2, [pc, #40]	; (800f11c <f26cfbfa45ddc428fa93a21aa284ea921322a858+0x80>)
 800f0f2:	f107 030c 	add.w	r3, r7, #12
 800f0f6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f0fa:	f006 f885 	bl	8015208 <LOGGER_PrintLine>
 800f0fe:	6878      	ldr	r0, [r7, #4]
 800f100:	f000 f938 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 800f104:	8afb      	ldrh	r3, [r7, #22]
 800f106:	4618      	mov	r0, r3
 800f108:	3718      	adds	r7, #24
 800f10a:	46bd      	mov	sp, r7
 800f10c:	bd80      	pop	{r7, pc}
 800f10e:	bf00      	nop
 800f110:	0802e338 	.word	0x0802e338
 800f114:	0802e3a4 	.word	0x0802e3a4
 800f118:	0802e3c0 	.word	0x0802e3c0
 800f11c:	0802e3a8 	.word	0x0802e3a8

0800f120 <2de8c5d05f60c15cf061eba17324436038284da6>:
 800f120:	b580      	push	{r7, lr}
 800f122:	b084      	sub	sp, #16
 800f124:	af00      	add	r7, sp, #0
 800f126:	6078      	str	r0, [r7, #4]
 800f128:	687b      	ldr	r3, [r7, #4]
 800f12a:	2b00      	cmp	r3, #0
 800f12c:	d104      	bne.n	800f138 <2de8c5d05f60c15cf061eba17324436038284da6+0x18>
 800f12e:	22b2      	movs	r2, #178	; 0xb2
 800f130:	491d      	ldr	r1, [pc, #116]	; (800f1a8 <2de8c5d05f60c15cf061eba17324436038284da6+0x88>)
 800f132:	481e      	ldr	r0, [pc, #120]	; (800f1ac <2de8c5d05f60c15cf061eba17324436038284da6+0x8c>)
 800f134:	f7f2 fae8 	bl	8001708 <EXPECT_OnAbortHandler>
 800f138:	687b      	ldr	r3, [r7, #4]
 800f13a:	781b      	ldrb	r3, [r3, #0]
 800f13c:	2b07      	cmp	r3, #7
 800f13e:	dc2c      	bgt.n	800f19a <2de8c5d05f60c15cf061eba17324436038284da6+0x7a>
 800f140:	2b06      	cmp	r3, #6
 800f142:	da07      	bge.n	800f154 <2de8c5d05f60c15cf061eba17324436038284da6+0x34>
 800f144:	2b02      	cmp	r3, #2
 800f146:	dc02      	bgt.n	800f14e <2de8c5d05f60c15cf061eba17324436038284da6+0x2e>
 800f148:	2b00      	cmp	r3, #0
 800f14a:	dc0d      	bgt.n	800f168 <2de8c5d05f60c15cf061eba17324436038284da6+0x48>
 800f14c:	e025      	b.n	800f19a <2de8c5d05f60c15cf061eba17324436038284da6+0x7a>
 800f14e:	2b03      	cmp	r3, #3
 800f150:	d002      	beq.n	800f158 <2de8c5d05f60c15cf061eba17324436038284da6+0x38>
 800f152:	e022      	b.n	800f19a <2de8c5d05f60c15cf061eba17324436038284da6+0x7a>
 800f154:	2301      	movs	r3, #1
 800f156:	e022      	b.n	800f19e <2de8c5d05f60c15cf061eba17324436038284da6+0x7e>
 800f158:	687b      	ldr	r3, [r7, #4]
 800f15a:	785b      	ldrb	r3, [r3, #1]
 800f15c:	2bff      	cmp	r3, #255	; 0xff
 800f15e:	bf0c      	ite	eq
 800f160:	2301      	moveq	r3, #1
 800f162:	2300      	movne	r3, #0
 800f164:	b2db      	uxtb	r3, r3
 800f166:	e01a      	b.n	800f19e <2de8c5d05f60c15cf061eba17324436038284da6+0x7e>
 800f168:	6878      	ldr	r0, [r7, #4]
 800f16a:	f7ff fca5 	bl	800eab8 <ADDR_GetLength>
 800f16e:	60b8      	str	r0, [r7, #8]
 800f170:	2300      	movs	r3, #0
 800f172:	60fb      	str	r3, [r7, #12]
 800f174:	e00b      	b.n	800f18e <2de8c5d05f60c15cf061eba17324436038284da6+0x6e>
 800f176:	687a      	ldr	r2, [r7, #4]
 800f178:	68fb      	ldr	r3, [r7, #12]
 800f17a:	4413      	add	r3, r2
 800f17c:	3301      	adds	r3, #1
 800f17e:	781b      	ldrb	r3, [r3, #0]
 800f180:	2bff      	cmp	r3, #255	; 0xff
 800f182:	d001      	beq.n	800f188 <2de8c5d05f60c15cf061eba17324436038284da6+0x68>
 800f184:	2300      	movs	r3, #0
 800f186:	e00a      	b.n	800f19e <2de8c5d05f60c15cf061eba17324436038284da6+0x7e>
 800f188:	68fb      	ldr	r3, [r7, #12]
 800f18a:	3301      	adds	r3, #1
 800f18c:	60fb      	str	r3, [r7, #12]
 800f18e:	68fa      	ldr	r2, [r7, #12]
 800f190:	68bb      	ldr	r3, [r7, #8]
 800f192:	429a      	cmp	r2, r3
 800f194:	d1ef      	bne.n	800f176 <2de8c5d05f60c15cf061eba17324436038284da6+0x56>
 800f196:	2301      	movs	r3, #1
 800f198:	e001      	b.n	800f19e <2de8c5d05f60c15cf061eba17324436038284da6+0x7e>
 800f19a:	bf00      	nop
 800f19c:	2300      	movs	r3, #0
 800f19e:	4618      	mov	r0, r3
 800f1a0:	3710      	adds	r7, #16
 800f1a2:	46bd      	mov	sp, r7
 800f1a4:	bd80      	pop	{r7, pc}
 800f1a6:	bf00      	nop
 800f1a8:	0802e338 	.word	0x0802e338
 800f1ac:	0802e3a4 	.word	0x0802e3a4

0800f1b0 <271b2dbe31e411eac579adb987eb6de74d66e6b2>:
 800f1b0:	b480      	push	{r7}
 800f1b2:	b083      	sub	sp, #12
 800f1b4:	af00      	add	r7, sp, #0
 800f1b6:	6078      	str	r0, [r7, #4]
 800f1b8:	687b      	ldr	r3, [r7, #4]
 800f1ba:	781b      	ldrb	r3, [r3, #0]
 800f1bc:	2b03      	cmp	r3, #3
 800f1be:	d141      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1c0:	687b      	ldr	r3, [r7, #4]
 800f1c2:	785b      	ldrb	r3, [r3, #1]
 800f1c4:	2bff      	cmp	r3, #255	; 0xff
 800f1c6:	d13d      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1c8:	687b      	ldr	r3, [r7, #4]
 800f1ca:	789b      	ldrb	r3, [r3, #2]
 800f1cc:	2b02      	cmp	r3, #2
 800f1ce:	d139      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1d0:	687b      	ldr	r3, [r7, #4]
 800f1d2:	78db      	ldrb	r3, [r3, #3]
 800f1d4:	2b00      	cmp	r3, #0
 800f1d6:	d135      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1d8:	687b      	ldr	r3, [r7, #4]
 800f1da:	791b      	ldrb	r3, [r3, #4]
 800f1dc:	2b00      	cmp	r3, #0
 800f1de:	d131      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1e0:	687b      	ldr	r3, [r7, #4]
 800f1e2:	795b      	ldrb	r3, [r3, #5]
 800f1e4:	2b00      	cmp	r3, #0
 800f1e6:	d12d      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1e8:	687b      	ldr	r3, [r7, #4]
 800f1ea:	799b      	ldrb	r3, [r3, #6]
 800f1ec:	2b00      	cmp	r3, #0
 800f1ee:	d129      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1f0:	687b      	ldr	r3, [r7, #4]
 800f1f2:	79db      	ldrb	r3, [r3, #7]
 800f1f4:	2b00      	cmp	r3, #0
 800f1f6:	d125      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f1f8:	687b      	ldr	r3, [r7, #4]
 800f1fa:	7a1b      	ldrb	r3, [r3, #8]
 800f1fc:	2b00      	cmp	r3, #0
 800f1fe:	d121      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f200:	687b      	ldr	r3, [r7, #4]
 800f202:	7a5b      	ldrb	r3, [r3, #9]
 800f204:	2b00      	cmp	r3, #0
 800f206:	d11d      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f208:	687b      	ldr	r3, [r7, #4]
 800f20a:	7a9b      	ldrb	r3, [r3, #10]
 800f20c:	2b00      	cmp	r3, #0
 800f20e:	d119      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f210:	687b      	ldr	r3, [r7, #4]
 800f212:	7adb      	ldrb	r3, [r3, #11]
 800f214:	2b00      	cmp	r3, #0
 800f216:	d115      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f218:	687b      	ldr	r3, [r7, #4]
 800f21a:	7b1b      	ldrb	r3, [r3, #12]
 800f21c:	2b00      	cmp	r3, #0
 800f21e:	d111      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f220:	687b      	ldr	r3, [r7, #4]
 800f222:	7b5b      	ldrb	r3, [r3, #13]
 800f224:	2b00      	cmp	r3, #0
 800f226:	d10d      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f228:	687b      	ldr	r3, [r7, #4]
 800f22a:	7b9b      	ldrb	r3, [r3, #14]
 800f22c:	2b00      	cmp	r3, #0
 800f22e:	d109      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f230:	687b      	ldr	r3, [r7, #4]
 800f232:	7bdb      	ldrb	r3, [r3, #15]
 800f234:	2b00      	cmp	r3, #0
 800f236:	d105      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f238:	687b      	ldr	r3, [r7, #4]
 800f23a:	7c1b      	ldrb	r3, [r3, #16]
 800f23c:	2b1a      	cmp	r3, #26
 800f23e:	d101      	bne.n	800f244 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x94>
 800f240:	2301      	movs	r3, #1
 800f242:	e000      	b.n	800f246 <271b2dbe31e411eac579adb987eb6de74d66e6b2+0x96>
 800f244:	2300      	movs	r3, #0
 800f246:	4618      	mov	r0, r3
 800f248:	370c      	adds	r7, #12
 800f24a:	46bd      	mov	sp, r7
 800f24c:	bc80      	pop	{r7}
 800f24e:	4770      	bx	lr

0800f250 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7>:
 800f250:	b480      	push	{r7}
 800f252:	b083      	sub	sp, #12
 800f254:	af00      	add	r7, sp, #0
 800f256:	6078      	str	r0, [r7, #4]
 800f258:	687b      	ldr	r3, [r7, #4]
 800f25a:	781b      	ldrb	r3, [r3, #0]
 800f25c:	2b03      	cmp	r3, #3
 800f25e:	d141      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f260:	687b      	ldr	r3, [r7, #4]
 800f262:	785b      	ldrb	r3, [r3, #1]
 800f264:	2bff      	cmp	r3, #255	; 0xff
 800f266:	d13d      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f268:	687b      	ldr	r3, [r7, #4]
 800f26a:	789b      	ldrb	r3, [r3, #2]
 800f26c:	2b02      	cmp	r3, #2
 800f26e:	d139      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f270:	687b      	ldr	r3, [r7, #4]
 800f272:	78db      	ldrb	r3, [r3, #3]
 800f274:	2b00      	cmp	r3, #0
 800f276:	d135      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f278:	687b      	ldr	r3, [r7, #4]
 800f27a:	791b      	ldrb	r3, [r3, #4]
 800f27c:	2b00      	cmp	r3, #0
 800f27e:	d131      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f280:	687b      	ldr	r3, [r7, #4]
 800f282:	795b      	ldrb	r3, [r3, #5]
 800f284:	2b00      	cmp	r3, #0
 800f286:	d12d      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f288:	687b      	ldr	r3, [r7, #4]
 800f28a:	799b      	ldrb	r3, [r3, #6]
 800f28c:	2b00      	cmp	r3, #0
 800f28e:	d129      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f290:	687b      	ldr	r3, [r7, #4]
 800f292:	79db      	ldrb	r3, [r3, #7]
 800f294:	2b00      	cmp	r3, #0
 800f296:	d125      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f298:	687b      	ldr	r3, [r7, #4]
 800f29a:	7a1b      	ldrb	r3, [r3, #8]
 800f29c:	2b00      	cmp	r3, #0
 800f29e:	d121      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2a0:	687b      	ldr	r3, [r7, #4]
 800f2a2:	7a5b      	ldrb	r3, [r3, #9]
 800f2a4:	2b00      	cmp	r3, #0
 800f2a6:	d11d      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2a8:	687b      	ldr	r3, [r7, #4]
 800f2aa:	7a9b      	ldrb	r3, [r3, #10]
 800f2ac:	2b00      	cmp	r3, #0
 800f2ae:	d119      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2b0:	687b      	ldr	r3, [r7, #4]
 800f2b2:	7adb      	ldrb	r3, [r3, #11]
 800f2b4:	2b00      	cmp	r3, #0
 800f2b6:	d115      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2b8:	687b      	ldr	r3, [r7, #4]
 800f2ba:	7b1b      	ldrb	r3, [r3, #12]
 800f2bc:	2b00      	cmp	r3, #0
 800f2be:	d111      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	7b5b      	ldrb	r3, [r3, #13]
 800f2c4:	2b00      	cmp	r3, #0
 800f2c6:	d10d      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2c8:	687b      	ldr	r3, [r7, #4]
 800f2ca:	7b9b      	ldrb	r3, [r3, #14]
 800f2cc:	2b00      	cmp	r3, #0
 800f2ce:	d109      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2d0:	687b      	ldr	r3, [r7, #4]
 800f2d2:	7bdb      	ldrb	r3, [r3, #15]
 800f2d4:	2b00      	cmp	r3, #0
 800f2d6:	d105      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2d8:	687b      	ldr	r3, [r7, #4]
 800f2da:	7c1b      	ldrb	r3, [r3, #16]
 800f2dc:	2b01      	cmp	r3, #1
 800f2de:	d101      	bne.n	800f2e4 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x94>
 800f2e0:	2301      	movs	r3, #1
 800f2e2:	e000      	b.n	800f2e6 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7+0x96>
 800f2e4:	2300      	movs	r3, #0
 800f2e6:	4618      	mov	r0, r3
 800f2e8:	370c      	adds	r7, #12
 800f2ea:	46bd      	mov	sp, r7
 800f2ec:	bc80      	pop	{r7}
 800f2ee:	4770      	bx	lr

0800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>:
 800f2f0:	b590      	push	{r4, r7, lr}
 800f2f2:	b083      	sub	sp, #12
 800f2f4:	af00      	add	r7, sp, #0
 800f2f6:	6078      	str	r0, [r7, #4]
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	781b      	ldrb	r3, [r3, #0]
 800f2fc:	2b03      	cmp	r3, #3
 800f2fe:	d110      	bne.n	800f322 <4568fced62f20053a59091f5ee26eed63ee62b0d+0x32>
 800f300:	687b      	ldr	r3, [r7, #4]
 800f302:	1c5c      	adds	r4, r3, #1
 800f304:	f000 f8c2 	bl	800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>
 800f308:	4603      	mov	r3, r0
 800f30a:	2208      	movs	r2, #8
 800f30c:	4619      	mov	r1, r3
 800f30e:	4620      	mov	r0, r4
 800f310:	f01b fec8 	bl	802b0a4 <memcmp>
 800f314:	4603      	mov	r3, r0
 800f316:	2b00      	cmp	r3, #0
 800f318:	bf0c      	ite	eq
 800f31a:	2301      	moveq	r3, #1
 800f31c:	2300      	movne	r3, #0
 800f31e:	b2db      	uxtb	r3, r3
 800f320:	e000      	b.n	800f324 <4568fced62f20053a59091f5ee26eed63ee62b0d+0x34>
 800f322:	2300      	movs	r3, #0
 800f324:	4618      	mov	r0, r3
 800f326:	370c      	adds	r7, #12
 800f328:	46bd      	mov	sp, r7
 800f32a:	bd90      	pop	{r4, r7, pc}

0800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>:
 800f32c:	b580      	push	{r7, lr}
 800f32e:	b084      	sub	sp, #16
 800f330:	af00      	add	r7, sp, #0
 800f332:	6078      	str	r0, [r7, #4]
 800f334:	6039      	str	r1, [r7, #0]
 800f336:	687b      	ldr	r3, [r7, #4]
 800f338:	781a      	ldrb	r2, [r3, #0]
 800f33a:	683b      	ldr	r3, [r7, #0]
 800f33c:	781b      	ldrb	r3, [r3, #0]
 800f33e:	429a      	cmp	r2, r3
 800f340:	d112      	bne.n	800f368 <32ee1897f5dd097f851de45186212ed2e150a0c5+0x3c>
 800f342:	6878      	ldr	r0, [r7, #4]
 800f344:	f7ff fbb8 	bl	800eab8 <ADDR_GetLength>
 800f348:	60f8      	str	r0, [r7, #12]
 800f34a:	687b      	ldr	r3, [r7, #4]
 800f34c:	1c58      	adds	r0, r3, #1
 800f34e:	683b      	ldr	r3, [r7, #0]
 800f350:	3301      	adds	r3, #1
 800f352:	68fa      	ldr	r2, [r7, #12]
 800f354:	4619      	mov	r1, r3
 800f356:	f01b fea5 	bl	802b0a4 <memcmp>
 800f35a:	4603      	mov	r3, r0
 800f35c:	2b00      	cmp	r3, #0
 800f35e:	bf0c      	ite	eq
 800f360:	2301      	moveq	r3, #1
 800f362:	2300      	movne	r3, #0
 800f364:	b2db      	uxtb	r3, r3
 800f366:	e000      	b.n	800f36a <32ee1897f5dd097f851de45186212ed2e150a0c5+0x3e>
 800f368:	2300      	movs	r3, #0
 800f36a:	4618      	mov	r0, r3
 800f36c:	3710      	adds	r7, #16
 800f36e:	46bd      	mov	sp, r7
 800f370:	bd80      	pop	{r7, pc}
	...

0800f374 <706a956218859121b399480423d2fbe6bb70cd71>:
 800f374:	b580      	push	{r7, lr}
 800f376:	b084      	sub	sp, #16
 800f378:	af00      	add	r7, sp, #0
 800f37a:	6078      	str	r0, [r7, #4]
 800f37c:	6878      	ldr	r0, [r7, #4]
 800f37e:	f7ff fb9b 	bl	800eab8 <ADDR_GetLength>
 800f382:	60b8      	str	r0, [r7, #8]
 800f384:	4833      	ldr	r0, [pc, #204]	; (800f454 <706a956218859121b399480423d2fbe6bb70cd71+0xe0>)
 800f386:	f005 ff71 	bl	801526c <LOGGER_Print>
 800f38a:	687b      	ldr	r3, [r7, #4]
 800f38c:	781b      	ldrb	r3, [r3, #0]
 800f38e:	2b07      	cmp	r3, #7
 800f390:	d832      	bhi.n	800f3f8 <706a956218859121b399480423d2fbe6bb70cd71+0x84>
 800f392:	a201      	add	r2, pc, #4	; (adr r2, 800f398 <706a956218859121b399480423d2fbe6bb70cd71+0x24>)
 800f394:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f398:	0800f3b9 	.word	0x0800f3b9
 800f39c:	0800f3c1 	.word	0x0800f3c1
 800f3a0:	0800f3c9 	.word	0x0800f3c9
 800f3a4:	0800f3d1 	.word	0x0800f3d1
 800f3a8:	0800f3d9 	.word	0x0800f3d9
 800f3ac:	0800f3e1 	.word	0x0800f3e1
 800f3b0:	0800f3e9 	.word	0x0800f3e9
 800f3b4:	0800f3f1 	.word	0x0800f3f1
 800f3b8:	4827      	ldr	r0, [pc, #156]	; (800f458 <706a956218859121b399480423d2fbe6bb70cd71+0xe4>)
 800f3ba:	f005 ff57 	bl	801526c <LOGGER_Print>
 800f3be:	e01f      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3c0:	4826      	ldr	r0, [pc, #152]	; (800f45c <706a956218859121b399480423d2fbe6bb70cd71+0xe8>)
 800f3c2:	f005 ff53 	bl	801526c <LOGGER_Print>
 800f3c6:	e01b      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3c8:	4825      	ldr	r0, [pc, #148]	; (800f460 <706a956218859121b399480423d2fbe6bb70cd71+0xec>)
 800f3ca:	f005 ff4f 	bl	801526c <LOGGER_Print>
 800f3ce:	e017      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3d0:	4824      	ldr	r0, [pc, #144]	; (800f464 <706a956218859121b399480423d2fbe6bb70cd71+0xf0>)
 800f3d2:	f005 ff4b 	bl	801526c <LOGGER_Print>
 800f3d6:	e013      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3d8:	4823      	ldr	r0, [pc, #140]	; (800f468 <706a956218859121b399480423d2fbe6bb70cd71+0xf4>)
 800f3da:	f005 ff47 	bl	801526c <LOGGER_Print>
 800f3de:	e00f      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3e0:	4822      	ldr	r0, [pc, #136]	; (800f46c <706a956218859121b399480423d2fbe6bb70cd71+0xf8>)
 800f3e2:	f005 ff43 	bl	801526c <LOGGER_Print>
 800f3e6:	e00b      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3e8:	4821      	ldr	r0, [pc, #132]	; (800f470 <706a956218859121b399480423d2fbe6bb70cd71+0xfc>)
 800f3ea:	f005 ff3f 	bl	801526c <LOGGER_Print>
 800f3ee:	e007      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3f0:	4820      	ldr	r0, [pc, #128]	; (800f474 <706a956218859121b399480423d2fbe6bb70cd71+0x100>)
 800f3f2:	f005 ff3b 	bl	801526c <LOGGER_Print>
 800f3f6:	e003      	b.n	800f400 <706a956218859121b399480423d2fbe6bb70cd71+0x8c>
 800f3f8:	481f      	ldr	r0, [pc, #124]	; (800f478 <706a956218859121b399480423d2fbe6bb70cd71+0x104>)
 800f3fa:	f005 ff37 	bl	801526c <LOGGER_Print>
 800f3fe:	bf00      	nop
 800f400:	481e      	ldr	r0, [pc, #120]	; (800f47c <706a956218859121b399480423d2fbe6bb70cd71+0x108>)
 800f402:	f005 ff33 	bl	801526c <LOGGER_Print>
 800f406:	68bb      	ldr	r3, [r7, #8]
 800f408:	2b00      	cmp	r3, #0
 800f40a:	d019      	beq.n	800f440 <706a956218859121b399480423d2fbe6bb70cd71+0xcc>
 800f40c:	687b      	ldr	r3, [r7, #4]
 800f40e:	785b      	ldrb	r3, [r3, #1]
 800f410:	4619      	mov	r1, r3
 800f412:	481b      	ldr	r0, [pc, #108]	; (800f480 <706a956218859121b399480423d2fbe6bb70cd71+0x10c>)
 800f414:	f005 ff2a 	bl	801526c <LOGGER_Print>
 800f418:	2301      	movs	r3, #1
 800f41a:	60fb      	str	r3, [r7, #12]
 800f41c:	e00b      	b.n	800f436 <706a956218859121b399480423d2fbe6bb70cd71+0xc2>
 800f41e:	687a      	ldr	r2, [r7, #4]
 800f420:	68fb      	ldr	r3, [r7, #12]
 800f422:	4413      	add	r3, r2
 800f424:	3301      	adds	r3, #1
 800f426:	781b      	ldrb	r3, [r3, #0]
 800f428:	4619      	mov	r1, r3
 800f42a:	4816      	ldr	r0, [pc, #88]	; (800f484 <706a956218859121b399480423d2fbe6bb70cd71+0x110>)
 800f42c:	f005 ff1e 	bl	801526c <LOGGER_Print>
 800f430:	68fb      	ldr	r3, [r7, #12]
 800f432:	3301      	adds	r3, #1
 800f434:	60fb      	str	r3, [r7, #12]
 800f436:	68fa      	ldr	r2, [r7, #12]
 800f438:	68bb      	ldr	r3, [r7, #8]
 800f43a:	429a      	cmp	r2, r3
 800f43c:	d1ef      	bne.n	800f41e <706a956218859121b399480423d2fbe6bb70cd71+0xaa>
 800f43e:	e002      	b.n	800f446 <706a956218859121b399480423d2fbe6bb70cd71+0xd2>
 800f440:	480d      	ldr	r0, [pc, #52]	; (800f478 <706a956218859121b399480423d2fbe6bb70cd71+0x104>)
 800f442:	f005 ff13 	bl	801526c <LOGGER_Print>
 800f446:	4810      	ldr	r0, [pc, #64]	; (800f488 <706a956218859121b399480423d2fbe6bb70cd71+0x114>)
 800f448:	f005 ff10 	bl	801526c <LOGGER_Print>
 800f44c:	bf00      	nop
 800f44e:	3710      	adds	r7, #16
 800f450:	46bd      	mov	sp, r7
 800f452:	bd80      	pop	{r7, pc}
 800f454:	0802e42c 	.word	0x0802e42c
 800f458:	0802e434 	.word	0x0802e434
 800f45c:	0802e43c 	.word	0x0802e43c
 800f460:	0802e440 	.word	0x0802e440
 800f464:	0802e444 	.word	0x0802e444
 800f468:	0802e44c 	.word	0x0802e44c
 800f46c:	0802e454 	.word	0x0802e454
 800f470:	0802e45c 	.word	0x0802e45c
 800f474:	0802e464 	.word	0x0802e464
 800f478:	0802e46c 	.word	0x0802e46c
 800f47c:	0802e478 	.word	0x0802e478
 800f480:	0802e484 	.word	0x0802e484
 800f484:	0802e48c 	.word	0x0802e48c
 800f488:	0802e494 	.word	0x0802e494

0800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>:
 800f48c:	b480      	push	{r7}
 800f48e:	af00      	add	r7, sp, #0
 800f490:	4b02      	ldr	r3, [pc, #8]	; (800f49c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb+0x10>)
 800f492:	4618      	mov	r0, r3
 800f494:	46bd      	mov	sp, r7
 800f496:	bc80      	pop	{r7}
 800f498:	4770      	bx	lr
 800f49a:	bf00      	nop
 800f49c:	08031a0c 	.word	0x08031a0c

0800f4a0 <8651bfcf35514b04809eb22bd8aa118172b46770>:
 800f4a0:	b590      	push	{r4, r7, lr}
 800f4a2:	f5ad 5df8 	sub.w	sp, sp, #7936	; 0x1f00
 800f4a6:	b081      	sub	sp, #4
 800f4a8:	af00      	add	r7, sp, #0
 800f4aa:	4b2c      	ldr	r3, [pc, #176]	; (800f55c <8651bfcf35514b04809eb22bd8aa118172b46770+0xbc>)
 800f4ac:	681b      	ldr	r3, [r3, #0]
 800f4ae:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800f4b2:	f507 52f7 	add.w	r2, r7, #7904	; 0x1ee0
 800f4b6:	f102 0218 	add.w	r2, r2, #24
 800f4ba:	6013      	str	r3, [r2, #0]
 800f4bc:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f4c0:	f103 0318 	add.w	r3, r3, #24
 800f4c4:	681b      	ldr	r3, [r3, #0]
 800f4c6:	f503 54f6 	add.w	r4, r3, #7872	; 0x1ec0
 800f4ca:	341c      	adds	r4, #28
 800f4cc:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f4d0:	f103 0318 	add.w	r3, r3, #24
 800f4d4:	681b      	ldr	r3, [r3, #0]
 800f4d6:	4618      	mov	r0, r3
 800f4d8:	f641 63f8 	movw	r3, #7928	; 0x1ef8
 800f4dc:	461a      	mov	r2, r3
 800f4de:	2100      	movs	r1, #0
 800f4e0:	f01b fe0a 	bl	802b0f8 <memset>
 800f4e4:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f4e8:	f103 0318 	add.w	r3, r3, #24
 800f4ec:	681b      	ldr	r3, [r3, #0]
 800f4ee:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f4f2:	f8c3 4eec 	str.w	r4, [r3, #3820]	; 0xeec
 800f4f6:	2300      	movs	r3, #0
 800f4f8:	f507 52f7 	add.w	r2, r7, #7904	; 0x1ee0
 800f4fc:	f102 021c 	add.w	r2, r2, #28
 800f500:	6013      	str	r3, [r2, #0]
 800f502:	e01c      	b.n	800f53e <8651bfcf35514b04809eb22bd8aa118172b46770+0x9e>
 800f504:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f508:	f103 031c 	add.w	r3, r3, #28
 800f50c:	681b      	ldr	r3, [r3, #0]
 800f50e:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f512:	fb02 f303 	mul.w	r3, r2, r3
 800f516:	f507 52f7 	add.w	r2, r7, #7904	; 0x1ee0
 800f51a:	f102 0218 	add.w	r2, r2, #24
 800f51e:	6812      	ldr	r2, [r2, #0]
 800f520:	4413      	add	r3, r2
 800f522:	4618      	mov	r0, r3
 800f524:	f001 fc99 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800f528:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f52c:	f103 031c 	add.w	r3, r3, #28
 800f530:	681b      	ldr	r3, [r3, #0]
 800f532:	3301      	adds	r3, #1
 800f534:	f507 52f7 	add.w	r2, r7, #7904	; 0x1ee0
 800f538:	f102 021c 	add.w	r2, r2, #28
 800f53c:	6013      	str	r3, [r2, #0]
 800f53e:	f507 53f7 	add.w	r3, r7, #7904	; 0x1ee0
 800f542:	f103 031c 	add.w	r3, r3, #28
 800f546:	681b      	ldr	r3, [r3, #0]
 800f548:	2b18      	cmp	r3, #24
 800f54a:	d9db      	bls.n	800f504 <8651bfcf35514b04809eb22bd8aa118172b46770+0x64>
 800f54c:	bf00      	nop
 800f54e:	bf00      	nop
 800f550:	f507 57f8 	add.w	r7, r7, #7936	; 0x1f00
 800f554:	3704      	adds	r7, #4
 800f556:	46bd      	mov	sp, r7
 800f558:	bd90      	pop	{r4, r7, pc}
 800f55a:	bf00      	nop
 800f55c:	20000040 	.word	0x20000040

0800f560 <4b9793db96fa05ad63a954fae76e17c90da5d34d>:
 800f560:	b590      	push	{r4, r7, lr}
 800f562:	b08b      	sub	sp, #44	; 0x2c
 800f564:	af00      	add	r7, sp, #0
 800f566:	4b70      	ldr	r3, [pc, #448]	; (800f728 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1c8>)
 800f568:	681b      	ldr	r3, [r3, #0]
 800f56a:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800f56e:	61bb      	str	r3, [r7, #24]
 800f570:	f7f6 fd6e 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800f574:	f000 fb18 	bl	800fba8 <e1319048c142912ea91dcc918ab796551ce50481>
 800f578:	6178      	str	r0, [r7, #20]
 800f57a:	697b      	ldr	r3, [r7, #20]
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	d117      	bne.n	800f5b0 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x50>
 800f580:	69bb      	ldr	r3, [r7, #24]
 800f582:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f586:	f893 3ef5 	ldrb.w	r3, [r3, #3829]	; 0xef5
 800f58a:	f083 0301 	eor.w	r3, r3, #1
 800f58e:	b2db      	uxtb	r3, r3
 800f590:	2b00      	cmp	r3, #0
 800f592:	d00d      	beq.n	800f5b0 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x50>
 800f594:	69bb      	ldr	r3, [r7, #24]
 800f596:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f59a:	2201      	movs	r2, #1
 800f59c:	f883 2ef5 	strb.w	r2, [r3, #3829]	; 0xef5
 800f5a0:	69bb      	ldr	r3, [r7, #24]
 800f5a2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5a6:	f8d3 3eec 	ldr.w	r3, [r3, #3820]	; 0xeec
 800f5aa:	685a      	ldr	r2, [r3, #4]
 800f5ac:	3201      	adds	r2, #1
 800f5ae:	605a      	str	r2, [r3, #4]
 800f5b0:	697b      	ldr	r3, [r7, #20]
 800f5b2:	f1c3 0319 	rsb	r3, r3, #25
 800f5b6:	2b12      	cmp	r3, #18
 800f5b8:	d917      	bls.n	800f5ea <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x8a>
 800f5ba:	69bb      	ldr	r3, [r7, #24]
 800f5bc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5c0:	f893 3ef4 	ldrb.w	r3, [r3, #3828]	; 0xef4
 800f5c4:	f083 0301 	eor.w	r3, r3, #1
 800f5c8:	b2db      	uxtb	r3, r3
 800f5ca:	2b00      	cmp	r3, #0
 800f5cc:	d00d      	beq.n	800f5ea <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x8a>
 800f5ce:	69bb      	ldr	r3, [r7, #24]
 800f5d0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5d4:	2201      	movs	r2, #1
 800f5d6:	f883 2ef4 	strb.w	r2, [r3, #3828]	; 0xef4
 800f5da:	69bb      	ldr	r3, [r7, #24]
 800f5dc:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f5e0:	f8d3 3eec 	ldr.w	r3, [r3, #3820]	; 0xeec
 800f5e4:	681a      	ldr	r2, [r3, #0]
 800f5e6:	3201      	adds	r2, #1
 800f5e8:	601a      	str	r2, [r3, #0]
 800f5ea:	f7f6 fd51 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f5ee:	6978      	ldr	r0, [r7, #20]
 800f5f0:	f001 fc24 	bl	8010e3c <isSpaceForNonMaintenancePackets>
 800f5f4:	4603      	mov	r3, r0
 800f5f6:	f083 0301 	eor.w	r3, r3, #1
 800f5fa:	b2db      	uxtb	r3, r3
 800f5fc:	2b00      	cmp	r3, #0
 800f5fe:	f000 808a 	beq.w	800f716 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1b6>
 800f602:	f04f 33ff 	mov.w	r3, #4294967295
 800f606:	60fb      	str	r3, [r7, #12]
 800f608:	7c3b      	ldrb	r3, [r7, #16]
 800f60a:	f043 03ff 	orr.w	r3, r3, #255	; 0xff
 800f60e:	743b      	strb	r3, [r7, #16]
 800f610:	2300      	movs	r3, #0
 800f612:	627b      	str	r3, [r7, #36]	; 0x24
 800f614:	2300      	movs	r3, #0
 800f616:	623b      	str	r3, [r7, #32]
 800f618:	e065      	b.n	800f6e6 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x186>
 800f61a:	f7f6 fd19 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800f61e:	69ba      	ldr	r2, [r7, #24]
 800f620:	6a3b      	ldr	r3, [r7, #32]
 800f622:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f626:	fb01 f303 	mul.w	r3, r1, r3
 800f62a:	4413      	add	r3, r2
 800f62c:	3301      	adds	r3, #1
 800f62e:	781b      	ldrb	r3, [r3, #0]
 800f630:	2b40      	cmp	r3, #64	; 0x40
 800f632:	d153      	bne.n	800f6dc <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x17c>
 800f634:	69ba      	ldr	r2, [r7, #24]
 800f636:	6a3b      	ldr	r3, [r7, #32]
 800f638:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f63c:	fb01 f303 	mul.w	r3, r1, r3
 800f640:	4413      	add	r3, r2
 800f642:	781b      	ldrb	r3, [r3, #0]
 800f644:	2b74      	cmp	r3, #116	; 0x74
 800f646:	d814      	bhi.n	800f672 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x112>
 800f648:	69ba      	ldr	r2, [r7, #24]
 800f64a:	6a3b      	ldr	r3, [r7, #32]
 800f64c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f650:	fb01 f303 	mul.w	r3, r1, r3
 800f654:	4413      	add	r3, r2
 800f656:	781b      	ldrb	r3, [r3, #0]
 800f658:	2b74      	cmp	r3, #116	; 0x74
 800f65a:	d13f      	bne.n	800f6dc <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x17c>
 800f65c:	69ba      	ldr	r2, [r7, #24]
 800f65e:	6a3b      	ldr	r3, [r7, #32]
 800f660:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f664:	fb01 f303 	mul.w	r3, r1, r3
 800f668:	4413      	add	r3, r2
 800f66a:	3310      	adds	r3, #16
 800f66c:	781b      	ldrb	r3, [r3, #0]
 800f66e:	2b3a      	cmp	r3, #58	; 0x3a
 800f670:	d034      	beq.n	800f6dc <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x17c>
 800f672:	2300      	movs	r3, #0
 800f674:	77fb      	strb	r3, [r7, #31]
 800f676:	69ba      	ldr	r2, [r7, #24]
 800f678:	6a3b      	ldr	r3, [r7, #32]
 800f67a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f67e:	fb01 f303 	mul.w	r3, r1, r3
 800f682:	4413      	add	r3, r2
 800f684:	3350      	adds	r3, #80	; 0x50
 800f686:	f8d3 0006 	ldr.w	r0, [r3, #6]
 800f68a:	7a9b      	ldrb	r3, [r3, #10]
 800f68c:	4619      	mov	r1, r3
 800f68e:	68fa      	ldr	r2, [r7, #12]
 800f690:	7c3c      	ldrb	r4, [r7, #16]
 800f692:	4623      	mov	r3, r4
 800f694:	4290      	cmp	r0, r2
 800f696:	eb71 0303 	sbcs.w	r3, r1, r3
 800f69a:	d201      	bcs.n	800f6a0 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x140>
 800f69c:	2301      	movs	r3, #1
 800f69e:	77fb      	strb	r3, [r7, #31]
 800f6a0:	7ffb      	ldrb	r3, [r7, #31]
 800f6a2:	2b00      	cmp	r3, #0
 800f6a4:	d01a      	beq.n	800f6dc <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x17c>
 800f6a6:	69ba      	ldr	r2, [r7, #24]
 800f6a8:	6a3b      	ldr	r3, [r7, #32]
 800f6aa:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f6ae:	fb01 f303 	mul.w	r3, r1, r3
 800f6b2:	4413      	add	r3, r2
 800f6b4:	3350      	adds	r3, #80	; 0x50
 800f6b6:	f8d3 0006 	ldr.w	r0, [r3, #6]
 800f6ba:	7a9b      	ldrb	r3, [r3, #10]
 800f6bc:	4619      	mov	r1, r3
 800f6be:	4603      	mov	r3, r0
 800f6c0:	60fb      	str	r3, [r7, #12]
 800f6c2:	7c3b      	ldrb	r3, [r7, #16]
 800f6c4:	460a      	mov	r2, r1
 800f6c6:	f362 0307 	bfi	r3, r2, #0, #8
 800f6ca:	743b      	strb	r3, [r7, #16]
 800f6cc:	6a3b      	ldr	r3, [r7, #32]
 800f6ce:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f6d2:	fb02 f303 	mul.w	r3, r2, r3
 800f6d6:	69ba      	ldr	r2, [r7, #24]
 800f6d8:	4413      	add	r3, r2
 800f6da:	627b      	str	r3, [r7, #36]	; 0x24
 800f6dc:	f7f6 fcd8 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f6e0:	6a3b      	ldr	r3, [r7, #32]
 800f6e2:	3301      	adds	r3, #1
 800f6e4:	623b      	str	r3, [r7, #32]
 800f6e6:	6a3b      	ldr	r3, [r7, #32]
 800f6e8:	2b18      	cmp	r3, #24
 800f6ea:	d996      	bls.n	800f61a <4b9793db96fa05ad63a954fae76e17c90da5d34d+0xba>
 800f6ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f6ee:	2b00      	cmp	r3, #0
 800f6f0:	d00f      	beq.n	800f712 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1b2>
 800f6f2:	4a0e      	ldr	r2, [pc, #56]	; (800f72c <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1cc>)
 800f6f4:	1d3b      	adds	r3, r7, #4
 800f6f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f6fa:	e883 0003 	stmia.w	r3, {r0, r1}
 800f6fe:	4a0c      	ldr	r2, [pc, #48]	; (800f730 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1d0>)
 800f700:	1d3b      	adds	r3, r7, #4
 800f702:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f706:	f005 fd7f 	bl	8015208 <LOGGER_PrintLine>
 800f70a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800f70c:	f000 f91e 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 800f710:	e001      	b.n	800f716 <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1b6>
 800f712:	2300      	movs	r3, #0
 800f714:	e003      	b.n	800f71e <4b9793db96fa05ad63a954fae76e17c90da5d34d+0x1be>
 800f716:	2074      	movs	r0, #116	; 0x74
 800f718:	f000 f80c 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 800f71c:	4603      	mov	r3, r0
 800f71e:	4618      	mov	r0, r3
 800f720:	372c      	adds	r7, #44	; 0x2c
 800f722:	46bd      	mov	sp, r7
 800f724:	bd90      	pop	{r4, r7, pc}
 800f726:	bf00      	nop
 800f728:	20000040 	.word	0x20000040
 800f72c:	0802e4d4 	.word	0x0802e4d4
 800f730:	0802e498 	.word	0x0802e498

0800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>:
 800f734:	b5b0      	push	{r4, r5, r7, lr}
 800f736:	b090      	sub	sp, #64	; 0x40
 800f738:	af06      	add	r7, sp, #24
 800f73a:	4603      	mov	r3, r0
 800f73c:	71fb      	strb	r3, [r7, #7]
 800f73e:	4b80      	ldr	r3, [pc, #512]	; (800f940 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x20c>)
 800f740:	681b      	ldr	r3, [r3, #0]
 800f742:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800f746:	623b      	str	r3, [r7, #32]
 800f748:	79fb      	ldrb	r3, [r7, #7]
 800f74a:	2b00      	cmp	r3, #0
 800f74c:	d101      	bne.n	800f752 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x1e>
 800f74e:	2300      	movs	r3, #0
 800f750:	e0f2      	b.n	800f938 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x204>
 800f752:	f7f6 fc7d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800f756:	f000 fa27 	bl	800fba8 <e1319048c142912ea91dcc918ab796551ce50481>
 800f75a:	61f8      	str	r0, [r7, #28]
 800f75c:	69fb      	ldr	r3, [r7, #28]
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d117      	bne.n	800f792 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x5e>
 800f762:	6a3b      	ldr	r3, [r7, #32]
 800f764:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f768:	f893 3ef5 	ldrb.w	r3, [r3, #3829]	; 0xef5
 800f76c:	f083 0301 	eor.w	r3, r3, #1
 800f770:	b2db      	uxtb	r3, r3
 800f772:	2b00      	cmp	r3, #0
 800f774:	d00d      	beq.n	800f792 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x5e>
 800f776:	6a3b      	ldr	r3, [r7, #32]
 800f778:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f77c:	2201      	movs	r2, #1
 800f77e:	f883 2ef5 	strb.w	r2, [r3, #3829]	; 0xef5
 800f782:	6a3b      	ldr	r3, [r7, #32]
 800f784:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f788:	f8d3 3eec 	ldr.w	r3, [r3, #3820]	; 0xeec
 800f78c:	685a      	ldr	r2, [r3, #4]
 800f78e:	3201      	adds	r2, #1
 800f790:	605a      	str	r2, [r3, #4]
 800f792:	69fb      	ldr	r3, [r7, #28]
 800f794:	f1c3 0319 	rsb	r3, r3, #25
 800f798:	2b12      	cmp	r3, #18
 800f79a:	d917      	bls.n	800f7cc <331ec243926b1d9fd1d86c735e311ea19678e45f+0x98>
 800f79c:	6a3b      	ldr	r3, [r7, #32]
 800f79e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f7a2:	f893 3ef4 	ldrb.w	r3, [r3, #3828]	; 0xef4
 800f7a6:	f083 0301 	eor.w	r3, r3, #1
 800f7aa:	b2db      	uxtb	r3, r3
 800f7ac:	2b00      	cmp	r3, #0
 800f7ae:	d00d      	beq.n	800f7cc <331ec243926b1d9fd1d86c735e311ea19678e45f+0x98>
 800f7b0:	6a3b      	ldr	r3, [r7, #32]
 800f7b2:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f7b6:	2201      	movs	r2, #1
 800f7b8:	f883 2ef4 	strb.w	r2, [r3, #3828]	; 0xef4
 800f7bc:	6a3b      	ldr	r3, [r7, #32]
 800f7be:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f7c2:	f8d3 3eec 	ldr.w	r3, [r3, #3820]	; 0xeec
 800f7c6:	681a      	ldr	r2, [r3, #0]
 800f7c8:	3201      	adds	r2, #1
 800f7ca:	601a      	str	r2, [r3, #0]
 800f7cc:	f7f6 fc60 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f7d0:	79fb      	ldrb	r3, [r7, #7]
 800f7d2:	2b73      	cmp	r3, #115	; 0x73
 800f7d4:	d90e      	bls.n	800f7f4 <331ec243926b1d9fd1d86c735e311ea19678e45f+0xc0>
 800f7d6:	69f8      	ldr	r0, [r7, #28]
 800f7d8:	f001 fb30 	bl	8010e3c <isSpaceForNonMaintenancePackets>
 800f7dc:	4603      	mov	r3, r0
 800f7de:	f083 0301 	eor.w	r3, r3, #1
 800f7e2:	b2db      	uxtb	r3, r3
 800f7e4:	2b00      	cmp	r3, #0
 800f7e6:	d005      	beq.n	800f7f4 <331ec243926b1d9fd1d86c735e311ea19678e45f+0xc0>
 800f7e8:	79fb      	ldrb	r3, [r7, #7]
 800f7ea:	4618      	mov	r0, r3
 800f7ec:	f001 faca 	bl	8010d84 <printBuffer>
 800f7f0:	2300      	movs	r3, #0
 800f7f2:	e0a1      	b.n	800f938 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x204>
 800f7f4:	2300      	movs	r3, #0
 800f7f6:	627b      	str	r3, [r7, #36]	; 0x24
 800f7f8:	e099      	b.n	800f92e <331ec243926b1d9fd1d86c735e311ea19678e45f+0x1fa>
 800f7fa:	f7f6 fc29 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800f7fe:	6a3a      	ldr	r2, [r7, #32]
 800f800:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f802:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f806:	fb01 f303 	mul.w	r3, r1, r3
 800f80a:	4413      	add	r3, r2
 800f80c:	3301      	adds	r3, #1
 800f80e:	781b      	ldrb	r3, [r3, #0]
 800f810:	2b00      	cmp	r3, #0
 800f812:	f040 8087 	bne.w	800f924 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x1f0>
 800f816:	6a3a      	ldr	r2, [r7, #32]
 800f818:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f81a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f81e:	fb01 f303 	mul.w	r3, r1, r3
 800f822:	4413      	add	r3, r2
 800f824:	3304      	adds	r3, #4
 800f826:	681a      	ldr	r2, [r3, #0]
 800f828:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f82a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f82e:	fb01 f303 	mul.w	r3, r1, r3
 800f832:	f503 739a 	add.w	r3, r3, #308	; 0x134
 800f836:	6a39      	ldr	r1, [r7, #32]
 800f838:	440b      	add	r3, r1
 800f83a:	3301      	adds	r3, #1
 800f83c:	429a      	cmp	r2, r3
 800f83e:	d04c      	beq.n	800f8da <331ec243926b1d9fd1d86c735e311ea19678e45f+0x1a6>
 800f840:	4a40      	ldr	r2, [pc, #256]	; (800f944 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x210>)
 800f842:	f107 030c 	add.w	r3, r7, #12
 800f846:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f84a:	e883 0003 	stmia.w	r3, {r0, r1}
 800f84e:	6a3a      	ldr	r2, [r7, #32]
 800f850:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f852:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f856:	fb01 f303 	mul.w	r3, r1, r3
 800f85a:	4413      	add	r3, r2
 800f85c:	3301      	adds	r3, #1
 800f85e:	781b      	ldrb	r3, [r3, #0]
 800f860:	4618      	mov	r0, r3
 800f862:	6a3a      	ldr	r2, [r7, #32]
 800f864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f866:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f86a:	fb01 f303 	mul.w	r3, r1, r3
 800f86e:	4413      	add	r3, r2
 800f870:	781b      	ldrb	r3, [r3, #0]
 800f872:	461c      	mov	r4, r3
 800f874:	6a3a      	ldr	r2, [r7, #32]
 800f876:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f878:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f87c:	fb01 f303 	mul.w	r3, r1, r3
 800f880:	4413      	add	r3, r2
 800f882:	3304      	adds	r3, #4
 800f884:	681b      	ldr	r3, [r3, #0]
 800f886:	461d      	mov	r5, r3
 800f888:	6a3a      	ldr	r2, [r7, #32]
 800f88a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f88c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f890:	fb01 f303 	mul.w	r3, r1, r3
 800f894:	4413      	add	r3, r2
 800f896:	3308      	adds	r3, #8
 800f898:	781b      	ldrb	r3, [r3, #0]
 800f89a:	4619      	mov	r1, r3
 800f89c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f89e:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f8a2:	fb02 f303 	mul.w	r3, r2, r3
 800f8a6:	33b8      	adds	r3, #184	; 0xb8
 800f8a8:	6a3a      	ldr	r2, [r7, #32]
 800f8aa:	4413      	add	r3, r2
 800f8ac:	3301      	adds	r3, #1
 800f8ae:	9304      	str	r3, [sp, #16]
 800f8b0:	9103      	str	r1, [sp, #12]
 800f8b2:	9502      	str	r5, [sp, #8]
 800f8b4:	9401      	str	r4, [sp, #4]
 800f8b6:	9000      	str	r0, [sp, #0]
 800f8b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8ba:	4a23      	ldr	r2, [pc, #140]	; (800f948 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x214>)
 800f8bc:	f107 010c 	add.w	r1, r7, #12
 800f8c0:	c903      	ldmia	r1, {r0, r1}
 800f8c2:	f005 fca1 	bl	8015208 <LOGGER_PrintLine>
 800f8c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8c8:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f8cc:	fb02 f303 	mul.w	r3, r2, r3
 800f8d0:	6a3a      	ldr	r2, [r7, #32]
 800f8d2:	4413      	add	r3, r2
 800f8d4:	4618      	mov	r0, r3
 800f8d6:	f001 fac0 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800f8da:	6a3a      	ldr	r2, [r7, #32]
 800f8dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8de:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f8e2:	fb01 f303 	mul.w	r3, r1, r3
 800f8e6:	4413      	add	r3, r2
 800f8e8:	79fa      	ldrb	r2, [r7, #7]
 800f8ea:	701a      	strb	r2, [r3, #0]
 800f8ec:	6a3a      	ldr	r2, [r7, #32]
 800f8ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f8f0:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f8f4:	fb01 f303 	mul.w	r3, r1, r3
 800f8f8:	4413      	add	r3, r2
 800f8fa:	3301      	adds	r3, #1
 800f8fc:	79fa      	ldrb	r2, [r7, #7]
 800f8fe:	701a      	strb	r2, [r3, #0]
 800f900:	f7f6 fbc6 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f904:	f000 f950 	bl	800fba8 <e1319048c142912ea91dcc918ab796551ce50481>
 800f908:	4603      	mov	r3, r0
 800f90a:	f1c3 0319 	rsb	r3, r3, #25
 800f90e:	4618      	mov	r0, r3
 800f910:	f019 fa76 	bl	8028e00 <b6b6c147c3a69ab145ae9ef0a9039b548a4c0c2a>
 800f914:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f916:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f91a:	fb02 f303 	mul.w	r3, r2, r3
 800f91e:	6a3a      	ldr	r2, [r7, #32]
 800f920:	4413      	add	r3, r2
 800f922:	e009      	b.n	800f938 <331ec243926b1d9fd1d86c735e311ea19678e45f+0x204>
 800f924:	f7f6 fbb4 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f928:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f92a:	3301      	adds	r3, #1
 800f92c:	627b      	str	r3, [r7, #36]	; 0x24
 800f92e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f930:	2b18      	cmp	r3, #24
 800f932:	f67f af62 	bls.w	800f7fa <331ec243926b1d9fd1d86c735e311ea19678e45f+0xc6>
 800f936:	2300      	movs	r3, #0
 800f938:	4618      	mov	r0, r3
 800f93a:	3728      	adds	r7, #40	; 0x28
 800f93c:	46bd      	mov	sp, r7
 800f93e:	bdb0      	pop	{r4, r5, r7, pc}
 800f940:	20000040 	.word	0x20000040
 800f944:	0802e4d4 	.word	0x0802e4d4
 800f948:	0802e4dc 	.word	0x0802e4dc

0800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>:
 800f94c:	b580      	push	{r7, lr}
 800f94e:	b088      	sub	sp, #32
 800f950:	af00      	add	r7, sp, #0
 800f952:	6078      	str	r0, [r7, #4]
 800f954:	4b2a      	ldr	r3, [pc, #168]	; (800fa00 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xb4>)
 800f956:	681b      	ldr	r3, [r3, #0]
 800f958:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800f95c:	61bb      	str	r3, [r7, #24]
 800f95e:	2300      	movs	r3, #0
 800f960:	61fb      	str	r3, [r7, #28]
 800f962:	e036      	b.n	800f9d2 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0x86>
 800f964:	f7f6 fb74 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800f968:	69fb      	ldr	r3, [r7, #28]
 800f96a:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f96e:	fb02 f303 	mul.w	r3, r2, r3
 800f972:	69ba      	ldr	r2, [r7, #24]
 800f974:	4413      	add	r3, r2
 800f976:	687a      	ldr	r2, [r7, #4]
 800f978:	429a      	cmp	r2, r3
 800f97a:	d125      	bne.n	800f9c8 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0x7c>
 800f97c:	69ba      	ldr	r2, [r7, #24]
 800f97e:	69fb      	ldr	r3, [r7, #28]
 800f980:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f984:	fb01 f303 	mul.w	r3, r1, r3
 800f988:	4413      	add	r3, r2
 800f98a:	3301      	adds	r3, #1
 800f98c:	781b      	ldrb	r3, [r3, #0]
 800f98e:	2b00      	cmp	r3, #0
 800f990:	d104      	bne.n	800f99c <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0x50>
 800f992:	22b4      	movs	r2, #180	; 0xb4
 800f994:	491b      	ldr	r1, [pc, #108]	; (800fa04 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xb8>)
 800f996:	481c      	ldr	r0, [pc, #112]	; (800fa08 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xbc>)
 800f998:	f7f1 feb6 	bl	8001708 <EXPECT_OnAbortHandler>
 800f99c:	69fb      	ldr	r3, [r7, #28]
 800f99e:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800f9a2:	fb02 f303 	mul.w	r3, r2, r3
 800f9a6:	69ba      	ldr	r2, [r7, #24]
 800f9a8:	4413      	add	r3, r2
 800f9aa:	4618      	mov	r0, r3
 800f9ac:	f001 fa55 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800f9b0:	f7f6 fb6e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f9b4:	f000 f8f8 	bl	800fba8 <e1319048c142912ea91dcc918ab796551ce50481>
 800f9b8:	4603      	mov	r3, r0
 800f9ba:	f1c3 0319 	rsb	r3, r3, #25
 800f9be:	4618      	mov	r0, r3
 800f9c0:	f019 fa1e 	bl	8028e00 <b6b6c147c3a69ab145ae9ef0a9039b548a4c0c2a>
 800f9c4:	2301      	movs	r3, #1
 800f9c6:	e016      	b.n	800f9f6 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xaa>
 800f9c8:	f7f6 fb62 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800f9cc:	69fb      	ldr	r3, [r7, #28]
 800f9ce:	3301      	adds	r3, #1
 800f9d0:	61fb      	str	r3, [r7, #28]
 800f9d2:	69fb      	ldr	r3, [r7, #28]
 800f9d4:	2b18      	cmp	r3, #24
 800f9d6:	d9c5      	bls.n	800f964 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0x18>
 800f9d8:	4a0c      	ldr	r2, [pc, #48]	; (800fa0c <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xc0>)
 800f9da:	f107 0308 	add.w	r3, r7, #8
 800f9de:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f9e2:	e883 0003 	stmia.w	r3, {r0, r1}
 800f9e6:	4a0a      	ldr	r2, [pc, #40]	; (800fa10 <218a9716e8ca33d3905e4d5d678efcb718f6f31f+0xc4>)
 800f9e8:	f107 0308 	add.w	r3, r7, #8
 800f9ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f9f0:	f005 fc0a 	bl	8015208 <LOGGER_PrintLine>
 800f9f4:	2300      	movs	r3, #0
 800f9f6:	4618      	mov	r0, r3
 800f9f8:	3720      	adds	r7, #32
 800f9fa:	46bd      	mov	sp, r7
 800f9fc:	bd80      	pop	{r7, pc}
 800f9fe:	bf00      	nop
 800fa00:	20000040 	.word	0x20000040
 800fa04:	0802e54c 	.word	0x0802e54c
 800fa08:	0802e5b4 	.word	0x0802e5b4
 800fa0c:	0802e5f0 	.word	0x0802e5f0
 800fa10:	0802e5cc 	.word	0x0802e5cc

0800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>:
 800fa14:	b580      	push	{r7, lr}
 800fa16:	b084      	sub	sp, #16
 800fa18:	af00      	add	r7, sp, #0
 800fa1a:	4603      	mov	r3, r0
 800fa1c:	71fb      	strb	r3, [r7, #7]
 800fa1e:	4b1b      	ldr	r3, [pc, #108]	; (800fa8c <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e+0x78>)
 800fa20:	681b      	ldr	r3, [r3, #0]
 800fa22:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fa26:	60bb      	str	r3, [r7, #8]
 800fa28:	2300      	movs	r3, #0
 800fa2a:	60fb      	str	r3, [r7, #12]
 800fa2c:	e026      	b.n	800fa7c <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e+0x68>
 800fa2e:	f7f6 fb0f 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fa32:	68ba      	ldr	r2, [r7, #8]
 800fa34:	68fb      	ldr	r3, [r7, #12]
 800fa36:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fa3a:	fb01 f303 	mul.w	r3, r1, r3
 800fa3e:	4413      	add	r3, r2
 800fa40:	781b      	ldrb	r3, [r3, #0]
 800fa42:	79fa      	ldrb	r2, [r7, #7]
 800fa44:	429a      	cmp	r2, r3
 800fa46:	d114      	bne.n	800fa72 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e+0x5e>
 800fa48:	68ba      	ldr	r2, [r7, #8]
 800fa4a:	68fb      	ldr	r3, [r7, #12]
 800fa4c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fa50:	fb01 f303 	mul.w	r3, r1, r3
 800fa54:	4413      	add	r3, r2
 800fa56:	3301      	adds	r3, #1
 800fa58:	781b      	ldrb	r3, [r3, #0]
 800fa5a:	2b31      	cmp	r3, #49	; 0x31
 800fa5c:	d009      	beq.n	800fa72 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e+0x5e>
 800fa5e:	68fb      	ldr	r3, [r7, #12]
 800fa60:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fa64:	fb02 f303 	mul.w	r3, r2, r3
 800fa68:	68ba      	ldr	r2, [r7, #8]
 800fa6a:	4413      	add	r3, r2
 800fa6c:	4618      	mov	r0, r3
 800fa6e:	f001 f9f4 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800fa72:	f7f6 fb0d 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fa76:	68fb      	ldr	r3, [r7, #12]
 800fa78:	3301      	adds	r3, #1
 800fa7a:	60fb      	str	r3, [r7, #12]
 800fa7c:	68fb      	ldr	r3, [r7, #12]
 800fa7e:	2b18      	cmp	r3, #24
 800fa80:	d9d5      	bls.n	800fa2e <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e+0x1a>
 800fa82:	bf00      	nop
 800fa84:	bf00      	nop
 800fa86:	3710      	adds	r7, #16
 800fa88:	46bd      	mov	sp, r7
 800fa8a:	bd80      	pop	{r7, pc}
 800fa8c:	20000040 	.word	0x20000040

0800fa90 <77b737f3175c59c67851de07d0921a2dae9a70ab>:
 800fa90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa94:	b087      	sub	sp, #28
 800fa96:	af00      	add	r7, sp, #0
 800fa98:	6078      	str	r0, [r7, #4]
 800fa9a:	4b2d      	ldr	r3, [pc, #180]	; (800fb50 <77b737f3175c59c67851de07d0921a2dae9a70ab+0xc0>)
 800fa9c:	681b      	ldr	r3, [r3, #0]
 800fa9e:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800faa2:	613b      	str	r3, [r7, #16]
 800faa4:	2300      	movs	r3, #0
 800faa6:	617b      	str	r3, [r7, #20]
 800faa8:	e048      	b.n	800fb3c <77b737f3175c59c67851de07d0921a2dae9a70ab+0xac>
 800faaa:	f7f6 fad1 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800faae:	693a      	ldr	r2, [r7, #16]
 800fab0:	697b      	ldr	r3, [r7, #20]
 800fab2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fab6:	fb01 f303 	mul.w	r3, r1, r3
 800faba:	4413      	add	r3, r2
 800fabc:	3301      	adds	r3, #1
 800fabe:	781b      	ldrb	r3, [r3, #0]
 800fac0:	2b40      	cmp	r3, #64	; 0x40
 800fac2:	d136      	bne.n	800fb32 <77b737f3175c59c67851de07d0921a2dae9a70ab+0xa2>
 800fac4:	687b      	ldr	r3, [r7, #4]
 800fac6:	6818      	ldr	r0, [r3, #0]
 800fac8:	791b      	ldrb	r3, [r3, #4]
 800faca:	4619      	mov	r1, r3
 800facc:	693a      	ldr	r2, [r7, #16]
 800face:	697b      	ldr	r3, [r7, #20]
 800fad0:	f44f 769e 	mov.w	r6, #316	; 0x13c
 800fad4:	fb06 f303 	mul.w	r3, r6, r3
 800fad8:	4413      	add	r3, r2
 800fada:	f103 0650 	add.w	r6, r3, #80	; 0x50
 800fade:	f8d6 2006 	ldr.w	r2, [r6, #6]
 800fae2:	7ab6      	ldrb	r6, [r6, #10]
 800fae4:	4633      	mov	r3, r6
 800fae6:	1a84      	subs	r4, r0, r2
 800fae8:	eb61 0503 	sbc.w	r5, r1, r3
 800faec:	46a0      	mov	r8, r4
 800faee:	f005 09ff 	and.w	r9, r5, #255	; 0xff
 800faf2:	4644      	mov	r4, r8
 800faf4:	464d      	mov	r5, r9
 800faf6:	f640 1325 	movw	r3, #2341	; 0x925
 800fafa:	429c      	cmp	r4, r3
 800fafc:	f175 0300 	sbcs.w	r3, r5, #0
 800fb00:	d317      	bcc.n	800fb32 <77b737f3175c59c67851de07d0921a2dae9a70ab+0xa2>
 800fb02:	697b      	ldr	r3, [r7, #20]
 800fb04:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fb08:	fb02 f303 	mul.w	r3, r2, r3
 800fb0c:	693a      	ldr	r2, [r7, #16]
 800fb0e:	4413      	add	r3, r2
 800fb10:	4618      	mov	r0, r3
 800fb12:	f001 f9a2 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800fb16:	4a0f      	ldr	r2, [pc, #60]	; (800fb54 <77b737f3175c59c67851de07d0921a2dae9a70ab+0xc4>)
 800fb18:	f107 0308 	add.w	r3, r7, #8
 800fb1c:	e892 0003 	ldmia.w	r2, {r0, r1}
 800fb20:	e883 0003 	stmia.w	r3, {r0, r1}
 800fb24:	4a0c      	ldr	r2, [pc, #48]	; (800fb58 <77b737f3175c59c67851de07d0921a2dae9a70ab+0xc8>)
 800fb26:	f107 0308 	add.w	r3, r7, #8
 800fb2a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fb2e:	f005 fb6b 	bl	8015208 <LOGGER_PrintLine>
 800fb32:	f7f6 faad 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fb36:	697b      	ldr	r3, [r7, #20]
 800fb38:	3301      	adds	r3, #1
 800fb3a:	617b      	str	r3, [r7, #20]
 800fb3c:	697b      	ldr	r3, [r7, #20]
 800fb3e:	2b18      	cmp	r3, #24
 800fb40:	d9b3      	bls.n	800faaa <77b737f3175c59c67851de07d0921a2dae9a70ab+0x1a>
 800fb42:	bf00      	nop
 800fb44:	bf00      	nop
 800fb46:	371c      	adds	r7, #28
 800fb48:	46bd      	mov	sp, r7
 800fb4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fb4e:	bf00      	nop
 800fb50:	20000040 	.word	0x20000040
 800fb54:	0802e4d4 	.word	0x0802e4d4
 800fb58:	0802e5f8 	.word	0x0802e5f8

0800fb5c <5abd2f358b9e462fcede09cdd96a94c4ca379573>:
 800fb5c:	b580      	push	{r7, lr}
 800fb5e:	b082      	sub	sp, #8
 800fb60:	af00      	add	r7, sp, #0
 800fb62:	4b10      	ldr	r3, [pc, #64]	; (800fba4 <5abd2f358b9e462fcede09cdd96a94c4ca379573+0x48>)
 800fb64:	681b      	ldr	r3, [r3, #0]
 800fb66:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fb6a:	603b      	str	r3, [r7, #0]
 800fb6c:	2300      	movs	r3, #0
 800fb6e:	607b      	str	r3, [r7, #4]
 800fb70:	e010      	b.n	800fb94 <5abd2f358b9e462fcede09cdd96a94c4ca379573+0x38>
 800fb72:	f7f6 fa6d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fb76:	687b      	ldr	r3, [r7, #4]
 800fb78:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fb7c:	fb02 f303 	mul.w	r3, r2, r3
 800fb80:	683a      	ldr	r2, [r7, #0]
 800fb82:	4413      	add	r3, r2
 800fb84:	4618      	mov	r0, r3
 800fb86:	f001 f968 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800fb8a:	f7f6 fa81 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fb8e:	687b      	ldr	r3, [r7, #4]
 800fb90:	3301      	adds	r3, #1
 800fb92:	607b      	str	r3, [r7, #4]
 800fb94:	687b      	ldr	r3, [r7, #4]
 800fb96:	2b18      	cmp	r3, #24
 800fb98:	d9eb      	bls.n	800fb72 <5abd2f358b9e462fcede09cdd96a94c4ca379573+0x16>
 800fb9a:	bf00      	nop
 800fb9c:	bf00      	nop
 800fb9e:	3708      	adds	r7, #8
 800fba0:	46bd      	mov	sp, r7
 800fba2:	bd80      	pop	{r7, pc}
 800fba4:	20000040 	.word	0x20000040

0800fba8 <e1319048c142912ea91dcc918ab796551ce50481>:
 800fba8:	b580      	push	{r7, lr}
 800fbaa:	b084      	sub	sp, #16
 800fbac:	af00      	add	r7, sp, #0
 800fbae:	4b13      	ldr	r3, [pc, #76]	; (800fbfc <e1319048c142912ea91dcc918ab796551ce50481+0x54>)
 800fbb0:	681b      	ldr	r3, [r3, #0]
 800fbb2:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fbb6:	607b      	str	r3, [r7, #4]
 800fbb8:	2300      	movs	r3, #0
 800fbba:	60fb      	str	r3, [r7, #12]
 800fbbc:	2300      	movs	r3, #0
 800fbbe:	60bb      	str	r3, [r7, #8]
 800fbc0:	e014      	b.n	800fbec <e1319048c142912ea91dcc918ab796551ce50481+0x44>
 800fbc2:	f7f6 fa45 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fbc6:	687a      	ldr	r2, [r7, #4]
 800fbc8:	68bb      	ldr	r3, [r7, #8]
 800fbca:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fbce:	fb01 f303 	mul.w	r3, r1, r3
 800fbd2:	4413      	add	r3, r2
 800fbd4:	3301      	adds	r3, #1
 800fbd6:	781b      	ldrb	r3, [r3, #0]
 800fbd8:	2b00      	cmp	r3, #0
 800fbda:	d102      	bne.n	800fbe2 <e1319048c142912ea91dcc918ab796551ce50481+0x3a>
 800fbdc:	68fb      	ldr	r3, [r7, #12]
 800fbde:	3301      	adds	r3, #1
 800fbe0:	60fb      	str	r3, [r7, #12]
 800fbe2:	f7f6 fa55 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fbe6:	68bb      	ldr	r3, [r7, #8]
 800fbe8:	3301      	adds	r3, #1
 800fbea:	60bb      	str	r3, [r7, #8]
 800fbec:	68bb      	ldr	r3, [r7, #8]
 800fbee:	2b18      	cmp	r3, #24
 800fbf0:	d9e7      	bls.n	800fbc2 <e1319048c142912ea91dcc918ab796551ce50481+0x1a>
 800fbf2:	68fb      	ldr	r3, [r7, #12]
 800fbf4:	4618      	mov	r0, r3
 800fbf6:	3710      	adds	r7, #16
 800fbf8:	46bd      	mov	sp, r7
 800fbfa:	bd80      	pop	{r7, pc}
 800fbfc:	20000040 	.word	0x20000040

0800fc00 <QUEUE_MacNotifySuperframeStart>:
 800fc00:	b480      	push	{r7}
 800fc02:	b083      	sub	sp, #12
 800fc04:	af00      	add	r7, sp, #0
 800fc06:	4b27      	ldr	r3, [pc, #156]	; (800fca4 <QUEUE_MacNotifySuperframeStart+0xa4>)
 800fc08:	681b      	ldr	r3, [r3, #0]
 800fc0a:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fc0e:	607b      	str	r3, [r7, #4]
 800fc10:	687b      	ldr	r3, [r7, #4]
 800fc12:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc16:	f8d3 3ef0 	ldr.w	r3, [r3, #3824]	; 0xef0
 800fc1a:	3301      	adds	r3, #1
 800fc1c:	687a      	ldr	r2, [r7, #4]
 800fc1e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800fc22:	f8c2 3ef0 	str.w	r3, [r2, #3824]	; 0xef0
 800fc26:	687b      	ldr	r3, [r7, #4]
 800fc28:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc2c:	f8d3 3ef0 	ldr.w	r3, [r3, #3824]	; 0xef0
 800fc30:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800fc34:	d124      	bne.n	800fc80 <QUEUE_MacNotifySuperframeStart+0x80>
 800fc36:	687b      	ldr	r3, [r7, #4]
 800fc38:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc3c:	461a      	mov	r2, r3
 800fc3e:	2300      	movs	r3, #0
 800fc40:	f8c2 3ef0 	str.w	r3, [r2, #3824]	; 0xef0
 800fc44:	687b      	ldr	r3, [r7, #4]
 800fc46:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc4a:	f8d3 2eec 	ldr.w	r2, [r3, #3820]	; 0xeec
 800fc4e:	687b      	ldr	r3, [r7, #4]
 800fc50:	f503 53f6 	add.w	r3, r3, #7872	; 0x1ec0
 800fc54:	331c      	adds	r3, #28
 800fc56:	429a      	cmp	r2, r3
 800fc58:	d109      	bne.n	800fc6e <QUEUE_MacNotifySuperframeStart+0x6e>
 800fc5a:	687b      	ldr	r3, [r7, #4]
 800fc5c:	f503 53f7 	add.w	r3, r3, #7904	; 0x1ee0
 800fc60:	3304      	adds	r3, #4
 800fc62:	687a      	ldr	r2, [r7, #4]
 800fc64:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800fc68:	f8c2 3eec 	str.w	r3, [r2, #3820]	; 0xeec
 800fc6c:	e008      	b.n	800fc80 <QUEUE_MacNotifySuperframeStart+0x80>
 800fc6e:	687b      	ldr	r3, [r7, #4]
 800fc70:	f503 53f6 	add.w	r3, r3, #7872	; 0x1ec0
 800fc74:	331c      	adds	r3, #28
 800fc76:	687a      	ldr	r2, [r7, #4]
 800fc78:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 800fc7c:	f8c2 3eec 	str.w	r3, [r2, #3820]	; 0xeec
 800fc80:	687b      	ldr	r3, [r7, #4]
 800fc82:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc86:	2200      	movs	r2, #0
 800fc88:	f883 2ef5 	strb.w	r2, [r3, #3829]	; 0xef5
 800fc8c:	687b      	ldr	r3, [r7, #4]
 800fc8e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fc92:	2200      	movs	r2, #0
 800fc94:	f883 2ef4 	strb.w	r2, [r3, #3828]	; 0xef4
 800fc98:	bf00      	nop
 800fc9a:	370c      	adds	r7, #12
 800fc9c:	46bd      	mov	sp, r7
 800fc9e:	bc80      	pop	{r7}
 800fca0:	4770      	bx	lr
 800fca2:	bf00      	nop
 800fca4:	20000040 	.word	0x20000040

0800fca8 <207e15ee7bccb2eb76dd4c1d27604170dc079160>:
 800fca8:	b580      	push	{r7, lr}
 800fcaa:	b084      	sub	sp, #16
 800fcac:	af00      	add	r7, sp, #0
 800fcae:	4b1b      	ldr	r3, [pc, #108]	; (800fd1c <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x74>)
 800fcb0:	681b      	ldr	r3, [r3, #0]
 800fcb2:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fcb6:	60bb      	str	r3, [r7, #8]
 800fcb8:	2300      	movs	r3, #0
 800fcba:	60fb      	str	r3, [r7, #12]
 800fcbc:	e025      	b.n	800fd0a <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x62>
 800fcbe:	f7f6 f9c7 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fcc2:	68ba      	ldr	r2, [r7, #8]
 800fcc4:	68fb      	ldr	r3, [r7, #12]
 800fcc6:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fcca:	fb01 f303 	mul.w	r3, r1, r3
 800fcce:	4413      	add	r3, r2
 800fcd0:	3301      	adds	r3, #1
 800fcd2:	781b      	ldrb	r3, [r3, #0]
 800fcd4:	2b41      	cmp	r3, #65	; 0x41
 800fcd6:	d113      	bne.n	800fd00 <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x58>
 800fcd8:	68ba      	ldr	r2, [r7, #8]
 800fcda:	68fb      	ldr	r3, [r7, #12]
 800fcdc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fce0:	fb01 f303 	mul.w	r3, r1, r3
 800fce4:	4413      	add	r3, r2
 800fce6:	781b      	ldrb	r3, [r3, #0]
 800fce8:	2b31      	cmp	r3, #49	; 0x31
 800fcea:	d009      	beq.n	800fd00 <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x58>
 800fcec:	f7f6 f9d0 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fcf0:	68fb      	ldr	r3, [r7, #12]
 800fcf2:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fcf6:	fb02 f303 	mul.w	r3, r2, r3
 800fcfa:	68ba      	ldr	r2, [r7, #8]
 800fcfc:	4413      	add	r3, r2
 800fcfe:	e008      	b.n	800fd12 <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x6a>
 800fd00:	f7f6 f9c6 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fd04:	68fb      	ldr	r3, [r7, #12]
 800fd06:	3301      	adds	r3, #1
 800fd08:	60fb      	str	r3, [r7, #12]
 800fd0a:	68fb      	ldr	r3, [r7, #12]
 800fd0c:	2b18      	cmp	r3, #24
 800fd0e:	d9d6      	bls.n	800fcbe <207e15ee7bccb2eb76dd4c1d27604170dc079160+0x16>
 800fd10:	2300      	movs	r3, #0
 800fd12:	4618      	mov	r0, r3
 800fd14:	3710      	adds	r7, #16
 800fd16:	46bd      	mov	sp, r7
 800fd18:	bd80      	pop	{r7, pc}
 800fd1a:	bf00      	nop
 800fd1c:	20000040 	.word	0x20000040

0800fd20 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00>:
 800fd20:	b580      	push	{r7, lr}
 800fd22:	b084      	sub	sp, #16
 800fd24:	af00      	add	r7, sp, #0
 800fd26:	4b1b      	ldr	r3, [pc, #108]	; (800fd94 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x74>)
 800fd28:	681b      	ldr	r3, [r3, #0]
 800fd2a:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fd2e:	60bb      	str	r3, [r7, #8]
 800fd30:	2300      	movs	r3, #0
 800fd32:	60fb      	str	r3, [r7, #12]
 800fd34:	e025      	b.n	800fd82 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x62>
 800fd36:	f7f6 f98b 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fd3a:	68ba      	ldr	r2, [r7, #8]
 800fd3c:	68fb      	ldr	r3, [r7, #12]
 800fd3e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fd42:	fb01 f303 	mul.w	r3, r1, r3
 800fd46:	4413      	add	r3, r2
 800fd48:	3301      	adds	r3, #1
 800fd4a:	781b      	ldrb	r3, [r3, #0]
 800fd4c:	2b41      	cmp	r3, #65	; 0x41
 800fd4e:	d113      	bne.n	800fd78 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x58>
 800fd50:	68ba      	ldr	r2, [r7, #8]
 800fd52:	68fb      	ldr	r3, [r7, #12]
 800fd54:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fd58:	fb01 f303 	mul.w	r3, r1, r3
 800fd5c:	4413      	add	r3, r2
 800fd5e:	781b      	ldrb	r3, [r3, #0]
 800fd60:	2b31      	cmp	r3, #49	; 0x31
 800fd62:	d109      	bne.n	800fd78 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x58>
 800fd64:	f7f6 f994 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fd68:	68fb      	ldr	r3, [r7, #12]
 800fd6a:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fd6e:	fb02 f303 	mul.w	r3, r2, r3
 800fd72:	68ba      	ldr	r2, [r7, #8]
 800fd74:	4413      	add	r3, r2
 800fd76:	e008      	b.n	800fd8a <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x6a>
 800fd78:	f7f6 f98a 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fd7c:	68fb      	ldr	r3, [r7, #12]
 800fd7e:	3301      	adds	r3, #1
 800fd80:	60fb      	str	r3, [r7, #12]
 800fd82:	68fb      	ldr	r3, [r7, #12]
 800fd84:	2b18      	cmp	r3, #24
 800fd86:	d9d6      	bls.n	800fd36 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00+0x16>
 800fd88:	2300      	movs	r3, #0
 800fd8a:	4618      	mov	r0, r3
 800fd8c:	3710      	adds	r7, #16
 800fd8e:	46bd      	mov	sp, r7
 800fd90:	bd80      	pop	{r7, pc}
 800fd92:	bf00      	nop
 800fd94:	20000040 	.word	0x20000040

0800fd98 <43f11770a6d1a267a732a77a0ad450aed83746a6>:
 800fd98:	b580      	push	{r7, lr}
 800fd9a:	b088      	sub	sp, #32
 800fd9c:	af00      	add	r7, sp, #0
 800fd9e:	6078      	str	r0, [r7, #4]
 800fda0:	4b25      	ldr	r3, [pc, #148]	; (800fe38 <43f11770a6d1a267a732a77a0ad450aed83746a6+0xa0>)
 800fda2:	681b      	ldr	r3, [r3, #0]
 800fda4:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fda8:	617b      	str	r3, [r7, #20]
 800fdaa:	2300      	movs	r3, #0
 800fdac:	61fb      	str	r3, [r7, #28]
 800fdae:	2300      	movs	r3, #0
 800fdb0:	61bb      	str	r3, [r7, #24]
 800fdb2:	e039      	b.n	800fe28 <43f11770a6d1a267a732a77a0ad450aed83746a6+0x90>
 800fdb4:	f7f6 f94c 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fdb8:	697a      	ldr	r2, [r7, #20]
 800fdba:	69bb      	ldr	r3, [r7, #24]
 800fdbc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fdc0:	fb01 f303 	mul.w	r3, r1, r3
 800fdc4:	4413      	add	r3, r2
 800fdc6:	3301      	adds	r3, #1
 800fdc8:	781b      	ldrb	r3, [r3, #0]
 800fdca:	2b41      	cmp	r3, #65	; 0x41
 800fdcc:	d127      	bne.n	800fe1e <43f11770a6d1a267a732a77a0ad450aed83746a6+0x86>
 800fdce:	697a      	ldr	r2, [r7, #20]
 800fdd0:	69bb      	ldr	r3, [r7, #24]
 800fdd2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fdd6:	fb01 f303 	mul.w	r3, r1, r3
 800fdda:	4413      	add	r3, r2
 800fddc:	781b      	ldrb	r3, [r3, #0]
 800fdde:	2b53      	cmp	r3, #83	; 0x53
 800fde0:	d11d      	bne.n	800fe1e <43f11770a6d1a267a732a77a0ad450aed83746a6+0x86>
 800fde2:	697a      	ldr	r2, [r7, #20]
 800fde4:	69bb      	ldr	r3, [r7, #24]
 800fde6:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fdea:	fb01 f303 	mul.w	r3, r1, r3
 800fdee:	4413      	add	r3, r2
 800fdf0:	3393      	adds	r3, #147	; 0x93
 800fdf2:	781b      	ldrb	r3, [r3, #0]
 800fdf4:	2b00      	cmp	r3, #0
 800fdf6:	d112      	bne.n	800fe1e <43f11770a6d1a267a732a77a0ad450aed83746a6+0x86>
 800fdf8:	69bb      	ldr	r3, [r7, #24]
 800fdfa:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fdfe:	fb02 f303 	mul.w	r3, r2, r3
 800fe02:	3340      	adds	r3, #64	; 0x40
 800fe04:	697a      	ldr	r2, [r7, #20]
 800fe06:	4413      	add	r3, r2
 800fe08:	3301      	adds	r3, #1
 800fe0a:	4619      	mov	r1, r3
 800fe0c:	6878      	ldr	r0, [r7, #4]
 800fe0e:	f7ff fa8d 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800fe12:	4603      	mov	r3, r0
 800fe14:	2b00      	cmp	r3, #0
 800fe16:	d002      	beq.n	800fe1e <43f11770a6d1a267a732a77a0ad450aed83746a6+0x86>
 800fe18:	69fb      	ldr	r3, [r7, #28]
 800fe1a:	3301      	adds	r3, #1
 800fe1c:	61fb      	str	r3, [r7, #28]
 800fe1e:	f7f6 f937 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fe22:	69bb      	ldr	r3, [r7, #24]
 800fe24:	3301      	adds	r3, #1
 800fe26:	61bb      	str	r3, [r7, #24]
 800fe28:	69bb      	ldr	r3, [r7, #24]
 800fe2a:	2b18      	cmp	r3, #24
 800fe2c:	d9c2      	bls.n	800fdb4 <43f11770a6d1a267a732a77a0ad450aed83746a6+0x1c>
 800fe2e:	69fb      	ldr	r3, [r7, #28]
 800fe30:	4618      	mov	r0, r3
 800fe32:	3720      	adds	r7, #32
 800fe34:	46bd      	mov	sp, r7
 800fe36:	bd80      	pop	{r7, pc}
 800fe38:	20000040 	.word	0x20000040

0800fe3c <794cbfdf72fe426231c38719436bf778a99748c2>:
 800fe3c:	b580      	push	{r7, lr}
 800fe3e:	b086      	sub	sp, #24
 800fe40:	af00      	add	r7, sp, #0
 800fe42:	4b18      	ldr	r3, [pc, #96]	; (800fea4 <794cbfdf72fe426231c38719436bf778a99748c2+0x68>)
 800fe44:	681b      	ldr	r3, [r3, #0]
 800fe46:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800fe4a:	60fb      	str	r3, [r7, #12]
 800fe4c:	2300      	movs	r3, #0
 800fe4e:	617b      	str	r3, [r7, #20]
 800fe50:	2300      	movs	r3, #0
 800fe52:	613b      	str	r3, [r7, #16]
 800fe54:	e01e      	b.n	800fe94 <794cbfdf72fe426231c38719436bf778a99748c2+0x58>
 800fe56:	f7f6 f8fb 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fe5a:	68fa      	ldr	r2, [r7, #12]
 800fe5c:	693b      	ldr	r3, [r7, #16]
 800fe5e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fe62:	fb01 f303 	mul.w	r3, r1, r3
 800fe66:	4413      	add	r3, r2
 800fe68:	3301      	adds	r3, #1
 800fe6a:	781b      	ldrb	r3, [r3, #0]
 800fe6c:	2b41      	cmp	r3, #65	; 0x41
 800fe6e:	d10c      	bne.n	800fe8a <794cbfdf72fe426231c38719436bf778a99748c2+0x4e>
 800fe70:	68fa      	ldr	r2, [r7, #12]
 800fe72:	693b      	ldr	r3, [r7, #16]
 800fe74:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fe78:	fb01 f303 	mul.w	r3, r1, r3
 800fe7c:	4413      	add	r3, r2
 800fe7e:	781b      	ldrb	r3, [r3, #0]
 800fe80:	2b53      	cmp	r3, #83	; 0x53
 800fe82:	d102      	bne.n	800fe8a <794cbfdf72fe426231c38719436bf778a99748c2+0x4e>
 800fe84:	697b      	ldr	r3, [r7, #20]
 800fe86:	3301      	adds	r3, #1
 800fe88:	617b      	str	r3, [r7, #20]
 800fe8a:	f7f6 f901 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800fe8e:	693b      	ldr	r3, [r7, #16]
 800fe90:	3301      	adds	r3, #1
 800fe92:	613b      	str	r3, [r7, #16]
 800fe94:	693b      	ldr	r3, [r7, #16]
 800fe96:	2b18      	cmp	r3, #24
 800fe98:	d9dd      	bls.n	800fe56 <794cbfdf72fe426231c38719436bf778a99748c2+0x1a>
 800fe9a:	697b      	ldr	r3, [r7, #20]
 800fe9c:	4618      	mov	r0, r3
 800fe9e:	3718      	adds	r7, #24
 800fea0:	46bd      	mov	sp, r7
 800fea2:	bd80      	pop	{r7, pc}
 800fea4:	20000040 	.word	0x20000040

0800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>:
 800fea8:	b580      	push	{r7, lr}
 800feaa:	b088      	sub	sp, #32
 800feac:	af00      	add	r7, sp, #0
 800feae:	6078      	str	r0, [r7, #4]
 800feb0:	4b2f      	ldr	r3, [pc, #188]	; (800ff70 <9384e57fa8b386170558ee17f590b88f318c4273+0xc8>)
 800feb2:	681b      	ldr	r3, [r3, #0]
 800feb4:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800feb8:	61bb      	str	r3, [r7, #24]
 800feba:	2300      	movs	r3, #0
 800febc:	61fb      	str	r3, [r7, #28]
 800febe:	e04e      	b.n	800ff5e <9384e57fa8b386170558ee17f590b88f318c4273+0xb6>
 800fec0:	f7f6 f8c6 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800fec4:	69ba      	ldr	r2, [r7, #24]
 800fec6:	69fb      	ldr	r3, [r7, #28]
 800fec8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fecc:	fb01 f303 	mul.w	r3, r1, r3
 800fed0:	4413      	add	r3, r2
 800fed2:	781b      	ldrb	r3, [r3, #0]
 800fed4:	2b53      	cmp	r3, #83	; 0x53
 800fed6:	d13d      	bne.n	800ff54 <9384e57fa8b386170558ee17f590b88f318c4273+0xac>
 800fed8:	69ba      	ldr	r2, [r7, #24]
 800feda:	69fb      	ldr	r3, [r7, #28]
 800fedc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800fee0:	fb01 f303 	mul.w	r3, r1, r3
 800fee4:	4413      	add	r3, r2
 800fee6:	3393      	adds	r3, #147	; 0x93
 800fee8:	781b      	ldrb	r3, [r3, #0]
 800feea:	2b00      	cmp	r3, #0
 800feec:	d132      	bne.n	800ff54 <9384e57fa8b386170558ee17f590b88f318c4273+0xac>
 800feee:	69fb      	ldr	r3, [r7, #28]
 800fef0:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800fef4:	fb02 f303 	mul.w	r3, r2, r3
 800fef8:	3340      	adds	r3, #64	; 0x40
 800fefa:	69ba      	ldr	r2, [r7, #24]
 800fefc:	4413      	add	r3, r2
 800fefe:	3301      	adds	r3, #1
 800ff00:	4619      	mov	r1, r3
 800ff02:	6878      	ldr	r0, [r7, #4]
 800ff04:	f7ff fa12 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800ff08:	4603      	mov	r3, r0
 800ff0a:	2b00      	cmp	r3, #0
 800ff0c:	d022      	beq.n	800ff54 <9384e57fa8b386170558ee17f590b88f318c4273+0xac>
 800ff0e:	69ba      	ldr	r2, [r7, #24]
 800ff10:	69fb      	ldr	r3, [r7, #28]
 800ff12:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ff16:	fb01 f303 	mul.w	r3, r1, r3
 800ff1a:	4413      	add	r3, r2
 800ff1c:	3301      	adds	r3, #1
 800ff1e:	781b      	ldrb	r3, [r3, #0]
 800ff20:	2b31      	cmp	r3, #49	; 0x31
 800ff22:	d017      	beq.n	800ff54 <9384e57fa8b386170558ee17f590b88f318c4273+0xac>
 800ff24:	4a13      	ldr	r2, [pc, #76]	; (800ff74 <9384e57fa8b386170558ee17f590b88f318c4273+0xcc>)
 800ff26:	f107 0308 	add.w	r3, r7, #8
 800ff2a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ff2e:	e883 0003 	stmia.w	r3, {r0, r1}
 800ff32:	4a11      	ldr	r2, [pc, #68]	; (800ff78 <9384e57fa8b386170558ee17f590b88f318c4273+0xd0>)
 800ff34:	f107 0308 	add.w	r3, r7, #8
 800ff38:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ff3c:	f005 f964 	bl	8015208 <LOGGER_PrintLine>
 800ff40:	69fb      	ldr	r3, [r7, #28]
 800ff42:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800ff46:	fb02 f303 	mul.w	r3, r2, r3
 800ff4a:	69ba      	ldr	r2, [r7, #24]
 800ff4c:	4413      	add	r3, r2
 800ff4e:	4618      	mov	r0, r3
 800ff50:	f000 ff83 	bl	8010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>
 800ff54:	f7f6 f89c 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 800ff58:	69fb      	ldr	r3, [r7, #28]
 800ff5a:	3301      	adds	r3, #1
 800ff5c:	61fb      	str	r3, [r7, #28]
 800ff5e:	69fb      	ldr	r3, [r7, #28]
 800ff60:	2b18      	cmp	r3, #24
 800ff62:	d9ad      	bls.n	800fec0 <9384e57fa8b386170558ee17f590b88f318c4273+0x18>
 800ff64:	bf00      	nop
 800ff66:	bf00      	nop
 800ff68:	3720      	adds	r7, #32
 800ff6a:	46bd      	mov	sp, r7
 800ff6c:	bd80      	pop	{r7, pc}
 800ff6e:	bf00      	nop
 800ff70:	20000040 	.word	0x20000040
 800ff74:	0802e620 	.word	0x0802e620
 800ff78:	0802e60c 	.word	0x0802e60c

0800ff7c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725>:
 800ff7c:	b580      	push	{r7, lr}
 800ff7e:	b084      	sub	sp, #16
 800ff80:	af00      	add	r7, sp, #0
 800ff82:	6078      	str	r0, [r7, #4]
 800ff84:	6039      	str	r1, [r7, #0]
 800ff86:	687b      	ldr	r3, [r7, #4]
 800ff88:	781b      	ldrb	r3, [r3, #0]
 800ff8a:	2b02      	cmp	r3, #2
 800ff8c:	d157      	bne.n	801003e <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xc2>
 800ff8e:	683b      	ldr	r3, [r7, #0]
 800ff90:	781b      	ldrb	r3, [r3, #0]
 800ff92:	2b02      	cmp	r3, #2
 800ff94:	d155      	bne.n	8010042 <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xc6>
 800ff96:	4b2d      	ldr	r3, [pc, #180]	; (801004c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xd0>)
 800ff98:	681b      	ldr	r3, [r3, #0]
 800ff9a:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 800ff9e:	60bb      	str	r3, [r7, #8]
 800ffa0:	2300      	movs	r3, #0
 800ffa2:	60fb      	str	r3, [r7, #12]
 800ffa4:	e047      	b.n	8010036 <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xba>
 800ffa6:	f7f6 f853 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 800ffaa:	68ba      	ldr	r2, [r7, #8]
 800ffac:	68fb      	ldr	r3, [r7, #12]
 800ffae:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ffb2:	fb01 f303 	mul.w	r3, r1, r3
 800ffb6:	4413      	add	r3, r2
 800ffb8:	3301      	adds	r3, #1
 800ffba:	781b      	ldrb	r3, [r3, #0]
 800ffbc:	2b40      	cmp	r3, #64	; 0x40
 800ffbe:	d135      	bne.n	801002c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xb0>
 800ffc0:	68ba      	ldr	r2, [r7, #8]
 800ffc2:	68fb      	ldr	r3, [r7, #12]
 800ffc4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ffc8:	fb01 f303 	mul.w	r3, r1, r3
 800ffcc:	4413      	add	r3, r2
 800ffce:	333f      	adds	r3, #63	; 0x3f
 800ffd0:	781b      	ldrb	r3, [r3, #0]
 800ffd2:	f083 0301 	eor.w	r3, r3, #1
 800ffd6:	b2db      	uxtb	r3, r3
 800ffd8:	2b00      	cmp	r3, #0
 800ffda:	d027      	beq.n	801002c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xb0>
 800ffdc:	68fb      	ldr	r3, [r7, #12]
 800ffde:	f44f 729e 	mov.w	r2, #316	; 0x13c
 800ffe2:	fb02 f303 	mul.w	r3, r2, r3
 800ffe6:	3340      	adds	r3, #64	; 0x40
 800ffe8:	68ba      	ldr	r2, [r7, #8]
 800ffea:	4413      	add	r3, r2
 800ffec:	3301      	adds	r3, #1
 800ffee:	4619      	mov	r1, r3
 800fff0:	6878      	ldr	r0, [r7, #4]
 800fff2:	f7ff f99b 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 800fff6:	4603      	mov	r3, r0
 800fff8:	2b00      	cmp	r3, #0
 800fffa:	d017      	beq.n	801002c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xb0>
 800fffc:	68ba      	ldr	r2, [r7, #8]
 800fffe:	68fb      	ldr	r3, [r7, #12]
 8010000:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010004:	fb01 f303 	mul.w	r3, r1, r3
 8010008:	4413      	add	r3, r2
 801000a:	781b      	ldrb	r3, [r3, #0]
 801000c:	2b6f      	cmp	r3, #111	; 0x6f
 801000e:	d90d      	bls.n	801002c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xb0>
 8010010:	68fb      	ldr	r3, [r7, #12]
 8010012:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010016:	fb02 f303 	mul.w	r3, r2, r3
 801001a:	3340      	adds	r3, #64	; 0x40
 801001c:	68ba      	ldr	r2, [r7, #8]
 801001e:	4413      	add	r3, r2
 8010020:	3301      	adds	r3, #1
 8010022:	2211      	movs	r2, #17
 8010024:	6839      	ldr	r1, [r7, #0]
 8010026:	4618      	mov	r0, r3
 8010028:	f01b f905 	bl	802b236 <memcpy>
 801002c:	f7f6 f830 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010030:	68fb      	ldr	r3, [r7, #12]
 8010032:	3301      	adds	r3, #1
 8010034:	60fb      	str	r3, [r7, #12]
 8010036:	68fb      	ldr	r3, [r7, #12]
 8010038:	2b18      	cmp	r3, #24
 801003a:	d9b4      	bls.n	800ffa6 <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0x2a>
 801003c:	e002      	b.n	8010044 <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xc8>
 801003e:	bf00      	nop
 8010040:	e000      	b.n	8010044 <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725+0xc8>
 8010042:	bf00      	nop
 8010044:	3710      	adds	r7, #16
 8010046:	46bd      	mov	sp, r7
 8010048:	bd80      	pop	{r7, pc}
 801004a:	bf00      	nop
 801004c:	20000040 	.word	0x20000040

08010050 <d9cd3de8850ba05653155beecb1d40906820436e>:
 8010050:	b580      	push	{r7, lr}
 8010052:	b088      	sub	sp, #32
 8010054:	af00      	add	r7, sp, #0
 8010056:	4603      	mov	r3, r0
 8010058:	71fb      	strb	r3, [r7, #7]
 801005a:	4b94      	ldr	r3, [pc, #592]	; (80102ac <d9cd3de8850ba05653155beecb1d40906820436e+0x25c>)
 801005c:	681b      	ldr	r3, [r3, #0]
 801005e:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010062:	60bb      	str	r3, [r7, #8]
 8010064:	2300      	movs	r3, #0
 8010066:	61fb      	str	r3, [r7, #28]
 8010068:	2300      	movs	r3, #0
 801006a:	61bb      	str	r3, [r7, #24]
 801006c:	e060      	b.n	8010130 <d9cd3de8850ba05653155beecb1d40906820436e+0xe0>
 801006e:	f7f5 ffef 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010072:	68ba      	ldr	r2, [r7, #8]
 8010074:	69bb      	ldr	r3, [r7, #24]
 8010076:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801007a:	fb01 f303 	mul.w	r3, r1, r3
 801007e:	4413      	add	r3, r2
 8010080:	3301      	adds	r3, #1
 8010082:	781b      	ldrb	r3, [r3, #0]
 8010084:	2b40      	cmp	r3, #64	; 0x40
 8010086:	d14e      	bne.n	8010126 <d9cd3de8850ba05653155beecb1d40906820436e+0xd6>
 8010088:	68ba      	ldr	r2, [r7, #8]
 801008a:	69bb      	ldr	r3, [r7, #24]
 801008c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010090:	fb01 f303 	mul.w	r3, r1, r3
 8010094:	4413      	add	r3, r2
 8010096:	3355      	adds	r3, #85	; 0x55
 8010098:	781b      	ldrb	r3, [r3, #0]
 801009a:	2b00      	cmp	r3, #0
 801009c:	d043      	beq.n	8010126 <d9cd3de8850ba05653155beecb1d40906820436e+0xd6>
 801009e:	68ba      	ldr	r2, [r7, #8]
 80100a0:	69bb      	ldr	r3, [r7, #24]
 80100a2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80100a6:	fb01 f303 	mul.w	r3, r1, r3
 80100aa:	4413      	add	r3, r2
 80100ac:	781b      	ldrb	r3, [r3, #0]
 80100ae:	2b90      	cmp	r3, #144	; 0x90
 80100b0:	d031      	beq.n	8010116 <d9cd3de8850ba05653155beecb1d40906820436e+0xc6>
 80100b2:	68ba      	ldr	r2, [r7, #8]
 80100b4:	69bb      	ldr	r3, [r7, #24]
 80100b6:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80100ba:	fb01 f303 	mul.w	r3, r1, r3
 80100be:	4413      	add	r3, r2
 80100c0:	781b      	ldrb	r3, [r3, #0]
 80100c2:	2b50      	cmp	r3, #80	; 0x50
 80100c4:	d10e      	bne.n	80100e4 <d9cd3de8850ba05653155beecb1d40906820436e+0x94>
 80100c6:	69bb      	ldr	r3, [r7, #24]
 80100c8:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80100cc:	fb02 f303 	mul.w	r3, r2, r3
 80100d0:	3340      	adds	r3, #64	; 0x40
 80100d2:	68ba      	ldr	r2, [r7, #8]
 80100d4:	4413      	add	r3, r2
 80100d6:	3301      	adds	r3, #1
 80100d8:	4618      	mov	r0, r3
 80100da:	f7ff f821 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80100de:	4603      	mov	r3, r0
 80100e0:	2b00      	cmp	r3, #0
 80100e2:	d118      	bne.n	8010116 <d9cd3de8850ba05653155beecb1d40906820436e+0xc6>
 80100e4:	68ba      	ldr	r2, [r7, #8]
 80100e6:	69bb      	ldr	r3, [r7, #24]
 80100e8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80100ec:	fb01 f303 	mul.w	r3, r1, r3
 80100f0:	4413      	add	r3, r2
 80100f2:	781b      	ldrb	r3, [r3, #0]
 80100f4:	2b73      	cmp	r3, #115	; 0x73
 80100f6:	d116      	bne.n	8010126 <d9cd3de8850ba05653155beecb1d40906820436e+0xd6>
 80100f8:	69bb      	ldr	r3, [r7, #24]
 80100fa:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80100fe:	fb02 f303 	mul.w	r3, r2, r3
 8010102:	3340      	adds	r3, #64	; 0x40
 8010104:	68ba      	ldr	r2, [r7, #8]
 8010106:	4413      	add	r3, r2
 8010108:	3301      	adds	r3, #1
 801010a:	4618      	mov	r0, r3
 801010c:	f7ff f808 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8010110:	4603      	mov	r3, r0
 8010112:	2b00      	cmp	r3, #0
 8010114:	d007      	beq.n	8010126 <d9cd3de8850ba05653155beecb1d40906820436e+0xd6>
 8010116:	69bb      	ldr	r3, [r7, #24]
 8010118:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801011c:	fb02 f303 	mul.w	r3, r2, r3
 8010120:	68ba      	ldr	r2, [r7, #8]
 8010122:	4413      	add	r3, r2
 8010124:	61fb      	str	r3, [r7, #28]
 8010126:	f7f5 ffb3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801012a:	69bb      	ldr	r3, [r7, #24]
 801012c:	3301      	adds	r3, #1
 801012e:	61bb      	str	r3, [r7, #24]
 8010130:	69bb      	ldr	r3, [r7, #24]
 8010132:	2b18      	cmp	r3, #24
 8010134:	d99b      	bls.n	801006e <d9cd3de8850ba05653155beecb1d40906820436e+0x1e>
 8010136:	69fb      	ldr	r3, [r7, #28]
 8010138:	2b00      	cmp	r3, #0
 801013a:	d138      	bne.n	80101ae <d9cd3de8850ba05653155beecb1d40906820436e+0x15e>
 801013c:	2300      	movs	r3, #0
 801013e:	617b      	str	r3, [r7, #20]
 8010140:	e032      	b.n	80101a8 <d9cd3de8850ba05653155beecb1d40906820436e+0x158>
 8010142:	f7f5 ff85 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010146:	68ba      	ldr	r2, [r7, #8]
 8010148:	697b      	ldr	r3, [r7, #20]
 801014a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801014e:	fb01 f303 	mul.w	r3, r1, r3
 8010152:	4413      	add	r3, r2
 8010154:	3301      	adds	r3, #1
 8010156:	781b      	ldrb	r3, [r3, #0]
 8010158:	2b40      	cmp	r3, #64	; 0x40
 801015a:	d120      	bne.n	801019e <d9cd3de8850ba05653155beecb1d40906820436e+0x14e>
 801015c:	68ba      	ldr	r2, [r7, #8]
 801015e:	697b      	ldr	r3, [r7, #20]
 8010160:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010164:	fb01 f303 	mul.w	r3, r1, r3
 8010168:	4413      	add	r3, r2
 801016a:	781b      	ldrb	r3, [r3, #0]
 801016c:	2b50      	cmp	r3, #80	; 0x50
 801016e:	d116      	bne.n	801019e <d9cd3de8850ba05653155beecb1d40906820436e+0x14e>
 8010170:	697b      	ldr	r3, [r7, #20]
 8010172:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010176:	fb02 f303 	mul.w	r3, r2, r3
 801017a:	3340      	adds	r3, #64	; 0x40
 801017c:	68ba      	ldr	r2, [r7, #8]
 801017e:	4413      	add	r3, r2
 8010180:	3301      	adds	r3, #1
 8010182:	4618      	mov	r0, r3
 8010184:	f7fe ffcc 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8010188:	4603      	mov	r3, r0
 801018a:	2b00      	cmp	r3, #0
 801018c:	d007      	beq.n	801019e <d9cd3de8850ba05653155beecb1d40906820436e+0x14e>
 801018e:	697b      	ldr	r3, [r7, #20]
 8010190:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010194:	fb02 f303 	mul.w	r3, r2, r3
 8010198:	68ba      	ldr	r2, [r7, #8]
 801019a:	4413      	add	r3, r2
 801019c:	61fb      	str	r3, [r7, #28]
 801019e:	f7f5 ff77 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80101a2:	697b      	ldr	r3, [r7, #20]
 80101a4:	3301      	adds	r3, #1
 80101a6:	617b      	str	r3, [r7, #20]
 80101a8:	697b      	ldr	r3, [r7, #20]
 80101aa:	2b18      	cmp	r3, #24
 80101ac:	d9c9      	bls.n	8010142 <d9cd3de8850ba05653155beecb1d40906820436e+0xf2>
 80101ae:	69fb      	ldr	r3, [r7, #28]
 80101b0:	2b00      	cmp	r3, #0
 80101b2:	d138      	bne.n	8010226 <d9cd3de8850ba05653155beecb1d40906820436e+0x1d6>
 80101b4:	2300      	movs	r3, #0
 80101b6:	613b      	str	r3, [r7, #16]
 80101b8:	e032      	b.n	8010220 <d9cd3de8850ba05653155beecb1d40906820436e+0x1d0>
 80101ba:	f7f5 ff49 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80101be:	68ba      	ldr	r2, [r7, #8]
 80101c0:	693b      	ldr	r3, [r7, #16]
 80101c2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80101c6:	fb01 f303 	mul.w	r3, r1, r3
 80101ca:	4413      	add	r3, r2
 80101cc:	3301      	adds	r3, #1
 80101ce:	781b      	ldrb	r3, [r3, #0]
 80101d0:	2b40      	cmp	r3, #64	; 0x40
 80101d2:	d120      	bne.n	8010216 <d9cd3de8850ba05653155beecb1d40906820436e+0x1c6>
 80101d4:	68ba      	ldr	r2, [r7, #8]
 80101d6:	693b      	ldr	r3, [r7, #16]
 80101d8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80101dc:	fb01 f303 	mul.w	r3, r1, r3
 80101e0:	4413      	add	r3, r2
 80101e2:	781b      	ldrb	r3, [r3, #0]
 80101e4:	2b73      	cmp	r3, #115	; 0x73
 80101e6:	d116      	bne.n	8010216 <d9cd3de8850ba05653155beecb1d40906820436e+0x1c6>
 80101e8:	693b      	ldr	r3, [r7, #16]
 80101ea:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80101ee:	fb02 f303 	mul.w	r3, r2, r3
 80101f2:	3340      	adds	r3, #64	; 0x40
 80101f4:	68ba      	ldr	r2, [r7, #8]
 80101f6:	4413      	add	r3, r2
 80101f8:	3301      	adds	r3, #1
 80101fa:	4618      	mov	r0, r3
 80101fc:	f7fe ff90 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8010200:	4603      	mov	r3, r0
 8010202:	2b00      	cmp	r3, #0
 8010204:	d007      	beq.n	8010216 <d9cd3de8850ba05653155beecb1d40906820436e+0x1c6>
 8010206:	693b      	ldr	r3, [r7, #16]
 8010208:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801020c:	fb02 f303 	mul.w	r3, r2, r3
 8010210:	68ba      	ldr	r2, [r7, #8]
 8010212:	4413      	add	r3, r2
 8010214:	61fb      	str	r3, [r7, #28]
 8010216:	f7f5 ff3b 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801021a:	693b      	ldr	r3, [r7, #16]
 801021c:	3301      	adds	r3, #1
 801021e:	613b      	str	r3, [r7, #16]
 8010220:	693b      	ldr	r3, [r7, #16]
 8010222:	2b18      	cmp	r3, #24
 8010224:	d9c9      	bls.n	80101ba <d9cd3de8850ba05653155beecb1d40906820436e+0x16a>
 8010226:	69fb      	ldr	r3, [r7, #28]
 8010228:	2b00      	cmp	r3, #0
 801022a:	d129      	bne.n	8010280 <d9cd3de8850ba05653155beecb1d40906820436e+0x230>
 801022c:	2300      	movs	r3, #0
 801022e:	60fb      	str	r3, [r7, #12]
 8010230:	e023      	b.n	801027a <d9cd3de8850ba05653155beecb1d40906820436e+0x22a>
 8010232:	f7f5 ff0d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010236:	68ba      	ldr	r2, [r7, #8]
 8010238:	68fb      	ldr	r3, [r7, #12]
 801023a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801023e:	fb01 f303 	mul.w	r3, r1, r3
 8010242:	4413      	add	r3, r2
 8010244:	3301      	adds	r3, #1
 8010246:	781b      	ldrb	r3, [r3, #0]
 8010248:	2b40      	cmp	r3, #64	; 0x40
 801024a:	d111      	bne.n	8010270 <d9cd3de8850ba05653155beecb1d40906820436e+0x220>
 801024c:	68ba      	ldr	r2, [r7, #8]
 801024e:	68fb      	ldr	r3, [r7, #12]
 8010250:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010254:	fb01 f303 	mul.w	r3, r1, r3
 8010258:	4413      	add	r3, r2
 801025a:	781b      	ldrb	r3, [r3, #0]
 801025c:	2b90      	cmp	r3, #144	; 0x90
 801025e:	d107      	bne.n	8010270 <d9cd3de8850ba05653155beecb1d40906820436e+0x220>
 8010260:	68fb      	ldr	r3, [r7, #12]
 8010262:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010266:	fb02 f303 	mul.w	r3, r2, r3
 801026a:	68ba      	ldr	r2, [r7, #8]
 801026c:	4413      	add	r3, r2
 801026e:	61fb      	str	r3, [r7, #28]
 8010270:	f7f5 ff0e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010274:	68fb      	ldr	r3, [r7, #12]
 8010276:	3301      	adds	r3, #1
 8010278:	60fb      	str	r3, [r7, #12]
 801027a:	68fb      	ldr	r3, [r7, #12]
 801027c:	2b18      	cmp	r3, #24
 801027e:	d9d8      	bls.n	8010232 <d9cd3de8850ba05653155beecb1d40906820436e+0x1e2>
 8010280:	69fb      	ldr	r3, [r7, #28]
 8010282:	2b00      	cmp	r3, #0
 8010284:	d00d      	beq.n	80102a2 <d9cd3de8850ba05653155beecb1d40906820436e+0x252>
 8010286:	f7f5 fee3 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801028a:	69fb      	ldr	r3, [r7, #28]
 801028c:	785b      	ldrb	r3, [r3, #1]
 801028e:	2b40      	cmp	r3, #64	; 0x40
 8010290:	d103      	bne.n	801029a <d9cd3de8850ba05653155beecb1d40906820436e+0x24a>
 8010292:	69fb      	ldr	r3, [r7, #28]
 8010294:	79fa      	ldrb	r2, [r7, #7]
 8010296:	705a      	strb	r2, [r3, #1]
 8010298:	e001      	b.n	801029e <d9cd3de8850ba05653155beecb1d40906820436e+0x24e>
 801029a:	2300      	movs	r3, #0
 801029c:	61fb      	str	r3, [r7, #28]
 801029e:	f7f5 fef7 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80102a2:	69fb      	ldr	r3, [r7, #28]
 80102a4:	4618      	mov	r0, r3
 80102a6:	3720      	adds	r7, #32
 80102a8:	46bd      	mov	sp, r7
 80102aa:	bd80      	pop	{r7, pc}
 80102ac:	20000040 	.word	0x20000040

080102b0 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca>:
 80102b0:	b580      	push	{r7, lr}
 80102b2:	b086      	sub	sp, #24
 80102b4:	af00      	add	r7, sp, #0
 80102b6:	6078      	str	r0, [r7, #4]
 80102b8:	460b      	mov	r3, r1
 80102ba:	70fb      	strb	r3, [r7, #3]
 80102bc:	687b      	ldr	r3, [r7, #4]
 80102be:	781b      	ldrb	r3, [r3, #0]
 80102c0:	2b02      	cmp	r3, #2
 80102c2:	d001      	beq.n	80102c8 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x18>
 80102c4:	2300      	movs	r3, #0
 80102c6:	e09a      	b.n	80103fe <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x14e>
 80102c8:	4b4f      	ldr	r3, [pc, #316]	; (8010408 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x158>)
 80102ca:	681b      	ldr	r3, [r3, #0]
 80102cc:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 80102d0:	60bb      	str	r3, [r7, #8]
 80102d2:	2300      	movs	r3, #0
 80102d4:	617b      	str	r3, [r7, #20]
 80102d6:	2300      	movs	r3, #0
 80102d8:	613b      	str	r3, [r7, #16]
 80102da:	e03e      	b.n	801035a <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xaa>
 80102dc:	f7f5 feb8 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80102e0:	68ba      	ldr	r2, [r7, #8]
 80102e2:	693b      	ldr	r3, [r7, #16]
 80102e4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80102e8:	fb01 f303 	mul.w	r3, r1, r3
 80102ec:	4413      	add	r3, r2
 80102ee:	3301      	adds	r3, #1
 80102f0:	781b      	ldrb	r3, [r3, #0]
 80102f2:	2b40      	cmp	r3, #64	; 0x40
 80102f4:	d12c      	bne.n	8010350 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xa0>
 80102f6:	68ba      	ldr	r2, [r7, #8]
 80102f8:	693b      	ldr	r3, [r7, #16]
 80102fa:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80102fe:	fb01 f303 	mul.w	r3, r1, r3
 8010302:	4413      	add	r3, r2
 8010304:	3355      	adds	r3, #85	; 0x55
 8010306:	781b      	ldrb	r3, [r3, #0]
 8010308:	2b00      	cmp	r3, #0
 801030a:	d021      	beq.n	8010350 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xa0>
 801030c:	68ba      	ldr	r2, [r7, #8]
 801030e:	693b      	ldr	r3, [r7, #16]
 8010310:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010314:	fb01 f303 	mul.w	r3, r1, r3
 8010318:	4413      	add	r3, r2
 801031a:	781b      	ldrb	r3, [r3, #0]
 801031c:	2b53      	cmp	r3, #83	; 0x53
 801031e:	d117      	bne.n	8010350 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xa0>
 8010320:	693b      	ldr	r3, [r7, #16]
 8010322:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010326:	fb02 f303 	mul.w	r3, r2, r3
 801032a:	3340      	adds	r3, #64	; 0x40
 801032c:	68ba      	ldr	r2, [r7, #8]
 801032e:	4413      	add	r3, r2
 8010330:	3301      	adds	r3, #1
 8010332:	4619      	mov	r1, r3
 8010334:	6878      	ldr	r0, [r7, #4]
 8010336:	f7fe fff9 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801033a:	4603      	mov	r3, r0
 801033c:	2b00      	cmp	r3, #0
 801033e:	d007      	beq.n	8010350 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xa0>
 8010340:	693b      	ldr	r3, [r7, #16]
 8010342:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010346:	fb02 f303 	mul.w	r3, r2, r3
 801034a:	68ba      	ldr	r2, [r7, #8]
 801034c:	4413      	add	r3, r2
 801034e:	617b      	str	r3, [r7, #20]
 8010350:	f7f5 fe9e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010354:	693b      	ldr	r3, [r7, #16]
 8010356:	3301      	adds	r3, #1
 8010358:	613b      	str	r3, [r7, #16]
 801035a:	693b      	ldr	r3, [r7, #16]
 801035c:	2b18      	cmp	r3, #24
 801035e:	d9bd      	bls.n	80102dc <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x2c>
 8010360:	697b      	ldr	r3, [r7, #20]
 8010362:	2b00      	cmp	r3, #0
 8010364:	d139      	bne.n	80103da <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x12a>
 8010366:	2300      	movs	r3, #0
 8010368:	60fb      	str	r3, [r7, #12]
 801036a:	e033      	b.n	80103d4 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x124>
 801036c:	f7f5 fe70 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010370:	68ba      	ldr	r2, [r7, #8]
 8010372:	68fb      	ldr	r3, [r7, #12]
 8010374:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010378:	fb01 f303 	mul.w	r3, r1, r3
 801037c:	4413      	add	r3, r2
 801037e:	3301      	adds	r3, #1
 8010380:	781b      	ldrb	r3, [r3, #0]
 8010382:	2b40      	cmp	r3, #64	; 0x40
 8010384:	d121      	bne.n	80103ca <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x11a>
 8010386:	68ba      	ldr	r2, [r7, #8]
 8010388:	68fb      	ldr	r3, [r7, #12]
 801038a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801038e:	fb01 f303 	mul.w	r3, r1, r3
 8010392:	4413      	add	r3, r2
 8010394:	781b      	ldrb	r3, [r3, #0]
 8010396:	2b53      	cmp	r3, #83	; 0x53
 8010398:	d117      	bne.n	80103ca <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x11a>
 801039a:	68fb      	ldr	r3, [r7, #12]
 801039c:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80103a0:	fb02 f303 	mul.w	r3, r2, r3
 80103a4:	3340      	adds	r3, #64	; 0x40
 80103a6:	68ba      	ldr	r2, [r7, #8]
 80103a8:	4413      	add	r3, r2
 80103aa:	3301      	adds	r3, #1
 80103ac:	4619      	mov	r1, r3
 80103ae:	6878      	ldr	r0, [r7, #4]
 80103b0:	f7fe ffbc 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 80103b4:	4603      	mov	r3, r0
 80103b6:	2b00      	cmp	r3, #0
 80103b8:	d007      	beq.n	80103ca <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x11a>
 80103ba:	68fb      	ldr	r3, [r7, #12]
 80103bc:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80103c0:	fb02 f303 	mul.w	r3, r2, r3
 80103c4:	68ba      	ldr	r2, [r7, #8]
 80103c6:	4413      	add	r3, r2
 80103c8:	617b      	str	r3, [r7, #20]
 80103ca:	f7f5 fe61 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80103ce:	68fb      	ldr	r3, [r7, #12]
 80103d0:	3301      	adds	r3, #1
 80103d2:	60fb      	str	r3, [r7, #12]
 80103d4:	68fb      	ldr	r3, [r7, #12]
 80103d6:	2b18      	cmp	r3, #24
 80103d8:	d9c8      	bls.n	801036c <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0xbc>
 80103da:	697b      	ldr	r3, [r7, #20]
 80103dc:	2b00      	cmp	r3, #0
 80103de:	d00d      	beq.n	80103fc <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x14c>
 80103e0:	f7f5 fe36 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80103e4:	697b      	ldr	r3, [r7, #20]
 80103e6:	785b      	ldrb	r3, [r3, #1]
 80103e8:	2b40      	cmp	r3, #64	; 0x40
 80103ea:	d103      	bne.n	80103f4 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x144>
 80103ec:	697b      	ldr	r3, [r7, #20]
 80103ee:	78fa      	ldrb	r2, [r7, #3]
 80103f0:	705a      	strb	r2, [r3, #1]
 80103f2:	e001      	b.n	80103f8 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca+0x148>
 80103f4:	2300      	movs	r3, #0
 80103f6:	617b      	str	r3, [r7, #20]
 80103f8:	f7f5 fe4a 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80103fc:	697b      	ldr	r3, [r7, #20]
 80103fe:	4618      	mov	r0, r3
 8010400:	3718      	adds	r7, #24
 8010402:	46bd      	mov	sp, r7
 8010404:	bd80      	pop	{r7, pc}
 8010406:	bf00      	nop
 8010408:	20000040 	.word	0x20000040

0801040c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f>:
 801040c:	b590      	push	{r4, r7, lr}
 801040e:	b08f      	sub	sp, #60	; 0x3c
 8010410:	af00      	add	r7, sp, #0
 8010412:	6078      	str	r0, [r7, #4]
 8010414:	460b      	mov	r3, r1
 8010416:	70fb      	strb	r3, [r7, #3]
 8010418:	4b6f      	ldr	r3, [pc, #444]	; (80105d8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1cc>)
 801041a:	681b      	ldr	r3, [r3, #0]
 801041c:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010420:	617b      	str	r3, [r7, #20]
 8010422:	f04f 33ff 	mov.w	r3, #4294967295
 8010426:	60fb      	str	r3, [r7, #12]
 8010428:	7c3b      	ldrb	r3, [r7, #16]
 801042a:	f043 03ff 	orr.w	r3, r3, #255	; 0xff
 801042e:	743b      	strb	r3, [r7, #16]
 8010430:	2300      	movs	r3, #0
 8010432:	637b      	str	r3, [r7, #52]	; 0x34
 8010434:	2300      	movs	r3, #0
 8010436:	633b      	str	r3, [r7, #48]	; 0x30
 8010438:	e0c3      	b.n	80105c2 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1b6>
 801043a:	f7f5 fe09 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801043e:	697a      	ldr	r2, [r7, #20]
 8010440:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010442:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010446:	fb01 f303 	mul.w	r3, r1, r3
 801044a:	4413      	add	r3, r2
 801044c:	3301      	adds	r3, #1
 801044e:	781b      	ldrb	r3, [r3, #0]
 8010450:	2b40      	cmp	r3, #64	; 0x40
 8010452:	f040 80b1 	bne.w	80105b8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1ac>
 8010456:	697a      	ldr	r2, [r7, #20]
 8010458:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801045a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801045e:	fb01 f303 	mul.w	r3, r1, r3
 8010462:	4413      	add	r3, r2
 8010464:	3355      	adds	r3, #85	; 0x55
 8010466:	781b      	ldrb	r3, [r3, #0]
 8010468:	2b00      	cmp	r3, #0
 801046a:	f000 80a5 	beq.w	80105b8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1ac>
 801046e:	687b      	ldr	r3, [r7, #4]
 8010470:	2b00      	cmp	r3, #0
 8010472:	d027      	beq.n	80104c4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0xb8>
 8010474:	697a      	ldr	r2, [r7, #20]
 8010476:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010478:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801047c:	fb01 f303 	mul.w	r3, r1, r3
 8010480:	4413      	add	r3, r2
 8010482:	781b      	ldrb	r3, [r3, #0]
 8010484:	2b53      	cmp	r3, #83	; 0x53
 8010486:	d11d      	bne.n	80104c4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0xb8>
 8010488:	697a      	ldr	r2, [r7, #20]
 801048a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801048c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010490:	fb01 f303 	mul.w	r3, r1, r3
 8010494:	4413      	add	r3, r2
 8010496:	3393      	adds	r3, #147	; 0x93
 8010498:	781b      	ldrb	r3, [r3, #0]
 801049a:	2b00      	cmp	r3, #0
 801049c:	d112      	bne.n	80104c4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0xb8>
 801049e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80104a0:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80104a4:	fb02 f303 	mul.w	r3, r2, r3
 80104a8:	3340      	adds	r3, #64	; 0x40
 80104aa:	697a      	ldr	r2, [r7, #20]
 80104ac:	4413      	add	r3, r2
 80104ae:	3301      	adds	r3, #1
 80104b0:	6879      	ldr	r1, [r7, #4]
 80104b2:	4618      	mov	r0, r3
 80104b4:	f7fe ff3a 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 80104b8:	4603      	mov	r3, r0
 80104ba:	f083 0301 	eor.w	r3, r3, #1
 80104be:	b2db      	uxtb	r3, r3
 80104c0:	2b00      	cmp	r3, #0
 80104c2:	d171      	bne.n	80105a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x19c>
 80104c4:	697a      	ldr	r2, [r7, #20]
 80104c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80104c8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80104cc:	fb01 f303 	mul.w	r3, r1, r3
 80104d0:	4413      	add	r3, r2
 80104d2:	781b      	ldrb	r3, [r3, #0]
 80104d4:	2b53      	cmp	r3, #83	; 0x53
 80104d6:	d10a      	bne.n	80104ee <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0xe2>
 80104d8:	697a      	ldr	r2, [r7, #20]
 80104da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80104dc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80104e0:	fb01 f303 	mul.w	r3, r1, r3
 80104e4:	4413      	add	r3, r2
 80104e6:	3393      	adds	r3, #147	; 0x93
 80104e8:	781b      	ldrb	r3, [r3, #0]
 80104ea:	2b01      	cmp	r3, #1
 80104ec:	d05c      	beq.n	80105a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x19c>
 80104ee:	697a      	ldr	r2, [r7, #20]
 80104f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80104f2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80104f6:	fb01 f303 	mul.w	r3, r1, r3
 80104fa:	4413      	add	r3, r2
 80104fc:	333f      	adds	r3, #63	; 0x3f
 80104fe:	781b      	ldrb	r3, [r3, #0]
 8010500:	2b00      	cmp	r3, #0
 8010502:	d151      	bne.n	80105a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x19c>
 8010504:	697a      	ldr	r2, [r7, #20]
 8010506:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010508:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801050c:	fb01 f303 	mul.w	r3, r1, r3
 8010510:	4413      	add	r3, r2
 8010512:	781b      	ldrb	r3, [r3, #0]
 8010514:	2b74      	cmp	r3, #116	; 0x74
 8010516:	d10e      	bne.n	8010536 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x12a>
 8010518:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801051a:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801051e:	fb02 f303 	mul.w	r3, r2, r3
 8010522:	3318      	adds	r3, #24
 8010524:	697a      	ldr	r2, [r7, #20]
 8010526:	4413      	add	r3, r2
 8010528:	3305      	adds	r3, #5
 801052a:	4618      	mov	r0, r3
 801052c:	f7fe fdf8 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8010530:	4603      	mov	r3, r0
 8010532:	2b00      	cmp	r3, #0
 8010534:	d138      	bne.n	80105a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x19c>
 8010536:	697a      	ldr	r2, [r7, #20]
 8010538:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801053a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801053e:	fb01 f303 	mul.w	r3, r1, r3
 8010542:	4413      	add	r3, r2
 8010544:	781b      	ldrb	r3, [r3, #0]
 8010546:	2b60      	cmp	r3, #96	; 0x60
 8010548:	d02e      	beq.n	80105a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x19c>
 801054a:	697a      	ldr	r2, [r7, #20]
 801054c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801054e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010552:	fb01 f303 	mul.w	r3, r1, r3
 8010556:	4413      	add	r3, r2
 8010558:	333f      	adds	r3, #63	; 0x3f
 801055a:	781b      	ldrb	r3, [r3, #0]
 801055c:	f083 0301 	eor.w	r3, r3, #1
 8010560:	b2db      	uxtb	r3, r3
 8010562:	2b00      	cmp	r3, #0
 8010564:	d028      	beq.n	80105b8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1ac>
 8010566:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010568:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801056c:	fb02 f303 	mul.w	r3, r2, r3
 8010570:	3318      	adds	r3, #24
 8010572:	697a      	ldr	r2, [r7, #20]
 8010574:	4413      	add	r3, r2
 8010576:	3305      	adds	r3, #5
 8010578:	4618      	mov	r0, r3
 801057a:	f7fe feb9 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 801057e:	4603      	mov	r3, r0
 8010580:	2b00      	cmp	r3, #0
 8010582:	d019      	beq.n	80105b8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1ac>
 8010584:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8010586:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801058a:	fb02 f303 	mul.w	r3, r2, r3
 801058e:	3340      	adds	r3, #64	; 0x40
 8010590:	697a      	ldr	r2, [r7, #20]
 8010592:	4413      	add	r3, r2
 8010594:	3302      	adds	r3, #2
 8010596:	4618      	mov	r0, r3
 8010598:	f7fd fe16 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 801059c:	4603      	mov	r3, r0
 801059e:	f083 0301 	eor.w	r3, r3, #1
 80105a2:	b2db      	uxtb	r3, r3
 80105a4:	2b00      	cmp	r3, #0
 80105a6:	d007      	beq.n	80105b8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1ac>
 80105a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80105aa:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80105ae:	fb02 f303 	mul.w	r3, r2, r3
 80105b2:	697a      	ldr	r2, [r7, #20]
 80105b4:	4413      	add	r3, r2
 80105b6:	637b      	str	r3, [r7, #52]	; 0x34
 80105b8:	f7f5 fd6a 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80105bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80105be:	3301      	adds	r3, #1
 80105c0:	633b      	str	r3, [r7, #48]	; 0x30
 80105c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80105c4:	2b18      	cmp	r3, #24
 80105c6:	f67f af38 	bls.w	801043a <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2e>
 80105ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80105cc:	2b00      	cmp	r3, #0
 80105ce:	f040 8093 	bne.w	80106f8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2ec>
 80105d2:	2300      	movs	r3, #0
 80105d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80105d6:	e08b      	b.n	80106f0 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2e4>
 80105d8:	20000040 	.word	0x20000040
 80105dc:	f7f5 fd38 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80105e0:	697a      	ldr	r2, [r7, #20]
 80105e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80105e4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80105e8:	fb01 f303 	mul.w	r3, r1, r3
 80105ec:	4413      	add	r3, r2
 80105ee:	3301      	adds	r3, #1
 80105f0:	781b      	ldrb	r3, [r3, #0]
 80105f2:	2b40      	cmp	r3, #64	; 0x40
 80105f4:	d177      	bne.n	80106e6 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2da>
 80105f6:	687b      	ldr	r3, [r7, #4]
 80105f8:	2b00      	cmp	r3, #0
 80105fa:	d027      	beq.n	801064c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x240>
 80105fc:	697a      	ldr	r2, [r7, #20]
 80105fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010600:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010604:	fb01 f303 	mul.w	r3, r1, r3
 8010608:	4413      	add	r3, r2
 801060a:	781b      	ldrb	r3, [r3, #0]
 801060c:	2b53      	cmp	r3, #83	; 0x53
 801060e:	d11d      	bne.n	801064c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x240>
 8010610:	697a      	ldr	r2, [r7, #20]
 8010612:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010614:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010618:	fb01 f303 	mul.w	r3, r1, r3
 801061c:	4413      	add	r3, r2
 801061e:	3393      	adds	r3, #147	; 0x93
 8010620:	781b      	ldrb	r3, [r3, #0]
 8010622:	2b00      	cmp	r3, #0
 8010624:	d112      	bne.n	801064c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x240>
 8010626:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010628:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801062c:	fb02 f303 	mul.w	r3, r2, r3
 8010630:	3340      	adds	r3, #64	; 0x40
 8010632:	697a      	ldr	r2, [r7, #20]
 8010634:	4413      	add	r3, r2
 8010636:	3301      	adds	r3, #1
 8010638:	6879      	ldr	r1, [r7, #4]
 801063a:	4618      	mov	r0, r3
 801063c:	f7fe fe76 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8010640:	4603      	mov	r3, r0
 8010642:	f083 0301 	eor.w	r3, r3, #1
 8010646:	b2db      	uxtb	r3, r3
 8010648:	2b00      	cmp	r3, #0
 801064a:	d114      	bne.n	8010676 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x26a>
 801064c:	697a      	ldr	r2, [r7, #20]
 801064e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010650:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010654:	fb01 f303 	mul.w	r3, r1, r3
 8010658:	4413      	add	r3, r2
 801065a:	781b      	ldrb	r3, [r3, #0]
 801065c:	2b53      	cmp	r3, #83	; 0x53
 801065e:	d142      	bne.n	80106e6 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2da>
 8010660:	697a      	ldr	r2, [r7, #20]
 8010662:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010664:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010668:	fb01 f303 	mul.w	r3, r1, r3
 801066c:	4413      	add	r3, r2
 801066e:	3393      	adds	r3, #147	; 0x93
 8010670:	781b      	ldrb	r3, [r3, #0]
 8010672:	2b01      	cmp	r3, #1
 8010674:	d137      	bne.n	80106e6 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2da>
 8010676:	2300      	movs	r3, #0
 8010678:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801067c:	697a      	ldr	r2, [r7, #20]
 801067e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010680:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010684:	fb01 f303 	mul.w	r3, r1, r3
 8010688:	4413      	add	r3, r2
 801068a:	3350      	adds	r3, #80	; 0x50
 801068c:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010690:	7a9b      	ldrb	r3, [r3, #10]
 8010692:	4619      	mov	r1, r3
 8010694:	68fa      	ldr	r2, [r7, #12]
 8010696:	7c3c      	ldrb	r4, [r7, #16]
 8010698:	4623      	mov	r3, r4
 801069a:	4290      	cmp	r0, r2
 801069c:	eb71 0303 	sbcs.w	r3, r1, r3
 80106a0:	d202      	bcs.n	80106a8 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x29c>
 80106a2:	2301      	movs	r3, #1
 80106a4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80106a8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80106ac:	2b00      	cmp	r3, #0
 80106ae:	d01a      	beq.n	80106e6 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2da>
 80106b0:	697a      	ldr	r2, [r7, #20]
 80106b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80106b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80106b8:	fb01 f303 	mul.w	r3, r1, r3
 80106bc:	4413      	add	r3, r2
 80106be:	3350      	adds	r3, #80	; 0x50
 80106c0:	f8d3 0006 	ldr.w	r0, [r3, #6]
 80106c4:	7a9b      	ldrb	r3, [r3, #10]
 80106c6:	4619      	mov	r1, r3
 80106c8:	4603      	mov	r3, r0
 80106ca:	60fb      	str	r3, [r7, #12]
 80106cc:	7c3b      	ldrb	r3, [r7, #16]
 80106ce:	460a      	mov	r2, r1
 80106d0:	f362 0307 	bfi	r3, r2, #0, #8
 80106d4:	743b      	strb	r3, [r7, #16]
 80106d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80106d8:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80106dc:	fb02 f303 	mul.w	r3, r2, r3
 80106e0:	697a      	ldr	r2, [r7, #20]
 80106e2:	4413      	add	r3, r2
 80106e4:	637b      	str	r3, [r7, #52]	; 0x34
 80106e6:	f7f5 fcd3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80106ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80106ec:	3301      	adds	r3, #1
 80106ee:	62fb      	str	r3, [r7, #44]	; 0x2c
 80106f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80106f2:	2b18      	cmp	r3, #24
 80106f4:	f67f af72 	bls.w	80105dc <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x1d0>
 80106f8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80106fa:	2b00      	cmp	r3, #0
 80106fc:	d15a      	bne.n	80107b4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x3a8>
 80106fe:	2300      	movs	r3, #0
 8010700:	627b      	str	r3, [r7, #36]	; 0x24
 8010702:	e054      	b.n	80107ae <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x3a2>
 8010704:	f7f5 fca4 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010708:	697a      	ldr	r2, [r7, #20]
 801070a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801070c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010710:	fb01 f303 	mul.w	r3, r1, r3
 8010714:	4413      	add	r3, r2
 8010716:	3301      	adds	r3, #1
 8010718:	781b      	ldrb	r3, [r3, #0]
 801071a:	2b40      	cmp	r3, #64	; 0x40
 801071c:	d142      	bne.n	80107a4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x398>
 801071e:	697a      	ldr	r2, [r7, #20]
 8010720:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010722:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010726:	fb01 f303 	mul.w	r3, r1, r3
 801072a:	4413      	add	r3, r2
 801072c:	333f      	adds	r3, #63	; 0x3f
 801072e:	781b      	ldrb	r3, [r3, #0]
 8010730:	2b00      	cmp	r3, #0
 8010732:	d037      	beq.n	80107a4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x398>
 8010734:	2300      	movs	r3, #0
 8010736:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 801073a:	697a      	ldr	r2, [r7, #20]
 801073c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801073e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010742:	fb01 f303 	mul.w	r3, r1, r3
 8010746:	4413      	add	r3, r2
 8010748:	3350      	adds	r3, #80	; 0x50
 801074a:	f8d3 0006 	ldr.w	r0, [r3, #6]
 801074e:	7a9b      	ldrb	r3, [r3, #10]
 8010750:	4619      	mov	r1, r3
 8010752:	68fa      	ldr	r2, [r7, #12]
 8010754:	7c3c      	ldrb	r4, [r7, #16]
 8010756:	4623      	mov	r3, r4
 8010758:	4290      	cmp	r0, r2
 801075a:	eb71 0303 	sbcs.w	r3, r1, r3
 801075e:	d202      	bcs.n	8010766 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x35a>
 8010760:	2301      	movs	r3, #1
 8010762:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8010766:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 801076a:	2b00      	cmp	r3, #0
 801076c:	d01a      	beq.n	80107a4 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x398>
 801076e:	697a      	ldr	r2, [r7, #20]
 8010770:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010772:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010776:	fb01 f303 	mul.w	r3, r1, r3
 801077a:	4413      	add	r3, r2
 801077c:	3350      	adds	r3, #80	; 0x50
 801077e:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010782:	7a9b      	ldrb	r3, [r3, #10]
 8010784:	4619      	mov	r1, r3
 8010786:	4603      	mov	r3, r0
 8010788:	60fb      	str	r3, [r7, #12]
 801078a:	7c3b      	ldrb	r3, [r7, #16]
 801078c:	460a      	mov	r2, r1
 801078e:	f362 0307 	bfi	r3, r2, #0, #8
 8010792:	743b      	strb	r3, [r7, #16]
 8010794:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010796:	f44f 729e 	mov.w	r2, #316	; 0x13c
 801079a:	fb02 f303 	mul.w	r3, r2, r3
 801079e:	697a      	ldr	r2, [r7, #20]
 80107a0:	4413      	add	r3, r2
 80107a2:	637b      	str	r3, [r7, #52]	; 0x34
 80107a4:	f7f5 fc74 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80107a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80107aa:	3301      	adds	r3, #1
 80107ac:	627b      	str	r3, [r7, #36]	; 0x24
 80107ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80107b0:	2b18      	cmp	r3, #24
 80107b2:	d9a7      	bls.n	8010704 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x2f8>
 80107b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80107b6:	2b00      	cmp	r3, #0
 80107b8:	f040 80a1 	bne.w	80108fe <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4f2>
 80107bc:	2300      	movs	r3, #0
 80107be:	61fb      	str	r3, [r7, #28]
 80107c0:	e099      	b.n	80108f6 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4ea>
 80107c2:	f7f5 fc45 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80107c6:	697a      	ldr	r2, [r7, #20]
 80107c8:	69fb      	ldr	r3, [r7, #28]
 80107ca:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80107ce:	fb01 f303 	mul.w	r3, r1, r3
 80107d2:	4413      	add	r3, r2
 80107d4:	3301      	adds	r3, #1
 80107d6:	781b      	ldrb	r3, [r3, #0]
 80107d8:	2b40      	cmp	r3, #64	; 0x40
 80107da:	f040 8087 	bne.w	80108ec <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4e0>
 80107de:	697a      	ldr	r2, [r7, #20]
 80107e0:	69fb      	ldr	r3, [r7, #28]
 80107e2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80107e6:	fb01 f303 	mul.w	r3, r1, r3
 80107ea:	4413      	add	r3, r2
 80107ec:	781b      	ldrb	r3, [r3, #0]
 80107ee:	2b74      	cmp	r3, #116	; 0x74
 80107f0:	d10e      	bne.n	8010810 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x404>
 80107f2:	69fb      	ldr	r3, [r7, #28]
 80107f4:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80107f8:	fb02 f303 	mul.w	r3, r2, r3
 80107fc:	3318      	adds	r3, #24
 80107fe:	697a      	ldr	r2, [r7, #20]
 8010800:	4413      	add	r3, r2
 8010802:	3305      	adds	r3, #5
 8010804:	4618      	mov	r0, r3
 8010806:	f7fe fc8b 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 801080a:	4603      	mov	r3, r0
 801080c:	2b00      	cmp	r3, #0
 801080e:	d138      	bne.n	8010882 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x476>
 8010810:	697a      	ldr	r2, [r7, #20]
 8010812:	69fb      	ldr	r3, [r7, #28]
 8010814:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010818:	fb01 f303 	mul.w	r3, r1, r3
 801081c:	4413      	add	r3, r2
 801081e:	781b      	ldrb	r3, [r3, #0]
 8010820:	2b60      	cmp	r3, #96	; 0x60
 8010822:	d02e      	beq.n	8010882 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x476>
 8010824:	697a      	ldr	r2, [r7, #20]
 8010826:	69fb      	ldr	r3, [r7, #28]
 8010828:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801082c:	fb01 f303 	mul.w	r3, r1, r3
 8010830:	4413      	add	r3, r2
 8010832:	333f      	adds	r3, #63	; 0x3f
 8010834:	781b      	ldrb	r3, [r3, #0]
 8010836:	f083 0301 	eor.w	r3, r3, #1
 801083a:	b2db      	uxtb	r3, r3
 801083c:	2b00      	cmp	r3, #0
 801083e:	d055      	beq.n	80108ec <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4e0>
 8010840:	69fb      	ldr	r3, [r7, #28]
 8010842:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010846:	fb02 f303 	mul.w	r3, r2, r3
 801084a:	3318      	adds	r3, #24
 801084c:	697a      	ldr	r2, [r7, #20]
 801084e:	4413      	add	r3, r2
 8010850:	3305      	adds	r3, #5
 8010852:	4618      	mov	r0, r3
 8010854:	f7fe fd4c 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 8010858:	4603      	mov	r3, r0
 801085a:	2b00      	cmp	r3, #0
 801085c:	d046      	beq.n	80108ec <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4e0>
 801085e:	69fb      	ldr	r3, [r7, #28]
 8010860:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010864:	fb02 f303 	mul.w	r3, r2, r3
 8010868:	3340      	adds	r3, #64	; 0x40
 801086a:	697a      	ldr	r2, [r7, #20]
 801086c:	4413      	add	r3, r2
 801086e:	3302      	adds	r3, #2
 8010870:	4618      	mov	r0, r3
 8010872:	f7fd fca9 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 8010876:	4603      	mov	r3, r0
 8010878:	f083 0301 	eor.w	r3, r3, #1
 801087c:	b2db      	uxtb	r3, r3
 801087e:	2b00      	cmp	r3, #0
 8010880:	d034      	beq.n	80108ec <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4e0>
 8010882:	2300      	movs	r3, #0
 8010884:	76fb      	strb	r3, [r7, #27]
 8010886:	697a      	ldr	r2, [r7, #20]
 8010888:	69fb      	ldr	r3, [r7, #28]
 801088a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 801088e:	fb01 f303 	mul.w	r3, r1, r3
 8010892:	4413      	add	r3, r2
 8010894:	3350      	adds	r3, #80	; 0x50
 8010896:	f8d3 0006 	ldr.w	r0, [r3, #6]
 801089a:	7a9b      	ldrb	r3, [r3, #10]
 801089c:	4619      	mov	r1, r3
 801089e:	68fa      	ldr	r2, [r7, #12]
 80108a0:	7c3c      	ldrb	r4, [r7, #16]
 80108a2:	4623      	mov	r3, r4
 80108a4:	4290      	cmp	r0, r2
 80108a6:	eb71 0303 	sbcs.w	r3, r1, r3
 80108aa:	d201      	bcs.n	80108b0 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4a4>
 80108ac:	2301      	movs	r3, #1
 80108ae:	76fb      	strb	r3, [r7, #27]
 80108b0:	7efb      	ldrb	r3, [r7, #27]
 80108b2:	2b00      	cmp	r3, #0
 80108b4:	d01a      	beq.n	80108ec <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x4e0>
 80108b6:	697a      	ldr	r2, [r7, #20]
 80108b8:	69fb      	ldr	r3, [r7, #28]
 80108ba:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80108be:	fb01 f303 	mul.w	r3, r1, r3
 80108c2:	4413      	add	r3, r2
 80108c4:	3350      	adds	r3, #80	; 0x50
 80108c6:	f8d3 0006 	ldr.w	r0, [r3, #6]
 80108ca:	7a9b      	ldrb	r3, [r3, #10]
 80108cc:	4619      	mov	r1, r3
 80108ce:	4603      	mov	r3, r0
 80108d0:	60fb      	str	r3, [r7, #12]
 80108d2:	7c3b      	ldrb	r3, [r7, #16]
 80108d4:	460a      	mov	r2, r1
 80108d6:	f362 0307 	bfi	r3, r2, #0, #8
 80108da:	743b      	strb	r3, [r7, #16]
 80108dc:	69fb      	ldr	r3, [r7, #28]
 80108de:	f44f 729e 	mov.w	r2, #316	; 0x13c
 80108e2:	fb02 f303 	mul.w	r3, r2, r3
 80108e6:	697a      	ldr	r2, [r7, #20]
 80108e8:	4413      	add	r3, r2
 80108ea:	637b      	str	r3, [r7, #52]	; 0x34
 80108ec:	f7f5 fbd0 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80108f0:	69fb      	ldr	r3, [r7, #28]
 80108f2:	3301      	adds	r3, #1
 80108f4:	61fb      	str	r3, [r7, #28]
 80108f6:	69fb      	ldr	r3, [r7, #28]
 80108f8:	2b18      	cmp	r3, #24
 80108fa:	f67f af62 	bls.w	80107c2 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x3b6>
 80108fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010900:	2b00      	cmp	r3, #0
 8010902:	d022      	beq.n	801094a <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x53e>
 8010904:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010906:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 801090a:	f083 0301 	eor.w	r3, r3, #1
 801090e:	b2db      	uxtb	r3, r3
 8010910:	2b00      	cmp	r3, #0
 8010912:	d00c      	beq.n	801092e <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x522>
 8010914:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010916:	331d      	adds	r3, #29
 8010918:	4618      	mov	r0, r3
 801091a:	f7fe fce9 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 801091e:	4603      	mov	r3, r0
 8010920:	2b00      	cmp	r3, #0
 8010922:	d004      	beq.n	801092e <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x522>
 8010924:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010926:	3342      	adds	r3, #66	; 0x42
 8010928:	4618      	mov	r0, r3
 801092a:	f7fd fc4d 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 801092e:	f7f5 fb8f 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010932:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8010934:	785b      	ldrb	r3, [r3, #1]
 8010936:	2b40      	cmp	r3, #64	; 0x40
 8010938:	d103      	bne.n	8010942 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x536>
 801093a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801093c:	78fa      	ldrb	r2, [r7, #3]
 801093e:	705a      	strb	r2, [r3, #1]
 8010940:	e001      	b.n	8010946 <b889de2f10cc0917d24c2de3fa3fd08176b8c62f+0x53a>
 8010942:	2300      	movs	r3, #0
 8010944:	637b      	str	r3, [r7, #52]	; 0x34
 8010946:	f7f5 fba3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801094a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801094c:	4618      	mov	r0, r3
 801094e:	373c      	adds	r7, #60	; 0x3c
 8010950:	46bd      	mov	sp, r7
 8010952:	bd90      	pop	{r4, r7, pc}

08010954 <fc07e894741fc85c512f976929ce54659d763792>:
 8010954:	b590      	push	{r4, r7, lr}
 8010956:	b08d      	sub	sp, #52	; 0x34
 8010958:	af00      	add	r7, sp, #0
 801095a:	6078      	str	r0, [r7, #4]
 801095c:	460b      	mov	r3, r1
 801095e:	70fb      	strb	r3, [r7, #3]
 8010960:	687b      	ldr	r3, [r7, #4]
 8010962:	2b00      	cmp	r3, #0
 8010964:	d105      	bne.n	8010972 <fc07e894741fc85c512f976929ce54659d763792+0x1e>
 8010966:	f240 2283 	movw	r2, #643	; 0x283
 801096a:	498d      	ldr	r1, [pc, #564]	; (8010ba0 <fc07e894741fc85c512f976929ce54659d763792+0x24c>)
 801096c:	488d      	ldr	r0, [pc, #564]	; (8010ba4 <fc07e894741fc85c512f976929ce54659d763792+0x250>)
 801096e:	f7f0 fecb 	bl	8001708 <EXPECT_OnAbortHandler>
 8010972:	687b      	ldr	r3, [r7, #4]
 8010974:	781b      	ldrb	r3, [r3, #0]
 8010976:	2b02      	cmp	r3, #2
 8010978:	d001      	beq.n	801097e <fc07e894741fc85c512f976929ce54659d763792+0x2a>
 801097a:	2300      	movs	r3, #0
 801097c:	e18c      	b.n	8010c98 <fc07e894741fc85c512f976929ce54659d763792+0x344>
 801097e:	4b8a      	ldr	r3, [pc, #552]	; (8010ba8 <fc07e894741fc85c512f976929ce54659d763792+0x254>)
 8010980:	681b      	ldr	r3, [r3, #0]
 8010982:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010986:	617b      	str	r3, [r7, #20]
 8010988:	f04f 33ff 	mov.w	r3, #4294967295
 801098c:	60fb      	str	r3, [r7, #12]
 801098e:	7c3b      	ldrb	r3, [r7, #16]
 8010990:	f043 03ff 	orr.w	r3, r3, #255	; 0xff
 8010994:	743b      	strb	r3, [r7, #16]
 8010996:	2300      	movs	r3, #0
 8010998:	62fb      	str	r3, [r7, #44]	; 0x2c
 801099a:	2300      	movs	r3, #0
 801099c:	62bb      	str	r3, [r7, #40]	; 0x28
 801099e:	e052      	b.n	8010a46 <fc07e894741fc85c512f976929ce54659d763792+0xf2>
 80109a0:	f7f5 fb56 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80109a4:	697a      	ldr	r2, [r7, #20]
 80109a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80109a8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80109ac:	fb01 f303 	mul.w	r3, r1, r3
 80109b0:	4413      	add	r3, r2
 80109b2:	3301      	adds	r3, #1
 80109b4:	781b      	ldrb	r3, [r3, #0]
 80109b6:	2b40      	cmp	r3, #64	; 0x40
 80109b8:	d140      	bne.n	8010a3c <fc07e894741fc85c512f976929ce54659d763792+0xe8>
 80109ba:	697a      	ldr	r2, [r7, #20]
 80109bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80109be:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80109c2:	fb01 f303 	mul.w	r3, r1, r3
 80109c6:	4413      	add	r3, r2
 80109c8:	3355      	adds	r3, #85	; 0x55
 80109ca:	781b      	ldrb	r3, [r3, #0]
 80109cc:	2b00      	cmp	r3, #0
 80109ce:	d035      	beq.n	8010a3c <fc07e894741fc85c512f976929ce54659d763792+0xe8>
 80109d0:	697a      	ldr	r2, [r7, #20]
 80109d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80109d4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80109d8:	fb01 f303 	mul.w	r3, r1, r3
 80109dc:	4413      	add	r3, r2
 80109de:	781b      	ldrb	r3, [r3, #0]
 80109e0:	2b53      	cmp	r3, #83	; 0x53
 80109e2:	d013      	beq.n	8010a0c <fc07e894741fc85c512f976929ce54659d763792+0xb8>
 80109e4:	697a      	ldr	r2, [r7, #20]
 80109e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80109e8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80109ec:	fb01 f303 	mul.w	r3, r1, r3
 80109f0:	4413      	add	r3, r2
 80109f2:	781b      	ldrb	r3, [r3, #0]
 80109f4:	2b50      	cmp	r3, #80	; 0x50
 80109f6:	d009      	beq.n	8010a0c <fc07e894741fc85c512f976929ce54659d763792+0xb8>
 80109f8:	697a      	ldr	r2, [r7, #20]
 80109fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80109fc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010a00:	fb01 f303 	mul.w	r3, r1, r3
 8010a04:	4413      	add	r3, r2
 8010a06:	781b      	ldrb	r3, [r3, #0]
 8010a08:	2b5f      	cmp	r3, #95	; 0x5f
 8010a0a:	d917      	bls.n	8010a3c <fc07e894741fc85c512f976929ce54659d763792+0xe8>
 8010a0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010a0e:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010a12:	fb02 f303 	mul.w	r3, r2, r3
 8010a16:	3340      	adds	r3, #64	; 0x40
 8010a18:	697a      	ldr	r2, [r7, #20]
 8010a1a:	4413      	add	r3, r2
 8010a1c:	3301      	adds	r3, #1
 8010a1e:	4619      	mov	r1, r3
 8010a20:	6878      	ldr	r0, [r7, #4]
 8010a22:	f7fe fc83 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8010a26:	4603      	mov	r3, r0
 8010a28:	2b00      	cmp	r3, #0
 8010a2a:	d007      	beq.n	8010a3c <fc07e894741fc85c512f976929ce54659d763792+0xe8>
 8010a2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010a2e:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010a32:	fb02 f303 	mul.w	r3, r2, r3
 8010a36:	697a      	ldr	r2, [r7, #20]
 8010a38:	4413      	add	r3, r2
 8010a3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010a3c:	f7f5 fb28 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010a40:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010a42:	3301      	adds	r3, #1
 8010a44:	62bb      	str	r3, [r7, #40]	; 0x28
 8010a46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8010a48:	2b18      	cmp	r3, #24
 8010a4a:	d9a9      	bls.n	80109a0 <fc07e894741fc85c512f976929ce54659d763792+0x4c>
 8010a4c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010a4e:	2b00      	cmp	r3, #0
 8010a50:	f040 809f 	bne.w	8010b92 <fc07e894741fc85c512f976929ce54659d763792+0x23e>
 8010a54:	2300      	movs	r3, #0
 8010a56:	627b      	str	r3, [r7, #36]	; 0x24
 8010a58:	e097      	b.n	8010b8a <fc07e894741fc85c512f976929ce54659d763792+0x236>
 8010a5a:	f7f5 faf9 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010a5e:	697a      	ldr	r2, [r7, #20]
 8010a60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010a62:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010a66:	fb01 f303 	mul.w	r3, r1, r3
 8010a6a:	4413      	add	r3, r2
 8010a6c:	3301      	adds	r3, #1
 8010a6e:	781b      	ldrb	r3, [r3, #0]
 8010a70:	2b40      	cmp	r3, #64	; 0x40
 8010a72:	f040 8085 	bne.w	8010b80 <fc07e894741fc85c512f976929ce54659d763792+0x22c>
 8010a76:	697a      	ldr	r2, [r7, #20]
 8010a78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010a7a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010a7e:	fb01 f303 	mul.w	r3, r1, r3
 8010a82:	4413      	add	r3, r2
 8010a84:	781b      	ldrb	r3, [r3, #0]
 8010a86:	2b53      	cmp	r3, #83	; 0x53
 8010a88:	d032      	beq.n	8010af0 <fc07e894741fc85c512f976929ce54659d763792+0x19c>
 8010a8a:	697a      	ldr	r2, [r7, #20]
 8010a8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010a8e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010a92:	fb01 f303 	mul.w	r3, r1, r3
 8010a96:	4413      	add	r3, r2
 8010a98:	781b      	ldrb	r3, [r3, #0]
 8010a9a:	2b50      	cmp	r3, #80	; 0x50
 8010a9c:	d028      	beq.n	8010af0 <fc07e894741fc85c512f976929ce54659d763792+0x19c>
 8010a9e:	697a      	ldr	r2, [r7, #20]
 8010aa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010aa2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010aa6:	fb01 f303 	mul.w	r3, r1, r3
 8010aaa:	4413      	add	r3, r2
 8010aac:	781b      	ldrb	r3, [r3, #0]
 8010aae:	2b5f      	cmp	r3, #95	; 0x5f
 8010ab0:	d909      	bls.n	8010ac6 <fc07e894741fc85c512f976929ce54659d763792+0x172>
 8010ab2:	697a      	ldr	r2, [r7, #20]
 8010ab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010ab6:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010aba:	fb01 f303 	mul.w	r3, r1, r3
 8010abe:	4413      	add	r3, r2
 8010ac0:	781b      	ldrb	r3, [r3, #0]
 8010ac2:	2b73      	cmp	r3, #115	; 0x73
 8010ac4:	d914      	bls.n	8010af0 <fc07e894741fc85c512f976929ce54659d763792+0x19c>
 8010ac6:	697a      	ldr	r2, [r7, #20]
 8010ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010aca:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010ace:	fb01 f303 	mul.w	r3, r1, r3
 8010ad2:	4413      	add	r3, r2
 8010ad4:	781b      	ldrb	r3, [r3, #0]
 8010ad6:	2b74      	cmp	r3, #116	; 0x74
 8010ad8:	d152      	bne.n	8010b80 <fc07e894741fc85c512f976929ce54659d763792+0x22c>
 8010ada:	697a      	ldr	r2, [r7, #20]
 8010adc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010ade:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010ae2:	fb01 f303 	mul.w	r3, r1, r3
 8010ae6:	4413      	add	r3, r2
 8010ae8:	3310      	adds	r3, #16
 8010aea:	781b      	ldrb	r3, [r3, #0]
 8010aec:	2b3a      	cmp	r3, #58	; 0x3a
 8010aee:	d147      	bne.n	8010b80 <fc07e894741fc85c512f976929ce54659d763792+0x22c>
 8010af0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010af2:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010af6:	fb02 f303 	mul.w	r3, r2, r3
 8010afa:	3340      	adds	r3, #64	; 0x40
 8010afc:	697a      	ldr	r2, [r7, #20]
 8010afe:	4413      	add	r3, r2
 8010b00:	3301      	adds	r3, #1
 8010b02:	4619      	mov	r1, r3
 8010b04:	6878      	ldr	r0, [r7, #4]
 8010b06:	f7fe fc11 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8010b0a:	4603      	mov	r3, r0
 8010b0c:	2b00      	cmp	r3, #0
 8010b0e:	d037      	beq.n	8010b80 <fc07e894741fc85c512f976929ce54659d763792+0x22c>
 8010b10:	2300      	movs	r3, #0
 8010b12:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8010b16:	697a      	ldr	r2, [r7, #20]
 8010b18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b1a:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010b1e:	fb01 f303 	mul.w	r3, r1, r3
 8010b22:	4413      	add	r3, r2
 8010b24:	3350      	adds	r3, #80	; 0x50
 8010b26:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010b2a:	7a9b      	ldrb	r3, [r3, #10]
 8010b2c:	4619      	mov	r1, r3
 8010b2e:	68fa      	ldr	r2, [r7, #12]
 8010b30:	7c3c      	ldrb	r4, [r7, #16]
 8010b32:	4623      	mov	r3, r4
 8010b34:	4290      	cmp	r0, r2
 8010b36:	eb71 0303 	sbcs.w	r3, r1, r3
 8010b3a:	d202      	bcs.n	8010b42 <fc07e894741fc85c512f976929ce54659d763792+0x1ee>
 8010b3c:	2301      	movs	r3, #1
 8010b3e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8010b42:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8010b46:	2b00      	cmp	r3, #0
 8010b48:	d01a      	beq.n	8010b80 <fc07e894741fc85c512f976929ce54659d763792+0x22c>
 8010b4a:	697a      	ldr	r2, [r7, #20]
 8010b4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b4e:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010b52:	fb01 f303 	mul.w	r3, r1, r3
 8010b56:	4413      	add	r3, r2
 8010b58:	3350      	adds	r3, #80	; 0x50
 8010b5a:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010b5e:	7a9b      	ldrb	r3, [r3, #10]
 8010b60:	4619      	mov	r1, r3
 8010b62:	4603      	mov	r3, r0
 8010b64:	60fb      	str	r3, [r7, #12]
 8010b66:	7c3b      	ldrb	r3, [r7, #16]
 8010b68:	460a      	mov	r2, r1
 8010b6a:	f362 0307 	bfi	r3, r2, #0, #8
 8010b6e:	743b      	strb	r3, [r7, #16]
 8010b70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b72:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010b76:	fb02 f303 	mul.w	r3, r2, r3
 8010b7a:	697a      	ldr	r2, [r7, #20]
 8010b7c:	4413      	add	r3, r2
 8010b7e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010b80:	f7f5 fa86 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010b84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b86:	3301      	adds	r3, #1
 8010b88:	627b      	str	r3, [r7, #36]	; 0x24
 8010b8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010b8c:	2b18      	cmp	r3, #24
 8010b8e:	f67f af64 	bls.w	8010a5a <fc07e894741fc85c512f976929ce54659d763792+0x106>
 8010b92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010b94:	2b00      	cmp	r3, #0
 8010b96:	d16d      	bne.n	8010c74 <fc07e894741fc85c512f976929ce54659d763792+0x320>
 8010b98:	2300      	movs	r3, #0
 8010b9a:	61fb      	str	r3, [r7, #28]
 8010b9c:	e067      	b.n	8010c6e <fc07e894741fc85c512f976929ce54659d763792+0x31a>
 8010b9e:	bf00      	nop
 8010ba0:	0802e54c 	.word	0x0802e54c
 8010ba4:	0802e628 	.word	0x0802e628
 8010ba8:	20000040 	.word	0x20000040
 8010bac:	f7f5 fa50 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010bb0:	697a      	ldr	r2, [r7, #20]
 8010bb2:	69fb      	ldr	r3, [r7, #28]
 8010bb4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010bb8:	fb01 f303 	mul.w	r3, r1, r3
 8010bbc:	4413      	add	r3, r2
 8010bbe:	3301      	adds	r3, #1
 8010bc0:	781b      	ldrb	r3, [r3, #0]
 8010bc2:	2b40      	cmp	r3, #64	; 0x40
 8010bc4:	d14e      	bne.n	8010c64 <fc07e894741fc85c512f976929ce54659d763792+0x310>
 8010bc6:	697a      	ldr	r2, [r7, #20]
 8010bc8:	69fb      	ldr	r3, [r7, #28]
 8010bca:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010bce:	fb01 f303 	mul.w	r3, r1, r3
 8010bd2:	4413      	add	r3, r2
 8010bd4:	781b      	ldrb	r3, [r3, #0]
 8010bd6:	2b73      	cmp	r3, #115	; 0x73
 8010bd8:	d944      	bls.n	8010c64 <fc07e894741fc85c512f976929ce54659d763792+0x310>
 8010bda:	69fb      	ldr	r3, [r7, #28]
 8010bdc:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010be0:	fb02 f303 	mul.w	r3, r2, r3
 8010be4:	3340      	adds	r3, #64	; 0x40
 8010be6:	697a      	ldr	r2, [r7, #20]
 8010be8:	4413      	add	r3, r2
 8010bea:	3301      	adds	r3, #1
 8010bec:	4619      	mov	r1, r3
 8010bee:	6878      	ldr	r0, [r7, #4]
 8010bf0:	f7fe fb9c 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8010bf4:	4603      	mov	r3, r0
 8010bf6:	2b00      	cmp	r3, #0
 8010bf8:	d034      	beq.n	8010c64 <fc07e894741fc85c512f976929ce54659d763792+0x310>
 8010bfa:	2300      	movs	r3, #0
 8010bfc:	76fb      	strb	r3, [r7, #27]
 8010bfe:	697a      	ldr	r2, [r7, #20]
 8010c00:	69fb      	ldr	r3, [r7, #28]
 8010c02:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010c06:	fb01 f303 	mul.w	r3, r1, r3
 8010c0a:	4413      	add	r3, r2
 8010c0c:	3350      	adds	r3, #80	; 0x50
 8010c0e:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010c12:	7a9b      	ldrb	r3, [r3, #10]
 8010c14:	4619      	mov	r1, r3
 8010c16:	68fa      	ldr	r2, [r7, #12]
 8010c18:	7c3c      	ldrb	r4, [r7, #16]
 8010c1a:	4623      	mov	r3, r4
 8010c1c:	4290      	cmp	r0, r2
 8010c1e:	eb71 0303 	sbcs.w	r3, r1, r3
 8010c22:	d201      	bcs.n	8010c28 <fc07e894741fc85c512f976929ce54659d763792+0x2d4>
 8010c24:	2301      	movs	r3, #1
 8010c26:	76fb      	strb	r3, [r7, #27]
 8010c28:	7efb      	ldrb	r3, [r7, #27]
 8010c2a:	2b00      	cmp	r3, #0
 8010c2c:	d01a      	beq.n	8010c64 <fc07e894741fc85c512f976929ce54659d763792+0x310>
 8010c2e:	697a      	ldr	r2, [r7, #20]
 8010c30:	69fb      	ldr	r3, [r7, #28]
 8010c32:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010c36:	fb01 f303 	mul.w	r3, r1, r3
 8010c3a:	4413      	add	r3, r2
 8010c3c:	3350      	adds	r3, #80	; 0x50
 8010c3e:	f8d3 0006 	ldr.w	r0, [r3, #6]
 8010c42:	7a9b      	ldrb	r3, [r3, #10]
 8010c44:	4619      	mov	r1, r3
 8010c46:	4603      	mov	r3, r0
 8010c48:	60fb      	str	r3, [r7, #12]
 8010c4a:	7c3b      	ldrb	r3, [r7, #16]
 8010c4c:	460a      	mov	r2, r1
 8010c4e:	f362 0307 	bfi	r3, r2, #0, #8
 8010c52:	743b      	strb	r3, [r7, #16]
 8010c54:	69fb      	ldr	r3, [r7, #28]
 8010c56:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010c5a:	fb02 f303 	mul.w	r3, r2, r3
 8010c5e:	697a      	ldr	r2, [r7, #20]
 8010c60:	4413      	add	r3, r2
 8010c62:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010c64:	f7f5 fa14 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010c68:	69fb      	ldr	r3, [r7, #28]
 8010c6a:	3301      	adds	r3, #1
 8010c6c:	61fb      	str	r3, [r7, #28]
 8010c6e:	69fb      	ldr	r3, [r7, #28]
 8010c70:	2b18      	cmp	r3, #24
 8010c72:	d99b      	bls.n	8010bac <fc07e894741fc85c512f976929ce54659d763792+0x258>
 8010c74:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010c76:	2b00      	cmp	r3, #0
 8010c78:	d00d      	beq.n	8010c96 <fc07e894741fc85c512f976929ce54659d763792+0x342>
 8010c7a:	f7f5 f9e9 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010c7e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010c80:	785b      	ldrb	r3, [r3, #1]
 8010c82:	2b40      	cmp	r3, #64	; 0x40
 8010c84:	d103      	bne.n	8010c8e <fc07e894741fc85c512f976929ce54659d763792+0x33a>
 8010c86:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010c88:	78fa      	ldrb	r2, [r7, #3]
 8010c8a:	705a      	strb	r2, [r3, #1]
 8010c8c:	e001      	b.n	8010c92 <fc07e894741fc85c512f976929ce54659d763792+0x33e>
 8010c8e:	2300      	movs	r3, #0
 8010c90:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010c92:	f7f5 f9fd 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010c96:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8010c98:	4618      	mov	r0, r3
 8010c9a:	3734      	adds	r7, #52	; 0x34
 8010c9c:	46bd      	mov	sp, r7
 8010c9e:	bd90      	pop	{r4, r7, pc}

08010ca0 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73>:
 8010ca0:	b580      	push	{r7, lr}
 8010ca2:	b086      	sub	sp, #24
 8010ca4:	af00      	add	r7, sp, #0
 8010ca6:	4603      	mov	r3, r0
 8010ca8:	460a      	mov	r2, r1
 8010caa:	71fb      	strb	r3, [r7, #7]
 8010cac:	4613      	mov	r3, r2
 8010cae:	71bb      	strb	r3, [r7, #6]
 8010cb0:	4b1b      	ldr	r3, [pc, #108]	; (8010d20 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73+0x80>)
 8010cb2:	681b      	ldr	r3, [r3, #0]
 8010cb4:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010cb8:	60fb      	str	r3, [r7, #12]
 8010cba:	2300      	movs	r3, #0
 8010cbc:	617b      	str	r3, [r7, #20]
 8010cbe:	f7f5 f9c7 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8010cc2:	2300      	movs	r3, #0
 8010cc4:	613b      	str	r3, [r7, #16]
 8010cc6:	e021      	b.n	8010d0c <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73+0x6c>
 8010cc8:	68fa      	ldr	r2, [r7, #12]
 8010cca:	693b      	ldr	r3, [r7, #16]
 8010ccc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010cd0:	fb01 f303 	mul.w	r3, r1, r3
 8010cd4:	4413      	add	r3, r2
 8010cd6:	3301      	adds	r3, #1
 8010cd8:	781b      	ldrb	r3, [r3, #0]
 8010cda:	79fa      	ldrb	r2, [r7, #7]
 8010cdc:	429a      	cmp	r2, r3
 8010cde:	d112      	bne.n	8010d06 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73+0x66>
 8010ce0:	68fa      	ldr	r2, [r7, #12]
 8010ce2:	693b      	ldr	r3, [r7, #16]
 8010ce4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010ce8:	fb01 f303 	mul.w	r3, r1, r3
 8010cec:	4413      	add	r3, r2
 8010cee:	3301      	adds	r3, #1
 8010cf0:	79ba      	ldrb	r2, [r7, #6]
 8010cf2:	701a      	strb	r2, [r3, #0]
 8010cf4:	693b      	ldr	r3, [r7, #16]
 8010cf6:	f44f 729e 	mov.w	r2, #316	; 0x13c
 8010cfa:	fb02 f303 	mul.w	r3, r2, r3
 8010cfe:	68fa      	ldr	r2, [r7, #12]
 8010d00:	4413      	add	r3, r2
 8010d02:	617b      	str	r3, [r7, #20]
 8010d04:	e005      	b.n	8010d12 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73+0x72>
 8010d06:	693b      	ldr	r3, [r7, #16]
 8010d08:	3301      	adds	r3, #1
 8010d0a:	613b      	str	r3, [r7, #16]
 8010d0c:	693b      	ldr	r3, [r7, #16]
 8010d0e:	2b18      	cmp	r3, #24
 8010d10:	d9da      	bls.n	8010cc8 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73+0x28>
 8010d12:	f7f5 f9bd 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8010d16:	697b      	ldr	r3, [r7, #20]
 8010d18:	4618      	mov	r0, r3
 8010d1a:	3718      	adds	r7, #24
 8010d1c:	46bd      	mov	sp, r7
 8010d1e:	bd80      	pop	{r7, pc}
 8010d20:	20000040 	.word	0x20000040

08010d24 <QUEUE_GetDiagnosticsCounters>:
 8010d24:	b480      	push	{r7}
 8010d26:	b085      	sub	sp, #20
 8010d28:	af00      	add	r7, sp, #0
 8010d2a:	6078      	str	r0, [r7, #4]
 8010d2c:	4b14      	ldr	r3, [pc, #80]	; (8010d80 <QUEUE_GetDiagnosticsCounters+0x5c>)
 8010d2e:	681b      	ldr	r3, [r3, #0]
 8010d30:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010d34:	60fb      	str	r3, [r7, #12]
 8010d36:	68fb      	ldr	r3, [r7, #12]
 8010d38:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8010d3c:	f8d3 2eec 	ldr.w	r2, [r3, #3820]	; 0xeec
 8010d40:	68fb      	ldr	r3, [r7, #12]
 8010d42:	f503 53f6 	add.w	r3, r3, #7872	; 0x1ec0
 8010d46:	331c      	adds	r3, #28
 8010d48:	429a      	cmp	r2, r3
 8010d4a:	d10a      	bne.n	8010d62 <QUEUE_GetDiagnosticsCounters+0x3e>
 8010d4c:	687a      	ldr	r2, [r7, #4]
 8010d4e:	68fb      	ldr	r3, [r7, #12]
 8010d50:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8010d54:	f603 63e4 	addw	r3, r3, #3812	; 0xee4
 8010d58:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010d5c:	e882 0003 	stmia.w	r2, {r0, r1}
 8010d60:	e009      	b.n	8010d76 <QUEUE_GetDiagnosticsCounters+0x52>
 8010d62:	687a      	ldr	r2, [r7, #4]
 8010d64:	68fb      	ldr	r3, [r7, #12]
 8010d66:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8010d6a:	f603 63dc 	addw	r3, r3, #3804	; 0xedc
 8010d6e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010d72:	e882 0003 	stmia.w	r2, {r0, r1}
 8010d76:	6878      	ldr	r0, [r7, #4]
 8010d78:	3714      	adds	r7, #20
 8010d7a:	46bd      	mov	sp, r7
 8010d7c:	bc80      	pop	{r7}
 8010d7e:	4770      	bx	lr
 8010d80:	20000040 	.word	0x20000040

08010d84 <printBuffer>:
 8010d84:	b580      	push	{r7, lr}
 8010d86:	b088      	sub	sp, #32
 8010d88:	af00      	add	r7, sp, #0
 8010d8a:	4603      	mov	r3, r0
 8010d8c:	71fb      	strb	r3, [r7, #7]
 8010d8e:	4b26      	ldr	r3, [pc, #152]	; (8010e28 <printBuffer+0xa4>)
 8010d90:	681b      	ldr	r3, [r3, #0]
 8010d92:	f603 4384 	addw	r3, r3, #3204	; 0xc84
 8010d96:	61bb      	str	r3, [r7, #24]
 8010d98:	4a24      	ldr	r2, [pc, #144]	; (8010e2c <printBuffer+0xa8>)
 8010d9a:	f107 0310 	add.w	r3, r7, #16
 8010d9e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010da2:	e883 0003 	stmia.w	r3, {r0, r1}
 8010da6:	79fb      	ldrb	r3, [r7, #7]
 8010da8:	4a21      	ldr	r2, [pc, #132]	; (8010e30 <printBuffer+0xac>)
 8010daa:	f107 0110 	add.w	r1, r7, #16
 8010dae:	c903      	ldmia	r1, {r0, r1}
 8010db0:	f004 fa2a 	bl	8015208 <LOGGER_PrintLine>
 8010db4:	f004 fa72 	bl	801529c <LOGGER_StartSection>
 8010db8:	4603      	mov	r3, r0
 8010dba:	2b00      	cmp	r3, #0
 8010dbc:	d030      	beq.n	8010e20 <printBuffer+0x9c>
 8010dbe:	4a1d      	ldr	r2, [pc, #116]	; (8010e34 <printBuffer+0xb0>)
 8010dc0:	f107 0308 	add.w	r3, r7, #8
 8010dc4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010dc8:	e883 0003 	stmia.w	r3, {r0, r1}
 8010dcc:	f107 0308 	add.w	r3, r7, #8
 8010dd0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010dd4:	f004 fa7e 	bl	80152d4 <LOGGER_PrintHeader>
 8010dd8:	2300      	movs	r3, #0
 8010dda:	61fb      	str	r3, [r7, #28]
 8010ddc:	e019      	b.n	8010e12 <printBuffer+0x8e>
 8010dde:	69ba      	ldr	r2, [r7, #24]
 8010de0:	69fb      	ldr	r3, [r7, #28]
 8010de2:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010de6:	fb01 f303 	mul.w	r3, r1, r3
 8010dea:	4413      	add	r3, r2
 8010dec:	3301      	adds	r3, #1
 8010dee:	781b      	ldrb	r3, [r3, #0]
 8010df0:	4618      	mov	r0, r3
 8010df2:	69ba      	ldr	r2, [r7, #24]
 8010df4:	69fb      	ldr	r3, [r7, #28]
 8010df6:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8010dfa:	fb01 f303 	mul.w	r3, r1, r3
 8010dfe:	4413      	add	r3, r2
 8010e00:	781b      	ldrb	r3, [r3, #0]
 8010e02:	461a      	mov	r2, r3
 8010e04:	4601      	mov	r1, r0
 8010e06:	480c      	ldr	r0, [pc, #48]	; (8010e38 <printBuffer+0xb4>)
 8010e08:	f004 fa30 	bl	801526c <LOGGER_Print>
 8010e0c:	69fb      	ldr	r3, [r7, #28]
 8010e0e:	3301      	adds	r3, #1
 8010e10:	61fb      	str	r3, [r7, #28]
 8010e12:	69fb      	ldr	r3, [r7, #28]
 8010e14:	2b18      	cmp	r3, #24
 8010e16:	d9e2      	bls.n	8010dde <printBuffer+0x5a>
 8010e18:	f004 f9e8 	bl	80151ec <LOGGER_PrintNL>
 8010e1c:	f004 fa51 	bl	80152c2 <LOGGER_EndSection>
 8010e20:	bf00      	nop
 8010e22:	3720      	adds	r7, #32
 8010e24:	46bd      	mov	sp, r7
 8010e26:	bd80      	pop	{r7, pc}
 8010e28:	20000040 	.word	0x20000040
 8010e2c:	0802e4d4 	.word	0x0802e4d4
 8010e30:	0802e6d0 	.word	0x0802e6d0
 8010e34:	0802e620 	.word	0x0802e620
 8010e38:	0802e704 	.word	0x0802e704

08010e3c <isSpaceForNonMaintenancePackets>:
 8010e3c:	b480      	push	{r7}
 8010e3e:	b085      	sub	sp, #20
 8010e40:	af00      	add	r7, sp, #0
 8010e42:	6078      	str	r0, [r7, #4]
 8010e44:	687b      	ldr	r3, [r7, #4]
 8010e46:	2b06      	cmp	r3, #6
 8010e48:	d801      	bhi.n	8010e4e <isSpaceForNonMaintenancePackets+0x12>
 8010e4a:	2300      	movs	r3, #0
 8010e4c:	e000      	b.n	8010e50 <isSpaceForNonMaintenancePackets+0x14>
 8010e4e:	2301      	movs	r3, #1
 8010e50:	4618      	mov	r0, r3
 8010e52:	3714      	adds	r7, #20
 8010e54:	46bd      	mov	sp, r7
 8010e56:	bc80      	pop	{r7}
 8010e58:	4770      	bx	lr

08010e5a <fb597b96e7954383068bf796c46efbfe6f531f14>:
 8010e5a:	b480      	push	{r7}
 8010e5c:	b083      	sub	sp, #12
 8010e5e:	af00      	add	r7, sp, #0
 8010e60:	6078      	str	r0, [r7, #4]
 8010e62:	687b      	ldr	r3, [r7, #4]
 8010e64:	2200      	movs	r2, #0
 8010e66:	701a      	strb	r2, [r3, #0]
 8010e68:	687b      	ldr	r3, [r7, #4]
 8010e6a:	2200      	movs	r2, #0
 8010e6c:	705a      	strb	r2, [r3, #1]
 8010e6e:	687b      	ldr	r3, [r7, #4]
 8010e70:	f203 1235 	addw	r2, r3, #309	; 0x135
 8010e74:	687b      	ldr	r3, [r7, #4]
 8010e76:	605a      	str	r2, [r3, #4]
 8010e78:	687b      	ldr	r3, [r7, #4]
 8010e7a:	2200      	movs	r2, #0
 8010e7c:	721a      	strb	r2, [r3, #8]
 8010e7e:	687b      	ldr	r3, [r7, #4]
 8010e80:	2200      	movs	r2, #0
 8010e82:	60da      	str	r2, [r3, #12]
 8010e84:	687b      	ldr	r3, [r7, #4]
 8010e86:	22fa      	movs	r2, #250	; 0xfa
 8010e88:	741a      	strb	r2, [r3, #16]
 8010e8a:	687b      	ldr	r3, [r7, #4]
 8010e8c:	2200      	movs	r2, #0
 8010e8e:	745a      	strb	r2, [r3, #17]
 8010e90:	687b      	ldr	r3, [r7, #4]
 8010e92:	2200      	movs	r2, #0
 8010e94:	825a      	strh	r2, [r3, #18]
 8010e96:	687b      	ldr	r3, [r7, #4]
 8010e98:	2200      	movs	r2, #0
 8010e9a:	829a      	strh	r2, [r3, #20]
 8010e9c:	687b      	ldr	r3, [r7, #4]
 8010e9e:	2200      	movs	r2, #0
 8010ea0:	619a      	str	r2, [r3, #24]
 8010ea2:	687b      	ldr	r3, [r7, #4]
 8010ea4:	2200      	movs	r2, #0
 8010ea6:	771a      	strb	r2, [r3, #28]
 8010ea8:	687b      	ldr	r3, [r7, #4]
 8010eaa:	2200      	movs	r2, #0
 8010eac:	775a      	strb	r2, [r3, #29]
 8010eae:	687b      	ldr	r3, [r7, #4]
 8010eb0:	2200      	movs	r2, #0
 8010eb2:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8010eb6:	687b      	ldr	r3, [r7, #4]
 8010eb8:	2200      	movs	r2, #0
 8010eba:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8010ebe:	687b      	ldr	r3, [r7, #4]
 8010ec0:	2201      	movs	r2, #1
 8010ec2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8010ec6:	687b      	ldr	r3, [r7, #4]
 8010ec8:	2200      	movs	r2, #0
 8010eca:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8010ece:	687b      	ldr	r3, [r7, #4]
 8010ed0:	2205      	movs	r2, #5
 8010ed2:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 8010ed6:	687b      	ldr	r3, [r7, #4]
 8010ed8:	2200      	movs	r2, #0
 8010eda:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 8010ede:	687b      	ldr	r3, [r7, #4]
 8010ee0:	2200      	movs	r2, #0
 8010ee2:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8010ee6:	687b      	ldr	r3, [r7, #4]
 8010ee8:	2200      	movs	r2, #0
 8010eea:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 8010eee:	687b      	ldr	r3, [r7, #4]
 8010ef0:	2200      	movs	r2, #0
 8010ef2:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 8010ef6:	2200      	movs	r2, #0
 8010ef8:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8010efc:	f893 205a 	ldrb.w	r2, [r3, #90]	; 0x5a
 8010f00:	f36f 0207 	bfc	r2, #0, #8
 8010f04:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
 8010f08:	687b      	ldr	r3, [r7, #4]
 8010f0a:	2200      	movs	r2, #0
 8010f0c:	65da      	str	r2, [r3, #92]	; 0x5c
 8010f0e:	687b      	ldr	r3, [r7, #4]
 8010f10:	2200      	movs	r2, #0
 8010f12:	f883 2092 	strb.w	r2, [r3, #146]	; 0x92
 8010f16:	687b      	ldr	r3, [r7, #4]
 8010f18:	2200      	movs	r2, #0
 8010f1a:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8010f1e:	687b      	ldr	r3, [r7, #4]
 8010f20:	2200      	movs	r2, #0
 8010f22:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 8010f26:	687b      	ldr	r3, [r7, #4]
 8010f28:	2200      	movs	r2, #0
 8010f2a:	f883 2095 	strb.w	r2, [r3, #149]	; 0x95
 8010f2e:	687b      	ldr	r3, [r7, #4]
 8010f30:	2200      	movs	r2, #0
 8010f32:	f883 2096 	strb.w	r2, [r3, #150]	; 0x96
 8010f36:	687b      	ldr	r3, [r7, #4]
 8010f38:	2200      	movs	r2, #0
 8010f3a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8010f3e:	687b      	ldr	r3, [r7, #4]
 8010f40:	2200      	movs	r2, #0
 8010f42:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8010f46:	687b      	ldr	r3, [r7, #4]
 8010f48:	2200      	movs	r2, #0
 8010f4a:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8010f4e:	687b      	ldr	r3, [r7, #4]
 8010f50:	2200      	movs	r2, #0
 8010f52:	f883 209f 	strb.w	r2, [r3, #159]	; 0x9f
 8010f56:	687b      	ldr	r3, [r7, #4]
 8010f58:	2200      	movs	r2, #0
 8010f5a:	f883 209e 	strb.w	r2, [r3, #158]	; 0x9e
 8010f5e:	687b      	ldr	r3, [r7, #4]
 8010f60:	2200      	movs	r2, #0
 8010f62:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8010f66:	687b      	ldr	r3, [r7, #4]
 8010f68:	2200      	movs	r2, #0
 8010f6a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8010f6e:	687b      	ldr	r3, [r7, #4]
 8010f70:	2200      	movs	r2, #0
 8010f72:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 8010f76:	687b      	ldr	r3, [r7, #4]
 8010f78:	2200      	movs	r2, #0
 8010f7a:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 8010f7e:	687b      	ldr	r3, [r7, #4]
 8010f80:	2200      	movs	r2, #0
 8010f82:	f883 20a4 	strb.w	r2, [r3, #164]	; 0xa4
 8010f86:	687b      	ldr	r3, [r7, #4]
 8010f88:	2200      	movs	r2, #0
 8010f8a:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 8010f8e:	687b      	ldr	r3, [r7, #4]
 8010f90:	2280      	movs	r2, #128	; 0x80
 8010f92:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8010f96:	687b      	ldr	r3, [r7, #4]
 8010f98:	22ff      	movs	r2, #255	; 0xff
 8010f9a:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
 8010f9e:	687b      	ldr	r3, [r7, #4]
 8010fa0:	2200      	movs	r2, #0
 8010fa2:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 8010fa6:	bf00      	nop
 8010fa8:	370c      	adds	r7, #12
 8010faa:	46bd      	mov	sp, r7
 8010fac:	bc80      	pop	{r7}
 8010fae:	4770      	bx	lr

08010fb0 <c5868198428dfaffddb0900c3d01452778b19d11>:
 8010fb0:	b480      	push	{r7}
 8010fb2:	b089      	sub	sp, #36	; 0x24
 8010fb4:	af00      	add	r7, sp, #0
 8010fb6:	60f8      	str	r0, [r7, #12]
 8010fb8:	60b9      	str	r1, [r7, #8]
 8010fba:	607a      	str	r2, [r7, #4]
 8010fbc:	68fb      	ldr	r3, [r7, #12]
 8010fbe:	61fb      	str	r3, [r7, #28]
 8010fc0:	68bb      	ldr	r3, [r7, #8]
 8010fc2:	61bb      	str	r3, [r7, #24]
 8010fc4:	687b      	ldr	r3, [r7, #4]
 8010fc6:	617b      	str	r3, [r7, #20]
 8010fc8:	2300      	movs	r3, #0
 8010fca:	613b      	str	r3, [r7, #16]
 8010fcc:	e00d      	b.n	8010fea <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 8010fce:	69ba      	ldr	r2, [r7, #24]
 8010fd0:	693b      	ldr	r3, [r7, #16]
 8010fd2:	441a      	add	r2, r3
 8010fd4:	6979      	ldr	r1, [r7, #20]
 8010fd6:	693b      	ldr	r3, [r7, #16]
 8010fd8:	1acb      	subs	r3, r1, r3
 8010fda:	3b01      	subs	r3, #1
 8010fdc:	69f9      	ldr	r1, [r7, #28]
 8010fde:	440b      	add	r3, r1
 8010fe0:	7812      	ldrb	r2, [r2, #0]
 8010fe2:	701a      	strb	r2, [r3, #0]
 8010fe4:	693b      	ldr	r3, [r7, #16]
 8010fe6:	3301      	adds	r3, #1
 8010fe8:	613b      	str	r3, [r7, #16]
 8010fea:	697a      	ldr	r2, [r7, #20]
 8010fec:	693b      	ldr	r3, [r7, #16]
 8010fee:	429a      	cmp	r2, r3
 8010ff0:	d8ed      	bhi.n	8010fce <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 8010ff2:	bf00      	nop
 8010ff4:	bf00      	nop
 8010ff6:	3724      	adds	r7, #36	; 0x24
 8010ff8:	46bd      	mov	sp, r7
 8010ffa:	bc80      	pop	{r7}
 8010ffc:	4770      	bx	lr

08010ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8010ffe:	b480      	push	{r7}
 8011000:	b089      	sub	sp, #36	; 0x24
 8011002:	af00      	add	r7, sp, #0
 8011004:	60f8      	str	r0, [r7, #12]
 8011006:	60b9      	str	r1, [r7, #8]
 8011008:	607a      	str	r2, [r7, #4]
 801100a:	68fb      	ldr	r3, [r7, #12]
 801100c:	61fb      	str	r3, [r7, #28]
 801100e:	68bb      	ldr	r3, [r7, #8]
 8011010:	61bb      	str	r3, [r7, #24]
 8011012:	687b      	ldr	r3, [r7, #4]
 8011014:	617b      	str	r3, [r7, #20]
 8011016:	2300      	movs	r3, #0
 8011018:	613b      	str	r3, [r7, #16]
 801101a:	e00d      	b.n	8011038 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 801101c:	69ba      	ldr	r2, [r7, #24]
 801101e:	693b      	ldr	r3, [r7, #16]
 8011020:	441a      	add	r2, r3
 8011022:	6979      	ldr	r1, [r7, #20]
 8011024:	693b      	ldr	r3, [r7, #16]
 8011026:	1acb      	subs	r3, r1, r3
 8011028:	3b01      	subs	r3, #1
 801102a:	69f9      	ldr	r1, [r7, #28]
 801102c:	440b      	add	r3, r1
 801102e:	7812      	ldrb	r2, [r2, #0]
 8011030:	701a      	strb	r2, [r3, #0]
 8011032:	693b      	ldr	r3, [r7, #16]
 8011034:	3301      	adds	r3, #1
 8011036:	613b      	str	r3, [r7, #16]
 8011038:	697a      	ldr	r2, [r7, #20]
 801103a:	693b      	ldr	r3, [r7, #16]
 801103c:	429a      	cmp	r2, r3
 801103e:	d8ed      	bhi.n	801101c <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8011040:	bf00      	nop
 8011042:	bf00      	nop
 8011044:	3724      	adds	r7, #36	; 0x24
 8011046:	46bd      	mov	sp, r7
 8011048:	bc80      	pop	{r7}
 801104a:	4770      	bx	lr

0801104c <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc>:
 801104c:	b580      	push	{r7, lr}
 801104e:	b084      	sub	sp, #16
 8011050:	af00      	add	r7, sp, #0
 8011052:	463b      	mov	r3, r7
 8011054:	e883 0003 	stmia.w	r3, {r0, r1}
 8011058:	4b10      	ldr	r3, [pc, #64]	; (801109c <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc+0x50>)
 801105a:	681b      	ldr	r3, [r3, #0]
 801105c:	f503 532d 	add.w	r3, r3, #11072	; 0x2b40
 8011060:	333c      	adds	r3, #60	; 0x3c
 8011062:	60fb      	str	r3, [r7, #12]
 8011064:	68fb      	ldr	r3, [r7, #12]
 8011066:	681b      	ldr	r3, [r3, #0]
 8011068:	2b00      	cmp	r3, #0
 801106a:	d013      	beq.n	8011094 <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc+0x48>
 801106c:	f7f4 fff0 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011070:	68fb      	ldr	r3, [r7, #12]
 8011072:	330c      	adds	r3, #12
 8011074:	463a      	mov	r2, r7
 8011076:	e892 0003 	ldmia.w	r2, {r0, r1}
 801107a:	6018      	str	r0, [r3, #0]
 801107c:	3304      	adds	r3, #4
 801107e:	7019      	strb	r1, [r3, #0]
 8011080:	f7f5 f806 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8011084:	68fb      	ldr	r3, [r7, #12]
 8011086:	681b      	ldr	r3, [r3, #0]
 8011088:	220b      	movs	r2, #11
 801108a:	68f9      	ldr	r1, [r7, #12]
 801108c:	4618      	mov	r0, r3
 801108e:	f002 fa43 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8011092:	e000      	b.n	8011096 <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc+0x4a>
 8011094:	bf00      	nop
 8011096:	3710      	adds	r7, #16
 8011098:	46bd      	mov	sp, r7
 801109a:	bd80      	pop	{r7, pc}
 801109c:	20000040 	.word	0x20000040

080110a0 <BRIDGE_OnStartNetworkRequest>:
 80110a0:	b590      	push	{r4, r7, lr}
 80110a2:	b095      	sub	sp, #84	; 0x54
 80110a4:	af04      	add	r7, sp, #16
 80110a6:	6078      	str	r0, [r7, #4]
 80110a8:	2302      	movs	r3, #2
 80110aa:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80110ae:	687b      	ldr	r3, [r7, #4]
 80110b0:	f103 020b 	add.w	r2, r3, #11
 80110b4:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 80110b8:	6811      	ldr	r1, [r2, #0]
 80110ba:	6852      	ldr	r2, [r2, #4]
 80110bc:	6019      	str	r1, [r3, #0]
 80110be:	605a      	str	r2, [r3, #4]
 80110c0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80110c4:	4618      	mov	r0, r3
 80110c6:	f7fb ffd1 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 80110ca:	687b      	ldr	r3, [r7, #4]
 80110cc:	3313      	adds	r3, #19
 80110ce:	4619      	mov	r1, r3
 80110d0:	2001      	movs	r0, #1
 80110d2:	f005 fb3d 	bl	8016750 <bdbe454f364e40446632df307cd018fd5121d6b0>
 80110d6:	687b      	ldr	r3, [r7, #4]
 80110d8:	3323      	adds	r3, #35	; 0x23
 80110da:	4618      	mov	r0, r3
 80110dc:	f001 f9be 	bl	801245c <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8>
 80110e0:	2304      	movs	r3, #4
 80110e2:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80110e6:	687b      	ldr	r3, [r7, #4]
 80110e8:	3301      	adds	r3, #1
 80110ea:	881b      	ldrh	r3, [r3, #0]
 80110ec:	b29b      	uxth	r3, r3
 80110ee:	f8a7 302d 	strh.w	r3, [r7, #45]	; 0x2d
 80110f2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80110f6:	4618      	mov	r0, r3
 80110f8:	f7fb ffb8 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 80110fc:	2305      	movs	r3, #5
 80110fe:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8011102:	687b      	ldr	r3, [r7, #4]
 8011104:	1cda      	adds	r2, r3, #3
 8011106:	f107 032d 	add.w	r3, r7, #45	; 0x2d
 801110a:	6811      	ldr	r1, [r2, #0]
 801110c:	6852      	ldr	r2, [r2, #4]
 801110e:	6019      	str	r1, [r3, #0]
 8011110:	605a      	str	r2, [r3, #4]
 8011112:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8011116:	4618      	mov	r0, r3
 8011118:	f7fb ffa8 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 801111c:	2303      	movs	r3, #3
 801111e:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8011122:	687b      	ldr	r3, [r7, #4]
 8011124:	1cd9      	adds	r1, r3, #3
 8011126:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801112a:	3301      	adds	r3, #1
 801112c:	2208      	movs	r2, #8
 801112e:	4618      	mov	r0, r3
 8011130:	f01a f881 	bl	802b236 <memcpy>
 8011134:	687b      	ldr	r3, [r7, #4]
 8011136:	f103 010b 	add.w	r1, r3, #11
 801113a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801113e:	3309      	adds	r3, #9
 8011140:	2208      	movs	r2, #8
 8011142:	4618      	mov	r0, r3
 8011144:	f01a f877 	bl	802b236 <memcpy>
 8011148:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801114c:	4618      	mov	r0, r3
 801114e:	f7fb ff25 	bl	800cf9c <46db78497509f29217d6d083aca2de1a300413c6>
 8011152:	f004 f8a3 	bl	801529c <LOGGER_StartSection>
 8011156:	4603      	mov	r3, r0
 8011158:	2b00      	cmp	r3, #0
 801115a:	d036      	beq.n	80111ca <BRIDGE_OnStartNetworkRequest+0x12a>
 801115c:	4a1d      	ldr	r2, [pc, #116]	; (80111d4 <BRIDGE_OnStartNetworkRequest+0x134>)
 801115e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8011162:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011166:	e883 0003 	stmia.w	r3, {r0, r1}
 801116a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801116e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011172:	f004 f8af 	bl	80152d4 <LOGGER_PrintHeader>
 8011176:	687b      	ldr	r3, [r7, #4]
 8011178:	1cd9      	adds	r1, r3, #3
 801117a:	f107 0318 	add.w	r3, r7, #24
 801117e:	2208      	movs	r2, #8
 8011180:	4618      	mov	r0, r3
 8011182:	f7ff ff3c 	bl	8010ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8011186:	687b      	ldr	r3, [r7, #4]
 8011188:	f103 010b 	add.w	r1, r3, #11
 801118c:	f107 0310 	add.w	r3, r7, #16
 8011190:	2208      	movs	r2, #8
 8011192:	4618      	mov	r0, r3
 8011194:	f7ff ff33 	bl	8010ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8011198:	687b      	ldr	r3, [r7, #4]
 801119a:	1c59      	adds	r1, r3, #1
 801119c:	f107 030e 	add.w	r3, r7, #14
 80111a0:	2202      	movs	r2, #2
 80111a2:	4618      	mov	r0, r3
 80111a4:	f7ff ff2b 	bl	8010ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 80111a8:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80111ac:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80111b0:	89fc      	ldrh	r4, [r7, #14]
 80111b2:	9402      	str	r4, [sp, #8]
 80111b4:	e9cd 2300 	strd	r2, r3, [sp]
 80111b8:	4602      	mov	r2, r0
 80111ba:	460b      	mov	r3, r1
 80111bc:	4806      	ldr	r0, [pc, #24]	; (80111d8 <BRIDGE_OnStartNetworkRequest+0x138>)
 80111be:	f004 f855 	bl	801526c <LOGGER_Print>
 80111c2:	f004 f813 	bl	80151ec <LOGGER_PrintNL>
 80111c6:	f004 f87c 	bl	80152c2 <LOGGER_EndSection>
 80111ca:	bf00      	nop
 80111cc:	3744      	adds	r7, #68	; 0x44
 80111ce:	46bd      	mov	sp, r7
 80111d0:	bd90      	pop	{r4, r7, pc}
 80111d2:	bf00      	nop
 80111d4:	0802e7a0 	.word	0x0802e7a0
 80111d8:	0802e768 	.word	0x0802e768

080111dc <35026cb1892f0fbf645572f3a2a8a2f27f287a78>:
 80111dc:	b580      	push	{r7, lr}
 80111de:	b0ea      	sub	sp, #424	; 0x1a8
 80111e0:	af00      	add	r7, sp, #0
 80111e2:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80111e6:	f5a3 73d2 	sub.w	r3, r3, #420	; 0x1a4
 80111ea:	6018      	str	r0, [r3, #0]
 80111ec:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80111f0:	f5a3 73d2 	sub.w	r3, r3, #420	; 0x1a4
 80111f4:	681b      	ldr	r3, [r3, #0]
 80111f6:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
 80111fa:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80111fe:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8011202:	4618      	mov	r0, r3
 8011204:	f7f4 fde2 	bl	8005dcc <EMBENET_BRT_Receive>
 8011208:	f8c7 01a0 	str.w	r0, [r7, #416]	; 0x1a0
 801120c:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 8011210:	2b00      	cmp	r3, #0
 8011212:	d07c      	beq.n	801130e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x132>
 8011214:	f107 024c 	add.w	r2, r7, #76	; 0x4c
 8011218:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 801121c:	f8d7 31a0 	ldr.w	r3, [r7, #416]	; 0x1a0
 8011220:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8011224:	f002 fa98 	bl	8013758 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce>
 8011228:	f8c7 019c 	str.w	r0, [r7, #412]	; 0x19c
 801122c:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 8011230:	2b00      	cmp	r3, #0
 8011232:	d06c      	beq.n	801130e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x132>
 8011234:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 8011238:	781b      	ldrb	r3, [r3, #0]
 801123a:	2b08      	cmp	r3, #8
 801123c:	d03d      	beq.n	80112ba <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0xde>
 801123e:	2b08      	cmp	r3, #8
 8011240:	dc4d      	bgt.n	80112de <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x102>
 8011242:	2b01      	cmp	r3, #1
 8011244:	d024      	beq.n	8011290 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0xb4>
 8011246:	2b03      	cmp	r3, #3
 8011248:	d149      	bne.n	80112de <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x102>
 801124a:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 801124e:	4618      	mov	r0, r3
 8011250:	f7ff ff26 	bl	80110a0 <BRIDGE_OnStartNetworkRequest>
 8011254:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 8011258:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 801125c:	2204      	movs	r2, #4
 801125e:	701a      	strb	r2, [r3, #0]
 8011260:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 8011264:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 8011268:	2300      	movs	r3, #0
 801126a:	f44f 72a1 	mov.w	r2, #322	; 0x142
 801126e:	f002 f9dd 	bl	801362c <204a5825006ec0766c6949df6e4d08a716e57723>
 8011272:	f8c7 0198 	str.w	r0, [r7, #408]	; 0x198
 8011276:	f8d7 3198 	ldr.w	r3, [r7, #408]	; 0x198
 801127a:	2b00      	cmp	r3, #0
 801127c:	dd46      	ble.n	801130c <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x130>
 801127e:	f8d7 2198 	ldr.w	r2, [r7, #408]	; 0x198
 8011282:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8011286:	4611      	mov	r1, r2
 8011288:	4618      	mov	r0, r3
 801128a:	f7f4 fd5f 	bl	8005d4c <EMBENET_BRT_Send>
 801128e:	e03d      	b.n	801130c <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x130>
 8011290:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 8011294:	f5a3 73be 	sub.w	r3, r3, #380	; 0x17c
 8011298:	4a59      	ldr	r2, [pc, #356]	; (8011400 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x224>)
 801129a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801129e:	e883 0003 	stmia.w	r3, {r0, r1}
 80112a2:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80112a6:	f5a3 73be 	sub.w	r3, r3, #380	; 0x17c
 80112aa:	4a56      	ldr	r2, [pc, #344]	; (8011404 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x228>)
 80112ac:	e893 0003 	ldmia.w	r3, {r0, r1}
 80112b0:	f003 ffaa 	bl	8015208 <LOGGER_PrintLine>
 80112b4:	f7f4 fe6a 	bl	8005f8c <EMBENET_BRT_Reset>
 80112b8:	e029      	b.n	801130e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x132>
 80112ba:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80112be:	1c58      	adds	r0, r3, #1
 80112c0:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80112c4:	f103 010a 	add.w	r1, r3, #10
 80112c8:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80112cc:	7a5b      	ldrb	r3, [r3, #9]
 80112ce:	461a      	mov	r2, r3
 80112d0:	f000 f946 	bl	8011560 <BRIDGE_DataIndication>
 80112d4:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 80112d8:	2200      	movs	r2, #0
 80112da:	609a      	str	r2, [r3, #8]
 80112dc:	e017      	b.n	801130e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x132>
 80112de:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80112e2:	f5a3 73c6 	sub.w	r3, r3, #396	; 0x18c
 80112e6:	4a48      	ldr	r2, [pc, #288]	; (8011408 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x22c>)
 80112e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80112ec:	e883 0003 	stmia.w	r3, {r0, r1}
 80112f0:	f8d7 319c 	ldr.w	r3, [r7, #412]	; 0x19c
 80112f4:	781b      	ldrb	r3, [r3, #0]
 80112f6:	461a      	mov	r2, r3
 80112f8:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80112fc:	f5a3 71c6 	sub.w	r1, r3, #396	; 0x18c
 8011300:	4613      	mov	r3, r2
 8011302:	4a42      	ldr	r2, [pc, #264]	; (801140c <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x230>)
 8011304:	c903      	ldmia	r1, {r0, r1}
 8011306:	f003 ff7f 	bl	8015208 <LOGGER_PrintLine>
 801130a:	e000      	b.n	801130e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x132>
 801130c:	bf00      	nop
 801130e:	f7fb fe31 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8011312:	4603      	mov	r3, r0
 8011314:	f083 0301 	eor.w	r3, r3, #1
 8011318:	b2db      	uxtb	r3, r3
 801131a:	2b00      	cmp	r3, #0
 801131c:	d16a      	bne.n	80113f4 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x218>
 801131e:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8011322:	689b      	ldr	r3, [r3, #8]
 8011324:	2b00      	cmp	r3, #0
 8011326:	d007      	beq.n	8011338 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x15c>
 8011328:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 801132c:	689b      	ldr	r3, [r3, #8]
 801132e:	1e5a      	subs	r2, r3, #1
 8011330:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8011334:	609a      	str	r2, [r3, #8]
 8011336:	e05e      	b.n	80113f6 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x21a>
 8011338:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 801133c:	220d      	movs	r2, #13
 801133e:	609a      	str	r2, [r3, #8]
 8011340:	f7fe fc32 	bl	800fba8 <e1319048c142912ea91dcc918ab796551ce50481>
 8011344:	4603      	mov	r3, r0
 8011346:	2b06      	cmp	r3, #6
 8011348:	bf8c      	ite	hi
 801134a:	2301      	movhi	r3, #1
 801134c:	2300      	movls	r3, #0
 801134e:	f887 3197 	strb.w	r3, [r7, #407]	; 0x197
 8011352:	f7f4 fe7d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011356:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 801135a:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 801135e:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 8011362:	320c      	adds	r2, #12
 8011364:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011368:	6018      	str	r0, [r3, #0]
 801136a:	3304      	adds	r3, #4
 801136c:	7019      	strb	r1, [r3, #0]
 801136e:	f7f4 fe8f 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8011372:	f897 3197 	ldrb.w	r3, [r7, #407]	; 0x197
 8011376:	2b00      	cmp	r3, #0
 8011378:	d001      	beq.n	801137e <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x1a2>
 801137a:	2206      	movs	r2, #6
 801137c:	e000      	b.n	8011380 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x1a4>
 801137e:	2205      	movs	r2, #5
 8011380:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 8011384:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 8011388:	701a      	strb	r2, [r3, #0]
 801138a:	f107 0144 	add.w	r1, r7, #68	; 0x44
 801138e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8011392:	3301      	adds	r3, #1
 8011394:	2205      	movs	r2, #5
 8011396:	4618      	mov	r0, r3
 8011398:	f7ff fe0a 	bl	8010fb0 <c5868198428dfaffddb0900c3d01452778b19d11>
 801139c:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 80113a0:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 80113a4:	2300      	movs	r3, #0
 80113a6:	f44f 72a1 	mov.w	r2, #322	; 0x142
 80113aa:	f002 f93f 	bl	801362c <204a5825006ec0766c6949df6e4d08a716e57723>
 80113ae:	f8c7 0190 	str.w	r0, [r7, #400]	; 0x190
 80113b2:	f8d7 3190 	ldr.w	r3, [r7, #400]	; 0x190
 80113b6:	2b00      	cmp	r3, #0
 80113b8:	dd08      	ble.n	80113cc <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x1f0>
 80113ba:	f8d7 2190 	ldr.w	r2, [r7, #400]	; 0x190
 80113be:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80113c2:	4611      	mov	r1, r2
 80113c4:	4618      	mov	r0, r3
 80113c6:	f7f4 fcc1 	bl	8005d4c <EMBENET_BRT_Send>
 80113ca:	e014      	b.n	80113f6 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x21a>
 80113cc:	f507 73d4 	add.w	r3, r7, #424	; 0x1a8
 80113d0:	f5a3 73ce 	sub.w	r3, r3, #412	; 0x19c
 80113d4:	4a0c      	ldr	r2, [pc, #48]	; (8011408 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x22c>)
 80113d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80113da:	e883 0003 	stmia.w	r3, {r0, r1}
 80113de:	f897 3197 	ldrb.w	r3, [r7, #407]	; 0x197
 80113e2:	f507 72d4 	add.w	r2, r7, #424	; 0x1a8
 80113e6:	f5a2 71ce 	sub.w	r1, r2, #412	; 0x19c
 80113ea:	4a09      	ldr	r2, [pc, #36]	; (8011410 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x234>)
 80113ec:	c903      	ldmia	r1, {r0, r1}
 80113ee:	f003 ff0b 	bl	8015208 <LOGGER_PrintLine>
 80113f2:	e000      	b.n	80113f6 <35026cb1892f0fbf645572f3a2a8a2f27f287a78+0x21a>
 80113f4:	bf00      	nop
 80113f6:	f507 77d4 	add.w	r7, r7, #424	; 0x1a8
 80113fa:	46bd      	mov	sp, r7
 80113fc:	bd80      	pop	{r7, pc}
 80113fe:	bf00      	nop
 8011400:	0802e7a0 	.word	0x0802e7a0
 8011404:	0802e7a8 	.word	0x0802e7a8
 8011408:	0802e760 	.word	0x0802e760
 801140c:	0802e7b8 	.word	0x0802e7b8
 8011410:	0802e7e0 	.word	0x0802e7e0

08011414 <dce4ce0d58651ef366444808f387d05a6157ac6c>:
 8011414:	b590      	push	{r4, r7, lr}
 8011416:	b0db      	sub	sp, #364	; 0x16c
 8011418:	af00      	add	r7, sp, #0
 801141a:	f507 74b4 	add.w	r4, r7, #360	; 0x168
 801141e:	f5a4 74ae 	sub.w	r4, r4, #348	; 0x15c
 8011422:	6020      	str	r0, [r4, #0]
 8011424:	f507 70b4 	add.w	r0, r7, #360	; 0x168
 8011428:	f5a0 70b0 	sub.w	r0, r0, #352	; 0x160
 801142c:	6001      	str	r1, [r0, #0]
 801142e:	f507 71b4 	add.w	r1, r7, #360	; 0x168
 8011432:	f5a1 71b2 	sub.w	r1, r1, #356	; 0x164
 8011436:	600a      	str	r2, [r1, #0]
 8011438:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801143c:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8011440:	6013      	str	r3, [r2, #0]
 8011442:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011446:	f5a3 73b0 	sub.w	r3, r3, #352	; 0x160
 801144a:	681b      	ldr	r3, [r3, #0]
 801144c:	3317      	adds	r3, #23
 801144e:	2bff      	cmp	r3, #255	; 0xff
 8011450:	d915      	bls.n	801147e <dce4ce0d58651ef366444808f387d05a6157ac6c+0x6a>
 8011452:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011456:	f5a3 73a8 	sub.w	r3, r3, #336	; 0x150
 801145a:	2200      	movs	r2, #0
 801145c:	601a      	str	r2, [r3, #0]
 801145e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011462:	f5a3 73a8 	sub.w	r3, r3, #336	; 0x150
 8011466:	4a3a      	ldr	r2, [pc, #232]	; (8011550 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x13c>)
 8011468:	605a      	str	r2, [r3, #4]
 801146a:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801146e:	f5a3 73a8 	sub.w	r3, r3, #336	; 0x150
 8011472:	4a38      	ldr	r2, [pc, #224]	; (8011554 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x140>)
 8011474:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011478:	f003 fec6 	bl	8015208 <LOGGER_PrintLine>
 801147c:	e063      	b.n	8011546 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x132>
 801147e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011482:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 8011486:	2207      	movs	r2, #7
 8011488:	701a      	strb	r2, [r3, #0]
 801148a:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801148e:	f5a3 73b2 	sub.w	r3, r3, #356	; 0x164
 8011492:	f107 0220 	add.w	r2, r7, #32
 8011496:	1c50      	adds	r0, r2, #1
 8011498:	2205      	movs	r2, #5
 801149a:	6819      	ldr	r1, [r3, #0]
 801149c:	f7ff fd88 	bl	8010fb0 <c5868198428dfaffddb0900c3d01452778b19d11>
 80114a0:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80114a4:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 80114a8:	f8d7 2178 	ldr.w	r2, [r7, #376]	; 0x178
 80114ac:	3306      	adds	r3, #6
 80114ae:	6811      	ldr	r1, [r2, #0]
 80114b0:	6852      	ldr	r2, [r2, #4]
 80114b2:	6019      	str	r1, [r3, #0]
 80114b4:	605a      	str	r2, [r3, #4]
 80114b6:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80114ba:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 80114be:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80114c2:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 80114c6:	6812      	ldr	r2, [r2, #0]
 80114c8:	330e      	adds	r3, #14
 80114ca:	6811      	ldr	r1, [r2, #0]
 80114cc:	6852      	ldr	r2, [r2, #4]
 80114ce:	6019      	str	r1, [r3, #0]
 80114d0:	605a      	str	r2, [r3, #4]
 80114d2:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80114d6:	f5a3 73b0 	sub.w	r3, r3, #352	; 0x160
 80114da:	681b      	ldr	r3, [r3, #0]
 80114dc:	b2da      	uxtb	r2, r3
 80114de:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80114e2:	f5a3 73a4 	sub.w	r3, r3, #328	; 0x148
 80114e6:	759a      	strb	r2, [r3, #22]
 80114e8:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 80114ec:	f5a3 73ae 	sub.w	r3, r3, #348	; 0x15c
 80114f0:	f107 0120 	add.w	r1, r7, #32
 80114f4:	f107 0020 	add.w	r0, r7, #32
 80114f8:	681b      	ldr	r3, [r3, #0]
 80114fa:	f44f 72a1 	mov.w	r2, #322	; 0x142
 80114fe:	f002 f895 	bl	801362c <204a5825006ec0766c6949df6e4d08a716e57723>
 8011502:	f8c7 0164 	str.w	r0, [r7, #356]	; 0x164
 8011506:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 801150a:	2b00      	cmp	r3, #0
 801150c:	da13      	bge.n	8011536 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x122>
 801150e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011512:	f5a3 73ac 	sub.w	r3, r3, #344	; 0x158
 8011516:	4a10      	ldr	r2, [pc, #64]	; (8011558 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x144>)
 8011518:	e892 0003 	ldmia.w	r2, {r0, r1}
 801151c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011520:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 8011524:	f5a3 71ac 	sub.w	r1, r3, #344	; 0x158
 8011528:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 801152c:	4a0b      	ldr	r2, [pc, #44]	; (801155c <dce4ce0d58651ef366444808f387d05a6157ac6c+0x148>)
 801152e:	c903      	ldmia	r1, {r0, r1}
 8011530:	f003 fe6a 	bl	8015208 <LOGGER_PrintLine>
 8011534:	e007      	b.n	8011546 <dce4ce0d58651ef366444808f387d05a6157ac6c+0x132>
 8011536:	f8d7 2164 	ldr.w	r2, [r7, #356]	; 0x164
 801153a:	f107 0320 	add.w	r3, r7, #32
 801153e:	4611      	mov	r1, r2
 8011540:	4618      	mov	r0, r3
 8011542:	f7f4 fc03 	bl	8005d4c <EMBENET_BRT_Send>
 8011546:	f507 77b6 	add.w	r7, r7, #364	; 0x16c
 801154a:	46bd      	mov	sp, r7
 801154c:	bd90      	pop	{r4, r7, pc}
 801154e:	bf00      	nop
 8011550:	0802e758 	.word	0x0802e758
 8011554:	0802e810 	.word	0x0802e810
 8011558:	0802e760 	.word	0x0802e760
 801155c:	0802e718 	.word	0x0802e718

08011560 <BRIDGE_DataIndication>:
 8011560:	b580      	push	{r7, lr}
 8011562:	b092      	sub	sp, #72	; 0x48
 8011564:	af00      	add	r7, sp, #0
 8011566:	60f8      	str	r0, [r7, #12]
 8011568:	60b9      	str	r1, [r7, #8]
 801156a:	607a      	str	r2, [r7, #4]
 801156c:	f7fb fd02 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8011570:	4603      	mov	r3, r0
 8011572:	f083 0301 	eor.w	r3, r3, #1
 8011576:	b2db      	uxtb	r3, r3
 8011578:	2b00      	cmp	r3, #0
 801157a:	f040 80ab 	bne.w	80116d4 <BRIDGE_DataIndication+0x174>
 801157e:	687b      	ldr	r3, [r7, #4]
 8011580:	2b05      	cmp	r3, #5
 8011582:	f240 80a7 	bls.w	80116d4 <BRIDGE_DataIndication+0x174>
 8011586:	4a55      	ldr	r2, [pc, #340]	; (80116dc <BRIDGE_DataIndication+0x17c>)
 8011588:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801158c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011590:	e883 0003 	stmia.w	r3, {r0, r1}
 8011594:	687b      	ldr	r3, [r7, #4]
 8011596:	4a52      	ldr	r2, [pc, #328]	; (80116e0 <BRIDGE_DataIndication+0x180>)
 8011598:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801159c:	c903      	ldmia	r1, {r0, r1}
 801159e:	f003 fe33 	bl	8015208 <LOGGER_PrintLine>
 80115a2:	2060      	movs	r0, #96	; 0x60
 80115a4:	f7fe f8c6 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 80115a8:	6478      	str	r0, [r7, #68]	; 0x44
 80115aa:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80115ac:	2b00      	cmp	r3, #0
 80115ae:	d10e      	bne.n	80115ce <BRIDGE_DataIndication+0x6e>
 80115b0:	4a4c      	ldr	r2, [pc, #304]	; (80116e4 <BRIDGE_DataIndication+0x184>)
 80115b2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80115b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80115ba:	e883 0003 	stmia.w	r3, {r0, r1}
 80115be:	4a4a      	ldr	r2, [pc, #296]	; (80116e8 <BRIDGE_DataIndication+0x188>)
 80115c0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80115c4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80115c8:	f003 fe1e 	bl	8015208 <LOGGER_PrintLine>
 80115cc:	e083      	b.n	80116d6 <BRIDGE_DataIndication+0x176>
 80115ce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80115d0:	2260      	movs	r2, #96	; 0x60
 80115d2:	701a      	strb	r2, [r3, #0]
 80115d4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80115d6:	2260      	movs	r2, #96	; 0x60
 80115d8:	705a      	strb	r2, [r3, #1]
 80115da:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80115dc:	2202      	movs	r2, #2
 80115de:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80115e2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80115e4:	3342      	adds	r3, #66	; 0x42
 80115e6:	2208      	movs	r2, #8
 80115e8:	68f9      	ldr	r1, [r7, #12]
 80115ea:	4618      	mov	r0, r3
 80115ec:	f019 fe23 	bl	802b236 <memcpy>
 80115f0:	6879      	ldr	r1, [r7, #4]
 80115f2:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80115f4:	f017 ff4e 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80115f8:	4603      	mov	r3, r0
 80115fa:	f083 0301 	eor.w	r3, r3, #1
 80115fe:	b2db      	uxtb	r3, r3
 8011600:	2b00      	cmp	r3, #0
 8011602:	d011      	beq.n	8011628 <BRIDGE_DataIndication+0xc8>
 8011604:	4a39      	ldr	r2, [pc, #228]	; (80116ec <BRIDGE_DataIndication+0x18c>)
 8011606:	f107 0320 	add.w	r3, r7, #32
 801160a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801160e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011612:	4a37      	ldr	r2, [pc, #220]	; (80116f0 <BRIDGE_DataIndication+0x190>)
 8011614:	f107 0320 	add.w	r3, r7, #32
 8011618:	e893 0003 	ldmia.w	r3, {r0, r1}
 801161c:	f003 fdf4 	bl	8015208 <LOGGER_PrintLine>
 8011620:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8011622:	f7fe f993 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8011626:	e056      	b.n	80116d6 <BRIDGE_DataIndication+0x176>
 8011628:	2002      	movs	r0, #2
 801162a:	f7fb fce7 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 801162e:	4602      	mov	r2, r0
 8011630:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8011632:	3341      	adds	r3, #65	; 0x41
 8011634:	4619      	mov	r1, r3
 8011636:	4610      	mov	r0, r2
 8011638:	f7fd fe78 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801163c:	4603      	mov	r3, r0
 801163e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8011642:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8011646:	f083 0301 	eor.w	r3, r3, #1
 801164a:	b2db      	uxtb	r3, r3
 801164c:	2b00      	cmp	r3, #0
 801164e:	d017      	beq.n	8011680 <BRIDGE_DataIndication+0x120>
 8011650:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8011652:	f018 f8e1 	bl	8029818 <95af8216ead996150d875cb6cdf792d92c29e2d8>
 8011656:	4603      	mov	r3, r0
 8011658:	2b11      	cmp	r3, #17
 801165a:	d811      	bhi.n	8011680 <BRIDGE_DataIndication+0x120>
 801165c:	4a23      	ldr	r2, [pc, #140]	; (80116ec <BRIDGE_DataIndication+0x18c>)
 801165e:	f107 0318 	add.w	r3, r7, #24
 8011662:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011666:	e883 0003 	stmia.w	r3, {r0, r1}
 801166a:	4a22      	ldr	r2, [pc, #136]	; (80116f4 <BRIDGE_DataIndication+0x194>)
 801166c:	f107 0318 	add.w	r3, r7, #24
 8011670:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011674:	f003 fdc8 	bl	8015208 <LOGGER_PrintLine>
 8011678:	6c78      	ldr	r0, [r7, #68]	; 0x44
 801167a:	f7fe f967 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801167e:	e02a      	b.n	80116d6 <BRIDGE_DataIndication+0x176>
 8011680:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8011682:	685b      	ldr	r3, [r3, #4]
 8011684:	687a      	ldr	r2, [r7, #4]
 8011686:	68b9      	ldr	r1, [r7, #8]
 8011688:	4618      	mov	r0, r3
 801168a:	f019 fdd4 	bl	802b236 <memcpy>
 801168e:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8011692:	2b00      	cmp	r3, #0
 8011694:	d003      	beq.n	801169e <BRIDGE_DataIndication+0x13e>
 8011696:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8011698:	f010 fc59 	bl	8021f4e <a16adbb478478495de36bd15141fbb4e05032f0d>
 801169c:	e01b      	b.n	80116d6 <BRIDGE_DataIndication+0x176>
 801169e:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80116a0:	f010 fc2a 	bl	8021ef8 <3e6bcf4afb14bf9f609f14ef4ad27a2385bb5ae5>
 80116a4:	4603      	mov	r3, r0
 80116a6:	f083 0301 	eor.w	r3, r3, #1
 80116aa:	b2db      	uxtb	r3, r3
 80116ac:	2b00      	cmp	r3, #0
 80116ae:	d012      	beq.n	80116d6 <BRIDGE_DataIndication+0x176>
 80116b0:	4a0e      	ldr	r2, [pc, #56]	; (80116ec <BRIDGE_DataIndication+0x18c>)
 80116b2:	f107 0310 	add.w	r3, r7, #16
 80116b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80116ba:	e883 0003 	stmia.w	r3, {r0, r1}
 80116be:	4a0e      	ldr	r2, [pc, #56]	; (80116f8 <BRIDGE_DataIndication+0x198>)
 80116c0:	f107 0310 	add.w	r3, r7, #16
 80116c4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80116c8:	f003 fd9e 	bl	8015208 <LOGGER_PrintLine>
 80116cc:	6c78      	ldr	r0, [r7, #68]	; 0x44
 80116ce:	f7fe f93d 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80116d2:	e000      	b.n	80116d6 <BRIDGE_DataIndication+0x176>
 80116d4:	bf00      	nop
 80116d6:	3748      	adds	r7, #72	; 0x48
 80116d8:	46bd      	mov	sp, r7
 80116da:	bd80      	pop	{r7, pc}
 80116dc:	0802e7a0 	.word	0x0802e7a0
 80116e0:	0802e828 	.word	0x0802e828
 80116e4:	0802e8e0 	.word	0x0802e8e0
 80116e8:	0802e844 	.word	0x0802e844
 80116ec:	0802e760 	.word	0x0802e760
 80116f0:	0802e864 	.word	0x0802e864
 80116f4:	0802e888 	.word	0x0802e888
 80116f8:	0802e8bc 	.word	0x0802e8bc

080116fc <c122f50a74e97b0b971f059f93cac9f52ab85af9>:
 80116fc:	b580      	push	{r7, lr}
 80116fe:	b084      	sub	sp, #16
 8011700:	af00      	add	r7, sp, #0
 8011702:	6078      	str	r0, [r7, #4]
 8011704:	460b      	mov	r3, r1
 8011706:	70fb      	strb	r3, [r7, #3]
 8011708:	687b      	ldr	r3, [r7, #4]
 801170a:	2260      	movs	r2, #96	; 0x60
 801170c:	705a      	strb	r2, [r3, #1]
 801170e:	687b      	ldr	r3, [r7, #4]
 8011710:	781b      	ldrb	r3, [r3, #0]
 8011712:	2b60      	cmp	r3, #96	; 0x60
 8011714:	d00d      	beq.n	8011732 <c122f50a74e97b0b971f059f93cac9f52ab85af9+0x36>
 8011716:	4a0a      	ldr	r2, [pc, #40]	; (8011740 <c122f50a74e97b0b971f059f93cac9f52ab85af9+0x44>)
 8011718:	f107 0308 	add.w	r3, r7, #8
 801171c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011720:	e883 0003 	stmia.w	r3, {r0, r1}
 8011724:	4a07      	ldr	r2, [pc, #28]	; (8011744 <c122f50a74e97b0b971f059f93cac9f52ab85af9+0x48>)
 8011726:	f107 0308 	add.w	r3, r7, #8
 801172a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801172e:	f003 fd6b 	bl	8015208 <LOGGER_PrintLine>
 8011732:	6878      	ldr	r0, [r7, #4]
 8011734:	f7fe f90a 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8011738:	bf00      	nop
 801173a:	3710      	adds	r7, #16
 801173c:	46bd      	mov	sp, r7
 801173e:	bd80      	pop	{r7, pc}
 8011740:	0802e760 	.word	0x0802e760
 8011744:	0802e8e8 	.word	0x0802e8e8

08011748 <db78e4d9b28d7c42d16d219c1384c29b20a49150>:
 8011748:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801174c:	b08b      	sub	sp, #44	; 0x2c
 801174e:	af02      	add	r7, sp, #8
 8011750:	6078      	str	r0, [r7, #4]
 8011752:	4b20      	ldr	r3, [pc, #128]	; (80117d4 <db78e4d9b28d7c42d16d219c1384c29b20a49150+0x8c>)
 8011754:	681b      	ldr	r3, [r3, #0]
 8011756:	f503 532d 	add.w	r3, r3, #11072	; 0x2b40
 801175a:	333c      	adds	r3, #60	; 0x3c
 801175c:	61fb      	str	r3, [r7, #28]
 801175e:	69fb      	ldr	r3, [r7, #28]
 8011760:	685b      	ldr	r3, [r3, #4]
 8011762:	2b00      	cmp	r3, #0
 8011764:	d031      	beq.n	80117ca <db78e4d9b28d7c42d16d219c1384c29b20a49150+0x82>
 8011766:	4a1c      	ldr	r2, [pc, #112]	; (80117d8 <db78e4d9b28d7c42d16d219c1384c29b20a49150+0x90>)
 8011768:	f107 0314 	add.w	r3, r7, #20
 801176c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011770:	e883 0003 	stmia.w	r3, {r0, r1}
 8011774:	687b      	ldr	r3, [r7, #4]
 8011776:	7a1b      	ldrb	r3, [r3, #8]
 8011778:	4618      	mov	r0, r3
 801177a:	6879      	ldr	r1, [r7, #4]
 801177c:	f8d1 2056 	ldr.w	r2, [r1, #86]	; 0x56
 8011780:	f891 105a 	ldrb.w	r1, [r1, #90]	; 0x5a
 8011784:	460b      	mov	r3, r1
 8011786:	e9cd 2300 	strd	r2, r3, [sp]
 801178a:	4603      	mov	r3, r0
 801178c:	4a13      	ldr	r2, [pc, #76]	; (80117dc <db78e4d9b28d7c42d16d219c1384c29b20a49150+0x94>)
 801178e:	f107 0114 	add.w	r1, r7, #20
 8011792:	c903      	ldmia	r1, {r0, r1}
 8011794:	f003 fd38 	bl	8015208 <LOGGER_PrintLine>
 8011798:	69fb      	ldr	r3, [r7, #28]
 801179a:	685c      	ldr	r4, [r3, #4]
 801179c:	687b      	ldr	r3, [r7, #4]
 801179e:	685d      	ldr	r5, [r3, #4]
 80117a0:	687b      	ldr	r3, [r7, #4]
 80117a2:	7a1b      	ldrb	r3, [r3, #8]
 80117a4:	4699      	mov	r9, r3
 80117a6:	687b      	ldr	r3, [r7, #4]
 80117a8:	f103 0656 	add.w	r6, r3, #86	; 0x56
 80117ac:	687b      	ldr	r3, [r7, #4]
 80117ae:	f103 0842 	add.w	r8, r3, #66	; 0x42
 80117b2:	2002      	movs	r0, #2
 80117b4:	f7fb fc22 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80117b8:	4603      	mov	r3, r0
 80117ba:	3301      	adds	r3, #1
 80117bc:	9300      	str	r3, [sp, #0]
 80117be:	4643      	mov	r3, r8
 80117c0:	4632      	mov	r2, r6
 80117c2:	4649      	mov	r1, r9
 80117c4:	4628      	mov	r0, r5
 80117c6:	47a0      	blx	r4
 80117c8:	e000      	b.n	80117cc <db78e4d9b28d7c42d16d219c1384c29b20a49150+0x84>
 80117ca:	bf00      	nop
 80117cc:	3724      	adds	r7, #36	; 0x24
 80117ce:	46bd      	mov	sp, r7
 80117d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80117d4:	20000040 	.word	0x20000040
 80117d8:	0802e7a0 	.word	0x0802e7a0
 80117dc:	0802e900 	.word	0x0802e900

080117e0 <bbe099565971cd2d437b6a8e152f225cced7c4ee>:
 80117e0:	b580      	push	{r7, lr}
 80117e2:	f5ad 7d7c 	sub.w	sp, sp, #1008	; 0x3f0
 80117e6:	af00      	add	r7, sp, #0
 80117e8:	4b0c      	ldr	r3, [pc, #48]	; (801181c <bbe099565971cd2d437b6a8e152f225cced7c4ee+0x3c>)
 80117ea:	681b      	ldr	r3, [r3, #0]
 80117ec:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80117f0:	f503 6339 	add.w	r3, r3, #2960	; 0xb90
 80117f4:	f44f 727b 	mov.w	r2, #1004	; 0x3ec
 80117f8:	2100      	movs	r1, #0
 80117fa:	4618      	mov	r0, r3
 80117fc:	f019 fc7c 	bl	802b0f8 <memset>
 8011800:	4b06      	ldr	r3, [pc, #24]	; (801181c <bbe099565971cd2d437b6a8e152f225cced7c4ee+0x3c>)
 8011802:	681b      	ldr	r3, [r3, #0]
 8011804:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 8011808:	3310      	adds	r3, #16
 801180a:	4619      	mov	r1, r3
 801180c:	4804      	ldr	r0, [pc, #16]	; (8011820 <bbe099565971cd2d437b6a8e152f225cced7c4ee+0x40>)
 801180e:	f7f5 f9a9 	bl	8006b64 <EMBENET_TIMER_Init>
 8011812:	bf00      	nop
 8011814:	f507 777c 	add.w	r7, r7, #1008	; 0x3f0
 8011818:	46bd      	mov	sp, r7
 801181a:	bd80      	pop	{r7, pc}
 801181c:	20000040 	.word	0x20000040
 8011820:	08011bc5 	.word	0x08011bc5

08011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>:
 8011824:	b580      	push	{r7, lr}
 8011826:	b084      	sub	sp, #16
 8011828:	af00      	add	r7, sp, #0
 801182a:	4603      	mov	r3, r0
 801182c:	71fb      	strb	r3, [r7, #7]
 801182e:	231f      	movs	r3, #31
 8011830:	73fb      	strb	r3, [r7, #15]
 8011832:	4b20      	ldr	r3, [pc, #128]	; (80118b4 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x90>)
 8011834:	681b      	ldr	r3, [r3, #0]
 8011836:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 801183a:	3310      	adds	r3, #16
 801183c:	60bb      	str	r3, [r7, #8]
 801183e:	f7f4 fc07 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011842:	79fb      	ldrb	r3, [r7, #7]
 8011844:	2b00      	cmp	r3, #0
 8011846:	d002      	beq.n	801184e <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x2a>
 8011848:	2b01      	cmp	r3, #1
 801184a:	d00d      	beq.n	8011868 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x44>
 801184c:	e02b      	b.n	80118a6 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x82>
 801184e:	68bb      	ldr	r3, [r7, #8]
 8011850:	7f5b      	ldrb	r3, [r3, #29]
 8011852:	f083 0301 	eor.w	r3, r3, #1
 8011856:	b2db      	uxtb	r3, r3
 8011858:	2b00      	cmp	r3, #0
 801185a:	d023      	beq.n	80118a4 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x80>
 801185c:	68bb      	ldr	r3, [r7, #8]
 801185e:	2201      	movs	r2, #1
 8011860:	775a      	strb	r2, [r3, #29]
 8011862:	2300      	movs	r3, #0
 8011864:	73fb      	strb	r3, [r7, #15]
 8011866:	e01d      	b.n	80118a4 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x80>
 8011868:	2301      	movs	r3, #1
 801186a:	73fb      	strb	r3, [r7, #15]
 801186c:	e016      	b.n	801189c <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x78>
 801186e:	7bfb      	ldrb	r3, [r7, #15]
 8011870:	68ba      	ldr	r2, [r7, #8]
 8011872:	015b      	lsls	r3, r3, #5
 8011874:	4413      	add	r3, r2
 8011876:	331d      	adds	r3, #29
 8011878:	781b      	ldrb	r3, [r3, #0]
 801187a:	f083 0301 	eor.w	r3, r3, #1
 801187e:	b2db      	uxtb	r3, r3
 8011880:	2b00      	cmp	r3, #0
 8011882:	d008      	beq.n	8011896 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x72>
 8011884:	7bfb      	ldrb	r3, [r7, #15]
 8011886:	68ba      	ldr	r2, [r7, #8]
 8011888:	015b      	lsls	r3, r3, #5
 801188a:	4413      	add	r3, r2
 801188c:	331d      	adds	r3, #29
 801188e:	2201      	movs	r2, #1
 8011890:	701a      	strb	r2, [r3, #0]
 8011892:	bf00      	nop
 8011894:	e007      	b.n	80118a6 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x82>
 8011896:	7bfb      	ldrb	r3, [r7, #15]
 8011898:	3301      	adds	r3, #1
 801189a:	73fb      	strb	r3, [r7, #15]
 801189c:	7bfb      	ldrb	r3, [r7, #15]
 801189e:	2b1f      	cmp	r3, #31
 80118a0:	d1e5      	bne.n	801186e <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x4a>
 80118a2:	e000      	b.n	80118a6 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc+0x82>
 80118a4:	bf00      	nop
 80118a6:	f7f4 fbf3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80118aa:	7bfb      	ldrb	r3, [r7, #15]
 80118ac:	4618      	mov	r0, r3
 80118ae:	3710      	adds	r7, #16
 80118b0:	46bd      	mov	sp, r7
 80118b2:	bd80      	pop	{r7, pc}
 80118b4:	20000040 	.word	0x20000040

080118b8 <a146aa5c27211710221f7063067066079d66a071>:
 80118b8:	b580      	push	{r7, lr}
 80118ba:	b086      	sub	sp, #24
 80118bc:	af02      	add	r7, sp, #8
 80118be:	60ba      	str	r2, [r7, #8]
 80118c0:	607b      	str	r3, [r7, #4]
 80118c2:	4603      	mov	r3, r0
 80118c4:	73fb      	strb	r3, [r7, #15]
 80118c6:	460b      	mov	r3, r1
 80118c8:	73bb      	strb	r3, [r7, #14]
 80118ca:	f000 f921 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 80118ce:	4602      	mov	r2, r0
 80118d0:	7bb9      	ldrb	r1, [r7, #14]
 80118d2:	7bf8      	ldrb	r0, [r7, #15]
 80118d4:	69bb      	ldr	r3, [r7, #24]
 80118d6:	9301      	str	r3, [sp, #4]
 80118d8:	687b      	ldr	r3, [r7, #4]
 80118da:	9300      	str	r3, [sp, #0]
 80118dc:	4613      	mov	r3, r2
 80118de:	68ba      	ldr	r2, [r7, #8]
 80118e0:	f000 f804 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80118e4:	bf00      	nop
 80118e6:	3710      	adds	r7, #16
 80118e8:	46bd      	mov	sp, r7
 80118ea:	bd80      	pop	{r7, pc}

080118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>:
 80118ec:	b590      	push	{r4, r7, lr}
 80118ee:	b091      	sub	sp, #68	; 0x44
 80118f0:	af00      	add	r7, sp, #0
 80118f2:	60ba      	str	r2, [r7, #8]
 80118f4:	607b      	str	r3, [r7, #4]
 80118f6:	4603      	mov	r3, r0
 80118f8:	73fb      	strb	r3, [r7, #15]
 80118fa:	460b      	mov	r3, r1
 80118fc:	73bb      	strb	r3, [r7, #14]
 80118fe:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8011900:	2b00      	cmp	r3, #0
 8011902:	d104      	bne.n	801190e <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x22>
 8011904:	2259      	movs	r2, #89	; 0x59
 8011906:	496a      	ldr	r1, [pc, #424]	; (8011ab0 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1c4>)
 8011908:	486a      	ldr	r0, [pc, #424]	; (8011ab4 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1c8>)
 801190a:	f7ef fefd 	bl	8001708 <EXPECT_OnAbortHandler>
 801190e:	4b6a      	ldr	r3, [pc, #424]	; (8011ab8 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1cc>)
 8011910:	681b      	ldr	r3, [r3, #0]
 8011912:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 8011916:	3310      	adds	r3, #16
 8011918:	63fb      	str	r3, [r7, #60]	; 0x3c
 801191a:	7bfb      	ldrb	r3, [r7, #15]
 801191c:	2b1e      	cmp	r3, #30
 801191e:	d80a      	bhi.n	8011936 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x4a>
 8011920:	7bfb      	ldrb	r3, [r7, #15]
 8011922:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011924:	015b      	lsls	r3, r3, #5
 8011926:	4413      	add	r3, r2
 8011928:	331d      	adds	r3, #29
 801192a:	781b      	ldrb	r3, [r3, #0]
 801192c:	f083 0301 	eor.w	r3, r3, #1
 8011930:	b2db      	uxtb	r3, r3
 8011932:	2b00      	cmp	r3, #0
 8011934:	d004      	beq.n	8011940 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x54>
 8011936:	225c      	movs	r2, #92	; 0x5c
 8011938:	495d      	ldr	r1, [pc, #372]	; (8011ab0 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1c4>)
 801193a:	4860      	ldr	r0, [pc, #384]	; (8011abc <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1d0>)
 801193c:	f7ef fee4 	bl	8001708 <EXPECT_OnAbortHandler>
 8011940:	f7f4 fb86 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011944:	7bfb      	ldrb	r3, [r7, #15]
 8011946:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011948:	015b      	lsls	r3, r3, #5
 801194a:	4413      	add	r3, r2
 801194c:	7bba      	ldrb	r2, [r7, #14]
 801194e:	701a      	strb	r2, [r3, #0]
 8011950:	7bfb      	ldrb	r3, [r7, #15]
 8011952:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011954:	015b      	lsls	r3, r3, #5
 8011956:	4413      	add	r3, r2
 8011958:	330c      	adds	r3, #12
 801195a:	68ba      	ldr	r2, [r7, #8]
 801195c:	601a      	str	r2, [r3, #0]
 801195e:	f000 f8d7 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 8011962:	63b8      	str	r0, [r7, #56]	; 0x38
 8011964:	687a      	ldr	r2, [r7, #4]
 8011966:	68bb      	ldr	r3, [r7, #8]
 8011968:	4413      	add	r3, r2
 801196a:	637b      	str	r3, [r7, #52]	; 0x34
 801196c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801196e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8011970:	1ad3      	subs	r3, r2, r3
 8011972:	633b      	str	r3, [r7, #48]	; 0x30
 8011974:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8011976:	4a52      	ldr	r2, [pc, #328]	; (8011ac0 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1d4>)
 8011978:	4293      	cmp	r3, r2
 801197a:	d907      	bls.n	801198c <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0xa0>
 801197c:	7bfb      	ldrb	r3, [r7, #15]
 801197e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011980:	015b      	lsls	r3, r3, #5
 8011982:	4413      	add	r3, r2
 8011984:	3310      	adds	r3, #16
 8011986:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8011988:	601a      	str	r2, [r3, #0]
 801198a:	e02e      	b.n	80119ea <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0xfe>
 801198c:	f7f5 f998 	bl	8006cc0 <EMBENET_TIMER_GetMaxCompareDuration>
 8011990:	4601      	mov	r1, r0
 8011992:	7bfb      	ldrb	r3, [r7, #15]
 8011994:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8011996:	fbb2 f2f1 	udiv	r2, r2, r1
 801199a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 801199c:	015b      	lsls	r3, r3, #5
 801199e:	440b      	add	r3, r1
 80119a0:	3314      	adds	r3, #20
 80119a2:	601a      	str	r2, [r3, #0]
 80119a4:	7bfb      	ldrb	r3, [r7, #15]
 80119a6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80119a8:	015b      	lsls	r3, r3, #5
 80119aa:	4413      	add	r3, r2
 80119ac:	3314      	adds	r3, #20
 80119ae:	681b      	ldr	r3, [r3, #0]
 80119b0:	2b00      	cmp	r3, #0
 80119b2:	d107      	bne.n	80119c4 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0xd8>
 80119b4:	7bfb      	ldrb	r3, [r7, #15]
 80119b6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80119b8:	015b      	lsls	r3, r3, #5
 80119ba:	4413      	add	r3, r2
 80119bc:	3310      	adds	r3, #16
 80119be:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80119c0:	601a      	str	r2, [r3, #0]
 80119c2:	e012      	b.n	80119ea <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0xfe>
 80119c4:	7bfb      	ldrb	r3, [r7, #15]
 80119c6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80119c8:	015b      	lsls	r3, r3, #5
 80119ca:	4413      	add	r3, r2
 80119cc:	3314      	adds	r3, #20
 80119ce:	681c      	ldr	r4, [r3, #0]
 80119d0:	f7f5 f976 	bl	8006cc0 <EMBENET_TIMER_GetMaxCompareDuration>
 80119d4:	4603      	mov	r3, r0
 80119d6:	fb03 f204 	mul.w	r2, r3, r4
 80119da:	7bfb      	ldrb	r3, [r7, #15]
 80119dc:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80119de:	1a8a      	subs	r2, r1, r2
 80119e0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80119e2:	015b      	lsls	r3, r3, #5
 80119e4:	440b      	add	r3, r1
 80119e6:	3310      	adds	r3, #16
 80119e8:	601a      	str	r2, [r3, #0]
 80119ea:	7bfb      	ldrb	r3, [r7, #15]
 80119ec:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80119ee:	015b      	lsls	r3, r3, #5
 80119f0:	4413      	add	r3, r2
 80119f2:	331c      	adds	r3, #28
 80119f4:	2201      	movs	r2, #1
 80119f6:	701a      	strb	r2, [r3, #0]
 80119f8:	7bfb      	ldrb	r3, [r7, #15]
 80119fa:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80119fc:	015b      	lsls	r3, r3, #5
 80119fe:	4413      	add	r3, r2
 8011a00:	3304      	adds	r3, #4
 8011a02:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8011a04:	601a      	str	r2, [r3, #0]
 8011a06:	7bfb      	ldrb	r3, [r7, #15]
 8011a08:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011a0a:	015b      	lsls	r3, r3, #5
 8011a0c:	4413      	add	r3, r2
 8011a0e:	3308      	adds	r3, #8
 8011a10:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8011a12:	601a      	str	r2, [r3, #0]
 8011a14:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a16:	f893 33e8 	ldrb.w	r3, [r3, #1000]	; 0x3e8
 8011a1a:	f083 0301 	eor.w	r3, r3, #1
 8011a1e:	b2db      	uxtb	r3, r3
 8011a20:	2b00      	cmp	r3, #0
 8011a22:	d03e      	beq.n	8011aa2 <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1b6>
 8011a24:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a26:	f893 33e9 	ldrb.w	r3, [r3, #1001]	; 0x3e9
 8011a2a:	2b00      	cmp	r3, #0
 8011a2c:	d026      	beq.n	8011a7c <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x190>
 8011a2e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a30:	f8d3 23e0 	ldr.w	r2, [r3, #992]	; 0x3e0
 8011a34:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a36:	f8d3 33e4 	ldr.w	r3, [r3, #996]	; 0x3e4
 8011a3a:	1ad3      	subs	r3, r2, r3
 8011a3c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8011a3e:	7bfb      	ldrb	r3, [r7, #15]
 8011a40:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011a42:	015b      	lsls	r3, r3, #5
 8011a44:	4413      	add	r3, r2
 8011a46:	3310      	adds	r3, #16
 8011a48:	681a      	ldr	r2, [r3, #0]
 8011a4a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a4c:	f8d3 33e4 	ldr.w	r3, [r3, #996]	; 0x3e4
 8011a50:	1ad3      	subs	r3, r2, r3
 8011a52:	62bb      	str	r3, [r7, #40]	; 0x28
 8011a54:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8011a56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8011a58:	429a      	cmp	r2, r3
 8011a5a:	d21e      	bcs.n	8011a9a <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1ae>
 8011a5c:	7bfb      	ldrb	r3, [r7, #15]
 8011a5e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011a60:	015b      	lsls	r3, r3, #5
 8011a62:	4413      	add	r3, r2
 8011a64:	3310      	adds	r3, #16
 8011a66:	681a      	ldr	r2, [r3, #0]
 8011a68:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a6a:	f8c3 23e0 	str.w	r2, [r3, #992]	; 0x3e0
 8011a6e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a70:	f8d3 33e0 	ldr.w	r3, [r3, #992]	; 0x3e0
 8011a74:	4618      	mov	r0, r3
 8011a76:	f7f5 f8e9 	bl	8006c4c <EMBENET_TIMER_SetCompare>
 8011a7a:	e00e      	b.n	8011a9a <730eb7956d67b4105233f5dd87140a7c05a0a0f0+0x1ae>
 8011a7c:	7bfb      	ldrb	r3, [r7, #15]
 8011a7e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8011a80:	015b      	lsls	r3, r3, #5
 8011a82:	4413      	add	r3, r2
 8011a84:	3310      	adds	r3, #16
 8011a86:	681a      	ldr	r2, [r3, #0]
 8011a88:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a8a:	f8c3 23e0 	str.w	r2, [r3, #992]	; 0x3e0
 8011a8e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a90:	f8d3 33e0 	ldr.w	r3, [r3, #992]	; 0x3e0
 8011a94:	4618      	mov	r0, r3
 8011a96:	f7f5 f8d9 	bl	8006c4c <EMBENET_TIMER_SetCompare>
 8011a9a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011a9c:	2201      	movs	r2, #1
 8011a9e:	f883 23e9 	strb.w	r2, [r3, #1001]	; 0x3e9
 8011aa2:	f7f4 faf5 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8011aa6:	bf00      	nop
 8011aa8:	3744      	adds	r7, #68	; 0x44
 8011aaa:	46bd      	mov	sp, r7
 8011aac:	bd90      	pop	{r4, r7, pc}
 8011aae:	bf00      	nop
 8011ab0:	0802e928 	.word	0x0802e928
 8011ab4:	0802e990 	.word	0x0802e990
 8011ab8:	20000040 	.word	0x20000040
 8011abc:	0802e9bc 	.word	0x0802e9bc
 8011ac0:	ffffec78 	.word	0xffffec78

08011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>:
 8011ac4:	b580      	push	{r7, lr}
 8011ac6:	b084      	sub	sp, #16
 8011ac8:	af00      	add	r7, sp, #0
 8011aca:	4603      	mov	r3, r0
 8011acc:	71fb      	strb	r3, [r7, #7]
 8011ace:	79fb      	ldrb	r3, [r7, #7]
 8011ad0:	2b1e      	cmp	r3, #30
 8011ad2:	d817      	bhi.n	8011b04 <2f27d002e6f5798bf50ec4e1714df836a8561b81+0x40>
 8011ad4:	4b0d      	ldr	r3, [pc, #52]	; (8011b0c <2f27d002e6f5798bf50ec4e1714df836a8561b81+0x48>)
 8011ad6:	681b      	ldr	r3, [r3, #0]
 8011ad8:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 8011adc:	3310      	adds	r3, #16
 8011ade:	60fb      	str	r3, [r7, #12]
 8011ae0:	f7f4 fab6 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011ae4:	79fb      	ldrb	r3, [r7, #7]
 8011ae6:	68fa      	ldr	r2, [r7, #12]
 8011ae8:	015b      	lsls	r3, r3, #5
 8011aea:	4413      	add	r3, r2
 8011aec:	331c      	adds	r3, #28
 8011aee:	2200      	movs	r2, #0
 8011af0:	701a      	strb	r2, [r3, #0]
 8011af2:	79fb      	ldrb	r3, [r7, #7]
 8011af4:	68fa      	ldr	r2, [r7, #12]
 8011af6:	015b      	lsls	r3, r3, #5
 8011af8:	4413      	add	r3, r2
 8011afa:	3304      	adds	r3, #4
 8011afc:	2200      	movs	r2, #0
 8011afe:	601a      	str	r2, [r3, #0]
 8011b00:	f7f4 fac6 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8011b04:	bf00      	nop
 8011b06:	3710      	adds	r7, #16
 8011b08:	46bd      	mov	sp, r7
 8011b0a:	bd80      	pop	{r7, pc}
 8011b0c:	20000040 	.word	0x20000040

08011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>:
 8011b10:	b580      	push	{r7, lr}
 8011b12:	af00      	add	r7, sp, #0
 8011b14:	f7f5 f8ca 	bl	8006cac <EMBENET_TIMER_ReadCounter>
 8011b18:	4603      	mov	r3, r0
 8011b1a:	4618      	mov	r0, r3
 8011b1c:	bd80      	pop	{r7, pc}
	...

08011b20 <19ac46e5c06ffb6c1640c5d4070de271a544b182>:
 8011b20:	b580      	push	{r7, lr}
 8011b22:	b084      	sub	sp, #16
 8011b24:	af00      	add	r7, sp, #0
 8011b26:	4603      	mov	r3, r0
 8011b28:	71fb      	strb	r3, [r7, #7]
 8011b2a:	79fb      	ldrb	r3, [r7, #7]
 8011b2c:	2b1e      	cmp	r3, #30
 8011b2e:	d904      	bls.n	8011b3a <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x1a>
 8011b30:	22b8      	movs	r2, #184	; 0xb8
 8011b32:	4912      	ldr	r1, [pc, #72]	; (8011b7c <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x5c>)
 8011b34:	4812      	ldr	r0, [pc, #72]	; (8011b80 <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x60>)
 8011b36:	f7ef fde7 	bl	8001708 <EXPECT_OnAbortHandler>
 8011b3a:	4b12      	ldr	r3, [pc, #72]	; (8011b84 <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x64>)
 8011b3c:	681b      	ldr	r3, [r3, #0]
 8011b3e:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 8011b42:	3310      	adds	r3, #16
 8011b44:	60fb      	str	r3, [r7, #12]
 8011b46:	79fb      	ldrb	r3, [r7, #7]
 8011b48:	68fa      	ldr	r2, [r7, #12]
 8011b4a:	015b      	lsls	r3, r3, #5
 8011b4c:	4413      	add	r3, r2
 8011b4e:	331d      	adds	r3, #29
 8011b50:	781b      	ldrb	r3, [r3, #0]
 8011b52:	f083 0301 	eor.w	r3, r3, #1
 8011b56:	b2db      	uxtb	r3, r3
 8011b58:	2b00      	cmp	r3, #0
 8011b5a:	d004      	beq.n	8011b66 <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x46>
 8011b5c:	22bc      	movs	r2, #188	; 0xbc
 8011b5e:	4907      	ldr	r1, [pc, #28]	; (8011b7c <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x5c>)
 8011b60:	4807      	ldr	r0, [pc, #28]	; (8011b80 <19ac46e5c06ffb6c1640c5d4070de271a544b182+0x60>)
 8011b62:	f7ef fdd1 	bl	8001708 <EXPECT_OnAbortHandler>
 8011b66:	79fb      	ldrb	r3, [r7, #7]
 8011b68:	68fa      	ldr	r2, [r7, #12]
 8011b6a:	015b      	lsls	r3, r3, #5
 8011b6c:	4413      	add	r3, r2
 8011b6e:	3318      	adds	r3, #24
 8011b70:	681b      	ldr	r3, [r3, #0]
 8011b72:	4618      	mov	r0, r3
 8011b74:	3710      	adds	r7, #16
 8011b76:	46bd      	mov	sp, r7
 8011b78:	bd80      	pop	{r7, pc}
 8011b7a:	bf00      	nop
 8011b7c:	0802e928 	.word	0x0802e928
 8011b80:	0802e9e8 	.word	0x0802e9e8
 8011b84:	20000040 	.word	0x20000040

08011b88 <56445be374e93738432324b7e0ececbd8047647a>:
 8011b88:	b480      	push	{r7}
 8011b8a:	b085      	sub	sp, #20
 8011b8c:	af00      	add	r7, sp, #0
 8011b8e:	4603      	mov	r3, r0
 8011b90:	71fb      	strb	r3, [r7, #7]
 8011b92:	79fb      	ldrb	r3, [r7, #7]
 8011b94:	2b1e      	cmp	r3, #30
 8011b96:	d901      	bls.n	8011b9c <56445be374e93738432324b7e0ececbd8047647a+0x14>
 8011b98:	2300      	movs	r3, #0
 8011b9a:	e00b      	b.n	8011bb4 <56445be374e93738432324b7e0ececbd8047647a+0x2c>
 8011b9c:	4b08      	ldr	r3, [pc, #32]	; (8011bc0 <56445be374e93738432324b7e0ececbd8047647a+0x38>)
 8011b9e:	681b      	ldr	r3, [r3, #0]
 8011ba0:	f503 532e 	add.w	r3, r3, #11136	; 0x2b80
 8011ba4:	3310      	adds	r3, #16
 8011ba6:	60fb      	str	r3, [r7, #12]
 8011ba8:	79fb      	ldrb	r3, [r7, #7]
 8011baa:	68fa      	ldr	r2, [r7, #12]
 8011bac:	015b      	lsls	r3, r3, #5
 8011bae:	4413      	add	r3, r2
 8011bb0:	331c      	adds	r3, #28
 8011bb2:	781b      	ldrb	r3, [r3, #0]
 8011bb4:	4618      	mov	r0, r3
 8011bb6:	3714      	adds	r7, #20
 8011bb8:	46bd      	mov	sp, r7
 8011bba:	bc80      	pop	{r7}
 8011bbc:	4770      	bx	lr
 8011bbe:	bf00      	nop
 8011bc0:	20000040 	.word	0x20000040

08011bc4 <84b3a76c23800c7583f919339b96a0fe3bcec754>:
 8011bc4:	b5b0      	push	{r4, r5, r7, lr}
 8011bc6:	b092      	sub	sp, #72	; 0x48
 8011bc8:	af02      	add	r7, sp, #8
 8011bca:	6078      	str	r0, [r7, #4]
 8011bcc:	687b      	ldr	r3, [r7, #4]
 8011bce:	637b      	str	r3, [r7, #52]	; 0x34
 8011bd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011bd2:	2201      	movs	r2, #1
 8011bd4:	f883 23e8 	strb.w	r2, [r3, #1000]	; 0x3e8
 8011bd8:	2300      	movs	r3, #0
 8011bda:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8011bde:	e0b2      	b.n	8011d46 <84b3a76c23800c7583f919339b96a0fe3bcec754+0x182>
 8011be0:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011be4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011be6:	015b      	lsls	r3, r3, #5
 8011be8:	4413      	add	r3, r2
 8011bea:	331c      	adds	r3, #28
 8011bec:	781b      	ldrb	r3, [r3, #0]
 8011bee:	2b00      	cmp	r3, #0
 8011bf0:	f000 80a4 	beq.w	8011d3c <84b3a76c23800c7583f919339b96a0fe3bcec754+0x178>
 8011bf4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011bf6:	f8d3 23e0 	ldr.w	r2, [r3, #992]	; 0x3e0
 8011bfa:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011bfe:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c00:	015b      	lsls	r3, r3, #5
 8011c02:	440b      	add	r3, r1
 8011c04:	3310      	adds	r3, #16
 8011c06:	681b      	ldr	r3, [r3, #0]
 8011c08:	429a      	cmp	r2, r3
 8011c0a:	f040 8097 	bne.w	8011d3c <84b3a76c23800c7583f919339b96a0fe3bcec754+0x178>
 8011c0e:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c12:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011c14:	015b      	lsls	r3, r3, #5
 8011c16:	4413      	add	r3, r2
 8011c18:	331c      	adds	r3, #28
 8011c1a:	2200      	movs	r2, #0
 8011c1c:	701a      	strb	r2, [r3, #0]
 8011c1e:	f897 2039 	ldrb.w	r2, [r7, #57]	; 0x39
 8011c22:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c26:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c28:	0152      	lsls	r2, r2, #5
 8011c2a:	440a      	add	r2, r1
 8011c2c:	3210      	adds	r2, #16
 8011c2e:	6812      	ldr	r2, [r2, #0]
 8011c30:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c32:	015b      	lsls	r3, r3, #5
 8011c34:	440b      	add	r3, r1
 8011c36:	3318      	adds	r3, #24
 8011c38:	601a      	str	r2, [r3, #0]
 8011c3a:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c3e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011c40:	015b      	lsls	r3, r3, #5
 8011c42:	4413      	add	r3, r2
 8011c44:	3314      	adds	r3, #20
 8011c46:	681b      	ldr	r3, [r3, #0]
 8011c48:	2b00      	cmp	r3, #0
 8011c4a:	d150      	bne.n	8011cee <84b3a76c23800c7583f919339b96a0fe3bcec754+0x12a>
 8011c4c:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c50:	2b00      	cmp	r3, #0
 8011c52:	d110      	bne.n	8011c76 <84b3a76c23800c7583f919339b96a0fe3bcec754+0xb2>
 8011c54:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c58:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011c5a:	015b      	lsls	r3, r3, #5
 8011c5c:	4413      	add	r3, r2
 8011c5e:	3304      	adds	r3, #4
 8011c60:	681b      	ldr	r3, [r3, #0]
 8011c62:	f897 2039 	ldrb.w	r2, [r7, #57]	; 0x39
 8011c66:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011c68:	0152      	lsls	r2, r2, #5
 8011c6a:	440a      	add	r2, r1
 8011c6c:	3208      	adds	r2, #8
 8011c6e:	6812      	ldr	r2, [r2, #0]
 8011c70:	4610      	mov	r0, r2
 8011c72:	4798      	blx	r3
 8011c74:	e011      	b.n	8011c9a <84b3a76c23800c7583f919339b96a0fe3bcec754+0xd6>
 8011c76:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c7a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011c7c:	015b      	lsls	r3, r3, #5
 8011c7e:	4413      	add	r3, r2
 8011c80:	3304      	adds	r3, #4
 8011c82:	6818      	ldr	r0, [r3, #0]
 8011c84:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c88:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011c8a:	015b      	lsls	r3, r3, #5
 8011c8c:	4413      	add	r3, r2
 8011c8e:	3308      	adds	r3, #8
 8011c90:	681b      	ldr	r3, [r3, #0]
 8011c92:	220a      	movs	r2, #10
 8011c94:	4619      	mov	r1, r3
 8011c96:	f001 fc3f 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8011c9a:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011c9e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011ca0:	015b      	lsls	r3, r3, #5
 8011ca2:	4413      	add	r3, r2
 8011ca4:	781b      	ldrb	r3, [r3, #0]
 8011ca6:	2b00      	cmp	r3, #0
 8011ca8:	d148      	bne.n	8011d3c <84b3a76c23800c7583f919339b96a0fe3bcec754+0x178>
 8011caa:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011cae:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011cb0:	015b      	lsls	r3, r3, #5
 8011cb2:	4413      	add	r3, r2
 8011cb4:	330c      	adds	r3, #12
 8011cb6:	681c      	ldr	r4, [r3, #0]
 8011cb8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011cba:	f8d3 53e0 	ldr.w	r5, [r3, #992]	; 0x3e0
 8011cbe:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011cc2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011cc4:	015b      	lsls	r3, r3, #5
 8011cc6:	4413      	add	r3, r2
 8011cc8:	3304      	adds	r3, #4
 8011cca:	681b      	ldr	r3, [r3, #0]
 8011ccc:	f897 2039 	ldrb.w	r2, [r7, #57]	; 0x39
 8011cd0:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011cd2:	0152      	lsls	r2, r2, #5
 8011cd4:	440a      	add	r2, r1
 8011cd6:	3208      	adds	r2, #8
 8011cd8:	6812      	ldr	r2, [r2, #0]
 8011cda:	f897 0039 	ldrb.w	r0, [r7, #57]	; 0x39
 8011cde:	9201      	str	r2, [sp, #4]
 8011ce0:	9300      	str	r3, [sp, #0]
 8011ce2:	462b      	mov	r3, r5
 8011ce4:	4622      	mov	r2, r4
 8011ce6:	2100      	movs	r1, #0
 8011ce8:	f7ff fe00 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8011cec:	e026      	b.n	8011d3c <84b3a76c23800c7583f919339b96a0fe3bcec754+0x178>
 8011cee:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011cf2:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011cf4:	015a      	lsls	r2, r3, #5
 8011cf6:	440a      	add	r2, r1
 8011cf8:	3214      	adds	r2, #20
 8011cfa:	6812      	ldr	r2, [r2, #0]
 8011cfc:	3a01      	subs	r2, #1
 8011cfe:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011d00:	015b      	lsls	r3, r3, #5
 8011d02:	440b      	add	r3, r1
 8011d04:	3314      	adds	r3, #20
 8011d06:	601a      	str	r2, [r3, #0]
 8011d08:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011d0c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011d0e:	015b      	lsls	r3, r3, #5
 8011d10:	4413      	add	r3, r2
 8011d12:	3318      	adds	r3, #24
 8011d14:	681c      	ldr	r4, [r3, #0]
 8011d16:	f7f4 ffd3 	bl	8006cc0 <EMBENET_TIMER_GetMaxCompareDuration>
 8011d1a:	4602      	mov	r2, r0
 8011d1c:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011d20:	4422      	add	r2, r4
 8011d22:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011d24:	015b      	lsls	r3, r3, #5
 8011d26:	440b      	add	r3, r1
 8011d28:	3310      	adds	r3, #16
 8011d2a:	601a      	str	r2, [r3, #0]
 8011d2c:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011d30:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011d32:	015b      	lsls	r3, r3, #5
 8011d34:	4413      	add	r3, r2
 8011d36:	331c      	adds	r3, #28
 8011d38:	2201      	movs	r2, #1
 8011d3a:	701a      	strb	r2, [r3, #0]
 8011d3c:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011d40:	3301      	adds	r3, #1
 8011d42:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8011d46:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 8011d4a:	2b1e      	cmp	r3, #30
 8011d4c:	f67f af48 	bls.w	8011be0 <84b3a76c23800c7583f919339b96a0fe3bcec754+0x1c>
 8011d50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011d52:	f8d3 23e0 	ldr.w	r2, [r3, #992]	; 0x3e0
 8011d56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011d58:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
 8011d5c:	f04f 33ff 	mov.w	r3, #4294967295
 8011d60:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011d62:	2300      	movs	r3, #0
 8011d64:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8011d68:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011d6a:	2200      	movs	r2, #0
 8011d6c:	f883 23e9 	strb.w	r2, [r3, #1001]	; 0x3e9
 8011d70:	2300      	movs	r3, #0
 8011d72:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8011d76:	e027      	b.n	8011dc8 <84b3a76c23800c7583f919339b96a0fe3bcec754+0x204>
 8011d78:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8011d7c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011d7e:	015b      	lsls	r3, r3, #5
 8011d80:	4413      	add	r3, r2
 8011d82:	331c      	adds	r3, #28
 8011d84:	781b      	ldrb	r3, [r3, #0]
 8011d86:	2b00      	cmp	r3, #0
 8011d88:	d019      	beq.n	8011dbe <84b3a76c23800c7583f919339b96a0fe3bcec754+0x1fa>
 8011d8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011d8c:	2201      	movs	r2, #1
 8011d8e:	f883 23e9 	strb.w	r2, [r3, #1001]	; 0x3e9
 8011d92:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8011d96:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011d98:	015b      	lsls	r3, r3, #5
 8011d9a:	4413      	add	r3, r2
 8011d9c:	3310      	adds	r3, #16
 8011d9e:	681a      	ldr	r2, [r3, #0]
 8011da0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011da2:	f8d3 33e0 	ldr.w	r3, [r3, #992]	; 0x3e0
 8011da6:	1ad3      	subs	r3, r2, r3
 8011da8:	633b      	str	r3, [r7, #48]	; 0x30
 8011daa:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8011dac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8011dae:	429a      	cmp	r2, r3
 8011db0:	d805      	bhi.n	8011dbe <84b3a76c23800c7583f919339b96a0fe3bcec754+0x1fa>
 8011db2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8011db4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8011db6:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8011dba:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8011dbe:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8011dc2:	3301      	adds	r3, #1
 8011dc4:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8011dc8:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8011dcc:	2b1e      	cmp	r3, #30
 8011dce:	d9d3      	bls.n	8011d78 <84b3a76c23800c7583f919339b96a0fe3bcec754+0x1b4>
 8011dd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011dd2:	f893 33e9 	ldrb.w	r3, [r3, #1001]	; 0x3e9
 8011dd6:	2b00      	cmp	r3, #0
 8011dd8:	d00f      	beq.n	8011dfa <84b3a76c23800c7583f919339b96a0fe3bcec754+0x236>
 8011dda:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8011dde:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8011de0:	015b      	lsls	r3, r3, #5
 8011de2:	4413      	add	r3, r2
 8011de4:	3310      	adds	r3, #16
 8011de6:	681a      	ldr	r2, [r3, #0]
 8011de8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011dea:	f8c3 23e0 	str.w	r2, [r3, #992]	; 0x3e0
 8011dee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011df0:	f8d3 33e0 	ldr.w	r3, [r3, #992]	; 0x3e0
 8011df4:	4618      	mov	r0, r3
 8011df6:	f7f4 ff29 	bl	8006c4c <EMBENET_TIMER_SetCompare>
 8011dfa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8011dfc:	2200      	movs	r2, #0
 8011dfe:	f883 23e8 	strb.w	r2, [r3, #1000]	; 0x3e8
 8011e02:	bf00      	nop
 8011e04:	3740      	adds	r7, #64	; 0x40
 8011e06:	46bd      	mov	sp, r7
 8011e08:	bdb0      	pop	{r4, r5, r7, pc}
	...

08011e0c <da97346f7fa50b65fe6c97432d29b132cbef037c>:
 8011e0c:	b580      	push	{r7, lr}
 8011e0e:	b082      	sub	sp, #8
 8011e10:	af00      	add	r7, sp, #0
 8011e12:	f7f4 fcdb 	bl	80067cc <EMBENET_RANDOM_Get>
 8011e16:	6078      	str	r0, [r7, #4]
 8011e18:	687b      	ldr	r3, [r7, #4]
 8011e1a:	2b00      	cmp	r3, #0
 8011e1c:	d10a      	bne.n	8011e34 <da97346f7fa50b65fe6c97432d29b132cbef037c+0x28>
 8011e1e:	f7f4 fcd5 	bl	80067cc <EMBENET_RANDOM_Get>
 8011e22:	6078      	str	r0, [r7, #4]
 8011e24:	687b      	ldr	r3, [r7, #4]
 8011e26:	2b00      	cmp	r3, #0
 8011e28:	d104      	bne.n	8011e34 <da97346f7fa50b65fe6c97432d29b132cbef037c+0x28>
 8011e2a:	2217      	movs	r2, #23
 8011e2c:	4907      	ldr	r1, [pc, #28]	; (8011e4c <da97346f7fa50b65fe6c97432d29b132cbef037c+0x40>)
 8011e2e:	4808      	ldr	r0, [pc, #32]	; (8011e50 <da97346f7fa50b65fe6c97432d29b132cbef037c+0x44>)
 8011e30:	f7ef fc6a 	bl	8001708 <EXPECT_OnAbortHandler>
 8011e34:	4b07      	ldr	r3, [pc, #28]	; (8011e54 <da97346f7fa50b65fe6c97432d29b132cbef037c+0x48>)
 8011e36:	681b      	ldr	r3, [r3, #0]
 8011e38:	687a      	ldr	r2, [r7, #4]
 8011e3a:	b292      	uxth	r2, r2
 8011e3c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8011e40:	f8a3 2f7c 	strh.w	r2, [r3, #3964]	; 0xf7c
 8011e44:	bf00      	nop
 8011e46:	3708      	adds	r7, #8
 8011e48:	46bd      	mov	sp, r7
 8011e4a:	bd80      	pop	{r7, pc}
 8011e4c:	0802e9ec 	.word	0x0802e9ec
 8011e50:	0802ea4c 	.word	0x0802ea4c
 8011e54:	20000040 	.word	0x20000040

08011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>:
 8011e58:	b580      	push	{r7, lr}
 8011e5a:	b084      	sub	sp, #16
 8011e5c:	af00      	add	r7, sp, #0
 8011e5e:	2300      	movs	r3, #0
 8011e60:	81fb      	strh	r3, [r7, #14]
 8011e62:	4b1d      	ldr	r3, [pc, #116]	; (8011ed8 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8+0x80>)
 8011e64:	681b      	ldr	r3, [r3, #0]
 8011e66:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 8011e6a:	333c      	adds	r3, #60	; 0x3c
 8011e6c:	607b      	str	r3, [r7, #4]
 8011e6e:	f7f4 f8ef 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8011e72:	2300      	movs	r3, #0
 8011e74:	60bb      	str	r3, [r7, #8]
 8011e76:	e024      	b.n	8011ec2 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8+0x6a>
 8011e78:	687b      	ldr	r3, [r7, #4]
 8011e7a:	881b      	ldrh	r3, [r3, #0]
 8011e7c:	f003 0201 	and.w	r2, r3, #1
 8011e80:	68bb      	ldr	r3, [r7, #8]
 8011e82:	fa02 f303 	lsl.w	r3, r2, r3
 8011e86:	b29a      	uxth	r2, r3
 8011e88:	89fb      	ldrh	r3, [r7, #14]
 8011e8a:	4313      	orrs	r3, r2
 8011e8c:	81fb      	strh	r3, [r7, #14]
 8011e8e:	687b      	ldr	r3, [r7, #4]
 8011e90:	881b      	ldrh	r3, [r3, #0]
 8011e92:	085b      	lsrs	r3, r3, #1
 8011e94:	b29b      	uxth	r3, r3
 8011e96:	b21a      	sxth	r2, r3
 8011e98:	687b      	ldr	r3, [r7, #4]
 8011e9a:	881b      	ldrh	r3, [r3, #0]
 8011e9c:	f003 0301 	and.w	r3, r3, #1
 8011ea0:	b29b      	uxth	r3, r3
 8011ea2:	425b      	negs	r3, r3
 8011ea4:	b29b      	uxth	r3, r3
 8011ea6:	b21b      	sxth	r3, r3
 8011ea8:	f423 4397 	bic.w	r3, r3, #19328	; 0x4b80
 8011eac:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8011eb0:	b21b      	sxth	r3, r3
 8011eb2:	4053      	eors	r3, r2
 8011eb4:	b21b      	sxth	r3, r3
 8011eb6:	b29a      	uxth	r2, r3
 8011eb8:	687b      	ldr	r3, [r7, #4]
 8011eba:	801a      	strh	r2, [r3, #0]
 8011ebc:	68bb      	ldr	r3, [r7, #8]
 8011ebe:	3301      	adds	r3, #1
 8011ec0:	60bb      	str	r3, [r7, #8]
 8011ec2:	68bb      	ldr	r3, [r7, #8]
 8011ec4:	2b10      	cmp	r3, #16
 8011ec6:	d1d7      	bne.n	8011e78 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8+0x20>
 8011ec8:	f7f4 f8e2 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8011ecc:	89fb      	ldrh	r3, [r7, #14]
 8011ece:	4618      	mov	r0, r3
 8011ed0:	3710      	adds	r7, #16
 8011ed2:	46bd      	mov	sp, r7
 8011ed4:	bd80      	pop	{r7, pc}
 8011ed6:	bf00      	nop
 8011ed8:	20000040 	.word	0x20000040

08011edc <7694f58d16cb666949a4f0727c30967f32581954>:
 8011edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ee0:	b08b      	sub	sp, #44	; 0x2c
 8011ee2:	af00      	add	r7, sp, #0
 8011ee4:	6178      	str	r0, [r7, #20]
 8011ee6:	6139      	str	r1, [r7, #16]
 8011ee8:	697a      	ldr	r2, [r7, #20]
 8011eea:	693b      	ldr	r3, [r7, #16]
 8011eec:	429a      	cmp	r2, r3
 8011eee:	d304      	bcc.n	8011efa <7694f58d16cb666949a4f0727c30967f32581954+0x1e>
 8011ef0:	2234      	movs	r2, #52	; 0x34
 8011ef2:	4919      	ldr	r1, [pc, #100]	; (8011f58 <7694f58d16cb666949a4f0727c30967f32581954+0x7c>)
 8011ef4:	4819      	ldr	r0, [pc, #100]	; (8011f5c <7694f58d16cb666949a4f0727c30967f32581954+0x80>)
 8011ef6:	f7ef fc07 	bl	8001708 <EXPECT_OnAbortHandler>
 8011efa:	f7ff ffad 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 8011efe:	4603      	mov	r3, r0
 8011f00:	041e      	lsls	r6, r3, #16
 8011f02:	f7ff ffa9 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 8011f06:	4603      	mov	r3, r0
 8011f08:	4333      	orrs	r3, r6
 8011f0a:	627b      	str	r3, [r7, #36]	; 0x24
 8011f0c:	693b      	ldr	r3, [r7, #16]
 8011f0e:	2200      	movs	r2, #0
 8011f10:	469a      	mov	sl, r3
 8011f12:	4693      	mov	fp, r2
 8011f14:	697b      	ldr	r3, [r7, #20]
 8011f16:	2200      	movs	r2, #0
 8011f18:	4698      	mov	r8, r3
 8011f1a:	4691      	mov	r9, r2
 8011f1c:	ebba 0408 	subs.w	r4, sl, r8
 8011f20:	eb6b 0509 	sbc.w	r5, fp, r9
 8011f24:	1c63      	adds	r3, r4, #1
 8011f26:	603b      	str	r3, [r7, #0]
 8011f28:	f145 0300 	adc.w	r3, r5, #0
 8011f2c:	607b      	str	r3, [r7, #4]
 8011f2e:	e9d7 3400 	ldrd	r3, r4, [r7]
 8011f32:	e9c7 3406 	strd	r3, r4, [r7, #24]
 8011f36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011f38:	2200      	movs	r2, #0
 8011f3a:	60bb      	str	r3, [r7, #8]
 8011f3c:	60fa      	str	r2, [r7, #12]
 8011f3e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8011f42:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8011f46:	f7ee fd79 	bl	8000a3c <__aeabi_uldivmod>
 8011f4a:	697b      	ldr	r3, [r7, #20]
 8011f4c:	4413      	add	r3, r2
 8011f4e:	4618      	mov	r0, r3
 8011f50:	372c      	adds	r7, #44	; 0x2c
 8011f52:	46bd      	mov	sp, r7
 8011f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f58:	0802e9ec 	.word	0x0802e9ec
 8011f5c:	0802ea60 	.word	0x0802ea60

08011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>:
 8011f60:	b580      	push	{r7, lr}
 8011f62:	b084      	sub	sp, #16
 8011f64:	af00      	add	r7, sp, #0
 8011f66:	6078      	str	r0, [r7, #4]
 8011f68:	6039      	str	r1, [r7, #0]
 8011f6a:	683b      	ldr	r3, [r7, #0]
 8011f6c:	085b      	lsrs	r3, r3, #1
 8011f6e:	687a      	ldr	r2, [r7, #4]
 8011f70:	429a      	cmp	r2, r3
 8011f72:	d904      	bls.n	8011f7e <23673502809f5a9646d21283e7a04e0764f4d11d+0x1e>
 8011f74:	683b      	ldr	r3, [r7, #0]
 8011f76:	085b      	lsrs	r3, r3, #1
 8011f78:	687a      	ldr	r2, [r7, #4]
 8011f7a:	1ad3      	subs	r3, r2, r3
 8011f7c:	e000      	b.n	8011f80 <23673502809f5a9646d21283e7a04e0764f4d11d+0x20>
 8011f7e:	2300      	movs	r3, #0
 8011f80:	60fb      	str	r3, [r7, #12]
 8011f82:	687b      	ldr	r3, [r7, #4]
 8011f84:	43da      	mvns	r2, r3
 8011f86:	683b      	ldr	r3, [r7, #0]
 8011f88:	085b      	lsrs	r3, r3, #1
 8011f8a:	429a      	cmp	r2, r3
 8011f8c:	d904      	bls.n	8011f98 <23673502809f5a9646d21283e7a04e0764f4d11d+0x38>
 8011f8e:	683b      	ldr	r3, [r7, #0]
 8011f90:	085a      	lsrs	r2, r3, #1
 8011f92:	687b      	ldr	r3, [r7, #4]
 8011f94:	4413      	add	r3, r2
 8011f96:	e001      	b.n	8011f9c <23673502809f5a9646d21283e7a04e0764f4d11d+0x3c>
 8011f98:	f04f 33ff 	mov.w	r3, #4294967295
 8011f9c:	60bb      	str	r3, [r7, #8]
 8011f9e:	68b9      	ldr	r1, [r7, #8]
 8011fa0:	68f8      	ldr	r0, [r7, #12]
 8011fa2:	f7ff ff9b 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 8011fa6:	4603      	mov	r3, r0
 8011fa8:	4618      	mov	r0, r3
 8011faa:	3710      	adds	r7, #16
 8011fac:	46bd      	mov	sp, r7
 8011fae:	bd80      	pop	{r7, pc}

08011fb0 <c5868198428dfaffddb0900c3d01452778b19d11>:
 8011fb0:	b480      	push	{r7}
 8011fb2:	b089      	sub	sp, #36	; 0x24
 8011fb4:	af00      	add	r7, sp, #0
 8011fb6:	60f8      	str	r0, [r7, #12]
 8011fb8:	60b9      	str	r1, [r7, #8]
 8011fba:	607a      	str	r2, [r7, #4]
 8011fbc:	68fb      	ldr	r3, [r7, #12]
 8011fbe:	61fb      	str	r3, [r7, #28]
 8011fc0:	68bb      	ldr	r3, [r7, #8]
 8011fc2:	61bb      	str	r3, [r7, #24]
 8011fc4:	687b      	ldr	r3, [r7, #4]
 8011fc6:	617b      	str	r3, [r7, #20]
 8011fc8:	2300      	movs	r3, #0
 8011fca:	613b      	str	r3, [r7, #16]
 8011fcc:	e00d      	b.n	8011fea <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 8011fce:	69ba      	ldr	r2, [r7, #24]
 8011fd0:	693b      	ldr	r3, [r7, #16]
 8011fd2:	441a      	add	r2, r3
 8011fd4:	6979      	ldr	r1, [r7, #20]
 8011fd6:	693b      	ldr	r3, [r7, #16]
 8011fd8:	1acb      	subs	r3, r1, r3
 8011fda:	3b01      	subs	r3, #1
 8011fdc:	69f9      	ldr	r1, [r7, #28]
 8011fde:	440b      	add	r3, r1
 8011fe0:	7812      	ldrb	r2, [r2, #0]
 8011fe2:	701a      	strb	r2, [r3, #0]
 8011fe4:	693b      	ldr	r3, [r7, #16]
 8011fe6:	3301      	adds	r3, #1
 8011fe8:	613b      	str	r3, [r7, #16]
 8011fea:	697a      	ldr	r2, [r7, #20]
 8011fec:	693b      	ldr	r3, [r7, #16]
 8011fee:	429a      	cmp	r2, r3
 8011ff0:	d8ed      	bhi.n	8011fce <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 8011ff2:	bf00      	nop
 8011ff4:	bf00      	nop
 8011ff6:	3724      	adds	r7, #36	; 0x24
 8011ff8:	46bd      	mov	sp, r7
 8011ffa:	bc80      	pop	{r7}
 8011ffc:	4770      	bx	lr

08011ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8011ffe:	b480      	push	{r7}
 8012000:	b089      	sub	sp, #36	; 0x24
 8012002:	af00      	add	r7, sp, #0
 8012004:	60f8      	str	r0, [r7, #12]
 8012006:	60b9      	str	r1, [r7, #8]
 8012008:	607a      	str	r2, [r7, #4]
 801200a:	68fb      	ldr	r3, [r7, #12]
 801200c:	61fb      	str	r3, [r7, #28]
 801200e:	68bb      	ldr	r3, [r7, #8]
 8012010:	61bb      	str	r3, [r7, #24]
 8012012:	687b      	ldr	r3, [r7, #4]
 8012014:	617b      	str	r3, [r7, #20]
 8012016:	2300      	movs	r3, #0
 8012018:	613b      	str	r3, [r7, #16]
 801201a:	e00d      	b.n	8012038 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 801201c:	69ba      	ldr	r2, [r7, #24]
 801201e:	693b      	ldr	r3, [r7, #16]
 8012020:	441a      	add	r2, r3
 8012022:	6979      	ldr	r1, [r7, #20]
 8012024:	693b      	ldr	r3, [r7, #16]
 8012026:	1acb      	subs	r3, r1, r3
 8012028:	3b01      	subs	r3, #1
 801202a:	69f9      	ldr	r1, [r7, #28]
 801202c:	440b      	add	r3, r1
 801202e:	7812      	ldrb	r2, [r2, #0]
 8012030:	701a      	strb	r2, [r3, #0]
 8012032:	693b      	ldr	r3, [r7, #16]
 8012034:	3301      	adds	r3, #1
 8012036:	613b      	str	r3, [r7, #16]
 8012038:	697a      	ldr	r2, [r7, #20]
 801203a:	693b      	ldr	r3, [r7, #16]
 801203c:	429a      	cmp	r2, r3
 801203e:	d8ed      	bhi.n	801201c <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8012040:	bf00      	nop
 8012042:	bf00      	nop
 8012044:	3724      	adds	r7, #36	; 0x24
 8012046:	46bd      	mov	sp, r7
 8012048:	bc80      	pop	{r7}
 801204a:	4770      	bx	lr

0801204c <deactivateExpired>:
 801204c:	b580      	push	{r7, lr}
 801204e:	b086      	sub	sp, #24
 8012050:	af00      	add	r7, sp, #0
 8012052:	6078      	str	r0, [r7, #4]
 8012054:	6039      	str	r1, [r7, #0]
 8012056:	2300      	movs	r3, #0
 8012058:	617b      	str	r3, [r7, #20]
 801205a:	e02d      	b.n	80120b8 <deactivateExpired+0x6c>
 801205c:	687a      	ldr	r2, [r7, #4]
 801205e:	697b      	ldr	r3, [r7, #20]
 8012060:	00db      	lsls	r3, r3, #3
 8012062:	4413      	add	r3, r2
 8012064:	789b      	ldrb	r3, [r3, #2]
 8012066:	2b00      	cmp	r3, #0
 8012068:	d023      	beq.n	80120b2 <deactivateExpired+0x66>
 801206a:	4917      	ldr	r1, [pc, #92]	; (80120c8 <deactivateExpired+0x7c>)
 801206c:	4817      	ldr	r0, [pc, #92]	; (80120cc <deactivateExpired+0x80>)
 801206e:	f7fa febd 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8012072:	6138      	str	r0, [r7, #16]
 8012074:	687a      	ldr	r2, [r7, #4]
 8012076:	697b      	ldr	r3, [r7, #20]
 8012078:	00db      	lsls	r3, r3, #3
 801207a:	4413      	add	r3, r2
 801207c:	78db      	ldrb	r3, [r3, #3]
 801207e:	2b00      	cmp	r3, #0
 8012080:	d001      	beq.n	8012086 <deactivateExpired+0x3a>
 8012082:	4b13      	ldr	r3, [pc, #76]	; (80120d0 <deactivateExpired+0x84>)
 8012084:	613b      	str	r3, [r7, #16]
 8012086:	687a      	ldr	r2, [r7, #4]
 8012088:	697b      	ldr	r3, [r7, #20]
 801208a:	00db      	lsls	r3, r3, #3
 801208c:	4413      	add	r3, r2
 801208e:	685b      	ldr	r3, [r3, #4]
 8012090:	683a      	ldr	r2, [r7, #0]
 8012092:	1ad3      	subs	r3, r2, r3
 8012094:	693a      	ldr	r2, [r7, #16]
 8012096:	429a      	cmp	r2, r3
 8012098:	d20b      	bcs.n	80120b2 <deactivateExpired+0x66>
 801209a:	687a      	ldr	r2, [r7, #4]
 801209c:	697b      	ldr	r3, [r7, #20]
 801209e:	00db      	lsls	r3, r3, #3
 80120a0:	4413      	add	r3, r2
 80120a2:	2200      	movs	r2, #0
 80120a4:	709a      	strb	r2, [r3, #2]
 80120a6:	687a      	ldr	r2, [r7, #4]
 80120a8:	697b      	ldr	r3, [r7, #20]
 80120aa:	00db      	lsls	r3, r3, #3
 80120ac:	4413      	add	r3, r2
 80120ae:	2200      	movs	r2, #0
 80120b0:	70da      	strb	r2, [r3, #3]
 80120b2:	697b      	ldr	r3, [r7, #20]
 80120b4:	3301      	adds	r3, #1
 80120b6:	617b      	str	r3, [r7, #20]
 80120b8:	697b      	ldr	r3, [r7, #20]
 80120ba:	2b04      	cmp	r3, #4
 80120bc:	d9ce      	bls.n	801205c <deactivateExpired+0x10>
 80120be:	bf00      	nop
 80120c0:	bf00      	nop
 80120c2:	3718      	adds	r7, #24
 80120c4:	46bd      	mov	sp, r7
 80120c6:	bd80      	pop	{r7, pc}
 80120c8:	03938700 	.word	0x03938700
 80120cc:	00989680 	.word	0x00989680
 80120d0:	055d4a80 	.word	0x055d4a80

080120d4 <getFreeEntry>:
 80120d4:	b480      	push	{r7}
 80120d6:	b089      	sub	sp, #36	; 0x24
 80120d8:	af00      	add	r7, sp, #0
 80120da:	6078      	str	r0, [r7, #4]
 80120dc:	6039      	str	r1, [r7, #0]
 80120de:	2300      	movs	r3, #0
 80120e0:	61fb      	str	r3, [r7, #28]
 80120e2:	e00e      	b.n	8012102 <getFreeEntry+0x2e>
 80120e4:	687a      	ldr	r2, [r7, #4]
 80120e6:	69fb      	ldr	r3, [r7, #28]
 80120e8:	00db      	lsls	r3, r3, #3
 80120ea:	4413      	add	r3, r2
 80120ec:	789b      	ldrb	r3, [r3, #2]
 80120ee:	f083 0301 	eor.w	r3, r3, #1
 80120f2:	b2db      	uxtb	r3, r3
 80120f4:	2b00      	cmp	r3, #0
 80120f6:	d001      	beq.n	80120fc <getFreeEntry+0x28>
 80120f8:	69fb      	ldr	r3, [r7, #28]
 80120fa:	e033      	b.n	8012164 <getFreeEntry+0x90>
 80120fc:	69fb      	ldr	r3, [r7, #28]
 80120fe:	3301      	adds	r3, #1
 8012100:	61fb      	str	r3, [r7, #28]
 8012102:	69fb      	ldr	r3, [r7, #28]
 8012104:	2b04      	cmp	r3, #4
 8012106:	d9ed      	bls.n	80120e4 <getFreeEntry+0x10>
 8012108:	2300      	movs	r3, #0
 801210a:	61bb      	str	r3, [r7, #24]
 801210c:	2305      	movs	r3, #5
 801210e:	617b      	str	r3, [r7, #20]
 8012110:	2300      	movs	r3, #0
 8012112:	613b      	str	r3, [r7, #16]
 8012114:	e016      	b.n	8012144 <getFreeEntry+0x70>
 8012116:	687a      	ldr	r2, [r7, #4]
 8012118:	693b      	ldr	r3, [r7, #16]
 801211a:	00db      	lsls	r3, r3, #3
 801211c:	4413      	add	r3, r2
 801211e:	685b      	ldr	r3, [r3, #4]
 8012120:	683a      	ldr	r2, [r7, #0]
 8012122:	1ad3      	subs	r3, r2, r3
 8012124:	69ba      	ldr	r2, [r7, #24]
 8012126:	429a      	cmp	r2, r3
 8012128:	d209      	bcs.n	801213e <getFreeEntry+0x6a>
 801212a:	687a      	ldr	r2, [r7, #4]
 801212c:	693b      	ldr	r3, [r7, #16]
 801212e:	00db      	lsls	r3, r3, #3
 8012130:	4413      	add	r3, r2
 8012132:	685b      	ldr	r3, [r3, #4]
 8012134:	683a      	ldr	r2, [r7, #0]
 8012136:	1ad3      	subs	r3, r2, r3
 8012138:	61bb      	str	r3, [r7, #24]
 801213a:	693b      	ldr	r3, [r7, #16]
 801213c:	617b      	str	r3, [r7, #20]
 801213e:	693b      	ldr	r3, [r7, #16]
 8012140:	3301      	adds	r3, #1
 8012142:	613b      	str	r3, [r7, #16]
 8012144:	693b      	ldr	r3, [r7, #16]
 8012146:	2b04      	cmp	r3, #4
 8012148:	d9e5      	bls.n	8012116 <getFreeEntry+0x42>
 801214a:	687a      	ldr	r2, [r7, #4]
 801214c:	697b      	ldr	r3, [r7, #20]
 801214e:	00db      	lsls	r3, r3, #3
 8012150:	4413      	add	r3, r2
 8012152:	2200      	movs	r2, #0
 8012154:	709a      	strb	r2, [r3, #2]
 8012156:	687a      	ldr	r2, [r7, #4]
 8012158:	697b      	ldr	r3, [r7, #20]
 801215a:	00db      	lsls	r3, r3, #3
 801215c:	4413      	add	r3, r2
 801215e:	2200      	movs	r2, #0
 8012160:	70da      	strb	r2, [r3, #3]
 8012162:	697b      	ldr	r3, [r7, #20]
 8012164:	4618      	mov	r0, r3
 8012166:	3724      	adds	r7, #36	; 0x24
 8012168:	46bd      	mov	sp, r7
 801216a:	bc80      	pop	{r7}
 801216c:	4770      	bx	lr
	...

08012170 <sendPledgeReuquest>:
 8012170:	b580      	push	{r7, lr}
 8012172:	b088      	sub	sp, #32
 8012174:	af00      	add	r7, sp, #0
 8012176:	f7fb fb13 	bl	800d7a0 <08bb79b9d8122a54d175f9ca733eba1fe88f9bf1>
 801217a:	61f8      	str	r0, [r7, #28]
 801217c:	69fb      	ldr	r3, [r7, #28]
 801217e:	2b00      	cmp	r3, #0
 8012180:	d033      	beq.n	80121ea <sendPledgeReuquest+0x7a>
 8012182:	2090      	movs	r0, #144	; 0x90
 8012184:	f7fd fad6 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8012188:	61b8      	str	r0, [r7, #24]
 801218a:	69bb      	ldr	r3, [r7, #24]
 801218c:	2b00      	cmp	r3, #0
 801218e:	d10e      	bne.n	80121ae <sendPledgeReuquest+0x3e>
 8012190:	4a1d      	ldr	r2, [pc, #116]	; (8012208 <sendPledgeReuquest+0x98>)
 8012192:	f107 0308 	add.w	r3, r7, #8
 8012196:	e892 0003 	ldmia.w	r2, {r0, r1}
 801219a:	e883 0003 	stmia.w	r3, {r0, r1}
 801219e:	4a1b      	ldr	r2, [pc, #108]	; (801220c <sendPledgeReuquest+0x9c>)
 80121a0:	f107 0308 	add.w	r3, r7, #8
 80121a4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80121a8:	f003 f82e 	bl	8015208 <LOGGER_PrintLine>
 80121ac:	e029      	b.n	8012202 <sendPledgeReuquest+0x92>
 80121ae:	69bb      	ldr	r3, [r7, #24]
 80121b0:	2290      	movs	r2, #144	; 0x90
 80121b2:	705a      	strb	r2, [r3, #1]
 80121b4:	2121      	movs	r1, #33	; 0x21
 80121b6:	69b8      	ldr	r0, [r7, #24]
 80121b8:	f017 f96c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80121bc:	69bb      	ldr	r3, [r7, #24]
 80121be:	685a      	ldr	r2, [r3, #4]
 80121c0:	69bb      	ldr	r3, [r7, #24]
 80121c2:	60da      	str	r2, [r3, #12]
 80121c4:	69bb      	ldr	r3, [r7, #24]
 80121c6:	2202      	movs	r2, #2
 80121c8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80121cc:	69bb      	ldr	r3, [r7, #24]
 80121ce:	3342      	adds	r3, #66	; 0x42
 80121d0:	2208      	movs	r2, #8
 80121d2:	69f9      	ldr	r1, [r7, #28]
 80121d4:	4618      	mov	r0, r3
 80121d6:	f019 f82e 	bl	802b236 <memcpy>
 80121da:	69bb      	ldr	r3, [r7, #24]
 80121dc:	2200      	movs	r2, #0
 80121de:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 80121e2:	69b8      	ldr	r0, [r7, #24]
 80121e4:	f00c fdc4 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 80121e8:	e00b      	b.n	8012202 <sendPledgeReuquest+0x92>
 80121ea:	4a09      	ldr	r2, [pc, #36]	; (8012210 <sendPledgeReuquest+0xa0>)
 80121ec:	463b      	mov	r3, r7
 80121ee:	e892 0003 	ldmia.w	r2, {r0, r1}
 80121f2:	e883 0003 	stmia.w	r3, {r0, r1}
 80121f6:	4a07      	ldr	r2, [pc, #28]	; (8012214 <sendPledgeReuquest+0xa4>)
 80121f8:	463b      	mov	r3, r7
 80121fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80121fe:	f003 f803 	bl	8015208 <LOGGER_PrintLine>
 8012202:	3720      	adds	r7, #32
 8012204:	46bd      	mov	sp, r7
 8012206:	bd80      	pop	{r7, pc}
 8012208:	0802eae8 	.word	0x0802eae8
 801220c:	0802ea6c 	.word	0x0802ea6c
 8012210:	0802eaf0 	.word	0x0802eaf0
 8012214:	0802eab0 	.word	0x0802eab0

08012218 <validatePacket>:
 8012218:	b590      	push	{r4, r7, lr}
 801221a:	b099      	sub	sp, #100	; 0x64
 801221c:	af00      	add	r7, sp, #0
 801221e:	60f8      	str	r0, [r7, #12]
 8012220:	60b9      	str	r1, [r7, #8]
 8012222:	607a      	str	r2, [r7, #4]
 8012224:	603b      	str	r3, [r7, #0]
 8012226:	2300      	movs	r3, #0
 8012228:	65fb      	str	r3, [r7, #92]	; 0x5c
 801222a:	e08c      	b.n	8012346 <validatePacket+0x12e>
 801222c:	68f9      	ldr	r1, [r7, #12]
 801222e:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8012230:	4613      	mov	r3, r2
 8012232:	005b      	lsls	r3, r3, #1
 8012234:	4413      	add	r3, r2
 8012236:	009b      	lsls	r3, r3, #2
 8012238:	440b      	add	r3, r1
 801223a:	f103 0138 	add.w	r1, r3, #56	; 0x38
 801223e:	680a      	ldr	r2, [r1, #0]
 8012240:	7909      	ldrb	r1, [r1, #4]
 8012242:	460b      	mov	r3, r1
 8012244:	4313      	orrs	r3, r2
 8012246:	d07b      	beq.n	8012340 <validatePacket+0x128>
 8012248:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801224a:	4613      	mov	r3, r2
 801224c:	005b      	lsls	r3, r3, #1
 801224e:	4413      	add	r3, r2
 8012250:	009b      	lsls	r3, r3, #2
 8012252:	3338      	adds	r3, #56	; 0x38
 8012254:	68fa      	ldr	r2, [r7, #12]
 8012256:	18d1      	adds	r1, r2, r3
 8012258:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801225c:	330a      	adds	r3, #10
 801225e:	2205      	movs	r2, #5
 8012260:	4618      	mov	r0, r3
 8012262:	f7ff fea5 	bl	8011fb0 <c5868198428dfaffddb0900c3d01452778b19d11>
 8012266:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801226a:	3301      	adds	r3, #1
 801226c:	2208      	movs	r2, #8
 801226e:	68b9      	ldr	r1, [r7, #8]
 8012270:	4618      	mov	r0, r3
 8012272:	f018 ffe0 	bl	802b236 <memcpy>
 8012276:	232f      	movs	r3, #47	; 0x2f
 8012278:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 801227c:	232f      	movs	r3, #47	; 0x2f
 801227e:	f887 304d 	strb.w	r3, [r7, #77]	; 0x4d
 8012282:	232f      	movs	r3, #47	; 0x2f
 8012284:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8012288:	2220      	movs	r2, #32
 801228a:	6879      	ldr	r1, [r7, #4]
 801228c:	6838      	ldr	r0, [r7, #0]
 801228e:	f018 ffd2 	bl	802b236 <memcpy>
 8012292:	68fb      	ldr	r3, [r7, #12]
 8012294:	f103 0298 	add.w	r2, r3, #152	; 0x98
 8012298:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801229c:	2120      	movs	r1, #32
 801229e:	6838      	ldr	r0, [r7, #0]
 80122a0:	f017 fb63 	bl	802996a <7bd9c690a28739e5b569f505b868904b38eb748d>
 80122a4:	2301      	movs	r3, #1
 80122a6:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
 80122aa:	2300      	movs	r3, #0
 80122ac:	657b      	str	r3, [r7, #84]	; 0x54
 80122ae:	e00d      	b.n	80122cc <validatePacket+0xb4>
 80122b0:	683a      	ldr	r2, [r7, #0]
 80122b2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80122b4:	4413      	add	r3, r2
 80122b6:	3319      	adds	r3, #25
 80122b8:	781b      	ldrb	r3, [r3, #0]
 80122ba:	2b2f      	cmp	r3, #47	; 0x2f
 80122bc:	d003      	beq.n	80122c6 <validatePacket+0xae>
 80122be:	2300      	movs	r3, #0
 80122c0:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
 80122c4:	e005      	b.n	80122d2 <validatePacket+0xba>
 80122c6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80122c8:	3301      	adds	r3, #1
 80122ca:	657b      	str	r3, [r7, #84]	; 0x54
 80122cc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80122ce:	2b06      	cmp	r3, #6
 80122d0:	d9ee      	bls.n	80122b0 <validatePacket+0x98>
 80122d2:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 80122d6:	f083 0301 	eor.w	r3, r3, #1
 80122da:	b2db      	uxtb	r3, r3
 80122dc:	2b00      	cmp	r3, #0
 80122de:	d12a      	bne.n	8012336 <validatePacket+0x11e>
 80122e0:	6839      	ldr	r1, [r7, #0]
 80122e2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80122e6:	2205      	movs	r2, #5
 80122e8:	4618      	mov	r0, r3
 80122ea:	f7ff fe88 	bl	8011ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 80122ee:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80122f0:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 80122f4:	4619      	mov	r1, r3
 80122f6:	68fc      	ldr	r4, [r7, #12]
 80122f8:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80122fa:	4613      	mov	r3, r2
 80122fc:	005b      	lsls	r3, r3, #1
 80122fe:	4413      	add	r3, r2
 8012300:	009b      	lsls	r3, r3, #2
 8012302:	4423      	add	r3, r4
 8012304:	f103 0438 	add.w	r4, r3, #56	; 0x38
 8012308:	6822      	ldr	r2, [r4, #0]
 801230a:	7924      	ldrb	r4, [r4, #4]
 801230c:	4623      	mov	r3, r4
 801230e:	4299      	cmp	r1, r3
 8012310:	bf08      	it	eq
 8012312:	4290      	cmpeq	r0, r2
 8012314:	d111      	bne.n	801233a <validatePacket+0x122>
 8012316:	683b      	ldr	r3, [r7, #0]
 8012318:	f8d3 1015 	ldr.w	r1, [r3, #21]
 801231c:	68f8      	ldr	r0, [r7, #12]
 801231e:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8012320:	4613      	mov	r3, r2
 8012322:	005b      	lsls	r3, r3, #1
 8012324:	4413      	add	r3, r2
 8012326:	009b      	lsls	r3, r3, #2
 8012328:	4403      	add	r3, r0
 801232a:	3340      	adds	r3, #64	; 0x40
 801232c:	681b      	ldr	r3, [r3, #0]
 801232e:	4299      	cmp	r1, r3
 8012330:	d105      	bne.n	801233e <validatePacket+0x126>
 8012332:	2301      	movs	r3, #1
 8012334:	e00c      	b.n	8012350 <validatePacket+0x138>
 8012336:	bf00      	nop
 8012338:	e002      	b.n	8012340 <validatePacket+0x128>
 801233a:	bf00      	nop
 801233c:	e000      	b.n	8012340 <validatePacket+0x128>
 801233e:	bf00      	nop
 8012340:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8012342:	3301      	adds	r3, #1
 8012344:	65fb      	str	r3, [r7, #92]	; 0x5c
 8012346:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8012348:	2b05      	cmp	r3, #5
 801234a:	f67f af6f 	bls.w	801222c <validatePacket+0x14>
 801234e:	2300      	movs	r3, #0
 8012350:	4618      	mov	r0, r3
 8012352:	3764      	adds	r7, #100	; 0x64
 8012354:	46bd      	mov	sp, r7
 8012356:	bd90      	pop	{r4, r7, pc}

08012358 <getFreeContextIndex>:
 8012358:	b480      	push	{r7}
 801235a:	b085      	sub	sp, #20
 801235c:	af00      	add	r7, sp, #0
 801235e:	6078      	str	r0, [r7, #4]
 8012360:	2300      	movs	r3, #0
 8012362:	60fb      	str	r3, [r7, #12]
 8012364:	e010      	b.n	8012388 <getFreeContextIndex+0x30>
 8012366:	6879      	ldr	r1, [r7, #4]
 8012368:	68fa      	ldr	r2, [r7, #12]
 801236a:	4613      	mov	r3, r2
 801236c:	005b      	lsls	r3, r3, #1
 801236e:	4413      	add	r3, r2
 8012370:	009b      	lsls	r3, r3, #2
 8012372:	440b      	add	r3, r1
 8012374:	f103 0138 	add.w	r1, r3, #56	; 0x38
 8012378:	680a      	ldr	r2, [r1, #0]
 801237a:	7909      	ldrb	r1, [r1, #4]
 801237c:	460b      	mov	r3, r1
 801237e:	4313      	orrs	r3, r2
 8012380:	d006      	beq.n	8012390 <getFreeContextIndex+0x38>
 8012382:	68fb      	ldr	r3, [r7, #12]
 8012384:	3301      	adds	r3, #1
 8012386:	60fb      	str	r3, [r7, #12]
 8012388:	68fb      	ldr	r3, [r7, #12]
 801238a:	2b05      	cmp	r3, #5
 801238c:	d9eb      	bls.n	8012366 <getFreeContextIndex+0xe>
 801238e:	e000      	b.n	8012392 <getFreeContextIndex+0x3a>
 8012390:	bf00      	nop
 8012392:	68fb      	ldr	r3, [r7, #12]
 8012394:	2b06      	cmp	r3, #6
 8012396:	d101      	bne.n	801239c <getFreeContextIndex+0x44>
 8012398:	2300      	movs	r3, #0
 801239a:	60fb      	str	r3, [r7, #12]
 801239c:	68fb      	ldr	r3, [r7, #12]
 801239e:	4618      	mov	r0, r3
 80123a0:	3714      	adds	r7, #20
 80123a2:	46bd      	mov	sp, r7
 80123a4:	bc80      	pop	{r7}
 80123a6:	4770      	bx	lr

080123a8 <resetContext>:
 80123a8:	b480      	push	{r7}
 80123aa:	b085      	sub	sp, #20
 80123ac:	af00      	add	r7, sp, #0
 80123ae:	6078      	str	r0, [r7, #4]
 80123b0:	2300      	movs	r3, #0
 80123b2:	60fb      	str	r3, [r7, #12]
 80123b4:	e010      	b.n	80123d8 <resetContext+0x30>
 80123b6:	6879      	ldr	r1, [r7, #4]
 80123b8:	68fa      	ldr	r2, [r7, #12]
 80123ba:	4613      	mov	r3, r2
 80123bc:	005b      	lsls	r3, r3, #1
 80123be:	4413      	add	r3, r2
 80123c0:	009b      	lsls	r3, r3, #2
 80123c2:	440b      	add	r3, r1
 80123c4:	3338      	adds	r3, #56	; 0x38
 80123c6:	2200      	movs	r2, #0
 80123c8:	601a      	str	r2, [r3, #0]
 80123ca:	791a      	ldrb	r2, [r3, #4]
 80123cc:	f36f 0207 	bfc	r2, #0, #8
 80123d0:	711a      	strb	r2, [r3, #4]
 80123d2:	68fb      	ldr	r3, [r7, #12]
 80123d4:	3301      	adds	r3, #1
 80123d6:	60fb      	str	r3, [r7, #12]
 80123d8:	68fb      	ldr	r3, [r7, #12]
 80123da:	2b05      	cmp	r3, #5
 80123dc:	d9eb      	bls.n	80123b6 <resetContext+0xe>
 80123de:	bf00      	nop
 80123e0:	bf00      	nop
 80123e2:	3714      	adds	r7, #20
 80123e4:	46bd      	mov	sp, r7
 80123e6:	bc80      	pop	{r7}
 80123e8:	4770      	bx	lr

080123ea <isAnyContextStored>:
 80123ea:	b480      	push	{r7}
 80123ec:	b085      	sub	sp, #20
 80123ee:	af00      	add	r7, sp, #0
 80123f0:	6078      	str	r0, [r7, #4]
 80123f2:	2300      	movs	r3, #0
 80123f4:	60fb      	str	r3, [r7, #12]
 80123f6:	e012      	b.n	801241e <isAnyContextStored+0x34>
 80123f8:	6879      	ldr	r1, [r7, #4]
 80123fa:	68fa      	ldr	r2, [r7, #12]
 80123fc:	4613      	mov	r3, r2
 80123fe:	005b      	lsls	r3, r3, #1
 8012400:	4413      	add	r3, r2
 8012402:	009b      	lsls	r3, r3, #2
 8012404:	440b      	add	r3, r1
 8012406:	f103 0138 	add.w	r1, r3, #56	; 0x38
 801240a:	680a      	ldr	r2, [r1, #0]
 801240c:	7909      	ldrb	r1, [r1, #4]
 801240e:	460b      	mov	r3, r1
 8012410:	4313      	orrs	r3, r2
 8012412:	d001      	beq.n	8012418 <isAnyContextStored+0x2e>
 8012414:	2301      	movs	r3, #1
 8012416:	e006      	b.n	8012426 <isAnyContextStored+0x3c>
 8012418:	68fb      	ldr	r3, [r7, #12]
 801241a:	3301      	adds	r3, #1
 801241c:	60fb      	str	r3, [r7, #12]
 801241e:	68fb      	ldr	r3, [r7, #12]
 8012420:	2b05      	cmp	r3, #5
 8012422:	d9e9      	bls.n	80123f8 <isAnyContextStored+0xe>
 8012424:	2300      	movs	r3, #0
 8012426:	4618      	mov	r0, r3
 8012428:	3714      	adds	r7, #20
 801242a:	46bd      	mov	sp, r7
 801242c:	bc80      	pop	{r7}
 801242e:	4770      	bx	lr

08012430 <a2cfc355d32e55b8b56cc48ae29213a5fcc061ca>:
 8012430:	b590      	push	{r4, r7, lr}
 8012432:	b0ad      	sub	sp, #180	; 0xb4
 8012434:	af00      	add	r7, sp, #0
 8012436:	4b08      	ldr	r3, [pc, #32]	; (8012458 <a2cfc355d32e55b8b56cc48ae29213a5fcc061ca+0x28>)
 8012438:	681c      	ldr	r4, [r3, #0]
 801243a:	f204 5374 	addw	r3, r4, #1396	; 0x574
 801243e:	22ac      	movs	r2, #172	; 0xac
 8012440:	2100      	movs	r1, #0
 8012442:	4618      	mov	r0, r3
 8012444:	f018 fe58 	bl	802b0f8 <memset>
 8012448:	2305      	movs	r3, #5
 801244a:	f8c4 359c 	str.w	r3, [r4, #1436]	; 0x59c
 801244e:	bf00      	nop
 8012450:	37b4      	adds	r7, #180	; 0xb4
 8012452:	46bd      	mov	sp, r7
 8012454:	bd90      	pop	{r4, r7, pc}
 8012456:	bf00      	nop
 8012458:	20000040 	.word	0x20000040

0801245c <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8>:
 801245c:	b580      	push	{r7, lr}
 801245e:	b082      	sub	sp, #8
 8012460:	af00      	add	r7, sp, #0
 8012462:	6078      	str	r0, [r7, #4]
 8012464:	687b      	ldr	r3, [r7, #4]
 8012466:	2b00      	cmp	r3, #0
 8012468:	d104      	bne.n	8012474 <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8+0x18>
 801246a:	22dc      	movs	r2, #220	; 0xdc
 801246c:	4908      	ldr	r1, [pc, #32]	; (8012490 <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8+0x34>)
 801246e:	4809      	ldr	r0, [pc, #36]	; (8012494 <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8+0x38>)
 8012470:	f7ef f94a 	bl	8001708 <EXPECT_OnAbortHandler>
 8012474:	4b08      	ldr	r3, [pc, #32]	; (8012498 <1e9fc63c4239e2e23ba8a071c9b6c0d4aab1f4b8+0x3c>)
 8012476:	681b      	ldr	r3, [r3, #0]
 8012478:	f203 630c 	addw	r3, r3, #1548	; 0x60c
 801247c:	2210      	movs	r2, #16
 801247e:	6879      	ldr	r1, [r7, #4]
 8012480:	4618      	mov	r0, r3
 8012482:	f018 fed8 	bl	802b236 <memcpy>
 8012486:	bf00      	nop
 8012488:	3708      	adds	r7, #8
 801248a:	46bd      	mov	sp, r7
 801248c:	bd80      	pop	{r7, pc}
 801248e:	bf00      	nop
 8012490:	0802eaf8 	.word	0x0802eaf8
 8012494:	0802eb5c 	.word	0x0802eb5c
 8012498:	20000040 	.word	0x20000040

0801249c <7d0846c279c7703537dc22d139b898222dc42c28>:
 801249c:	b580      	push	{r7, lr}
 801249e:	b084      	sub	sp, #16
 80124a0:	af00      	add	r7, sp, #0
 80124a2:	6078      	str	r0, [r7, #4]
 80124a4:	687b      	ldr	r3, [r7, #4]
 80124a6:	2b00      	cmp	r3, #0
 80124a8:	d104      	bne.n	80124b4 <7d0846c279c7703537dc22d139b898222dc42c28+0x18>
 80124aa:	22ec      	movs	r2, #236	; 0xec
 80124ac:	490d      	ldr	r1, [pc, #52]	; (80124e4 <7d0846c279c7703537dc22d139b898222dc42c28+0x48>)
 80124ae:	480e      	ldr	r0, [pc, #56]	; (80124e8 <7d0846c279c7703537dc22d139b898222dc42c28+0x4c>)
 80124b0:	f7ef f92a 	bl	8001708 <EXPECT_OnAbortHandler>
 80124b4:	4b0d      	ldr	r3, [pc, #52]	; (80124ec <7d0846c279c7703537dc22d139b898222dc42c28+0x50>)
 80124b6:	681b      	ldr	r3, [r3, #0]
 80124b8:	f203 5374 	addw	r3, r3, #1396	; 0x574
 80124bc:	60fb      	str	r3, [r7, #12]
 80124be:	68fb      	ldr	r3, [r7, #12]
 80124c0:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 80124c4:	2b03      	cmp	r3, #3
 80124c6:	d108      	bne.n	80124da <7d0846c279c7703537dc22d139b898222dc42c28+0x3e>
 80124c8:	68fb      	ldr	r3, [r7, #12]
 80124ca:	3382      	adds	r3, #130	; 0x82
 80124cc:	2212      	movs	r2, #18
 80124ce:	4619      	mov	r1, r3
 80124d0:	6878      	ldr	r0, [r7, #4]
 80124d2:	f018 feb0 	bl	802b236 <memcpy>
 80124d6:	2301      	movs	r3, #1
 80124d8:	e000      	b.n	80124dc <7d0846c279c7703537dc22d139b898222dc42c28+0x40>
 80124da:	2300      	movs	r3, #0
 80124dc:	4618      	mov	r0, r3
 80124de:	3710      	adds	r7, #16
 80124e0:	46bd      	mov	sp, r7
 80124e2:	bd80      	pop	{r7, pc}
 80124e4:	0802eaf8 	.word	0x0802eaf8
 80124e8:	0802eb70 	.word	0x0802eb70
 80124ec:	20000040 	.word	0x20000040

080124f0 <d492673eb40b0122449614ddec3203e781e2c714>:
 80124f0:	b580      	push	{r7, lr}
 80124f2:	b08e      	sub	sp, #56	; 0x38
 80124f4:	af00      	add	r7, sp, #0
 80124f6:	4603      	mov	r3, r0
 80124f8:	6039      	str	r1, [r7, #0]
 80124fa:	80fb      	strh	r3, [r7, #6]
 80124fc:	4b6e      	ldr	r3, [pc, #440]	; (80126b8 <d492673eb40b0122449614ddec3203e781e2c714+0x1c8>)
 80124fe:	681b      	ldr	r3, [r3, #0]
 8012500:	f203 5374 	addw	r3, r3, #1396	; 0x574
 8012504:	633b      	str	r3, [r7, #48]	; 0x30
 8012506:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012508:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 801250c:	2b00      	cmp	r3, #0
 801250e:	d011      	beq.n	8012534 <d492673eb40b0122449614ddec3203e781e2c714+0x44>
 8012510:	4a6a      	ldr	r2, [pc, #424]	; (80126bc <d492673eb40b0122449614ddec3203e781e2c714+0x1cc>)
 8012512:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012516:	e892 0003 	ldmia.w	r2, {r0, r1}
 801251a:	e883 0003 	stmia.w	r3, {r0, r1}
 801251e:	4a68      	ldr	r2, [pc, #416]	; (80126c0 <d492673eb40b0122449614ddec3203e781e2c714+0x1d0>)
 8012520:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012524:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012528:	f002 fe6e 	bl	8015208 <LOGGER_PrintLine>
 801252c:	2100      	movs	r1, #0
 801252e:	6838      	ldr	r0, [r7, #0]
 8012530:	f000 f990 	bl	8012854 <9506f9c37a945216115ab5227293f46163fc6230>
 8012534:	6839      	ldr	r1, [r7, #0]
 8012536:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012538:	f7ff fd88 	bl	801204c <deactivateExpired>
 801253c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801253e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8012542:	2b00      	cmp	r3, #0
 8012544:	d03c      	beq.n	80125c0 <d492673eb40b0122449614ddec3203e781e2c714+0xd0>
 8012546:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012548:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801254c:	683a      	ldr	r2, [r7, #0]
 801254e:	1ad3      	subs	r3, r2, r3
 8012550:	4a5c      	ldr	r2, [pc, #368]	; (80126c4 <d492673eb40b0122449614ddec3203e781e2c714+0x1d4>)
 8012552:	4293      	cmp	r3, r2
 8012554:	d918      	bls.n	8012588 <d492673eb40b0122449614ddec3203e781e2c714+0x98>
 8012556:	4a5c      	ldr	r2, [pc, #368]	; (80126c8 <d492673eb40b0122449614ddec3203e781e2c714+0x1d8>)
 8012558:	f107 0320 	add.w	r3, r7, #32
 801255c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012560:	e883 0003 	stmia.w	r3, {r0, r1}
 8012564:	4a59      	ldr	r2, [pc, #356]	; (80126cc <d492673eb40b0122449614ddec3203e781e2c714+0x1dc>)
 8012566:	f107 0320 	add.w	r3, r7, #32
 801256a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801256e:	f002 fe4b 	bl	8015208 <LOGGER_PrintLine>
 8012572:	f016 fa83 	bl	8028a7c <d6f04be9d8ad12cb38262f1bba36a144854d1588>
 8012576:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012578:	2200      	movs	r2, #0
 801257a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 801257e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012580:	2200      	movs	r2, #0
 8012582:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012586:	e01b      	b.n	80125c0 <d492673eb40b0122449614ddec3203e781e2c714+0xd0>
 8012588:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801258a:	f8b3 3092 	ldrh.w	r3, [r3, #146]	; 0x92
 801258e:	88fa      	ldrh	r2, [r7, #6]
 8012590:	429a      	cmp	r2, r3
 8012592:	d113      	bne.n	80125bc <d492673eb40b0122449614ddec3203e781e2c714+0xcc>
 8012594:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012596:	2203      	movs	r2, #3
 8012598:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 801259c:	4a4c      	ldr	r2, [pc, #304]	; (80126d0 <d492673eb40b0122449614ddec3203e781e2c714+0x1e0>)
 801259e:	f107 0318 	add.w	r3, r7, #24
 80125a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80125a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80125aa:	4a4a      	ldr	r2, [pc, #296]	; (80126d4 <d492673eb40b0122449614ddec3203e781e2c714+0x1e4>)
 80125ac:	f107 0318 	add.w	r3, r7, #24
 80125b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80125b4:	f002 fe28 	bl	8015208 <LOGGER_PrintLine>
 80125b8:	2301      	movs	r3, #1
 80125ba:	e079      	b.n	80126b0 <d492673eb40b0122449614ddec3203e781e2c714+0x1c0>
 80125bc:	2300      	movs	r3, #0
 80125be:	e077      	b.n	80126b0 <d492673eb40b0122449614ddec3203e781e2c714+0x1c0>
 80125c0:	2300      	movs	r3, #0
 80125c2:	637b      	str	r3, [r7, #52]	; 0x34
 80125c4:	e023      	b.n	801260e <d492673eb40b0122449614ddec3203e781e2c714+0x11e>
 80125c6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80125c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80125ca:	00db      	lsls	r3, r3, #3
 80125cc:	4413      	add	r3, r2
 80125ce:	789b      	ldrb	r3, [r3, #2]
 80125d0:	2b00      	cmp	r3, #0
 80125d2:	d019      	beq.n	8012608 <d492673eb40b0122449614ddec3203e781e2c714+0x118>
 80125d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80125d6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80125d8:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
 80125dc:	88fa      	ldrh	r2, [r7, #6]
 80125de:	429a      	cmp	r2, r3
 80125e0:	d112      	bne.n	8012608 <d492673eb40b0122449614ddec3203e781e2c714+0x118>
 80125e2:	4a3b      	ldr	r2, [pc, #236]	; (80126d0 <d492673eb40b0122449614ddec3203e781e2c714+0x1e0>)
 80125e4:	f107 0310 	add.w	r3, r7, #16
 80125e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80125ec:	e883 0003 	stmia.w	r3, {r0, r1}
 80125f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80125f2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80125f4:	f833 3032 	ldrh.w	r3, [r3, r2, lsl #3]
 80125f8:	4a37      	ldr	r2, [pc, #220]	; (80126d8 <d492673eb40b0122449614ddec3203e781e2c714+0x1e8>)
 80125fa:	f107 0110 	add.w	r1, r7, #16
 80125fe:	c903      	ldmia	r1, {r0, r1}
 8012600:	f002 fe02 	bl	8015208 <LOGGER_PrintLine>
 8012604:	2300      	movs	r3, #0
 8012606:	e053      	b.n	80126b0 <d492673eb40b0122449614ddec3203e781e2c714+0x1c0>
 8012608:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801260a:	3301      	adds	r3, #1
 801260c:	637b      	str	r3, [r7, #52]	; 0x34
 801260e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8012610:	2b04      	cmp	r3, #4
 8012612:	d9d8      	bls.n	80125c6 <d492673eb40b0122449614ddec3203e781e2c714+0xd6>
 8012614:	6839      	ldr	r1, [r7, #0]
 8012616:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012618:	f7ff fd5c 	bl	80120d4 <getFreeEntry>
 801261c:	4602      	mov	r2, r0
 801261e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012620:	629a      	str	r2, [r3, #40]	; 0x28
 8012622:	492e      	ldr	r1, [pc, #184]	; (80126dc <d492673eb40b0122449614ddec3203e781e2c714+0x1ec>)
 8012624:	482d      	ldr	r0, [pc, #180]	; (80126dc <d492673eb40b0122449614ddec3203e781e2c714+0x1ec>)
 8012626:	f7ff fc9b 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 801262a:	4602      	mov	r2, r0
 801262c:	683b      	ldr	r3, [r7, #0]
 801262e:	441a      	add	r2, r3
 8012630:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012632:	631a      	str	r2, [r3, #48]	; 0x30
 8012634:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012636:	2201      	movs	r2, #1
 8012638:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 801263c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801263e:	2201      	movs	r2, #1
 8012640:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8012644:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012646:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8012648:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801264a:	88f9      	ldrh	r1, [r7, #6]
 801264c:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
 8012650:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012652:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012654:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8012656:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8012658:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801265a:	00db      	lsls	r3, r3, #3
 801265c:	440b      	add	r3, r1
 801265e:	605a      	str	r2, [r3, #4]
 8012660:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012662:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012664:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8012666:	00db      	lsls	r3, r3, #3
 8012668:	4413      	add	r3, r2
 801266a:	2201      	movs	r2, #1
 801266c:	709a      	strb	r2, [r3, #2]
 801266e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012670:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012672:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8012674:	00db      	lsls	r3, r3, #3
 8012676:	4413      	add	r3, r2
 8012678:	2200      	movs	r2, #0
 801267a:	70da      	strb	r2, [r3, #3]
 801267c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801267e:	f7ff fe93 	bl	80123a8 <resetContext>
 8012682:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8012684:	2201      	movs	r2, #1
 8012686:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 801268a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801268c:	88fa      	ldrh	r2, [r7, #6]
 801268e:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 8012692:	4a0f      	ldr	r2, [pc, #60]	; (80126d0 <d492673eb40b0122449614ddec3203e781e2c714+0x1e0>)
 8012694:	f107 0308 	add.w	r3, r7, #8
 8012698:	e892 0003 	ldmia.w	r2, {r0, r1}
 801269c:	e883 0003 	stmia.w	r3, {r0, r1}
 80126a0:	88fb      	ldrh	r3, [r7, #6]
 80126a2:	4a0f      	ldr	r2, [pc, #60]	; (80126e0 <d492673eb40b0122449614ddec3203e781e2c714+0x1f0>)
 80126a4:	f107 0108 	add.w	r1, r7, #8
 80126a8:	c903      	ldmia	r1, {r0, r1}
 80126aa:	f002 fdad 	bl	8015208 <LOGGER_PrintLine>
 80126ae:	2301      	movs	r3, #1
 80126b0:	4618      	mov	r0, r3
 80126b2:	3738      	adds	r7, #56	; 0x38
 80126b4:	46bd      	mov	sp, r7
 80126b6:	bd80      	pop	{r7, pc}
 80126b8:	20000040 	.word	0x20000040
 80126bc:	0802eaf0 	.word	0x0802eaf0
 80126c0:	0802eb90 	.word	0x0802eb90
 80126c4:	03938700 	.word	0x03938700
 80126c8:	0802eae8 	.word	0x0802eae8
 80126cc:	0802ebcc 	.word	0x0802ebcc
 80126d0:	0802ec1c 	.word	0x0802ec1c
 80126d4:	0802ebe4 	.word	0x0802ebe4
 80126d8:	0802ebf4 	.word	0x0802ebf4
 80126dc:	00989680 	.word	0x00989680
 80126e0:	0802ec08 	.word	0x0802ec08

080126e4 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe>:
 80126e4:	b580      	push	{r7, lr}
 80126e6:	b08a      	sub	sp, #40	; 0x28
 80126e8:	af00      	add	r7, sp, #0
 80126ea:	6078      	str	r0, [r7, #4]
 80126ec:	4b50      	ldr	r3, [pc, #320]	; (8012830 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x14c>)
 80126ee:	681b      	ldr	r3, [r3, #0]
 80126f0:	f203 5374 	addw	r3, r3, #1396	; 0x574
 80126f4:	627b      	str	r3, [r7, #36]	; 0x24
 80126f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80126f8:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 80126fc:	2b01      	cmp	r3, #1
 80126fe:	f040 8090 	bne.w	8012822 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x13e>
 8012702:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012704:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012706:	2b04      	cmp	r3, #4
 8012708:	d875      	bhi.n	80127f6 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x112>
 801270a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801270c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801270e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012710:	00db      	lsls	r3, r3, #3
 8012712:	4413      	add	r3, r2
 8012714:	789b      	ldrb	r3, [r3, #2]
 8012716:	2b00      	cmp	r3, #0
 8012718:	d057      	beq.n	80127ca <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0xe6>
 801271a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801271c:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8012720:	2b00      	cmp	r3, #0
 8012722:	d015      	beq.n	8012750 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x6c>
 8012724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012726:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8012728:	687b      	ldr	r3, [r7, #4]
 801272a:	1ad3      	subs	r3, r2, r3
 801272c:	4a41      	ldr	r2, [pc, #260]	; (8012834 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x150>)
 801272e:	4293      	cmp	r3, r2
 8012730:	d977      	bls.n	8012822 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x13e>
 8012732:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012734:	2200      	movs	r2, #0
 8012736:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 801273a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801273c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801273e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012740:	00db      	lsls	r3, r3, #3
 8012742:	4413      	add	r3, r2
 8012744:	687a      	ldr	r2, [r7, #4]
 8012746:	605a      	str	r2, [r3, #4]
 8012748:	f7ff fd12 	bl	8012170 <sendPledgeReuquest>
 801274c:	2301      	movs	r3, #1
 801274e:	e06b      	b.n	8012828 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x144>
 8012750:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012752:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012754:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8012756:	00db      	lsls	r3, r3, #3
 8012758:	4413      	add	r3, r2
 801275a:	685b      	ldr	r3, [r3, #4]
 801275c:	687a      	ldr	r2, [r7, #4]
 801275e:	1ad3      	subs	r3, r2, r3
 8012760:	4a35      	ldr	r2, [pc, #212]	; (8012838 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x154>)
 8012762:	4293      	cmp	r3, r2
 8012764:	d95d      	bls.n	8012822 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x13e>
 8012766:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012768:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 801276c:	2b00      	cmp	r3, #0
 801276e:	d016      	beq.n	801279e <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0xba>
 8012770:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012772:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8012776:	3b01      	subs	r3, #1
 8012778:	b2da      	uxtb	r2, r3
 801277a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801277c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8012780:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012782:	2201      	movs	r2, #1
 8012784:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8012788:	492c      	ldr	r1, [pc, #176]	; (801283c <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x158>)
 801278a:	482d      	ldr	r0, [pc, #180]	; (8012840 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x15c>)
 801278c:	f7ff fba6 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 8012790:	4602      	mov	r2, r0
 8012792:	687b      	ldr	r3, [r7, #4]
 8012794:	441a      	add	r2, r3
 8012796:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012798:	631a      	str	r2, [r3, #48]	; 0x30
 801279a:	2301      	movs	r3, #1
 801279c:	e044      	b.n	8012828 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x144>
 801279e:	4a29      	ldr	r2, [pc, #164]	; (8012844 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x160>)
 80127a0:	f107 031c 	add.w	r3, r7, #28
 80127a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80127a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80127ac:	4a26      	ldr	r2, [pc, #152]	; (8012848 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x164>)
 80127ae:	f107 031c 	add.w	r3, r7, #28
 80127b2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80127b6:	f002 fd27 	bl	8015208 <LOGGER_PrintLine>
 80127ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80127bc:	2204      	movs	r2, #4
 80127be:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 80127c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80127c4:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 80127c8:	e02e      	b.n	8012828 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x144>
 80127ca:	4a1e      	ldr	r2, [pc, #120]	; (8012844 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x160>)
 80127cc:	f107 0314 	add.w	r3, r7, #20
 80127d0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80127d4:	e883 0003 	stmia.w	r3, {r0, r1}
 80127d8:	4a1c      	ldr	r2, [pc, #112]	; (801284c <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x168>)
 80127da:	f107 0314 	add.w	r3, r7, #20
 80127de:	e893 0003 	ldmia.w	r3, {r0, r1}
 80127e2:	f002 fd11 	bl	8015208 <LOGGER_PrintLine>
 80127e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80127e8:	2204      	movs	r2, #4
 80127ea:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 80127ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80127f0:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 80127f4:	e018      	b.n	8012828 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x144>
 80127f6:	4a13      	ldr	r2, [pc, #76]	; (8012844 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x160>)
 80127f8:	f107 030c 	add.w	r3, r7, #12
 80127fc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012800:	e883 0003 	stmia.w	r3, {r0, r1}
 8012804:	4a12      	ldr	r2, [pc, #72]	; (8012850 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x16c>)
 8012806:	f107 030c 	add.w	r3, r7, #12
 801280a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801280e:	f002 fcfb 	bl	8015208 <LOGGER_PrintLine>
 8012812:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012814:	2204      	movs	r2, #4
 8012816:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 801281a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801281c:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 8012820:	e002      	b.n	8012828 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe+0x144>
 8012822:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8012824:	f893 30a8 	ldrb.w	r3, [r3, #168]	; 0xa8
 8012828:	4618      	mov	r0, r3
 801282a:	3728      	adds	r7, #40	; 0x28
 801282c:	46bd      	mov	sp, r7
 801282e:	bd80      	pop	{r7, pc}
 8012830:	20000040 	.word	0x20000040
 8012834:	01312d00 	.word	0x01312d00
 8012838:	02aea540 	.word	0x02aea540
 801283c:	00989680 	.word	0x00989680
 8012840:	000f4240 	.word	0x000f4240
 8012844:	0802eaf0 	.word	0x0802eaf0
 8012848:	0802ec24 	.word	0x0802ec24
 801284c:	0802ec3c 	.word	0x0802ec3c
 8012850:	0802ec68 	.word	0x0802ec68

08012854 <9506f9c37a945216115ab5227293f46163fc6230>:
 8012854:	b580      	push	{r7, lr}
 8012856:	b08a      	sub	sp, #40	; 0x28
 8012858:	af00      	add	r7, sp, #0
 801285a:	6078      	str	r0, [r7, #4]
 801285c:	460b      	mov	r3, r1
 801285e:	70fb      	strb	r3, [r7, #3]
 8012860:	2300      	movs	r3, #0
 8012862:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8012866:	4b35      	ldr	r3, [pc, #212]	; (801293c <9506f9c37a945216115ab5227293f46163fc6230+0xe8>)
 8012868:	681b      	ldr	r3, [r3, #0]
 801286a:	f203 5374 	addw	r3, r3, #1396	; 0x574
 801286e:	623b      	str	r3, [r7, #32]
 8012870:	6a3b      	ldr	r3, [r7, #32]
 8012872:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012874:	2b04      	cmp	r3, #4
 8012876:	d80d      	bhi.n	8012894 <9506f9c37a945216115ab5227293f46163fc6230+0x40>
 8012878:	6a3b      	ldr	r3, [r7, #32]
 801287a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801287c:	6a3a      	ldr	r2, [r7, #32]
 801287e:	00db      	lsls	r3, r3, #3
 8012880:	4413      	add	r3, r2
 8012882:	687a      	ldr	r2, [r7, #4]
 8012884:	605a      	str	r2, [r3, #4]
 8012886:	6a3b      	ldr	r3, [r7, #32]
 8012888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801288a:	6a3a      	ldr	r2, [r7, #32]
 801288c:	00db      	lsls	r3, r3, #3
 801288e:	4413      	add	r3, r2
 8012890:	2201      	movs	r2, #1
 8012892:	709a      	strb	r2, [r3, #2]
 8012894:	6a3b      	ldr	r3, [r7, #32]
 8012896:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 801289a:	2b00      	cmp	r3, #0
 801289c:	d019      	beq.n	80128d2 <9506f9c37a945216115ab5227293f46163fc6230+0x7e>
 801289e:	6a3b      	ldr	r3, [r7, #32]
 80128a0:	2200      	movs	r2, #0
 80128a2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80128a6:	6a3b      	ldr	r3, [r7, #32]
 80128a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128aa:	2b04      	cmp	r3, #4
 80128ac:	d80d      	bhi.n	80128ca <9506f9c37a945216115ab5227293f46163fc6230+0x76>
 80128ae:	6a3b      	ldr	r3, [r7, #32]
 80128b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128b2:	6a3a      	ldr	r2, [r7, #32]
 80128b4:	00db      	lsls	r3, r3, #3
 80128b6:	4413      	add	r3, r2
 80128b8:	2200      	movs	r2, #0
 80128ba:	709a      	strb	r2, [r3, #2]
 80128bc:	6a3b      	ldr	r3, [r7, #32]
 80128be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128c0:	6a3a      	ldr	r2, [r7, #32]
 80128c2:	00db      	lsls	r3, r3, #3
 80128c4:	4413      	add	r3, r2
 80128c6:	2200      	movs	r2, #0
 80128c8:	70da      	strb	r2, [r3, #3]
 80128ca:	2301      	movs	r3, #1
 80128cc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80128d0:	e01d      	b.n	801290e <9506f9c37a945216115ab5227293f46163fc6230+0xba>
 80128d2:	78fb      	ldrb	r3, [r7, #3]
 80128d4:	2b00      	cmp	r3, #0
 80128d6:	d01a      	beq.n	801290e <9506f9c37a945216115ab5227293f46163fc6230+0xba>
 80128d8:	6a3b      	ldr	r3, [r7, #32]
 80128da:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 80128de:	2b00      	cmp	r3, #0
 80128e0:	d015      	beq.n	801290e <9506f9c37a945216115ab5227293f46163fc6230+0xba>
 80128e2:	4a17      	ldr	r2, [pc, #92]	; (8012940 <9506f9c37a945216115ab5227293f46163fc6230+0xec>)
 80128e4:	f107 0308 	add.w	r3, r7, #8
 80128e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80128ec:	e883 0003 	stmia.w	r3, {r0, r1}
 80128f0:	4a14      	ldr	r2, [pc, #80]	; (8012944 <9506f9c37a945216115ab5227293f46163fc6230+0xf0>)
 80128f2:	f107 0308 	add.w	r3, r7, #8
 80128f6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80128fa:	f002 fc85 	bl	8015208 <LOGGER_PrintLine>
 80128fe:	6a3b      	ldr	r3, [r7, #32]
 8012900:	2201      	movs	r2, #1
 8012902:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8012906:	6a3b      	ldr	r3, [r7, #32]
 8012908:	687a      	ldr	r2, [r7, #4]
 801290a:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 801290e:	78fb      	ldrb	r3, [r7, #3]
 8012910:	f083 0301 	eor.w	r3, r3, #1
 8012914:	b2db      	uxtb	r3, r3
 8012916:	2b00      	cmp	r3, #0
 8012918:	d003      	beq.n	8012922 <9506f9c37a945216115ab5227293f46163fc6230+0xce>
 801291a:	6a3b      	ldr	r3, [r7, #32]
 801291c:	2200      	movs	r2, #0
 801291e:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012922:	6a3b      	ldr	r3, [r7, #32]
 8012924:	2205      	movs	r2, #5
 8012926:	629a      	str	r2, [r3, #40]	; 0x28
 8012928:	6a3b      	ldr	r3, [r7, #32]
 801292a:	2200      	movs	r2, #0
 801292c:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8012930:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8012934:	4618      	mov	r0, r3
 8012936:	3728      	adds	r7, #40	; 0x28
 8012938:	46bd      	mov	sp, r7
 801293a:	bd80      	pop	{r7, pc}
 801293c:	20000040 	.word	0x20000040
 8012940:	0802ec1c 	.word	0x0802ec1c
 8012944:	0802ec84 	.word	0x0802ec84

08012948 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa>:
 8012948:	b590      	push	{r4, r7, lr}
 801294a:	b095      	sub	sp, #84	; 0x54
 801294c:	af00      	add	r7, sp, #0
 801294e:	60f8      	str	r0, [r7, #12]
 8012950:	60b9      	str	r1, [r7, #8]
 8012952:	607a      	str	r2, [r7, #4]
 8012954:	68fb      	ldr	r3, [r7, #12]
 8012956:	2b00      	cmp	r3, #0
 8012958:	d105      	bne.n	8012966 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x1e>
 801295a:	f44f 72dc 	mov.w	r2, #440	; 0x1b8
 801295e:	4945      	ldr	r1, [pc, #276]	; (8012a74 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x12c>)
 8012960:	4845      	ldr	r0, [pc, #276]	; (8012a78 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x130>)
 8012962:	f7ee fed1 	bl	8001708 <EXPECT_OnAbortHandler>
 8012966:	68bb      	ldr	r3, [r7, #8]
 8012968:	2b00      	cmp	r3, #0
 801296a:	d105      	bne.n	8012978 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x30>
 801296c:	f240 12b9 	movw	r2, #441	; 0x1b9
 8012970:	4940      	ldr	r1, [pc, #256]	; (8012a74 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x12c>)
 8012972:	4842      	ldr	r0, [pc, #264]	; (8012a7c <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x134>)
 8012974:	f7ee fec8 	bl	8001708 <EXPECT_OnAbortHandler>
 8012978:	4b41      	ldr	r3, [pc, #260]	; (8012a80 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x138>)
 801297a:	681b      	ldr	r3, [r3, #0]
 801297c:	f203 5374 	addw	r3, r3, #1396	; 0x574
 8012980:	64fb      	str	r3, [r7, #76]	; 0x4c
 8012982:	687b      	ldr	r3, [r7, #4]
 8012984:	2b20      	cmp	r3, #32
 8012986:	d801      	bhi.n	801298c <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x44>
 8012988:	2300      	movs	r3, #0
 801298a:	e06e      	b.n	8012a6a <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x122>
 801298c:	68bb      	ldr	r3, [r7, #8]
 801298e:	64bb      	str	r3, [r7, #72]	; 0x48
 8012990:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8012992:	781b      	ldrb	r3, [r3, #0]
 8012994:	2b02      	cmp	r3, #2
 8012996:	d167      	bne.n	8012a68 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x120>
 8012998:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801299a:	f7ff fd26 	bl	80123ea <isAnyContextStored>
 801299e:	4603      	mov	r3, r0
 80129a0:	f083 0301 	eor.w	r3, r3, #1
 80129a4:	b2db      	uxtb	r3, r3
 80129a6:	2b00      	cmp	r3, #0
 80129a8:	d00f      	beq.n	80129ca <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x82>
 80129aa:	4a36      	ldr	r2, [pc, #216]	; (8012a84 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x13c>)
 80129ac:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80129b0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80129b4:	e883 0003 	stmia.w	r3, {r0, r1}
 80129b8:	4a33      	ldr	r2, [pc, #204]	; (8012a88 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x140>)
 80129ba:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80129be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80129c2:	f002 fc21 	bl	8015208 <LOGGER_PrintLine>
 80129c6:	2301      	movs	r3, #1
 80129c8:	e04f      	b.n	8012a6a <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x122>
 80129ca:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80129cc:	1c5a      	adds	r2, r3, #1
 80129ce:	f107 0310 	add.w	r3, r7, #16
 80129d2:	68f9      	ldr	r1, [r7, #12]
 80129d4:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80129d6:	f7ff fc1f 	bl	8012218 <validatePacket>
 80129da:	4603      	mov	r3, r0
 80129dc:	f083 0301 	eor.w	r3, r3, #1
 80129e0:	b2db      	uxtb	r3, r3
 80129e2:	2b00      	cmp	r3, #0
 80129e4:	d01a      	beq.n	8012a1c <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0xd4>
 80129e6:	4a27      	ldr	r2, [pc, #156]	; (8012a84 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x13c>)
 80129e8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80129ec:	e892 0003 	ldmia.w	r2, {r0, r1}
 80129f0:	e883 0003 	stmia.w	r3, {r0, r1}
 80129f4:	4a25      	ldr	r2, [pc, #148]	; (8012a8c <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x144>)
 80129f6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80129fa:	e893 0003 	ldmia.w	r3, {r0, r1}
 80129fe:	f002 fc03 	bl	8015208 <LOGGER_PrintLine>
 8012a02:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012a06:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8012a08:	00db      	lsls	r3, r3, #3
 8012a0a:	4413      	add	r3, r2
 8012a0c:	2201      	movs	r2, #1
 8012a0e:	70da      	strb	r2, [r3, #3]
 8012a10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a12:	2205      	movs	r2, #5
 8012a14:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8012a18:	2301      	movs	r3, #1
 8012a1a:	e026      	b.n	8012a6a <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x122>
 8012a1c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a1e:	3382      	adds	r3, #130	; 0x82
 8012a20:	461a      	mov	r2, r3
 8012a22:	f107 0315 	add.w	r3, r7, #21
 8012a26:	681c      	ldr	r4, [r3, #0]
 8012a28:	6858      	ldr	r0, [r3, #4]
 8012a2a:	6899      	ldr	r1, [r3, #8]
 8012a2c:	68db      	ldr	r3, [r3, #12]
 8012a2e:	6014      	str	r4, [r2, #0]
 8012a30:	6050      	str	r0, [r2, #4]
 8012a32:	6091      	str	r1, [r2, #8]
 8012a34:	60d3      	str	r3, [r2, #12]
 8012a36:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a38:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8012a3a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a3c:	f833 2032 	ldrh.w	r2, [r3, r2, lsl #3]
 8012a40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a42:	f8a3 2092 	strh.w	r2, [r3, #146]	; 0x92
 8012a46:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a48:	2201      	movs	r2, #1
 8012a4a:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8012a4e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8012a50:	f7ff fcaa 	bl	80123a8 <resetContext>
 8012a54:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a56:	2200      	movs	r2, #0
 8012a58:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8012a5c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012a5e:	2203      	movs	r2, #3
 8012a60:	f883 20a8 	strb.w	r2, [r3, #168]	; 0xa8
 8012a64:	2301      	movs	r3, #1
 8012a66:	e000      	b.n	8012a6a <19861f752ed5b4a4fab486514c3b7aa2c914e6fa+0x122>
 8012a68:	2300      	movs	r3, #0
 8012a6a:	4618      	mov	r0, r3
 8012a6c:	3754      	adds	r7, #84	; 0x54
 8012a6e:	46bd      	mov	sp, r7
 8012a70:	bd90      	pop	{r4, r7, pc}
 8012a72:	bf00      	nop
 8012a74:	0802eaf8 	.word	0x0802eaf8
 8012a78:	0802eca8 	.word	0x0802eca8
 8012a7c:	0802ecbc 	.word	0x0802ecbc
 8012a80:	20000040 	.word	0x20000040
 8012a84:	0802eaf0 	.word	0x0802eaf0
 8012a88:	0802ecd0 	.word	0x0802ecd0
 8012a8c:	0802ed04 	.word	0x0802ed04

08012a90 <ce7cfafa044c34a88028e8cf12995b3096f9f973>:
 8012a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012a92:	b09b      	sub	sp, #108	; 0x6c
 8012a94:	af00      	add	r7, sp, #0
 8012a96:	60f8      	str	r0, [r7, #12]
 8012a98:	60b9      	str	r1, [r7, #8]
 8012a9a:	607a      	str	r2, [r7, #4]
 8012a9c:	603b      	str	r3, [r7, #0]
 8012a9e:	68fb      	ldr	r3, [r7, #12]
 8012aa0:	2b00      	cmp	r3, #0
 8012aa2:	d105      	bne.n	8012ab0 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x20>
 8012aa4:	f240 12e3 	movw	r2, #483	; 0x1e3
 8012aa8:	4956      	ldr	r1, [pc, #344]	; (8012c04 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x174>)
 8012aaa:	4857      	ldr	r0, [pc, #348]	; (8012c08 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x178>)
 8012aac:	f7ee fe2c 	bl	8001708 <EXPECT_OnAbortHandler>
 8012ab0:	687b      	ldr	r3, [r7, #4]
 8012ab2:	2b00      	cmp	r3, #0
 8012ab4:	d105      	bne.n	8012ac2 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x32>
 8012ab6:	f44f 72f2 	mov.w	r2, #484	; 0x1e4
 8012aba:	4952      	ldr	r1, [pc, #328]	; (8012c04 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x174>)
 8012abc:	4853      	ldr	r0, [pc, #332]	; (8012c0c <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x17c>)
 8012abe:	f7ee fe23 	bl	8001708 <EXPECT_OnAbortHandler>
 8012ac2:	68bb      	ldr	r3, [r7, #8]
 8012ac4:	2b00      	cmp	r3, #0
 8012ac6:	d105      	bne.n	8012ad4 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x44>
 8012ac8:	f240 12e5 	movw	r2, #485	; 0x1e5
 8012acc:	494d      	ldr	r1, [pc, #308]	; (8012c04 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x174>)
 8012ace:	4850      	ldr	r0, [pc, #320]	; (8012c10 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x180>)
 8012ad0:	f7ee fe1a 	bl	8001708 <EXPECT_OnAbortHandler>
 8012ad4:	4b4f      	ldr	r3, [pc, #316]	; (8012c14 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x184>)
 8012ad6:	681b      	ldr	r3, [r3, #0]
 8012ad8:	f203 5374 	addw	r3, r3, #1396	; 0x574
 8012adc:	663b      	str	r3, [r7, #96]	; 0x60
 8012ade:	683b      	ldr	r3, [r7, #0]
 8012ae0:	2b20      	cmp	r3, #32
 8012ae2:	d801      	bhi.n	8012ae8 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x58>
 8012ae4:	2300      	movs	r3, #0
 8012ae6:	e088      	b.n	8012bfa <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x16a>
 8012ae8:	2301      	movs	r3, #1
 8012aea:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8012aee:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8012af2:	3301      	adds	r3, #1
 8012af4:	2205      	movs	r2, #5
 8012af6:	68b9      	ldr	r1, [r7, #8]
 8012af8:	4618      	mov	r0, r3
 8012afa:	f7ff fa59 	bl	8011fb0 <c5868198428dfaffddb0900c3d01452778b19d11>
 8012afe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8012b02:	3312      	adds	r3, #18
 8012b04:	2208      	movs	r2, #8
 8012b06:	2100      	movs	r1, #0
 8012b08:	4618      	mov	r0, r3
 8012b0a:	f018 faf5 	bl	802b0f8 <memset>
 8012b0e:	68fa      	ldr	r2, [r7, #12]
 8012b10:	f107 033e 	add.w	r3, r7, #62	; 0x3e
 8012b14:	6811      	ldr	r1, [r2, #0]
 8012b16:	6852      	ldr	r2, [r2, #4]
 8012b18:	6019      	str	r1, [r3, #0]
 8012b1a:	605a      	str	r2, [r3, #4]
 8012b1c:	f04f 31ff 	mov.w	r1, #4294967295
 8012b20:	2000      	movs	r0, #0
 8012b22:	f7ff f9db 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 8012b26:	4603      	mov	r3, r0
 8012b28:	f8c7 3046 	str.w	r3, [r7, #70]	; 0x46
 8012b2c:	2300      	movs	r3, #0
 8012b2e:	667b      	str	r3, [r7, #100]	; 0x64
 8012b30:	e008      	b.n	8012b44 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0xb4>
 8012b32:	f107 0252 	add.w	r2, r7, #82	; 0x52
 8012b36:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8012b38:	4413      	add	r3, r2
 8012b3a:	222f      	movs	r2, #47	; 0x2f
 8012b3c:	701a      	strb	r2, [r3, #0]
 8012b3e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8012b40:	3301      	adds	r3, #1
 8012b42:	667b      	str	r3, [r7, #100]	; 0x64
 8012b44:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8012b46:	2b06      	cmp	r3, #6
 8012b48:	d9f3      	bls.n	8012b32 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0xa2>
 8012b4a:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8012b4c:	f7ff fc04 	bl	8012358 <getFreeContextIndex>
 8012b50:	65f8      	str	r0, [r7, #92]	; 0x5c
 8012b52:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8012b54:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8012b56:	4613      	mov	r3, r2
 8012b58:	005b      	lsls	r3, r3, #1
 8012b5a:	4413      	add	r3, r2
 8012b5c:	009b      	lsls	r3, r3, #2
 8012b5e:	440b      	add	r3, r1
 8012b60:	3338      	adds	r3, #56	; 0x38
 8012b62:	68ba      	ldr	r2, [r7, #8]
 8012b64:	6810      	ldr	r0, [r2, #0]
 8012b66:	6018      	str	r0, [r3, #0]
 8012b68:	7912      	ldrb	r2, [r2, #4]
 8012b6a:	711a      	strb	r2, [r3, #4]
 8012b6c:	f8d7 1046 	ldr.w	r1, [r7, #70]	; 0x46
 8012b70:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8012b72:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8012b74:	4613      	mov	r3, r2
 8012b76:	005b      	lsls	r3, r3, #1
 8012b78:	4413      	add	r3, r2
 8012b7a:	009b      	lsls	r3, r3, #2
 8012b7c:	4403      	add	r3, r0
 8012b7e:	3340      	adds	r3, #64	; 0x40
 8012b80:	6019      	str	r1, [r3, #0]
 8012b82:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012b86:	330a      	adds	r3, #10
 8012b88:	2205      	movs	r2, #5
 8012b8a:	68b9      	ldr	r1, [r7, #8]
 8012b8c:	4618      	mov	r0, r3
 8012b8e:	f7ff fa0f 	bl	8011fb0 <c5868198428dfaffddb0900c3d01452778b19d11>
 8012b92:	f107 0329 	add.w	r3, r7, #41	; 0x29
 8012b96:	f107 023e 	add.w	r2, r7, #62	; 0x3e
 8012b9a:	6811      	ldr	r1, [r2, #0]
 8012b9c:	6852      	ldr	r2, [r2, #4]
 8012b9e:	6019      	str	r1, [r3, #0]
 8012ba0:	605a      	str	r2, [r3, #4]
 8012ba2:	232f      	movs	r3, #47	; 0x2f
 8012ba4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012ba8:	232f      	movs	r3, #47	; 0x2f
 8012baa:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 8012bae:	232f      	movs	r3, #47	; 0x2f
 8012bb0:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8012bb4:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8012bb6:	f103 0298 	add.w	r2, r3, #152	; 0x98
 8012bba:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8012bbe:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8012bc2:	1c58      	adds	r0, r3, #1
 8012bc4:	460b      	mov	r3, r1
 8012bc6:	2120      	movs	r1, #32
 8012bc8:	f016 fe89 	bl	80298de <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9>
 8012bcc:	687b      	ldr	r3, [r7, #4]
 8012bce:	f107 0438 	add.w	r4, r7, #56	; 0x38
 8012bd2:	469c      	mov	ip, r3
 8012bd4:	f104 0e20 	add.w	lr, r4, #32
 8012bd8:	4665      	mov	r5, ip
 8012bda:	4626      	mov	r6, r4
 8012bdc:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8012bde:	6028      	str	r0, [r5, #0]
 8012be0:	6069      	str	r1, [r5, #4]
 8012be2:	60aa      	str	r2, [r5, #8]
 8012be4:	60eb      	str	r3, [r5, #12]
 8012be6:	3410      	adds	r4, #16
 8012be8:	f10c 0c10 	add.w	ip, ip, #16
 8012bec:	4574      	cmp	r4, lr
 8012bee:	d1f3      	bne.n	8012bd8 <ce7cfafa044c34a88028e8cf12995b3096f9f973+0x148>
 8012bf0:	4663      	mov	r3, ip
 8012bf2:	4622      	mov	r2, r4
 8012bf4:	7812      	ldrb	r2, [r2, #0]
 8012bf6:	701a      	strb	r2, [r3, #0]
 8012bf8:	2301      	movs	r3, #1
 8012bfa:	4618      	mov	r0, r3
 8012bfc:	376c      	adds	r7, #108	; 0x6c
 8012bfe:	46bd      	mov	sp, r7
 8012c00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c02:	bf00      	nop
 8012c04:	0802eaf8 	.word	0x0802eaf8
 8012c08:	0802eca8 	.word	0x0802eca8
 8012c0c:	0802ed38 	.word	0x0802ed38
 8012c10:	0802ed4c 	.word	0x0802ed4c
 8012c14:	20000040 	.word	0x20000040

08012c18 <c5868198428dfaffddb0900c3d01452778b19d11>:
 8012c18:	b480      	push	{r7}
 8012c1a:	b089      	sub	sp, #36	; 0x24
 8012c1c:	af00      	add	r7, sp, #0
 8012c1e:	60f8      	str	r0, [r7, #12]
 8012c20:	60b9      	str	r1, [r7, #8]
 8012c22:	607a      	str	r2, [r7, #4]
 8012c24:	68fb      	ldr	r3, [r7, #12]
 8012c26:	61fb      	str	r3, [r7, #28]
 8012c28:	68bb      	ldr	r3, [r7, #8]
 8012c2a:	61bb      	str	r3, [r7, #24]
 8012c2c:	687b      	ldr	r3, [r7, #4]
 8012c2e:	617b      	str	r3, [r7, #20]
 8012c30:	2300      	movs	r3, #0
 8012c32:	613b      	str	r3, [r7, #16]
 8012c34:	e00d      	b.n	8012c52 <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 8012c36:	69ba      	ldr	r2, [r7, #24]
 8012c38:	693b      	ldr	r3, [r7, #16]
 8012c3a:	441a      	add	r2, r3
 8012c3c:	6979      	ldr	r1, [r7, #20]
 8012c3e:	693b      	ldr	r3, [r7, #16]
 8012c40:	1acb      	subs	r3, r1, r3
 8012c42:	3b01      	subs	r3, #1
 8012c44:	69f9      	ldr	r1, [r7, #28]
 8012c46:	440b      	add	r3, r1
 8012c48:	7812      	ldrb	r2, [r2, #0]
 8012c4a:	701a      	strb	r2, [r3, #0]
 8012c4c:	693b      	ldr	r3, [r7, #16]
 8012c4e:	3301      	adds	r3, #1
 8012c50:	613b      	str	r3, [r7, #16]
 8012c52:	697a      	ldr	r2, [r7, #20]
 8012c54:	693b      	ldr	r3, [r7, #16]
 8012c56:	429a      	cmp	r2, r3
 8012c58:	d8ed      	bhi.n	8012c36 <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 8012c5a:	bf00      	nop
 8012c5c:	bf00      	nop
 8012c5e:	3724      	adds	r7, #36	; 0x24
 8012c60:	46bd      	mov	sp, r7
 8012c62:	bc80      	pop	{r7}
 8012c64:	4770      	bx	lr

08012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8012c66:	b480      	push	{r7}
 8012c68:	b089      	sub	sp, #36	; 0x24
 8012c6a:	af00      	add	r7, sp, #0
 8012c6c:	60f8      	str	r0, [r7, #12]
 8012c6e:	60b9      	str	r1, [r7, #8]
 8012c70:	607a      	str	r2, [r7, #4]
 8012c72:	68fb      	ldr	r3, [r7, #12]
 8012c74:	61fb      	str	r3, [r7, #28]
 8012c76:	68bb      	ldr	r3, [r7, #8]
 8012c78:	61bb      	str	r3, [r7, #24]
 8012c7a:	687b      	ldr	r3, [r7, #4]
 8012c7c:	617b      	str	r3, [r7, #20]
 8012c7e:	2300      	movs	r3, #0
 8012c80:	613b      	str	r3, [r7, #16]
 8012c82:	e00d      	b.n	8012ca0 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8012c84:	69ba      	ldr	r2, [r7, #24]
 8012c86:	693b      	ldr	r3, [r7, #16]
 8012c88:	441a      	add	r2, r3
 8012c8a:	6979      	ldr	r1, [r7, #20]
 8012c8c:	693b      	ldr	r3, [r7, #16]
 8012c8e:	1acb      	subs	r3, r1, r3
 8012c90:	3b01      	subs	r3, #1
 8012c92:	69f9      	ldr	r1, [r7, #28]
 8012c94:	440b      	add	r3, r1
 8012c96:	7812      	ldrb	r2, [r2, #0]
 8012c98:	701a      	strb	r2, [r3, #0]
 8012c9a:	693b      	ldr	r3, [r7, #16]
 8012c9c:	3301      	adds	r3, #1
 8012c9e:	613b      	str	r3, [r7, #16]
 8012ca0:	697a      	ldr	r2, [r7, #20]
 8012ca2:	693b      	ldr	r3, [r7, #16]
 8012ca4:	429a      	cmp	r2, r3
 8012ca6:	d8ed      	bhi.n	8012c84 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8012ca8:	bf00      	nop
 8012caa:	bf00      	nop
 8012cac:	3724      	adds	r7, #36	; 0x24
 8012cae:	46bd      	mov	sp, r7
 8012cb0:	bc80      	pop	{r7}
 8012cb2:	4770      	bx	lr

08012cb4 <781f8340fa417dd87327132209f6d0b889d0ff2a>:
 8012cb4:	b580      	push	{r7, lr}
 8012cb6:	b0c8      	sub	sp, #288	; 0x120
 8012cb8:	af00      	add	r7, sp, #0
 8012cba:	4b12      	ldr	r3, [pc, #72]	; (8012d04 <781f8340fa417dd87327132209f6d0b889d0ff2a+0x50>)
 8012cbc:	681b      	ldr	r3, [r3, #0]
 8012cbe:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 8012cc2:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8012cc6:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8012cca:	4618      	mov	r0, r3
 8012ccc:	f44f 7382 	mov.w	r3, #260	; 0x104
 8012cd0:	461a      	mov	r2, r3
 8012cd2:	2100      	movs	r1, #0
 8012cd4:	f018 fa10 	bl	802b0f8 <memset>
 8012cd8:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8012cdc:	f24f 02b0 	movw	r2, #61616	; 0xf0b0
 8012ce0:	f8a3 20f0 	strh.w	r2, [r3, #240]	; 0xf0
 8012ce4:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8012ce8:	4a07      	ldr	r2, [pc, #28]	; (8012d08 <781f8340fa417dd87327132209f6d0b889d0ff2a+0x54>)
 8012cea:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
 8012cee:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8012cf2:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
 8012cf6:	f8c3 20fc 	str.w	r2, [r3, #252]	; 0xfc
 8012cfa:	bf00      	nop
 8012cfc:	f507 7790 	add.w	r7, r7, #288	; 0x120
 8012d00:	46bd      	mov	sp, r7
 8012d02:	bd80      	pop	{r7, pc}
 8012d04:	20000040 	.word	0x20000040
 8012d08:	08012e25 	.word	0x08012e25

08012d0c <7d1d6e9032260bf29a701dae9a5813b859a1535c>:
 8012d0c:	b580      	push	{r7, lr}
 8012d0e:	af00      	add	r7, sp, #0
 8012d10:	4b04      	ldr	r3, [pc, #16]	; (8012d24 <7d1d6e9032260bf29a701dae9a5813b859a1535c+0x18>)
 8012d12:	681b      	ldr	r3, [r3, #0]
 8012d14:	f503 63e2 	add.w	r3, r3, #1808	; 0x710
 8012d18:	4618      	mov	r0, r3
 8012d1a:	f015 f9d5 	bl	80280c8 <76cd6211f2085e3d946bd747f2187c2e80301a64>
 8012d1e:	bf00      	nop
 8012d20:	bd80      	pop	{r7, pc}
 8012d22:	bf00      	nop
 8012d24:	20000040 	.word	0x20000040

08012d28 <b3455a2b4a7c58716d32ab9ee32d439bee656865>:
 8012d28:	b580      	push	{r7, lr}
 8012d2a:	af00      	add	r7, sp, #0
 8012d2c:	4b04      	ldr	r3, [pc, #16]	; (8012d40 <b3455a2b4a7c58716d32ab9ee32d439bee656865+0x18>)
 8012d2e:	681b      	ldr	r3, [r3, #0]
 8012d30:	f503 63e2 	add.w	r3, r3, #1808	; 0x710
 8012d34:	4618      	mov	r0, r3
 8012d36:	f015 fa01 	bl	802813c <008a3a43d97272e7b0f59f361a8c8969876e60dd>
 8012d3a:	bf00      	nop
 8012d3c:	bd80      	pop	{r7, pc}
 8012d3e:	bf00      	nop
 8012d40:	20000040 	.word	0x20000040

08012d44 <27342039fe058efec7af5218a4abe449221e7bb4>:
 8012d44:	b580      	push	{r7, lr}
 8012d46:	b098      	sub	sp, #96	; 0x60
 8012d48:	af00      	add	r7, sp, #0
 8012d4a:	60f8      	str	r0, [r7, #12]
 8012d4c:	60b9      	str	r1, [r7, #8]
 8012d4e:	607a      	str	r2, [r7, #4]
 8012d50:	603b      	str	r3, [r7, #0]
 8012d52:	683b      	ldr	r3, [r7, #0]
 8012d54:	2b21      	cmp	r3, #33	; 0x21
 8012d56:	d15a      	bne.n	8012e0e <27342039fe058efec7af5218a4abe449221e7bb4+0xca>
 8012d58:	68f8      	ldr	r0, [r7, #12]
 8012d5a:	f000 fa13 	bl	8013184 <isPledgeLocked>
 8012d5e:	4603      	mov	r3, r0
 8012d60:	f083 0301 	eor.w	r3, r3, #1
 8012d64:	b2db      	uxtb	r3, r3
 8012d66:	2b00      	cmp	r3, #0
 8012d68:	d02e      	beq.n	8012dc8 <27342039fe058efec7af5218a4abe449221e7bb4+0x84>
 8012d6a:	687b      	ldr	r3, [r7, #4]
 8012d6c:	65fb      	str	r3, [r7, #92]	; 0x5c
 8012d6e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8012d70:	781b      	ldrb	r3, [r3, #0]
 8012d72:	2b01      	cmp	r3, #1
 8012d74:	d14d      	bne.n	8012e12 <27342039fe058efec7af5218a4abe449221e7bb4+0xce>
 8012d76:	f107 0310 	add.w	r3, r7, #16
 8012d7a:	222e      	movs	r2, #46	; 0x2e
 8012d7c:	2100      	movs	r1, #0
 8012d7e:	4618      	mov	r0, r3
 8012d80:	f018 f9ba 	bl	802b0f8 <memset>
 8012d84:	2303      	movs	r3, #3
 8012d86:	743b      	strb	r3, [r7, #16]
 8012d88:	f107 0310 	add.w	r3, r7, #16
 8012d8c:	330e      	adds	r3, #14
 8012d8e:	65bb      	str	r3, [r7, #88]	; 0x58
 8012d90:	f107 0310 	add.w	r3, r7, #16
 8012d94:	3301      	adds	r3, #1
 8012d96:	2205      	movs	r2, #5
 8012d98:	68b9      	ldr	r1, [r7, #8]
 8012d9a:	4618      	mov	r0, r3
 8012d9c:	f7ff ff3c 	bl	8012c18 <c5868198428dfaffddb0900c3d01452778b19d11>
 8012da0:	68fa      	ldr	r2, [r7, #12]
 8012da2:	f107 0316 	add.w	r3, r7, #22
 8012da6:	6811      	ldr	r1, [r2, #0]
 8012da8:	6852      	ldr	r2, [r2, #4]
 8012daa:	6019      	str	r1, [r3, #0]
 8012dac:	605a      	str	r2, [r3, #4]
 8012dae:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8012db0:	3301      	adds	r3, #1
 8012db2:	2220      	movs	r2, #32
 8012db4:	4619      	mov	r1, r3
 8012db6:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8012db8:	f018 fa3d 	bl	802b236 <memcpy>
 8012dbc:	f107 0310 	add.w	r3, r7, #16
 8012dc0:	4618      	mov	r0, r3
 8012dc2:	f000 f975 	bl	80130b0 <sendPacketToJrc>
 8012dc6:	e025      	b.n	8012e14 <27342039fe058efec7af5218a4abe449221e7bb4+0xd0>
 8012dc8:	f002 fa68 	bl	801529c <LOGGER_StartSection>
 8012dcc:	4603      	mov	r3, r0
 8012dce:	2b00      	cmp	r3, #0
 8012dd0:	d020      	beq.n	8012e14 <27342039fe058efec7af5218a4abe449221e7bb4+0xd0>
 8012dd2:	4a12      	ldr	r2, [pc, #72]	; (8012e1c <27342039fe058efec7af5218a4abe449221e7bb4+0xd8>)
 8012dd4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012dd8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012ddc:	e883 0003 	stmia.w	r3, {r0, r1}
 8012de0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012de4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012de8:	f002 fa74 	bl	80152d4 <LOGGER_PrintHeader>
 8012dec:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012df0:	2208      	movs	r2, #8
 8012df2:	68f9      	ldr	r1, [r7, #12]
 8012df4:	4618      	mov	r0, r3
 8012df6:	f7ff ff36 	bl	8012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8012dfa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8012dfe:	4808      	ldr	r0, [pc, #32]	; (8012e20 <27342039fe058efec7af5218a4abe449221e7bb4+0xdc>)
 8012e00:	f002 fa34 	bl	801526c <LOGGER_Print>
 8012e04:	f002 f9f2 	bl	80151ec <LOGGER_PrintNL>
 8012e08:	f002 fa5b 	bl	80152c2 <LOGGER_EndSection>
 8012e0c:	e002      	b.n	8012e14 <27342039fe058efec7af5218a4abe449221e7bb4+0xd0>
 8012e0e:	bf00      	nop
 8012e10:	e000      	b.n	8012e14 <27342039fe058efec7af5218a4abe449221e7bb4+0xd0>
 8012e12:	bf00      	nop
 8012e14:	3760      	adds	r7, #96	; 0x60
 8012e16:	46bd      	mov	sp, r7
 8012e18:	bd80      	pop	{r7, pc}
 8012e1a:	bf00      	nop
 8012e1c:	0802edc4 	.word	0x0802edc4
 8012e20:	0802edcc 	.word	0x0802edcc

08012e24 <62d501c077e77071b13b9590edfc05c0693f6990>:
 8012e24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e26:	b09d      	sub	sp, #116	; 0x74
 8012e28:	af02      	add	r7, sp, #8
 8012e2a:	60f8      	str	r0, [r7, #12]
 8012e2c:	60b9      	str	r1, [r7, #8]
 8012e2e:	603b      	str	r3, [r7, #0]
 8012e30:	4613      	mov	r3, r2
 8012e32:	80fb      	strh	r3, [r7, #6]
 8012e34:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 8012e38:	2b29      	cmp	r3, #41	; 0x29
 8012e3a:	d011      	beq.n	8012e60 <62d501c077e77071b13b9590edfc05c0693f6990+0x3c>
 8012e3c:	4a44      	ldr	r2, [pc, #272]	; (8012f50 <62d501c077e77071b13b9590edfc05c0693f6990+0x12c>)
 8012e3e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8012e42:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012e46:	e883 0003 	stmia.w	r3, {r0, r1}
 8012e4a:	f897 3080 	ldrb.w	r3, [r7, #128]	; 0x80
 8012e4e:	9300      	str	r3, [sp, #0]
 8012e50:	2329      	movs	r3, #41	; 0x29
 8012e52:	4a40      	ldr	r2, [pc, #256]	; (8012f54 <62d501c077e77071b13b9590edfc05c0693f6990+0x130>)
 8012e54:	f107 0134 	add.w	r1, r7, #52	; 0x34
 8012e58:	c903      	ldmia	r1, {r0, r1}
 8012e5a:	f002 f9d5 	bl	8015208 <LOGGER_PrintLine>
 8012e5e:	e073      	b.n	8012f48 <62d501c077e77071b13b9590edfc05c0693f6990+0x124>
 8012e60:	683b      	ldr	r3, [r7, #0]
 8012e62:	461c      	mov	r4, r3
 8012e64:	f107 063c 	add.w	r6, r7, #60	; 0x3c
 8012e68:	f104 0c20 	add.w	ip, r4, #32
 8012e6c:	4635      	mov	r5, r6
 8012e6e:	4623      	mov	r3, r4
 8012e70:	6818      	ldr	r0, [r3, #0]
 8012e72:	6859      	ldr	r1, [r3, #4]
 8012e74:	689a      	ldr	r2, [r3, #8]
 8012e76:	68db      	ldr	r3, [r3, #12]
 8012e78:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8012e7a:	3410      	adds	r4, #16
 8012e7c:	3610      	adds	r6, #16
 8012e7e:	4564      	cmp	r4, ip
 8012e80:	d1f4      	bne.n	8012e6c <62d501c077e77071b13b9590edfc05c0693f6990+0x48>
 8012e82:	4633      	mov	r3, r6
 8012e84:	4622      	mov	r2, r4
 8012e86:	6810      	ldr	r0, [r2, #0]
 8012e88:	6851      	ldr	r1, [r2, #4]
 8012e8a:	c303      	stmia	r3!, {r0, r1}
 8012e8c:	7a12      	ldrb	r2, [r2, #8]
 8012e8e:	701a      	strb	r2, [r3, #0]
 8012e90:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8012e94:	2b04      	cmp	r3, #4
 8012e96:	d00e      	beq.n	8012eb6 <62d501c077e77071b13b9590edfc05c0693f6990+0x92>
 8012e98:	4a2d      	ldr	r2, [pc, #180]	; (8012f50 <62d501c077e77071b13b9590edfc05c0693f6990+0x12c>)
 8012e9a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8012e9e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012ea2:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ea6:	4a2c      	ldr	r2, [pc, #176]	; (8012f58 <62d501c077e77071b13b9590edfc05c0693f6990+0x134>)
 8012ea8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8012eac:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012eb0:	f002 f9aa 	bl	8015208 <LOGGER_PrintLine>
 8012eb4:	e048      	b.n	8012f48 <62d501c077e77071b13b9590edfc05c0693f6990+0x124>
 8012eb6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012eba:	3301      	adds	r3, #1
 8012ebc:	4618      	mov	r0, r3
 8012ebe:	f000 fa31 	bl	8013324 <unlockPledge>
 8012ec2:	4603      	mov	r3, r0
 8012ec4:	f083 0301 	eor.w	r3, r3, #1
 8012ec8:	b2db      	uxtb	r3, r3
 8012eca:	2b00      	cmp	r3, #0
 8012ecc:	d00d      	beq.n	8012eea <62d501c077e77071b13b9590edfc05c0693f6990+0xc6>
 8012ece:	4a23      	ldr	r2, [pc, #140]	; (8012f5c <62d501c077e77071b13b9590edfc05c0693f6990+0x138>)
 8012ed0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012ed4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012ed8:	e883 0003 	stmia.w	r3, {r0, r1}
 8012edc:	4a20      	ldr	r2, [pc, #128]	; (8012f60 <62d501c077e77071b13b9590edfc05c0693f6990+0x13c>)
 8012ede:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8012ee2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012ee6:	f002 f98f 	bl	8015208 <LOGGER_PrintLine>
 8012eea:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012eee:	f103 0209 	add.w	r2, r3, #9
 8012ef2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012ef6:	3301      	adds	r3, #1
 8012ef8:	4611      	mov	r1, r2
 8012efa:	4618      	mov	r0, r3
 8012efc:	f000 f836 	bl	8012f6c <sendPacketToPledge>
 8012f00:	f002 f9cc 	bl	801529c <LOGGER_StartSection>
 8012f04:	4603      	mov	r3, r0
 8012f06:	2b00      	cmp	r3, #0
 8012f08:	d01e      	beq.n	8012f48 <62d501c077e77071b13b9590edfc05c0693f6990+0x124>
 8012f0a:	4a16      	ldr	r2, [pc, #88]	; (8012f64 <62d501c077e77071b13b9590edfc05c0693f6990+0x140>)
 8012f0c:	f107 031c 	add.w	r3, r7, #28
 8012f10:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012f14:	e883 0003 	stmia.w	r3, {r0, r1}
 8012f18:	f107 031c 	add.w	r3, r7, #28
 8012f1c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012f20:	f002 f9d8 	bl	80152d4 <LOGGER_PrintHeader>
 8012f24:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8012f28:	1c59      	adds	r1, r3, #1
 8012f2a:	f107 0310 	add.w	r3, r7, #16
 8012f2e:	2208      	movs	r2, #8
 8012f30:	4618      	mov	r0, r3
 8012f32:	f7ff fe98 	bl	8012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8012f36:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8012f3a:	480b      	ldr	r0, [pc, #44]	; (8012f68 <62d501c077e77071b13b9590edfc05c0693f6990+0x144>)
 8012f3c:	f002 f996 	bl	801526c <LOGGER_Print>
 8012f40:	f002 f954 	bl	80151ec <LOGGER_PrintNL>
 8012f44:	f002 f9bd 	bl	80152c2 <LOGGER_EndSection>
 8012f48:	376c      	adds	r7, #108	; 0x6c
 8012f4a:	46bd      	mov	sp, r7
 8012f4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f4e:	bf00      	nop
 8012f50:	0802edbc 	.word	0x0802edbc
 8012f54:	0802edfc 	.word	0x0802edfc
 8012f58:	0802ee34 	.word	0x0802ee34
 8012f5c:	0802eed0 	.word	0x0802eed0
 8012f60:	0802ee54 	.word	0x0802ee54
 8012f64:	0802edc4 	.word	0x0802edc4
 8012f68:	0802eeb8 	.word	0x0802eeb8

08012f6c <sendPacketToPledge>:
 8012f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f6e:	b097      	sub	sp, #92	; 0x5c
 8012f70:	af02      	add	r7, sp, #8
 8012f72:	6078      	str	r0, [r7, #4]
 8012f74:	6039      	str	r1, [r7, #0]
 8012f76:	2302      	movs	r3, #2
 8012f78:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012f7c:	683a      	ldr	r2, [r7, #0]
 8012f7e:	f107 0329 	add.w	r3, r7, #41	; 0x29
 8012f82:	6815      	ldr	r5, [r2, #0]
 8012f84:	6854      	ldr	r4, [r2, #4]
 8012f86:	6890      	ldr	r0, [r2, #8]
 8012f88:	68d1      	ldr	r1, [r2, #12]
 8012f8a:	601d      	str	r5, [r3, #0]
 8012f8c:	605c      	str	r4, [r3, #4]
 8012f8e:	6098      	str	r0, [r3, #8]
 8012f90:	60d9      	str	r1, [r3, #12]
 8012f92:	6915      	ldr	r5, [r2, #16]
 8012f94:	6954      	ldr	r4, [r2, #20]
 8012f96:	6990      	ldr	r0, [r2, #24]
 8012f98:	69d1      	ldr	r1, [r2, #28]
 8012f9a:	611d      	str	r5, [r3, #16]
 8012f9c:	615c      	str	r4, [r3, #20]
 8012f9e:	6198      	str	r0, [r3, #24]
 8012fa0:	61d9      	str	r1, [r3, #28]
 8012fa2:	2090      	movs	r0, #144	; 0x90
 8012fa4:	f7fc fbc6 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8012fa8:	64f8      	str	r0, [r7, #76]	; 0x4c
 8012faa:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012fac:	2b00      	cmp	r3, #0
 8012fae:	d10e      	bne.n	8012fce <sendPacketToPledge+0x62>
 8012fb0:	4a3a      	ldr	r2, [pc, #232]	; (801309c <sendPacketToPledge+0x130>)
 8012fb2:	f107 0318 	add.w	r3, r7, #24
 8012fb6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012fba:	e883 0003 	stmia.w	r3, {r0, r1}
 8012fbe:	4a38      	ldr	r2, [pc, #224]	; (80130a0 <sendPacketToPledge+0x134>)
 8012fc0:	f107 0318 	add.w	r3, r7, #24
 8012fc4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012fc8:	f002 f91e 	bl	8015208 <LOGGER_PrintLine>
 8012fcc:	e063      	b.n	8013096 <sendPacketToPledge+0x12a>
 8012fce:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012fd0:	2290      	movs	r2, #144	; 0x90
 8012fd2:	701a      	strb	r2, [r3, #0]
 8012fd4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8012fd6:	2290      	movs	r2, #144	; 0x90
 8012fd8:	705a      	strb	r2, [r3, #1]
 8012fda:	2121      	movs	r1, #33	; 0x21
 8012fdc:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8012fde:	f016 fa59 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8012fe2:	4603      	mov	r3, r0
 8012fe4:	f083 0301 	eor.w	r3, r3, #1
 8012fe8:	b2db      	uxtb	r3, r3
 8012fea:	2b00      	cmp	r3, #0
 8012fec:	d011      	beq.n	8013012 <sendPacketToPledge+0xa6>
 8012fee:	4a2b      	ldr	r2, [pc, #172]	; (801309c <sendPacketToPledge+0x130>)
 8012ff0:	f107 0310 	add.w	r3, r7, #16
 8012ff4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012ff8:	e883 0003 	stmia.w	r3, {r0, r1}
 8012ffc:	4a29      	ldr	r2, [pc, #164]	; (80130a4 <sendPacketToPledge+0x138>)
 8012ffe:	f107 0310 	add.w	r3, r7, #16
 8013002:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013006:	f002 f8ff 	bl	8015208 <LOGGER_PrintLine>
 801300a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801300c:	f7fc fc9e 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8013010:	e041      	b.n	8013096 <sendPacketToPledge+0x12a>
 8013012:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8013014:	685b      	ldr	r3, [r3, #4]
 8013016:	f107 0428 	add.w	r4, r7, #40	; 0x28
 801301a:	469c      	mov	ip, r3
 801301c:	f104 0e20 	add.w	lr, r4, #32
 8013020:	4665      	mov	r5, ip
 8013022:	4626      	mov	r6, r4
 8013024:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8013026:	6028      	str	r0, [r5, #0]
 8013028:	6069      	str	r1, [r5, #4]
 801302a:	60aa      	str	r2, [r5, #8]
 801302c:	60eb      	str	r3, [r5, #12]
 801302e:	3410      	adds	r4, #16
 8013030:	f10c 0c10 	add.w	ip, ip, #16
 8013034:	4574      	cmp	r4, lr
 8013036:	d1f3      	bne.n	8013020 <sendPacketToPledge+0xb4>
 8013038:	4663      	mov	r3, ip
 801303a:	4622      	mov	r2, r4
 801303c:	7812      	ldrb	r2, [r2, #0]
 801303e:	701a      	strb	r2, [r3, #0]
 8013040:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8013042:	2202      	movs	r2, #2
 8013044:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8013048:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801304a:	3342      	adds	r3, #66	; 0x42
 801304c:	2208      	movs	r2, #8
 801304e:	6879      	ldr	r1, [r7, #4]
 8013050:	4618      	mov	r0, r3
 8013052:	f018 f8f0 	bl	802b236 <memcpy>
 8013056:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8013058:	2200      	movs	r2, #0
 801305a:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 801305e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8013060:	f00b fe86 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 8013064:	f107 0320 	add.w	r3, r7, #32
 8013068:	2208      	movs	r2, #8
 801306a:	6879      	ldr	r1, [r7, #4]
 801306c:	4618      	mov	r0, r3
 801306e:	f7ff fdfa 	bl	8012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8013072:	4a0d      	ldr	r2, [pc, #52]	; (80130a8 <sendPacketToPledge+0x13c>)
 8013074:	f107 0308 	add.w	r3, r7, #8
 8013078:	e892 0003 	ldmia.w	r2, {r0, r1}
 801307c:	e883 0003 	stmia.w	r3, {r0, r1}
 8013080:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8013084:	e9cd 2300 	strd	r2, r3, [sp]
 8013088:	4a08      	ldr	r2, [pc, #32]	; (80130ac <sendPacketToPledge+0x140>)
 801308a:	f107 0308 	add.w	r3, r7, #8
 801308e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013092:	f002 f8b9 	bl	8015208 <LOGGER_PrintLine>
 8013096:	3754      	adds	r7, #84	; 0x54
 8013098:	46bd      	mov	sp, r7
 801309a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801309c:	0802edbc 	.word	0x0802edbc
 80130a0:	0802eed8 	.word	0x0802eed8
 80130a4:	0802eef0 	.word	0x0802eef0
 80130a8:	0802edc4 	.word	0x0802edc4
 80130ac:	0802ef1c 	.word	0x0802ef1c

080130b0 <sendPacketToJrc>:
 80130b0:	b580      	push	{r7, lr}
 80130b2:	b092      	sub	sp, #72	; 0x48
 80130b4:	af02      	add	r7, sp, #8
 80130b6:	6078      	str	r0, [r7, #4]
 80130b8:	4b2c      	ldr	r3, [pc, #176]	; (801316c <sendPacketToJrc+0xbc>)
 80130ba:	681b      	ldr	r3, [r3, #0]
 80130bc:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 80130c0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80130c2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80130c6:	4618      	mov	r0, r3
 80130c8:	f012 fb48 	bl	802575c <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0>
 80130cc:	4603      	mov	r3, r0
 80130ce:	f083 0301 	eor.w	r3, r3, #1
 80130d2:	b2db      	uxtb	r3, r3
 80130d4:	2b00      	cmp	r3, #0
 80130d6:	d00e      	beq.n	80130f6 <sendPacketToJrc+0x46>
 80130d8:	4a25      	ldr	r2, [pc, #148]	; (8013170 <sendPacketToJrc+0xc0>)
 80130da:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80130de:	e892 0003 	ldmia.w	r2, {r0, r1}
 80130e2:	e883 0003 	stmia.w	r3, {r0, r1}
 80130e6:	4a23      	ldr	r2, [pc, #140]	; (8013174 <sendPacketToJrc+0xc4>)
 80130e8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80130ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80130f0:	f002 f88a 	bl	8015208 <LOGGER_PrintLine>
 80130f4:	e037      	b.n	8013166 <sendPacketToJrc+0xb6>
 80130f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80130f8:	f103 01f0 	add.w	r1, r3, #240	; 0xf0
 80130fc:	f107 002c 	add.w	r0, r7, #44	; 0x2c
 8013100:	232e      	movs	r3, #46	; 0x2e
 8013102:	9300      	str	r3, [sp, #0]
 8013104:	687b      	ldr	r3, [r7, #4]
 8013106:	f24f 02b0 	movw	r2, #61616	; 0xf0b0
 801310a:	f015 f83d 	bl	8028188 <09c9c31144d89e446fc56189171072a9b46992fd>
 801310e:	4603      	mov	r3, r0
 8013110:	2b00      	cmp	r3, #0
 8013112:	d11a      	bne.n	801314a <sendPacketToJrc+0x9a>
 8013114:	687b      	ldr	r3, [r7, #4]
 8013116:	1d99      	adds	r1, r3, #6
 8013118:	f107 0318 	add.w	r3, r7, #24
 801311c:	2208      	movs	r2, #8
 801311e:	4618      	mov	r0, r3
 8013120:	f7ff fda1 	bl	8012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8013124:	4a14      	ldr	r2, [pc, #80]	; (8013178 <sendPacketToJrc+0xc8>)
 8013126:	f107 0310 	add.w	r3, r7, #16
 801312a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801312e:	e883 0003 	stmia.w	r3, {r0, r1}
 8013132:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8013136:	e9cd 2300 	strd	r2, r3, [sp]
 801313a:	4a10      	ldr	r2, [pc, #64]	; (801317c <sendPacketToJrc+0xcc>)
 801313c:	f107 0310 	add.w	r3, r7, #16
 8013140:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013144:	f002 f860 	bl	8015208 <LOGGER_PrintLine>
 8013148:	e00d      	b.n	8013166 <sendPacketToJrc+0xb6>
 801314a:	4a09      	ldr	r2, [pc, #36]	; (8013170 <sendPacketToJrc+0xc0>)
 801314c:	f107 0308 	add.w	r3, r7, #8
 8013150:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013154:	e883 0003 	stmia.w	r3, {r0, r1}
 8013158:	4a09      	ldr	r2, [pc, #36]	; (8013180 <sendPacketToJrc+0xd0>)
 801315a:	f107 0308 	add.w	r3, r7, #8
 801315e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013162:	f002 f851 	bl	8015208 <LOGGER_PrintLine>
 8013166:	3740      	adds	r7, #64	; 0x40
 8013168:	46bd      	mov	sp, r7
 801316a:	bd80      	pop	{r7, pc}
 801316c:	20000040 	.word	0x20000040
 8013170:	0802edbc 	.word	0x0802edbc
 8013174:	0802ed60 	.word	0x0802ed60
 8013178:	0802edc4 	.word	0x0802edc4
 801317c:	0802ef40 	.word	0x0802ef40
 8013180:	0802ed98 	.word	0x0802ed98

08013184 <isPledgeLocked>:
 8013184:	b580      	push	{r7, lr}
 8013186:	b090      	sub	sp, #64	; 0x40
 8013188:	af00      	add	r7, sp, #0
 801318a:	6078      	str	r0, [r7, #4]
 801318c:	4b5d      	ldr	r3, [pc, #372]	; (8013304 <isPledgeLocked+0x180>)
 801318e:	681b      	ldr	r3, [r3, #0]
 8013190:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 8013194:	637b      	str	r3, [r7, #52]	; 0x34
 8013196:	f7fe fcbb 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801319a:	6338      	str	r0, [r7, #48]	; 0x30
 801319c:	2300      	movs	r3, #0
 801319e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80131a0:	e047      	b.n	8013232 <isPledgeLocked+0xae>
 80131a2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80131a4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80131a6:	011b      	lsls	r3, r3, #4
 80131a8:	4413      	add	r3, r2
 80131aa:	330c      	adds	r3, #12
 80131ac:	781b      	ldrb	r3, [r3, #0]
 80131ae:	2b00      	cmp	r3, #0
 80131b0:	d03c      	beq.n	801322c <isPledgeLocked+0xa8>
 80131b2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80131b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80131b6:	011b      	lsls	r3, r3, #4
 80131b8:	4413      	add	r3, r2
 80131ba:	3308      	adds	r3, #8
 80131bc:	681b      	ldr	r3, [r3, #0]
 80131be:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80131c0:	1ad3      	subs	r3, r2, r3
 80131c2:	4a51      	ldr	r2, [pc, #324]	; (8013308 <isPledgeLocked+0x184>)
 80131c4:	4293      	cmp	r3, r2
 80131c6:	d915      	bls.n	80131f4 <isPledgeLocked+0x70>
 80131c8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80131ca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80131cc:	011b      	lsls	r3, r3, #4
 80131ce:	4413      	add	r3, r2
 80131d0:	330c      	adds	r3, #12
 80131d2:	2200      	movs	r2, #0
 80131d4:	701a      	strb	r2, [r3, #0]
 80131d6:	4a4d      	ldr	r2, [pc, #308]	; (801330c <isPledgeLocked+0x188>)
 80131d8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80131dc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80131e0:	e883 0003 	stmia.w	r3, {r0, r1}
 80131e4:	4a4a      	ldr	r2, [pc, #296]	; (8013310 <isPledgeLocked+0x18c>)
 80131e6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80131ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 80131ee:	f002 f80b 	bl	8015208 <LOGGER_PrintLine>
 80131f2:	e01b      	b.n	801322c <isPledgeLocked+0xa8>
 80131f4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80131f6:	011b      	lsls	r3, r3, #4
 80131f8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80131fa:	4413      	add	r3, r2
 80131fc:	2208      	movs	r2, #8
 80131fe:	6879      	ldr	r1, [r7, #4]
 8013200:	4618      	mov	r0, r3
 8013202:	f017 ff4f 	bl	802b0a4 <memcmp>
 8013206:	4603      	mov	r3, r0
 8013208:	2b00      	cmp	r3, #0
 801320a:	d10f      	bne.n	801322c <isPledgeLocked+0xa8>
 801320c:	4a41      	ldr	r2, [pc, #260]	; (8013314 <isPledgeLocked+0x190>)
 801320e:	f107 0320 	add.w	r3, r7, #32
 8013212:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013216:	e883 0003 	stmia.w	r3, {r0, r1}
 801321a:	4a3f      	ldr	r2, [pc, #252]	; (8013318 <isPledgeLocked+0x194>)
 801321c:	f107 0320 	add.w	r3, r7, #32
 8013220:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013224:	f001 fff0 	bl	8015208 <LOGGER_PrintLine>
 8013228:	2301      	movs	r3, #1
 801322a:	e066      	b.n	80132fa <isPledgeLocked+0x176>
 801322c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801322e:	3301      	adds	r3, #1
 8013230:	63fb      	str	r3, [r7, #60]	; 0x3c
 8013232:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013234:	2b0e      	cmp	r3, #14
 8013236:	d9b4      	bls.n	80131a2 <isPledgeLocked+0x1e>
 8013238:	2300      	movs	r3, #0
 801323a:	63bb      	str	r3, [r7, #56]	; 0x38
 801323c:	e04b      	b.n	80132d6 <isPledgeLocked+0x152>
 801323e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8013240:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013242:	011b      	lsls	r3, r3, #4
 8013244:	4413      	add	r3, r2
 8013246:	330c      	adds	r3, #12
 8013248:	781b      	ldrb	r3, [r3, #0]
 801324a:	f083 0301 	eor.w	r3, r3, #1
 801324e:	b2db      	uxtb	r3, r3
 8013250:	2b00      	cmp	r3, #0
 8013252:	d03d      	beq.n	80132d0 <isPledgeLocked+0x14c>
 8013254:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8013256:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013258:	011b      	lsls	r3, r3, #4
 801325a:	4413      	add	r3, r2
 801325c:	3308      	adds	r3, #8
 801325e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8013260:	601a      	str	r2, [r3, #0]
 8013262:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8013264:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013266:	011b      	lsls	r3, r3, #4
 8013268:	4413      	add	r3, r2
 801326a:	330c      	adds	r3, #12
 801326c:	2201      	movs	r2, #1
 801326e:	701a      	strb	r2, [r3, #0]
 8013270:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013272:	011b      	lsls	r3, r3, #4
 8013274:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8013276:	4413      	add	r3, r2
 8013278:	2208      	movs	r2, #8
 801327a:	6879      	ldr	r1, [r7, #4]
 801327c:	4618      	mov	r0, r3
 801327e:	f017 ffda 	bl	802b236 <memcpy>
 8013282:	f002 f80b 	bl	801529c <LOGGER_StartSection>
 8013286:	4603      	mov	r3, r0
 8013288:	2b00      	cmp	r3, #0
 801328a:	d01f      	beq.n	80132cc <isPledgeLocked+0x148>
 801328c:	4a1f      	ldr	r2, [pc, #124]	; (801330c <isPledgeLocked+0x188>)
 801328e:	f107 0318 	add.w	r3, r7, #24
 8013292:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013296:	e883 0003 	stmia.w	r3, {r0, r1}
 801329a:	f107 0318 	add.w	r3, r7, #24
 801329e:	e893 0003 	ldmia.w	r3, {r0, r1}
 80132a2:	f002 f817 	bl	80152d4 <LOGGER_PrintHeader>
 80132a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80132a8:	011b      	lsls	r3, r3, #4
 80132aa:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80132ac:	18d1      	adds	r1, r2, r3
 80132ae:	f107 0310 	add.w	r3, r7, #16
 80132b2:	2208      	movs	r2, #8
 80132b4:	4618      	mov	r0, r3
 80132b6:	f7ff fcd6 	bl	8012c66 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 80132ba:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80132be:	4817      	ldr	r0, [pc, #92]	; (801331c <isPledgeLocked+0x198>)
 80132c0:	f001 ffd4 	bl	801526c <LOGGER_Print>
 80132c4:	f001 ff92 	bl	80151ec <LOGGER_PrintNL>
 80132c8:	f001 fffb 	bl	80152c2 <LOGGER_EndSection>
 80132cc:	2300      	movs	r3, #0
 80132ce:	e014      	b.n	80132fa <isPledgeLocked+0x176>
 80132d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80132d2:	3301      	adds	r3, #1
 80132d4:	63bb      	str	r3, [r7, #56]	; 0x38
 80132d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80132d8:	2b0e      	cmp	r3, #14
 80132da:	d9b0      	bls.n	801323e <isPledgeLocked+0xba>
 80132dc:	4a0d      	ldr	r2, [pc, #52]	; (8013314 <isPledgeLocked+0x190>)
 80132de:	f107 0308 	add.w	r3, r7, #8
 80132e2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80132e6:	e883 0003 	stmia.w	r3, {r0, r1}
 80132ea:	4a0d      	ldr	r2, [pc, #52]	; (8013320 <isPledgeLocked+0x19c>)
 80132ec:	f107 0308 	add.w	r3, r7, #8
 80132f0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80132f4:	f001 ff88 	bl	8015208 <LOGGER_PrintLine>
 80132f8:	2301      	movs	r3, #1
 80132fa:	4618      	mov	r0, r3
 80132fc:	3740      	adds	r7, #64	; 0x40
 80132fe:	46bd      	mov	sp, r7
 8013300:	bd80      	pop	{r7, pc}
 8013302:	bf00      	nop
 8013304:	20000040 	.word	0x20000040
 8013308:	02160ec0 	.word	0x02160ec0
 801330c:	0802edc4 	.word	0x0802edc4
 8013310:	0802ef64 	.word	0x0802ef64
 8013314:	0802edbc 	.word	0x0802edbc
 8013318:	0802ef74 	.word	0x0802ef74
 801331c:	0802efc0 	.word	0x0802efc0
 8013320:	0802efd4 	.word	0x0802efd4

08013324 <unlockPledge>:
 8013324:	b580      	push	{r7, lr}
 8013326:	b084      	sub	sp, #16
 8013328:	af00      	add	r7, sp, #0
 801332a:	6078      	str	r0, [r7, #4]
 801332c:	4b17      	ldr	r3, [pc, #92]	; (801338c <unlockPledge+0x68>)
 801332e:	681b      	ldr	r3, [r3, #0]
 8013330:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 8013334:	60bb      	str	r3, [r7, #8]
 8013336:	2300      	movs	r3, #0
 8013338:	60fb      	str	r3, [r7, #12]
 801333a:	e01f      	b.n	801337c <unlockPledge+0x58>
 801333c:	68ba      	ldr	r2, [r7, #8]
 801333e:	68fb      	ldr	r3, [r7, #12]
 8013340:	011b      	lsls	r3, r3, #4
 8013342:	4413      	add	r3, r2
 8013344:	330c      	adds	r3, #12
 8013346:	781b      	ldrb	r3, [r3, #0]
 8013348:	2b00      	cmp	r3, #0
 801334a:	d014      	beq.n	8013376 <unlockPledge+0x52>
 801334c:	68fb      	ldr	r3, [r7, #12]
 801334e:	011b      	lsls	r3, r3, #4
 8013350:	68ba      	ldr	r2, [r7, #8]
 8013352:	4413      	add	r3, r2
 8013354:	2208      	movs	r2, #8
 8013356:	6879      	ldr	r1, [r7, #4]
 8013358:	4618      	mov	r0, r3
 801335a:	f017 fea3 	bl	802b0a4 <memcmp>
 801335e:	4603      	mov	r3, r0
 8013360:	2b00      	cmp	r3, #0
 8013362:	d108      	bne.n	8013376 <unlockPledge+0x52>
 8013364:	68ba      	ldr	r2, [r7, #8]
 8013366:	68fb      	ldr	r3, [r7, #12]
 8013368:	011b      	lsls	r3, r3, #4
 801336a:	4413      	add	r3, r2
 801336c:	330c      	adds	r3, #12
 801336e:	2200      	movs	r2, #0
 8013370:	701a      	strb	r2, [r3, #0]
 8013372:	2301      	movs	r3, #1
 8013374:	e006      	b.n	8013384 <unlockPledge+0x60>
 8013376:	68fb      	ldr	r3, [r7, #12]
 8013378:	3301      	adds	r3, #1
 801337a:	60fb      	str	r3, [r7, #12]
 801337c:	68fb      	ldr	r3, [r7, #12]
 801337e:	2b0e      	cmp	r3, #14
 8013380:	d9dc      	bls.n	801333c <unlockPledge+0x18>
 8013382:	2300      	movs	r3, #0
 8013384:	4618      	mov	r0, r3
 8013386:	3710      	adds	r7, #16
 8013388:	46bd      	mov	sp, r7
 801338a:	bd80      	pop	{r7, pc}
 801338c:	20000040 	.word	0x20000040

08013390 <bf6cd42aa4b8da9fc5f5650bf0a6c717df5ed505>:
 8013390:	b580      	push	{r7, lr}
 8013392:	f5ad 7d4a 	sub.w	sp, sp, #808	; 0x328
 8013396:	af00      	add	r7, sp, #0
 8013398:	4b07      	ldr	r3, [pc, #28]	; (80133b8 <bf6cd42aa4b8da9fc5f5650bf0a6c717df5ed505+0x28>)
 801339a:	681b      	ldr	r3, [r3, #0]
 801339c:	f203 7324 	addw	r3, r3, #1828	; 0x724
 80133a0:	f44f 724a 	mov.w	r2, #808	; 0x328
 80133a4:	2100      	movs	r1, #0
 80133a6:	4618      	mov	r0, r3
 80133a8:	f017 fea6 	bl	802b0f8 <memset>
 80133ac:	bf00      	nop
 80133ae:	f507 774a 	add.w	r7, r7, #808	; 0x328
 80133b2:	46bd      	mov	sp, r7
 80133b4:	bd80      	pop	{r7, pc}
 80133b6:	bf00      	nop
 80133b8:	20000040 	.word	0x20000040

080133bc <ef153328aa1040603d831896041b65ee1135a0ee>:
 80133bc:	b580      	push	{r7, lr}
 80133be:	b08c      	sub	sp, #48	; 0x30
 80133c0:	af00      	add	r7, sp, #0
 80133c2:	4b27      	ldr	r3, [pc, #156]	; (8013460 <ef153328aa1040603d831896041b65ee1135a0ee+0xa4>)
 80133c4:	681b      	ldr	r3, [r3, #0]
 80133c6:	f203 7324 	addw	r3, r3, #1828	; 0x724
 80133ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80133cc:	2364      	movs	r3, #100	; 0x64
 80133ce:	62fb      	str	r3, [r7, #44]	; 0x2c
 80133d0:	e022      	b.n	8013418 <ef153328aa1040603d831896041b65ee1135a0ee+0x5c>
 80133d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80133d4:	3b01      	subs	r3, #1
 80133d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80133d8:	f7f2 fe3a 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80133dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80133de:	f8d3 3320 	ldr.w	r3, [r3, #800]	; 0x320
 80133e2:	627b      	str	r3, [r7, #36]	; 0x24
 80133e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80133e6:	681b      	ldr	r3, [r3, #0]
 80133e8:	623b      	str	r3, [r7, #32]
 80133ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80133ec:	689b      	ldr	r3, [r3, #8]
 80133ee:	61fb      	str	r3, [r7, #28]
 80133f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80133f2:	68da      	ldr	r2, [r3, #12]
 80133f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80133f6:	f8c3 2320 	str.w	r2, [r3, #800]	; 0x320
 80133fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80133fc:	461a      	mov	r2, r3
 80133fe:	2300      	movs	r3, #0
 8013400:	6013      	str	r3, [r2, #0]
 8013402:	6053      	str	r3, [r2, #4]
 8013404:	6093      	str	r3, [r2, #8]
 8013406:	60d3      	str	r3, [r2, #12]
 8013408:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801340a:	2213      	movs	r2, #19
 801340c:	711a      	strb	r2, [r3, #4]
 801340e:	f7f2 fe3f 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8013412:	6a3b      	ldr	r3, [r7, #32]
 8013414:	69f8      	ldr	r0, [r7, #28]
 8013416:	4798      	blx	r3
 8013418:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801341a:	f8d3 3320 	ldr.w	r3, [r3, #800]	; 0x320
 801341e:	2b00      	cmp	r3, #0
 8013420:	d00a      	beq.n	8013438 <ef153328aa1040603d831896041b65ee1135a0ee+0x7c>
 8013422:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8013424:	f893 3324 	ldrb.w	r3, [r3, #804]	; 0x324
 8013428:	f083 0301 	eor.w	r3, r3, #1
 801342c:	b2db      	uxtb	r3, r3
 801342e:	2b00      	cmp	r3, #0
 8013430:	d002      	beq.n	8013438 <ef153328aa1040603d831896041b65ee1135a0ee+0x7c>
 8013432:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013434:	2b00      	cmp	r3, #0
 8013436:	d1cc      	bne.n	80133d2 <ef153328aa1040603d831896041b65ee1135a0ee+0x16>
 8013438:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801343a:	2b00      	cmp	r3, #0
 801343c:	d10b      	bne.n	8013456 <ef153328aa1040603d831896041b65ee1135a0ee+0x9a>
 801343e:	4a09      	ldr	r2, [pc, #36]	; (8013464 <ef153328aa1040603d831896041b65ee1135a0ee+0xa8>)
 8013440:	1d3b      	adds	r3, r7, #4
 8013442:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013446:	e883 0003 	stmia.w	r3, {r0, r1}
 801344a:	4a07      	ldr	r2, [pc, #28]	; (8013468 <ef153328aa1040603d831896041b65ee1135a0ee+0xac>)
 801344c:	1d3b      	adds	r3, r7, #4
 801344e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013452:	f001 fed9 	bl	8015208 <LOGGER_PrintLine>
 8013456:	bf00      	nop
 8013458:	3730      	adds	r7, #48	; 0x30
 801345a:	46bd      	mov	sp, r7
 801345c:	bd80      	pop	{r7, pc}
 801345e:	bf00      	nop
 8013460:	20000040 	.word	0x20000040
 8013464:	0802f048 	.word	0x0802f048
 8013468:	0802f020 	.word	0x0802f020

0801346c <openos_push_task_impl>:
 801346c:	b580      	push	{r7, lr}
 801346e:	b08a      	sub	sp, #40	; 0x28
 8013470:	af00      	add	r7, sp, #0
 8013472:	60f8      	str	r0, [r7, #12]
 8013474:	60b9      	str	r1, [r7, #8]
 8013476:	4613      	mov	r3, r2
 8013478:	71fb      	strb	r3, [r7, #7]
 801347a:	4b24      	ldr	r3, [pc, #144]	; (801350c <openos_push_task_impl+0xa0>)
 801347c:	681b      	ldr	r3, [r3, #0]
 801347e:	f203 7324 	addw	r3, r3, #1828	; 0x724
 8013482:	61fb      	str	r3, [r7, #28]
 8013484:	f7f2 fde4 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8013488:	69fb      	ldr	r3, [r7, #28]
 801348a:	627b      	str	r3, [r7, #36]	; 0x24
 801348c:	e02d      	b.n	80134ea <openos_push_task_impl+0x7e>
 801348e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013490:	681b      	ldr	r3, [r3, #0]
 8013492:	2b00      	cmp	r3, #0
 8013494:	d126      	bne.n	80134e4 <openos_push_task_impl+0x78>
 8013496:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8013498:	68fa      	ldr	r2, [r7, #12]
 801349a:	601a      	str	r2, [r3, #0]
 801349c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801349e:	68ba      	ldr	r2, [r7, #8]
 80134a0:	609a      	str	r2, [r3, #8]
 80134a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134a4:	79fa      	ldrb	r2, [r7, #7]
 80134a6:	711a      	strb	r2, [r3, #4]
 80134a8:	69fb      	ldr	r3, [r7, #28]
 80134aa:	f503 7348 	add.w	r3, r3, #800	; 0x320
 80134ae:	623b      	str	r3, [r7, #32]
 80134b0:	e003      	b.n	80134ba <openos_push_task_impl+0x4e>
 80134b2:	6a3b      	ldr	r3, [r7, #32]
 80134b4:	681b      	ldr	r3, [r3, #0]
 80134b6:	330c      	adds	r3, #12
 80134b8:	623b      	str	r3, [r7, #32]
 80134ba:	6a3b      	ldr	r3, [r7, #32]
 80134bc:	681b      	ldr	r3, [r3, #0]
 80134be:	2b00      	cmp	r3, #0
 80134c0:	d006      	beq.n	80134d0 <openos_push_task_impl+0x64>
 80134c2:	6a3b      	ldr	r3, [r7, #32]
 80134c4:	681b      	ldr	r3, [r3, #0]
 80134c6:	791a      	ldrb	r2, [r3, #4]
 80134c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134ca:	791b      	ldrb	r3, [r3, #4]
 80134cc:	429a      	cmp	r2, r3
 80134ce:	d9f0      	bls.n	80134b2 <openos_push_task_impl+0x46>
 80134d0:	6a3b      	ldr	r3, [r7, #32]
 80134d2:	681a      	ldr	r2, [r3, #0]
 80134d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134d6:	60da      	str	r2, [r3, #12]
 80134d8:	6a3b      	ldr	r3, [r7, #32]
 80134da:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80134dc:	601a      	str	r2, [r3, #0]
 80134de:	f7f2 fdd7 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80134e2:	e00f      	b.n	8013504 <openos_push_task_impl+0x98>
 80134e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80134e6:	3310      	adds	r3, #16
 80134e8:	627b      	str	r3, [r7, #36]	; 0x24
 80134ea:	69fb      	ldr	r3, [r7, #28]
 80134ec:	f503 7348 	add.w	r3, r3, #800	; 0x320
 80134f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80134f2:	429a      	cmp	r2, r3
 80134f4:	d1cb      	bne.n	801348e <openos_push_task_impl+0x22>
 80134f6:	f7f2 fdcb 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80134fa:	2256      	movs	r2, #86	; 0x56
 80134fc:	4904      	ldr	r1, [pc, #16]	; (8013510 <openos_push_task_impl+0xa4>)
 80134fe:	4805      	ldr	r0, [pc, #20]	; (8013514 <openos_push_task_impl+0xa8>)
 8013500:	f7ee f902 	bl	8001708 <EXPECT_OnAbortHandler>
 8013504:	3728      	adds	r7, #40	; 0x28
 8013506:	46bd      	mov	sp, r7
 8013508:	bd80      	pop	{r7, pc}
 801350a:	bf00      	nop
 801350c:	20000040 	.word	0x20000040
 8013510:	0802f050 	.word	0x0802f050
 8013514:	0802f0ac 	.word	0x0802f0ac

08013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>:
 8013518:	b580      	push	{r7, lr}
 801351a:	b084      	sub	sp, #16
 801351c:	af00      	add	r7, sp, #0
 801351e:	60f8      	str	r0, [r7, #12]
 8013520:	60b9      	str	r1, [r7, #8]
 8013522:	4613      	mov	r3, r2
 8013524:	71fb      	strb	r3, [r7, #7]
 8013526:	79fb      	ldrb	r3, [r7, #7]
 8013528:	461a      	mov	r2, r3
 801352a:	68b9      	ldr	r1, [r7, #8]
 801352c:	68f8      	ldr	r0, [r7, #12]
 801352e:	f7ff ff9d 	bl	801346c <openos_push_task_impl>
 8013532:	bf00      	nop
 8013534:	3710      	adds	r7, #16
 8013536:	46bd      	mov	sp, r7
 8013538:	bd80      	pop	{r7, pc}
	...

0801353c <EMBENET_RCP_Size>:
 801353c:	b480      	push	{r7}
 801353e:	b0d5      	sub	sp, #340	; 0x154
 8013540:	af00      	add	r7, sp, #0
 8013542:	4602      	mov	r2, r0
 8013544:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 8013548:	f2a3 1349 	subw	r3, r3, #329	; 0x149
 801354c:	701a      	strb	r2, [r3, #0]
 801354e:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 8013552:	f2a3 1349 	subw	r3, r3, #329	; 0x149
 8013556:	781b      	ldrb	r3, [r3, #0]
 8013558:	3b01      	subs	r3, #1
 801355a:	2b07      	cmp	r3, #7
 801355c:	d822      	bhi.n	80135a4 <EMBENET_RCP_Size+0x68>
 801355e:	a201      	add	r2, pc, #4	; (adr r2, 8013564 <EMBENET_RCP_Size+0x28>)
 8013560:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013564:	08013585 	.word	0x08013585
 8013568:	08013589 	.word	0x08013589
 801356c:	0801358d 	.word	0x0801358d
 8013570:	08013591 	.word	0x08013591
 8013574:	08013595 	.word	0x08013595
 8013578:	08013599 	.word	0x08013599
 801357c:	0801359d 	.word	0x0801359d
 8013580:	080135a1 	.word	0x080135a1
 8013584:	2301      	movs	r3, #1
 8013586:	e00f      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 8013588:	230c      	movs	r3, #12
 801358a:	e00d      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 801358c:	2343      	movs	r3, #67	; 0x43
 801358e:	e00b      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 8013590:	2301      	movs	r3, #1
 8013592:	e009      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 8013594:	2306      	movs	r3, #6
 8013596:	e007      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 8013598:	2306      	movs	r3, #6
 801359a:	e005      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 801359c:	2317      	movs	r3, #23
 801359e:	e003      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 80135a0:	230a      	movs	r3, #10
 80135a2:	e001      	b.n	80135a8 <EMBENET_RCP_Size+0x6c>
 80135a4:	f04f 33ff 	mov.w	r3, #4294967295
 80135a8:	4618      	mov	r0, r3
 80135aa:	f507 77aa 	add.w	r7, r7, #340	; 0x154
 80135ae:	46bd      	mov	sp, r7
 80135b0:	bc80      	pop	{r7}
 80135b2:	4770      	bx	lr

080135b4 <EMBENET_RCP_BackwardsCompatibleSize>:
 80135b4:	b480      	push	{r7}
 80135b6:	b0d5      	sub	sp, #340	; 0x154
 80135b8:	af00      	add	r7, sp, #0
 80135ba:	4602      	mov	r2, r0
 80135bc:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 80135c0:	f2a3 1349 	subw	r3, r3, #329	; 0x149
 80135c4:	701a      	strb	r2, [r3, #0]
 80135c6:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 80135ca:	f2a3 1349 	subw	r3, r3, #329	; 0x149
 80135ce:	781b      	ldrb	r3, [r3, #0]
 80135d0:	3b01      	subs	r3, #1
 80135d2:	2b07      	cmp	r3, #7
 80135d4:	d822      	bhi.n	801361c <EMBENET_RCP_BackwardsCompatibleSize+0x68>
 80135d6:	a201      	add	r2, pc, #4	; (adr r2, 80135dc <EMBENET_RCP_BackwardsCompatibleSize+0x28>)
 80135d8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80135dc:	080135fd 	.word	0x080135fd
 80135e0:	08013601 	.word	0x08013601
 80135e4:	08013605 	.word	0x08013605
 80135e8:	08013609 	.word	0x08013609
 80135ec:	0801360d 	.word	0x0801360d
 80135f0:	08013611 	.word	0x08013611
 80135f4:	08013615 	.word	0x08013615
 80135f8:	08013619 	.word	0x08013619
 80135fc:	2301      	movs	r3, #1
 80135fe:	e00f      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013600:	2309      	movs	r3, #9
 8013602:	e00d      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013604:	2333      	movs	r3, #51	; 0x33
 8013606:	e00b      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013608:	2301      	movs	r3, #1
 801360a:	e009      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 801360c:	2306      	movs	r3, #6
 801360e:	e007      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013610:	2306      	movs	r3, #6
 8013612:	e005      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013614:	2317      	movs	r3, #23
 8013616:	e003      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 8013618:	230a      	movs	r3, #10
 801361a:	e001      	b.n	8013620 <EMBENET_RCP_BackwardsCompatibleSize+0x6c>
 801361c:	f04f 33ff 	mov.w	r3, #4294967295
 8013620:	4618      	mov	r0, r3
 8013622:	f507 77aa 	add.w	r7, r7, #340	; 0x154
 8013626:	46bd      	mov	sp, r7
 8013628:	bc80      	pop	{r7}
 801362a:	4770      	bx	lr

0801362c <204a5825006ec0766c6949df6e4d08a716e57723>:
 801362c:	b580      	push	{r7, lr}
 801362e:	b088      	sub	sp, #32
 8013630:	af00      	add	r7, sp, #0
 8013632:	60f8      	str	r0, [r7, #12]
 8013634:	60b9      	str	r1, [r7, #8]
 8013636:	607a      	str	r2, [r7, #4]
 8013638:	603b      	str	r3, [r7, #0]
 801363a:	68fb      	ldr	r3, [r7, #12]
 801363c:	2b00      	cmp	r3, #0
 801363e:	d002      	beq.n	8013646 <204a5825006ec0766c6949df6e4d08a716e57723+0x1a>
 8013640:	68bb      	ldr	r3, [r7, #8]
 8013642:	2b00      	cmp	r3, #0
 8013644:	d102      	bne.n	801364c <204a5825006ec0766c6949df6e4d08a716e57723+0x20>
 8013646:	f04f 33ff 	mov.w	r3, #4294967295
 801364a:	e081      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 801364c:	68fb      	ldr	r3, [r7, #12]
 801364e:	781b      	ldrb	r3, [r3, #0]
 8013650:	4618      	mov	r0, r3
 8013652:	f7ff ff73 	bl	801353c <EMBENET_RCP_Size>
 8013656:	61f8      	str	r0, [r7, #28]
 8013658:	69fb      	ldr	r3, [r7, #28]
 801365a:	2b00      	cmp	r3, #0
 801365c:	da02      	bge.n	8013664 <204a5825006ec0766c6949df6e4d08a716e57723+0x38>
 801365e:	f04f 33ff 	mov.w	r3, #4294967295
 8013662:	e075      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 8013664:	69fb      	ldr	r3, [r7, #28]
 8013666:	61bb      	str	r3, [r7, #24]
 8013668:	687a      	ldr	r2, [r7, #4]
 801366a:	69bb      	ldr	r3, [r7, #24]
 801366c:	429a      	cmp	r2, r3
 801366e:	d202      	bcs.n	8013676 <204a5825006ec0766c6949df6e4d08a716e57723+0x4a>
 8013670:	f04f 33ff 	mov.w	r3, #4294967295
 8013674:	e06c      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 8013676:	68bb      	ldr	r3, [r7, #8]
 8013678:	617b      	str	r3, [r7, #20]
 801367a:	68ba      	ldr	r2, [r7, #8]
 801367c:	68fb      	ldr	r3, [r7, #12]
 801367e:	429a      	cmp	r2, r3
 8013680:	d004      	beq.n	801368c <204a5825006ec0766c6949df6e4d08a716e57723+0x60>
 8013682:	69ba      	ldr	r2, [r7, #24]
 8013684:	68f9      	ldr	r1, [r7, #12]
 8013686:	68b8      	ldr	r0, [r7, #8]
 8013688:	f017 fdd5 	bl	802b236 <memcpy>
 801368c:	697a      	ldr	r2, [r7, #20]
 801368e:	69bb      	ldr	r3, [r7, #24]
 8013690:	4413      	add	r3, r2
 8013692:	617b      	str	r3, [r7, #20]
 8013694:	68fb      	ldr	r3, [r7, #12]
 8013696:	781b      	ldrb	r3, [r3, #0]
 8013698:	2b08      	cmp	r3, #8
 801369a:	d035      	beq.n	8013708 <204a5825006ec0766c6949df6e4d08a716e57723+0xdc>
 801369c:	2b08      	cmp	r3, #8
 801369e:	dc55      	bgt.n	801374c <204a5825006ec0766c6949df6e4d08a716e57723+0x120>
 80136a0:	2b02      	cmp	r3, #2
 80136a2:	d002      	beq.n	80136aa <204a5825006ec0766c6949df6e4d08a716e57723+0x7e>
 80136a4:	2b07      	cmp	r3, #7
 80136a6:	d00d      	beq.n	80136c4 <204a5825006ec0766c6949df6e4d08a716e57723+0x98>
 80136a8:	e050      	b.n	801374c <204a5825006ec0766c6949df6e4d08a716e57723+0x120>
 80136aa:	697b      	ldr	r3, [r7, #20]
 80136ac:	3b03      	subs	r3, #3
 80136ae:	2201      	movs	r2, #1
 80136b0:	701a      	strb	r2, [r3, #0]
 80136b2:	697b      	ldr	r3, [r7, #20]
 80136b4:	3b02      	subs	r3, #2
 80136b6:	2200      	movs	r2, #0
 80136b8:	701a      	strb	r2, [r3, #0]
 80136ba:	697b      	ldr	r3, [r7, #20]
 80136bc:	3b01      	subs	r3, #1
 80136be:	2201      	movs	r2, #1
 80136c0:	701a      	strb	r2, [r3, #0]
 80136c2:	e044      	b.n	801374e <204a5825006ec0766c6949df6e4d08a716e57723+0x122>
 80136c4:	68fb      	ldr	r3, [r7, #12]
 80136c6:	7d9b      	ldrb	r3, [r3, #22]
 80136c8:	2b00      	cmp	r3, #0
 80136ca:	d005      	beq.n	80136d8 <204a5825006ec0766c6949df6e4d08a716e57723+0xac>
 80136cc:	683b      	ldr	r3, [r7, #0]
 80136ce:	2b00      	cmp	r3, #0
 80136d0:	d102      	bne.n	80136d8 <204a5825006ec0766c6949df6e4d08a716e57723+0xac>
 80136d2:	f04f 33ff 	mov.w	r3, #4294967295
 80136d6:	e03b      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 80136d8:	687a      	ldr	r2, [r7, #4]
 80136da:	69bb      	ldr	r3, [r7, #24]
 80136dc:	1ad3      	subs	r3, r2, r3
 80136de:	68fa      	ldr	r2, [r7, #12]
 80136e0:	7d92      	ldrb	r2, [r2, #22]
 80136e2:	4293      	cmp	r3, r2
 80136e4:	d202      	bcs.n	80136ec <204a5825006ec0766c6949df6e4d08a716e57723+0xc0>
 80136e6:	f04f 33ff 	mov.w	r3, #4294967295
 80136ea:	e031      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 80136ec:	68fb      	ldr	r3, [r7, #12]
 80136ee:	7d9b      	ldrb	r3, [r3, #22]
 80136f0:	461a      	mov	r2, r3
 80136f2:	6839      	ldr	r1, [r7, #0]
 80136f4:	6978      	ldr	r0, [r7, #20]
 80136f6:	f017 fd9e 	bl	802b236 <memcpy>
 80136fa:	68fb      	ldr	r3, [r7, #12]
 80136fc:	7d9b      	ldrb	r3, [r3, #22]
 80136fe:	461a      	mov	r2, r3
 8013700:	69fb      	ldr	r3, [r7, #28]
 8013702:	4413      	add	r3, r2
 8013704:	61fb      	str	r3, [r7, #28]
 8013706:	e022      	b.n	801374e <204a5825006ec0766c6949df6e4d08a716e57723+0x122>
 8013708:	68fb      	ldr	r3, [r7, #12]
 801370a:	7a5b      	ldrb	r3, [r3, #9]
 801370c:	2b00      	cmp	r3, #0
 801370e:	d005      	beq.n	801371c <204a5825006ec0766c6949df6e4d08a716e57723+0xf0>
 8013710:	683b      	ldr	r3, [r7, #0]
 8013712:	2b00      	cmp	r3, #0
 8013714:	d102      	bne.n	801371c <204a5825006ec0766c6949df6e4d08a716e57723+0xf0>
 8013716:	f04f 33ff 	mov.w	r3, #4294967295
 801371a:	e019      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 801371c:	687a      	ldr	r2, [r7, #4]
 801371e:	69bb      	ldr	r3, [r7, #24]
 8013720:	1ad3      	subs	r3, r2, r3
 8013722:	68fa      	ldr	r2, [r7, #12]
 8013724:	7a52      	ldrb	r2, [r2, #9]
 8013726:	4293      	cmp	r3, r2
 8013728:	d202      	bcs.n	8013730 <204a5825006ec0766c6949df6e4d08a716e57723+0x104>
 801372a:	f04f 33ff 	mov.w	r3, #4294967295
 801372e:	e00f      	b.n	8013750 <204a5825006ec0766c6949df6e4d08a716e57723+0x124>
 8013730:	68fb      	ldr	r3, [r7, #12]
 8013732:	7a5b      	ldrb	r3, [r3, #9]
 8013734:	461a      	mov	r2, r3
 8013736:	6839      	ldr	r1, [r7, #0]
 8013738:	6978      	ldr	r0, [r7, #20]
 801373a:	f017 fd7c 	bl	802b236 <memcpy>
 801373e:	68fb      	ldr	r3, [r7, #12]
 8013740:	7a5b      	ldrb	r3, [r3, #9]
 8013742:	461a      	mov	r2, r3
 8013744:	69fb      	ldr	r3, [r7, #28]
 8013746:	4413      	add	r3, r2
 8013748:	61fb      	str	r3, [r7, #28]
 801374a:	e000      	b.n	801374e <204a5825006ec0766c6949df6e4d08a716e57723+0x122>
 801374c:	bf00      	nop
 801374e:	69fb      	ldr	r3, [r7, #28]
 8013750:	4618      	mov	r0, r3
 8013752:	3720      	adds	r7, #32
 8013754:	46bd      	mov	sp, r7
 8013756:	bd80      	pop	{r7, pc}

08013758 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce>:
 8013758:	b580      	push	{r7, lr}
 801375a:	b08a      	sub	sp, #40	; 0x28
 801375c:	af00      	add	r7, sp, #0
 801375e:	60f8      	str	r0, [r7, #12]
 8013760:	60b9      	str	r1, [r7, #8]
 8013762:	607a      	str	r2, [r7, #4]
 8013764:	603b      	str	r3, [r7, #0]
 8013766:	68fb      	ldr	r3, [r7, #12]
 8013768:	2b00      	cmp	r3, #0
 801376a:	d002      	beq.n	8013772 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x1a>
 801376c:	687b      	ldr	r3, [r7, #4]
 801376e:	2b00      	cmp	r3, #0
 8013770:	d101      	bne.n	8013776 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x1e>
 8013772:	2300      	movs	r3, #0
 8013774:	e0a2      	b.n	80138bc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x164>
 8013776:	687b      	ldr	r3, [r7, #4]
 8013778:	61fb      	str	r3, [r7, #28]
 801377a:	69fb      	ldr	r3, [r7, #28]
 801377c:	781b      	ldrb	r3, [r3, #0]
 801377e:	76fb      	strb	r3, [r7, #27]
 8013780:	7efb      	ldrb	r3, [r7, #27]
 8013782:	4618      	mov	r0, r3
 8013784:	f7ff feda 	bl	801353c <EMBENET_RCP_Size>
 8013788:	6178      	str	r0, [r7, #20]
 801378a:	697b      	ldr	r3, [r7, #20]
 801378c:	2b00      	cmp	r3, #0
 801378e:	da01      	bge.n	8013794 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x3c>
 8013790:	2300      	movs	r3, #0
 8013792:	e093      	b.n	80138bc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x164>
 8013794:	2300      	movs	r3, #0
 8013796:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801379a:	697b      	ldr	r3, [r7, #20]
 801379c:	623b      	str	r3, [r7, #32]
 801379e:	683a      	ldr	r2, [r7, #0]
 80137a0:	6a3b      	ldr	r3, [r7, #32]
 80137a2:	429a      	cmp	r2, r3
 80137a4:	d303      	bcc.n	80137ae <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x56>
 80137a6:	68ba      	ldr	r2, [r7, #8]
 80137a8:	6a3b      	ldr	r3, [r7, #32]
 80137aa:	429a      	cmp	r2, r3
 80137ac:	d212      	bcs.n	80137d4 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x7c>
 80137ae:	7efb      	ldrb	r3, [r7, #27]
 80137b0:	4618      	mov	r0, r3
 80137b2:	f7ff feff 	bl	80135b4 <EMBENET_RCP_BackwardsCompatibleSize>
 80137b6:	4603      	mov	r3, r0
 80137b8:	623b      	str	r3, [r7, #32]
 80137ba:	683a      	ldr	r2, [r7, #0]
 80137bc:	6a3b      	ldr	r3, [r7, #32]
 80137be:	429a      	cmp	r2, r3
 80137c0:	d303      	bcc.n	80137ca <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x72>
 80137c2:	68ba      	ldr	r2, [r7, #8]
 80137c4:	6a3b      	ldr	r3, [r7, #32]
 80137c6:	429a      	cmp	r2, r3
 80137c8:	d201      	bcs.n	80137ce <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x76>
 80137ca:	2300      	movs	r3, #0
 80137cc:	e076      	b.n	80138bc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x164>
 80137ce:	2301      	movs	r3, #1
 80137d0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80137d4:	68fa      	ldr	r2, [r7, #12]
 80137d6:	687b      	ldr	r3, [r7, #4]
 80137d8:	429a      	cmp	r2, r3
 80137da:	d004      	beq.n	80137e6 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x8e>
 80137dc:	6a3a      	ldr	r2, [r7, #32]
 80137de:	69f9      	ldr	r1, [r7, #28]
 80137e0:	68f8      	ldr	r0, [r7, #12]
 80137e2:	f017 fd28 	bl	802b236 <memcpy>
 80137e6:	69fa      	ldr	r2, [r7, #28]
 80137e8:	6a3b      	ldr	r3, [r7, #32]
 80137ea:	4413      	add	r3, r2
 80137ec:	61fb      	str	r3, [r7, #28]
 80137ee:	7efb      	ldrb	r3, [r7, #27]
 80137f0:	3b02      	subs	r3, #2
 80137f2:	2b06      	cmp	r3, #6
 80137f4:	d858      	bhi.n	80138a8 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x150>
 80137f6:	a201      	add	r2, pc, #4	; (adr r2, 80137fc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0xa4>)
 80137f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80137fc:	08013819 	.word	0x08013819
 8013800:	08013835 	.word	0x08013835
 8013804:	080138a9 	.word	0x080138a9
 8013808:	080138a9 	.word	0x080138a9
 801380c:	080138a9 	.word	0x080138a9
 8013810:	0801384d 	.word	0x0801384d
 8013814:	0801387b 	.word	0x0801387b
 8013818:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801381c:	2b00      	cmp	r3, #0
 801381e:	d045      	beq.n	80138ac <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x154>
 8013820:	68fb      	ldr	r3, [r7, #12]
 8013822:	2200      	movs	r2, #0
 8013824:	725a      	strb	r2, [r3, #9]
 8013826:	68fb      	ldr	r3, [r7, #12]
 8013828:	2200      	movs	r2, #0
 801382a:	729a      	strb	r2, [r3, #10]
 801382c:	68fb      	ldr	r3, [r7, #12]
 801382e:	2201      	movs	r2, #1
 8013830:	72da      	strb	r2, [r3, #11]
 8013832:	e03b      	b.n	80138ac <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x154>
 8013834:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8013838:	2b00      	cmp	r3, #0
 801383a:	d039      	beq.n	80138b0 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x158>
 801383c:	68fb      	ldr	r3, [r7, #12]
 801383e:	3333      	adds	r3, #51	; 0x33
 8013840:	2210      	movs	r2, #16
 8013842:	2100      	movs	r1, #0
 8013844:	4618      	mov	r0, r3
 8013846:	f017 fc57 	bl	802b0f8 <memset>
 801384a:	e031      	b.n	80138b0 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x158>
 801384c:	683a      	ldr	r2, [r7, #0]
 801384e:	6a3b      	ldr	r3, [r7, #32]
 8013850:	1ad3      	subs	r3, r2, r3
 8013852:	68fa      	ldr	r2, [r7, #12]
 8013854:	7d92      	ldrb	r2, [r2, #22]
 8013856:	4293      	cmp	r3, r2
 8013858:	d201      	bcs.n	801385e <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x106>
 801385a:	2300      	movs	r3, #0
 801385c:	e02e      	b.n	80138bc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x164>
 801385e:	68fa      	ldr	r2, [r7, #12]
 8013860:	687b      	ldr	r3, [r7, #4]
 8013862:	429a      	cmp	r2, r3
 8013864:	d026      	beq.n	80138b4 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x15c>
 8013866:	68fb      	ldr	r3, [r7, #12]
 8013868:	f103 0017 	add.w	r0, r3, #23
 801386c:	68fb      	ldr	r3, [r7, #12]
 801386e:	7d9b      	ldrb	r3, [r3, #22]
 8013870:	461a      	mov	r2, r3
 8013872:	69f9      	ldr	r1, [r7, #28]
 8013874:	f017 fcdf 	bl	802b236 <memcpy>
 8013878:	e01c      	b.n	80138b4 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x15c>
 801387a:	683a      	ldr	r2, [r7, #0]
 801387c:	6a3b      	ldr	r3, [r7, #32]
 801387e:	1ad3      	subs	r3, r2, r3
 8013880:	68fa      	ldr	r2, [r7, #12]
 8013882:	7a52      	ldrb	r2, [r2, #9]
 8013884:	4293      	cmp	r3, r2
 8013886:	d201      	bcs.n	801388c <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x134>
 8013888:	2300      	movs	r3, #0
 801388a:	e017      	b.n	80138bc <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x164>
 801388c:	68fa      	ldr	r2, [r7, #12]
 801388e:	687b      	ldr	r3, [r7, #4]
 8013890:	429a      	cmp	r2, r3
 8013892:	d011      	beq.n	80138b8 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x160>
 8013894:	68fb      	ldr	r3, [r7, #12]
 8013896:	f103 000a 	add.w	r0, r3, #10
 801389a:	68fb      	ldr	r3, [r7, #12]
 801389c:	7a5b      	ldrb	r3, [r3, #9]
 801389e:	461a      	mov	r2, r3
 80138a0:	69f9      	ldr	r1, [r7, #28]
 80138a2:	f017 fcc8 	bl	802b236 <memcpy>
 80138a6:	e007      	b.n	80138b8 <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x160>
 80138a8:	bf00      	nop
 80138aa:	e006      	b.n	80138ba <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x162>
 80138ac:	bf00      	nop
 80138ae:	e004      	b.n	80138ba <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x162>
 80138b0:	bf00      	nop
 80138b2:	e002      	b.n	80138ba <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x162>
 80138b4:	bf00      	nop
 80138b6:	e000      	b.n	80138ba <7bcd1c99dd9baca2a3b373f6b31172e89b03b9ce+0x162>
 80138b8:	bf00      	nop
 80138ba:	68fb      	ldr	r3, [r7, #12]
 80138bc:	4618      	mov	r0, r3
 80138be:	3728      	adds	r7, #40	; 0x28
 80138c0:	46bd      	mov	sp, r7
 80138c2:	bd80      	pop	{r7, pc}

080138c4 <c5868198428dfaffddb0900c3d01452778b19d11>:
 80138c4:	b480      	push	{r7}
 80138c6:	b089      	sub	sp, #36	; 0x24
 80138c8:	af00      	add	r7, sp, #0
 80138ca:	60f8      	str	r0, [r7, #12]
 80138cc:	60b9      	str	r1, [r7, #8]
 80138ce:	607a      	str	r2, [r7, #4]
 80138d0:	68fb      	ldr	r3, [r7, #12]
 80138d2:	61fb      	str	r3, [r7, #28]
 80138d4:	68bb      	ldr	r3, [r7, #8]
 80138d6:	61bb      	str	r3, [r7, #24]
 80138d8:	687b      	ldr	r3, [r7, #4]
 80138da:	617b      	str	r3, [r7, #20]
 80138dc:	2300      	movs	r3, #0
 80138de:	613b      	str	r3, [r7, #16]
 80138e0:	e00d      	b.n	80138fe <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 80138e2:	69ba      	ldr	r2, [r7, #24]
 80138e4:	693b      	ldr	r3, [r7, #16]
 80138e6:	441a      	add	r2, r3
 80138e8:	6979      	ldr	r1, [r7, #20]
 80138ea:	693b      	ldr	r3, [r7, #16]
 80138ec:	1acb      	subs	r3, r1, r3
 80138ee:	3b01      	subs	r3, #1
 80138f0:	69f9      	ldr	r1, [r7, #28]
 80138f2:	440b      	add	r3, r1
 80138f4:	7812      	ldrb	r2, [r2, #0]
 80138f6:	701a      	strb	r2, [r3, #0]
 80138f8:	693b      	ldr	r3, [r7, #16]
 80138fa:	3301      	adds	r3, #1
 80138fc:	613b      	str	r3, [r7, #16]
 80138fe:	697a      	ldr	r2, [r7, #20]
 8013900:	693b      	ldr	r3, [r7, #16]
 8013902:	429a      	cmp	r2, r3
 8013904:	d8ed      	bhi.n	80138e2 <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 8013906:	bf00      	nop
 8013908:	bf00      	nop
 801390a:	3724      	adds	r7, #36	; 0x24
 801390c:	46bd      	mov	sp, r7
 801390e:	bc80      	pop	{r7}
 8013910:	4770      	bx	lr

08013912 <ENDIANNESS_hton8>:
 8013912:	b480      	push	{r7}
 8013914:	b083      	sub	sp, #12
 8013916:	af00      	add	r7, sp, #0
 8013918:	4603      	mov	r3, r0
 801391a:	71fb      	strb	r3, [r7, #7]
 801391c:	79fb      	ldrb	r3, [r7, #7]
 801391e:	4618      	mov	r0, r3
 8013920:	370c      	adds	r7, #12
 8013922:	46bd      	mov	sp, r7
 8013924:	bc80      	pop	{r7}
 8013926:	4770      	bx	lr

08013928 <ENDIANNESS_hton16>:
 8013928:	b580      	push	{r7, lr}
 801392a:	b084      	sub	sp, #16
 801392c:	af00      	add	r7, sp, #0
 801392e:	4603      	mov	r3, r0
 8013930:	80fb      	strh	r3, [r7, #6]
 8013932:	1db9      	adds	r1, r7, #6
 8013934:	f107 030e 	add.w	r3, r7, #14
 8013938:	2202      	movs	r2, #2
 801393a:	4618      	mov	r0, r3
 801393c:	f7ff ffc2 	bl	80138c4 <c5868198428dfaffddb0900c3d01452778b19d11>
 8013940:	89fb      	ldrh	r3, [r7, #14]
 8013942:	4618      	mov	r0, r3
 8013944:	3710      	adds	r7, #16
 8013946:	46bd      	mov	sp, r7
 8013948:	bd80      	pop	{r7, pc}

0801394a <ENDIANNESS_hton32>:
 801394a:	b580      	push	{r7, lr}
 801394c:	b084      	sub	sp, #16
 801394e:	af00      	add	r7, sp, #0
 8013950:	6078      	str	r0, [r7, #4]
 8013952:	1d39      	adds	r1, r7, #4
 8013954:	f107 030c 	add.w	r3, r7, #12
 8013958:	2204      	movs	r2, #4
 801395a:	4618      	mov	r0, r3
 801395c:	f7ff ffb2 	bl	80138c4 <c5868198428dfaffddb0900c3d01452778b19d11>
 8013960:	68fb      	ldr	r3, [r7, #12]
 8013962:	4618      	mov	r0, r3
 8013964:	3710      	adds	r7, #16
 8013966:	46bd      	mov	sp, r7
 8013968:	bd80      	pop	{r7, pc}

0801396a <ENDIANNESS_hton64>:
 801396a:	b580      	push	{r7, lr}
 801396c:	b084      	sub	sp, #16
 801396e:	af00      	add	r7, sp, #0
 8013970:	e9c7 0100 	strd	r0, r1, [r7]
 8013974:	4639      	mov	r1, r7
 8013976:	f107 0308 	add.w	r3, r7, #8
 801397a:	2208      	movs	r2, #8
 801397c:	4618      	mov	r0, r3
 801397e:	f7ff ffa1 	bl	80138c4 <c5868198428dfaffddb0900c3d01452778b19d11>
 8013982:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8013986:	4610      	mov	r0, r2
 8013988:	4619      	mov	r1, r3
 801398a:	3710      	adds	r7, #16
 801398c:	46bd      	mov	sp, r7
 801398e:	bd80      	pop	{r7, pc}

08013990 <enms_strlen_s>:
 8013990:	b580      	push	{r7, lr}
 8013992:	b084      	sub	sp, #16
 8013994:	af00      	add	r7, sp, #0
 8013996:	6078      	str	r0, [r7, #4]
 8013998:	6039      	str	r1, [r7, #0]
 801399a:	687b      	ldr	r3, [r7, #4]
 801399c:	2b00      	cmp	r3, #0
 801399e:	d101      	bne.n	80139a4 <enms_strlen_s+0x14>
 80139a0:	2300      	movs	r3, #0
 80139a2:	e00d      	b.n	80139c0 <enms_strlen_s+0x30>
 80139a4:	683a      	ldr	r2, [r7, #0]
 80139a6:	2100      	movs	r1, #0
 80139a8:	6878      	ldr	r0, [r7, #4]
 80139aa:	f7ec fbe9 	bl	8000180 <memchr>
 80139ae:	60f8      	str	r0, [r7, #12]
 80139b0:	68fb      	ldr	r3, [r7, #12]
 80139b2:	2b00      	cmp	r3, #0
 80139b4:	d003      	beq.n	80139be <enms_strlen_s+0x2e>
 80139b6:	68fa      	ldr	r2, [r7, #12]
 80139b8:	687b      	ldr	r3, [r7, #4]
 80139ba:	1ad3      	subs	r3, r2, r3
 80139bc:	e000      	b.n	80139c0 <enms_strlen_s+0x30>
 80139be:	683b      	ldr	r3, [r7, #0]
 80139c0:	4618      	mov	r0, r3
 80139c2:	3710      	adds	r7, #16
 80139c4:	46bd      	mov	sp, r7
 80139c6:	bd80      	pop	{r7, pc}

080139c8 <sendBasicInfoConfirmationPacket>:
 80139c8:	b590      	push	{r4, r7, lr}
 80139ca:	b08f      	sub	sp, #60	; 0x3c
 80139cc:	af02      	add	r7, sp, #8
 80139ce:	6078      	str	r0, [r7, #4]
 80139d0:	6039      	str	r1, [r7, #0]
 80139d2:	687b      	ldr	r3, [r7, #4]
 80139d4:	2b00      	cmp	r3, #0
 80139d6:	d002      	beq.n	80139de <sendBasicInfoConfirmationPacket+0x16>
 80139d8:	683b      	ldr	r3, [r7, #0]
 80139da:	2b00      	cmp	r3, #0
 80139dc:	d104      	bne.n	80139e8 <sendBasicInfoConfirmationPacket+0x20>
 80139de:	2264      	movs	r2, #100	; 0x64
 80139e0:	4930      	ldr	r1, [pc, #192]	; (8013aa4 <sendBasicInfoConfirmationPacket+0xdc>)
 80139e2:	4831      	ldr	r0, [pc, #196]	; (8013aa8 <sendBasicInfoConfirmationPacket+0xe0>)
 80139e4:	f7ed fe90 	bl	8001708 <EXPECT_OnAbortHandler>
 80139e8:	2001      	movs	r0, #1
 80139ea:	f7ff ff92 	bl	8013912 <ENDIANNESS_hton8>
 80139ee:	4603      	mov	r3, r0
 80139f0:	763b      	strb	r3, [r7, #24]
 80139f2:	687b      	ldr	r3, [r7, #4]
 80139f4:	f893 3060 	ldrb.w	r3, [r3, #96]	; 0x60
 80139f8:	4618      	mov	r0, r3
 80139fa:	f7ff ff8a 	bl	8013912 <ENDIANNESS_hton8>
 80139fe:	4603      	mov	r3, r0
 8013a00:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 8013a04:	687b      	ldr	r3, [r7, #4]
 8013a06:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
 8013a0a:	4618      	mov	r0, r3
 8013a0c:	f7ff ff81 	bl	8013912 <ENDIANNESS_hton8>
 8013a10:	4603      	mov	r3, r0
 8013a12:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8013a16:	687b      	ldr	r3, [r7, #4]
 8013a18:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8013a1c:	4618      	mov	r0, r3
 8013a1e:	f7ff ff83 	bl	8013928 <ENDIANNESS_hton16>
 8013a22:	4603      	mov	r3, r0
 8013a24:	f8a7 302b 	strh.w	r3, [r7, #43]	; 0x2b
 8013a28:	687b      	ldr	r3, [r7, #4]
 8013a2a:	f103 0250 	add.w	r2, r3, #80	; 0x50
 8013a2e:	f107 0319 	add.w	r3, r7, #25
 8013a32:	6814      	ldr	r4, [r2, #0]
 8013a34:	6850      	ldr	r0, [r2, #4]
 8013a36:	6891      	ldr	r1, [r2, #8]
 8013a38:	68d2      	ldr	r2, [r2, #12]
 8013a3a:	601c      	str	r4, [r3, #0]
 8013a3c:	6058      	str	r0, [r3, #4]
 8013a3e:	6099      	str	r1, [r3, #8]
 8013a40:	60da      	str	r2, [r3, #12]
 8013a42:	687b      	ldr	r3, [r7, #4]
 8013a44:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8013a48:	687b      	ldr	r3, [r7, #4]
 8013a4a:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
 8013a4c:	f107 0318 	add.w	r3, r7, #24
 8013a50:	2115      	movs	r1, #21
 8013a52:	9100      	str	r1, [sp, #0]
 8013a54:	6839      	ldr	r1, [r7, #0]
 8013a56:	f7f8 fe65 	bl	800c724 <EMBENET_UDP_Send>
 8013a5a:	4603      	mov	r3, r0
 8013a5c:	2b00      	cmp	r3, #0
 8013a5e:	d10e      	bne.n	8013a7e <sendBasicInfoConfirmationPacket+0xb6>
 8013a60:	4a12      	ldr	r2, [pc, #72]	; (8013aac <sendBasicInfoConfirmationPacket+0xe4>)
 8013a62:	f107 0310 	add.w	r3, r7, #16
 8013a66:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013a6a:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a6e:	4a10      	ldr	r2, [pc, #64]	; (8013ab0 <sendBasicInfoConfirmationPacket+0xe8>)
 8013a70:	f107 0310 	add.w	r3, r7, #16
 8013a74:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013a78:	f001 fbc6 	bl	8015208 <LOGGER_PrintLine>
 8013a7c:	e00d      	b.n	8013a9a <sendBasicInfoConfirmationPacket+0xd2>
 8013a7e:	4a0d      	ldr	r2, [pc, #52]	; (8013ab4 <sendBasicInfoConfirmationPacket+0xec>)
 8013a80:	f107 0308 	add.w	r3, r7, #8
 8013a84:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013a88:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a8c:	4a0a      	ldr	r2, [pc, #40]	; (8013ab8 <sendBasicInfoConfirmationPacket+0xf0>)
 8013a8e:	f107 0308 	add.w	r3, r7, #8
 8013a92:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013a96:	f001 fbb7 	bl	8015208 <LOGGER_PrintLine>
 8013a9a:	bf00      	nop
 8013a9c:	3734      	adds	r7, #52	; 0x34
 8013a9e:	46bd      	mov	sp, r7
 8013aa0:	bd90      	pop	{r4, r7, pc}
 8013aa2:	bf00      	nop
 8013aa4:	0802f0c4 	.word	0x0802f0c4
 8013aa8:	0802f128 	.word	0x0802f128
 8013aac:	0802f190 	.word	0x0802f190
 8013ab0:	0802f138 	.word	0x0802f138
 8013ab4:	0802f198 	.word	0x0802f198
 8013ab8:	0802f15c 	.word	0x0802f15c

08013abc <sendBasicInfoIndicationPacket>:
 8013abc:	b590      	push	{r4, r7, lr}
 8013abe:	b08f      	sub	sp, #60	; 0x3c
 8013ac0:	af02      	add	r7, sp, #8
 8013ac2:	6078      	str	r0, [r7, #4]
 8013ac4:	6039      	str	r1, [r7, #0]
 8013ac6:	687b      	ldr	r3, [r7, #4]
 8013ac8:	2b00      	cmp	r3, #0
 8013aca:	d002      	beq.n	8013ad2 <sendBasicInfoIndicationPacket+0x16>
 8013acc:	683b      	ldr	r3, [r7, #0]
 8013ace:	2b00      	cmp	r3, #0
 8013ad0:	d104      	bne.n	8013adc <sendBasicInfoIndicationPacket+0x20>
 8013ad2:	227c      	movs	r2, #124	; 0x7c
 8013ad4:	4930      	ldr	r1, [pc, #192]	; (8013b98 <sendBasicInfoIndicationPacket+0xdc>)
 8013ad6:	4831      	ldr	r0, [pc, #196]	; (8013b9c <sendBasicInfoIndicationPacket+0xe0>)
 8013ad8:	f7ed fe16 	bl	8001708 <EXPECT_OnAbortHandler>
 8013adc:	2002      	movs	r0, #2
 8013ade:	f7ff ff18 	bl	8013912 <ENDIANNESS_hton8>
 8013ae2:	4603      	mov	r3, r0
 8013ae4:	763b      	strb	r3, [r7, #24]
 8013ae6:	687b      	ldr	r3, [r7, #4]
 8013ae8:	f893 3060 	ldrb.w	r3, [r3, #96]	; 0x60
 8013aec:	4618      	mov	r0, r3
 8013aee:	f7ff ff10 	bl	8013912 <ENDIANNESS_hton8>
 8013af2:	4603      	mov	r3, r0
 8013af4:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 8013af8:	687b      	ldr	r3, [r7, #4]
 8013afa:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
 8013afe:	4618      	mov	r0, r3
 8013b00:	f7ff ff07 	bl	8013912 <ENDIANNESS_hton8>
 8013b04:	4603      	mov	r3, r0
 8013b06:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8013b0a:	687b      	ldr	r3, [r7, #4]
 8013b0c:	f8b3 3062 	ldrh.w	r3, [r3, #98]	; 0x62
 8013b10:	4618      	mov	r0, r3
 8013b12:	f7ff ff09 	bl	8013928 <ENDIANNESS_hton16>
 8013b16:	4603      	mov	r3, r0
 8013b18:	f8a7 302b 	strh.w	r3, [r7, #43]	; 0x2b
 8013b1c:	687b      	ldr	r3, [r7, #4]
 8013b1e:	f103 0250 	add.w	r2, r3, #80	; 0x50
 8013b22:	f107 0319 	add.w	r3, r7, #25
 8013b26:	6814      	ldr	r4, [r2, #0]
 8013b28:	6850      	ldr	r0, [r2, #4]
 8013b2a:	6891      	ldr	r1, [r2, #8]
 8013b2c:	68d2      	ldr	r2, [r2, #12]
 8013b2e:	601c      	str	r4, [r3, #0]
 8013b30:	6058      	str	r0, [r3, #4]
 8013b32:	6099      	str	r1, [r3, #8]
 8013b34:	60da      	str	r2, [r3, #12]
 8013b36:	687b      	ldr	r3, [r7, #4]
 8013b38:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8013b3c:	687b      	ldr	r3, [r7, #4]
 8013b3e:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
 8013b40:	f107 0318 	add.w	r3, r7, #24
 8013b44:	2115      	movs	r1, #21
 8013b46:	9100      	str	r1, [sp, #0]
 8013b48:	6839      	ldr	r1, [r7, #0]
 8013b4a:	f7f8 fdeb 	bl	800c724 <EMBENET_UDP_Send>
 8013b4e:	4603      	mov	r3, r0
 8013b50:	2b00      	cmp	r3, #0
 8013b52:	d10e      	bne.n	8013b72 <sendBasicInfoIndicationPacket+0xb6>
 8013b54:	4a12      	ldr	r2, [pc, #72]	; (8013ba0 <sendBasicInfoIndicationPacket+0xe4>)
 8013b56:	f107 0310 	add.w	r3, r7, #16
 8013b5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013b5e:	e883 0003 	stmia.w	r3, {r0, r1}
 8013b62:	4a10      	ldr	r2, [pc, #64]	; (8013ba4 <sendBasicInfoIndicationPacket+0xe8>)
 8013b64:	f107 0310 	add.w	r3, r7, #16
 8013b68:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013b6c:	f001 fb4c 	bl	8015208 <LOGGER_PrintLine>
 8013b70:	e00d      	b.n	8013b8e <sendBasicInfoIndicationPacket+0xd2>
 8013b72:	4a0d      	ldr	r2, [pc, #52]	; (8013ba8 <sendBasicInfoIndicationPacket+0xec>)
 8013b74:	f107 0308 	add.w	r3, r7, #8
 8013b78:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013b7c:	e883 0003 	stmia.w	r3, {r0, r1}
 8013b80:	4a0a      	ldr	r2, [pc, #40]	; (8013bac <sendBasicInfoIndicationPacket+0xf0>)
 8013b82:	f107 0308 	add.w	r3, r7, #8
 8013b86:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013b8a:	f001 fb3d 	bl	8015208 <LOGGER_PrintLine>
 8013b8e:	bf00      	nop
 8013b90:	3734      	adds	r7, #52	; 0x34
 8013b92:	46bd      	mov	sp, r7
 8013b94:	bd90      	pop	{r4, r7, pc}
 8013b96:	bf00      	nop
 8013b98:	0802f0c4 	.word	0x0802f0c4
 8013b9c:	0802f128 	.word	0x0802f128
 8013ba0:	0802f190 	.word	0x0802f190
 8013ba4:	0802f1a0 	.word	0x0802f1a0
 8013ba8:	0802f198 	.word	0x0802f198
 8013bac:	0802f1c0 	.word	0x0802f1c0

08013bb0 <sendServiceInfoConfirmationPacket>:
 8013bb0:	b580      	push	{r7, lr}
 8013bb2:	b090      	sub	sp, #64	; 0x40
 8013bb4:	af02      	add	r7, sp, #8
 8013bb6:	60f8      	str	r0, [r7, #12]
 8013bb8:	460b      	mov	r3, r1
 8013bba:	607a      	str	r2, [r7, #4]
 8013bbc:	72fb      	strb	r3, [r7, #11]
 8013bbe:	68fb      	ldr	r3, [r7, #12]
 8013bc0:	2b00      	cmp	r3, #0
 8013bc2:	d002      	beq.n	8013bca <sendServiceInfoConfirmationPacket+0x1a>
 8013bc4:	687b      	ldr	r3, [r7, #4]
 8013bc6:	2b00      	cmp	r3, #0
 8013bc8:	d104      	bne.n	8013bd4 <sendServiceInfoConfirmationPacket+0x24>
 8013bca:	2294      	movs	r2, #148	; 0x94
 8013bcc:	493c      	ldr	r1, [pc, #240]	; (8013cc0 <sendServiceInfoConfirmationPacket+0x110>)
 8013bce:	483d      	ldr	r0, [pc, #244]	; (8013cc4 <sendServiceInfoConfirmationPacket+0x114>)
 8013bd0:	f7ed fd9a 	bl	8001708 <EXPECT_OnAbortHandler>
 8013bd4:	7afb      	ldrb	r3, [r7, #11]
 8013bd6:	2b09      	cmp	r3, #9
 8013bd8:	d86e      	bhi.n	8013cb8 <sendServiceInfoConfirmationPacket+0x108>
 8013bda:	7afa      	ldrb	r2, [r7, #11]
 8013bdc:	4613      	mov	r3, r2
 8013bde:	011b      	lsls	r3, r3, #4
 8013be0:	4413      	add	r3, r2
 8013be2:	3388      	adds	r3, #136	; 0x88
 8013be4:	68fa      	ldr	r2, [r7, #12]
 8013be6:	4413      	add	r3, r2
 8013be8:	3304      	adds	r3, #4
 8013bea:	2110      	movs	r1, #16
 8013bec:	4618      	mov	r0, r3
 8013bee:	f7ff fecf 	bl	8013990 <enms_strlen_s>
 8013bf2:	4603      	mov	r3, r0
 8013bf4:	2b00      	cmp	r3, #0
 8013bf6:	d060      	beq.n	8013cba <sendServiceInfoConfirmationPacket+0x10a>
 8013bf8:	2011      	movs	r0, #17
 8013bfa:	f7ff fe8a 	bl	8013912 <ENDIANNESS_hton8>
 8013bfe:	4603      	mov	r3, r0
 8013c00:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8013c04:	68fb      	ldr	r3, [r7, #12]
 8013c06:	f893 3136 	ldrb.w	r3, [r3, #310]	; 0x136
 8013c0a:	4618      	mov	r0, r3
 8013c0c:	f7ff fe81 	bl	8013912 <ENDIANNESS_hton8>
 8013c10:	4603      	mov	r3, r0
 8013c12:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8013c16:	7afb      	ldrb	r3, [r7, #11]
 8013c18:	4618      	mov	r0, r3
 8013c1a:	f7ff fe7a 	bl	8013912 <ENDIANNESS_hton8>
 8013c1e:	4603      	mov	r3, r0
 8013c20:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8013c24:	7afa      	ldrb	r2, [r7, #11]
 8013c26:	68f9      	ldr	r1, [r7, #12]
 8013c28:	4613      	mov	r3, r2
 8013c2a:	011b      	lsls	r3, r3, #4
 8013c2c:	4413      	add	r3, r2
 8013c2e:	440b      	add	r3, r1
 8013c30:	339c      	adds	r3, #156	; 0x9c
 8013c32:	781b      	ldrb	r3, [r3, #0]
 8013c34:	4618      	mov	r0, r3
 8013c36:	f7ff fe6c 	bl	8013912 <ENDIANNESS_hton8>
 8013c3a:	4603      	mov	r3, r0
 8013c3c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8013c40:	7afa      	ldrb	r2, [r7, #11]
 8013c42:	4613      	mov	r3, r2
 8013c44:	011b      	lsls	r3, r3, #4
 8013c46:	4413      	add	r3, r2
 8013c48:	3388      	adds	r3, #136	; 0x88
 8013c4a:	68fa      	ldr	r2, [r7, #12]
 8013c4c:	4413      	add	r3, r2
 8013c4e:	1d1a      	adds	r2, r3, #4
 8013c50:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c54:	3303      	adds	r3, #3
 8013c56:	4611      	mov	r1, r2
 8013c58:	4618      	mov	r0, r3
 8013c5a:	f017 fae4 	bl	802b226 <strcpy>
 8013c5e:	68fb      	ldr	r3, [r7, #12]
 8013c60:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8013c64:	68fb      	ldr	r3, [r7, #12]
 8013c66:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
 8013c68:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c6c:	2114      	movs	r1, #20
 8013c6e:	9100      	str	r1, [sp, #0]
 8013c70:	6879      	ldr	r1, [r7, #4]
 8013c72:	f7f8 fd57 	bl	800c724 <EMBENET_UDP_Send>
 8013c76:	4603      	mov	r3, r0
 8013c78:	2b00      	cmp	r3, #0
 8013c7a:	d10e      	bne.n	8013c9a <sendServiceInfoConfirmationPacket+0xea>
 8013c7c:	4a12      	ldr	r2, [pc, #72]	; (8013cc8 <sendServiceInfoConfirmationPacket+0x118>)
 8013c7e:	f107 031c 	add.w	r3, r7, #28
 8013c82:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013c86:	e883 0003 	stmia.w	r3, {r0, r1}
 8013c8a:	7afb      	ldrb	r3, [r7, #11]
 8013c8c:	4a0f      	ldr	r2, [pc, #60]	; (8013ccc <sendServiceInfoConfirmationPacket+0x11c>)
 8013c8e:	f107 011c 	add.w	r1, r7, #28
 8013c92:	c903      	ldmia	r1, {r0, r1}
 8013c94:	f001 fab8 	bl	8015208 <LOGGER_PrintLine>
 8013c98:	e00f      	b.n	8013cba <sendServiceInfoConfirmationPacket+0x10a>
 8013c9a:	4a0d      	ldr	r2, [pc, #52]	; (8013cd0 <sendServiceInfoConfirmationPacket+0x120>)
 8013c9c:	f107 0314 	add.w	r3, r7, #20
 8013ca0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013ca4:	e883 0003 	stmia.w	r3, {r0, r1}
 8013ca8:	4a0a      	ldr	r2, [pc, #40]	; (8013cd4 <sendServiceInfoConfirmationPacket+0x124>)
 8013caa:	f107 0314 	add.w	r3, r7, #20
 8013cae:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013cb2:	f001 faa9 	bl	8015208 <LOGGER_PrintLine>
 8013cb6:	e000      	b.n	8013cba <sendServiceInfoConfirmationPacket+0x10a>
 8013cb8:	bf00      	nop
 8013cba:	3738      	adds	r7, #56	; 0x38
 8013cbc:	46bd      	mov	sp, r7
 8013cbe:	bd80      	pop	{r7, pc}
 8013cc0:	0802f0c4 	.word	0x0802f0c4
 8013cc4:	0802f128 	.word	0x0802f128
 8013cc8:	0802f190 	.word	0x0802f190
 8013ccc:	0802f1ec 	.word	0x0802f1ec
 8013cd0:	0802f198 	.word	0x0802f198
 8013cd4:	0802f224 	.word	0x0802f224

08013cd8 <sendServiceInfoIndicationPacket>:
 8013cd8:	b580      	push	{r7, lr}
 8013cda:	b098      	sub	sp, #96	; 0x60
 8013cdc:	af02      	add	r7, sp, #8
 8013cde:	6078      	str	r0, [r7, #4]
 8013ce0:	6039      	str	r1, [r7, #0]
 8013ce2:	687b      	ldr	r3, [r7, #4]
 8013ce4:	2b00      	cmp	r3, #0
 8013ce6:	d002      	beq.n	8013cee <sendServiceInfoIndicationPacket+0x16>
 8013ce8:	683b      	ldr	r3, [r7, #0]
 8013cea:	2b00      	cmp	r3, #0
 8013cec:	d104      	bne.n	8013cf8 <sendServiceInfoIndicationPacket+0x20>
 8013cee:	22ae      	movs	r2, #174	; 0xae
 8013cf0:	4957      	ldr	r1, [pc, #348]	; (8013e50 <sendServiceInfoIndicationPacket+0x178>)
 8013cf2:	4858      	ldr	r0, [pc, #352]	; (8013e54 <sendServiceInfoIndicationPacket+0x17c>)
 8013cf4:	f7ed fd08 	bl	8001708 <EXPECT_OnAbortHandler>
 8013cf8:	2012      	movs	r0, #18
 8013cfa:	f7ff fe0a 	bl	8013912 <ENDIANNESS_hton8>
 8013cfe:	4603      	mov	r3, r0
 8013d00:	763b      	strb	r3, [r7, #24]
 8013d02:	687b      	ldr	r3, [r7, #4]
 8013d04:	f893 3136 	ldrb.w	r3, [r3, #310]	; 0x136
 8013d08:	4618      	mov	r0, r3
 8013d0a:	f7ff fe02 	bl	8013912 <ENDIANNESS_hton8>
 8013d0e:	4603      	mov	r3, r0
 8013d10:	767b      	strb	r3, [r7, #25]
 8013d12:	2300      	movs	r3, #0
 8013d14:	657b      	str	r3, [r7, #84]	; 0x54
 8013d16:	2300      	movs	r3, #0
 8013d18:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8013d1c:	e08d      	b.n	8013e3a <sendServiceInfoIndicationPacket+0x162>
 8013d1e:	f897 2053 	ldrb.w	r2, [r7, #83]	; 0x53
 8013d22:	6879      	ldr	r1, [r7, #4]
 8013d24:	4613      	mov	r3, r2
 8013d26:	011b      	lsls	r3, r3, #4
 8013d28:	4413      	add	r3, r2
 8013d2a:	440b      	add	r3, r1
 8013d2c:	338c      	adds	r3, #140	; 0x8c
 8013d2e:	781b      	ldrb	r3, [r3, #0]
 8013d30:	2b00      	cmp	r3, #0
 8013d32:	d041      	beq.n	8013db8 <sendServiceInfoIndicationPacket+0xe0>
 8013d34:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8013d38:	4618      	mov	r0, r3
 8013d3a:	f7ff fdea 	bl	8013912 <ENDIANNESS_hton8>
 8013d3e:	4603      	mov	r3, r0
 8013d40:	4619      	mov	r1, r3
 8013d42:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8013d44:	4613      	mov	r3, r2
 8013d46:	00db      	lsls	r3, r3, #3
 8013d48:	4413      	add	r3, r2
 8013d4a:	005b      	lsls	r3, r3, #1
 8013d4c:	3358      	adds	r3, #88	; 0x58
 8013d4e:	443b      	add	r3, r7
 8013d50:	3b3e      	subs	r3, #62	; 0x3e
 8013d52:	460a      	mov	r2, r1
 8013d54:	701a      	strb	r2, [r3, #0]
 8013d56:	f897 2053 	ldrb.w	r2, [r7, #83]	; 0x53
 8013d5a:	6879      	ldr	r1, [r7, #4]
 8013d5c:	4613      	mov	r3, r2
 8013d5e:	011b      	lsls	r3, r3, #4
 8013d60:	4413      	add	r3, r2
 8013d62:	440b      	add	r3, r1
 8013d64:	339c      	adds	r3, #156	; 0x9c
 8013d66:	781b      	ldrb	r3, [r3, #0]
 8013d68:	4618      	mov	r0, r3
 8013d6a:	f7ff fdd2 	bl	8013912 <ENDIANNESS_hton8>
 8013d6e:	4603      	mov	r3, r0
 8013d70:	4619      	mov	r1, r3
 8013d72:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8013d74:	4613      	mov	r3, r2
 8013d76:	00db      	lsls	r3, r3, #3
 8013d78:	4413      	add	r3, r2
 8013d7a:	005b      	lsls	r3, r3, #1
 8013d7c:	3358      	adds	r3, #88	; 0x58
 8013d7e:	443b      	add	r3, r7
 8013d80:	3b2d      	subs	r3, #45	; 0x2d
 8013d82:	460a      	mov	r2, r1
 8013d84:	701a      	strb	r2, [r3, #0]
 8013d86:	f107 0118 	add.w	r1, r7, #24
 8013d8a:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8013d8c:	4613      	mov	r3, r2
 8013d8e:	00db      	lsls	r3, r3, #3
 8013d90:	4413      	add	r3, r2
 8013d92:	005b      	lsls	r3, r3, #1
 8013d94:	440b      	add	r3, r1
 8013d96:	1cd8      	adds	r0, r3, #3
 8013d98:	f897 2053 	ldrb.w	r2, [r7, #83]	; 0x53
 8013d9c:	4613      	mov	r3, r2
 8013d9e:	011b      	lsls	r3, r3, #4
 8013da0:	4413      	add	r3, r2
 8013da2:	3388      	adds	r3, #136	; 0x88
 8013da4:	687a      	ldr	r2, [r7, #4]
 8013da6:	4413      	add	r3, r2
 8013da8:	3304      	adds	r3, #4
 8013daa:	2210      	movs	r2, #16
 8013dac:	4619      	mov	r1, r3
 8013dae:	f017 fa42 	bl	802b236 <memcpy>
 8013db2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013db4:	3301      	adds	r3, #1
 8013db6:	657b      	str	r3, [r7, #84]	; 0x54
 8013db8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013dba:	2b03      	cmp	r3, #3
 8013dbc:	d003      	beq.n	8013dc6 <sendServiceInfoIndicationPacket+0xee>
 8013dbe:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8013dc2:	2b09      	cmp	r3, #9
 8013dc4:	d134      	bne.n	8013e30 <sendServiceInfoIndicationPacket+0x158>
 8013dc6:	687b      	ldr	r3, [r7, #4]
 8013dc8:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8013dcc:	687b      	ldr	r3, [r7, #4]
 8013dce:	8d19      	ldrh	r1, [r3, #40]	; 0x28
 8013dd0:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8013dd2:	4613      	mov	r3, r2
 8013dd4:	00db      	lsls	r3, r3, #3
 8013dd6:	4413      	add	r3, r2
 8013dd8:	005b      	lsls	r3, r3, #1
 8013dda:	3302      	adds	r3, #2
 8013ddc:	f107 0218 	add.w	r2, r7, #24
 8013de0:	9300      	str	r3, [sp, #0]
 8013de2:	4613      	mov	r3, r2
 8013de4:	460a      	mov	r2, r1
 8013de6:	6839      	ldr	r1, [r7, #0]
 8013de8:	f7f8 fc9c 	bl	800c724 <EMBENET_UDP_Send>
 8013dec:	4603      	mov	r3, r0
 8013dee:	2b00      	cmp	r3, #0
 8013df0:	d10e      	bne.n	8013e10 <sendServiceInfoIndicationPacket+0x138>
 8013df2:	4a19      	ldr	r2, [pc, #100]	; (8013e58 <sendServiceInfoIndicationPacket+0x180>)
 8013df4:	f107 0310 	add.w	r3, r7, #16
 8013df8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013dfc:	e883 0003 	stmia.w	r3, {r0, r1}
 8013e00:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8013e02:	4a16      	ldr	r2, [pc, #88]	; (8013e5c <sendServiceInfoIndicationPacket+0x184>)
 8013e04:	f107 0110 	add.w	r1, r7, #16
 8013e08:	c903      	ldmia	r1, {r0, r1}
 8013e0a:	f001 f9fd 	bl	8015208 <LOGGER_PrintLine>
 8013e0e:	e00d      	b.n	8013e2c <sendServiceInfoIndicationPacket+0x154>
 8013e10:	4a13      	ldr	r2, [pc, #76]	; (8013e60 <sendServiceInfoIndicationPacket+0x188>)
 8013e12:	f107 0308 	add.w	r3, r7, #8
 8013e16:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013e1a:	e883 0003 	stmia.w	r3, {r0, r1}
 8013e1e:	4a11      	ldr	r2, [pc, #68]	; (8013e64 <sendServiceInfoIndicationPacket+0x18c>)
 8013e20:	f107 0308 	add.w	r3, r7, #8
 8013e24:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013e28:	f001 f9ee 	bl	8015208 <LOGGER_PrintLine>
 8013e2c:	2300      	movs	r3, #0
 8013e2e:	657b      	str	r3, [r7, #84]	; 0x54
 8013e30:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8013e34:	3301      	adds	r3, #1
 8013e36:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8013e3a:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8013e3e:	2b09      	cmp	r3, #9
 8013e40:	f67f af6d 	bls.w	8013d1e <sendServiceInfoIndicationPacket+0x46>
 8013e44:	bf00      	nop
 8013e46:	bf00      	nop
 8013e48:	3758      	adds	r7, #88	; 0x58
 8013e4a:	46bd      	mov	sp, r7
 8013e4c:	bd80      	pop	{r7, pc}
 8013e4e:	bf00      	nop
 8013e50:	0802f0c4 	.word	0x0802f0c4
 8013e54:	0802f128 	.word	0x0802f128
 8013e58:	0802f190 	.word	0x0802f190
 8013e5c:	0802f254 	.word	0x0802f254
 8013e60:	0802f198 	.word	0x0802f198
 8013e64:	0802f288 	.word	0x0802f288

08013e68 <sendStatusConfirmationIndication>:
 8013e68:	b590      	push	{r4, r7, lr}
 8013e6a:	b0a7      	sub	sp, #156	; 0x9c
 8013e6c:	af02      	add	r7, sp, #8
 8013e6e:	60f8      	str	r0, [r7, #12]
 8013e70:	60b9      	str	r1, [r7, #8]
 8013e72:	4613      	mov	r3, r2
 8013e74:	71fb      	strb	r3, [r7, #7]
 8013e76:	68fb      	ldr	r3, [r7, #12]
 8013e78:	2b00      	cmp	r3, #0
 8013e7a:	d002      	beq.n	8013e82 <sendStatusConfirmationIndication+0x1a>
 8013e7c:	68bb      	ldr	r3, [r7, #8]
 8013e7e:	2b00      	cmp	r3, #0
 8013e80:	d104      	bne.n	8013e8c <sendStatusConfirmationIndication+0x24>
 8013e82:	22cf      	movs	r2, #207	; 0xcf
 8013e84:	499b      	ldr	r1, [pc, #620]	; (80140f4 <sendStatusConfirmationIndication+0x28c>)
 8013e86:	489c      	ldr	r0, [pc, #624]	; (80140f8 <sendStatusConfirmationIndication+0x290>)
 8013e88:	f7ed fc3e 	bl	8001708 <EXPECT_OnAbortHandler>
 8013e8c:	79fb      	ldrb	r3, [r7, #7]
 8013e8e:	2b21      	cmp	r3, #33	; 0x21
 8013e90:	d007      	beq.n	8013ea2 <sendStatusConfirmationIndication+0x3a>
 8013e92:	79fb      	ldrb	r3, [r7, #7]
 8013e94:	2b22      	cmp	r3, #34	; 0x22
 8013e96:	d004      	beq.n	8013ea2 <sendStatusConfirmationIndication+0x3a>
 8013e98:	22d0      	movs	r2, #208	; 0xd0
 8013e9a:	4996      	ldr	r1, [pc, #600]	; (80140f4 <sendStatusConfirmationIndication+0x28c>)
 8013e9c:	4896      	ldr	r0, [pc, #600]	; (80140f8 <sendStatusConfirmationIndication+0x290>)
 8013e9e:	f7ed fc33 	bl	8001708 <EXPECT_OnAbortHandler>
 8013ea2:	79fb      	ldrb	r3, [r7, #7]
 8013ea4:	4618      	mov	r0, r3
 8013ea6:	f7ff fd34 	bl	8013912 <ENDIANNESS_hton8>
 8013eaa:	4603      	mov	r3, r0
 8013eac:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8013eb0:	2065      	movs	r0, #101	; 0x65
 8013eb2:	f7ff fd2e 	bl	8013912 <ENDIANNESS_hton8>
 8013eb6:	4603      	mov	r3, r0
 8013eb8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8013ebc:	f015 f92e 	bl	802911c <13e346e7537b84bcd52c3cf47fef4ef9086039ba>
 8013ec0:	4603      	mov	r3, r0
 8013ec2:	b2db      	uxtb	r3, r3
 8013ec4:	4618      	mov	r0, r3
 8013ec6:	f7ff fd24 	bl	8013912 <ENDIANNESS_hton8>
 8013eca:	4603      	mov	r3, r0
 8013ecc:	f887 304d 	strb.w	r3, [r7, #77]	; 0x4d
 8013ed0:	f015 f92d 	bl	802912e <bba0525c833a77ea6266641935ef62cce330e9a7>
 8013ed4:	4603      	mov	r3, r0
 8013ed6:	4618      	mov	r0, r3
 8013ed8:	f7ff fd26 	bl	8013928 <ENDIANNESS_hton16>
 8013edc:	4603      	mov	r3, r0
 8013ede:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
 8013ee2:	f015 f931 	bl	8029148 <6bb34e807caa6654eefd3984c9aa6bde2b5f1294>
 8013ee6:	4603      	mov	r3, r0
 8013ee8:	461c      	mov	r4, r3
 8013eea:	f015 f934 	bl	8029156 <ef56437d1bfbf379203966c0ca60ce860a9e4040>
 8013eee:	4603      	mov	r3, r0
 8013ef0:	4423      	add	r3, r4
 8013ef2:	b29c      	uxth	r4, r3
 8013ef4:	f015 f936 	bl	8029164 <33cb78c5ebdf85a72531cdf9a2db5897a43e9d27>
 8013ef8:	4603      	mov	r3, r0
 8013efa:	4423      	add	r3, r4
 8013efc:	b29b      	uxth	r3, r3
 8013efe:	4618      	mov	r0, r3
 8013f00:	f7ff fd12 	bl	8013928 <ENDIANNESS_hton16>
 8013f04:	4603      	mov	r3, r0
 8013f06:	f8a7 3050 	strh.w	r3, [r7, #80]	; 0x50
 8013f0a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8013f0e:	f7ff fd0b 	bl	8013928 <ENDIANNESS_hton16>
 8013f12:	4603      	mov	r3, r0
 8013f14:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 8013f18:	f015 f93e 	bl	8029198 <d0d4f6737d0eed46e2bc20295cf5671c83cb8538>
 8013f1c:	4603      	mov	r3, r0
 8013f1e:	b2db      	uxtb	r3, r3
 8013f20:	4618      	mov	r0, r3
 8013f22:	f7ff fcf6 	bl	8013912 <ENDIANNESS_hton8>
 8013f26:	4603      	mov	r3, r0
 8013f28:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 8013f2c:	f015 f8c2 	bl	80290b4 <e4a3f9918fe69f73b1cc4210ec318e3c426e72f5>
 8013f30:	4603      	mov	r3, r0
 8013f32:	4618      	mov	r0, r3
 8013f34:	f7ff fcf8 	bl	8013928 <ENDIANNESS_hton16>
 8013f38:	4603      	mov	r3, r0
 8013f3a:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 8013f3e:	f015 f868 	bl	8029012 <46cd3075e82ff8b9ea43a88054ba0b7b067be91a>
 8013f42:	4602      	mov	r2, r0
 8013f44:	460b      	mov	r3, r1
 8013f46:	4610      	mov	r0, r2
 8013f48:	4619      	mov	r1, r3
 8013f4a:	f7ff fd0e 	bl	801396a <ENDIANNESS_hton64>
 8013f4e:	4602      	mov	r2, r0
 8013f50:	460b      	mov	r3, r1
 8013f52:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8013f56:	3903      	subs	r1, #3
 8013f58:	600a      	str	r2, [r1, #0]
 8013f5a:	604b      	str	r3, [r1, #4]
 8013f5c:	f015 f894 	bl	8029088 <EMBENET_NODE_DIAG_GetParentPDR>
 8013f60:	4603      	mov	r3, r0
 8013f62:	4618      	mov	r0, r3
 8013f64:	f7ff fce0 	bl	8013928 <ENDIANNESS_hton16>
 8013f68:	4603      	mov	r3, r0
 8013f6a:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8013f6e:	f015 f872 	bl	8029056 <b91c6940dbb3047c4c296403649f7867d9870dca>
 8013f72:	4603      	mov	r3, r0
 8013f74:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8013f78:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8013f7c:	4618      	mov	r0, r3
 8013f7e:	f015 f8f8 	bl	8029172 <EMBENET_NODE_DIAG_GetQueueThresholdAndOverflowCounters>
 8013f82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8013f84:	b29b      	uxth	r3, r3
 8013f86:	4618      	mov	r0, r3
 8013f88:	f7ff fcce 	bl	8013928 <ENDIANNESS_hton16>
 8013f8c:	4603      	mov	r3, r0
 8013f8e:	f8a7 3052 	strh.w	r3, [r7, #82]	; 0x52
 8013f92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8013f94:	b29b      	uxth	r3, r3
 8013f96:	4618      	mov	r0, r3
 8013f98:	f7ff fcc6 	bl	8013928 <ENDIANNESS_hton16>
 8013f9c:	4603      	mov	r3, r0
 8013f9e:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8013fa2:	f015 f88e 	bl	80290c2 <4f511565cdbba62bf97753c767d47da43943d7f0>
 8013fa6:	4603      	mov	r3, r0
 8013fa8:	b2db      	uxtb	r3, r3
 8013faa:	4618      	mov	r0, r3
 8013fac:	f7ff fcb1 	bl	8013912 <ENDIANNESS_hton8>
 8013fb0:	4603      	mov	r3, r0
 8013fb2:	f887 304a 	strb.w	r3, [r7, #74]	; 0x4a
 8013fb6:	f015 f8a4 	bl	8029102 <88f59cfa8d275ffe37bfcd0f1db7f0dfbfb0545b>
 8013fba:	4603      	mov	r3, r0
 8013fbc:	4618      	mov	r0, r3
 8013fbe:	f7ff fcb3 	bl	8013928 <ENDIANNESS_hton16>
 8013fc2:	4603      	mov	r3, r0
 8013fc4:	f8a7 304b 	strh.w	r3, [r7, #75]	; 0x4b
 8013fc8:	f7f8 fbfa 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 8013fcc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013fd0:	f04f 0300 	mov.w	r3, #0
 8013fd4:	f7ec fd32 	bl	8000a3c <__aeabi_uldivmod>
 8013fd8:	4602      	mov	r2, r0
 8013fda:	460b      	mov	r3, r1
 8013fdc:	4613      	mov	r3, r2
 8013fde:	4618      	mov	r0, r3
 8013fe0:	f7ff fcb3 	bl	801394a <ENDIANNESS_hton32>
 8013fe4:	4603      	mov	r3, r0
 8013fe6:	f8c7 305a 	str.w	r3, [r7, #90]	; 0x5a
 8013fea:	f7f8 ff23 	bl	800ce34 <EMBENET_NODE_GetGroupCount>
 8013fee:	f8c7 008c 	str.w	r0, [r7, #140]	; 0x8c
 8013ff2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8013ff6:	2b14      	cmp	r3, #20
 8013ff8:	d902      	bls.n	8014000 <sendStatusConfirmationIndication+0x198>
 8013ffa:	2314      	movs	r3, #20
 8013ffc:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8014000:	2300      	movs	r3, #0
 8014002:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8014006:	e016      	b.n	8014036 <sendStatusConfirmationIndication+0x1ce>
 8014008:	f8d7 0088 	ldr.w	r0, [r7, #136]	; 0x88
 801400c:	f7f8 ff19 	bl	800ce42 <EMBENET_NODE_GetGroupByIndex>
 8014010:	4603      	mov	r3, r0
 8014012:	4618      	mov	r0, r3
 8014014:	f7ff fc88 	bl	8013928 <ENDIANNESS_hton16>
 8014018:	4603      	mov	r3, r0
 801401a:	461a      	mov	r2, r3
 801401c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8014020:	3310      	adds	r3, #16
 8014022:	005b      	lsls	r3, r3, #1
 8014024:	3390      	adds	r3, #144	; 0x90
 8014026:	443b      	add	r3, r7
 8014028:	f823 2c52 	strh.w	r2, [r3, #-82]
 801402c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8014030:	3301      	adds	r3, #1
 8014032:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8014036:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 801403a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 801403e:	429a      	cmp	r2, r3
 8014040:	d3e2      	bcc.n	8014008 <sendStatusConfirmationIndication+0x1a0>
 8014042:	68fb      	ldr	r3, [r7, #12]
 8014044:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8014048:	68fb      	ldr	r3, [r7, #12]
 801404a:	8d1a      	ldrh	r2, [r3, #40]	; 0x28
 801404c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8014050:	3311      	adds	r3, #17
 8014052:	005b      	lsls	r3, r3, #1
 8014054:	f107 013c 	add.w	r1, r7, #60	; 0x3c
 8014058:	9300      	str	r3, [sp, #0]
 801405a:	460b      	mov	r3, r1
 801405c:	68b9      	ldr	r1, [r7, #8]
 801405e:	f7f8 fb61 	bl	800c724 <EMBENET_UDP_Send>
 8014062:	4603      	mov	r3, r0
 8014064:	2b00      	cmp	r3, #0
 8014066:	d120      	bne.n	80140aa <sendStatusConfirmationIndication+0x242>
 8014068:	79fb      	ldrb	r3, [r7, #7]
 801406a:	2b21      	cmp	r3, #33	; 0x21
 801406c:	d10e      	bne.n	801408c <sendStatusConfirmationIndication+0x224>
 801406e:	4a23      	ldr	r2, [pc, #140]	; (80140fc <sendStatusConfirmationIndication+0x294>)
 8014070:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8014074:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014078:	e883 0003 	stmia.w	r3, {r0, r1}
 801407c:	4a20      	ldr	r2, [pc, #128]	; (8014100 <sendStatusConfirmationIndication+0x298>)
 801407e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8014082:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014086:	f001 f8bf 	bl	8015208 <LOGGER_PrintLine>
 801408a:	e02e      	b.n	80140ea <sendStatusConfirmationIndication+0x282>
 801408c:	4a1b      	ldr	r2, [pc, #108]	; (80140fc <sendStatusConfirmationIndication+0x294>)
 801408e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014092:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014096:	e883 0003 	stmia.w	r3, {r0, r1}
 801409a:	4a1a      	ldr	r2, [pc, #104]	; (8014104 <sendStatusConfirmationIndication+0x29c>)
 801409c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80140a0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80140a4:	f001 f8b0 	bl	8015208 <LOGGER_PrintLine>
 80140a8:	e01f      	b.n	80140ea <sendStatusConfirmationIndication+0x282>
 80140aa:	79fb      	ldrb	r3, [r7, #7]
 80140ac:	2b21      	cmp	r3, #33	; 0x21
 80140ae:	d10e      	bne.n	80140ce <sendStatusConfirmationIndication+0x266>
 80140b0:	4a15      	ldr	r2, [pc, #84]	; (8014108 <sendStatusConfirmationIndication+0x2a0>)
 80140b2:	f107 031c 	add.w	r3, r7, #28
 80140b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80140ba:	e883 0003 	stmia.w	r3, {r0, r1}
 80140be:	4a13      	ldr	r2, [pc, #76]	; (801410c <sendStatusConfirmationIndication+0x2a4>)
 80140c0:	f107 031c 	add.w	r3, r7, #28
 80140c4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80140c8:	f001 f89e 	bl	8015208 <LOGGER_PrintLine>
 80140cc:	e00d      	b.n	80140ea <sendStatusConfirmationIndication+0x282>
 80140ce:	4a0e      	ldr	r2, [pc, #56]	; (8014108 <sendStatusConfirmationIndication+0x2a0>)
 80140d0:	f107 0314 	add.w	r3, r7, #20
 80140d4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80140d8:	e883 0003 	stmia.w	r3, {r0, r1}
 80140dc:	4a0c      	ldr	r2, [pc, #48]	; (8014110 <sendStatusConfirmationIndication+0x2a8>)
 80140de:	f107 0314 	add.w	r3, r7, #20
 80140e2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80140e6:	f001 f88f 	bl	8015208 <LOGGER_PrintLine>
 80140ea:	bf00      	nop
 80140ec:	3794      	adds	r7, #148	; 0x94
 80140ee:	46bd      	mov	sp, r7
 80140f0:	bd90      	pop	{r4, r7, pc}
 80140f2:	bf00      	nop
 80140f4:	0802f0c4 	.word	0x0802f0c4
 80140f8:	0802f128 	.word	0x0802f128
 80140fc:	0802f190 	.word	0x0802f190
 8014100:	0802f2b4 	.word	0x0802f2b4
 8014104:	0802f2d4 	.word	0x0802f2d4
 8014108:	0802f198 	.word	0x0802f198
 801410c:	0802f2f0 	.word	0x0802f2f0
 8014110:	0802f318 	.word	0x0802f318

08014114 <sendCells>:
 8014114:	b580      	push	{r7, lr}
 8014116:	b0a6      	sub	sp, #152	; 0x98
 8014118:	af02      	add	r7, sp, #8
 801411a:	60f8      	str	r0, [r7, #12]
 801411c:	60b9      	str	r1, [r7, #8]
 801411e:	4613      	mov	r3, r2
 8014120:	71fb      	strb	r3, [r7, #7]
 8014122:	68fb      	ldr	r3, [r7, #12]
 8014124:	2b00      	cmp	r3, #0
 8014126:	d002      	beq.n	801412e <sendCells+0x1a>
 8014128:	68bb      	ldr	r3, [r7, #8]
 801412a:	2b00      	cmp	r3, #0
 801412c:	d105      	bne.n	801413a <sendCells+0x26>
 801412e:	f240 1205 	movw	r2, #261	; 0x105
 8014132:	49a0      	ldr	r1, [pc, #640]	; (80143b4 <sendCells+0x2a0>)
 8014134:	48a0      	ldr	r0, [pc, #640]	; (80143b8 <sendCells+0x2a4>)
 8014136:	f7ed fae7 	bl	8001708 <EXPECT_OnAbortHandler>
 801413a:	79fb      	ldrb	r3, [r7, #7]
 801413c:	2b31      	cmp	r3, #49	; 0x31
 801413e:	d008      	beq.n	8014152 <sendCells+0x3e>
 8014140:	79fb      	ldrb	r3, [r7, #7]
 8014142:	2b32      	cmp	r3, #50	; 0x32
 8014144:	d005      	beq.n	8014152 <sendCells+0x3e>
 8014146:	f44f 7283 	mov.w	r2, #262	; 0x106
 801414a:	499a      	ldr	r1, [pc, #616]	; (80143b4 <sendCells+0x2a0>)
 801414c:	489a      	ldr	r0, [pc, #616]	; (80143b8 <sendCells+0x2a4>)
 801414e:	f7ed fadb 	bl	8001708 <EXPECT_OnAbortHandler>
 8014152:	79fb      	ldrb	r3, [r7, #7]
 8014154:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8014158:	f015 f843 	bl	80291e2 <EMBENET_NODE_DIAG_GetCellsCount>
 801415c:	f8c7 0084 	str.w	r0, [r7, #132]	; 0x84
 8014160:	f8d7 1084 	ldr.w	r1, [r7, #132]	; 0x84
 8014164:	4b95      	ldr	r3, [pc, #596]	; (80143bc <sendCells+0x2a8>)
 8014166:	fba3 2301 	umull	r2, r3, r3, r1
 801416a:	089a      	lsrs	r2, r3, #2
 801416c:	4613      	mov	r3, r2
 801416e:	009b      	lsls	r3, r3, #2
 8014170:	4413      	add	r3, r2
 8014172:	1aca      	subs	r2, r1, r3
 8014174:	2a00      	cmp	r2, #0
 8014176:	d009      	beq.n	801418c <sendCells+0x78>
 8014178:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 801417c:	4a8f      	ldr	r2, [pc, #572]	; (80143bc <sendCells+0x2a8>)
 801417e:	fba2 2303 	umull	r2, r3, r2, r3
 8014182:	089b      	lsrs	r3, r3, #2
 8014184:	b2db      	uxtb	r3, r3
 8014186:	3301      	adds	r3, #1
 8014188:	b2db      	uxtb	r3, r3
 801418a:	e006      	b.n	801419a <sendCells+0x86>
 801418c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8014190:	4a8a      	ldr	r2, [pc, #552]	; (80143bc <sendCells+0x2a8>)
 8014192:	fba2 2303 	umull	r2, r3, r2, r3
 8014196:	089b      	lsrs	r3, r3, #2
 8014198:	b2db      	uxtb	r3, r3
 801419a:	4618      	mov	r0, r3
 801419c:	f7ff fbb9 	bl	8013912 <ENDIANNESS_hton8>
 80141a0:	4603      	mov	r3, r0
 80141a2:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 80141a6:	2000      	movs	r0, #0
 80141a8:	f7ff fbb3 	bl	8013912 <ENDIANNESS_hton8>
 80141ac:	4603      	mov	r3, r0
 80141ae:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 80141b2:	2300      	movs	r3, #0
 80141b4:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80141b8:	2300      	movs	r3, #0
 80141ba:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80141be:	e0ec      	b.n	801439a <sendCells+0x286>
 80141c0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80141c4:	f8d7 1088 	ldr.w	r1, [r7, #136]	; 0x88
 80141c8:	4618      	mov	r0, r3
 80141ca:	f015 f811 	bl	80291f0 <EMBENET_NODE_DIAG_GetCellInfo>
 80141ce:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 80141d2:	2b00      	cmp	r3, #0
 80141d4:	f000 80dc 	beq.w	8014390 <sendCells+0x27c>
 80141d8:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 80141dc:	2b00      	cmp	r3, #0
 80141de:	f000 80d7 	beq.w	8014390 <sendCells+0x27c>
 80141e2:	f897 3030 	ldrb.w	r3, [r7, #48]	; 0x30
 80141e6:	00db      	lsls	r3, r3, #3
 80141e8:	b2da      	uxtb	r2, r3
 80141ea:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 80141ee:	4313      	orrs	r3, r2
 80141f0:	b2db      	uxtb	r3, r3
 80141f2:	4618      	mov	r0, r3
 80141f4:	f7ff fb8d 	bl	8013912 <ENDIANNESS_hton8>
 80141f8:	4603      	mov	r3, r0
 80141fa:	4619      	mov	r1, r3
 80141fc:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8014200:	4613      	mov	r3, r2
 8014202:	005b      	lsls	r3, r3, #1
 8014204:	4413      	add	r3, r2
 8014206:	009b      	lsls	r3, r3, #2
 8014208:	4413      	add	r3, r2
 801420a:	3390      	adds	r3, #144	; 0x90
 801420c:	443b      	add	r3, r7
 801420e:	3b4d      	subs	r3, #77	; 0x4d
 8014210:	460a      	mov	r2, r1
 8014212:	701a      	strb	r2, [r3, #0]
 8014214:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8014218:	4618      	mov	r0, r3
 801421a:	f7ff fb7a 	bl	8013912 <ENDIANNESS_hton8>
 801421e:	4603      	mov	r3, r0
 8014220:	4619      	mov	r1, r3
 8014222:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8014226:	4613      	mov	r3, r2
 8014228:	005b      	lsls	r3, r3, #1
 801422a:	4413      	add	r3, r2
 801422c:	009b      	lsls	r3, r3, #2
 801422e:	4413      	add	r3, r2
 8014230:	3390      	adds	r3, #144	; 0x90
 8014232:	443b      	add	r3, r7
 8014234:	3b49      	subs	r3, #73	; 0x49
 8014236:	460a      	mov	r2, r1
 8014238:	701a      	strb	r2, [r3, #0]
 801423a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 801423e:	4618      	mov	r0, r3
 8014240:	f7ff fb67 	bl	8013912 <ENDIANNESS_hton8>
 8014244:	4603      	mov	r3, r0
 8014246:	4619      	mov	r1, r3
 8014248:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 801424c:	4613      	mov	r3, r2
 801424e:	005b      	lsls	r3, r3, #1
 8014250:	4413      	add	r3, r2
 8014252:	009b      	lsls	r3, r3, #2
 8014254:	4413      	add	r3, r2
 8014256:	3390      	adds	r3, #144	; 0x90
 8014258:	443b      	add	r3, r7
 801425a:	3b4a      	subs	r3, #74	; 0x4a
 801425c:	460a      	mov	r2, r1
 801425e:	701a      	strb	r2, [r3, #0]
 8014260:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8014264:	4610      	mov	r0, r2
 8014266:	4619      	mov	r1, r3
 8014268:	f7ff fb7f 	bl	801396a <ENDIANNESS_hton64>
 801426c:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8014270:	4613      	mov	r3, r2
 8014272:	005b      	lsls	r3, r3, #1
 8014274:	4413      	add	r3, r2
 8014276:	009b      	lsls	r3, r3, #2
 8014278:	4413      	add	r3, r2
 801427a:	3390      	adds	r3, #144	; 0x90
 801427c:	443b      	add	r3, r7
 801427e:	3b48      	subs	r3, #72	; 0x48
 8014280:	6018      	str	r0, [r3, #0]
 8014282:	6059      	str	r1, [r3, #4]
 8014284:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 8014286:	4618      	mov	r0, r3
 8014288:	f7ff fb4e 	bl	8013928 <ENDIANNESS_hton16>
 801428c:	4603      	mov	r3, r0
 801428e:	4619      	mov	r1, r3
 8014290:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8014294:	4613      	mov	r3, r2
 8014296:	005b      	lsls	r3, r3, #1
 8014298:	4413      	add	r3, r2
 801429a:	009b      	lsls	r3, r3, #2
 801429c:	4413      	add	r3, r2
 801429e:	3390      	adds	r3, #144	; 0x90
 80142a0:	443b      	add	r3, r7
 80142a2:	3b4c      	subs	r3, #76	; 0x4c
 80142a4:	460a      	mov	r2, r1
 80142a6:	801a      	strh	r2, [r3, #0]
 80142a8:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80142ac:	3301      	adds	r3, #1
 80142ae:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 80142b2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80142b6:	2b05      	cmp	r3, #5
 80142b8:	d006      	beq.n	80142c8 <sendCells+0x1b4>
 80142ba:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80142be:	3301      	adds	r3, #1
 80142c0:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 80142c4:	429a      	cmp	r2, r3
 80142c6:	d163      	bne.n	8014390 <sendCells+0x27c>
 80142c8:	68fb      	ldr	r3, [r7, #12]
 80142ca:	f103 0028 	add.w	r0, r3, #40	; 0x28
 80142ce:	68fb      	ldr	r3, [r7, #12]
 80142d0:	8d19      	ldrh	r1, [r3, #40]	; 0x28
 80142d2:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 80142d6:	4613      	mov	r3, r2
 80142d8:	005b      	lsls	r3, r3, #1
 80142da:	4413      	add	r3, r2
 80142dc:	009b      	lsls	r3, r3, #2
 80142de:	4413      	add	r3, r2
 80142e0:	3303      	adds	r3, #3
 80142e2:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80142e6:	9300      	str	r3, [sp, #0]
 80142e8:	4613      	mov	r3, r2
 80142ea:	460a      	mov	r2, r1
 80142ec:	68b9      	ldr	r1, [r7, #8]
 80142ee:	f7f8 fa19 	bl	800c724 <EMBENET_UDP_Send>
 80142f2:	4603      	mov	r3, r0
 80142f4:	2b00      	cmp	r3, #0
 80142f6:	d122      	bne.n	801433e <sendCells+0x22a>
 80142f8:	79fb      	ldrb	r3, [r7, #7]
 80142fa:	2b31      	cmp	r3, #49	; 0x31
 80142fc:	d10f      	bne.n	801431e <sendCells+0x20a>
 80142fe:	4a30      	ldr	r2, [pc, #192]	; (80143c0 <sendCells+0x2ac>)
 8014300:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8014304:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014308:	e883 0003 	stmia.w	r3, {r0, r1}
 801430c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8014310:	4a2c      	ldr	r2, [pc, #176]	; (80143c4 <sendCells+0x2b0>)
 8014312:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8014316:	c903      	ldmia	r1, {r0, r1}
 8014318:	f000 ff76 	bl	8015208 <LOGGER_PrintLine>
 801431c:	e02f      	b.n	801437e <sendCells+0x26a>
 801431e:	4a28      	ldr	r2, [pc, #160]	; (80143c0 <sendCells+0x2ac>)
 8014320:	f107 0320 	add.w	r3, r7, #32
 8014324:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014328:	e883 0003 	stmia.w	r3, {r0, r1}
 801432c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8014330:	4a25      	ldr	r2, [pc, #148]	; (80143c8 <sendCells+0x2b4>)
 8014332:	f107 0120 	add.w	r1, r7, #32
 8014336:	c903      	ldmia	r1, {r0, r1}
 8014338:	f000 ff66 	bl	8015208 <LOGGER_PrintLine>
 801433c:	e01f      	b.n	801437e <sendCells+0x26a>
 801433e:	79fb      	ldrb	r3, [r7, #7]
 8014340:	2b31      	cmp	r3, #49	; 0x31
 8014342:	d10e      	bne.n	8014362 <sendCells+0x24e>
 8014344:	4a21      	ldr	r2, [pc, #132]	; (80143cc <sendCells+0x2b8>)
 8014346:	f107 0318 	add.w	r3, r7, #24
 801434a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801434e:	e883 0003 	stmia.w	r3, {r0, r1}
 8014352:	4a1f      	ldr	r2, [pc, #124]	; (80143d0 <sendCells+0x2bc>)
 8014354:	f107 0318 	add.w	r3, r7, #24
 8014358:	e893 0003 	ldmia.w	r3, {r0, r1}
 801435c:	f000 ff54 	bl	8015208 <LOGGER_PrintLine>
 8014360:	e00d      	b.n	801437e <sendCells+0x26a>
 8014362:	4a1a      	ldr	r2, [pc, #104]	; (80143cc <sendCells+0x2b8>)
 8014364:	f107 0310 	add.w	r3, r7, #16
 8014368:	e892 0003 	ldmia.w	r2, {r0, r1}
 801436c:	e883 0003 	stmia.w	r3, {r0, r1}
 8014370:	4a18      	ldr	r2, [pc, #96]	; (80143d4 <sendCells+0x2c0>)
 8014372:	f107 0310 	add.w	r3, r7, #16
 8014376:	e893 0003 	ldmia.w	r3, {r0, r1}
 801437a:	f000 ff45 	bl	8015208 <LOGGER_PrintLine>
 801437e:	2300      	movs	r3, #0
 8014380:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8014384:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 8014388:	3301      	adds	r3, #1
 801438a:	b2db      	uxtb	r3, r3
 801438c:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 8014390:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8014394:	3301      	adds	r3, #1
 8014396:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 801439a:	f8d7 2088 	ldr.w	r2, [r7, #136]	; 0x88
 801439e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80143a2:	429a      	cmp	r2, r3
 80143a4:	f4ff af0c 	bcc.w	80141c0 <sendCells+0xac>
 80143a8:	bf00      	nop
 80143aa:	bf00      	nop
 80143ac:	3790      	adds	r7, #144	; 0x90
 80143ae:	46bd      	mov	sp, r7
 80143b0:	bd80      	pop	{r7, pc}
 80143b2:	bf00      	nop
 80143b4:	0802f0c4 	.word	0x0802f0c4
 80143b8:	0802f128 	.word	0x0802f128
 80143bc:	cccccccd 	.word	0xcccccccd
 80143c0:	0802f190 	.word	0x0802f190
 80143c4:	0802f340 	.word	0x0802f340
 80143c8:	0802f36c 	.word	0x0802f36c
 80143cc:	0802f198 	.word	0x0802f198
 80143d0:	0802f398 	.word	0x0802f398
 80143d4:	0802f3c0 	.word	0x0802f3c0

080143d8 <sendNeighborhood>:
 80143d8:	b580      	push	{r7, lr}
 80143da:	b0a8      	sub	sp, #160	; 0xa0
 80143dc:	af02      	add	r7, sp, #8
 80143de:	60f8      	str	r0, [r7, #12]
 80143e0:	60b9      	str	r1, [r7, #8]
 80143e2:	4613      	mov	r3, r2
 80143e4:	71fb      	strb	r3, [r7, #7]
 80143e6:	68fb      	ldr	r3, [r7, #12]
 80143e8:	2b00      	cmp	r3, #0
 80143ea:	d002      	beq.n	80143f2 <sendNeighborhood+0x1a>
 80143ec:	68bb      	ldr	r3, [r7, #8]
 80143ee:	2b00      	cmp	r3, #0
 80143f0:	d105      	bne.n	80143fe <sendNeighborhood+0x26>
 80143f2:	f44f 729c 	mov.w	r2, #312	; 0x138
 80143f6:	4988      	ldr	r1, [pc, #544]	; (8014618 <sendNeighborhood+0x240>)
 80143f8:	4888      	ldr	r0, [pc, #544]	; (801461c <sendNeighborhood+0x244>)
 80143fa:	f7ed f985 	bl	8001708 <EXPECT_OnAbortHandler>
 80143fe:	79fb      	ldrb	r3, [r7, #7]
 8014400:	2b41      	cmp	r3, #65	; 0x41
 8014402:	d008      	beq.n	8014416 <sendNeighborhood+0x3e>
 8014404:	79fb      	ldrb	r3, [r7, #7]
 8014406:	2b42      	cmp	r3, #66	; 0x42
 8014408:	d005      	beq.n	8014416 <sendNeighborhood+0x3e>
 801440a:	f240 1239 	movw	r2, #313	; 0x139
 801440e:	4982      	ldr	r1, [pc, #520]	; (8014618 <sendNeighborhood+0x240>)
 8014410:	4882      	ldr	r0, [pc, #520]	; (801461c <sendNeighborhood+0x244>)
 8014412:	f7ed f979 	bl	8001708 <EXPECT_OnAbortHandler>
 8014416:	79fb      	ldrb	r3, [r7, #7]
 8014418:	4618      	mov	r0, r3
 801441a:	f7ff fa7a 	bl	8013912 <ENDIANNESS_hton8>
 801441e:	4603      	mov	r3, r0
 8014420:	f887 3040 	strb.w	r3, [r7, #64]	; 0x40
 8014424:	f014 feb8 	bl	8029198 <d0d4f6737d0eed46e2bc20295cf5671c83cb8538>
 8014428:	f8c7 008c 	str.w	r0, [r7, #140]	; 0x8c
 801442c:	f8d7 108c 	ldr.w	r1, [r7, #140]	; 0x8c
 8014430:	4b7b      	ldr	r3, [pc, #492]	; (8014620 <sendNeighborhood+0x248>)
 8014432:	fba3 2301 	umull	r2, r3, r3, r1
 8014436:	1aca      	subs	r2, r1, r3
 8014438:	0852      	lsrs	r2, r2, #1
 801443a:	4413      	add	r3, r2
 801443c:	089a      	lsrs	r2, r3, #2
 801443e:	4613      	mov	r3, r2
 8014440:	00db      	lsls	r3, r3, #3
 8014442:	1a9b      	subs	r3, r3, r2
 8014444:	1aca      	subs	r2, r1, r3
 8014446:	2a00      	cmp	r2, #0
 8014448:	d00c      	beq.n	8014464 <sendNeighborhood+0x8c>
 801444a:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 801444e:	4b74      	ldr	r3, [pc, #464]	; (8014620 <sendNeighborhood+0x248>)
 8014450:	fba3 1302 	umull	r1, r3, r3, r2
 8014454:	1ad2      	subs	r2, r2, r3
 8014456:	0852      	lsrs	r2, r2, #1
 8014458:	4413      	add	r3, r2
 801445a:	089b      	lsrs	r3, r3, #2
 801445c:	b2db      	uxtb	r3, r3
 801445e:	3301      	adds	r3, #1
 8014460:	b2db      	uxtb	r3, r3
 8014462:	e009      	b.n	8014478 <sendNeighborhood+0xa0>
 8014464:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 8014468:	4b6d      	ldr	r3, [pc, #436]	; (8014620 <sendNeighborhood+0x248>)
 801446a:	fba3 1302 	umull	r1, r3, r3, r2
 801446e:	1ad2      	subs	r2, r2, r3
 8014470:	0852      	lsrs	r2, r2, #1
 8014472:	4413      	add	r3, r2
 8014474:	089b      	lsrs	r3, r3, #2
 8014476:	b2db      	uxtb	r3, r3
 8014478:	4618      	mov	r0, r3
 801447a:	f7ff fa4a 	bl	8013912 <ENDIANNESS_hton8>
 801447e:	4603      	mov	r3, r0
 8014480:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 8014484:	2300      	movs	r3, #0
 8014486:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 801448a:	2300      	movs	r3, #0
 801448c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8014490:	e0b5      	b.n	80145fe <sendNeighborhood+0x226>
 8014492:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8014496:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 801449a:	4618      	mov	r0, r3
 801449c:	f014 fe83 	bl	80291a6 <EMBENET_NODE_DIAG_GetNeighborInfo>
 80144a0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80144a4:	4313      	orrs	r3, r2
 80144a6:	f000 80a5 	beq.w	80145f4 <sendNeighborhood+0x21c>
 80144aa:	f897 3039 	ldrb.w	r3, [r7, #57]	; 0x39
 80144ae:	011b      	lsls	r3, r3, #4
 80144b0:	b2db      	uxtb	r3, r3
 80144b2:	4618      	mov	r0, r3
 80144b4:	f7ff fa2d 	bl	8013912 <ENDIANNESS_hton8>
 80144b8:	4603      	mov	r3, r0
 80144ba:	4619      	mov	r1, r3
 80144bc:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80144c0:	4613      	mov	r3, r2
 80144c2:	009b      	lsls	r3, r3, #2
 80144c4:	4413      	add	r3, r2
 80144c6:	005b      	lsls	r3, r3, #1
 80144c8:	3398      	adds	r3, #152	; 0x98
 80144ca:	443b      	add	r3, r7
 80144cc:	3b55      	subs	r3, #85	; 0x55
 80144ce:	460a      	mov	r2, r1
 80144d0:	701a      	strb	r2, [r3, #0]
 80144d2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80144d6:	4610      	mov	r0, r2
 80144d8:	4619      	mov	r1, r3
 80144da:	f7ff fa46 	bl	801396a <ENDIANNESS_hton64>
 80144de:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80144e2:	4613      	mov	r3, r2
 80144e4:	009b      	lsls	r3, r3, #2
 80144e6:	4413      	add	r3, r2
 80144e8:	005b      	lsls	r3, r3, #1
 80144ea:	3398      	adds	r3, #152	; 0x98
 80144ec:	443b      	add	r3, r7
 80144ee:	3b58      	subs	r3, #88	; 0x58
 80144f0:	6058      	str	r0, [r3, #4]
 80144f2:	6099      	str	r1, [r3, #8]
 80144f4:	f997 1038 	ldrsb.w	r1, [r7, #56]	; 0x38
 80144f8:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80144fc:	4613      	mov	r3, r2
 80144fe:	009b      	lsls	r3, r3, #2
 8014500:	4413      	add	r3, r2
 8014502:	005b      	lsls	r3, r3, #1
 8014504:	3398      	adds	r3, #152	; 0x98
 8014506:	443b      	add	r3, r7
 8014508:	3b4c      	subs	r3, #76	; 0x4c
 801450a:	460a      	mov	r2, r1
 801450c:	701a      	strb	r2, [r3, #0]
 801450e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8014512:	3301      	adds	r3, #1
 8014514:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8014518:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801451c:	2b07      	cmp	r3, #7
 801451e:	d006      	beq.n	801452e <sendNeighborhood+0x156>
 8014520:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8014524:	3301      	adds	r3, #1
 8014526:	f8d7 208c 	ldr.w	r2, [r7, #140]	; 0x8c
 801452a:	429a      	cmp	r2, r3
 801452c:	d162      	bne.n	80145f4 <sendNeighborhood+0x21c>
 801452e:	68fb      	ldr	r3, [r7, #12]
 8014530:	f103 0028 	add.w	r0, r3, #40	; 0x28
 8014534:	68fb      	ldr	r3, [r7, #12]
 8014536:	8d19      	ldrh	r1, [r3, #40]	; 0x28
 8014538:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801453c:	4613      	mov	r3, r2
 801453e:	009b      	lsls	r3, r3, #2
 8014540:	4413      	add	r3, r2
 8014542:	005b      	lsls	r3, r3, #1
 8014544:	3303      	adds	r3, #3
 8014546:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801454a:	9300      	str	r3, [sp, #0]
 801454c:	4613      	mov	r3, r2
 801454e:	460a      	mov	r2, r1
 8014550:	68b9      	ldr	r1, [r7, #8]
 8014552:	f7f8 f8e7 	bl	800c724 <EMBENET_UDP_Send>
 8014556:	4603      	mov	r3, r0
 8014558:	2b00      	cmp	r3, #0
 801455a:	d122      	bne.n	80145a2 <sendNeighborhood+0x1ca>
 801455c:	79fb      	ldrb	r3, [r7, #7]
 801455e:	2b41      	cmp	r3, #65	; 0x41
 8014560:	d10f      	bne.n	8014582 <sendNeighborhood+0x1aa>
 8014562:	4a30      	ldr	r2, [pc, #192]	; (8014624 <sendNeighborhood+0x24c>)
 8014564:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8014568:	e892 0003 	ldmia.w	r2, {r0, r1}
 801456c:	e883 0003 	stmia.w	r3, {r0, r1}
 8014570:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8014574:	4a2c      	ldr	r2, [pc, #176]	; (8014628 <sendNeighborhood+0x250>)
 8014576:	f107 0128 	add.w	r1, r7, #40	; 0x28
 801457a:	c903      	ldmia	r1, {r0, r1}
 801457c:	f000 fe44 	bl	8015208 <LOGGER_PrintLine>
 8014580:	e02f      	b.n	80145e2 <sendNeighborhood+0x20a>
 8014582:	4a28      	ldr	r2, [pc, #160]	; (8014624 <sendNeighborhood+0x24c>)
 8014584:	f107 0320 	add.w	r3, r7, #32
 8014588:	e892 0003 	ldmia.w	r2, {r0, r1}
 801458c:	e883 0003 	stmia.w	r3, {r0, r1}
 8014590:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8014594:	4a25      	ldr	r2, [pc, #148]	; (801462c <sendNeighborhood+0x254>)
 8014596:	f107 0120 	add.w	r1, r7, #32
 801459a:	c903      	ldmia	r1, {r0, r1}
 801459c:	f000 fe34 	bl	8015208 <LOGGER_PrintLine>
 80145a0:	e01f      	b.n	80145e2 <sendNeighborhood+0x20a>
 80145a2:	79fb      	ldrb	r3, [r7, #7]
 80145a4:	2b41      	cmp	r3, #65	; 0x41
 80145a6:	d10e      	bne.n	80145c6 <sendNeighborhood+0x1ee>
 80145a8:	4a21      	ldr	r2, [pc, #132]	; (8014630 <sendNeighborhood+0x258>)
 80145aa:	f107 0318 	add.w	r3, r7, #24
 80145ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 80145b2:	e883 0003 	stmia.w	r3, {r0, r1}
 80145b6:	4a1f      	ldr	r2, [pc, #124]	; (8014634 <sendNeighborhood+0x25c>)
 80145b8:	f107 0318 	add.w	r3, r7, #24
 80145bc:	e893 0003 	ldmia.w	r3, {r0, r1}
 80145c0:	f000 fe22 	bl	8015208 <LOGGER_PrintLine>
 80145c4:	e00d      	b.n	80145e2 <sendNeighborhood+0x20a>
 80145c6:	4a1a      	ldr	r2, [pc, #104]	; (8014630 <sendNeighborhood+0x258>)
 80145c8:	f107 0310 	add.w	r3, r7, #16
 80145cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80145d0:	e883 0003 	stmia.w	r3, {r0, r1}
 80145d4:	4a18      	ldr	r2, [pc, #96]	; (8014638 <sendNeighborhood+0x260>)
 80145d6:	f107 0310 	add.w	r3, r7, #16
 80145da:	e893 0003 	ldmia.w	r3, {r0, r1}
 80145de:	f000 fe13 	bl	8015208 <LOGGER_PrintLine>
 80145e2:	2300      	movs	r3, #0
 80145e4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80145e8:	f897 3041 	ldrb.w	r3, [r7, #65]	; 0x41
 80145ec:	3301      	adds	r3, #1
 80145ee:	b2db      	uxtb	r3, r3
 80145f0:	f887 3041 	strb.w	r3, [r7, #65]	; 0x41
 80145f4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80145f8:	3301      	adds	r3, #1
 80145fa:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80145fe:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 8014602:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8014606:	429a      	cmp	r2, r3
 8014608:	f4ff af43 	bcc.w	8014492 <sendNeighborhood+0xba>
 801460c:	bf00      	nop
 801460e:	bf00      	nop
 8014610:	3798      	adds	r7, #152	; 0x98
 8014612:	46bd      	mov	sp, r7
 8014614:	bd80      	pop	{r7, pc}
 8014616:	bf00      	nop
 8014618:	0802f0c4 	.word	0x0802f0c4
 801461c:	0802f128 	.word	0x0802f128
 8014620:	24924925 	.word	0x24924925
 8014624:	0802f190 	.word	0x0802f190
 8014628:	0802f3e8 	.word	0x0802f3e8
 801462c:	0802f420 	.word	0x0802f420
 8014630:	0802f198 	.word	0x0802f198
 8014634:	0802f454 	.word	0x0802f454
 8014638:	0802f484 	.word	0x0802f484

0801463c <updRxHandler>:
 801463c:	b580      	push	{r7, lr}
 801463e:	b08a      	sub	sp, #40	; 0x28
 8014640:	af02      	add	r7, sp, #8
 8014642:	60f8      	str	r0, [r7, #12]
 8014644:	60b9      	str	r1, [r7, #8]
 8014646:	603b      	str	r3, [r7, #0]
 8014648:	4613      	mov	r3, r2
 801464a:	80fb      	strh	r3, [r7, #6]
 801464c:	68fb      	ldr	r3, [r7, #12]
 801464e:	2b00      	cmp	r3, #0
 8014650:	d105      	bne.n	801465e <updRxHandler+0x22>
 8014652:	f44f 72b6 	mov.w	r2, #364	; 0x16c
 8014656:	4936      	ldr	r1, [pc, #216]	; (8014730 <updRxHandler+0xf4>)
 8014658:	4836      	ldr	r0, [pc, #216]	; (8014734 <updRxHandler+0xf8>)
 801465a:	f7ed f855 	bl	8001708 <EXPECT_OnAbortHandler>
 801465e:	68fb      	ldr	r3, [r7, #12]
 8014660:	68db      	ldr	r3, [r3, #12]
 8014662:	2b00      	cmp	r3, #0
 8014664:	d105      	bne.n	8014672 <updRxHandler+0x36>
 8014666:	f44f 72b7 	mov.w	r2, #366	; 0x16e
 801466a:	4931      	ldr	r1, [pc, #196]	; (8014730 <updRxHandler+0xf4>)
 801466c:	4832      	ldr	r0, [pc, #200]	; (8014738 <updRxHandler+0xfc>)
 801466e:	f7ed f84b 	bl	8001708 <EXPECT_OnAbortHandler>
 8014672:	683b      	ldr	r3, [r7, #0]
 8014674:	2b00      	cmp	r3, #0
 8014676:	d105      	bne.n	8014684 <updRxHandler+0x48>
 8014678:	f44f 72b8 	mov.w	r2, #368	; 0x170
 801467c:	492c      	ldr	r1, [pc, #176]	; (8014730 <updRxHandler+0xf4>)
 801467e:	482f      	ldr	r0, [pc, #188]	; (801473c <updRxHandler+0x100>)
 8014680:	f7ed f842 	bl	8001708 <EXPECT_OnAbortHandler>
 8014684:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014686:	2b00      	cmp	r3, #0
 8014688:	d105      	bne.n	8014696 <updRxHandler+0x5a>
 801468a:	f44f 72b9 	mov.w	r2, #370	; 0x172
 801468e:	4928      	ldr	r1, [pc, #160]	; (8014730 <updRxHandler+0xf4>)
 8014690:	482b      	ldr	r0, [pc, #172]	; (8014740 <updRxHandler+0x104>)
 8014692:	f7ed f839 	bl	8001708 <EXPECT_OnAbortHandler>
 8014696:	68fb      	ldr	r3, [r7, #12]
 8014698:	68db      	ldr	r3, [r3, #12]
 801469a:	61fb      	str	r3, [r7, #28]
 801469c:	683b      	ldr	r3, [r7, #0]
 801469e:	61bb      	str	r3, [r7, #24]
 80146a0:	69bb      	ldr	r3, [r7, #24]
 80146a2:	781b      	ldrb	r3, [r3, #0]
 80146a4:	2b40      	cmp	r3, #64	; 0x40
 80146a6:	d025      	beq.n	80146f4 <updRxHandler+0xb8>
 80146a8:	2b40      	cmp	r3, #64	; 0x40
 80146aa:	dc29      	bgt.n	8014700 <updRxHandler+0xc4>
 80146ac:	2b30      	cmp	r3, #48	; 0x30
 80146ae:	d01b      	beq.n	80146e8 <updRxHandler+0xac>
 80146b0:	2b30      	cmp	r3, #48	; 0x30
 80146b2:	dc25      	bgt.n	8014700 <updRxHandler+0xc4>
 80146b4:	2b20      	cmp	r3, #32
 80146b6:	d011      	beq.n	80146dc <updRxHandler+0xa0>
 80146b8:	2b20      	cmp	r3, #32
 80146ba:	dc21      	bgt.n	8014700 <updRxHandler+0xc4>
 80146bc:	2b00      	cmp	r3, #0
 80146be:	d002      	beq.n	80146c6 <updRxHandler+0x8a>
 80146c0:	2b10      	cmp	r3, #16
 80146c2:	d005      	beq.n	80146d0 <updRxHandler+0x94>
 80146c4:	e01c      	b.n	8014700 <updRxHandler+0xc4>
 80146c6:	68b9      	ldr	r1, [r7, #8]
 80146c8:	69f8      	ldr	r0, [r7, #28]
 80146ca:	f7ff f97d 	bl	80139c8 <sendBasicInfoConfirmationPacket>
 80146ce:	e02b      	b.n	8014728 <updRxHandler+0xec>
 80146d0:	68ba      	ldr	r2, [r7, #8]
 80146d2:	2100      	movs	r1, #0
 80146d4:	69f8      	ldr	r0, [r7, #28]
 80146d6:	f7ff fa6b 	bl	8013bb0 <sendServiceInfoConfirmationPacket>
 80146da:	e025      	b.n	8014728 <updRxHandler+0xec>
 80146dc:	2221      	movs	r2, #33	; 0x21
 80146de:	68b9      	ldr	r1, [r7, #8]
 80146e0:	69f8      	ldr	r0, [r7, #28]
 80146e2:	f7ff fbc1 	bl	8013e68 <sendStatusConfirmationIndication>
 80146e6:	e01f      	b.n	8014728 <updRxHandler+0xec>
 80146e8:	2231      	movs	r2, #49	; 0x31
 80146ea:	68b9      	ldr	r1, [r7, #8]
 80146ec:	69f8      	ldr	r0, [r7, #28]
 80146ee:	f7ff fd11 	bl	8014114 <sendCells>
 80146f2:	e019      	b.n	8014728 <updRxHandler+0xec>
 80146f4:	2241      	movs	r2, #65	; 0x41
 80146f6:	68b9      	ldr	r1, [r7, #8]
 80146f8:	69f8      	ldr	r0, [r7, #28]
 80146fa:	f7ff fe6d 	bl	80143d8 <sendNeighborhood>
 80146fe:	e013      	b.n	8014728 <updRxHandler+0xec>
 8014700:	4a10      	ldr	r2, [pc, #64]	; (8014744 <updRxHandler+0x108>)
 8014702:	f107 0310 	add.w	r3, r7, #16
 8014706:	e892 0003 	ldmia.w	r2, {r0, r1}
 801470a:	e883 0003 	stmia.w	r3, {r0, r1}
 801470e:	69bb      	ldr	r3, [r7, #24]
 8014710:	781b      	ldrb	r3, [r3, #0]
 8014712:	461a      	mov	r2, r3
 8014714:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014716:	9300      	str	r3, [sp, #0]
 8014718:	4613      	mov	r3, r2
 801471a:	4a0b      	ldr	r2, [pc, #44]	; (8014748 <updRxHandler+0x10c>)
 801471c:	f107 0110 	add.w	r1, r7, #16
 8014720:	c903      	ldmia	r1, {r0, r1}
 8014722:	f000 fd71 	bl	8015208 <LOGGER_PrintLine>
 8014726:	bf00      	nop
 8014728:	bf00      	nop
 801472a:	3720      	adds	r7, #32
 801472c:	46bd      	mov	sp, r7
 801472e:	bd80      	pop	{r7, pc}
 8014730:	0802f0c4 	.word	0x0802f0c4
 8014734:	0802f4b0 	.word	0x0802f4b0
 8014738:	0802f4c8 	.word	0x0802f4c8
 801473c:	0802f4f0 	.word	0x0802f4f0
 8014740:	0802f508 	.word	0x0802f508
 8014744:	0802f55c 	.word	0x0802f55c
 8014748:	0802f520 	.word	0x0802f520

0801474c <enmsTask>:
 801474c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8014750:	b096      	sub	sp, #88	; 0x58
 8014752:	af00      	add	r7, sp, #0
 8014754:	64f8      	str	r0, [r7, #76]	; 0x4c
 8014756:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 801475a:	460b      	mov	r3, r1
 801475c:	f887 304b 	strb.w	r3, [r7, #75]	; 0x4b
 8014760:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8014762:	657b      	str	r3, [r7, #84]	; 0x54
 8014764:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014768:	f512 747a 	adds.w	r4, r2, #1000	; 0x3e8
 801476c:	f143 0500 	adc.w	r5, r3, #0
 8014770:	f897 104b 	ldrb.w	r1, [r7, #75]	; 0x4b
 8014774:	4622      	mov	r2, r4
 8014776:	462b      	mov	r3, r5
 8014778:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801477a:	f7f8 f917 	bl	800c9ac <EMBENET_NODE_TaskSchedule>
 801477e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014780:	e9d3 0100 	ldrd	r0, r1, [r3]
 8014784:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014788:	4290      	cmp	r0, r2
 801478a:	eb71 0303 	sbcs.w	r3, r1, r3
 801478e:	d231      	bcs.n	80147f4 <enmsTask+0xa8>
 8014790:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014792:	333c      	adds	r3, #60	; 0x3c
 8014794:	4619      	mov	r1, r3
 8014796:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8014798:	f7ff f990 	bl	8013abc <sendBasicInfoIndicationPacket>
 801479c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801479e:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80147a0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80147a4:	fb03 f102 	mul.w	r1, r3, r2
 80147a8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80147aa:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80147ac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80147b0:	fb02 f303 	mul.w	r3, r2, r3
 80147b4:	089b      	lsrs	r3, r3, #2
 80147b6:	1ac8      	subs	r0, r1, r3
 80147b8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80147ba:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80147bc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80147c0:	fb03 f102 	mul.w	r1, r3, r2
 80147c4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80147c6:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80147c8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80147cc:	fb02 f303 	mul.w	r3, r2, r3
 80147d0:	089b      	lsrs	r3, r3, #2
 80147d2:	440b      	add	r3, r1
 80147d4:	4619      	mov	r1, r3
 80147d6:	f7f8 fb09 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 80147da:	4603      	mov	r3, r0
 80147dc:	2200      	movs	r2, #0
 80147de:	4698      	mov	r8, r3
 80147e0:	4691      	mov	r9, r2
 80147e2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80147e6:	eb18 0a02 	adds.w	sl, r8, r2
 80147ea:	eb49 0b03 	adc.w	fp, r9, r3
 80147ee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80147f0:	e9c3 ab00 	strd	sl, fp, [r3]
 80147f4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80147f6:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 80147fa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80147fe:	4290      	cmp	r0, r2
 8014800:	eb71 0303 	sbcs.w	r3, r1, r3
 8014804:	d238      	bcs.n	8014878 <enmsTask+0x12c>
 8014806:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014808:	333c      	adds	r3, #60	; 0x3c
 801480a:	4619      	mov	r1, r3
 801480c:	6d78      	ldr	r0, [r7, #84]	; 0x54
 801480e:	f7ff fa63 	bl	8013cd8 <sendServiceInfoIndicationPacket>
 8014812:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014814:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8014816:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801481a:	fb03 f102 	mul.w	r1, r3, r2
 801481e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014820:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8014822:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014826:	fb02 f303 	mul.w	r3, r2, r3
 801482a:	089b      	lsrs	r3, r3, #2
 801482c:	1ac8      	subs	r0, r1, r3
 801482e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014830:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8014832:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014836:	fb03 f102 	mul.w	r1, r3, r2
 801483a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801483c:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 801483e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014842:	fb02 f303 	mul.w	r3, r2, r3
 8014846:	089b      	lsrs	r3, r3, #2
 8014848:	440b      	add	r3, r1
 801484a:	4619      	mov	r1, r3
 801484c:	f7f8 face 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014850:	4603      	mov	r3, r0
 8014852:	2200      	movs	r2, #0
 8014854:	63bb      	str	r3, [r7, #56]	; 0x38
 8014856:	63fa      	str	r2, [r7, #60]	; 0x3c
 8014858:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 801485c:	e9d7 450e 	ldrd	r4, r5, [r7, #56]	; 0x38
 8014860:	4621      	mov	r1, r4
 8014862:	1889      	adds	r1, r1, r2
 8014864:	6339      	str	r1, [r7, #48]	; 0x30
 8014866:	4629      	mov	r1, r5
 8014868:	eb43 0101 	adc.w	r1, r3, r1
 801486c:	6379      	str	r1, [r7, #52]	; 0x34
 801486e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014870:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8014874:	e9c3 1204 	strd	r1, r2, [r3, #16]
 8014878:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801487a:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 801487e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014882:	4290      	cmp	r0, r2
 8014884:	eb71 0303 	sbcs.w	r3, r1, r3
 8014888:	d239      	bcs.n	80148fe <enmsTask+0x1b2>
 801488a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801488c:	333c      	adds	r3, #60	; 0x3c
 801488e:	2222      	movs	r2, #34	; 0x22
 8014890:	4619      	mov	r1, r3
 8014892:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8014894:	f7ff fae8 	bl	8013e68 <sendStatusConfirmationIndication>
 8014898:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801489a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801489c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80148a0:	fb02 f103 	mul.w	r1, r2, r3
 80148a4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80148a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80148a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80148ac:	fb02 f303 	mul.w	r3, r2, r3
 80148b0:	089b      	lsrs	r3, r3, #2
 80148b2:	1ac8      	subs	r0, r1, r3
 80148b4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80148b6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80148b8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80148bc:	fb03 f102 	mul.w	r1, r3, r2
 80148c0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80148c2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80148c4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80148c8:	fb02 f303 	mul.w	r3, r2, r3
 80148cc:	089b      	lsrs	r3, r3, #2
 80148ce:	440b      	add	r3, r1
 80148d0:	4619      	mov	r1, r3
 80148d2:	f7f8 fa8b 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 80148d6:	4603      	mov	r3, r0
 80148d8:	2200      	movs	r2, #0
 80148da:	62bb      	str	r3, [r7, #40]	; 0x28
 80148dc:	62fa      	str	r2, [r7, #44]	; 0x2c
 80148de:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80148e2:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	; 0x28
 80148e6:	4621      	mov	r1, r4
 80148e8:	1889      	adds	r1, r1, r2
 80148ea:	6239      	str	r1, [r7, #32]
 80148ec:	4629      	mov	r1, r5
 80148ee:	eb43 0101 	adc.w	r1, r3, r1
 80148f2:	6279      	str	r1, [r7, #36]	; 0x24
 80148f4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80148f6:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80148fa:	e9c3 1202 	strd	r1, r2, [r3, #8]
 80148fe:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014900:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8014904:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014908:	4290      	cmp	r0, r2
 801490a:	eb71 0303 	sbcs.w	r3, r1, r3
 801490e:	d23d      	bcs.n	801498c <enmsTask+0x240>
 8014910:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014912:	333c      	adds	r3, #60	; 0x3c
 8014914:	2242      	movs	r2, #66	; 0x42
 8014916:	4619      	mov	r1, r3
 8014918:	6d78      	ldr	r0, [r7, #84]	; 0x54
 801491a:	f7ff fd5d 	bl	80143d8 <sendNeighborhood>
 801491e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014920:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014924:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014928:	fb03 f202 	mul.w	r2, r3, r2
 801492c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801492e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014932:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8014936:	fb01 f303 	mul.w	r3, r1, r3
 801493a:	089b      	lsrs	r3, r3, #2
 801493c:	1ad0      	subs	r0, r2, r3
 801493e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014940:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014944:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014948:	fb03 f202 	mul.w	r2, r3, r2
 801494c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801494e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014952:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8014956:	fb01 f303 	mul.w	r3, r1, r3
 801495a:	089b      	lsrs	r3, r3, #2
 801495c:	4413      	add	r3, r2
 801495e:	4619      	mov	r1, r3
 8014960:	f7f8 fa44 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014964:	4603      	mov	r3, r0
 8014966:	2200      	movs	r2, #0
 8014968:	61bb      	str	r3, [r7, #24]
 801496a:	61fa      	str	r2, [r7, #28]
 801496c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014970:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 8014974:	4621      	mov	r1, r4
 8014976:	1889      	adds	r1, r1, r2
 8014978:	6139      	str	r1, [r7, #16]
 801497a:	4629      	mov	r1, r5
 801497c:	eb43 0101 	adc.w	r1, r3, r1
 8014980:	6179      	str	r1, [r7, #20]
 8014982:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014984:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8014988:	e9c3 1206 	strd	r1, r2, [r3, #24]
 801498c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801498e:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8014992:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8014996:	4290      	cmp	r0, r2
 8014998:	eb71 0303 	sbcs.w	r3, r1, r3
 801499c:	d23d      	bcs.n	8014a1a <enmsTask+0x2ce>
 801499e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80149a0:	333c      	adds	r3, #60	; 0x3c
 80149a2:	2232      	movs	r2, #50	; 0x32
 80149a4:	4619      	mov	r1, r3
 80149a6:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80149a8:	f7ff fbb4 	bl	8014114 <sendCells>
 80149ac:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80149ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80149b2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80149b6:	fb03 f202 	mul.w	r2, r3, r2
 80149ba:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80149bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80149c0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80149c4:	fb01 f303 	mul.w	r3, r1, r3
 80149c8:	089b      	lsrs	r3, r3, #2
 80149ca:	1ad0      	subs	r0, r2, r3
 80149cc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80149ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80149d2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80149d6:	fb03 f202 	mul.w	r2, r3, r2
 80149da:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80149dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80149e0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80149e4:	fb01 f303 	mul.w	r3, r1, r3
 80149e8:	089b      	lsrs	r3, r3, #2
 80149ea:	4413      	add	r3, r2
 80149ec:	4619      	mov	r1, r3
 80149ee:	f7f8 f9fd 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 80149f2:	4603      	mov	r3, r0
 80149f4:	2200      	movs	r2, #0
 80149f6:	60bb      	str	r3, [r7, #8]
 80149f8:	60fa      	str	r2, [r7, #12]
 80149fa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80149fe:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8014a02:	4621      	mov	r1, r4
 8014a04:	1889      	adds	r1, r1, r2
 8014a06:	6039      	str	r1, [r7, #0]
 8014a08:	4629      	mov	r1, r5
 8014a0a:	eb43 0101 	adc.w	r1, r3, r1
 8014a0e:	6079      	str	r1, [r7, #4]
 8014a10:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014a12:	e9d7 1200 	ldrd	r1, r2, [r7]
 8014a16:	e9c3 1208 	strd	r1, r2, [r3, #32]
 8014a1a:	bf00      	nop
 8014a1c:	3758      	adds	r7, #88	; 0x58
 8014a1e:	46bd      	mov	sp, r7
 8014a20:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

08014a24 <ENMS_NODE_Init>:
 8014a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a26:	b0a1      	sub	sp, #132	; 0x84
 8014a28:	af0a      	add	r7, sp, #40	; 0x28
 8014a2a:	6178      	str	r0, [r7, #20]
 8014a2c:	60fa      	str	r2, [r7, #12]
 8014a2e:	60bb      	str	r3, [r7, #8]
 8014a30:	460b      	mov	r3, r1
 8014a32:	827b      	strh	r3, [r7, #18]
 8014a34:	697b      	ldr	r3, [r7, #20]
 8014a36:	2b00      	cmp	r3, #0
 8014a38:	d101      	bne.n	8014a3e <ENMS_NODE_Init+0x1a>
 8014a3a:	2301      	movs	r3, #1
 8014a3c:	e111      	b.n	8014c62 <ENMS_NODE_Init+0x23e>
 8014a3e:	68fb      	ldr	r3, [r7, #12]
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	d101      	bne.n	8014a48 <ENMS_NODE_Init+0x24>
 8014a44:	2301      	movs	r3, #1
 8014a46:	e10c      	b.n	8014c62 <ENMS_NODE_Init+0x23e>
 8014a48:	f44f 729c 	mov.w	r2, #312	; 0x138
 8014a4c:	2100      	movs	r1, #0
 8014a4e:	6978      	ldr	r0, [r7, #20]
 8014a50:	f016 fb52 	bl	802b0f8 <memset>
 8014a54:	697b      	ldr	r3, [r7, #20]
 8014a56:	3350      	adds	r3, #80	; 0x50
 8014a58:	2210      	movs	r2, #16
 8014a5a:	68f9      	ldr	r1, [r7, #12]
 8014a5c:	4618      	mov	r0, r3
 8014a5e:	f016 fbea 	bl	802b236 <memcpy>
 8014a62:	f7f8 f9d1 	bl	800ce08 <EMBENET_NODE_GetVersion>
 8014a66:	4603      	mov	r3, r0
 8014a68:	653b      	str	r3, [r7, #80]	; 0x50
 8014a6a:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 8014a6e:	697b      	ldr	r3, [r7, #20]
 8014a70:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 8014a74:	f897 2051 	ldrb.w	r2, [r7, #81]	; 0x51
 8014a78:	697b      	ldr	r3, [r7, #20]
 8014a7a:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 8014a7e:	f8b7 2052 	ldrh.w	r2, [r7, #82]	; 0x52
 8014a82:	697b      	ldr	r3, [r7, #20]
 8014a84:	f8a3 2062 	strh.w	r2, [r3, #98]	; 0x62
 8014a88:	68bb      	ldr	r3, [r7, #8]
 8014a8a:	2b00      	cmp	r3, #0
 8014a8c:	d007      	beq.n	8014a9e <ENMS_NODE_Init+0x7a>
 8014a8e:	697b      	ldr	r3, [r7, #20]
 8014a90:	3364      	adds	r3, #100	; 0x64
 8014a92:	2228      	movs	r2, #40	; 0x28
 8014a94:	68b9      	ldr	r1, [r7, #8]
 8014a96:	4618      	mov	r0, r3
 8014a98:	f016 fbcd 	bl	802b236 <memcpy>
 8014a9c:	e023      	b.n	8014ae6 <ENMS_NODE_Init+0xc2>
 8014a9e:	697b      	ldr	r3, [r7, #20]
 8014aa0:	220a      	movs	r2, #10
 8014aa2:	665a      	str	r2, [r3, #100]	; 0x64
 8014aa4:	697b      	ldr	r3, [r7, #20]
 8014aa6:	221e      	movs	r2, #30
 8014aa8:	66da      	str	r2, [r3, #108]	; 0x6c
 8014aaa:	697b      	ldr	r3, [r7, #20]
 8014aac:	221e      	movs	r2, #30
 8014aae:	675a      	str	r2, [r3, #116]	; 0x74
 8014ab0:	697b      	ldr	r3, [r7, #20]
 8014ab2:	223c      	movs	r2, #60	; 0x3c
 8014ab4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8014ab8:	697b      	ldr	r3, [r7, #20]
 8014aba:	223c      	movs	r2, #60	; 0x3c
 8014abc:	67da      	str	r2, [r3, #124]	; 0x7c
 8014abe:	697b      	ldr	r3, [r7, #20]
 8014ac0:	223c      	movs	r2, #60	; 0x3c
 8014ac2:	669a      	str	r2, [r3, #104]	; 0x68
 8014ac4:	697b      	ldr	r3, [r7, #20]
 8014ac6:	223c      	movs	r2, #60	; 0x3c
 8014ac8:	671a      	str	r2, [r3, #112]	; 0x70
 8014aca:	697b      	ldr	r3, [r7, #20]
 8014acc:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014ad0:	679a      	str	r2, [r3, #120]	; 0x78
 8014ad2:	697b      	ldr	r3, [r7, #20]
 8014ad4:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014ad8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8014adc:	697b      	ldr	r3, [r7, #20]
 8014ade:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014ae2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8014ae6:	4a61      	ldr	r2, [pc, #388]	; (8014c6c <ENMS_NODE_Init+0x248>)
 8014ae8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8014aec:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014af0:	e883 0003 	stmia.w	r3, {r0, r1}
 8014af4:	697b      	ldr	r3, [r7, #20]
 8014af6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014af8:	607b      	str	r3, [r7, #4]
 8014afa:	697b      	ldr	r3, [r7, #20]
 8014afc:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014afe:	697a      	ldr	r2, [r7, #20]
 8014b00:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8014b02:	6979      	ldr	r1, [r7, #20]
 8014b04:	6f09      	ldr	r1, [r1, #112]	; 0x70
 8014b06:	6978      	ldr	r0, [r7, #20]
 8014b08:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014b0a:	697c      	ldr	r4, [r7, #20]
 8014b0c:	6fa4      	ldr	r4, [r4, #120]	; 0x78
 8014b0e:	697d      	ldr	r5, [r7, #20]
 8014b10:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 8014b14:	697e      	ldr	r6, [r7, #20]
 8014b16:	f8d6 6088 	ldr.w	r6, [r6, #136]	; 0x88
 8014b1a:	f8d7 c014 	ldr.w	ip, [r7, #20]
 8014b1e:	f8dc c07c 	ldr.w	ip, [ip, #124]	; 0x7c
 8014b22:	f8c7 c000 	str.w	ip, [r7]
 8014b26:	f8d7 e014 	ldr.w	lr, [r7, #20]
 8014b2a:	f8de e080 	ldr.w	lr, [lr, #128]	; 0x80
 8014b2e:	f8cd e020 	str.w	lr, [sp, #32]
 8014b32:	f8d7 c000 	ldr.w	ip, [r7]
 8014b36:	f8cd c01c 	str.w	ip, [sp, #28]
 8014b3a:	9606      	str	r6, [sp, #24]
 8014b3c:	9505      	str	r5, [sp, #20]
 8014b3e:	9404      	str	r4, [sp, #16]
 8014b40:	9003      	str	r0, [sp, #12]
 8014b42:	9102      	str	r1, [sp, #8]
 8014b44:	9201      	str	r2, [sp, #4]
 8014b46:	9300      	str	r3, [sp, #0]
 8014b48:	687b      	ldr	r3, [r7, #4]
 8014b4a:	4a49      	ldr	r2, [pc, #292]	; (8014c70 <ENMS_NODE_Init+0x24c>)
 8014b4c:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8014b50:	c903      	ldmia	r1, {r0, r1}
 8014b52:	f000 fb59 	bl	8015208 <LOGGER_PrintLine>
 8014b56:	8a7b      	ldrh	r3, [r7, #18]
 8014b58:	2b00      	cmp	r3, #0
 8014b5a:	d001      	beq.n	8014b60 <ENMS_NODE_Init+0x13c>
 8014b5c:	8a7a      	ldrh	r2, [r7, #18]
 8014b5e:	e001      	b.n	8014b64 <ENMS_NODE_Init+0x140>
 8014b60:	f24f 02b1 	movw	r2, #61617	; 0xf0b1
 8014b64:	697b      	ldr	r3, [r7, #20]
 8014b66:	851a      	strh	r2, [r3, #40]	; 0x28
 8014b68:	697b      	ldr	r3, [r7, #20]
 8014b6a:	2202      	movs	r2, #2
 8014b6c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8014b70:	697b      	ldr	r3, [r7, #20]
 8014b72:	4a40      	ldr	r2, [pc, #256]	; (8014c74 <ENMS_NODE_Init+0x250>)
 8014b74:	631a      	str	r2, [r3, #48]	; 0x30
 8014b76:	697b      	ldr	r3, [r7, #20]
 8014b78:	2200      	movs	r2, #0
 8014b7a:	859a      	strh	r2, [r3, #44]	; 0x2c
 8014b7c:	697b      	ldr	r3, [r7, #20]
 8014b7e:	697a      	ldr	r2, [r7, #20]
 8014b80:	635a      	str	r2, [r3, #52]	; 0x34
 8014b82:	2300      	movs	r3, #0
 8014b84:	657b      	str	r3, [r7, #84]	; 0x54
 8014b86:	e00b      	b.n	8014ba0 <ENMS_NODE_Init+0x17c>
 8014b88:	6979      	ldr	r1, [r7, #20]
 8014b8a:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8014b8c:	4613      	mov	r3, r2
 8014b8e:	011b      	lsls	r3, r3, #4
 8014b90:	4413      	add	r3, r2
 8014b92:	440b      	add	r3, r1
 8014b94:	338c      	adds	r3, #140	; 0x8c
 8014b96:	2200      	movs	r2, #0
 8014b98:	701a      	strb	r2, [r3, #0]
 8014b9a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014b9c:	3301      	adds	r3, #1
 8014b9e:	657b      	str	r3, [r7, #84]	; 0x54
 8014ba0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8014ba2:	2b09      	cmp	r3, #9
 8014ba4:	d9f0      	bls.n	8014b88 <ENMS_NODE_Init+0x164>
 8014ba6:	697b      	ldr	r3, [r7, #20]
 8014ba8:	3328      	adds	r3, #40	; 0x28
 8014baa:	4618      	mov	r0, r3
 8014bac:	f7f7 fd9a 	bl	800c6e4 <EMBENET_UDP_RegisterSocket>
 8014bb0:	4603      	mov	r3, r0
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	d00f      	beq.n	8014bd6 <ENMS_NODE_Init+0x1b2>
 8014bb6:	4a30      	ldr	r2, [pc, #192]	; (8014c78 <ENMS_NODE_Init+0x254>)
 8014bb8:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8014bbc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014bc0:	e883 0003 	stmia.w	r3, {r0, r1}
 8014bc4:	4a2d      	ldr	r2, [pc, #180]	; (8014c7c <ENMS_NODE_Init+0x258>)
 8014bc6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8014bca:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014bce:	f000 fb1b 	bl	8015208 <LOGGER_PrintLine>
 8014bd2:	2302      	movs	r3, #2
 8014bd4:	e045      	b.n	8014c62 <ENMS_NODE_Init+0x23e>
 8014bd6:	6979      	ldr	r1, [r7, #20]
 8014bd8:	4829      	ldr	r0, [pc, #164]	; (8014c80 <ENMS_NODE_Init+0x25c>)
 8014bda:	f7f7 fe57 	bl	800c88c <EMBENET_NODE_TaskCreate>
 8014bde:	4602      	mov	r2, r0
 8014be0:	697b      	ldr	r3, [r7, #20]
 8014be2:	64da      	str	r2, [r3, #76]	; 0x4c
 8014be4:	697b      	ldr	r3, [r7, #20]
 8014be6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014be8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8014bec:	d114      	bne.n	8014c18 <ENMS_NODE_Init+0x1f4>
 8014bee:	4a22      	ldr	r2, [pc, #136]	; (8014c78 <ENMS_NODE_Init+0x254>)
 8014bf0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8014bf4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014bf8:	e883 0003 	stmia.w	r3, {r0, r1}
 8014bfc:	4a21      	ldr	r2, [pc, #132]	; (8014c84 <ENMS_NODE_Init+0x260>)
 8014bfe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8014c02:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c06:	f000 faff 	bl	8015208 <LOGGER_PrintLine>
 8014c0a:	697b      	ldr	r3, [r7, #20]
 8014c0c:	3328      	adds	r3, #40	; 0x28
 8014c0e:	4618      	mov	r0, r3
 8014c10:	f7f7 fd78 	bl	800c704 <EMBENET_UDP_UnregisterSocket>
 8014c14:	2303      	movs	r3, #3
 8014c16:	e024      	b.n	8014c62 <ENMS_NODE_Init+0x23e>
 8014c18:	2200      	movs	r2, #0
 8014c1a:	491b      	ldr	r1, [pc, #108]	; (8014c88 <ENMS_NODE_Init+0x264>)
 8014c1c:	6978      	ldr	r0, [r7, #20]
 8014c1e:	f000 f9cb 	bl	8014fb8 <ENMS_NODE_RegisterService>
 8014c22:	4603      	mov	r3, r0
 8014c24:	2b00      	cmp	r3, #0
 8014c26:	d00d      	beq.n	8014c44 <ENMS_NODE_Init+0x220>
 8014c28:	4a13      	ldr	r2, [pc, #76]	; (8014c78 <ENMS_NODE_Init+0x254>)
 8014c2a:	f107 0320 	add.w	r3, r7, #32
 8014c2e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014c32:	e883 0003 	stmia.w	r3, {r0, r1}
 8014c36:	4a15      	ldr	r2, [pc, #84]	; (8014c8c <ENMS_NODE_Init+0x268>)
 8014c38:	f107 0320 	add.w	r3, r7, #32
 8014c3c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c40:	f000 fae2 	bl	8015208 <LOGGER_PrintLine>
 8014c44:	4a09      	ldr	r2, [pc, #36]	; (8014c6c <ENMS_NODE_Init+0x248>)
 8014c46:	f107 0318 	add.w	r3, r7, #24
 8014c4a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014c4e:	e883 0003 	stmia.w	r3, {r0, r1}
 8014c52:	4a0f      	ldr	r2, [pc, #60]	; (8014c90 <ENMS_NODE_Init+0x26c>)
 8014c54:	f107 0318 	add.w	r3, r7, #24
 8014c58:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014c5c:	f000 fad4 	bl	8015208 <LOGGER_PrintLine>
 8014c60:	2300      	movs	r3, #0
 8014c62:	4618      	mov	r0, r3
 8014c64:	375c      	adds	r7, #92	; 0x5c
 8014c66:	46bd      	mov	sp, r7
 8014c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014c6a:	bf00      	nop
 8014c6c:	0802f190 	.word	0x0802f190
 8014c70:	0802f564 	.word	0x0802f564
 8014c74:	0801463d 	.word	0x0801463d
 8014c78:	0802f198 	.word	0x0802f198
 8014c7c:	0802f5d8 	.word	0x0802f5d8
 8014c80:	0801474d 	.word	0x0801474d
 8014c84:	0802f60c 	.word	0x0802f60c
 8014c88:	0802f63c 	.word	0x0802f63c
 8014c8c:	0802f644 	.word	0x0802f644
 8014c90:	0802f660 	.word	0x0802f660

08014c94 <ENMS_NODE_Start>:
 8014c94:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8014c98:	b0a0      	sub	sp, #128	; 0x80
 8014c9a:	af00      	add	r7, sp, #0
 8014c9c:	64f8      	str	r0, [r7, #76]	; 0x4c
 8014c9e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014ca0:	2b00      	cmp	r3, #0
 8014ca2:	d101      	bne.n	8014ca8 <ENMS_NODE_Start+0x14>
 8014ca4:	2301      	movs	r3, #1
 8014ca6:	e143      	b.n	8014f30 <ENMS_NODE_Start+0x29c>
 8014ca8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014caa:	333c      	adds	r3, #60	; 0x3c
 8014cac:	4618      	mov	r0, r3
 8014cae:	f7f8 f875 	bl	800cd9c <EMBENET_NODE_GetBorderRouterAddress>
 8014cb2:	4603      	mov	r3, r0
 8014cb4:	2b00      	cmp	r3, #0
 8014cb6:	d00f      	beq.n	8014cd8 <ENMS_NODE_Start+0x44>
 8014cb8:	4aa0      	ldr	r2, [pc, #640]	; (8014f3c <ENMS_NODE_Start+0x2a8>)
 8014cba:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8014cbe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014cc2:	e883 0003 	stmia.w	r3, {r0, r1}
 8014cc6:	4a9e      	ldr	r2, [pc, #632]	; (8014f40 <ENMS_NODE_Start+0x2ac>)
 8014cc8:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8014ccc:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014cd0:	f000 fa9a 	bl	8015208 <LOGGER_PrintLine>
 8014cd4:	2304      	movs	r3, #4
 8014cd6:	e12b      	b.n	8014f30 <ENMS_NODE_Start+0x29c>
 8014cd8:	f7f7 fd72 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 8014cdc:	e9c7 011e 	strd	r0, r1, [r7, #120]	; 0x78
 8014ce0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014ce2:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8014ce4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014ce8:	fb03 f002 	mul.w	r0, r3, r2
 8014cec:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014cee:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8014cf0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014cf4:	fb03 f102 	mul.w	r1, r3, r2
 8014cf8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014cfa:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8014cfc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d00:	fb02 f303 	mul.w	r3, r2, r3
 8014d04:	089b      	lsrs	r3, r3, #2
 8014d06:	440b      	add	r3, r1
 8014d08:	4619      	mov	r1, r3
 8014d0a:	f7f8 f86f 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014d0e:	4603      	mov	r3, r0
 8014d10:	2200      	movs	r2, #0
 8014d12:	461c      	mov	r4, r3
 8014d14:	4615      	mov	r5, r2
 8014d16:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8014d1a:	eb14 0802 	adds.w	r8, r4, r2
 8014d1e:	eb45 0903 	adc.w	r9, r5, r3
 8014d22:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d24:	e9c3 8900 	strd	r8, r9, [r3]
 8014d28:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d2a:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8014d2c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d30:	fb03 f002 	mul.w	r0, r3, r2
 8014d34:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d36:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8014d38:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d3c:	fb03 f102 	mul.w	r1, r3, r2
 8014d40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d42:	6eda      	ldr	r2, [r3, #108]	; 0x6c
 8014d44:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d48:	fb02 f303 	mul.w	r3, r2, r3
 8014d4c:	089b      	lsrs	r3, r3, #2
 8014d4e:	440b      	add	r3, r1
 8014d50:	4619      	mov	r1, r3
 8014d52:	f7f8 f84b 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014d56:	4603      	mov	r3, r0
 8014d58:	2200      	movs	r2, #0
 8014d5a:	469a      	mov	sl, r3
 8014d5c:	4693      	mov	fp, r2
 8014d5e:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8014d62:	eb1a 0102 	adds.w	r1, sl, r2
 8014d66:	6439      	str	r1, [r7, #64]	; 0x40
 8014d68:	eb4b 0303 	adc.w	r3, fp, r3
 8014d6c:	647b      	str	r3, [r7, #68]	; 0x44
 8014d6e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d70:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	; 0x40
 8014d74:	e9c3 1202 	strd	r1, r2, [r3, #8]
 8014d78:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d7a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8014d7c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d80:	fb03 f002 	mul.w	r0, r3, r2
 8014d84:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d86:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8014d88:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d8c:	fb03 f102 	mul.w	r1, r3, r2
 8014d90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014d92:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8014d94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014d98:	fb02 f303 	mul.w	r3, r2, r3
 8014d9c:	089b      	lsrs	r3, r3, #2
 8014d9e:	440b      	add	r3, r1
 8014da0:	4619      	mov	r1, r3
 8014da2:	f7f8 f823 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014da6:	4603      	mov	r3, r0
 8014da8:	2200      	movs	r2, #0
 8014daa:	63bb      	str	r3, [r7, #56]	; 0x38
 8014dac:	63fa      	str	r2, [r7, #60]	; 0x3c
 8014dae:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8014db2:	e9d7 450e 	ldrd	r4, r5, [r7, #56]	; 0x38
 8014db6:	4621      	mov	r1, r4
 8014db8:	1889      	adds	r1, r1, r2
 8014dba:	6339      	str	r1, [r7, #48]	; 0x30
 8014dbc:	4629      	mov	r1, r5
 8014dbe:	eb43 0101 	adc.w	r1, r3, r1
 8014dc2:	6379      	str	r1, [r7, #52]	; 0x34
 8014dc4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014dc6:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	; 0x30
 8014dca:	e9c3 1204 	strd	r1, r2, [r3, #16]
 8014dce:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014dd0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014dd2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014dd6:	fb02 f003 	mul.w	r0, r2, r3
 8014dda:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014ddc:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8014dde:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014de2:	fb03 f102 	mul.w	r1, r3, r2
 8014de6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014de8:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8014dea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8014dee:	fb02 f303 	mul.w	r3, r2, r3
 8014df2:	089b      	lsrs	r3, r3, #2
 8014df4:	440b      	add	r3, r1
 8014df6:	4619      	mov	r1, r3
 8014df8:	f7f7 fff8 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014dfc:	4603      	mov	r3, r0
 8014dfe:	2200      	movs	r2, #0
 8014e00:	62bb      	str	r3, [r7, #40]	; 0x28
 8014e02:	62fa      	str	r2, [r7, #44]	; 0x2c
 8014e04:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8014e08:	e9d7 450a 	ldrd	r4, r5, [r7, #40]	; 0x28
 8014e0c:	4621      	mov	r1, r4
 8014e0e:	1889      	adds	r1, r1, r2
 8014e10:	6239      	str	r1, [r7, #32]
 8014e12:	4629      	mov	r1, r5
 8014e14:	eb43 0101 	adc.w	r1, r3, r1
 8014e18:	6279      	str	r1, [r7, #36]	; 0x24
 8014e1a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e1c:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8014e20:	e9c3 1206 	strd	r1, r2, [r3, #24]
 8014e24:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e26:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014e2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014e2e:	fb02 f003 	mul.w	r0, r2, r3
 8014e32:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e34:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014e38:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014e3c:	fb03 f202 	mul.w	r2, r3, r2
 8014e40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e42:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014e46:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8014e4a:	fb01 f303 	mul.w	r3, r1, r3
 8014e4e:	089b      	lsrs	r3, r3, #2
 8014e50:	4413      	add	r3, r2
 8014e52:	4619      	mov	r1, r3
 8014e54:	f7f7 ffca 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014e58:	4603      	mov	r3, r0
 8014e5a:	2200      	movs	r2, #0
 8014e5c:	61bb      	str	r3, [r7, #24]
 8014e5e:	61fa      	str	r2, [r7, #28]
 8014e60:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	; 0x78
 8014e64:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 8014e68:	4621      	mov	r1, r4
 8014e6a:	1889      	adds	r1, r1, r2
 8014e6c:	6139      	str	r1, [r7, #16]
 8014e6e:	4629      	mov	r1, r5
 8014e70:	eb43 0101 	adc.w	r1, r3, r1
 8014e74:	6179      	str	r1, [r7, #20]
 8014e76:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e78:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8014e7c:	e9c3 1208 	strd	r1, r2, [r3, #32]
 8014e80:	f240 51dc 	movw	r1, #1500	; 0x5dc
 8014e84:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8014e88:	f7f7 ffb0 	bl	800cdec <EMBENET_NODE_GetRandomValue>
 8014e8c:	6778      	str	r0, [r7, #116]	; 0x74
 8014e8e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8014e90:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8014e92:	f7f7 fc95 	bl	800c7c0 <EMBENET_NODE_GetLocalTime>
 8014e96:	4602      	mov	r2, r0
 8014e98:	460b      	mov	r3, r1
 8014e9a:	6f79      	ldr	r1, [r7, #116]	; 0x74
 8014e9c:	2000      	movs	r0, #0
 8014e9e:	60b9      	str	r1, [r7, #8]
 8014ea0:	60f8      	str	r0, [r7, #12]
 8014ea2:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 8014ea6:	4641      	mov	r1, r8
 8014ea8:	1851      	adds	r1, r2, r1
 8014eaa:	6039      	str	r1, [r7, #0]
 8014eac:	4649      	mov	r1, r9
 8014eae:	eb43 0101 	adc.w	r1, r3, r1
 8014eb2:	6079      	str	r1, [r7, #4]
 8014eb4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8014eb8:	2100      	movs	r1, #0
 8014eba:	4620      	mov	r0, r4
 8014ebc:	f7f7 fd76 	bl	800c9ac <EMBENET_NODE_TaskSchedule>
 8014ec0:	4603      	mov	r3, r0
 8014ec2:	2b00      	cmp	r3, #0
 8014ec4:	d00f      	beq.n	8014ee6 <ENMS_NODE_Start+0x252>
 8014ec6:	4a1d      	ldr	r2, [pc, #116]	; (8014f3c <ENMS_NODE_Start+0x2a8>)
 8014ec8:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8014ecc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014ed0:	e883 0003 	stmia.w	r3, {r0, r1}
 8014ed4:	4a1b      	ldr	r2, [pc, #108]	; (8014f44 <ENMS_NODE_Start+0x2b0>)
 8014ed6:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8014eda:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014ede:	f000 f993 	bl	8015208 <LOGGER_PrintLine>
 8014ee2:	2304      	movs	r3, #4
 8014ee4:	e024      	b.n	8014f30 <ENMS_NODE_Start+0x29c>
 8014ee6:	2201      	movs	r2, #1
 8014ee8:	4917      	ldr	r1, [pc, #92]	; (8014f48 <ENMS_NODE_Start+0x2b4>)
 8014eea:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8014eec:	f000 f90a 	bl	8015104 <ENMS_NODE_SetServiceState>
 8014ef0:	4603      	mov	r3, r0
 8014ef2:	2b00      	cmp	r3, #0
 8014ef4:	d00d      	beq.n	8014f12 <ENMS_NODE_Start+0x27e>
 8014ef6:	4a11      	ldr	r2, [pc, #68]	; (8014f3c <ENMS_NODE_Start+0x2a8>)
 8014ef8:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8014efc:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014f00:	e883 0003 	stmia.w	r3, {r0, r1}
 8014f04:	4a11      	ldr	r2, [pc, #68]	; (8014f4c <ENMS_NODE_Start+0x2b8>)
 8014f06:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8014f0a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014f0e:	f000 f97b 	bl	8015208 <LOGGER_PrintLine>
 8014f12:	4a0f      	ldr	r2, [pc, #60]	; (8014f50 <ENMS_NODE_Start+0x2bc>)
 8014f14:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8014f18:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014f1c:	e883 0003 	stmia.w	r3, {r0, r1}
 8014f20:	4a0c      	ldr	r2, [pc, #48]	; (8014f54 <ENMS_NODE_Start+0x2c0>)
 8014f22:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8014f26:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014f2a:	f000 f96d 	bl	8015208 <LOGGER_PrintLine>
 8014f2e:	2300      	movs	r3, #0
 8014f30:	4618      	mov	r0, r3
 8014f32:	3780      	adds	r7, #128	; 0x80
 8014f34:	46bd      	mov	sp, r7
 8014f36:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8014f3a:	bf00      	nop
 8014f3c:	0802f198 	.word	0x0802f198
 8014f40:	0802f674 	.word	0x0802f674
 8014f44:	0802f694 	.word	0x0802f694
 8014f48:	0802f63c 	.word	0x0802f63c
 8014f4c:	0802f6ac 	.word	0x0802f6ac
 8014f50:	0802f190 	.word	0x0802f190
 8014f54:	0802f6cc 	.word	0x0802f6cc

08014f58 <ENMS_NODE_Stop>:
 8014f58:	b580      	push	{r7, lr}
 8014f5a:	b084      	sub	sp, #16
 8014f5c:	af00      	add	r7, sp, #0
 8014f5e:	6078      	str	r0, [r7, #4]
 8014f60:	687b      	ldr	r3, [r7, #4]
 8014f62:	2b00      	cmp	r3, #0
 8014f64:	d101      	bne.n	8014f6a <ENMS_NODE_Stop+0x12>
 8014f66:	2301      	movs	r3, #1
 8014f68:	e01b      	b.n	8014fa2 <ENMS_NODE_Stop+0x4a>
 8014f6a:	687b      	ldr	r3, [r7, #4]
 8014f6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f6e:	4618      	mov	r0, r3
 8014f70:	f7f7 feea 	bl	800cd48 <EMBENET_NODE_TaskCancel>
 8014f74:	2200      	movs	r2, #0
 8014f76:	490d      	ldr	r1, [pc, #52]	; (8014fac <ENMS_NODE_Stop+0x54>)
 8014f78:	6878      	ldr	r0, [r7, #4]
 8014f7a:	f000 f8c3 	bl	8015104 <ENMS_NODE_SetServiceState>
 8014f7e:	4603      	mov	r3, r0
 8014f80:	2b00      	cmp	r3, #0
 8014f82:	d00d      	beq.n	8014fa0 <ENMS_NODE_Stop+0x48>
 8014f84:	4a0a      	ldr	r2, [pc, #40]	; (8014fb0 <ENMS_NODE_Stop+0x58>)
 8014f86:	f107 0308 	add.w	r3, r7, #8
 8014f8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8014f8e:	e883 0003 	stmia.w	r3, {r0, r1}
 8014f92:	4a08      	ldr	r2, [pc, #32]	; (8014fb4 <ENMS_NODE_Stop+0x5c>)
 8014f94:	f107 0308 	add.w	r3, r7, #8
 8014f98:	e893 0003 	ldmia.w	r3, {r0, r1}
 8014f9c:	f000 f934 	bl	8015208 <LOGGER_PrintLine>
 8014fa0:	2300      	movs	r3, #0
 8014fa2:	4618      	mov	r0, r3
 8014fa4:	3710      	adds	r7, #16
 8014fa6:	46bd      	mov	sp, r7
 8014fa8:	bd80      	pop	{r7, pc}
 8014faa:	bf00      	nop
 8014fac:	0802f63c 	.word	0x0802f63c
 8014fb0:	0802f198 	.word	0x0802f198
 8014fb4:	0802f6ac 	.word	0x0802f6ac

08014fb8 <ENMS_NODE_RegisterService>:
 8014fb8:	b580      	push	{r7, lr}
 8014fba:	b092      	sub	sp, #72	; 0x48
 8014fbc:	af02      	add	r7, sp, #8
 8014fbe:	60f8      	str	r0, [r7, #12]
 8014fc0:	60b9      	str	r1, [r7, #8]
 8014fc2:	4613      	mov	r3, r2
 8014fc4:	71fb      	strb	r3, [r7, #7]
 8014fc6:	68fb      	ldr	r3, [r7, #12]
 8014fc8:	2b00      	cmp	r3, #0
 8014fca:	d101      	bne.n	8014fd0 <ENMS_NODE_RegisterService+0x18>
 8014fcc:	2301      	movs	r3, #1
 8014fce:	e08a      	b.n	80150e6 <ENMS_NODE_RegisterService+0x12e>
 8014fd0:	68bb      	ldr	r3, [r7, #8]
 8014fd2:	2b00      	cmp	r3, #0
 8014fd4:	d101      	bne.n	8014fda <ENMS_NODE_RegisterService+0x22>
 8014fd6:	2301      	movs	r3, #1
 8014fd8:	e085      	b.n	80150e6 <ENMS_NODE_RegisterService+0x12e>
 8014fda:	2110      	movs	r1, #16
 8014fdc:	68b8      	ldr	r0, [r7, #8]
 8014fde:	f7fe fcd7 	bl	8013990 <enms_strlen_s>
 8014fe2:	6378      	str	r0, [r7, #52]	; 0x34
 8014fe4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014fe6:	2b00      	cmp	r3, #0
 8014fe8:	d002      	beq.n	8014ff0 <ENMS_NODE_RegisterService+0x38>
 8014fea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8014fec:	2b10      	cmp	r3, #16
 8014fee:	d901      	bls.n	8014ff4 <ENMS_NODE_RegisterService+0x3c>
 8014ff0:	2301      	movs	r3, #1
 8014ff2:	e078      	b.n	80150e6 <ENMS_NODE_RegisterService+0x12e>
 8014ff4:	2300      	movs	r3, #0
 8014ff6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8014ff8:	e024      	b.n	8015044 <ENMS_NODE_RegisterService+0x8c>
 8014ffa:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8014ffc:	4613      	mov	r3, r2
 8014ffe:	011b      	lsls	r3, r3, #4
 8015000:	4413      	add	r3, r2
 8015002:	3388      	adds	r3, #136	; 0x88
 8015004:	68fa      	ldr	r2, [r7, #12]
 8015006:	4413      	add	r3, r2
 8015008:	3304      	adds	r3, #4
 801500a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801500c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801500e:	2210      	movs	r2, #16
 8015010:	68b9      	ldr	r1, [r7, #8]
 8015012:	4618      	mov	r0, r3
 8015014:	f016 f878 	bl	802b108 <strncmp>
 8015018:	4603      	mov	r3, r0
 801501a:	2b00      	cmp	r3, #0
 801501c:	d10f      	bne.n	801503e <ENMS_NODE_RegisterService+0x86>
 801501e:	4a34      	ldr	r2, [pc, #208]	; (80150f0 <ENMS_NODE_RegisterService+0x138>)
 8015020:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8015024:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015028:	e883 0003 	stmia.w	r3, {r0, r1}
 801502c:	68bb      	ldr	r3, [r7, #8]
 801502e:	4a31      	ldr	r2, [pc, #196]	; (80150f4 <ENMS_NODE_RegisterService+0x13c>)
 8015030:	f107 0124 	add.w	r1, r7, #36	; 0x24
 8015034:	c903      	ldmia	r1, {r0, r1}
 8015036:	f000 f8e7 	bl	8015208 <LOGGER_PrintLine>
 801503a:	2306      	movs	r3, #6
 801503c:	e053      	b.n	80150e6 <ENMS_NODE_RegisterService+0x12e>
 801503e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015040:	3301      	adds	r3, #1
 8015042:	63fb      	str	r3, [r7, #60]	; 0x3c
 8015044:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8015046:	2b09      	cmp	r3, #9
 8015048:	d9d7      	bls.n	8014ffa <ENMS_NODE_RegisterService+0x42>
 801504a:	2300      	movs	r3, #0
 801504c:	63bb      	str	r3, [r7, #56]	; 0x38
 801504e:	e038      	b.n	80150c2 <ENMS_NODE_RegisterService+0x10a>
 8015050:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8015052:	4613      	mov	r3, r2
 8015054:	011b      	lsls	r3, r3, #4
 8015056:	4413      	add	r3, r2
 8015058:	3388      	adds	r3, #136	; 0x88
 801505a:	68fa      	ldr	r2, [r7, #12]
 801505c:	4413      	add	r3, r2
 801505e:	3304      	adds	r3, #4
 8015060:	633b      	str	r3, [r7, #48]	; 0x30
 8015062:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015064:	781b      	ldrb	r3, [r3, #0]
 8015066:	2b00      	cmp	r3, #0
 8015068:	d128      	bne.n	80150bc <ENMS_NODE_RegisterService+0x104>
 801506a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801506c:	2210      	movs	r2, #16
 801506e:	2100      	movs	r1, #0
 8015070:	4618      	mov	r0, r3
 8015072:	f016 f841 	bl	802b0f8 <memset>
 8015076:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015078:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801507a:	68b9      	ldr	r1, [r7, #8]
 801507c:	4618      	mov	r0, r3
 801507e:	f016 f8da 	bl	802b236 <memcpy>
 8015082:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015084:	79fa      	ldrb	r2, [r7, #7]
 8015086:	741a      	strb	r2, [r3, #16]
 8015088:	4a1b      	ldr	r2, [pc, #108]	; (80150f8 <ENMS_NODE_RegisterService+0x140>)
 801508a:	f107 031c 	add.w	r3, r7, #28
 801508e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015092:	e883 0003 	stmia.w	r3, {r0, r1}
 8015096:	79fb      	ldrb	r3, [r7, #7]
 8015098:	9300      	str	r3, [sp, #0]
 801509a:	68bb      	ldr	r3, [r7, #8]
 801509c:	4a17      	ldr	r2, [pc, #92]	; (80150fc <ENMS_NODE_RegisterService+0x144>)
 801509e:	f107 011c 	add.w	r1, r7, #28
 80150a2:	c903      	ldmia	r1, {r0, r1}
 80150a4:	f000 f8b0 	bl	8015208 <LOGGER_PrintLine>
 80150a8:	68fb      	ldr	r3, [r7, #12]
 80150aa:	f893 3136 	ldrb.w	r3, [r3, #310]	; 0x136
 80150ae:	3301      	adds	r3, #1
 80150b0:	b2da      	uxtb	r2, r3
 80150b2:	68fb      	ldr	r3, [r7, #12]
 80150b4:	f883 2136 	strb.w	r2, [r3, #310]	; 0x136
 80150b8:	2300      	movs	r3, #0
 80150ba:	e014      	b.n	80150e6 <ENMS_NODE_RegisterService+0x12e>
 80150bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80150be:	3301      	adds	r3, #1
 80150c0:	63bb      	str	r3, [r7, #56]	; 0x38
 80150c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80150c4:	2b0a      	cmp	r3, #10
 80150c6:	d1c3      	bne.n	8015050 <ENMS_NODE_RegisterService+0x98>
 80150c8:	4a09      	ldr	r2, [pc, #36]	; (80150f0 <ENMS_NODE_RegisterService+0x138>)
 80150ca:	f107 0314 	add.w	r3, r7, #20
 80150ce:	e892 0003 	ldmia.w	r2, {r0, r1}
 80150d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80150d6:	68bb      	ldr	r3, [r7, #8]
 80150d8:	4a09      	ldr	r2, [pc, #36]	; (8015100 <ENMS_NODE_RegisterService+0x148>)
 80150da:	f107 0114 	add.w	r1, r7, #20
 80150de:	c903      	ldmia	r1, {r0, r1}
 80150e0:	f000 f892 	bl	8015208 <LOGGER_PrintLine>
 80150e4:	2305      	movs	r3, #5
 80150e6:	4618      	mov	r0, r3
 80150e8:	3740      	adds	r7, #64	; 0x40
 80150ea:	46bd      	mov	sp, r7
 80150ec:	bd80      	pop	{r7, pc}
 80150ee:	bf00      	nop
 80150f0:	0802f198 	.word	0x0802f198
 80150f4:	0802f6dc 	.word	0x0802f6dc
 80150f8:	0802f190 	.word	0x0802f190
 80150fc:	0802f6fc 	.word	0x0802f6fc
 8015100:	0802f728 	.word	0x0802f728

08015104 <ENMS_NODE_SetServiceState>:
 8015104:	b580      	push	{r7, lr}
 8015106:	b08a      	sub	sp, #40	; 0x28
 8015108:	af00      	add	r7, sp, #0
 801510a:	60f8      	str	r0, [r7, #12]
 801510c:	60b9      	str	r1, [r7, #8]
 801510e:	4613      	mov	r3, r2
 8015110:	71fb      	strb	r3, [r7, #7]
 8015112:	68fb      	ldr	r3, [r7, #12]
 8015114:	2b00      	cmp	r3, #0
 8015116:	d101      	bne.n	801511c <ENMS_NODE_SetServiceState+0x18>
 8015118:	2301      	movs	r3, #1
 801511a:	e044      	b.n	80151a6 <ENMS_NODE_SetServiceState+0xa2>
 801511c:	68bb      	ldr	r3, [r7, #8]
 801511e:	2b00      	cmp	r3, #0
 8015120:	d101      	bne.n	8015126 <ENMS_NODE_SetServiceState+0x22>
 8015122:	2301      	movs	r3, #1
 8015124:	e03f      	b.n	80151a6 <ENMS_NODE_SetServiceState+0xa2>
 8015126:	2111      	movs	r1, #17
 8015128:	68b8      	ldr	r0, [r7, #8]
 801512a:	f7fe fc31 	bl	8013990 <enms_strlen_s>
 801512e:	6238      	str	r0, [r7, #32]
 8015130:	6a3b      	ldr	r3, [r7, #32]
 8015132:	2b00      	cmp	r3, #0
 8015134:	d002      	beq.n	801513c <ENMS_NODE_SetServiceState+0x38>
 8015136:	6a3b      	ldr	r3, [r7, #32]
 8015138:	2b10      	cmp	r3, #16
 801513a:	d901      	bls.n	8015140 <ENMS_NODE_SetServiceState+0x3c>
 801513c:	2301      	movs	r3, #1
 801513e:	e032      	b.n	80151a6 <ENMS_NODE_SetServiceState+0xa2>
 8015140:	2300      	movs	r3, #0
 8015142:	627b      	str	r3, [r7, #36]	; 0x24
 8015144:	e01d      	b.n	8015182 <ENMS_NODE_SetServiceState+0x7e>
 8015146:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8015148:	4613      	mov	r3, r2
 801514a:	011b      	lsls	r3, r3, #4
 801514c:	4413      	add	r3, r2
 801514e:	3388      	adds	r3, #136	; 0x88
 8015150:	68fa      	ldr	r2, [r7, #12]
 8015152:	4413      	add	r3, r2
 8015154:	3304      	adds	r3, #4
 8015156:	2210      	movs	r2, #16
 8015158:	68b9      	ldr	r1, [r7, #8]
 801515a:	4618      	mov	r0, r3
 801515c:	f015 ffd4 	bl	802b108 <strncmp>
 8015160:	4603      	mov	r3, r0
 8015162:	2b00      	cmp	r3, #0
 8015164:	d10a      	bne.n	801517c <ENMS_NODE_SetServiceState+0x78>
 8015166:	68f9      	ldr	r1, [r7, #12]
 8015168:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801516a:	4613      	mov	r3, r2
 801516c:	011b      	lsls	r3, r3, #4
 801516e:	4413      	add	r3, r2
 8015170:	440b      	add	r3, r1
 8015172:	339c      	adds	r3, #156	; 0x9c
 8015174:	79fa      	ldrb	r2, [r7, #7]
 8015176:	701a      	strb	r2, [r3, #0]
 8015178:	2300      	movs	r3, #0
 801517a:	e014      	b.n	80151a6 <ENMS_NODE_SetServiceState+0xa2>
 801517c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801517e:	3301      	adds	r3, #1
 8015180:	627b      	str	r3, [r7, #36]	; 0x24
 8015182:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015184:	2b09      	cmp	r3, #9
 8015186:	d9de      	bls.n	8015146 <ENMS_NODE_SetServiceState+0x42>
 8015188:	4a09      	ldr	r2, [pc, #36]	; (80151b0 <ENMS_NODE_SetServiceState+0xac>)
 801518a:	f107 0310 	add.w	r3, r7, #16
 801518e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015192:	e883 0003 	stmia.w	r3, {r0, r1}
 8015196:	68bb      	ldr	r3, [r7, #8]
 8015198:	4a06      	ldr	r2, [pc, #24]	; (80151b4 <ENMS_NODE_SetServiceState+0xb0>)
 801519a:	f107 0110 	add.w	r1, r7, #16
 801519e:	c903      	ldmia	r1, {r0, r1}
 80151a0:	f000 f832 	bl	8015208 <LOGGER_PrintLine>
 80151a4:	2301      	movs	r3, #1
 80151a6:	4618      	mov	r0, r3
 80151a8:	3728      	adds	r7, #40	; 0x28
 80151aa:	46bd      	mov	sp, r7
 80151ac:	bd80      	pop	{r7, pc}
 80151ae:	bf00      	nop
 80151b0:	0802f198 	.word	0x0802f198
 80151b4:	0802f748 	.word	0x0802f748

080151b8 <LOGGER_Lock>:
 80151b8:	b480      	push	{r7}
 80151ba:	af00      	add	r7, sp, #0
 80151bc:	2301      	movs	r3, #1
 80151be:	4618      	mov	r0, r3
 80151c0:	46bd      	mov	sp, r7
 80151c2:	bc80      	pop	{r7}
 80151c4:	4770      	bx	lr

080151c6 <LOGGER_Unlock>:
 80151c6:	b480      	push	{r7}
 80151c8:	af00      	add	r7, sp, #0
 80151ca:	bf00      	nop
 80151cc:	46bd      	mov	sp, r7
 80151ce:	bc80      	pop	{r7}
 80151d0:	4770      	bx	lr

080151d2 <LOGGER_PrintPrefix>:
 80151d2:	b480      	push	{r7}
 80151d4:	af00      	add	r7, sp, #0
 80151d6:	bf00      	nop
 80151d8:	46bd      	mov	sp, r7
 80151da:	bc80      	pop	{r7}
 80151dc:	4770      	bx	lr

080151de <LOGGER_PrintSuffix>:
 80151de:	b480      	push	{r7}
 80151e0:	af00      	add	r7, sp, #0
 80151e2:	bf00      	nop
 80151e4:	46bd      	mov	sp, r7
 80151e6:	bc80      	pop	{r7}
 80151e8:	4770      	bx	lr
	...

080151ec <LOGGER_PrintNL>:
 80151ec:	b580      	push	{r7, lr}
 80151ee:	af00      	add	r7, sp, #0
 80151f0:	4b04      	ldr	r3, [pc, #16]	; (8015204 <LOGGER_PrintNL+0x18>)
 80151f2:	685b      	ldr	r3, [r3, #4]
 80151f4:	4a03      	ldr	r2, [pc, #12]	; (8015204 <LOGGER_PrintNL+0x18>)
 80151f6:	6892      	ldr	r2, [r2, #8]
 80151f8:	4611      	mov	r1, r2
 80151fa:	200a      	movs	r0, #10
 80151fc:	4798      	blx	r3
 80151fe:	bf00      	nop
 8015200:	bd80      	pop	{r7, pc}
 8015202:	bf00      	nop
 8015204:	20003f80 	.word	0x20003f80

08015208 <LOGGER_PrintLine>:
 8015208:	b40c      	push	{r2, r3}
 801520a:	b580      	push	{r7, lr}
 801520c:	b084      	sub	sp, #16
 801520e:	af00      	add	r7, sp, #0
 8015210:	463b      	mov	r3, r7
 8015212:	e883 0003 	stmia.w	r3, {r0, r1}
 8015216:	f000 f88d 	bl	8015334 <LOGGER_IsEnabled>
 801521a:	4603      	mov	r3, r0
 801521c:	2b00      	cmp	r3, #0
 801521e:	d01c      	beq.n	801525a <LOGGER_PrintLine+0x52>
 8015220:	f7ff ffca 	bl	80151b8 <LOGGER_Lock>
 8015224:	4603      	mov	r3, r0
 8015226:	2b00      	cmp	r3, #0
 8015228:	d017      	beq.n	801525a <LOGGER_PrintLine+0x52>
 801522a:	f7ff ffd2 	bl	80151d2 <LOGGER_PrintPrefix>
 801522e:	463b      	mov	r3, r7
 8015230:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015234:	f000 f84e 	bl	80152d4 <LOGGER_PrintHeader>
 8015238:	f107 031c 	add.w	r3, r7, #28
 801523c:	60fb      	str	r3, [r7, #12]
 801523e:	4b0a      	ldr	r3, [pc, #40]	; (8015268 <LOGGER_PrintLine+0x60>)
 8015240:	6858      	ldr	r0, [r3, #4]
 8015242:	4b09      	ldr	r3, [pc, #36]	; (8015268 <LOGGER_PrintLine+0x60>)
 8015244:	6899      	ldr	r1, [r3, #8]
 8015246:	68fb      	ldr	r3, [r7, #12]
 8015248:	69ba      	ldr	r2, [r7, #24]
 801524a:	f001 f9cd 	bl	80165e8 <9d4397e1c276e28163cdc66582db3f5f3477f47c>
 801524e:	f7ff ffcd 	bl	80151ec <LOGGER_PrintNL>
 8015252:	f7ff ffc4 	bl	80151de <LOGGER_PrintSuffix>
 8015256:	f7ff ffb6 	bl	80151c6 <LOGGER_Unlock>
 801525a:	bf00      	nop
 801525c:	3710      	adds	r7, #16
 801525e:	46bd      	mov	sp, r7
 8015260:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8015264:	b002      	add	sp, #8
 8015266:	4770      	bx	lr
 8015268:	20003f80 	.word	0x20003f80

0801526c <LOGGER_Print>:
 801526c:	b40f      	push	{r0, r1, r2, r3}
 801526e:	b580      	push	{r7, lr}
 8015270:	b082      	sub	sp, #8
 8015272:	af00      	add	r7, sp, #0
 8015274:	f107 0314 	add.w	r3, r7, #20
 8015278:	607b      	str	r3, [r7, #4]
 801527a:	4b07      	ldr	r3, [pc, #28]	; (8015298 <LOGGER_Print+0x2c>)
 801527c:	6858      	ldr	r0, [r3, #4]
 801527e:	4b06      	ldr	r3, [pc, #24]	; (8015298 <LOGGER_Print+0x2c>)
 8015280:	6899      	ldr	r1, [r3, #8]
 8015282:	687b      	ldr	r3, [r7, #4]
 8015284:	693a      	ldr	r2, [r7, #16]
 8015286:	f001 f9af 	bl	80165e8 <9d4397e1c276e28163cdc66582db3f5f3477f47c>
 801528a:	bf00      	nop
 801528c:	3708      	adds	r7, #8
 801528e:	46bd      	mov	sp, r7
 8015290:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8015294:	b004      	add	sp, #16
 8015296:	4770      	bx	lr
 8015298:	20003f80 	.word	0x20003f80

0801529c <LOGGER_StartSection>:
 801529c:	b580      	push	{r7, lr}
 801529e:	af00      	add	r7, sp, #0
 80152a0:	f000 f848 	bl	8015334 <LOGGER_IsEnabled>
 80152a4:	4603      	mov	r3, r0
 80152a6:	2b00      	cmp	r3, #0
 80152a8:	d008      	beq.n	80152bc <LOGGER_StartSection+0x20>
 80152aa:	f7ff ff85 	bl	80151b8 <LOGGER_Lock>
 80152ae:	4603      	mov	r3, r0
 80152b0:	2b00      	cmp	r3, #0
 80152b2:	d003      	beq.n	80152bc <LOGGER_StartSection+0x20>
 80152b4:	f7ff ff8d 	bl	80151d2 <LOGGER_PrintPrefix>
 80152b8:	2301      	movs	r3, #1
 80152ba:	e000      	b.n	80152be <LOGGER_StartSection+0x22>
 80152bc:	2300      	movs	r3, #0
 80152be:	4618      	mov	r0, r3
 80152c0:	bd80      	pop	{r7, pc}

080152c2 <LOGGER_EndSection>:
 80152c2:	b580      	push	{r7, lr}
 80152c4:	af00      	add	r7, sp, #0
 80152c6:	f7ff ff8a 	bl	80151de <LOGGER_PrintSuffix>
 80152ca:	f7ff ff7c 	bl	80151c6 <LOGGER_Unlock>
 80152ce:	bf00      	nop
 80152d0:	bd80      	pop	{r7, pc}
	...

080152d4 <LOGGER_PrintHeader>:
 80152d4:	b590      	push	{r4, r7, lr}
 80152d6:	b087      	sub	sp, #28
 80152d8:	af02      	add	r7, sp, #8
 80152da:	463b      	mov	r3, r7
 80152dc:	e883 0003 	stmia.w	r3, {r0, r1}
 80152e0:	4b11      	ldr	r3, [pc, #68]	; (8015328 <LOGGER_PrintHeader+0x54>)
 80152e2:	785b      	ldrb	r3, [r3, #1]
 80152e4:	f083 0301 	eor.w	r3, r3, #1
 80152e8:	b2db      	uxtb	r3, r3
 80152ea:	2b00      	cmp	r3, #0
 80152ec:	d017      	beq.n	801531e <LOGGER_PrintHeader+0x4a>
 80152ee:	2300      	movs	r3, #0
 80152f0:	60fb      	str	r3, [r7, #12]
 80152f2:	4b0d      	ldr	r3, [pc, #52]	; (8015328 <LOGGER_PrintHeader+0x54>)
 80152f4:	68db      	ldr	r3, [r3, #12]
 80152f6:	2b00      	cmp	r3, #0
 80152f8:	d003      	beq.n	8015302 <LOGGER_PrintHeader+0x2e>
 80152fa:	4b0b      	ldr	r3, [pc, #44]	; (8015328 <LOGGER_PrintHeader+0x54>)
 80152fc:	68db      	ldr	r3, [r3, #12]
 80152fe:	4798      	blx	r3
 8015300:	60f8      	str	r0, [r7, #12]
 8015302:	4b09      	ldr	r3, [pc, #36]	; (8015328 <LOGGER_PrintHeader+0x54>)
 8015304:	6858      	ldr	r0, [r3, #4]
 8015306:	4b08      	ldr	r3, [pc, #32]	; (8015328 <LOGGER_PrintHeader+0x54>)
 8015308:	6899      	ldr	r1, [r3, #8]
 801530a:	687b      	ldr	r3, [r7, #4]
 801530c:	683a      	ldr	r2, [r7, #0]
 801530e:	4c07      	ldr	r4, [pc, #28]	; (801532c <LOGGER_PrintHeader+0x58>)
 8015310:	5ca2      	ldrb	r2, [r4, r2]
 8015312:	9201      	str	r2, [sp, #4]
 8015314:	9300      	str	r3, [sp, #0]
 8015316:	68fb      	ldr	r3, [r7, #12]
 8015318:	4a05      	ldr	r2, [pc, #20]	; (8015330 <LOGGER_PrintHeader+0x5c>)
 801531a:	f001 f943 	bl	80165a4 <5dd4cf8b4cc3211a4d064c2aba27f240e0c6a1fc>
 801531e:	bf00      	nop
 8015320:	3714      	adds	r7, #20
 8015322:	46bd      	mov	sp, r7
 8015324:	bd90      	pop	{r4, r7, pc}
 8015326:	bf00      	nop
 8015328:	20003f80 	.word	0x20003f80
 801532c:	08031a14 	.word	0x08031a14
 8015330:	0802f768 	.word	0x0802f768

08015334 <LOGGER_IsEnabled>:
 8015334:	b480      	push	{r7}
 8015336:	af00      	add	r7, sp, #0
 8015338:	4b02      	ldr	r3, [pc, #8]	; (8015344 <LOGGER_IsEnabled+0x10>)
 801533a:	781b      	ldrb	r3, [r3, #0]
 801533c:	4618      	mov	r0, r3
 801533e:	46bd      	mov	sp, r7
 8015340:	bc80      	pop	{r7}
 8015342:	4770      	bx	lr
 8015344:	20003f80 	.word	0x20003f80

08015348 <4431f553f097f4949d9060f54332fa0b43da9337>:
 8015348:	b480      	push	{r7}
 801534a:	b085      	sub	sp, #20
 801534c:	af00      	add	r7, sp, #0
 801534e:	60b9      	str	r1, [r7, #8]
 8015350:	607a      	str	r2, [r7, #4]
 8015352:	603b      	str	r3, [r7, #0]
 8015354:	4603      	mov	r3, r0
 8015356:	73fb      	strb	r3, [r7, #15]
 8015358:	bf00      	nop
 801535a:	3714      	adds	r7, #20
 801535c:	46bd      	mov	sp, r7
 801535e:	bc80      	pop	{r7}
 8015360:	4770      	bx	lr

08015362 <626e3158957e216ecf22af8444eac4e472537274>:
 8015362:	b580      	push	{r7, lr}
 8015364:	b084      	sub	sp, #16
 8015366:	af00      	add	r7, sp, #0
 8015368:	60b9      	str	r1, [r7, #8]
 801536a:	607a      	str	r2, [r7, #4]
 801536c:	603b      	str	r3, [r7, #0]
 801536e:	4603      	mov	r3, r0
 8015370:	73fb      	strb	r3, [r7, #15]
 8015372:	7bfb      	ldrb	r3, [r7, #15]
 8015374:	2b00      	cmp	r3, #0
 8015376:	d006      	beq.n	8015386 <626e3158957e216ecf22af8444eac4e472537274+0x24>
 8015378:	68bb      	ldr	r3, [r7, #8]
 801537a:	681b      	ldr	r3, [r3, #0]
 801537c:	68ba      	ldr	r2, [r7, #8]
 801537e:	6851      	ldr	r1, [r2, #4]
 8015380:	7bfa      	ldrb	r2, [r7, #15]
 8015382:	4610      	mov	r0, r2
 8015384:	4798      	blx	r3
 8015386:	bf00      	nop
 8015388:	3710      	adds	r7, #16
 801538a:	46bd      	mov	sp, r7
 801538c:	bd80      	pop	{r7, pc}

0801538e <_strnlen_s>:
 801538e:	b480      	push	{r7}
 8015390:	b085      	sub	sp, #20
 8015392:	af00      	add	r7, sp, #0
 8015394:	6078      	str	r0, [r7, #4]
 8015396:	6039      	str	r1, [r7, #0]
 8015398:	687b      	ldr	r3, [r7, #4]
 801539a:	60fb      	str	r3, [r7, #12]
 801539c:	e002      	b.n	80153a4 <_strnlen_s+0x16>
 801539e:	68fb      	ldr	r3, [r7, #12]
 80153a0:	3301      	adds	r3, #1
 80153a2:	60fb      	str	r3, [r7, #12]
 80153a4:	68fb      	ldr	r3, [r7, #12]
 80153a6:	781b      	ldrb	r3, [r3, #0]
 80153a8:	2b00      	cmp	r3, #0
 80153aa:	d004      	beq.n	80153b6 <_strnlen_s+0x28>
 80153ac:	683b      	ldr	r3, [r7, #0]
 80153ae:	1e5a      	subs	r2, r3, #1
 80153b0:	603a      	str	r2, [r7, #0]
 80153b2:	2b00      	cmp	r3, #0
 80153b4:	d1f3      	bne.n	801539e <_strnlen_s+0x10>
 80153b6:	68fa      	ldr	r2, [r7, #12]
 80153b8:	687b      	ldr	r3, [r7, #4]
 80153ba:	1ad3      	subs	r3, r2, r3
 80153bc:	4618      	mov	r0, r3
 80153be:	3714      	adds	r7, #20
 80153c0:	46bd      	mov	sp, r7
 80153c2:	bc80      	pop	{r7}
 80153c4:	4770      	bx	lr

080153c6 <_is_digit>:
 80153c6:	b480      	push	{r7}
 80153c8:	b083      	sub	sp, #12
 80153ca:	af00      	add	r7, sp, #0
 80153cc:	4603      	mov	r3, r0
 80153ce:	71fb      	strb	r3, [r7, #7]
 80153d0:	79fb      	ldrb	r3, [r7, #7]
 80153d2:	2b2f      	cmp	r3, #47	; 0x2f
 80153d4:	d904      	bls.n	80153e0 <_is_digit+0x1a>
 80153d6:	79fb      	ldrb	r3, [r7, #7]
 80153d8:	2b39      	cmp	r3, #57	; 0x39
 80153da:	d801      	bhi.n	80153e0 <_is_digit+0x1a>
 80153dc:	2301      	movs	r3, #1
 80153de:	e000      	b.n	80153e2 <_is_digit+0x1c>
 80153e0:	2300      	movs	r3, #0
 80153e2:	f003 0301 	and.w	r3, r3, #1
 80153e6:	b2db      	uxtb	r3, r3
 80153e8:	4618      	mov	r0, r3
 80153ea:	370c      	adds	r7, #12
 80153ec:	46bd      	mov	sp, r7
 80153ee:	bc80      	pop	{r7}
 80153f0:	4770      	bx	lr

080153f2 <_atoi>:
 80153f2:	b580      	push	{r7, lr}
 80153f4:	b084      	sub	sp, #16
 80153f6:	af00      	add	r7, sp, #0
 80153f8:	6078      	str	r0, [r7, #4]
 80153fa:	2300      	movs	r3, #0
 80153fc:	60fb      	str	r3, [r7, #12]
 80153fe:	e00e      	b.n	801541e <_atoi+0x2c>
 8015400:	68fa      	ldr	r2, [r7, #12]
 8015402:	4613      	mov	r3, r2
 8015404:	009b      	lsls	r3, r3, #2
 8015406:	4413      	add	r3, r2
 8015408:	005b      	lsls	r3, r3, #1
 801540a:	4618      	mov	r0, r3
 801540c:	687b      	ldr	r3, [r7, #4]
 801540e:	681b      	ldr	r3, [r3, #0]
 8015410:	1c59      	adds	r1, r3, #1
 8015412:	687a      	ldr	r2, [r7, #4]
 8015414:	6011      	str	r1, [r2, #0]
 8015416:	781b      	ldrb	r3, [r3, #0]
 8015418:	4403      	add	r3, r0
 801541a:	3b30      	subs	r3, #48	; 0x30
 801541c:	60fb      	str	r3, [r7, #12]
 801541e:	687b      	ldr	r3, [r7, #4]
 8015420:	681b      	ldr	r3, [r3, #0]
 8015422:	781b      	ldrb	r3, [r3, #0]
 8015424:	4618      	mov	r0, r3
 8015426:	f7ff ffce 	bl	80153c6 <_is_digit>
 801542a:	4603      	mov	r3, r0
 801542c:	2b00      	cmp	r3, #0
 801542e:	d1e7      	bne.n	8015400 <_atoi+0xe>
 8015430:	68fb      	ldr	r3, [r7, #12]
 8015432:	4618      	mov	r0, r3
 8015434:	3710      	adds	r7, #16
 8015436:	46bd      	mov	sp, r7
 8015438:	bd80      	pop	{r7, pc}

0801543a <_out_rev>:
 801543a:	b590      	push	{r4, r7, lr}
 801543c:	b087      	sub	sp, #28
 801543e:	af00      	add	r7, sp, #0
 8015440:	60f8      	str	r0, [r7, #12]
 8015442:	60b9      	str	r1, [r7, #8]
 8015444:	607a      	str	r2, [r7, #4]
 8015446:	603b      	str	r3, [r7, #0]
 8015448:	687b      	ldr	r3, [r7, #4]
 801544a:	613b      	str	r3, [r7, #16]
 801544c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801544e:	f003 0302 	and.w	r3, r3, #2
 8015452:	2b00      	cmp	r3, #0
 8015454:	d125      	bne.n	80154a2 <_out_rev+0x68>
 8015456:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8015458:	f003 0301 	and.w	r3, r3, #1
 801545c:	2b00      	cmp	r3, #0
 801545e:	d120      	bne.n	80154a2 <_out_rev+0x68>
 8015460:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015462:	617b      	str	r3, [r7, #20]
 8015464:	e00a      	b.n	801547c <_out_rev+0x42>
 8015466:	687a      	ldr	r2, [r7, #4]
 8015468:	1c53      	adds	r3, r2, #1
 801546a:	607b      	str	r3, [r7, #4]
 801546c:	68fc      	ldr	r4, [r7, #12]
 801546e:	683b      	ldr	r3, [r7, #0]
 8015470:	68b9      	ldr	r1, [r7, #8]
 8015472:	2020      	movs	r0, #32
 8015474:	47a0      	blx	r4
 8015476:	697b      	ldr	r3, [r7, #20]
 8015478:	3301      	adds	r3, #1
 801547a:	617b      	str	r3, [r7, #20]
 801547c:	697a      	ldr	r2, [r7, #20]
 801547e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015480:	429a      	cmp	r2, r3
 8015482:	d3f0      	bcc.n	8015466 <_out_rev+0x2c>
 8015484:	e00d      	b.n	80154a2 <_out_rev+0x68>
 8015486:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015488:	3b01      	subs	r3, #1
 801548a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801548c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801548e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015490:	4413      	add	r3, r2
 8015492:	7818      	ldrb	r0, [r3, #0]
 8015494:	687a      	ldr	r2, [r7, #4]
 8015496:	1c53      	adds	r3, r2, #1
 8015498:	607b      	str	r3, [r7, #4]
 801549a:	68fc      	ldr	r4, [r7, #12]
 801549c:	683b      	ldr	r3, [r7, #0]
 801549e:	68b9      	ldr	r1, [r7, #8]
 80154a0:	47a0      	blx	r4
 80154a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80154a4:	2b00      	cmp	r3, #0
 80154a6:	d1ee      	bne.n	8015486 <_out_rev+0x4c>
 80154a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80154aa:	f003 0302 	and.w	r3, r3, #2
 80154ae:	2b00      	cmp	r3, #0
 80154b0:	d00e      	beq.n	80154d0 <_out_rev+0x96>
 80154b2:	e007      	b.n	80154c4 <_out_rev+0x8a>
 80154b4:	687a      	ldr	r2, [r7, #4]
 80154b6:	1c53      	adds	r3, r2, #1
 80154b8:	607b      	str	r3, [r7, #4]
 80154ba:	68fc      	ldr	r4, [r7, #12]
 80154bc:	683b      	ldr	r3, [r7, #0]
 80154be:	68b9      	ldr	r1, [r7, #8]
 80154c0:	2020      	movs	r0, #32
 80154c2:	47a0      	blx	r4
 80154c4:	687a      	ldr	r2, [r7, #4]
 80154c6:	693b      	ldr	r3, [r7, #16]
 80154c8:	1ad3      	subs	r3, r2, r3
 80154ca:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80154cc:	429a      	cmp	r2, r3
 80154ce:	d8f1      	bhi.n	80154b4 <_out_rev+0x7a>
 80154d0:	687b      	ldr	r3, [r7, #4]
 80154d2:	4618      	mov	r0, r3
 80154d4:	371c      	adds	r7, #28
 80154d6:	46bd      	mov	sp, r7
 80154d8:	bd90      	pop	{r4, r7, pc}

080154da <_ntoa_format>:
 80154da:	b580      	push	{r7, lr}
 80154dc:	b088      	sub	sp, #32
 80154de:	af04      	add	r7, sp, #16
 80154e0:	60f8      	str	r0, [r7, #12]
 80154e2:	60b9      	str	r1, [r7, #8]
 80154e4:	607a      	str	r2, [r7, #4]
 80154e6:	603b      	str	r3, [r7, #0]
 80154e8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80154ea:	f003 0302 	and.w	r3, r3, #2
 80154ee:	2b00      	cmp	r3, #0
 80154f0:	d136      	bne.n	8015560 <_ntoa_format+0x86>
 80154f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80154f4:	2b00      	cmp	r3, #0
 80154f6:	d018      	beq.n	801552a <_ntoa_format+0x50>
 80154f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80154fa:	f003 0301 	and.w	r3, r3, #1
 80154fe:	2b00      	cmp	r3, #0
 8015500:	d013      	beq.n	801552a <_ntoa_format+0x50>
 8015502:	f897 3020 	ldrb.w	r3, [r7, #32]
 8015506:	2b00      	cmp	r3, #0
 8015508:	d104      	bne.n	8015514 <_ntoa_format+0x3a>
 801550a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801550c:	f003 030c 	and.w	r3, r3, #12
 8015510:	2b00      	cmp	r3, #0
 8015512:	d00a      	beq.n	801552a <_ntoa_format+0x50>
 8015514:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015516:	3b01      	subs	r3, #1
 8015518:	62fb      	str	r3, [r7, #44]	; 0x2c
 801551a:	e006      	b.n	801552a <_ntoa_format+0x50>
 801551c:	69fb      	ldr	r3, [r7, #28]
 801551e:	1c5a      	adds	r2, r3, #1
 8015520:	61fa      	str	r2, [r7, #28]
 8015522:	69ba      	ldr	r2, [r7, #24]
 8015524:	4413      	add	r3, r2
 8015526:	2230      	movs	r2, #48	; 0x30
 8015528:	701a      	strb	r2, [r3, #0]
 801552a:	69fa      	ldr	r2, [r7, #28]
 801552c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801552e:	429a      	cmp	r2, r3
 8015530:	d20a      	bcs.n	8015548 <_ntoa_format+0x6e>
 8015532:	69fb      	ldr	r3, [r7, #28]
 8015534:	2b1f      	cmp	r3, #31
 8015536:	d9f1      	bls.n	801551c <_ntoa_format+0x42>
 8015538:	e006      	b.n	8015548 <_ntoa_format+0x6e>
 801553a:	69fb      	ldr	r3, [r7, #28]
 801553c:	1c5a      	adds	r2, r3, #1
 801553e:	61fa      	str	r2, [r7, #28]
 8015540:	69ba      	ldr	r2, [r7, #24]
 8015542:	4413      	add	r3, r2
 8015544:	2230      	movs	r2, #48	; 0x30
 8015546:	701a      	strb	r2, [r3, #0]
 8015548:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801554a:	f003 0301 	and.w	r3, r3, #1
 801554e:	2b00      	cmp	r3, #0
 8015550:	d006      	beq.n	8015560 <_ntoa_format+0x86>
 8015552:	69fa      	ldr	r2, [r7, #28]
 8015554:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015556:	429a      	cmp	r2, r3
 8015558:	d202      	bcs.n	8015560 <_ntoa_format+0x86>
 801555a:	69fb      	ldr	r3, [r7, #28]
 801555c:	2b1f      	cmp	r3, #31
 801555e:	d9ec      	bls.n	801553a <_ntoa_format+0x60>
 8015560:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015562:	f003 0310 	and.w	r3, r3, #16
 8015566:	2b00      	cmp	r3, #0
 8015568:	d058      	beq.n	801561c <_ntoa_format+0x142>
 801556a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801556c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8015570:	2b00      	cmp	r3, #0
 8015572:	d116      	bne.n	80155a2 <_ntoa_format+0xc8>
 8015574:	69fb      	ldr	r3, [r7, #28]
 8015576:	2b00      	cmp	r3, #0
 8015578:	d013      	beq.n	80155a2 <_ntoa_format+0xc8>
 801557a:	69fa      	ldr	r2, [r7, #28]
 801557c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801557e:	429a      	cmp	r2, r3
 8015580:	d003      	beq.n	801558a <_ntoa_format+0xb0>
 8015582:	69fa      	ldr	r2, [r7, #28]
 8015584:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015586:	429a      	cmp	r2, r3
 8015588:	d10b      	bne.n	80155a2 <_ntoa_format+0xc8>
 801558a:	69fb      	ldr	r3, [r7, #28]
 801558c:	3b01      	subs	r3, #1
 801558e:	61fb      	str	r3, [r7, #28]
 8015590:	69fb      	ldr	r3, [r7, #28]
 8015592:	2b00      	cmp	r3, #0
 8015594:	d005      	beq.n	80155a2 <_ntoa_format+0xc8>
 8015596:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8015598:	2b10      	cmp	r3, #16
 801559a:	d102      	bne.n	80155a2 <_ntoa_format+0xc8>
 801559c:	69fb      	ldr	r3, [r7, #28]
 801559e:	3b01      	subs	r3, #1
 80155a0:	61fb      	str	r3, [r7, #28]
 80155a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80155a4:	2b10      	cmp	r3, #16
 80155a6:	d10f      	bne.n	80155c8 <_ntoa_format+0xee>
 80155a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80155aa:	f003 0320 	and.w	r3, r3, #32
 80155ae:	2b00      	cmp	r3, #0
 80155b0:	d10a      	bne.n	80155c8 <_ntoa_format+0xee>
 80155b2:	69fb      	ldr	r3, [r7, #28]
 80155b4:	2b1f      	cmp	r3, #31
 80155b6:	d807      	bhi.n	80155c8 <_ntoa_format+0xee>
 80155b8:	69fb      	ldr	r3, [r7, #28]
 80155ba:	1c5a      	adds	r2, r3, #1
 80155bc:	61fa      	str	r2, [r7, #28]
 80155be:	69ba      	ldr	r2, [r7, #24]
 80155c0:	4413      	add	r3, r2
 80155c2:	2278      	movs	r2, #120	; 0x78
 80155c4:	701a      	strb	r2, [r3, #0]
 80155c6:	e01f      	b.n	8015608 <_ntoa_format+0x12e>
 80155c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80155ca:	2b10      	cmp	r3, #16
 80155cc:	d10f      	bne.n	80155ee <_ntoa_format+0x114>
 80155ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80155d0:	f003 0320 	and.w	r3, r3, #32
 80155d4:	2b00      	cmp	r3, #0
 80155d6:	d00a      	beq.n	80155ee <_ntoa_format+0x114>
 80155d8:	69fb      	ldr	r3, [r7, #28]
 80155da:	2b1f      	cmp	r3, #31
 80155dc:	d807      	bhi.n	80155ee <_ntoa_format+0x114>
 80155de:	69fb      	ldr	r3, [r7, #28]
 80155e0:	1c5a      	adds	r2, r3, #1
 80155e2:	61fa      	str	r2, [r7, #28]
 80155e4:	69ba      	ldr	r2, [r7, #24]
 80155e6:	4413      	add	r3, r2
 80155e8:	2258      	movs	r2, #88	; 0x58
 80155ea:	701a      	strb	r2, [r3, #0]
 80155ec:	e00c      	b.n	8015608 <_ntoa_format+0x12e>
 80155ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80155f0:	2b02      	cmp	r3, #2
 80155f2:	d109      	bne.n	8015608 <_ntoa_format+0x12e>
 80155f4:	69fb      	ldr	r3, [r7, #28]
 80155f6:	2b1f      	cmp	r3, #31
 80155f8:	d806      	bhi.n	8015608 <_ntoa_format+0x12e>
 80155fa:	69fb      	ldr	r3, [r7, #28]
 80155fc:	1c5a      	adds	r2, r3, #1
 80155fe:	61fa      	str	r2, [r7, #28]
 8015600:	69ba      	ldr	r2, [r7, #24]
 8015602:	4413      	add	r3, r2
 8015604:	2262      	movs	r2, #98	; 0x62
 8015606:	701a      	strb	r2, [r3, #0]
 8015608:	69fb      	ldr	r3, [r7, #28]
 801560a:	2b1f      	cmp	r3, #31
 801560c:	d806      	bhi.n	801561c <_ntoa_format+0x142>
 801560e:	69fb      	ldr	r3, [r7, #28]
 8015610:	1c5a      	adds	r2, r3, #1
 8015612:	61fa      	str	r2, [r7, #28]
 8015614:	69ba      	ldr	r2, [r7, #24]
 8015616:	4413      	add	r3, r2
 8015618:	2230      	movs	r2, #48	; 0x30
 801561a:	701a      	strb	r2, [r3, #0]
 801561c:	69fb      	ldr	r3, [r7, #28]
 801561e:	2b1f      	cmp	r3, #31
 8015620:	d824      	bhi.n	801566c <_ntoa_format+0x192>
 8015622:	f897 3020 	ldrb.w	r3, [r7, #32]
 8015626:	2b00      	cmp	r3, #0
 8015628:	d007      	beq.n	801563a <_ntoa_format+0x160>
 801562a:	69fb      	ldr	r3, [r7, #28]
 801562c:	1c5a      	adds	r2, r3, #1
 801562e:	61fa      	str	r2, [r7, #28]
 8015630:	69ba      	ldr	r2, [r7, #24]
 8015632:	4413      	add	r3, r2
 8015634:	222d      	movs	r2, #45	; 0x2d
 8015636:	701a      	strb	r2, [r3, #0]
 8015638:	e018      	b.n	801566c <_ntoa_format+0x192>
 801563a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801563c:	f003 0304 	and.w	r3, r3, #4
 8015640:	2b00      	cmp	r3, #0
 8015642:	d007      	beq.n	8015654 <_ntoa_format+0x17a>
 8015644:	69fb      	ldr	r3, [r7, #28]
 8015646:	1c5a      	adds	r2, r3, #1
 8015648:	61fa      	str	r2, [r7, #28]
 801564a:	69ba      	ldr	r2, [r7, #24]
 801564c:	4413      	add	r3, r2
 801564e:	222b      	movs	r2, #43	; 0x2b
 8015650:	701a      	strb	r2, [r3, #0]
 8015652:	e00b      	b.n	801566c <_ntoa_format+0x192>
 8015654:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8015656:	f003 0308 	and.w	r3, r3, #8
 801565a:	2b00      	cmp	r3, #0
 801565c:	d006      	beq.n	801566c <_ntoa_format+0x192>
 801565e:	69fb      	ldr	r3, [r7, #28]
 8015660:	1c5a      	adds	r2, r3, #1
 8015662:	61fa      	str	r2, [r7, #28]
 8015664:	69ba      	ldr	r2, [r7, #24]
 8015666:	4413      	add	r3, r2
 8015668:	2220      	movs	r2, #32
 801566a:	701a      	strb	r2, [r3, #0]
 801566c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801566e:	9303      	str	r3, [sp, #12]
 8015670:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015672:	9302      	str	r3, [sp, #8]
 8015674:	69fb      	ldr	r3, [r7, #28]
 8015676:	9301      	str	r3, [sp, #4]
 8015678:	69bb      	ldr	r3, [r7, #24]
 801567a:	9300      	str	r3, [sp, #0]
 801567c:	683b      	ldr	r3, [r7, #0]
 801567e:	687a      	ldr	r2, [r7, #4]
 8015680:	68b9      	ldr	r1, [r7, #8]
 8015682:	68f8      	ldr	r0, [r7, #12]
 8015684:	f7ff fed9 	bl	801543a <_out_rev>
 8015688:	4603      	mov	r3, r0
 801568a:	4618      	mov	r0, r3
 801568c:	3710      	adds	r7, #16
 801568e:	46bd      	mov	sp, r7
 8015690:	bd80      	pop	{r7, pc}

08015692 <_ntoa_long>:
 8015692:	b580      	push	{r7, lr}
 8015694:	b096      	sub	sp, #88	; 0x58
 8015696:	af08      	add	r7, sp, #32
 8015698:	60f8      	str	r0, [r7, #12]
 801569a:	60b9      	str	r1, [r7, #8]
 801569c:	607a      	str	r2, [r7, #4]
 801569e:	603b      	str	r3, [r7, #0]
 80156a0:	2300      	movs	r3, #0
 80156a2:	637b      	str	r3, [r7, #52]	; 0x34
 80156a4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80156a6:	2b00      	cmp	r3, #0
 80156a8:	d103      	bne.n	80156b2 <_ntoa_long+0x20>
 80156aa:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80156ac:	f023 0310 	bic.w	r3, r3, #16
 80156b0:	657b      	str	r3, [r7, #84]	; 0x54
 80156b2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80156b4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80156b8:	2b00      	cmp	r3, #0
 80156ba:	d002      	beq.n	80156c2 <_ntoa_long+0x30>
 80156bc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80156be:	2b00      	cmp	r3, #0
 80156c0:	d032      	beq.n	8015728 <_ntoa_long+0x96>
 80156c2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80156c4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80156c6:	fbb3 f2f2 	udiv	r2, r3, r2
 80156ca:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80156cc:	fb01 f202 	mul.w	r2, r1, r2
 80156d0:	1a9b      	subs	r3, r3, r2
 80156d2:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80156d6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80156da:	2b09      	cmp	r3, #9
 80156dc:	d804      	bhi.n	80156e8 <_ntoa_long+0x56>
 80156de:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80156e2:	3330      	adds	r3, #48	; 0x30
 80156e4:	b2da      	uxtb	r2, r3
 80156e6:	e00d      	b.n	8015704 <_ntoa_long+0x72>
 80156e8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80156ea:	f003 0320 	and.w	r3, r3, #32
 80156ee:	2b00      	cmp	r3, #0
 80156f0:	d001      	beq.n	80156f6 <_ntoa_long+0x64>
 80156f2:	2241      	movs	r2, #65	; 0x41
 80156f4:	e000      	b.n	80156f8 <_ntoa_long+0x66>
 80156f6:	2261      	movs	r2, #97	; 0x61
 80156f8:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80156fc:	4413      	add	r3, r2
 80156fe:	b2db      	uxtb	r3, r3
 8015700:	3b0a      	subs	r3, #10
 8015702:	b2da      	uxtb	r2, r3
 8015704:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8015706:	1c59      	adds	r1, r3, #1
 8015708:	6379      	str	r1, [r7, #52]	; 0x34
 801570a:	3338      	adds	r3, #56	; 0x38
 801570c:	443b      	add	r3, r7
 801570e:	f803 2c28 	strb.w	r2, [r3, #-40]
 8015712:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8015714:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015716:	fbb2 f3f3 	udiv	r3, r2, r3
 801571a:	643b      	str	r3, [r7, #64]	; 0x40
 801571c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801571e:	2b00      	cmp	r3, #0
 8015720:	d002      	beq.n	8015728 <_ntoa_long+0x96>
 8015722:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8015724:	2b1f      	cmp	r3, #31
 8015726:	d9cc      	bls.n	80156c2 <_ntoa_long+0x30>
 8015728:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801572a:	9306      	str	r3, [sp, #24]
 801572c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801572e:	9305      	str	r3, [sp, #20]
 8015730:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015732:	9304      	str	r3, [sp, #16]
 8015734:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015736:	9303      	str	r3, [sp, #12]
 8015738:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 801573c:	9302      	str	r3, [sp, #8]
 801573e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8015740:	9301      	str	r3, [sp, #4]
 8015742:	f107 0310 	add.w	r3, r7, #16
 8015746:	9300      	str	r3, [sp, #0]
 8015748:	683b      	ldr	r3, [r7, #0]
 801574a:	687a      	ldr	r2, [r7, #4]
 801574c:	68b9      	ldr	r1, [r7, #8]
 801574e:	68f8      	ldr	r0, [r7, #12]
 8015750:	f7ff fec3 	bl	80154da <_ntoa_format>
 8015754:	4603      	mov	r3, r0
 8015756:	4618      	mov	r0, r3
 8015758:	3738      	adds	r7, #56	; 0x38
 801575a:	46bd      	mov	sp, r7
 801575c:	bd80      	pop	{r7, pc}

0801575e <_ntoa_long_long>:
 801575e:	b580      	push	{r7, lr}
 8015760:	b096      	sub	sp, #88	; 0x58
 8015762:	af08      	add	r7, sp, #32
 8015764:	60f8      	str	r0, [r7, #12]
 8015766:	60b9      	str	r1, [r7, #8]
 8015768:	607a      	str	r2, [r7, #4]
 801576a:	603b      	str	r3, [r7, #0]
 801576c:	2300      	movs	r3, #0
 801576e:	637b      	str	r3, [r7, #52]	; 0x34
 8015770:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8015774:	4313      	orrs	r3, r2
 8015776:	d103      	bne.n	8015780 <_ntoa_long_long+0x22>
 8015778:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 801577a:	f023 0310 	bic.w	r3, r3, #16
 801577e:	663b      	str	r3, [r7, #96]	; 0x60
 8015780:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8015782:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8015786:	2b00      	cmp	r3, #0
 8015788:	d003      	beq.n	8015792 <_ntoa_long_long+0x34>
 801578a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 801578e:	4313      	orrs	r3, r2
 8015790:	d037      	beq.n	8015802 <_ntoa_long_long+0xa4>
 8015792:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 8015796:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 801579a:	f7eb f94f 	bl	8000a3c <__aeabi_uldivmod>
 801579e:	4613      	mov	r3, r2
 80157a0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80157a4:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80157a8:	2b09      	cmp	r3, #9
 80157aa:	d804      	bhi.n	80157b6 <_ntoa_long_long+0x58>
 80157ac:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80157b0:	3330      	adds	r3, #48	; 0x30
 80157b2:	b2da      	uxtb	r2, r3
 80157b4:	e00d      	b.n	80157d2 <_ntoa_long_long+0x74>
 80157b6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80157b8:	f003 0320 	and.w	r3, r3, #32
 80157bc:	2b00      	cmp	r3, #0
 80157be:	d001      	beq.n	80157c4 <_ntoa_long_long+0x66>
 80157c0:	2241      	movs	r2, #65	; 0x41
 80157c2:	e000      	b.n	80157c6 <_ntoa_long_long+0x68>
 80157c4:	2261      	movs	r2, #97	; 0x61
 80157c6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80157ca:	4413      	add	r3, r2
 80157cc:	b2db      	uxtb	r3, r3
 80157ce:	3b0a      	subs	r3, #10
 80157d0:	b2da      	uxtb	r2, r3
 80157d2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80157d4:	1c59      	adds	r1, r3, #1
 80157d6:	6379      	str	r1, [r7, #52]	; 0x34
 80157d8:	3338      	adds	r3, #56	; 0x38
 80157da:	443b      	add	r3, r7
 80157dc:	f803 2c28 	strb.w	r2, [r3, #-40]
 80157e0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80157e4:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 80157e8:	f7eb f928 	bl	8000a3c <__aeabi_uldivmod>
 80157ec:	4602      	mov	r2, r0
 80157ee:	460b      	mov	r3, r1
 80157f0:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 80157f4:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 80157f8:	4313      	orrs	r3, r2
 80157fa:	d002      	beq.n	8015802 <_ntoa_long_long+0xa4>
 80157fc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80157fe:	2b1f      	cmp	r3, #31
 8015800:	d9c7      	bls.n	8015792 <_ntoa_long_long+0x34>
 8015802:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8015804:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8015806:	9206      	str	r2, [sp, #24]
 8015808:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801580a:	9205      	str	r2, [sp, #20]
 801580c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801580e:	9204      	str	r2, [sp, #16]
 8015810:	9303      	str	r3, [sp, #12]
 8015812:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8015816:	9302      	str	r3, [sp, #8]
 8015818:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801581a:	9301      	str	r3, [sp, #4]
 801581c:	f107 0310 	add.w	r3, r7, #16
 8015820:	9300      	str	r3, [sp, #0]
 8015822:	683b      	ldr	r3, [r7, #0]
 8015824:	687a      	ldr	r2, [r7, #4]
 8015826:	68b9      	ldr	r1, [r7, #8]
 8015828:	68f8      	ldr	r0, [r7, #12]
 801582a:	f7ff fe56 	bl	80154da <_ntoa_format>
 801582e:	4603      	mov	r3, r0
 8015830:	4618      	mov	r0, r3
 8015832:	3738      	adds	r7, #56	; 0x38
 8015834:	46bd      	mov	sp, r7
 8015836:	bd80      	pop	{r7, pc}

08015838 <_ftoa>:
 8015838:	b590      	push	{r4, r7, lr}
 801583a:	b09b      	sub	sp, #108	; 0x6c
 801583c:	af04      	add	r7, sp, #16
 801583e:	60f8      	str	r0, [r7, #12]
 8015840:	60b9      	str	r1, [r7, #8]
 8015842:	607a      	str	r2, [r7, #4]
 8015844:	603b      	str	r3, [r7, #0]
 8015846:	2300      	movs	r3, #0
 8015848:	657b      	str	r3, [r7, #84]	; 0x54
 801584a:	f04f 0200 	mov.w	r2, #0
 801584e:	f04f 0300 	mov.w	r3, #0
 8015852:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8015856:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 801585a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 801585e:	f7eb f823 	bl	80008a8 <__aeabi_dcmpeq>
 8015862:	4603      	mov	r3, r0
 8015864:	2b00      	cmp	r3, #0
 8015866:	d10f      	bne.n	8015888 <_ftoa+0x50>
 8015868:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 801586a:	9303      	str	r3, [sp, #12]
 801586c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801586e:	9302      	str	r3, [sp, #8]
 8015870:	2303      	movs	r3, #3
 8015872:	9301      	str	r3, [sp, #4]
 8015874:	4ba2      	ldr	r3, [pc, #648]	; (8015b00 <_ftoa+0x2c8>)
 8015876:	9300      	str	r3, [sp, #0]
 8015878:	683b      	ldr	r3, [r7, #0]
 801587a:	687a      	ldr	r2, [r7, #4]
 801587c:	68b9      	ldr	r1, [r7, #8]
 801587e:	68f8      	ldr	r0, [r7, #12]
 8015880:	f7ff fddb 	bl	801543a <_out_rev>
 8015884:	4603      	mov	r3, r0
 8015886:	e215      	b.n	8015cb4 <_ftoa+0x47c>
 8015888:	f04f 32ff 	mov.w	r2, #4294967295
 801588c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
 8015890:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8015894:	f7eb f812 	bl	80008bc <__aeabi_dcmplt>
 8015898:	4603      	mov	r3, r0
 801589a:	2b00      	cmp	r3, #0
 801589c:	d00f      	beq.n	80158be <_ftoa+0x86>
 801589e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80158a0:	9303      	str	r3, [sp, #12]
 80158a2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80158a4:	9302      	str	r3, [sp, #8]
 80158a6:	2304      	movs	r3, #4
 80158a8:	9301      	str	r3, [sp, #4]
 80158aa:	4b96      	ldr	r3, [pc, #600]	; (8015b04 <_ftoa+0x2cc>)
 80158ac:	9300      	str	r3, [sp, #0]
 80158ae:	683b      	ldr	r3, [r7, #0]
 80158b0:	687a      	ldr	r2, [r7, #4]
 80158b2:	68b9      	ldr	r1, [r7, #8]
 80158b4:	68f8      	ldr	r0, [r7, #12]
 80158b6:	f7ff fdc0 	bl	801543a <_out_rev>
 80158ba:	4603      	mov	r3, r0
 80158bc:	e1fa      	b.n	8015cb4 <_ftoa+0x47c>
 80158be:	f04f 32ff 	mov.w	r2, #4294967295
 80158c2:	4b91      	ldr	r3, [pc, #580]	; (8015b08 <_ftoa+0x2d0>)
 80158c4:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80158c8:	f7eb f816 	bl	80008f8 <__aeabi_dcmpgt>
 80158cc:	4603      	mov	r3, r0
 80158ce:	2b00      	cmp	r3, #0
 80158d0:	d01d      	beq.n	801590e <_ftoa+0xd6>
 80158d2:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80158d4:	f003 0304 	and.w	r3, r3, #4
 80158d8:	2b00      	cmp	r3, #0
 80158da:	d001      	beq.n	80158e0 <_ftoa+0xa8>
 80158dc:	4b8b      	ldr	r3, [pc, #556]	; (8015b0c <_ftoa+0x2d4>)
 80158de:	e000      	b.n	80158e2 <_ftoa+0xaa>
 80158e0:	4b8b      	ldr	r3, [pc, #556]	; (8015b10 <_ftoa+0x2d8>)
 80158e2:	6fba      	ldr	r2, [r7, #120]	; 0x78
 80158e4:	f002 0204 	and.w	r2, r2, #4
 80158e8:	2a00      	cmp	r2, #0
 80158ea:	d001      	beq.n	80158f0 <_ftoa+0xb8>
 80158ec:	2204      	movs	r2, #4
 80158ee:	e000      	b.n	80158f2 <_ftoa+0xba>
 80158f0:	2203      	movs	r2, #3
 80158f2:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 80158f4:	9103      	str	r1, [sp, #12]
 80158f6:	6f79      	ldr	r1, [r7, #116]	; 0x74
 80158f8:	9102      	str	r1, [sp, #8]
 80158fa:	9201      	str	r2, [sp, #4]
 80158fc:	9300      	str	r3, [sp, #0]
 80158fe:	683b      	ldr	r3, [r7, #0]
 8015900:	687a      	ldr	r2, [r7, #4]
 8015902:	68b9      	ldr	r1, [r7, #8]
 8015904:	68f8      	ldr	r0, [r7, #12]
 8015906:	f7ff fd98 	bl	801543a <_out_rev>
 801590a:	4603      	mov	r3, r0
 801590c:	e1d2      	b.n	8015cb4 <_ftoa+0x47c>
 801590e:	a378      	add	r3, pc, #480	; (adr r3, 8015af0 <_ftoa+0x2b8>)
 8015910:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015914:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8015918:	f7ea ffee 	bl	80008f8 <__aeabi_dcmpgt>
 801591c:	4603      	mov	r3, r0
 801591e:	2b00      	cmp	r3, #0
 8015920:	d109      	bne.n	8015936 <_ftoa+0xfe>
 8015922:	a375      	add	r3, pc, #468	; (adr r3, 8015af8 <_ftoa+0x2c0>)
 8015924:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015928:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 801592c:	f7ea ffc6 	bl	80008bc <__aeabi_dcmplt>
 8015930:	4603      	mov	r3, r0
 8015932:	2b00      	cmp	r3, #0
 8015934:	d001      	beq.n	801593a <_ftoa+0x102>
 8015936:	2300      	movs	r3, #0
 8015938:	e1bc      	b.n	8015cb4 <_ftoa+0x47c>
 801593a:	2300      	movs	r3, #0
 801593c:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8015940:	f04f 0200 	mov.w	r2, #0
 8015944:	f04f 0300 	mov.w	r3, #0
 8015948:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 801594c:	f7ea ffb6 	bl	80008bc <__aeabi_dcmplt>
 8015950:	4603      	mov	r3, r0
 8015952:	2b00      	cmp	r3, #0
 8015954:	d00e      	beq.n	8015974 <_ftoa+0x13c>
 8015956:	2301      	movs	r3, #1
 8015958:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 801595c:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8015960:	f04f 0000 	mov.w	r0, #0
 8015964:	f04f 0100 	mov.w	r1, #0
 8015968:	f7ea fd90 	bl	800048c <__aeabi_dsub>
 801596c:	4602      	mov	r2, r0
 801596e:	460b      	mov	r3, r1
 8015970:	e9c7 231a 	strd	r2, r3, [r7, #104]	; 0x68
 8015974:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015976:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801597a:	2b00      	cmp	r3, #0
 801597c:	d10d      	bne.n	801599a <_ftoa+0x162>
 801597e:	2306      	movs	r3, #6
 8015980:	673b      	str	r3, [r7, #112]	; 0x70
 8015982:	e00a      	b.n	801599a <_ftoa+0x162>
 8015984:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015986:	1c5a      	adds	r2, r3, #1
 8015988:	657a      	str	r2, [r7, #84]	; 0x54
 801598a:	3358      	adds	r3, #88	; 0x58
 801598c:	443b      	add	r3, r7
 801598e:	2230      	movs	r2, #48	; 0x30
 8015990:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015994:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8015996:	3b01      	subs	r3, #1
 8015998:	673b      	str	r3, [r7, #112]	; 0x70
 801599a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801599c:	2b1f      	cmp	r3, #31
 801599e:	d802      	bhi.n	80159a6 <_ftoa+0x16e>
 80159a0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80159a2:	2b09      	cmp	r3, #9
 80159a4:	d8ee      	bhi.n	8015984 <_ftoa+0x14c>
 80159a6:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80159aa:	f7ea ffaf 	bl	800090c <__aeabi_d2iz>
 80159ae:	4603      	mov	r3, r0
 80159b0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80159b2:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 80159b4:	f7ea feb8 	bl	8000728 <__aeabi_i2d>
 80159b8:	4602      	mov	r2, r0
 80159ba:	460b      	mov	r3, r1
 80159bc:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80159c0:	f7ea fd64 	bl	800048c <__aeabi_dsub>
 80159c4:	4602      	mov	r2, r0
 80159c6:	460b      	mov	r3, r1
 80159c8:	4610      	mov	r0, r2
 80159ca:	4619      	mov	r1, r3
 80159cc:	4a51      	ldr	r2, [pc, #324]	; (8015b14 <_ftoa+0x2dc>)
 80159ce:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80159d0:	00db      	lsls	r3, r3, #3
 80159d2:	4413      	add	r3, r2
 80159d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80159d8:	f7ea fc2a 	bl	8000230 <__aeabi_dmul>
 80159dc:	4602      	mov	r2, r0
 80159de:	460b      	mov	r3, r1
 80159e0:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 80159e4:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 80159e8:	f7ea ffb8 	bl	800095c <__aeabi_d2uiz>
 80159ec:	4603      	mov	r3, r0
 80159ee:	64bb      	str	r3, [r7, #72]	; 0x48
 80159f0:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80159f2:	f7ea fe89 	bl	8000708 <__aeabi_ui2d>
 80159f6:	4602      	mov	r2, r0
 80159f8:	460b      	mov	r3, r1
 80159fa:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 80159fe:	f7ea fd45 	bl	800048c <__aeabi_dsub>
 8015a02:	4602      	mov	r2, r0
 8015a04:	460b      	mov	r3, r1
 8015a06:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8015a0a:	f04f 0200 	mov.w	r2, #0
 8015a0e:	4b42      	ldr	r3, [pc, #264]	; (8015b18 <_ftoa+0x2e0>)
 8015a10:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8015a14:	f7ea ff70 	bl	80008f8 <__aeabi_dcmpgt>
 8015a18:	4603      	mov	r3, r0
 8015a1a:	2b00      	cmp	r3, #0
 8015a1c:	d016      	beq.n	8015a4c <_ftoa+0x214>
 8015a1e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015a20:	3301      	adds	r3, #1
 8015a22:	64bb      	str	r3, [r7, #72]	; 0x48
 8015a24:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8015a26:	f7ea fe6f 	bl	8000708 <__aeabi_ui2d>
 8015a2a:	4a3a      	ldr	r2, [pc, #232]	; (8015b14 <_ftoa+0x2dc>)
 8015a2c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8015a2e:	00db      	lsls	r3, r3, #3
 8015a30:	4413      	add	r3, r2
 8015a32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a36:	f7ea ff55 	bl	80008e4 <__aeabi_dcmpge>
 8015a3a:	4603      	mov	r3, r0
 8015a3c:	2b00      	cmp	r3, #0
 8015a3e:	d01a      	beq.n	8015a76 <_ftoa+0x23e>
 8015a40:	2300      	movs	r3, #0
 8015a42:	64bb      	str	r3, [r7, #72]	; 0x48
 8015a44:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015a46:	3301      	adds	r3, #1
 8015a48:	64fb      	str	r3, [r7, #76]	; 0x4c
 8015a4a:	e014      	b.n	8015a76 <_ftoa+0x23e>
 8015a4c:	f04f 0200 	mov.w	r2, #0
 8015a50:	4b31      	ldr	r3, [pc, #196]	; (8015b18 <_ftoa+0x2e0>)
 8015a52:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8015a56:	f7ea ff31 	bl	80008bc <__aeabi_dcmplt>
 8015a5a:	4603      	mov	r3, r0
 8015a5c:	2b00      	cmp	r3, #0
 8015a5e:	d10a      	bne.n	8015a76 <_ftoa+0x23e>
 8015a60:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015a62:	2b00      	cmp	r3, #0
 8015a64:	d004      	beq.n	8015a70 <_ftoa+0x238>
 8015a66:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015a68:	f003 0301 	and.w	r3, r3, #1
 8015a6c:	2b00      	cmp	r3, #0
 8015a6e:	d002      	beq.n	8015a76 <_ftoa+0x23e>
 8015a70:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015a72:	3301      	adds	r3, #1
 8015a74:	64bb      	str	r3, [r7, #72]	; 0x48
 8015a76:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8015a78:	2b00      	cmp	r3, #0
 8015a7a:	d134      	bne.n	8015ae6 <_ftoa+0x2ae>
 8015a7c:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8015a7e:	f7ea fe53 	bl	8000728 <__aeabi_i2d>
 8015a82:	4602      	mov	r2, r0
 8015a84:	460b      	mov	r3, r1
 8015a86:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8015a8a:	f7ea fcff 	bl	800048c <__aeabi_dsub>
 8015a8e:	4602      	mov	r2, r0
 8015a90:	460b      	mov	r3, r1
 8015a92:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8015a96:	2301      	movs	r3, #1
 8015a98:	461c      	mov	r4, r3
 8015a9a:	f04f 0200 	mov.w	r2, #0
 8015a9e:	4b1e      	ldr	r3, [pc, #120]	; (8015b18 <_ftoa+0x2e0>)
 8015aa0:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8015aa4:	f7ea ff0a 	bl	80008bc <__aeabi_dcmplt>
 8015aa8:	4603      	mov	r3, r0
 8015aaa:	2b00      	cmp	r3, #0
 8015aac:	d101      	bne.n	8015ab2 <_ftoa+0x27a>
 8015aae:	2300      	movs	r3, #0
 8015ab0:	461c      	mov	r4, r3
 8015ab2:	b2e3      	uxtb	r3, r4
 8015ab4:	f083 0301 	eor.w	r3, r3, #1
 8015ab8:	b2db      	uxtb	r3, r3
 8015aba:	2b00      	cmp	r3, #0
 8015abc:	d109      	bne.n	8015ad2 <_ftoa+0x29a>
 8015abe:	f04f 0200 	mov.w	r2, #0
 8015ac2:	4b15      	ldr	r3, [pc, #84]	; (8015b18 <_ftoa+0x2e0>)
 8015ac4:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8015ac8:	f7ea ff16 	bl	80008f8 <__aeabi_dcmpgt>
 8015acc:	4603      	mov	r3, r0
 8015ace:	2b00      	cmp	r3, #0
 8015ad0:	d065      	beq.n	8015b9e <_ftoa+0x366>
 8015ad2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015ad4:	f003 0301 	and.w	r3, r3, #1
 8015ad8:	2b00      	cmp	r3, #0
 8015ada:	f000 8082 	beq.w	8015be2 <_ftoa+0x3aa>
 8015ade:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015ae0:	3301      	adds	r3, #1
 8015ae2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8015ae4:	e07d      	b.n	8015be2 <_ftoa+0x3aa>
 8015ae6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8015ae8:	647b      	str	r3, [r7, #68]	; 0x44
 8015aea:	e037      	b.n	8015b5c <_ftoa+0x324>
 8015aec:	f3af 8000 	nop.w
 8015af0:	00000000 	.word	0x00000000
 8015af4:	41cdcd65 	.word	0x41cdcd65
 8015af8:	00000000 	.word	0x00000000
 8015afc:	c1cdcd65 	.word	0xc1cdcd65
 8015b00:	0802f778 	.word	0x0802f778
 8015b04:	0802f77c 	.word	0x0802f77c
 8015b08:	7fefffff 	.word	0x7fefffff
 8015b0c:	0802f784 	.word	0x0802f784
 8015b10:	0802f78c 	.word	0x0802f78c
 8015b14:	08031a20 	.word	0x08031a20
 8015b18:	3fe00000 	.word	0x3fe00000
 8015b1c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8015b1e:	3b01      	subs	r3, #1
 8015b20:	647b      	str	r3, [r7, #68]	; 0x44
 8015b22:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8015b24:	4b65      	ldr	r3, [pc, #404]	; (8015cbc <_ftoa+0x484>)
 8015b26:	fba3 2301 	umull	r2, r3, r3, r1
 8015b2a:	08da      	lsrs	r2, r3, #3
 8015b2c:	4613      	mov	r3, r2
 8015b2e:	009b      	lsls	r3, r3, #2
 8015b30:	4413      	add	r3, r2
 8015b32:	005b      	lsls	r3, r3, #1
 8015b34:	1aca      	subs	r2, r1, r3
 8015b36:	b2d2      	uxtb	r2, r2
 8015b38:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b3a:	1c59      	adds	r1, r3, #1
 8015b3c:	6579      	str	r1, [r7, #84]	; 0x54
 8015b3e:	3230      	adds	r2, #48	; 0x30
 8015b40:	b2d2      	uxtb	r2, r2
 8015b42:	3358      	adds	r3, #88	; 0x58
 8015b44:	443b      	add	r3, r7
 8015b46:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015b4a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015b4c:	4a5b      	ldr	r2, [pc, #364]	; (8015cbc <_ftoa+0x484>)
 8015b4e:	fba2 2303 	umull	r2, r3, r2, r3
 8015b52:	08db      	lsrs	r3, r3, #3
 8015b54:	64bb      	str	r3, [r7, #72]	; 0x48
 8015b56:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8015b58:	2b00      	cmp	r3, #0
 8015b5a:	d003      	beq.n	8015b64 <_ftoa+0x32c>
 8015b5c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b5e:	2b1f      	cmp	r3, #31
 8015b60:	d9dc      	bls.n	8015b1c <_ftoa+0x2e4>
 8015b62:	e009      	b.n	8015b78 <_ftoa+0x340>
 8015b64:	bf00      	nop
 8015b66:	e007      	b.n	8015b78 <_ftoa+0x340>
 8015b68:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b6a:	1c5a      	adds	r2, r3, #1
 8015b6c:	657a      	str	r2, [r7, #84]	; 0x54
 8015b6e:	3358      	adds	r3, #88	; 0x58
 8015b70:	443b      	add	r3, r7
 8015b72:	2230      	movs	r2, #48	; 0x30
 8015b74:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015b78:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b7a:	2b1f      	cmp	r3, #31
 8015b7c:	d804      	bhi.n	8015b88 <_ftoa+0x350>
 8015b7e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8015b80:	1e5a      	subs	r2, r3, #1
 8015b82:	647a      	str	r2, [r7, #68]	; 0x44
 8015b84:	2b00      	cmp	r3, #0
 8015b86:	d1ef      	bne.n	8015b68 <_ftoa+0x330>
 8015b88:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b8a:	2b1f      	cmp	r3, #31
 8015b8c:	d829      	bhi.n	8015be2 <_ftoa+0x3aa>
 8015b8e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015b90:	1c5a      	adds	r2, r3, #1
 8015b92:	657a      	str	r2, [r7, #84]	; 0x54
 8015b94:	3358      	adds	r3, #88	; 0x58
 8015b96:	443b      	add	r3, r7
 8015b98:	222e      	movs	r2, #46	; 0x2e
 8015b9a:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015b9e:	e020      	b.n	8015be2 <_ftoa+0x3aa>
 8015ba0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8015ba2:	4b47      	ldr	r3, [pc, #284]	; (8015cc0 <_ftoa+0x488>)
 8015ba4:	fb83 1302 	smull	r1, r3, r3, r2
 8015ba8:	1099      	asrs	r1, r3, #2
 8015baa:	17d3      	asrs	r3, r2, #31
 8015bac:	1ac9      	subs	r1, r1, r3
 8015bae:	460b      	mov	r3, r1
 8015bb0:	009b      	lsls	r3, r3, #2
 8015bb2:	440b      	add	r3, r1
 8015bb4:	005b      	lsls	r3, r3, #1
 8015bb6:	1ad1      	subs	r1, r2, r3
 8015bb8:	b2ca      	uxtb	r2, r1
 8015bba:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015bbc:	1c59      	adds	r1, r3, #1
 8015bbe:	6579      	str	r1, [r7, #84]	; 0x54
 8015bc0:	3230      	adds	r2, #48	; 0x30
 8015bc2:	b2d2      	uxtb	r2, r2
 8015bc4:	3358      	adds	r3, #88	; 0x58
 8015bc6:	443b      	add	r3, r7
 8015bc8:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015bcc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015bce:	4a3c      	ldr	r2, [pc, #240]	; (8015cc0 <_ftoa+0x488>)
 8015bd0:	fb82 1203 	smull	r1, r2, r2, r3
 8015bd4:	1092      	asrs	r2, r2, #2
 8015bd6:	17db      	asrs	r3, r3, #31
 8015bd8:	1ad3      	subs	r3, r2, r3
 8015bda:	64fb      	str	r3, [r7, #76]	; 0x4c
 8015bdc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8015bde:	2b00      	cmp	r3, #0
 8015be0:	d003      	beq.n	8015bea <_ftoa+0x3b2>
 8015be2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015be4:	2b1f      	cmp	r3, #31
 8015be6:	d9db      	bls.n	8015ba0 <_ftoa+0x368>
 8015be8:	e000      	b.n	8015bec <_ftoa+0x3b4>
 8015bea:	bf00      	nop
 8015bec:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015bee:	f003 0302 	and.w	r3, r3, #2
 8015bf2:	2b00      	cmp	r3, #0
 8015bf4:	d123      	bne.n	8015c3e <_ftoa+0x406>
 8015bf6:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015bf8:	f003 0301 	and.w	r3, r3, #1
 8015bfc:	2b00      	cmp	r3, #0
 8015bfe:	d01e      	beq.n	8015c3e <_ftoa+0x406>
 8015c00:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8015c02:	2b00      	cmp	r3, #0
 8015c04:	d014      	beq.n	8015c30 <_ftoa+0x3f8>
 8015c06:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8015c0a:	2b00      	cmp	r3, #0
 8015c0c:	d104      	bne.n	8015c18 <_ftoa+0x3e0>
 8015c0e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015c10:	f003 030c 	and.w	r3, r3, #12
 8015c14:	2b00      	cmp	r3, #0
 8015c16:	d00b      	beq.n	8015c30 <_ftoa+0x3f8>
 8015c18:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8015c1a:	3b01      	subs	r3, #1
 8015c1c:	677b      	str	r3, [r7, #116]	; 0x74
 8015c1e:	e007      	b.n	8015c30 <_ftoa+0x3f8>
 8015c20:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c22:	1c5a      	adds	r2, r3, #1
 8015c24:	657a      	str	r2, [r7, #84]	; 0x54
 8015c26:	3358      	adds	r3, #88	; 0x58
 8015c28:	443b      	add	r3, r7
 8015c2a:	2230      	movs	r2, #48	; 0x30
 8015c2c:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015c30:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8015c32:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8015c34:	429a      	cmp	r2, r3
 8015c36:	d202      	bcs.n	8015c3e <_ftoa+0x406>
 8015c38:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c3a:	2b1f      	cmp	r3, #31
 8015c3c:	d9f0      	bls.n	8015c20 <_ftoa+0x3e8>
 8015c3e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c40:	2b1f      	cmp	r3, #31
 8015c42:	d827      	bhi.n	8015c94 <_ftoa+0x45c>
 8015c44:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8015c48:	2b00      	cmp	r3, #0
 8015c4a:	d008      	beq.n	8015c5e <_ftoa+0x426>
 8015c4c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c4e:	1c5a      	adds	r2, r3, #1
 8015c50:	657a      	str	r2, [r7, #84]	; 0x54
 8015c52:	3358      	adds	r3, #88	; 0x58
 8015c54:	443b      	add	r3, r7
 8015c56:	222d      	movs	r2, #45	; 0x2d
 8015c58:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015c5c:	e01a      	b.n	8015c94 <_ftoa+0x45c>
 8015c5e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015c60:	f003 0304 	and.w	r3, r3, #4
 8015c64:	2b00      	cmp	r3, #0
 8015c66:	d008      	beq.n	8015c7a <_ftoa+0x442>
 8015c68:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c6a:	1c5a      	adds	r2, r3, #1
 8015c6c:	657a      	str	r2, [r7, #84]	; 0x54
 8015c6e:	3358      	adds	r3, #88	; 0x58
 8015c70:	443b      	add	r3, r7
 8015c72:	222b      	movs	r2, #43	; 0x2b
 8015c74:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015c78:	e00c      	b.n	8015c94 <_ftoa+0x45c>
 8015c7a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015c7c:	f003 0308 	and.w	r3, r3, #8
 8015c80:	2b00      	cmp	r3, #0
 8015c82:	d007      	beq.n	8015c94 <_ftoa+0x45c>
 8015c84:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c86:	1c5a      	adds	r2, r3, #1
 8015c88:	657a      	str	r2, [r7, #84]	; 0x54
 8015c8a:	3358      	adds	r3, #88	; 0x58
 8015c8c:	443b      	add	r3, r7
 8015c8e:	2220      	movs	r2, #32
 8015c90:	f803 2c48 	strb.w	r2, [r3, #-72]
 8015c94:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8015c96:	9303      	str	r3, [sp, #12]
 8015c98:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8015c9a:	9302      	str	r3, [sp, #8]
 8015c9c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8015c9e:	9301      	str	r3, [sp, #4]
 8015ca0:	f107 0310 	add.w	r3, r7, #16
 8015ca4:	9300      	str	r3, [sp, #0]
 8015ca6:	683b      	ldr	r3, [r7, #0]
 8015ca8:	687a      	ldr	r2, [r7, #4]
 8015caa:	68b9      	ldr	r1, [r7, #8]
 8015cac:	68f8      	ldr	r0, [r7, #12]
 8015cae:	f7ff fbc4 	bl	801543a <_out_rev>
 8015cb2:	4603      	mov	r3, r0
 8015cb4:	4618      	mov	r0, r3
 8015cb6:	375c      	adds	r7, #92	; 0x5c
 8015cb8:	46bd      	mov	sp, r7
 8015cba:	bd90      	pop	{r4, r7, pc}
 8015cbc:	cccccccd 	.word	0xcccccccd
 8015cc0:	66666667 	.word	0x66666667

08015cc4 <_vsnprintf>:
 8015cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cc8:	b0a3      	sub	sp, #140	; 0x8c
 8015cca:	af0a      	add	r7, sp, #40	; 0x28
 8015ccc:	6178      	str	r0, [r7, #20]
 8015cce:	6139      	str	r1, [r7, #16]
 8015cd0:	60fa      	str	r2, [r7, #12]
 8015cd2:	60bb      	str	r3, [r7, #8]
 8015cd4:	2300      	movs	r3, #0
 8015cd6:	64fb      	str	r3, [r7, #76]	; 0x4c
 8015cd8:	693b      	ldr	r3, [r7, #16]
 8015cda:	2b00      	cmp	r3, #0
 8015cdc:	f040 844a 	bne.w	8016574 <_vsnprintf+0x8b0>
 8015ce0:	4ba9      	ldr	r3, [pc, #676]	; (8015f88 <_vsnprintf+0x2c4>)
 8015ce2:	617b      	str	r3, [r7, #20]
 8015ce4:	f000 bc46 	b.w	8016574 <_vsnprintf+0x8b0>
 8015ce8:	68bb      	ldr	r3, [r7, #8]
 8015cea:	781b      	ldrb	r3, [r3, #0]
 8015cec:	2b25      	cmp	r3, #37	; 0x25
 8015cee:	d00d      	beq.n	8015d0c <_vsnprintf+0x48>
 8015cf0:	68bb      	ldr	r3, [r7, #8]
 8015cf2:	7818      	ldrb	r0, [r3, #0]
 8015cf4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8015cf6:	1c53      	adds	r3, r2, #1
 8015cf8:	64fb      	str	r3, [r7, #76]	; 0x4c
 8015cfa:	697c      	ldr	r4, [r7, #20]
 8015cfc:	68fb      	ldr	r3, [r7, #12]
 8015cfe:	6939      	ldr	r1, [r7, #16]
 8015d00:	47a0      	blx	r4
 8015d02:	68bb      	ldr	r3, [r7, #8]
 8015d04:	3301      	adds	r3, #1
 8015d06:	60bb      	str	r3, [r7, #8]
 8015d08:	f000 bc34 	b.w	8016574 <_vsnprintf+0x8b0>
 8015d0c:	68bb      	ldr	r3, [r7, #8]
 8015d0e:	3301      	adds	r3, #1
 8015d10:	60bb      	str	r3, [r7, #8]
 8015d12:	2300      	movs	r3, #0
 8015d14:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015d16:	68bb      	ldr	r3, [r7, #8]
 8015d18:	781b      	ldrb	r3, [r3, #0]
 8015d1a:	3b20      	subs	r3, #32
 8015d1c:	2b10      	cmp	r3, #16
 8015d1e:	d857      	bhi.n	8015dd0 <_vsnprintf+0x10c>
 8015d20:	a201      	add	r2, pc, #4	; (adr r2, 8015d28 <_vsnprintf+0x64>)
 8015d22:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015d26:	bf00      	nop
 8015d28:	08015da9 	.word	0x08015da9
 8015d2c:	08015dd1 	.word	0x08015dd1
 8015d30:	08015dd1 	.word	0x08015dd1
 8015d34:	08015dbd 	.word	0x08015dbd
 8015d38:	08015dd1 	.word	0x08015dd1
 8015d3c:	08015dd1 	.word	0x08015dd1
 8015d40:	08015dd1 	.word	0x08015dd1
 8015d44:	08015dd1 	.word	0x08015dd1
 8015d48:	08015dd1 	.word	0x08015dd1
 8015d4c:	08015dd1 	.word	0x08015dd1
 8015d50:	08015dd1 	.word	0x08015dd1
 8015d54:	08015d95 	.word	0x08015d95
 8015d58:	08015dd1 	.word	0x08015dd1
 8015d5c:	08015d81 	.word	0x08015d81
 8015d60:	08015dd1 	.word	0x08015dd1
 8015d64:	08015dd1 	.word	0x08015dd1
 8015d68:	08015d6d 	.word	0x08015d6d
 8015d6c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015d6e:	f043 0301 	orr.w	r3, r3, #1
 8015d72:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015d74:	68bb      	ldr	r3, [r7, #8]
 8015d76:	3301      	adds	r3, #1
 8015d78:	60bb      	str	r3, [r7, #8]
 8015d7a:	2301      	movs	r3, #1
 8015d7c:	653b      	str	r3, [r7, #80]	; 0x50
 8015d7e:	e02a      	b.n	8015dd6 <_vsnprintf+0x112>
 8015d80:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015d82:	f043 0302 	orr.w	r3, r3, #2
 8015d86:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015d88:	68bb      	ldr	r3, [r7, #8]
 8015d8a:	3301      	adds	r3, #1
 8015d8c:	60bb      	str	r3, [r7, #8]
 8015d8e:	2301      	movs	r3, #1
 8015d90:	653b      	str	r3, [r7, #80]	; 0x50
 8015d92:	e020      	b.n	8015dd6 <_vsnprintf+0x112>
 8015d94:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015d96:	f043 0304 	orr.w	r3, r3, #4
 8015d9a:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015d9c:	68bb      	ldr	r3, [r7, #8]
 8015d9e:	3301      	adds	r3, #1
 8015da0:	60bb      	str	r3, [r7, #8]
 8015da2:	2301      	movs	r3, #1
 8015da4:	653b      	str	r3, [r7, #80]	; 0x50
 8015da6:	e016      	b.n	8015dd6 <_vsnprintf+0x112>
 8015da8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015daa:	f043 0308 	orr.w	r3, r3, #8
 8015dae:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015db0:	68bb      	ldr	r3, [r7, #8]
 8015db2:	3301      	adds	r3, #1
 8015db4:	60bb      	str	r3, [r7, #8]
 8015db6:	2301      	movs	r3, #1
 8015db8:	653b      	str	r3, [r7, #80]	; 0x50
 8015dba:	e00c      	b.n	8015dd6 <_vsnprintf+0x112>
 8015dbc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015dbe:	f043 0310 	orr.w	r3, r3, #16
 8015dc2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015dc4:	68bb      	ldr	r3, [r7, #8]
 8015dc6:	3301      	adds	r3, #1
 8015dc8:	60bb      	str	r3, [r7, #8]
 8015dca:	2301      	movs	r3, #1
 8015dcc:	653b      	str	r3, [r7, #80]	; 0x50
 8015dce:	e002      	b.n	8015dd6 <_vsnprintf+0x112>
 8015dd0:	2300      	movs	r3, #0
 8015dd2:	653b      	str	r3, [r7, #80]	; 0x50
 8015dd4:	bf00      	nop
 8015dd6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8015dd8:	2b00      	cmp	r3, #0
 8015dda:	d19c      	bne.n	8015d16 <_vsnprintf+0x52>
 8015ddc:	2300      	movs	r3, #0
 8015dde:	65bb      	str	r3, [r7, #88]	; 0x58
 8015de0:	68bb      	ldr	r3, [r7, #8]
 8015de2:	781b      	ldrb	r3, [r3, #0]
 8015de4:	4618      	mov	r0, r3
 8015de6:	f7ff faee 	bl	80153c6 <_is_digit>
 8015dea:	4603      	mov	r3, r0
 8015dec:	2b00      	cmp	r3, #0
 8015dee:	d006      	beq.n	8015dfe <_vsnprintf+0x13a>
 8015df0:	f107 0308 	add.w	r3, r7, #8
 8015df4:	4618      	mov	r0, r3
 8015df6:	f7ff fafc 	bl	80153f2 <_atoi>
 8015dfa:	65b8      	str	r0, [r7, #88]	; 0x58
 8015dfc:	e01a      	b.n	8015e34 <_vsnprintf+0x170>
 8015dfe:	68bb      	ldr	r3, [r7, #8]
 8015e00:	781b      	ldrb	r3, [r3, #0]
 8015e02:	2b2a      	cmp	r3, #42	; 0x2a
 8015e04:	d116      	bne.n	8015e34 <_vsnprintf+0x170>
 8015e06:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8015e0a:	1d1a      	adds	r2, r3, #4
 8015e0c:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8015e10:	681b      	ldr	r3, [r3, #0]
 8015e12:	63bb      	str	r3, [r7, #56]	; 0x38
 8015e14:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e16:	2b00      	cmp	r3, #0
 8015e18:	da07      	bge.n	8015e2a <_vsnprintf+0x166>
 8015e1a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015e1c:	f043 0302 	orr.w	r3, r3, #2
 8015e20:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015e22:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e24:	425b      	negs	r3, r3
 8015e26:	65bb      	str	r3, [r7, #88]	; 0x58
 8015e28:	e001      	b.n	8015e2e <_vsnprintf+0x16a>
 8015e2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015e2c:	65bb      	str	r3, [r7, #88]	; 0x58
 8015e2e:	68bb      	ldr	r3, [r7, #8]
 8015e30:	3301      	adds	r3, #1
 8015e32:	60bb      	str	r3, [r7, #8]
 8015e34:	2300      	movs	r3, #0
 8015e36:	657b      	str	r3, [r7, #84]	; 0x54
 8015e38:	68bb      	ldr	r3, [r7, #8]
 8015e3a:	781b      	ldrb	r3, [r3, #0]
 8015e3c:	2b2e      	cmp	r3, #46	; 0x2e
 8015e3e:	d127      	bne.n	8015e90 <_vsnprintf+0x1cc>
 8015e40:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015e42:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8015e46:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015e48:	68bb      	ldr	r3, [r7, #8]
 8015e4a:	3301      	adds	r3, #1
 8015e4c:	60bb      	str	r3, [r7, #8]
 8015e4e:	68bb      	ldr	r3, [r7, #8]
 8015e50:	781b      	ldrb	r3, [r3, #0]
 8015e52:	4618      	mov	r0, r3
 8015e54:	f7ff fab7 	bl	80153c6 <_is_digit>
 8015e58:	4603      	mov	r3, r0
 8015e5a:	2b00      	cmp	r3, #0
 8015e5c:	d006      	beq.n	8015e6c <_vsnprintf+0x1a8>
 8015e5e:	f107 0308 	add.w	r3, r7, #8
 8015e62:	4618      	mov	r0, r3
 8015e64:	f7ff fac5 	bl	80153f2 <_atoi>
 8015e68:	6578      	str	r0, [r7, #84]	; 0x54
 8015e6a:	e011      	b.n	8015e90 <_vsnprintf+0x1cc>
 8015e6c:	68bb      	ldr	r3, [r7, #8]
 8015e6e:	781b      	ldrb	r3, [r3, #0]
 8015e70:	2b2a      	cmp	r3, #42	; 0x2a
 8015e72:	d10d      	bne.n	8015e90 <_vsnprintf+0x1cc>
 8015e74:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8015e78:	1d1a      	adds	r2, r3, #4
 8015e7a:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8015e7e:	681b      	ldr	r3, [r3, #0]
 8015e80:	637b      	str	r3, [r7, #52]	; 0x34
 8015e82:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8015e84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e88:	657b      	str	r3, [r7, #84]	; 0x54
 8015e8a:	68bb      	ldr	r3, [r7, #8]
 8015e8c:	3301      	adds	r3, #1
 8015e8e:	60bb      	str	r3, [r7, #8]
 8015e90:	68bb      	ldr	r3, [r7, #8]
 8015e92:	781b      	ldrb	r3, [r3, #0]
 8015e94:	3b68      	subs	r3, #104	; 0x68
 8015e96:	2b12      	cmp	r3, #18
 8015e98:	d85e      	bhi.n	8015f58 <_vsnprintf+0x294>
 8015e9a:	a201      	add	r2, pc, #4	; (adr r2, 8015ea0 <_vsnprintf+0x1dc>)
 8015e9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015ea0:	08015f13 	.word	0x08015f13
 8015ea4:	08015f59 	.word	0x08015f59
 8015ea8:	08015f39 	.word	0x08015f39
 8015eac:	08015f59 	.word	0x08015f59
 8015eb0:	08015eed 	.word	0x08015eed
 8015eb4:	08015f59 	.word	0x08015f59
 8015eb8:	08015f59 	.word	0x08015f59
 8015ebc:	08015f59 	.word	0x08015f59
 8015ec0:	08015f59 	.word	0x08015f59
 8015ec4:	08015f59 	.word	0x08015f59
 8015ec8:	08015f59 	.word	0x08015f59
 8015ecc:	08015f59 	.word	0x08015f59
 8015ed0:	08015f59 	.word	0x08015f59
 8015ed4:	08015f59 	.word	0x08015f59
 8015ed8:	08015f59 	.word	0x08015f59
 8015edc:	08015f59 	.word	0x08015f59
 8015ee0:	08015f59 	.word	0x08015f59
 8015ee4:	08015f59 	.word	0x08015f59
 8015ee8:	08015f49 	.word	0x08015f49
 8015eec:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015eee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015ef2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015ef4:	68bb      	ldr	r3, [r7, #8]
 8015ef6:	3301      	adds	r3, #1
 8015ef8:	60bb      	str	r3, [r7, #8]
 8015efa:	68bb      	ldr	r3, [r7, #8]
 8015efc:	781b      	ldrb	r3, [r3, #0]
 8015efe:	2b6c      	cmp	r3, #108	; 0x6c
 8015f00:	d12c      	bne.n	8015f5c <_vsnprintf+0x298>
 8015f02:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015f04:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8015f08:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015f0a:	68bb      	ldr	r3, [r7, #8]
 8015f0c:	3301      	adds	r3, #1
 8015f0e:	60bb      	str	r3, [r7, #8]
 8015f10:	e024      	b.n	8015f5c <_vsnprintf+0x298>
 8015f12:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015f14:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8015f18:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015f1a:	68bb      	ldr	r3, [r7, #8]
 8015f1c:	3301      	adds	r3, #1
 8015f1e:	60bb      	str	r3, [r7, #8]
 8015f20:	68bb      	ldr	r3, [r7, #8]
 8015f22:	781b      	ldrb	r3, [r3, #0]
 8015f24:	2b68      	cmp	r3, #104	; 0x68
 8015f26:	d11b      	bne.n	8015f60 <_vsnprintf+0x29c>
 8015f28:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015f2a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8015f2e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015f30:	68bb      	ldr	r3, [r7, #8]
 8015f32:	3301      	adds	r3, #1
 8015f34:	60bb      	str	r3, [r7, #8]
 8015f36:	e013      	b.n	8015f60 <_vsnprintf+0x29c>
 8015f38:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015f3a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8015f3e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015f40:	68bb      	ldr	r3, [r7, #8]
 8015f42:	3301      	adds	r3, #1
 8015f44:	60bb      	str	r3, [r7, #8]
 8015f46:	e00c      	b.n	8015f62 <_vsnprintf+0x29e>
 8015f48:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8015f4a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015f4e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8015f50:	68bb      	ldr	r3, [r7, #8]
 8015f52:	3301      	adds	r3, #1
 8015f54:	60bb      	str	r3, [r7, #8]
 8015f56:	e004      	b.n	8015f62 <_vsnprintf+0x29e>
 8015f58:	bf00      	nop
 8015f5a:	e002      	b.n	8015f62 <_vsnprintf+0x29e>
 8015f5c:	bf00      	nop
 8015f5e:	e000      	b.n	8015f62 <_vsnprintf+0x29e>
 8015f60:	bf00      	nop
 8015f62:	68bb      	ldr	r3, [r7, #8]
 8015f64:	781b      	ldrb	r3, [r3, #0]
 8015f66:	2b78      	cmp	r3, #120	; 0x78
 8015f68:	f300 82f7 	bgt.w	801655a <_vsnprintf+0x896>
 8015f6c:	2b69      	cmp	r3, #105	; 0x69
 8015f6e:	da0d      	bge.n	8015f8c <_vsnprintf+0x2c8>
 8015f70:	2b25      	cmp	r3, #37	; 0x25
 8015f72:	f000 82e6 	beq.w	8016542 <_vsnprintf+0x87e>
 8015f76:	2b25      	cmp	r3, #37	; 0x25
 8015f78:	f2c0 82ef 	blt.w	801655a <_vsnprintf+0x896>
 8015f7c:	2b66      	cmp	r3, #102	; 0x66
 8015f7e:	f300 82ec 	bgt.w	801655a <_vsnprintf+0x896>
 8015f82:	2b46      	cmp	r3, #70	; 0x46
 8015f84:	da25      	bge.n	8015fd2 <_vsnprintf+0x30e>
 8015f86:	e2e8      	b.n	801655a <_vsnprintf+0x896>
 8015f88:	08015349 	.word	0x08015349
 8015f8c:	3b69      	subs	r3, #105	; 0x69
 8015f8e:	2201      	movs	r2, #1
 8015f90:	fa02 f303 	lsl.w	r3, r2, r3
 8015f94:	f249 0241 	movw	r2, #36929	; 0x9041
 8015f98:	401a      	ands	r2, r3
 8015f9a:	2a00      	cmp	r2, #0
 8015f9c:	bf14      	ite	ne
 8015f9e:	2201      	movne	r2, #1
 8015fa0:	2200      	moveq	r2, #0
 8015fa2:	b2d2      	uxtb	r2, r2
 8015fa4:	2a00      	cmp	r2, #0
 8015fa6:	d15d      	bne.n	8016064 <_vsnprintf+0x3a0>
 8015fa8:	f003 0280 	and.w	r2, r3, #128	; 0x80
 8015fac:	2a00      	cmp	r2, #0
 8015fae:	bf14      	ite	ne
 8015fb0:	2201      	movne	r2, #1
 8015fb2:	2200      	moveq	r2, #0
 8015fb4:	b2d2      	uxtb	r2, r2
 8015fb6:	2a00      	cmp	r2, #0
 8015fb8:	f040 8275 	bne.w	80164a6 <_vsnprintf+0x7e2>
 8015fbc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8015fc0:	2b00      	cmp	r3, #0
 8015fc2:	bf14      	ite	ne
 8015fc4:	2301      	movne	r3, #1
 8015fc6:	2300      	moveq	r3, #0
 8015fc8:	b2db      	uxtb	r3, r3
 8015fca:	2b00      	cmp	r3, #0
 8015fcc:	f040 8207 	bne.w	80163de <_vsnprintf+0x71a>
 8015fd0:	e2c3      	b.n	801655a <_vsnprintf+0x896>
 8015fd2:	3b46      	subs	r3, #70	; 0x46
 8015fd4:	2b20      	cmp	r3, #32
 8015fd6:	f200 82c0 	bhi.w	801655a <_vsnprintf+0x896>
 8015fda:	a201      	add	r2, pc, #4	; (adr r2, 8015fe0 <_vsnprintf+0x31c>)
 8015fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015fe0:	0801631b 	.word	0x0801631b
 8015fe4:	0801655b 	.word	0x0801655b
 8015fe8:	0801655b 	.word	0x0801655b
 8015fec:	0801655b 	.word	0x0801655b
 8015ff0:	0801655b 	.word	0x0801655b
 8015ff4:	0801655b 	.word	0x0801655b
 8015ff8:	0801655b 	.word	0x0801655b
 8015ffc:	0801655b 	.word	0x0801655b
 8016000:	0801655b 	.word	0x0801655b
 8016004:	0801655b 	.word	0x0801655b
 8016008:	0801655b 	.word	0x0801655b
 801600c:	0801655b 	.word	0x0801655b
 8016010:	0801655b 	.word	0x0801655b
 8016014:	0801655b 	.word	0x0801655b
 8016018:	0801655b 	.word	0x0801655b
 801601c:	0801655b 	.word	0x0801655b
 8016020:	0801655b 	.word	0x0801655b
 8016024:	0801655b 	.word	0x0801655b
 8016028:	08016065 	.word	0x08016065
 801602c:	0801655b 	.word	0x0801655b
 8016030:	0801655b 	.word	0x0801655b
 8016034:	0801655b 	.word	0x0801655b
 8016038:	0801655b 	.word	0x0801655b
 801603c:	0801655b 	.word	0x0801655b
 8016040:	0801655b 	.word	0x0801655b
 8016044:	0801655b 	.word	0x0801655b
 8016048:	0801655b 	.word	0x0801655b
 801604c:	0801655b 	.word	0x0801655b
 8016050:	08016065 	.word	0x08016065
 8016054:	08016367 	.word	0x08016367
 8016058:	08016065 	.word	0x08016065
 801605c:	0801655b 	.word	0x0801655b
 8016060:	0801631b 	.word	0x0801631b
 8016064:	68bb      	ldr	r3, [r7, #8]
 8016066:	781b      	ldrb	r3, [r3, #0]
 8016068:	2b78      	cmp	r3, #120	; 0x78
 801606a:	d003      	beq.n	8016074 <_vsnprintf+0x3b0>
 801606c:	68bb      	ldr	r3, [r7, #8]
 801606e:	781b      	ldrb	r3, [r3, #0]
 8016070:	2b58      	cmp	r3, #88	; 0x58
 8016072:	d102      	bne.n	801607a <_vsnprintf+0x3b6>
 8016074:	2310      	movs	r3, #16
 8016076:	64bb      	str	r3, [r7, #72]	; 0x48
 8016078:	e013      	b.n	80160a2 <_vsnprintf+0x3de>
 801607a:	68bb      	ldr	r3, [r7, #8]
 801607c:	781b      	ldrb	r3, [r3, #0]
 801607e:	2b6f      	cmp	r3, #111	; 0x6f
 8016080:	d102      	bne.n	8016088 <_vsnprintf+0x3c4>
 8016082:	2308      	movs	r3, #8
 8016084:	64bb      	str	r3, [r7, #72]	; 0x48
 8016086:	e00c      	b.n	80160a2 <_vsnprintf+0x3de>
 8016088:	68bb      	ldr	r3, [r7, #8]
 801608a:	781b      	ldrb	r3, [r3, #0]
 801608c:	2b62      	cmp	r3, #98	; 0x62
 801608e:	d102      	bne.n	8016096 <_vsnprintf+0x3d2>
 8016090:	2302      	movs	r3, #2
 8016092:	64bb      	str	r3, [r7, #72]	; 0x48
 8016094:	e005      	b.n	80160a2 <_vsnprintf+0x3de>
 8016096:	230a      	movs	r3, #10
 8016098:	64bb      	str	r3, [r7, #72]	; 0x48
 801609a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801609c:	f023 0310 	bic.w	r3, r3, #16
 80160a0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80160a2:	68bb      	ldr	r3, [r7, #8]
 80160a4:	781b      	ldrb	r3, [r3, #0]
 80160a6:	2b58      	cmp	r3, #88	; 0x58
 80160a8:	d103      	bne.n	80160b2 <_vsnprintf+0x3ee>
 80160aa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80160ac:	f043 0320 	orr.w	r3, r3, #32
 80160b0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80160b2:	68bb      	ldr	r3, [r7, #8]
 80160b4:	781b      	ldrb	r3, [r3, #0]
 80160b6:	2b69      	cmp	r3, #105	; 0x69
 80160b8:	d007      	beq.n	80160ca <_vsnprintf+0x406>
 80160ba:	68bb      	ldr	r3, [r7, #8]
 80160bc:	781b      	ldrb	r3, [r3, #0]
 80160be:	2b64      	cmp	r3, #100	; 0x64
 80160c0:	d003      	beq.n	80160ca <_vsnprintf+0x406>
 80160c2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80160c4:	f023 030c 	bic.w	r3, r3, #12
 80160c8:	65fb      	str	r3, [r7, #92]	; 0x5c
 80160ca:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80160cc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80160d0:	2b00      	cmp	r3, #0
 80160d2:	d003      	beq.n	80160dc <_vsnprintf+0x418>
 80160d4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80160d6:	f023 0301 	bic.w	r3, r3, #1
 80160da:	65fb      	str	r3, [r7, #92]	; 0x5c
 80160dc:	68bb      	ldr	r3, [r7, #8]
 80160de:	781b      	ldrb	r3, [r3, #0]
 80160e0:	2b69      	cmp	r3, #105	; 0x69
 80160e2:	d004      	beq.n	80160ee <_vsnprintf+0x42a>
 80160e4:	68bb      	ldr	r3, [r7, #8]
 80160e6:	781b      	ldrb	r3, [r3, #0]
 80160e8:	2b64      	cmp	r3, #100	; 0x64
 80160ea:	f040 8098 	bne.w	801621e <_vsnprintf+0x55a>
 80160ee:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80160f0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80160f4:	2b00      	cmp	r3, #0
 80160f6:	d031      	beq.n	801615c <_vsnprintf+0x498>
 80160f8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80160fc:	3307      	adds	r3, #7
 80160fe:	f023 0307 	bic.w	r3, r3, #7
 8016102:	f103 0208 	add.w	r2, r3, #8
 8016106:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 801610a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801610e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8016112:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8016116:	2b00      	cmp	r3, #0
 8016118:	da06      	bge.n	8016128 <_vsnprintf+0x464>
 801611a:	2100      	movs	r1, #0
 801611c:	f1d2 0800 	rsbs	r8, r2, #0
 8016120:	eb61 0903 	sbc.w	r9, r1, r3
 8016124:	4642      	mov	r2, r8
 8016126:	464b      	mov	r3, r9
 8016128:	69f9      	ldr	r1, [r7, #28]
 801612a:	0fc9      	lsrs	r1, r1, #31
 801612c:	b2c9      	uxtb	r1, r1
 801612e:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8016130:	2400      	movs	r4, #0
 8016132:	4682      	mov	sl, r0
 8016134:	46a3      	mov	fp, r4
 8016136:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8016138:	9008      	str	r0, [sp, #32]
 801613a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 801613c:	9007      	str	r0, [sp, #28]
 801613e:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8016140:	9006      	str	r0, [sp, #24]
 8016142:	e9cd ab04 	strd	sl, fp, [sp, #16]
 8016146:	9102      	str	r1, [sp, #8]
 8016148:	e9cd 2300 	strd	r2, r3, [sp]
 801614c:	68fb      	ldr	r3, [r7, #12]
 801614e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016150:	6939      	ldr	r1, [r7, #16]
 8016152:	6978      	ldr	r0, [r7, #20]
 8016154:	f7ff fb03 	bl	801575e <_ntoa_long_long>
 8016158:	64f8      	str	r0, [r7, #76]	; 0x4c
 801615a:	e0da      	b.n	8016312 <_vsnprintf+0x64e>
 801615c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801615e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016162:	2b00      	cmp	r3, #0
 8016164:	d020      	beq.n	80161a8 <_vsnprintf+0x4e4>
 8016166:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801616a:	1d1a      	adds	r2, r3, #4
 801616c:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8016170:	681b      	ldr	r3, [r3, #0]
 8016172:	627b      	str	r3, [r7, #36]	; 0x24
 8016174:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016176:	2b00      	cmp	r3, #0
 8016178:	bfb8      	it	lt
 801617a:	425b      	neglt	r3, r3
 801617c:	4619      	mov	r1, r3
 801617e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8016180:	0fdb      	lsrs	r3, r3, #31
 8016182:	b2db      	uxtb	r3, r3
 8016184:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8016186:	9205      	str	r2, [sp, #20]
 8016188:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801618a:	9204      	str	r2, [sp, #16]
 801618c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 801618e:	9203      	str	r2, [sp, #12]
 8016190:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016192:	9202      	str	r2, [sp, #8]
 8016194:	9301      	str	r3, [sp, #4]
 8016196:	9100      	str	r1, [sp, #0]
 8016198:	68fb      	ldr	r3, [r7, #12]
 801619a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801619c:	6939      	ldr	r1, [r7, #16]
 801619e:	6978      	ldr	r0, [r7, #20]
 80161a0:	f7ff fa77 	bl	8015692 <_ntoa_long>
 80161a4:	64f8      	str	r0, [r7, #76]	; 0x4c
 80161a6:	e0b4      	b.n	8016312 <_vsnprintf+0x64e>
 80161a8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80161aa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80161ae:	2b00      	cmp	r3, #0
 80161b0:	d007      	beq.n	80161c2 <_vsnprintf+0x4fe>
 80161b2:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80161b6:	1d1a      	adds	r2, r3, #4
 80161b8:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80161bc:	681b      	ldr	r3, [r3, #0]
 80161be:	b25b      	sxtb	r3, r3
 80161c0:	e012      	b.n	80161e8 <_vsnprintf+0x524>
 80161c2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80161c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80161c8:	2b00      	cmp	r3, #0
 80161ca:	d007      	beq.n	80161dc <_vsnprintf+0x518>
 80161cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80161d0:	1d1a      	adds	r2, r3, #4
 80161d2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80161d6:	681b      	ldr	r3, [r3, #0]
 80161d8:	b21b      	sxth	r3, r3
 80161da:	e005      	b.n	80161e8 <_vsnprintf+0x524>
 80161dc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80161e0:	1d1a      	adds	r2, r3, #4
 80161e2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80161e6:	681b      	ldr	r3, [r3, #0]
 80161e8:	62bb      	str	r3, [r7, #40]	; 0x28
 80161ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80161ec:	2b00      	cmp	r3, #0
 80161ee:	bfb8      	it	lt
 80161f0:	425b      	neglt	r3, r3
 80161f2:	4619      	mov	r1, r3
 80161f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80161f6:	0fdb      	lsrs	r3, r3, #31
 80161f8:	b2db      	uxtb	r3, r3
 80161fa:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80161fc:	9205      	str	r2, [sp, #20]
 80161fe:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8016200:	9204      	str	r2, [sp, #16]
 8016202:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8016204:	9203      	str	r2, [sp, #12]
 8016206:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016208:	9202      	str	r2, [sp, #8]
 801620a:	9301      	str	r3, [sp, #4]
 801620c:	9100      	str	r1, [sp, #0]
 801620e:	68fb      	ldr	r3, [r7, #12]
 8016210:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016212:	6939      	ldr	r1, [r7, #16]
 8016214:	6978      	ldr	r0, [r7, #20]
 8016216:	f7ff fa3c 	bl	8015692 <_ntoa_long>
 801621a:	64f8      	str	r0, [r7, #76]	; 0x4c
 801621c:	e079      	b.n	8016312 <_vsnprintf+0x64e>
 801621e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016220:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8016224:	2b00      	cmp	r3, #0
 8016226:	d022      	beq.n	801626e <_vsnprintf+0x5aa>
 8016228:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801622c:	3307      	adds	r3, #7
 801622e:	f023 0307 	bic.w	r3, r3, #7
 8016232:	f103 0208 	add.w	r2, r3, #8
 8016236:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 801623a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801623e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8016240:	2000      	movs	r0, #0
 8016242:	460d      	mov	r5, r1
 8016244:	4606      	mov	r6, r0
 8016246:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8016248:	9108      	str	r1, [sp, #32]
 801624a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 801624c:	9107      	str	r1, [sp, #28]
 801624e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8016250:	9106      	str	r1, [sp, #24]
 8016252:	e9cd 5604 	strd	r5, r6, [sp, #16]
 8016256:	2100      	movs	r1, #0
 8016258:	9102      	str	r1, [sp, #8]
 801625a:	e9cd 2300 	strd	r2, r3, [sp]
 801625e:	68fb      	ldr	r3, [r7, #12]
 8016260:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016262:	6939      	ldr	r1, [r7, #16]
 8016264:	6978      	ldr	r0, [r7, #20]
 8016266:	f7ff fa7a 	bl	801575e <_ntoa_long_long>
 801626a:	64f8      	str	r0, [r7, #76]	; 0x4c
 801626c:	e051      	b.n	8016312 <_vsnprintf+0x64e>
 801626e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016270:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016274:	2b00      	cmp	r3, #0
 8016276:	d018      	beq.n	80162aa <_vsnprintf+0x5e6>
 8016278:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801627c:	1d1a      	adds	r2, r3, #4
 801627e:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8016282:	681b      	ldr	r3, [r3, #0]
 8016284:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8016286:	9205      	str	r2, [sp, #20]
 8016288:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801628a:	9204      	str	r2, [sp, #16]
 801628c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 801628e:	9203      	str	r2, [sp, #12]
 8016290:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8016292:	9202      	str	r2, [sp, #8]
 8016294:	2200      	movs	r2, #0
 8016296:	9201      	str	r2, [sp, #4]
 8016298:	9300      	str	r3, [sp, #0]
 801629a:	68fb      	ldr	r3, [r7, #12]
 801629c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801629e:	6939      	ldr	r1, [r7, #16]
 80162a0:	6978      	ldr	r0, [r7, #20]
 80162a2:	f7ff f9f6 	bl	8015692 <_ntoa_long>
 80162a6:	64f8      	str	r0, [r7, #76]	; 0x4c
 80162a8:	e033      	b.n	8016312 <_vsnprintf+0x64e>
 80162aa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80162ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80162b0:	2b00      	cmp	r3, #0
 80162b2:	d007      	beq.n	80162c4 <_vsnprintf+0x600>
 80162b4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80162b8:	1d1a      	adds	r2, r3, #4
 80162ba:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80162be:	681b      	ldr	r3, [r3, #0]
 80162c0:	b2db      	uxtb	r3, r3
 80162c2:	e012      	b.n	80162ea <_vsnprintf+0x626>
 80162c4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80162c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80162ca:	2b00      	cmp	r3, #0
 80162cc:	d007      	beq.n	80162de <_vsnprintf+0x61a>
 80162ce:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80162d2:	1d1a      	adds	r2, r3, #4
 80162d4:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80162d8:	681b      	ldr	r3, [r3, #0]
 80162da:	b29b      	uxth	r3, r3
 80162dc:	e005      	b.n	80162ea <_vsnprintf+0x626>
 80162de:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80162e2:	1d1a      	adds	r2, r3, #4
 80162e4:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80162e8:	681b      	ldr	r3, [r3, #0]
 80162ea:	62fb      	str	r3, [r7, #44]	; 0x2c
 80162ec:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80162ee:	9305      	str	r3, [sp, #20]
 80162f0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80162f2:	9304      	str	r3, [sp, #16]
 80162f4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80162f6:	9303      	str	r3, [sp, #12]
 80162f8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80162fa:	9302      	str	r3, [sp, #8]
 80162fc:	2300      	movs	r3, #0
 80162fe:	9301      	str	r3, [sp, #4]
 8016300:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8016302:	9300      	str	r3, [sp, #0]
 8016304:	68fb      	ldr	r3, [r7, #12]
 8016306:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016308:	6939      	ldr	r1, [r7, #16]
 801630a:	6978      	ldr	r0, [r7, #20]
 801630c:	f7ff f9c1 	bl	8015692 <_ntoa_long>
 8016310:	64f8      	str	r0, [r7, #76]	; 0x4c
 8016312:	68bb      	ldr	r3, [r7, #8]
 8016314:	3301      	adds	r3, #1
 8016316:	60bb      	str	r3, [r7, #8]
 8016318:	e12c      	b.n	8016574 <_vsnprintf+0x8b0>
 801631a:	68bb      	ldr	r3, [r7, #8]
 801631c:	781b      	ldrb	r3, [r3, #0]
 801631e:	2b46      	cmp	r3, #70	; 0x46
 8016320:	d103      	bne.n	801632a <_vsnprintf+0x666>
 8016322:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016324:	f043 0320 	orr.w	r3, r3, #32
 8016328:	65fb      	str	r3, [r7, #92]	; 0x5c
 801632a:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801632e:	3307      	adds	r3, #7
 8016330:	f023 0307 	bic.w	r3, r3, #7
 8016334:	f103 0208 	add.w	r2, r3, #8
 8016338:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 801633c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8016340:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8016342:	9104      	str	r1, [sp, #16]
 8016344:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8016346:	9103      	str	r1, [sp, #12]
 8016348:	6d79      	ldr	r1, [r7, #84]	; 0x54
 801634a:	9102      	str	r1, [sp, #8]
 801634c:	e9cd 2300 	strd	r2, r3, [sp]
 8016350:	68fb      	ldr	r3, [r7, #12]
 8016352:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016354:	6939      	ldr	r1, [r7, #16]
 8016356:	6978      	ldr	r0, [r7, #20]
 8016358:	f7ff fa6e 	bl	8015838 <_ftoa>
 801635c:	64f8      	str	r0, [r7, #76]	; 0x4c
 801635e:	68bb      	ldr	r3, [r7, #8]
 8016360:	3301      	adds	r3, #1
 8016362:	60bb      	str	r3, [r7, #8]
 8016364:	e106      	b.n	8016574 <_vsnprintf+0x8b0>
 8016366:	2301      	movs	r3, #1
 8016368:	647b      	str	r3, [r7, #68]	; 0x44
 801636a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801636c:	f003 0302 	and.w	r3, r3, #2
 8016370:	2b00      	cmp	r3, #0
 8016372:	d10e      	bne.n	8016392 <_vsnprintf+0x6ce>
 8016374:	e007      	b.n	8016386 <_vsnprintf+0x6c2>
 8016376:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016378:	1c53      	adds	r3, r2, #1
 801637a:	64fb      	str	r3, [r7, #76]	; 0x4c
 801637c:	697c      	ldr	r4, [r7, #20]
 801637e:	68fb      	ldr	r3, [r7, #12]
 8016380:	6939      	ldr	r1, [r7, #16]
 8016382:	2020      	movs	r0, #32
 8016384:	47a0      	blx	r4
 8016386:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016388:	1c5a      	adds	r2, r3, #1
 801638a:	647a      	str	r2, [r7, #68]	; 0x44
 801638c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801638e:	429a      	cmp	r2, r3
 8016390:	d8f1      	bhi.n	8016376 <_vsnprintf+0x6b2>
 8016392:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8016396:	1d1a      	adds	r2, r3, #4
 8016398:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 801639c:	681b      	ldr	r3, [r3, #0]
 801639e:	b2d8      	uxtb	r0, r3
 80163a0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80163a2:	1c53      	adds	r3, r2, #1
 80163a4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80163a6:	697c      	ldr	r4, [r7, #20]
 80163a8:	68fb      	ldr	r3, [r7, #12]
 80163aa:	6939      	ldr	r1, [r7, #16]
 80163ac:	47a0      	blx	r4
 80163ae:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80163b0:	f003 0302 	and.w	r3, r3, #2
 80163b4:	2b00      	cmp	r3, #0
 80163b6:	d00e      	beq.n	80163d6 <_vsnprintf+0x712>
 80163b8:	e007      	b.n	80163ca <_vsnprintf+0x706>
 80163ba:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80163bc:	1c53      	adds	r3, r2, #1
 80163be:	64fb      	str	r3, [r7, #76]	; 0x4c
 80163c0:	697c      	ldr	r4, [r7, #20]
 80163c2:	68fb      	ldr	r3, [r7, #12]
 80163c4:	6939      	ldr	r1, [r7, #16]
 80163c6:	2020      	movs	r0, #32
 80163c8:	47a0      	blx	r4
 80163ca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80163cc:	1c5a      	adds	r2, r3, #1
 80163ce:	647a      	str	r2, [r7, #68]	; 0x44
 80163d0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80163d2:	429a      	cmp	r2, r3
 80163d4:	d8f1      	bhi.n	80163ba <_vsnprintf+0x6f6>
 80163d6:	68bb      	ldr	r3, [r7, #8]
 80163d8:	3301      	adds	r3, #1
 80163da:	60bb      	str	r3, [r7, #8]
 80163dc:	e0ca      	b.n	8016574 <_vsnprintf+0x8b0>
 80163de:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80163e2:	1d1a      	adds	r2, r3, #4
 80163e4:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80163e8:	681b      	ldr	r3, [r3, #0]
 80163ea:	643b      	str	r3, [r7, #64]	; 0x40
 80163ec:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80163ee:	2b00      	cmp	r3, #0
 80163f0:	d001      	beq.n	80163f6 <_vsnprintf+0x732>
 80163f2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80163f4:	e001      	b.n	80163fa <_vsnprintf+0x736>
 80163f6:	f04f 33ff 	mov.w	r3, #4294967295
 80163fa:	4619      	mov	r1, r3
 80163fc:	6c38      	ldr	r0, [r7, #64]	; 0x40
 80163fe:	f7fe ffc6 	bl	801538e <_strnlen_s>
 8016402:	63f8      	str	r0, [r7, #60]	; 0x3c
 8016404:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016406:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801640a:	2b00      	cmp	r3, #0
 801640c:	d005      	beq.n	801641a <_vsnprintf+0x756>
 801640e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8016410:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8016412:	4293      	cmp	r3, r2
 8016414:	bf28      	it	cs
 8016416:	4613      	movcs	r3, r2
 8016418:	63fb      	str	r3, [r7, #60]	; 0x3c
 801641a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801641c:	f003 0302 	and.w	r3, r3, #2
 8016420:	2b00      	cmp	r3, #0
 8016422:	d11a      	bne.n	801645a <_vsnprintf+0x796>
 8016424:	e007      	b.n	8016436 <_vsnprintf+0x772>
 8016426:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016428:	1c53      	adds	r3, r2, #1
 801642a:	64fb      	str	r3, [r7, #76]	; 0x4c
 801642c:	697c      	ldr	r4, [r7, #20]
 801642e:	68fb      	ldr	r3, [r7, #12]
 8016430:	6939      	ldr	r1, [r7, #16]
 8016432:	2020      	movs	r0, #32
 8016434:	47a0      	blx	r4
 8016436:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016438:	1c5a      	adds	r2, r3, #1
 801643a:	63fa      	str	r2, [r7, #60]	; 0x3c
 801643c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801643e:	429a      	cmp	r2, r3
 8016440:	d8f1      	bhi.n	8016426 <_vsnprintf+0x762>
 8016442:	e00a      	b.n	801645a <_vsnprintf+0x796>
 8016444:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8016446:	1c5a      	adds	r2, r3, #1
 8016448:	643a      	str	r2, [r7, #64]	; 0x40
 801644a:	7818      	ldrb	r0, [r3, #0]
 801644c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801644e:	1c53      	adds	r3, r2, #1
 8016450:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016452:	697c      	ldr	r4, [r7, #20]
 8016454:	68fb      	ldr	r3, [r7, #12]
 8016456:	6939      	ldr	r1, [r7, #16]
 8016458:	47a0      	blx	r4
 801645a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801645c:	781b      	ldrb	r3, [r3, #0]
 801645e:	2b00      	cmp	r3, #0
 8016460:	d009      	beq.n	8016476 <_vsnprintf+0x7b2>
 8016462:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016464:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8016468:	2b00      	cmp	r3, #0
 801646a:	d0eb      	beq.n	8016444 <_vsnprintf+0x780>
 801646c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801646e:	1e5a      	subs	r2, r3, #1
 8016470:	657a      	str	r2, [r7, #84]	; 0x54
 8016472:	2b00      	cmp	r3, #0
 8016474:	d1e6      	bne.n	8016444 <_vsnprintf+0x780>
 8016476:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016478:	f003 0302 	and.w	r3, r3, #2
 801647c:	2b00      	cmp	r3, #0
 801647e:	d00e      	beq.n	801649e <_vsnprintf+0x7da>
 8016480:	e007      	b.n	8016492 <_vsnprintf+0x7ce>
 8016482:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016484:	1c53      	adds	r3, r2, #1
 8016486:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016488:	697c      	ldr	r4, [r7, #20]
 801648a:	68fb      	ldr	r3, [r7, #12]
 801648c:	6939      	ldr	r1, [r7, #16]
 801648e:	2020      	movs	r0, #32
 8016490:	47a0      	blx	r4
 8016492:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8016494:	1c5a      	adds	r2, r3, #1
 8016496:	63fa      	str	r2, [r7, #60]	; 0x3c
 8016498:	6dba      	ldr	r2, [r7, #88]	; 0x58
 801649a:	429a      	cmp	r2, r3
 801649c:	d8f1      	bhi.n	8016482 <_vsnprintf+0x7be>
 801649e:	68bb      	ldr	r3, [r7, #8]
 80164a0:	3301      	adds	r3, #1
 80164a2:	60bb      	str	r3, [r7, #8]
 80164a4:	e066      	b.n	8016574 <_vsnprintf+0x8b0>
 80164a6:	2308      	movs	r3, #8
 80164a8:	65bb      	str	r3, [r7, #88]	; 0x58
 80164aa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80164ac:	f043 0321 	orr.w	r3, r3, #33	; 0x21
 80164b0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80164b2:	2300      	movs	r3, #0
 80164b4:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80164b8:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80164bc:	2b00      	cmp	r3, #0
 80164be:	d023      	beq.n	8016508 <_vsnprintf+0x844>
 80164c0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80164c4:	1d1a      	adds	r2, r3, #4
 80164c6:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80164ca:	681b      	ldr	r3, [r3, #0]
 80164cc:	461a      	mov	r2, r3
 80164ce:	2300      	movs	r3, #0
 80164d0:	603a      	str	r2, [r7, #0]
 80164d2:	607b      	str	r3, [r7, #4]
 80164d4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80164d6:	9308      	str	r3, [sp, #32]
 80164d8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80164da:	9307      	str	r3, [sp, #28]
 80164dc:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80164de:	9306      	str	r3, [sp, #24]
 80164e0:	f04f 0210 	mov.w	r2, #16
 80164e4:	f04f 0300 	mov.w	r3, #0
 80164e8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80164ec:	2300      	movs	r3, #0
 80164ee:	9302      	str	r3, [sp, #8]
 80164f0:	e9d7 3400 	ldrd	r3, r4, [r7]
 80164f4:	e9cd 3400 	strd	r3, r4, [sp]
 80164f8:	68fb      	ldr	r3, [r7, #12]
 80164fa:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80164fc:	6939      	ldr	r1, [r7, #16]
 80164fe:	6978      	ldr	r0, [r7, #20]
 8016500:	f7ff f92d 	bl	801575e <_ntoa_long_long>
 8016504:	64f8      	str	r0, [r7, #76]	; 0x4c
 8016506:	e018      	b.n	801653a <_vsnprintf+0x876>
 8016508:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801650c:	1d1a      	adds	r2, r3, #4
 801650e:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8016512:	681b      	ldr	r3, [r3, #0]
 8016514:	461a      	mov	r2, r3
 8016516:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016518:	9305      	str	r3, [sp, #20]
 801651a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801651c:	9304      	str	r3, [sp, #16]
 801651e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8016520:	9303      	str	r3, [sp, #12]
 8016522:	2310      	movs	r3, #16
 8016524:	9302      	str	r3, [sp, #8]
 8016526:	2300      	movs	r3, #0
 8016528:	9301      	str	r3, [sp, #4]
 801652a:	9200      	str	r2, [sp, #0]
 801652c:	68fb      	ldr	r3, [r7, #12]
 801652e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016530:	6939      	ldr	r1, [r7, #16]
 8016532:	6978      	ldr	r0, [r7, #20]
 8016534:	f7ff f8ad 	bl	8015692 <_ntoa_long>
 8016538:	64f8      	str	r0, [r7, #76]	; 0x4c
 801653a:	68bb      	ldr	r3, [r7, #8]
 801653c:	3301      	adds	r3, #1
 801653e:	60bb      	str	r3, [r7, #8]
 8016540:	e018      	b.n	8016574 <_vsnprintf+0x8b0>
 8016542:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016544:	1c53      	adds	r3, r2, #1
 8016546:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016548:	697c      	ldr	r4, [r7, #20]
 801654a:	68fb      	ldr	r3, [r7, #12]
 801654c:	6939      	ldr	r1, [r7, #16]
 801654e:	2025      	movs	r0, #37	; 0x25
 8016550:	47a0      	blx	r4
 8016552:	68bb      	ldr	r3, [r7, #8]
 8016554:	3301      	adds	r3, #1
 8016556:	60bb      	str	r3, [r7, #8]
 8016558:	e00c      	b.n	8016574 <_vsnprintf+0x8b0>
 801655a:	68bb      	ldr	r3, [r7, #8]
 801655c:	7818      	ldrb	r0, [r3, #0]
 801655e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016560:	1c53      	adds	r3, r2, #1
 8016562:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016564:	697c      	ldr	r4, [r7, #20]
 8016566:	68fb      	ldr	r3, [r7, #12]
 8016568:	6939      	ldr	r1, [r7, #16]
 801656a:	47a0      	blx	r4
 801656c:	68bb      	ldr	r3, [r7, #8]
 801656e:	3301      	adds	r3, #1
 8016570:	60bb      	str	r3, [r7, #8]
 8016572:	bf00      	nop
 8016574:	68bb      	ldr	r3, [r7, #8]
 8016576:	781b      	ldrb	r3, [r3, #0]
 8016578:	2b00      	cmp	r3, #0
 801657a:	f47f abb5 	bne.w	8015ce8 <_vsnprintf+0x24>
 801657e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016580:	68fb      	ldr	r3, [r7, #12]
 8016582:	429a      	cmp	r2, r3
 8016584:	d302      	bcc.n	801658c <_vsnprintf+0x8c8>
 8016586:	68fb      	ldr	r3, [r7, #12]
 8016588:	1e5a      	subs	r2, r3, #1
 801658a:	e000      	b.n	801658e <_vsnprintf+0x8ca>
 801658c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801658e:	697c      	ldr	r4, [r7, #20]
 8016590:	68fb      	ldr	r3, [r7, #12]
 8016592:	6939      	ldr	r1, [r7, #16]
 8016594:	2000      	movs	r0, #0
 8016596:	47a0      	blx	r4
 8016598:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801659a:	4618      	mov	r0, r3
 801659c:	3764      	adds	r7, #100	; 0x64
 801659e:	46bd      	mov	sp, r7
 80165a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165a4 <5dd4cf8b4cc3211a4d064c2aba27f240e0c6a1fc>:
 80165a4:	b40c      	push	{r2, r3}
 80165a6:	b580      	push	{r7, lr}
 80165a8:	b088      	sub	sp, #32
 80165aa:	af02      	add	r7, sp, #8
 80165ac:	6078      	str	r0, [r7, #4]
 80165ae:	6039      	str	r1, [r7, #0]
 80165b0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80165b4:	613b      	str	r3, [r7, #16]
 80165b6:	687b      	ldr	r3, [r7, #4]
 80165b8:	60bb      	str	r3, [r7, #8]
 80165ba:	683b      	ldr	r3, [r7, #0]
 80165bc:	60fb      	str	r3, [r7, #12]
 80165be:	f107 0108 	add.w	r1, r7, #8
 80165c2:	693b      	ldr	r3, [r7, #16]
 80165c4:	9300      	str	r3, [sp, #0]
 80165c6:	6a3b      	ldr	r3, [r7, #32]
 80165c8:	f04f 32ff 	mov.w	r2, #4294967295
 80165cc:	4805      	ldr	r0, [pc, #20]	; (80165e4 <5dd4cf8b4cc3211a4d064c2aba27f240e0c6a1fc+0x40>)
 80165ce:	f7ff fb79 	bl	8015cc4 <_vsnprintf>
 80165d2:	6178      	str	r0, [r7, #20]
 80165d4:	697b      	ldr	r3, [r7, #20]
 80165d6:	4618      	mov	r0, r3
 80165d8:	3718      	adds	r7, #24
 80165da:	46bd      	mov	sp, r7
 80165dc:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80165e0:	b002      	add	sp, #8
 80165e2:	4770      	bx	lr
 80165e4:	08015363 	.word	0x08015363

080165e8 <9d4397e1c276e28163cdc66582db3f5f3477f47c>:
 80165e8:	b580      	push	{r7, lr}
 80165ea:	b088      	sub	sp, #32
 80165ec:	af02      	add	r7, sp, #8
 80165ee:	60f8      	str	r0, [r7, #12]
 80165f0:	60b9      	str	r1, [r7, #8]
 80165f2:	607a      	str	r2, [r7, #4]
 80165f4:	603b      	str	r3, [r7, #0]
 80165f6:	68fb      	ldr	r3, [r7, #12]
 80165f8:	613b      	str	r3, [r7, #16]
 80165fa:	68bb      	ldr	r3, [r7, #8]
 80165fc:	617b      	str	r3, [r7, #20]
 80165fe:	f107 0110 	add.w	r1, r7, #16
 8016602:	683b      	ldr	r3, [r7, #0]
 8016604:	9300      	str	r3, [sp, #0]
 8016606:	687b      	ldr	r3, [r7, #4]
 8016608:	f04f 32ff 	mov.w	r2, #4294967295
 801660c:	4803      	ldr	r0, [pc, #12]	; (801661c <9d4397e1c276e28163cdc66582db3f5f3477f47c+0x34>)
 801660e:	f7ff fb59 	bl	8015cc4 <_vsnprintf>
 8016612:	4603      	mov	r3, r0
 8016614:	4618      	mov	r0, r3
 8016616:	3718      	adds	r7, #24
 8016618:	46bd      	mov	sp, r7
 801661a:	bd80      	pop	{r7, pc}
 801661c:	08015363 	.word	0x08015363

08016620 <02aa084aaa87b61bfa00c296d0ea733e41c0e799>:
 8016620:	b480      	push	{r7}
 8016622:	af00      	add	r7, sp, #0
 8016624:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8016628:	4618      	mov	r0, r3
 801662a:	46bd      	mov	sp, r7
 801662c:	bc80      	pop	{r7}
 801662e:	4770      	bx	lr

08016630 <a55289d6d9a545b04c48247397ce85f2938a20af>:
 8016630:	b480      	push	{r7}
 8016632:	b083      	sub	sp, #12
 8016634:	af00      	add	r7, sp, #0
 8016636:	4603      	mov	r3, r0
 8016638:	460a      	mov	r2, r1
 801663a:	71fb      	strb	r3, [r7, #7]
 801663c:	4613      	mov	r3, r2
 801663e:	80bb      	strh	r3, [r7, #4]
 8016640:	88bb      	ldrh	r3, [r7, #4]
 8016642:	0a1b      	lsrs	r3, r3, #8
 8016644:	b29a      	uxth	r2, r3
 8016646:	79fb      	ldrb	r3, [r7, #7]
 8016648:	b299      	uxth	r1, r3
 801664a:	88bb      	ldrh	r3, [r7, #4]
 801664c:	404b      	eors	r3, r1
 801664e:	b29b      	uxth	r3, r3
 8016650:	b2db      	uxtb	r3, r3
 8016652:	4905      	ldr	r1, [pc, #20]	; (8016668 <a55289d6d9a545b04c48247397ce85f2938a20af+0x38>)
 8016654:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8016658:	4053      	eors	r3, r2
 801665a:	b29b      	uxth	r3, r3
 801665c:	4618      	mov	r0, r3
 801665e:	370c      	adds	r7, #12
 8016660:	46bd      	mov	sp, r7
 8016662:	bc80      	pop	{r7}
 8016664:	4770      	bx	lr
 8016666:	bf00      	nop
 8016668:	20000044 	.word	0x20000044

0801666c <f4e96df7a22571dfa32822f4af8ba70dac43b850>:
 801666c:	b580      	push	{r7, lr}
 801666e:	b086      	sub	sp, #24
 8016670:	af00      	add	r7, sp, #0
 8016672:	60f8      	str	r0, [r7, #12]
 8016674:	60b9      	str	r1, [r7, #8]
 8016676:	4613      	mov	r3, r2
 8016678:	80fb      	strh	r3, [r7, #6]
 801667a:	2300      	movs	r3, #0
 801667c:	617b      	str	r3, [r7, #20]
 801667e:	e00d      	b.n	801669c <f4e96df7a22571dfa32822f4af8ba70dac43b850+0x30>
 8016680:	68fa      	ldr	r2, [r7, #12]
 8016682:	697b      	ldr	r3, [r7, #20]
 8016684:	4413      	add	r3, r2
 8016686:	781b      	ldrb	r3, [r3, #0]
 8016688:	88fa      	ldrh	r2, [r7, #6]
 801668a:	4611      	mov	r1, r2
 801668c:	4618      	mov	r0, r3
 801668e:	f7ff ffcf 	bl	8016630 <a55289d6d9a545b04c48247397ce85f2938a20af>
 8016692:	4603      	mov	r3, r0
 8016694:	80fb      	strh	r3, [r7, #6]
 8016696:	697b      	ldr	r3, [r7, #20]
 8016698:	3301      	adds	r3, #1
 801669a:	617b      	str	r3, [r7, #20]
 801669c:	697a      	ldr	r2, [r7, #20]
 801669e:	68bb      	ldr	r3, [r7, #8]
 80166a0:	429a      	cmp	r2, r3
 80166a2:	d3ed      	bcc.n	8016680 <f4e96df7a22571dfa32822f4af8ba70dac43b850+0x14>
 80166a4:	88fb      	ldrh	r3, [r7, #6]
 80166a6:	4618      	mov	r0, r3
 80166a8:	3718      	adds	r7, #24
 80166aa:	46bd      	mov	sp, r7
 80166ac:	bd80      	pop	{r7, pc}

080166ae <c5868198428dfaffddb0900c3d01452778b19d11>:
 80166ae:	b480      	push	{r7}
 80166b0:	b089      	sub	sp, #36	; 0x24
 80166b2:	af00      	add	r7, sp, #0
 80166b4:	60f8      	str	r0, [r7, #12]
 80166b6:	60b9      	str	r1, [r7, #8]
 80166b8:	607a      	str	r2, [r7, #4]
 80166ba:	68fb      	ldr	r3, [r7, #12]
 80166bc:	61fb      	str	r3, [r7, #28]
 80166be:	68bb      	ldr	r3, [r7, #8]
 80166c0:	61bb      	str	r3, [r7, #24]
 80166c2:	687b      	ldr	r3, [r7, #4]
 80166c4:	617b      	str	r3, [r7, #20]
 80166c6:	2300      	movs	r3, #0
 80166c8:	613b      	str	r3, [r7, #16]
 80166ca:	e00d      	b.n	80166e8 <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 80166cc:	69ba      	ldr	r2, [r7, #24]
 80166ce:	693b      	ldr	r3, [r7, #16]
 80166d0:	441a      	add	r2, r3
 80166d2:	6979      	ldr	r1, [r7, #20]
 80166d4:	693b      	ldr	r3, [r7, #16]
 80166d6:	1acb      	subs	r3, r1, r3
 80166d8:	3b01      	subs	r3, #1
 80166da:	69f9      	ldr	r1, [r7, #28]
 80166dc:	440b      	add	r3, r1
 80166de:	7812      	ldrb	r2, [r2, #0]
 80166e0:	701a      	strb	r2, [r3, #0]
 80166e2:	693b      	ldr	r3, [r7, #16]
 80166e4:	3301      	adds	r3, #1
 80166e6:	613b      	str	r3, [r7, #16]
 80166e8:	697a      	ldr	r2, [r7, #20]
 80166ea:	693b      	ldr	r3, [r7, #16]
 80166ec:	429a      	cmp	r2, r3
 80166ee:	d8ed      	bhi.n	80166cc <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 80166f0:	bf00      	nop
 80166f2:	bf00      	nop
 80166f4:	3724      	adds	r7, #36	; 0x24
 80166f6:	46bd      	mov	sp, r7
 80166f8:	bc80      	pop	{r7}
 80166fa:	4770      	bx	lr

080166fc <36fc8fd3531c1a40f267c168c66ed988dd7f65d6>:
 80166fc:	b580      	push	{r7, lr}
 80166fe:	b08a      	sub	sp, #40	; 0x28
 8016700:	af00      	add	r7, sp, #0
 8016702:	4b06      	ldr	r3, [pc, #24]	; (801671c <36fc8fd3531c1a40f267c168c66ed988dd7f65d6+0x20>)
 8016704:	681b      	ldr	r3, [r3, #0]
 8016706:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 801670a:	2222      	movs	r2, #34	; 0x22
 801670c:	2100      	movs	r1, #0
 801670e:	4618      	mov	r0, r3
 8016710:	f014 fcf2 	bl	802b0f8 <memset>
 8016714:	bf00      	nop
 8016716:	3728      	adds	r7, #40	; 0x28
 8016718:	46bd      	mov	sp, r7
 801671a:	bd80      	pop	{r7, pc}
 801671c:	20000040 	.word	0x20000040

08016720 <281684afe20744fe8e8db0e02bb6f53b74a050bd>:
 8016720:	b480      	push	{r7}
 8016722:	af00      	add	r7, sp, #0
 8016724:	4b03      	ldr	r3, [pc, #12]	; (8016734 <281684afe20744fe8e8db0e02bb6f53b74a050bd+0x14>)
 8016726:	681b      	ldr	r3, [r3, #0]
 8016728:	f893 31f8 	ldrb.w	r3, [r3, #504]	; 0x1f8
 801672c:	4618      	mov	r0, r3
 801672e:	46bd      	mov	sp, r7
 8016730:	bc80      	pop	{r7}
 8016732:	4770      	bx	lr
 8016734:	20000040 	.word	0x20000040

08016738 <6339f3934eecab924c4cd30c35957a539872f6f3>:
 8016738:	b480      	push	{r7}
 801673a:	af00      	add	r7, sp, #0
 801673c:	4b03      	ldr	r3, [pc, #12]	; (801674c <6339f3934eecab924c4cd30c35957a539872f6f3+0x14>)
 801673e:	681b      	ldr	r3, [r3, #0]
 8016740:	f893 3209 	ldrb.w	r3, [r3, #521]	; 0x209
 8016744:	4618      	mov	r0, r3
 8016746:	46bd      	mov	sp, r7
 8016748:	bc80      	pop	{r7}
 801674a:	4770      	bx	lr
 801674c:	20000040 	.word	0x20000040

08016750 <bdbe454f364e40446632df307cd018fd5121d6b0>:
 8016750:	b580      	push	{r7, lr}
 8016752:	b084      	sub	sp, #16
 8016754:	af00      	add	r7, sp, #0
 8016756:	4603      	mov	r3, r0
 8016758:	6039      	str	r1, [r7, #0]
 801675a:	71fb      	strb	r3, [r7, #7]
 801675c:	4b09      	ldr	r3, [pc, #36]	; (8016784 <bdbe454f364e40446632df307cd018fd5121d6b0+0x34>)
 801675e:	681b      	ldr	r3, [r3, #0]
 8016760:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8016764:	60fb      	str	r3, [r7, #12]
 8016766:	68fb      	ldr	r3, [r7, #12]
 8016768:	79fa      	ldrb	r2, [r7, #7]
 801676a:	701a      	strb	r2, [r3, #0]
 801676c:	68fb      	ldr	r3, [r7, #12]
 801676e:	3301      	adds	r3, #1
 8016770:	2210      	movs	r2, #16
 8016772:	6839      	ldr	r1, [r7, #0]
 8016774:	4618      	mov	r0, r3
 8016776:	f014 fd5e 	bl	802b236 <memcpy>
 801677a:	bf00      	nop
 801677c:	3710      	adds	r7, #16
 801677e:	46bd      	mov	sp, r7
 8016780:	bd80      	pop	{r7, pc}
 8016782:	bf00      	nop
 8016784:	20000040 	.word	0x20000040

08016788 <73e350c4a17e38f6f89a1d19f29db6422776fe5d>:
 8016788:	b580      	push	{r7, lr}
 801678a:	b084      	sub	sp, #16
 801678c:	af00      	add	r7, sp, #0
 801678e:	4603      	mov	r3, r0
 8016790:	6039      	str	r1, [r7, #0]
 8016792:	71fb      	strb	r3, [r7, #7]
 8016794:	4b09      	ldr	r3, [pc, #36]	; (80167bc <73e350c4a17e38f6f89a1d19f29db6422776fe5d+0x34>)
 8016796:	681b      	ldr	r3, [r3, #0]
 8016798:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 801679c:	60fb      	str	r3, [r7, #12]
 801679e:	68fb      	ldr	r3, [r7, #12]
 80167a0:	79fa      	ldrb	r2, [r7, #7]
 80167a2:	745a      	strb	r2, [r3, #17]
 80167a4:	68fb      	ldr	r3, [r7, #12]
 80167a6:	3312      	adds	r3, #18
 80167a8:	2210      	movs	r2, #16
 80167aa:	6839      	ldr	r1, [r7, #0]
 80167ac:	4618      	mov	r0, r3
 80167ae:	f014 fd42 	bl	802b236 <memcpy>
 80167b2:	bf00      	nop
 80167b4:	3710      	adds	r7, #16
 80167b6:	46bd      	mov	sp, r7
 80167b8:	bd80      	pop	{r7, pc}
 80167ba:	bf00      	nop
 80167bc:	20000040 	.word	0x20000040

080167c0 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c>:
 80167c0:	b580      	push	{r7, lr}
 80167c2:	b088      	sub	sp, #32
 80167c4:	af00      	add	r7, sp, #0
 80167c6:	6078      	str	r0, [r7, #4]
 80167c8:	2301      	movs	r3, #1
 80167ca:	77fb      	strb	r3, [r7, #31]
 80167cc:	687b      	ldr	r3, [r7, #4]
 80167ce:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80167d2:	4618      	mov	r0, r3
 80167d4:	f000 faca 	bl	8016d6c <4b59fedb5de869ccde24e265f7a0554552ced4e7>
 80167d8:	4603      	mov	r3, r0
 80167da:	461a      	mov	r2, r3
 80167dc:	687b      	ldr	r3, [r7, #4]
 80167de:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 80167e2:	687b      	ldr	r3, [r7, #4]
 80167e4:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 80167e8:	7ff9      	ldrb	r1, [r7, #31]
 80167ea:	2200      	movs	r2, #0
 80167ec:	4618      	mov	r0, r3
 80167ee:	f000 faef 	bl	8016dd0 <auxLengthChecking>
 80167f2:	4603      	mov	r3, r0
 80167f4:	77bb      	strb	r3, [r7, #30]
 80167f6:	687b      	ldr	r3, [r7, #4]
 80167f8:	7a1b      	ldrb	r3, [r3, #8]
 80167fa:	461a      	mov	r2, r3
 80167fc:	7fbb      	ldrb	r3, [r7, #30]
 80167fe:	4413      	add	r3, r2
 8016800:	687a      	ldr	r2, [r7, #4]
 8016802:	f892 20b5 	ldrb.w	r2, [r2, #181]	; 0xb5
 8016806:	4413      	add	r3, r2
 8016808:	2b80      	cmp	r3, #128	; 0x80
 801680a:	dd01      	ble.n	8016810 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0x50>
 801680c:	2300      	movs	r3, #0
 801680e:	e063      	b.n	80168d8 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0x118>
 8016810:	687b      	ldr	r3, [r7, #4]
 8016812:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 8016816:	2b00      	cmp	r3, #0
 8016818:	d00b      	beq.n	8016832 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0x72>
 801681a:	687b      	ldr	r3, [r7, #4]
 801681c:	f893 30a3 	ldrb.w	r3, [r3, #163]	; 0xa3
 8016820:	777b      	strb	r3, [r7, #29]
 8016822:	2101      	movs	r1, #1
 8016824:	6878      	ldr	r0, [r7, #4]
 8016826:	f012 fe35 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801682a:	687b      	ldr	r3, [r7, #4]
 801682c:	685b      	ldr	r3, [r3, #4]
 801682e:	7f7a      	ldrb	r2, [r7, #29]
 8016830:	701a      	strb	r2, [r3, #0]
 8016832:	687b      	ldr	r3, [r7, #4]
 8016834:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 8016838:	2b03      	cmp	r3, #3
 801683a:	d01e      	beq.n	801687a <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xba>
 801683c:	2b03      	cmp	r3, #3
 801683e:	dc25      	bgt.n	801688c <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xcc>
 8016840:	2b01      	cmp	r3, #1
 8016842:	dc02      	bgt.n	801684a <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0x8a>
 8016844:	2b00      	cmp	r3, #0
 8016846:	da23      	bge.n	8016890 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xd0>
 8016848:	e020      	b.n	801688c <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xcc>
 801684a:	2b02      	cmp	r3, #2
 801684c:	d11e      	bne.n	801688c <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xcc>
 801684e:	687b      	ldr	r3, [r7, #4]
 8016850:	33a4      	adds	r3, #164	; 0xa4
 8016852:	61bb      	str	r3, [r7, #24]
 8016854:	2101      	movs	r1, #1
 8016856:	6878      	ldr	r0, [r7, #4]
 8016858:	f012 fe1c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801685c:	687b      	ldr	r3, [r7, #4]
 801685e:	685b      	ldr	r3, [r3, #4]
 8016860:	69ba      	ldr	r2, [r7, #24]
 8016862:	79d2      	ldrb	r2, [r2, #7]
 8016864:	701a      	strb	r2, [r3, #0]
 8016866:	2101      	movs	r1, #1
 8016868:	6878      	ldr	r0, [r7, #4]
 801686a:	f012 fe13 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801686e:	687b      	ldr	r3, [r7, #4]
 8016870:	685b      	ldr	r3, [r3, #4]
 8016872:	69ba      	ldr	r2, [r7, #24]
 8016874:	7a12      	ldrb	r2, [r2, #8]
 8016876:	701a      	strb	r2, [r3, #0]
 8016878:	e00b      	b.n	8016892 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xd2>
 801687a:	687b      	ldr	r3, [r7, #4]
 801687c:	33a4      	adds	r3, #164	; 0xa4
 801687e:	61bb      	str	r3, [r7, #24]
 8016880:	2201      	movs	r2, #1
 8016882:	69b9      	ldr	r1, [r7, #24]
 8016884:	6878      	ldr	r0, [r7, #4]
 8016886:	f012 fdcd 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 801688a:	e002      	b.n	8016892 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0xd2>
 801688c:	2300      	movs	r3, #0
 801688e:	e023      	b.n	80168d8 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c+0x118>
 8016890:	bf00      	nop
 8016892:	2101      	movs	r1, #1
 8016894:	6878      	ldr	r0, [r7, #4]
 8016896:	f012 fdfd 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801689a:	2300      	movs	r3, #0
 801689c:	777b      	strb	r3, [r7, #29]
 801689e:	687b      	ldr	r3, [r7, #4]
 80168a0:	f893 20a1 	ldrb.w	r2, [r3, #161]	; 0xa1
 80168a4:	7f7b      	ldrb	r3, [r7, #29]
 80168a6:	4313      	orrs	r3, r2
 80168a8:	777b      	strb	r3, [r7, #29]
 80168aa:	687b      	ldr	r3, [r7, #4]
 80168ac:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 80168b0:	00db      	lsls	r3, r3, #3
 80168b2:	b2da      	uxtb	r2, r3
 80168b4:	7f7b      	ldrb	r3, [r7, #29]
 80168b6:	4313      	orrs	r3, r2
 80168b8:	777b      	strb	r3, [r7, #29]
 80168ba:	7ffb      	ldrb	r3, [r7, #31]
 80168bc:	015b      	lsls	r3, r3, #5
 80168be:	b2da      	uxtb	r2, r3
 80168c0:	7f7b      	ldrb	r3, [r7, #29]
 80168c2:	4313      	orrs	r3, r2
 80168c4:	777b      	strb	r3, [r7, #29]
 80168c6:	7f7b      	ldrb	r3, [r7, #29]
 80168c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80168cc:	777b      	strb	r3, [r7, #29]
 80168ce:	687b      	ldr	r3, [r7, #4]
 80168d0:	685b      	ldr	r3, [r3, #4]
 80168d2:	7f7a      	ldrb	r2, [r7, #29]
 80168d4:	701a      	strb	r2, [r3, #0]
 80168d6:	2301      	movs	r3, #1
 80168d8:	4618      	mov	r0, r3
 80168da:	3720      	adds	r7, #32
 80168dc:	46bd      	mov	sp, r7
 80168de:	bd80      	pop	{r7, pc}

080168e0 <628044ebadd5376fad8b3928b1093d9e8f1976ae>:
 80168e0:	b580      	push	{r7, lr}
 80168e2:	b09a      	sub	sp, #104	; 0x68
 80168e4:	af04      	add	r7, sp, #16
 80168e6:	60f8      	str	r0, [r7, #12]
 80168e8:	60b9      	str	r1, [r7, #8]
 80168ea:	607a      	str	r2, [r7, #4]
 80168ec:	4b4c      	ldr	r3, [pc, #304]	; (8016a20 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x140>)
 80168ee:	681b      	ldr	r3, [r3, #0]
 80168f0:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 80168f4:	647b      	str	r3, [r7, #68]	; 0x44
 80168f6:	687b      	ldr	r3, [r7, #4]
 80168f8:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80168fc:	2b00      	cmp	r3, #0
 80168fe:	d101      	bne.n	8016904 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x24>
 8016900:	2301      	movs	r3, #1
 8016902:	e089      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 8016904:	687b      	ldr	r3, [r7, #4]
 8016906:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 801690a:	2b00      	cmp	r3, #0
 801690c:	d001      	beq.n	8016912 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x32>
 801690e:	2300      	movs	r3, #0
 8016910:	e082      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 8016912:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016916:	2208      	movs	r2, #8
 8016918:	68b9      	ldr	r1, [r7, #8]
 801691a:	4618      	mov	r0, r3
 801691c:	f014 fc8b 	bl	802b236 <memcpy>
 8016920:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016924:	3308      	adds	r3, #8
 8016926:	2205      	movs	r2, #5
 8016928:	68f9      	ldr	r1, [r7, #12]
 801692a:	4618      	mov	r0, r3
 801692c:	f7ff febf 	bl	80166ae <c5868198428dfaffddb0900c3d01452778b19d11>
 8016930:	687b      	ldr	r3, [r7, #4]
 8016932:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016936:	2b07      	cmp	r3, #7
 8016938:	dc42      	bgt.n	80169c0 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xe0>
 801693a:	2b05      	cmp	r3, #5
 801693c:	da21      	bge.n	8016982 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xa2>
 801693e:	2b03      	cmp	r3, #3
 8016940:	dc02      	bgt.n	8016948 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x68>
 8016942:	2b00      	cmp	r3, #0
 8016944:	dc03      	bgt.n	801694e <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x6e>
 8016946:	e03b      	b.n	80169c0 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xe0>
 8016948:	2b04      	cmp	r3, #4
 801694a:	d037      	beq.n	80169bc <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xdc>
 801694c:	e038      	b.n	80169c0 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xe0>
 801694e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016950:	781b      	ldrb	r3, [r3, #0]
 8016952:	2b00      	cmp	r3, #0
 8016954:	d101      	bne.n	801695a <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x7a>
 8016956:	2300      	movs	r3, #0
 8016958:	e05e      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 801695a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801695c:	3301      	adds	r3, #1
 801695e:	64bb      	str	r3, [r7, #72]	; 0x48
 8016960:	687b      	ldr	r3, [r7, #4]
 8016962:	685b      	ldr	r3, [r3, #4]
 8016964:	657b      	str	r3, [r7, #84]	; 0x54
 8016966:	687b      	ldr	r3, [r7, #4]
 8016968:	7a1b      	ldrb	r3, [r3, #8]
 801696a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 801696e:	687b      	ldr	r3, [r7, #4]
 8016970:	685a      	ldr	r2, [r3, #4]
 8016972:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8016976:	4413      	add	r3, r2
 8016978:	64fb      	str	r3, [r7, #76]	; 0x4c
 801697a:	2300      	movs	r3, #0
 801697c:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8016980:	e020      	b.n	80169c4 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xe4>
 8016982:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016984:	7c5b      	ldrb	r3, [r3, #17]
 8016986:	2b00      	cmp	r3, #0
 8016988:	d101      	bne.n	801698e <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xae>
 801698a:	2300      	movs	r3, #0
 801698c:	e044      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 801698e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016990:	3312      	adds	r3, #18
 8016992:	64bb      	str	r3, [r7, #72]	; 0x48
 8016994:	687b      	ldr	r3, [r7, #4]
 8016996:	685b      	ldr	r3, [r3, #4]
 8016998:	657b      	str	r3, [r7, #84]	; 0x54
 801699a:	687b      	ldr	r3, [r7, #4]
 801699c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801699e:	64fb      	str	r3, [r7, #76]	; 0x4c
 80169a0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80169a2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80169a4:	1ad3      	subs	r3, r2, r3
 80169a6:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 80169aa:	687b      	ldr	r3, [r7, #4]
 80169ac:	7a1a      	ldrb	r2, [r3, #8]
 80169ae:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 80169b2:	1ad3      	subs	r3, r2, r3
 80169b4:	b2db      	uxtb	r3, r3
 80169b6:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80169ba:	e003      	b.n	80169c4 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xe4>
 80169bc:	2300      	movs	r3, #0
 80169be:	e02b      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 80169c0:	2300      	movs	r3, #0
 80169c2:	e029      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 80169c4:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 80169c8:	f897 2033 	ldrb.w	r2, [r7, #51]	; 0x33
 80169cc:	4413      	add	r3, r2
 80169ce:	2b80      	cmp	r3, #128	; 0x80
 80169d0:	dd01      	ble.n	80169d6 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0xf6>
 80169d2:	2300      	movs	r3, #0
 80169d4:	e020      	b.n	8016a18 <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x138>
 80169d6:	687b      	ldr	r3, [r7, #4]
 80169d8:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 80169dc:	2b00      	cmp	r3, #0
 80169de:	d006      	beq.n	80169ee <628044ebadd5376fad8b3928b1093d9e8f1976ae+0x10e>
 80169e0:	687b      	ldr	r3, [r7, #4]
 80169e2:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 80169e6:	4619      	mov	r1, r3
 80169e8:	6878      	ldr	r0, [r7, #4]
 80169ea:	f012 fdc1 	bl	8029570 <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d>
 80169ee:	687b      	ldr	r3, [r7, #4]
 80169f0:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 80169f4:	f107 0233 	add.w	r2, r7, #51	; 0x33
 80169f8:	f897 1053 	ldrb.w	r1, [r7, #83]	; 0x53
 80169fc:	9303      	str	r3, [sp, #12]
 80169fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8016a00:	9302      	str	r3, [sp, #8]
 8016a02:	2302      	movs	r3, #2
 8016a04:	9301      	str	r3, [sp, #4]
 8016a06:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016a0a:	9300      	str	r3, [sp, #0]
 8016a0c:	4613      	mov	r3, r2
 8016a0e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016a10:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8016a12:	f013 f804 	bl	8029a1e <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d>
 8016a16:	4603      	mov	r3, r0
 8016a18:	4618      	mov	r0, r3
 8016a1a:	3758      	adds	r7, #88	; 0x58
 8016a1c:	46bd      	mov	sp, r7
 8016a1e:	bd80      	pop	{r7, pc}
 8016a20:	20000040 	.word	0x20000040

08016a24 <245bc706add2545900df78a3f141ff0f80e5adf9>:
 8016a24:	b5b0      	push	{r4, r5, r7, lr}
 8016a26:	b08c      	sub	sp, #48	; 0x30
 8016a28:	af00      	add	r7, sp, #0
 8016a2a:	61f8      	str	r0, [r7, #28]
 8016a2c:	61b9      	str	r1, [r7, #24]
 8016a2e:	69fb      	ldr	r3, [r7, #28]
 8016a30:	685b      	ldr	r3, [r3, #4]
 8016a32:	69ba      	ldr	r2, [r7, #24]
 8016a34:	7852      	ldrb	r2, [r2, #1]
 8016a36:	4413      	add	r3, r2
 8016a38:	781b      	ldrb	r3, [r3, #0]
 8016a3a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 8016a3e:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8016a42:	f003 0307 	and.w	r3, r3, #7
 8016a46:	b2da      	uxtb	r2, r3
 8016a48:	69fb      	ldr	r3, [r7, #28]
 8016a4a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8016a4e:	69fb      	ldr	r3, [r7, #28]
 8016a50:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016a54:	4618      	mov	r0, r3
 8016a56:	f000 f989 	bl	8016d6c <4b59fedb5de869ccde24e265f7a0554552ced4e7>
 8016a5a:	4603      	mov	r3, r0
 8016a5c:	461a      	mov	r2, r3
 8016a5e:	69fb      	ldr	r3, [r7, #28]
 8016a60:	f883 20b5 	strb.w	r2, [r3, #181]	; 0xb5
 8016a64:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8016a68:	08db      	lsrs	r3, r3, #3
 8016a6a:	b2db      	uxtb	r3, r3
 8016a6c:	f003 0303 	and.w	r3, r3, #3
 8016a70:	b2da      	uxtb	r2, r3
 8016a72:	69fb      	ldr	r3, [r7, #28]
 8016a74:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 8016a78:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8016a7c:	095b      	lsrs	r3, r3, #5
 8016a7e:	b2db      	uxtb	r3, r3
 8016a80:	f003 0301 	and.w	r3, r3, #1
 8016a84:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8016a88:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8016a8c:	099b      	lsrs	r3, r3, #6
 8016a8e:	b2db      	uxtb	r3, r3
 8016a90:	f003 0301 	and.w	r3, r3, #1
 8016a94:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8016a98:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8016a9c:	2b00      	cmp	r3, #0
 8016a9e:	d103      	bne.n	8016aa8 <245bc706add2545900df78a3f141ff0f80e5adf9+0x84>
 8016aa0:	2304      	movs	r3, #4
 8016aa2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8016aa6:	e002      	b.n	8016aae <245bc706add2545900df78a3f141ff0f80e5adf9+0x8a>
 8016aa8:	2305      	movs	r3, #5
 8016aaa:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8016aae:	69bb      	ldr	r3, [r7, #24]
 8016ab0:	785b      	ldrb	r3, [r3, #1]
 8016ab2:	3301      	adds	r3, #1
 8016ab4:	b2da      	uxtb	r2, r3
 8016ab6:	69bb      	ldr	r3, [r7, #24]
 8016ab8:	705a      	strb	r2, [r3, #1]
 8016aba:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8016abe:	2b00      	cmp	r3, #0
 8016ac0:	d107      	bne.n	8016ad2 <245bc706add2545900df78a3f141ff0f80e5adf9+0xae>
 8016ac2:	69bb      	ldr	r3, [r7, #24]
 8016ac4:	785a      	ldrb	r2, [r3, #1]
 8016ac6:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8016aca:	4413      	add	r3, r2
 8016acc:	b2da      	uxtb	r2, r3
 8016ace:	69bb      	ldr	r3, [r7, #24]
 8016ad0:	705a      	strb	r2, [r3, #1]
 8016ad2:	69fb      	ldr	r3, [r7, #28]
 8016ad4:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 8016ad8:	2b03      	cmp	r3, #3
 8016ada:	d02e      	beq.n	8016b3a <245bc706add2545900df78a3f141ff0f80e5adf9+0x116>
 8016adc:	2b03      	cmp	r3, #3
 8016ade:	dc47      	bgt.n	8016b70 <245bc706add2545900df78a3f141ff0f80e5adf9+0x14c>
 8016ae0:	2b01      	cmp	r3, #1
 8016ae2:	dc02      	bgt.n	8016aea <245bc706add2545900df78a3f141ff0f80e5adf9+0xc6>
 8016ae4:	2b00      	cmp	r3, #0
 8016ae6:	da03      	bge.n	8016af0 <245bc706add2545900df78a3f141ff0f80e5adf9+0xcc>
 8016ae8:	e042      	b.n	8016b70 <245bc706add2545900df78a3f141ff0f80e5adf9+0x14c>
 8016aea:	2b02      	cmp	r3, #2
 8016aec:	d00a      	beq.n	8016b04 <245bc706add2545900df78a3f141ff0f80e5adf9+0xe0>
 8016aee:	e03f      	b.n	8016b70 <245bc706add2545900df78a3f141ff0f80e5adf9+0x14c>
 8016af0:	69fb      	ldr	r3, [r7, #28]
 8016af2:	f103 00a4 	add.w	r0, r3, #164	; 0xa4
 8016af6:	69bb      	ldr	r3, [r7, #24]
 8016af8:	332d      	adds	r3, #45	; 0x2d
 8016afa:	2211      	movs	r2, #17
 8016afc:	4619      	mov	r1, r3
 8016afe:	f014 fb9a 	bl	802b236 <memcpy>
 8016b02:	e037      	b.n	8016b74 <245bc706add2545900df78a3f141ff0f80e5adf9+0x150>
 8016b04:	69fb      	ldr	r3, [r7, #28]
 8016b06:	685b      	ldr	r3, [r3, #4]
 8016b08:	69ba      	ldr	r2, [r7, #24]
 8016b0a:	7852      	ldrb	r2, [r2, #1]
 8016b0c:	1899      	adds	r1, r3, r2
 8016b0e:	69fc      	ldr	r4, [r7, #28]
 8016b10:	4638      	mov	r0, r7
 8016b12:	2301      	movs	r3, #1
 8016b14:	2201      	movs	r2, #1
 8016b16:	f012 fc37 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8016b1a:	34a4      	adds	r4, #164	; 0xa4
 8016b1c:	463d      	mov	r5, r7
 8016b1e:	6828      	ldr	r0, [r5, #0]
 8016b20:	6869      	ldr	r1, [r5, #4]
 8016b22:	68aa      	ldr	r2, [r5, #8]
 8016b24:	68eb      	ldr	r3, [r5, #12]
 8016b26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016b28:	7c2b      	ldrb	r3, [r5, #16]
 8016b2a:	7023      	strb	r3, [r4, #0]
 8016b2c:	69bb      	ldr	r3, [r7, #24]
 8016b2e:	785b      	ldrb	r3, [r3, #1]
 8016b30:	3302      	adds	r3, #2
 8016b32:	b2da      	uxtb	r2, r3
 8016b34:	69bb      	ldr	r3, [r7, #24]
 8016b36:	705a      	strb	r2, [r3, #1]
 8016b38:	e01c      	b.n	8016b74 <245bc706add2545900df78a3f141ff0f80e5adf9+0x150>
 8016b3a:	69fb      	ldr	r3, [r7, #28]
 8016b3c:	685b      	ldr	r3, [r3, #4]
 8016b3e:	69ba      	ldr	r2, [r7, #24]
 8016b40:	7852      	ldrb	r2, [r2, #1]
 8016b42:	1899      	adds	r1, r3, r2
 8016b44:	69fc      	ldr	r4, [r7, #28]
 8016b46:	4638      	mov	r0, r7
 8016b48:	2301      	movs	r3, #1
 8016b4a:	2202      	movs	r2, #2
 8016b4c:	f012 fc1c 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8016b50:	34a4      	adds	r4, #164	; 0xa4
 8016b52:	463d      	mov	r5, r7
 8016b54:	6828      	ldr	r0, [r5, #0]
 8016b56:	6869      	ldr	r1, [r5, #4]
 8016b58:	68aa      	ldr	r2, [r5, #8]
 8016b5a:	68eb      	ldr	r3, [r5, #12]
 8016b5c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016b5e:	7c2b      	ldrb	r3, [r5, #16]
 8016b60:	7023      	strb	r3, [r4, #0]
 8016b62:	69bb      	ldr	r3, [r7, #24]
 8016b64:	785b      	ldrb	r3, [r3, #1]
 8016b66:	3308      	adds	r3, #8
 8016b68:	b2da      	uxtb	r2, r3
 8016b6a:	69bb      	ldr	r3, [r7, #24]
 8016b6c:	705a      	strb	r2, [r3, #1]
 8016b6e:	e001      	b.n	8016b74 <245bc706add2545900df78a3f141ff0f80e5adf9+0x150>
 8016b70:	2300      	movs	r3, #0
 8016b72:	e03e      	b.n	8016bf2 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1ce>
 8016b74:	69fb      	ldr	r3, [r7, #28]
 8016b76:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 8016b7a:	2b00      	cmp	r3, #0
 8016b7c:	d013      	beq.n	8016ba6 <245bc706add2545900df78a3f141ff0f80e5adf9+0x182>
 8016b7e:	69fb      	ldr	r3, [r7, #28]
 8016b80:	685b      	ldr	r3, [r3, #4]
 8016b82:	69ba      	ldr	r2, [r7, #24]
 8016b84:	7852      	ldrb	r2, [r2, #1]
 8016b86:	4413      	add	r3, r2
 8016b88:	781b      	ldrb	r3, [r3, #0]
 8016b8a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 8016b8e:	69fb      	ldr	r3, [r7, #28]
 8016b90:	f897 202e 	ldrb.w	r2, [r7, #46]	; 0x2e
 8016b94:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 8016b98:	69bb      	ldr	r3, [r7, #24]
 8016b9a:	785b      	ldrb	r3, [r3, #1]
 8016b9c:	3301      	adds	r3, #1
 8016b9e:	b2da      	uxtb	r2, r3
 8016ba0:	69bb      	ldr	r3, [r7, #24]
 8016ba2:	705a      	strb	r2, [r3, #1]
 8016ba4:	e003      	b.n	8016bae <245bc706add2545900df78a3f141ff0f80e5adf9+0x18a>
 8016ba6:	69fb      	ldr	r3, [r7, #28]
 8016ba8:	2201      	movs	r2, #1
 8016baa:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 8016bae:	69fb      	ldr	r3, [r7, #28]
 8016bb0:	2200      	movs	r2, #0
 8016bb2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8016bb6:	69fb      	ldr	r3, [r7, #28]
 8016bb8:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 8016bbc:	2b00      	cmp	r3, #0
 8016bbe:	d109      	bne.n	8016bd4 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1b0>
 8016bc0:	69fb      	ldr	r3, [r7, #28]
 8016bc2:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016bc6:	2b01      	cmp	r3, #1
 8016bc8:	d104      	bne.n	8016bd4 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1b0>
 8016bca:	69fb      	ldr	r3, [r7, #28]
 8016bcc:	2201      	movs	r2, #1
 8016bce:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8016bd2:	e00d      	b.n	8016bf0 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1cc>
 8016bd4:	69fb      	ldr	r3, [r7, #28]
 8016bd6:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 8016bda:	2b00      	cmp	r3, #0
 8016bdc:	d008      	beq.n	8016bf0 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1cc>
 8016bde:	69fb      	ldr	r3, [r7, #28]
 8016be0:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016be4:	2b05      	cmp	r3, #5
 8016be6:	d103      	bne.n	8016bf0 <245bc706add2545900df78a3f141ff0f80e5adf9+0x1cc>
 8016be8:	69fb      	ldr	r3, [r7, #28]
 8016bea:	2201      	movs	r2, #1
 8016bec:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8016bf0:	2301      	movs	r3, #1
 8016bf2:	4618      	mov	r0, r3
 8016bf4:	3730      	adds	r7, #48	; 0x30
 8016bf6:	46bd      	mov	sp, r7
 8016bf8:	bdb0      	pop	{r4, r5, r7, pc}
	...

08016bfc <ccaf3079fe06f6d98cd1712d3ed21403c04581f9>:
 8016bfc:	b580      	push	{r7, lr}
 8016bfe:	b09a      	sub	sp, #104	; 0x68
 8016c00:	af04      	add	r7, sp, #16
 8016c02:	6078      	str	r0, [r7, #4]
 8016c04:	6039      	str	r1, [r7, #0]
 8016c06:	4b58      	ldr	r3, [pc, #352]	; (8016d68 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x16c>)
 8016c08:	681b      	ldr	r3, [r3, #0]
 8016c0a:	f503 73fc 	add.w	r3, r3, #504	; 0x1f8
 8016c0e:	647b      	str	r3, [r7, #68]	; 0x44
 8016c10:	6838      	ldr	r0, [r7, #0]
 8016c12:	f000 f91d 	bl	8016e50 <incomingAcceptableLevel>
 8016c16:	4603      	mov	r3, r0
 8016c18:	f083 0301 	eor.w	r3, r3, #1
 8016c1c:	b2db      	uxtb	r3, r3
 8016c1e:	2b00      	cmp	r3, #0
 8016c20:	d001      	beq.n	8016c26 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x2a>
 8016c22:	2300      	movs	r3, #0
 8016c24:	e09b      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016c26:	683b      	ldr	r3, [r7, #0]
 8016c28:	f103 0142 	add.w	r1, r3, #66	; 0x42
 8016c2c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016c30:	2208      	movs	r2, #8
 8016c32:	4618      	mov	r0, r3
 8016c34:	f014 faff 	bl	802b236 <memcpy>
 8016c38:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016c3c:	3308      	adds	r3, #8
 8016c3e:	2205      	movs	r2, #5
 8016c40:	6879      	ldr	r1, [r7, #4]
 8016c42:	4618      	mov	r0, r3
 8016c44:	f7ff fd33 	bl	80166ae <c5868198428dfaffddb0900c3d01452778b19d11>
 8016c48:	683b      	ldr	r3, [r7, #0]
 8016c4a:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016c4e:	2b07      	cmp	r3, #7
 8016c50:	dc48      	bgt.n	8016ce4 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xe8>
 8016c52:	2b05      	cmp	r3, #5
 8016c54:	da27      	bge.n	8016ca6 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xaa>
 8016c56:	2b03      	cmp	r3, #3
 8016c58:	dc02      	bgt.n	8016c60 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x64>
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	dc03      	bgt.n	8016c66 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x6a>
 8016c5e:	e041      	b.n	8016ce4 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xe8>
 8016c60:	2b04      	cmp	r3, #4
 8016c62:	d03d      	beq.n	8016ce0 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xe4>
 8016c64:	e03e      	b.n	8016ce4 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xe8>
 8016c66:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016c68:	781b      	ldrb	r3, [r3, #0]
 8016c6a:	2b00      	cmp	r3, #0
 8016c6c:	d101      	bne.n	8016c72 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x76>
 8016c6e:	2300      	movs	r3, #0
 8016c70:	e075      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016c72:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016c74:	3301      	adds	r3, #1
 8016c76:	64bb      	str	r3, [r7, #72]	; 0x48
 8016c78:	683b      	ldr	r3, [r7, #0]
 8016c7a:	685b      	ldr	r3, [r3, #4]
 8016c7c:	657b      	str	r3, [r7, #84]	; 0x54
 8016c7e:	683b      	ldr	r3, [r7, #0]
 8016c80:	7a1a      	ldrb	r2, [r3, #8]
 8016c82:	683b      	ldr	r3, [r7, #0]
 8016c84:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 8016c88:	1ad3      	subs	r3, r2, r3
 8016c8a:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8016c8e:	683b      	ldr	r3, [r7, #0]
 8016c90:	685a      	ldr	r2, [r3, #4]
 8016c92:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8016c96:	4413      	add	r3, r2
 8016c98:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016c9a:	683b      	ldr	r3, [r7, #0]
 8016c9c:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 8016ca0:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8016ca4:	e020      	b.n	8016ce8 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xec>
 8016ca6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016ca8:	7c5b      	ldrb	r3, [r3, #17]
 8016caa:	2b00      	cmp	r3, #0
 8016cac:	d101      	bne.n	8016cb2 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xb6>
 8016cae:	2300      	movs	r3, #0
 8016cb0:	e055      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016cb2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8016cb4:	3312      	adds	r3, #18
 8016cb6:	64bb      	str	r3, [r7, #72]	; 0x48
 8016cb8:	683b      	ldr	r3, [r7, #0]
 8016cba:	685b      	ldr	r3, [r3, #4]
 8016cbc:	657b      	str	r3, [r7, #84]	; 0x54
 8016cbe:	683b      	ldr	r3, [r7, #0]
 8016cc0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016cc2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016cc4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016cc6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8016cc8:	1ad3      	subs	r3, r2, r3
 8016cca:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8016cce:	683b      	ldr	r3, [r7, #0]
 8016cd0:	7a1a      	ldrb	r2, [r3, #8]
 8016cd2:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8016cd6:	1ad3      	subs	r3, r2, r3
 8016cd8:	b2db      	uxtb	r3, r3
 8016cda:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8016cde:	e003      	b.n	8016ce8 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xec>
 8016ce0:	2300      	movs	r3, #0
 8016ce2:	e03c      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016ce4:	2300      	movs	r3, #0
 8016ce6:	e03a      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016ce8:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 8016cec:	f897 2033 	ldrb.w	r2, [r7, #51]	; 0x33
 8016cf0:	4413      	add	r3, r2
 8016cf2:	2b80      	cmp	r3, #128	; 0x80
 8016cf4:	dd01      	ble.n	8016cfa <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0xfe>
 8016cf6:	2300      	movs	r3, #0
 8016cf8:	e031      	b.n	8016d5e <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x162>
 8016cfa:	683b      	ldr	r3, [r7, #0]
 8016cfc:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 8016d00:	f107 0233 	add.w	r2, r7, #51	; 0x33
 8016d04:	f897 1053 	ldrb.w	r1, [r7, #83]	; 0x53
 8016d08:	9303      	str	r3, [sp, #12]
 8016d0a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8016d0c:	9302      	str	r3, [sp, #8]
 8016d0e:	2302      	movs	r3, #2
 8016d10:	9301      	str	r3, [sp, #4]
 8016d12:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8016d16:	9300      	str	r3, [sp, #0]
 8016d18:	4613      	mov	r3, r2
 8016d1a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8016d1c:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8016d1e:	f012 fed6 	bl	8029ace <71097e204b694049f5c66ccd9b138d3a4c93df13>
 8016d22:	4603      	mov	r3, r0
 8016d24:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8016d28:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8016d2c:	f083 0301 	eor.w	r3, r3, #1
 8016d30:	b2db      	uxtb	r3, r3
 8016d32:	2b00      	cmp	r3, #0
 8016d34:	d00a      	beq.n	8016d4c <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x150>
 8016d36:	683b      	ldr	r3, [r7, #0]
 8016d38:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016d3c:	2b03      	cmp	r3, #3
 8016d3e:	dc01      	bgt.n	8016d44 <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x148>
 8016d40:	2b00      	cmp	r3, #0
 8016d42:	e003      	b.n	8016d4c <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x150>
 8016d44:	3b05      	subs	r3, #5
 8016d46:	2b02      	cmp	r3, #2
 8016d48:	d800      	bhi.n	8016d4c <ccaf3079fe06f6d98cd1712d3ed21403c04581f9+0x150>
 8016d4a:	bf00      	nop
 8016d4c:	683b      	ldr	r3, [r7, #0]
 8016d4e:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 8016d52:	4619      	mov	r1, r3
 8016d54:	6838      	ldr	r0, [r7, #0]
 8016d56:	f012 fc3b 	bl	80295d0 <d03cdfa9a9d75424e5e85d984afc48a1c5ef4b9d>
 8016d5a:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 8016d5e:	4618      	mov	r0, r3
 8016d60:	3758      	adds	r7, #88	; 0x58
 8016d62:	46bd      	mov	sp, r7
 8016d64:	bd80      	pop	{r7, pc}
 8016d66:	bf00      	nop
 8016d68:	20000040 	.word	0x20000040

08016d6c <4b59fedb5de869ccde24e265f7a0554552ced4e7>:
 8016d6c:	b480      	push	{r7}
 8016d6e:	b085      	sub	sp, #20
 8016d70:	af00      	add	r7, sp, #0
 8016d72:	4603      	mov	r3, r0
 8016d74:	71fb      	strb	r3, [r7, #7]
 8016d76:	79fb      	ldrb	r3, [r7, #7]
 8016d78:	2b07      	cmp	r3, #7
 8016d7a:	d81f      	bhi.n	8016dbc <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x50>
 8016d7c:	a201      	add	r2, pc, #4	; (adr r2, 8016d84 <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x18>)
 8016d7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016d82:	bf00      	nop
 8016d84:	08016da5 	.word	0x08016da5
 8016d88:	08016dab 	.word	0x08016dab
 8016d8c:	08016db1 	.word	0x08016db1
 8016d90:	08016db7 	.word	0x08016db7
 8016d94:	08016da5 	.word	0x08016da5
 8016d98:	08016dab 	.word	0x08016dab
 8016d9c:	08016db1 	.word	0x08016db1
 8016da0:	08016db7 	.word	0x08016db7
 8016da4:	2300      	movs	r3, #0
 8016da6:	73fb      	strb	r3, [r7, #15]
 8016da8:	e00b      	b.n	8016dc2 <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x56>
 8016daa:	2304      	movs	r3, #4
 8016dac:	73fb      	strb	r3, [r7, #15]
 8016dae:	e008      	b.n	8016dc2 <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x56>
 8016db0:	2308      	movs	r3, #8
 8016db2:	73fb      	strb	r3, [r7, #15]
 8016db4:	e005      	b.n	8016dc2 <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x56>
 8016db6:	2310      	movs	r3, #16
 8016db8:	73fb      	strb	r3, [r7, #15]
 8016dba:	e002      	b.n	8016dc2 <4b59fedb5de869ccde24e265f7a0554552ced4e7+0x56>
 8016dbc:	2300      	movs	r3, #0
 8016dbe:	73fb      	strb	r3, [r7, #15]
 8016dc0:	bf00      	nop
 8016dc2:	7bfb      	ldrb	r3, [r7, #15]
 8016dc4:	4618      	mov	r0, r3
 8016dc6:	3714      	adds	r7, #20
 8016dc8:	46bd      	mov	sp, r7
 8016dca:	bc80      	pop	{r7}
 8016dcc:	4770      	bx	lr
 8016dce:	bf00      	nop

08016dd0 <auxLengthChecking>:
 8016dd0:	b480      	push	{r7}
 8016dd2:	b085      	sub	sp, #20
 8016dd4:	af00      	add	r7, sp, #0
 8016dd6:	4603      	mov	r3, r0
 8016dd8:	71fb      	strb	r3, [r7, #7]
 8016dda:	460b      	mov	r3, r1
 8016ddc:	71bb      	strb	r3, [r7, #6]
 8016dde:	4613      	mov	r3, r2
 8016de0:	717b      	strb	r3, [r7, #5]
 8016de2:	2300      	movs	r3, #0
 8016de4:	73fb      	strb	r3, [r7, #15]
 8016de6:	79bb      	ldrb	r3, [r7, #6]
 8016de8:	2b00      	cmp	r3, #0
 8016dea:	d108      	bne.n	8016dfe <auxLengthChecking+0x2e>
 8016dec:	797b      	ldrb	r3, [r7, #5]
 8016dee:	2b04      	cmp	r3, #4
 8016df0:	d102      	bne.n	8016df8 <auxLengthChecking+0x28>
 8016df2:	2304      	movs	r3, #4
 8016df4:	73bb      	strb	r3, [r7, #14]
 8016df6:	e004      	b.n	8016e02 <auxLengthChecking+0x32>
 8016df8:	2305      	movs	r3, #5
 8016dfa:	73bb      	strb	r3, [r7, #14]
 8016dfc:	e001      	b.n	8016e02 <auxLengthChecking+0x32>
 8016dfe:	2300      	movs	r3, #0
 8016e00:	73bb      	strb	r3, [r7, #14]
 8016e02:	79fb      	ldrb	r3, [r7, #7]
 8016e04:	2b03      	cmp	r3, #3
 8016e06:	d81b      	bhi.n	8016e40 <auxLengthChecking+0x70>
 8016e08:	a201      	add	r2, pc, #4	; (adr r2, 8016e10 <auxLengthChecking+0x40>)
 8016e0a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016e0e:	bf00      	nop
 8016e10:	08016e21 	.word	0x08016e21
 8016e14:	08016e29 	.word	0x08016e29
 8016e18:	08016e31 	.word	0x08016e31
 8016e1c:	08016e39 	.word	0x08016e39
 8016e20:	7bbb      	ldrb	r3, [r7, #14]
 8016e22:	3301      	adds	r3, #1
 8016e24:	73fb      	strb	r3, [r7, #15]
 8016e26:	e00c      	b.n	8016e42 <auxLengthChecking+0x72>
 8016e28:	7bbb      	ldrb	r3, [r7, #14]
 8016e2a:	3302      	adds	r3, #2
 8016e2c:	73fb      	strb	r3, [r7, #15]
 8016e2e:	e008      	b.n	8016e42 <auxLengthChecking+0x72>
 8016e30:	7bbb      	ldrb	r3, [r7, #14]
 8016e32:	3304      	adds	r3, #4
 8016e34:	73fb      	strb	r3, [r7, #15]
 8016e36:	e004      	b.n	8016e42 <auxLengthChecking+0x72>
 8016e38:	7bbb      	ldrb	r3, [r7, #14]
 8016e3a:	330a      	adds	r3, #10
 8016e3c:	73fb      	strb	r3, [r7, #15]
 8016e3e:	e000      	b.n	8016e42 <auxLengthChecking+0x72>
 8016e40:	bf00      	nop
 8016e42:	7bfb      	ldrb	r3, [r7, #15]
 8016e44:	4618      	mov	r0, r3
 8016e46:	3714      	adds	r7, #20
 8016e48:	46bd      	mov	sp, r7
 8016e4a:	bc80      	pop	{r7}
 8016e4c:	4770      	bx	lr
 8016e4e:	bf00      	nop

08016e50 <incomingAcceptableLevel>:
 8016e50:	b480      	push	{r7}
 8016e52:	b08b      	sub	sp, #44	; 0x2c
 8016e54:	af00      	add	r7, sp, #0
 8016e56:	6078      	str	r0, [r7, #4]
 8016e58:	687b      	ldr	r3, [r7, #4]
 8016e5a:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016e5e:	2b00      	cmp	r3, #0
 8016e60:	d101      	bne.n	8016e66 <incomingAcceptableLevel+0x16>
 8016e62:	2300      	movs	r3, #0
 8016e64:	e024      	b.n	8016eb0 <incomingAcceptableLevel+0x60>
 8016e66:	687b      	ldr	r3, [r7, #4]
 8016e68:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 8016e6c:	2b00      	cmp	r3, #0
 8016e6e:	d106      	bne.n	8016e7e <incomingAcceptableLevel+0x2e>
 8016e70:	687b      	ldr	r3, [r7, #4]
 8016e72:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016e76:	2b01      	cmp	r3, #1
 8016e78:	d001      	beq.n	8016e7e <incomingAcceptableLevel+0x2e>
 8016e7a:	2300      	movs	r3, #0
 8016e7c:	e018      	b.n	8016eb0 <incomingAcceptableLevel+0x60>
 8016e7e:	687b      	ldr	r3, [r7, #4]
 8016e80:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 8016e84:	2b00      	cmp	r3, #0
 8016e86:	d00b      	beq.n	8016ea0 <incomingAcceptableLevel+0x50>
 8016e88:	687b      	ldr	r3, [r7, #4]
 8016e8a:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016e8e:	2b05      	cmp	r3, #5
 8016e90:	d006      	beq.n	8016ea0 <incomingAcceptableLevel+0x50>
 8016e92:	687b      	ldr	r3, [r7, #4]
 8016e94:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8016e98:	2b01      	cmp	r3, #1
 8016e9a:	d001      	beq.n	8016ea0 <incomingAcceptableLevel+0x50>
 8016e9c:	2300      	movs	r3, #0
 8016e9e:	e007      	b.n	8016eb0 <incomingAcceptableLevel+0x60>
 8016ea0:	687b      	ldr	r3, [r7, #4]
 8016ea2:	f893 30a2 	ldrb.w	r3, [r3, #162]	; 0xa2
 8016ea6:	2b00      	cmp	r3, #0
 8016ea8:	d001      	beq.n	8016eae <incomingAcceptableLevel+0x5e>
 8016eaa:	2300      	movs	r3, #0
 8016eac:	e000      	b.n	8016eb0 <incomingAcceptableLevel+0x60>
 8016eae:	2301      	movs	r3, #1
 8016eb0:	4618      	mov	r0, r3
 8016eb2:	372c      	adds	r7, #44	; 0x2c
 8016eb4:	46bd      	mov	sp, r7
 8016eb6:	bc80      	pop	{r7}
 8016eb8:	4770      	bx	lr

08016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8016eba:	b480      	push	{r7}
 8016ebc:	b089      	sub	sp, #36	; 0x24
 8016ebe:	af00      	add	r7, sp, #0
 8016ec0:	60f8      	str	r0, [r7, #12]
 8016ec2:	60b9      	str	r1, [r7, #8]
 8016ec4:	607a      	str	r2, [r7, #4]
 8016ec6:	68fb      	ldr	r3, [r7, #12]
 8016ec8:	61fb      	str	r3, [r7, #28]
 8016eca:	68bb      	ldr	r3, [r7, #8]
 8016ecc:	61bb      	str	r3, [r7, #24]
 8016ece:	687b      	ldr	r3, [r7, #4]
 8016ed0:	617b      	str	r3, [r7, #20]
 8016ed2:	2300      	movs	r3, #0
 8016ed4:	613b      	str	r3, [r7, #16]
 8016ed6:	e00d      	b.n	8016ef4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8016ed8:	69ba      	ldr	r2, [r7, #24]
 8016eda:	693b      	ldr	r3, [r7, #16]
 8016edc:	441a      	add	r2, r3
 8016ede:	6979      	ldr	r1, [r7, #20]
 8016ee0:	693b      	ldr	r3, [r7, #16]
 8016ee2:	1acb      	subs	r3, r1, r3
 8016ee4:	3b01      	subs	r3, #1
 8016ee6:	69f9      	ldr	r1, [r7, #28]
 8016ee8:	440b      	add	r3, r1
 8016eea:	7812      	ldrb	r2, [r2, #0]
 8016eec:	701a      	strb	r2, [r3, #0]
 8016eee:	693b      	ldr	r3, [r7, #16]
 8016ef0:	3301      	adds	r3, #1
 8016ef2:	613b      	str	r3, [r7, #16]
 8016ef4:	697a      	ldr	r2, [r7, #20]
 8016ef6:	693b      	ldr	r3, [r7, #16]
 8016ef8:	429a      	cmp	r2, r3
 8016efa:	d8ed      	bhi.n	8016ed8 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8016efc:	bf00      	nop
 8016efe:	bf00      	nop
 8016f00:	3724      	adds	r7, #36	; 0x24
 8016f02:	46bd      	mov	sp, r7
 8016f04:	bc80      	pop	{r7}
 8016f06:	4770      	bx	lr

08016f08 <ENDIANNESS_LittleToNative>:
 8016f08:	b580      	push	{r7, lr}
 8016f0a:	b084      	sub	sp, #16
 8016f0c:	af00      	add	r7, sp, #0
 8016f0e:	60f8      	str	r0, [r7, #12]
 8016f10:	60b9      	str	r1, [r7, #8]
 8016f12:	607a      	str	r2, [r7, #4]
 8016f14:	687a      	ldr	r2, [r7, #4]
 8016f16:	68b9      	ldr	r1, [r7, #8]
 8016f18:	68f8      	ldr	r0, [r7, #12]
 8016f1a:	f014 f98c 	bl	802b236 <memcpy>
 8016f1e:	bf00      	nop
 8016f20:	3710      	adds	r7, #16
 8016f22:	46bd      	mov	sp, r7
 8016f24:	bd80      	pop	{r7, pc}
	...

08016f28 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79>:
 8016f28:	b5b0      	push	{r4, r5, r7, lr}
 8016f2a:	f5ad 7d08 	sub.w	sp, sp, #544	; 0x220
 8016f2e:	af00      	add	r7, sp, #0
 8016f30:	4bc0      	ldr	r3, [pc, #768]	; (8017234 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x30c>)
 8016f32:	681b      	ldr	r3, [r3, #0]
 8016f34:	f8c7 321c 	str.w	r3, [r7, #540]	; 0x21c
 8016f38:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8016f3c:	4618      	mov	r0, r3
 8016f3e:	f44f 73fc 	mov.w	r3, #504	; 0x1f8
 8016f42:	461a      	mov	r2, r3
 8016f44:	2100      	movs	r1, #0
 8016f46:	f014 f8d7 	bl	802b0f8 <memset>
 8016f4a:	f003 fa39 	bl	801a3c0 <statsReset>
 8016f4e:	f7ef fb5b 	bl	8006608 <EMBENET_RADIO_GetCapabilities>
 8016f52:	4602      	mov	r2, r0
 8016f54:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016f58:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016f5c:	461c      	mov	r4, r3
 8016f5e:	4615      	mov	r5, r2
 8016f60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016f62:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8016f64:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8016f68:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8016f6c:	4bb2      	ldr	r3, [pc, #712]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016f6e:	681a      	ldr	r2, [r3, #0]
 8016f70:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016f74:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016f78:	691b      	ldr	r3, [r3, #16]
 8016f7a:	1ad2      	subs	r2, r2, r3
 8016f7c:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016f80:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016f84:	681b      	ldr	r3, [r3, #0]
 8016f86:	1ad2      	subs	r2, r2, r3
 8016f88:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8016f8c:	f8c3 21c4 	str.w	r2, [r3, #452]	; 0x1c4
 8016f90:	4ba9      	ldr	r3, [pc, #676]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016f92:	681a      	ldr	r2, [r3, #0]
 8016f94:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016f98:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016f9c:	691b      	ldr	r3, [r3, #16]
 8016f9e:	1ad2      	subs	r2, r2, r3
 8016fa0:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8016fa4:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
 8016fa8:	4ba3      	ldr	r3, [pc, #652]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016faa:	681a      	ldr	r2, [r3, #0]
 8016fac:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016fb0:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016fb4:	691b      	ldr	r3, [r3, #16]
 8016fb6:	1ad2      	subs	r2, r2, r3
 8016fb8:	4b9f      	ldr	r3, [pc, #636]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016fba:	695b      	ldr	r3, [r3, #20]
 8016fbc:	441a      	add	r2, r3
 8016fbe:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8016fc2:	f8c3 21cc 	str.w	r2, [r3, #460]	; 0x1cc
 8016fc6:	4b9c      	ldr	r3, [pc, #624]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016fc8:	685a      	ldr	r2, [r3, #4]
 8016fca:	4b9b      	ldr	r3, [pc, #620]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016fcc:	68db      	ldr	r3, [r3, #12]
 8016fce:	1ad2      	subs	r2, r2, r3
 8016fd0:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016fd4:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016fd8:	695b      	ldr	r3, [r3, #20]
 8016fda:	1ad2      	subs	r2, r2, r3
 8016fdc:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016fe0:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8016fe4:	68db      	ldr	r3, [r3, #12]
 8016fe6:	1ad2      	subs	r2, r2, r3
 8016fe8:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8016fec:	f8c3 21d0 	str.w	r2, [r3, #464]	; 0x1d0
 8016ff0:	4b91      	ldr	r3, [pc, #580]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016ff2:	685a      	ldr	r2, [r3, #4]
 8016ff4:	4b90      	ldr	r3, [pc, #576]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8016ff6:	68db      	ldr	r3, [r3, #12]
 8016ff8:	1ad2      	subs	r2, r2, r3
 8016ffa:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8016ffe:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8017002:	695b      	ldr	r3, [r3, #20]
 8017004:	1ad2      	subs	r2, r2, r3
 8017006:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801700a:	f8c3 21d4 	str.w	r2, [r3, #468]	; 0x1d4
 801700e:	4b8a      	ldr	r3, [pc, #552]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017010:	685a      	ldr	r2, [r3, #4]
 8017012:	4b89      	ldr	r3, [pc, #548]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017014:	68db      	ldr	r3, [r3, #12]
 8017016:	441a      	add	r2, r3
 8017018:	f507 7308 	add.w	r3, r7, #544	; 0x220
 801701c:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8017020:	699b      	ldr	r3, [r3, #24]
 8017022:	441a      	add	r2, r3
 8017024:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017028:	f8c3 21d8 	str.w	r2, [r3, #472]	; 0x1d8
 801702c:	4b82      	ldr	r3, [pc, #520]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 801702e:	681a      	ldr	r2, [r3, #0]
 8017030:	4b81      	ldr	r3, [pc, #516]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017032:	689b      	ldr	r3, [r3, #8]
 8017034:	1ad2      	subs	r2, r2, r3
 8017036:	f507 7308 	add.w	r3, r7, #544	; 0x220
 801703a:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 801703e:	695b      	ldr	r3, [r3, #20]
 8017040:	1ad2      	subs	r2, r2, r3
 8017042:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8017046:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 801704a:	685b      	ldr	r3, [r3, #4]
 801704c:	1ad2      	subs	r2, r2, r3
 801704e:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017052:	f8c3 21dc 	str.w	r2, [r3, #476]	; 0x1dc
 8017056:	4b78      	ldr	r3, [pc, #480]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017058:	681a      	ldr	r2, [r3, #0]
 801705a:	4b77      	ldr	r3, [pc, #476]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 801705c:	689b      	ldr	r3, [r3, #8]
 801705e:	1ad2      	subs	r2, r2, r3
 8017060:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8017064:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8017068:	695b      	ldr	r3, [r3, #20]
 801706a:	1ad2      	subs	r2, r2, r3
 801706c:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017070:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
 8017074:	4b70      	ldr	r3, [pc, #448]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017076:	681a      	ldr	r2, [r3, #0]
 8017078:	4b6f      	ldr	r3, [pc, #444]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 801707a:	689b      	ldr	r3, [r3, #8]
 801707c:	441a      	add	r2, r3
 801707e:	f507 7308 	add.w	r3, r7, #544	; 0x220
 8017082:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8017086:	699b      	ldr	r3, [r3, #24]
 8017088:	441a      	add	r2, r3
 801708a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801708e:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 8017092:	4b69      	ldr	r3, [pc, #420]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017094:	685a      	ldr	r2, [r3, #4]
 8017096:	f507 7308 	add.w	r3, r7, #544	; 0x220
 801709a:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 801709e:	691b      	ldr	r3, [r3, #16]
 80170a0:	1ad2      	subs	r2, r2, r3
 80170a2:	f507 7308 	add.w	r3, r7, #544	; 0x220
 80170a6:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 80170aa:	689b      	ldr	r3, [r3, #8]
 80170ac:	1ad2      	subs	r2, r2, r3
 80170ae:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80170b2:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
 80170b6:	4b60      	ldr	r3, [pc, #384]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80170b8:	685a      	ldr	r2, [r3, #4]
 80170ba:	f507 7308 	add.w	r3, r7, #544	; 0x220
 80170be:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 80170c2:	691b      	ldr	r3, [r3, #16]
 80170c4:	1ad2      	subs	r2, r2, r3
 80170c6:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80170ca:	f8c3 21ec 	str.w	r2, [r3, #492]	; 0x1ec
 80170ce:	4b5a      	ldr	r3, [pc, #360]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80170d0:	685a      	ldr	r2, [r3, #4]
 80170d2:	f507 7308 	add.w	r3, r7, #544	; 0x220
 80170d6:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 80170da:	691b      	ldr	r3, [r3, #16]
 80170dc:	1ad2      	subs	r2, r2, r3
 80170de:	4b56      	ldr	r3, [pc, #344]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80170e0:	695b      	ldr	r3, [r3, #20]
 80170e2:	441a      	add	r2, r3
 80170e4:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80170e8:	f8c3 21f0 	str.w	r2, [r3, #496]	; 0x1f0
 80170ec:	4b52      	ldr	r3, [pc, #328]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80170ee:	691a      	ldr	r2, [r3, #16]
 80170f0:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80170f4:	f8c3 21f4 	str.w	r2, [r3, #500]	; 0x1f4
 80170f8:	f507 7308 	add.w	r3, r7, #544	; 0x220
 80170fc:	f5a3 7308 	sub.w	r3, r3, #544	; 0x220
 8017100:	f993 201d 	ldrsb.w	r2, [r3, #29]
 8017104:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017108:	f883 2199 	strb.w	r2, [r3, #409]	; 0x199
 801710c:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017110:	f8d3 31c8 	ldr.w	r3, [r3, #456]	; 0x1c8
 8017114:	2b00      	cmp	r3, #0
 8017116:	f000 8086 	beq.w	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801711a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801711e:	f8d3 21c8 	ldr.w	r2, [r3, #456]	; 0x1c8
 8017122:	4b45      	ldr	r3, [pc, #276]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017124:	691b      	ldr	r3, [r3, #16]
 8017126:	429a      	cmp	r2, r3
 8017128:	d27d      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801712a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801712e:	f8d3 31cc 	ldr.w	r3, [r3, #460]	; 0x1cc
 8017132:	2b00      	cmp	r3, #0
 8017134:	d077      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 8017136:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801713a:	f8d3 21cc 	ldr.w	r2, [r3, #460]	; 0x1cc
 801713e:	4b3e      	ldr	r3, [pc, #248]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017140:	691b      	ldr	r3, [r3, #16]
 8017142:	429a      	cmp	r2, r3
 8017144:	d26f      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 8017146:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801714a:	f8d3 31d0 	ldr.w	r3, [r3, #464]	; 0x1d0
 801714e:	2b00      	cmp	r3, #0
 8017150:	d069      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 8017152:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017156:	f8d3 21d0 	ldr.w	r2, [r3, #464]	; 0x1d0
 801715a:	4b37      	ldr	r3, [pc, #220]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 801715c:	691b      	ldr	r3, [r3, #16]
 801715e:	429a      	cmp	r2, r3
 8017160:	d261      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 8017162:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017166:	f8d3 31d4 	ldr.w	r3, [r3, #468]	; 0x1d4
 801716a:	2b00      	cmp	r3, #0
 801716c:	d05b      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801716e:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017172:	f8d3 21d4 	ldr.w	r2, [r3, #468]	; 0x1d4
 8017176:	4b30      	ldr	r3, [pc, #192]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017178:	691b      	ldr	r3, [r3, #16]
 801717a:	429a      	cmp	r2, r3
 801717c:	d253      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801717e:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017182:	f8d3 31d8 	ldr.w	r3, [r3, #472]	; 0x1d8
 8017186:	2b00      	cmp	r3, #0
 8017188:	d04d      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801718a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801718e:	f8d3 21d8 	ldr.w	r2, [r3, #472]	; 0x1d8
 8017192:	4b29      	ldr	r3, [pc, #164]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017194:	691b      	ldr	r3, [r3, #16]
 8017196:	429a      	cmp	r2, r3
 8017198:	d245      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801719a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801719e:	f8d3 31dc 	ldr.w	r3, [r3, #476]	; 0x1dc
 80171a2:	2b00      	cmp	r3, #0
 80171a4:	d03f      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171a6:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171aa:	f8d3 21dc 	ldr.w	r2, [r3, #476]	; 0x1dc
 80171ae:	4b22      	ldr	r3, [pc, #136]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80171b0:	691b      	ldr	r3, [r3, #16]
 80171b2:	429a      	cmp	r2, r3
 80171b4:	d237      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171b6:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171ba:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 80171be:	2b00      	cmp	r3, #0
 80171c0:	d031      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171c2:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171c6:	f8d3 21e0 	ldr.w	r2, [r3, #480]	; 0x1e0
 80171ca:	4b1b      	ldr	r3, [pc, #108]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80171cc:	691b      	ldr	r3, [r3, #16]
 80171ce:	429a      	cmp	r2, r3
 80171d0:	d229      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171d2:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171d6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 80171da:	2b00      	cmp	r3, #0
 80171dc:	d023      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171de:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171e2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	; 0x1e4
 80171e6:	4b14      	ldr	r3, [pc, #80]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 80171e8:	691b      	ldr	r3, [r3, #16]
 80171ea:	429a      	cmp	r2, r3
 80171ec:	d21b      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171ee:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171f2:	f8d3 31ec 	ldr.w	r3, [r3, #492]	; 0x1ec
 80171f6:	2b00      	cmp	r3, #0
 80171f8:	d015      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 80171fa:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 80171fe:	f8d3 21ec 	ldr.w	r2, [r3, #492]	; 0x1ec
 8017202:	4b0d      	ldr	r3, [pc, #52]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017204:	691b      	ldr	r3, [r3, #16]
 8017206:	429a      	cmp	r2, r3
 8017208:	d20d      	bcs.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 801720a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801720e:	f8d3 31f0 	ldr.w	r3, [r3, #496]	; 0x1f0
 8017212:	2b00      	cmp	r3, #0
 8017214:	d007      	beq.n	8017226 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x2fe>
 8017216:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801721a:	f8d3 21f0 	ldr.w	r2, [r3, #496]	; 0x1f0
 801721e:	4b06      	ldr	r3, [pc, #24]	; (8017238 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x310>)
 8017220:	691b      	ldr	r3, [r3, #16]
 8017222:	429a      	cmp	r2, r3
 8017224:	d30e      	bcc.n	8017244 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x31c>
 8017226:	f240 1221 	movw	r2, #289	; 0x121
 801722a:	4904      	ldr	r1, [pc, #16]	; (801723c <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x314>)
 801722c:	4804      	ldr	r0, [pc, #16]	; (8017240 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x318>)
 801722e:	f7ea fa6b 	bl	8001708 <EXPECT_OnAbortHandler>
 8017232:	bf00      	nop
 8017234:	20000040 	.word	0x20000040
 8017238:	080318ac 	.word	0x080318ac
 801723c:	0802f790 	.word	0x0802f790
 8017240:	0802f7f8 	.word	0x0802f7f8
 8017244:	2200      	movs	r2, #0
 8017246:	4916      	ldr	r1, [pc, #88]	; (80172a0 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x378>)
 8017248:	4816      	ldr	r0, [pc, #88]	; (80172a4 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x37c>)
 801724a:	f7ef f8c1 	bl	80063d0 <EMBENET_RADIO_SetCallbacks>
 801724e:	2000      	movs	r0, #0
 8017250:	f7fa fae8 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 8017254:	4603      	mov	r3, r0
 8017256:	461a      	mov	r2, r3
 8017258:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801725c:	f883 21b0 	strb.w	r2, [r3, #432]	; 0x1b0
 8017260:	2001      	movs	r0, #1
 8017262:	f7fa fadf 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 8017266:	4603      	mov	r3, r0
 8017268:	461a      	mov	r2, r3
 801726a:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 801726e:	f883 21b8 	strb.w	r2, [r3, #440]	; 0x1b8
 8017272:	4b0d      	ldr	r3, [pc, #52]	; (80172a8 <f31ec2926d8265f853f9e0e8e92d0d3b7da49f79+0x380>)
 8017274:	691a      	ldr	r2, [r3, #16]
 8017276:	4613      	mov	r3, r2
 8017278:	005b      	lsls	r3, r3, #1
 801727a:	4413      	add	r3, r2
 801727c:	009b      	lsls	r3, r3, #2
 801727e:	4413      	add	r3, r2
 8017280:	085b      	lsrs	r3, r3, #1
 8017282:	4619      	mov	r1, r3
 8017284:	2000      	movs	r0, #0
 8017286:	f7fa fe29 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 801728a:	4602      	mov	r2, r0
 801728c:	f8d7 321c 	ldr.w	r3, [r7, #540]	; 0x21c
 8017290:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
 8017294:	bf00      	nop
 8017296:	f507 7708 	add.w	r7, r7, #544	; 0x220
 801729a:	46bd      	mov	sp, r7
 801729c:	bdb0      	pop	{r4, r5, r7, pc}
 801729e:	bf00      	nop
 80172a0:	08017855 	.word	0x08017855
 80172a4:	08017725 	.word	0x08017725
 80172a8:	080318ac 	.word	0x080318ac

080172ac <f245cef569e100f3b51b8078c1d070e2f387d00a>:
 80172ac:	b5b0      	push	{r4, r5, r7, lr}
 80172ae:	b084      	sub	sp, #16
 80172b0:	af02      	add	r7, sp, #8
 80172b2:	4b0d      	ldr	r3, [pc, #52]	; (80172e8 <f245cef569e100f3b51b8078c1d070e2f387d00a+0x3c>)
 80172b4:	681b      	ldr	r3, [r3, #0]
 80172b6:	607b      	str	r3, [r7, #4]
 80172b8:	687b      	ldr	r3, [r7, #4]
 80172ba:	f893 41b0 	ldrb.w	r4, [r3, #432]	; 0x1b0
 80172be:	687b      	ldr	r3, [r7, #4]
 80172c0:	f8d3 51f4 	ldr.w	r5, [r3, #500]	; 0x1f4
 80172c4:	f7fa fc24 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 80172c8:	4602      	mov	r2, r0
 80172ca:	687b      	ldr	r3, [r7, #4]
 80172cc:	9301      	str	r3, [sp, #4]
 80172ce:	4b07      	ldr	r3, [pc, #28]	; (80172ec <f245cef569e100f3b51b8078c1d070e2f387d00a+0x40>)
 80172d0:	9300      	str	r3, [sp, #0]
 80172d2:	4613      	mov	r3, r2
 80172d4:	462a      	mov	r2, r5
 80172d6:	2101      	movs	r1, #1
 80172d8:	4620      	mov	r0, r4
 80172da:	f7fa fb07 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80172de:	bf00      	nop
 80172e0:	3708      	adds	r7, #8
 80172e2:	46bd      	mov	sp, r7
 80172e4:	bdb0      	pop	{r4, r5, r7, pc}
 80172e6:	bf00      	nop
 80172e8:	20000040 	.word	0x20000040
 80172ec:	08017319 	.word	0x08017319

080172f0 <c37c52d5fcbad41724f29f060633d7770e309943>:
 80172f0:	b580      	push	{r7, lr}
 80172f2:	b082      	sub	sp, #8
 80172f4:	af00      	add	r7, sp, #0
 80172f6:	4b07      	ldr	r3, [pc, #28]	; (8017314 <c37c52d5fcbad41724f29f060633d7770e309943+0x24>)
 80172f8:	681b      	ldr	r3, [r3, #0]
 80172fa:	607b      	str	r3, [r7, #4]
 80172fc:	f002 ff90 	bl	801a220 <e0d63f279bcffa109806a257de8645074809531c>
 8017300:	687b      	ldr	r3, [r7, #4]
 8017302:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 8017306:	4618      	mov	r0, r3
 8017308:	f7fa fbdc 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801730c:	bf00      	nop
 801730e:	3708      	adds	r7, #8
 8017310:	46bd      	mov	sp, r7
 8017312:	bd80      	pop	{r7, pc}
 8017314:	20000040 	.word	0x20000040

08017318 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2>:
 8017318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801731c:	b09b      	sub	sp, #108	; 0x6c
 801731e:	af04      	add	r7, sp, #16
 8017320:	60f8      	str	r0, [r7, #12]
 8017322:	4bae      	ldr	r3, [pc, #696]	; (80175dc <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2c4>)
 8017324:	681b      	ldr	r3, [r3, #0]
 8017326:	653b      	str	r3, [r7, #80]	; 0x50
 8017328:	f003 fad4 	bl	801a8d4 <getState>
 801732c:	4603      	mov	r3, r0
 801732e:	2b02      	cmp	r3, #2
 8017330:	f000 814f 	beq.w	80175d2 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2ba>
 8017334:	f003 face 	bl	801a8d4 <getState>
 8017338:	4603      	mov	r3, r0
 801733a:	2b03      	cmp	r3, #3
 801733c:	f000 8149 	beq.w	80175d2 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2ba>
 8017340:	4ba6      	ldr	r3, [pc, #664]	; (80175dc <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2c4>)
 8017342:	681b      	ldr	r3, [r3, #0]
 8017344:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8017348:	f8d3 31b0 	ldr.w	r3, [r3, #432]	; 0x1b0
 801734c:	64fb      	str	r3, [r7, #76]	; 0x4c
 801734e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017350:	2b00      	cmp	r3, #0
 8017352:	d002      	beq.n	801735a <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x42>
 8017354:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017356:	2001      	movs	r0, #1
 8017358:	4798      	blx	r3
 801735a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801735c:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 8017360:	4618      	mov	r0, r3
 8017362:	f7fa fbdd 	bl	8011b20 <19ac46e5c06ffb6c1640c5d4070de271a544b182>
 8017366:	4602      	mov	r2, r0
 8017368:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801736a:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
 801736e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017370:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8017374:	4b9a      	ldr	r3, [pc, #616]	; (80175e0 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2c8>)
 8017376:	691a      	ldr	r2, [r3, #16]
 8017378:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801737a:	f8d3 11b4 	ldr.w	r1, [r3, #436]	; 0x1b4
 801737e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017380:	9301      	str	r3, [sp, #4]
 8017382:	4b98      	ldr	r3, [pc, #608]	; (80175e4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2cc>)
 8017384:	9300      	str	r3, [sp, #0]
 8017386:	460b      	mov	r3, r1
 8017388:	2101      	movs	r1, #1
 801738a:	f7fa faaf 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801738e:	2200      	movs	r2, #0
 8017390:	4995      	ldr	r1, [pc, #596]	; (80175e8 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2d0>)
 8017392:	4896      	ldr	r0, [pc, #600]	; (80175ec <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2d4>)
 8017394:	f7ef f81c 	bl	80063d0 <EMBENET_RADIO_SetCallbacks>
 8017398:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801739a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801739e:	f083 0301 	eor.w	r3, r3, #1
 80173a2:	b2db      	uxtb	r3, r3
 80173a4:	2b00      	cmp	r3, #0
 80173a6:	f000 8106 	beq.w	80175b6 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x29e>
 80173aa:	f7f5 fde3 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 80173ae:	4603      	mov	r3, r0
 80173b0:	2b00      	cmp	r3, #0
 80173b2:	f000 80f0 	beq.w	8017596 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x27e>
 80173b6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80173b8:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
 80173bc:	f083 0301 	eor.w	r3, r3, #1
 80173c0:	b2db      	uxtb	r3, r3
 80173c2:	2b00      	cmp	r3, #0
 80173c4:	d027      	beq.n	8017416 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0xfe>
 80173c6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80173c8:	2201      	movs	r2, #1
 80173ca:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 80173ce:	f7fa fb9f 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 80173d2:	4602      	mov	r2, r0
 80173d4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80173d6:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 80173da:	2005      	movs	r0, #5
 80173dc:	f7f5 fe0e 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80173e0:	4603      	mov	r3, r0
 80173e2:	1c59      	adds	r1, r3, #1
 80173e4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80173e8:	2208      	movs	r2, #8
 80173ea:	4618      	mov	r0, r3
 80173ec:	f013 ff23 	bl	802b236 <memcpy>
 80173f0:	2002      	movs	r0, #2
 80173f2:	f7f5 fe03 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80173f6:	4603      	mov	r3, r0
 80173f8:	1c59      	adds	r1, r3, #1
 80173fa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80173fe:	3308      	adds	r3, #8
 8017400:	2208      	movs	r2, #8
 8017402:	4618      	mov	r0, r3
 8017404:	f013 ff17 	bl	802b236 <memcpy>
 8017408:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801740c:	4618      	mov	r0, r3
 801740e:	f00e f961 	bl	80256d4 <f5d01873bc96944b472aa031c0b65a87221c5869>
 8017412:	f000 fab7 	bl	8017984 <joinRootStart>
 8017416:	f000 faf1 	bl	80179fc <joinRootWait>
 801741a:	4603      	mov	r3, r0
 801741c:	2b00      	cmp	r3, #0
 801741e:	f000 80aa 	beq.w	8017576 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x25e>
 8017422:	2001      	movs	r0, #1
 8017424:	f002 fedc 	bl	801a1e0 <changeIsSync>
 8017428:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801742a:	2200      	movs	r2, #0
 801742c:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8017430:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017432:	2201      	movs	r2, #1
 8017434:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 8017438:	2000      	movs	r0, #0
 801743a:	f003 fa39 	bl	801a8b0 <setState>
 801743e:	4a6c      	ldr	r2, [pc, #432]	; (80175f0 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2d8>)
 8017440:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017444:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017448:	6018      	str	r0, [r3, #0]
 801744a:	3304      	adds	r3, #4
 801744c:	8019      	strh	r1, [r3, #0]
 801744e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8017452:	e893 0003 	ldmia.w	r3, {r0, r1}
 8017456:	f005 fa53 	bl	801c900 <6759635076cb4c933592248ebd293b63832a7e9b>
 801745a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801745c:	2201      	movs	r2, #1
 801745e:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
 8017462:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017464:	2200      	movs	r2, #0
 8017466:	f8a3 219a 	strh.w	r2, [r3, #410]	; 0x19a
 801746a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801746c:	2200      	movs	r2, #0
 801746e:	f883 219c 	strb.w	r2, [r3, #412]	; 0x19c
 8017472:	f107 0320 	add.w	r3, r7, #32
 8017476:	2211      	movs	r2, #17
 8017478:	2100      	movs	r1, #0
 801747a:	4618      	mov	r0, r3
 801747c:	f013 fe3c 	bl	802b0f8 <memset>
 8017480:	2306      	movs	r3, #6
 8017482:	f887 3020 	strb.w	r3, [r7, #32]
 8017486:	2300      	movs	r3, #0
 8017488:	657b      	str	r3, [r7, #84]	; 0x54
 801748a:	e02b      	b.n	80174e4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x1cc>
 801748c:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801748e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8017490:	33cc      	adds	r3, #204	; 0xcc
 8017492:	005b      	lsls	r3, r3, #1
 8017494:	4413      	add	r3, r2
 8017496:	885e      	ldrh	r6, [r3, #2]
 8017498:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801749a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801749c:	4413      	add	r3, r2
 801749e:	f503 73ce 	add.w	r3, r3, #412	; 0x19c
 80174a2:	7819      	ldrb	r1, [r3, #0]
 80174a4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80174a6:	aa02      	add	r2, sp, #8
 80174a8:	3331      	adds	r3, #49	; 0x31
 80174aa:	6818      	ldr	r0, [r3, #0]
 80174ac:	6010      	str	r0, [r2, #0]
 80174ae:	791b      	ldrb	r3, [r3, #4]
 80174b0:	7113      	strb	r3, [r2, #4]
 80174b2:	f107 0320 	add.w	r3, r7, #32
 80174b6:	9301      	str	r3, [sp, #4]
 80174b8:	9100      	str	r1, [sp, #0]
 80174ba:	2301      	movs	r3, #1
 80174bc:	2201      	movs	r2, #1
 80174be:	2103      	movs	r1, #3
 80174c0:	4630      	mov	r0, r6
 80174c2:	f005 fa9d 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 80174c6:	4603      	mov	r3, r0
 80174c8:	f083 0301 	eor.w	r3, r3, #1
 80174cc:	b2db      	uxtb	r3, r3
 80174ce:	2b00      	cmp	r3, #0
 80174d0:	d005      	beq.n	80174de <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x1c6>
 80174d2:	f240 1291 	movw	r2, #401	; 0x191
 80174d6:	4947      	ldr	r1, [pc, #284]	; (80175f4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2dc>)
 80174d8:	4847      	ldr	r0, [pc, #284]	; (80175f8 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2e0>)
 80174da:	f7ea f915 	bl	8001708 <EXPECT_OnAbortHandler>
 80174de:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80174e0:	3301      	adds	r3, #1
 80174e2:	657b      	str	r3, [r7, #84]	; 0x54
 80174e4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80174e6:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
 80174ea:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80174ec:	429a      	cmp	r2, r3
 80174ee:	d3cd      	bcc.n	801748c <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x174>
 80174f0:	f04f 31ff 	mov.w	r1, #4294967295
 80174f4:	2000      	movs	r0, #0
 80174f6:	f7fa fcf1 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 80174fa:	4603      	mov	r3, r0
 80174fc:	2200      	movs	r2, #0
 80174fe:	461c      	mov	r4, r3
 8017500:	4615      	mov	r5, r2
 8017502:	603c      	str	r4, [r7, #0]
 8017504:	f005 03ff 	and.w	r3, r5, #255	; 0xff
 8017508:	607b      	str	r3, [r7, #4]
 801750a:	e9d7 4500 	ldrd	r4, r5, [r7]
 801750e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017510:	f8c3 4031 	str.w	r4, [r3, #49]	; 0x31
 8017514:	f893 2035 	ldrb.w	r2, [r3, #53]	; 0x35
 8017518:	4629      	mov	r1, r5
 801751a:	f361 0207 	bfi	r2, r1, #0, #8
 801751e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8017522:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017524:	f8d3 4031 	ldr.w	r4, [r3, #49]	; 0x31
 8017528:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801752c:	461d      	mov	r5, r3
 801752e:	f005 fa47 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8017532:	4603      	mov	r3, r0
 8017534:	b29b      	uxth	r3, r3
 8017536:	2200      	movs	r2, #0
 8017538:	4698      	mov	r8, r3
 801753a:	4691      	mov	r9, r2
 801753c:	46c2      	mov	sl, r8
 801753e:	f009 0bff 	and.w	fp, r9, #255	; 0xff
 8017542:	46d0      	mov	r8, sl
 8017544:	46d9      	mov	r9, fp
 8017546:	4642      	mov	r2, r8
 8017548:	464b      	mov	r3, r9
 801754a:	4620      	mov	r0, r4
 801754c:	4629      	mov	r1, r5
 801754e:	f7e9 fa75 	bl	8000a3c <__aeabi_uldivmod>
 8017552:	b292      	uxth	r2, r2
 8017554:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017556:	86da      	strh	r2, [r3, #54]	; 0x36
 8017558:	f006 f948 	bl	801d7ec <265e4cb026b8783377b1f22e25c3b310527be0c4>
 801755c:	4603      	mov	r3, r0
 801755e:	461a      	mov	r2, r3
 8017560:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017562:	871a      	strh	r2, [r3, #56]	; 0x38
 8017564:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8017566:	2201      	movs	r2, #1
 8017568:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 801756c:	f003 f9be 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8017570:	f011 f9e4 	bl	802893c <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653>
 8017574:	e011      	b.n	801759a <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x282>
 8017576:	f7fa facb 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801757a:	4602      	mov	r2, r0
 801757c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801757e:	f8d3 3190 	ldr.w	r3, [r3, #400]	; 0x190
 8017582:	1ad3      	subs	r3, r2, r3
 8017584:	4a1d      	ldr	r2, [pc, #116]	; (80175fc <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2e4>)
 8017586:	4293      	cmp	r3, r2
 8017588:	d907      	bls.n	801759a <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x282>
 801758a:	f240 12a1 	movw	r2, #417	; 0x1a1
 801758e:	4919      	ldr	r1, [pc, #100]	; (80175f4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2dc>)
 8017590:	481b      	ldr	r0, [pc, #108]	; (8017600 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2e8>)
 8017592:	f7ea f8b9 	bl	8001708 <EXPECT_OnAbortHandler>
 8017596:	f000 fa7b 	bl	8017a90 <activity_synchronize_newSlot>
 801759a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801759c:	f8d3 2031 	ldr.w	r2, [r3, #49]	; 0x31
 80175a0:	4611      	mov	r1, r2
 80175a2:	f893 2035 	ldrb.w	r2, [r3, #53]	; 0x35
 80175a6:	2300      	movs	r3, #0
 80175a8:	f362 0307 	bfi	r3, r2, #0, #8
 80175ac:	4608      	mov	r0, r1
 80175ae:	4619      	mov	r1, r3
 80175b0:	f7f9 fd4c 	bl	801104c <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc>
 80175b4:	e006      	b.n	80175c4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2ac>
 80175b6:	f003 f98d 	bl	801a8d4 <getState>
 80175ba:	4603      	mov	r3, r0
 80175bc:	2b00      	cmp	r3, #0
 80175be:	d101      	bne.n	80175c4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2ac>
 80175c0:	f000 fcd6 	bl	8017f70 <activity_ti1ORri1>
 80175c4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80175c6:	2b00      	cmp	r3, #0
 80175c8:	d004      	beq.n	80175d4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2bc>
 80175ca:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80175cc:	2000      	movs	r0, #0
 80175ce:	4798      	blx	r3
 80175d0:	e000      	b.n	80175d4 <abf2f5bada35777870bbf0e66ae0f41535f0fbb2+0x2bc>
 80175d2:	bf00      	nop
 80175d4:	375c      	adds	r7, #92	; 0x5c
 80175d6:	46bd      	mov	sp, r7
 80175d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175dc:	20000040 	.word	0x20000040
 80175e0:	080318ac 	.word	0x080318ac
 80175e4:	08017319 	.word	0x08017319
 80175e8:	08017855 	.word	0x08017855
 80175ec:	08017725 	.word	0x08017725
 80175f0:	0802f870 	.word	0x0802f870
 80175f4:	0802f790 	.word	0x0802f790
 80175f8:	0802f814 	.word	0x0802f814
 80175fc:	002dc6c0 	.word	0x002dc6c0
 8017600:	0802f840 	.word	0x0802f840

08017604 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6>:
 8017604:	b580      	push	{r7, lr}
 8017606:	b086      	sub	sp, #24
 8017608:	af00      	add	r7, sp, #0
 801760a:	6078      	str	r0, [r7, #4]
 801760c:	4b44      	ldr	r3, [pc, #272]	; (8017720 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x11c>)
 801760e:	681b      	ldr	r3, [r3, #0]
 8017610:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8017614:	f8d3 31b0 	ldr.w	r3, [r3, #432]	; 0x1b0
 8017618:	617b      	str	r3, [r7, #20]
 801761a:	697b      	ldr	r3, [r7, #20]
 801761c:	2b00      	cmp	r3, #0
 801761e:	d002      	beq.n	8017626 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x22>
 8017620:	697b      	ldr	r3, [r7, #20]
 8017622:	2001      	movs	r0, #1
 8017624:	4798      	blx	r3
 8017626:	f003 f955 	bl	801a8d4 <getState>
 801762a:	4603      	mov	r3, r0
 801762c:	3b04      	subs	r3, #4
 801762e:	2b14      	cmp	r3, #20
 8017630:	d868      	bhi.n	8017704 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x100>
 8017632:	a201      	add	r2, pc, #4	; (adr r2, 8017638 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x34>)
 8017634:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8017638:	0801768d 	.word	0x0801768d
 801763c:	08017693 	.word	0x08017693
 8017640:	08017699 	.word	0x08017699
 8017644:	0801769f 	.word	0x0801769f
 8017648:	080176a5 	.word	0x080176a5
 801764c:	080176ab 	.word	0x080176ab
 8017650:	080176b1 	.word	0x080176b1
 8017654:	080176b7 	.word	0x080176b7
 8017658:	080176bd 	.word	0x080176bd
 801765c:	080176c3 	.word	0x080176c3
 8017660:	08017705 	.word	0x08017705
 8017664:	080176c9 	.word	0x080176c9
 8017668:	080176cf 	.word	0x080176cf
 801766c:	080176d5 	.word	0x080176d5
 8017670:	080176db 	.word	0x080176db
 8017674:	080176e1 	.word	0x080176e1
 8017678:	080176e7 	.word	0x080176e7
 801767c:	080176ed 	.word	0x080176ed
 8017680:	080176f3 	.word	0x080176f3
 8017684:	080176f9 	.word	0x080176f9
 8017688:	080176ff 	.word	0x080176ff
 801768c:	f000 fe32 	bl	80182f4 <activity_ti2>
 8017690:	e03b      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 8017692:	f000 fe7b 	bl	801838c <activity_tie1>
 8017696:	e038      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 8017698:	f000 fe92 	bl	80183c0 <activity_ti3>
 801769c:	e035      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 801769e:	f000 ff15 	bl	80184cc <activity_tie2>
 80176a2:	e032      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176a4:	f000 ff5c 	bl	8018560 <activity_tie3>
 80176a8:	e02f      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176aa:	f000 ffe7 	bl	801867c <activity_ti6>
 80176ae:	e02c      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176b0:	f001 f828 	bl	8018704 <activity_tie4>
 80176b4:	e029      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176b6:	f001 f843 	bl	8018740 <activity_ti7>
 80176ba:	e026      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176bc:	f001 f87e 	bl	80187bc <activity_tie5>
 80176c0:	e023      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176c2:	f001 f8cb 	bl	801885c <activity_tie6>
 80176c6:	e020      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176c8:	f001 fa92 	bl	8018bf0 <activity_ri2>
 80176cc:	e01d      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176ce:	f001 fad3 	bl	8018c78 <activity_rie1>
 80176d2:	e01a      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176d4:	f001 faee 	bl	8018cb4 <activity_ri3>
 80176d8:	e017      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176da:	f001 fb29 	bl	8018d30 <activity_rie2>
 80176de:	e014      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176e0:	f001 fb60 	bl	8018da4 <activity_rie3>
 80176e4:	e011      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176e6:	f001 ff25 	bl	8019534 <activity_ri6>
 80176ea:	e00e      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176ec:	f001 ff70 	bl	80195d0 <activity_rie4>
 80176f0:	e00b      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176f2:	f001 ff8b 	bl	801960c <activity_ri7>
 80176f6:	e008      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176f8:	f002 f80e 	bl	8019718 <activity_rie5>
 80176fc:	e005      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 80176fe:	f002 f855 	bl	80197ac <activity_rie6>
 8017702:	e002      	b.n	801770a <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x106>
 8017704:	f003 f8f2 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8017708:	bf00      	nop
 801770a:	697b      	ldr	r3, [r7, #20]
 801770c:	2b00      	cmp	r3, #0
 801770e:	d002      	beq.n	8017716 <0ec428ec777fdcd1df5061356b63c4cb7d8159a6+0x112>
 8017710:	697b      	ldr	r3, [r7, #20]
 8017712:	2000      	movs	r0, #0
 8017714:	4798      	blx	r3
 8017716:	bf00      	nop
 8017718:	3718      	adds	r7, #24
 801771a:	46bd      	mov	sp, r7
 801771c:	bd80      	pop	{r7, pc}
 801771e:	bf00      	nop
 8017720:	20000040 	.word	0x20000040

08017724 <251b1d447757d9850ec5af8486c96e3050487f39>:
 8017724:	b580      	push	{r7, lr}
 8017726:	b08e      	sub	sp, #56	; 0x38
 8017728:	af02      	add	r7, sp, #8
 801772a:	6078      	str	r0, [r7, #4]
 801772c:	6039      	str	r1, [r7, #0]
 801772e:	4b45      	ldr	r3, [pc, #276]	; (8017844 <251b1d447757d9850ec5af8486c96e3050487f39+0x120>)
 8017730:	681b      	ldr	r3, [r3, #0]
 8017732:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8017736:	f8d3 31b8 	ldr.w	r3, [r3, #440]	; 0x1b8
 801773a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801773c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801773e:	2b00      	cmp	r3, #0
 8017740:	d002      	beq.n	8017748 <251b1d447757d9850ec5af8486c96e3050487f39+0x24>
 8017742:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017744:	2001      	movs	r0, #1
 8017746:	4798      	blx	r3
 8017748:	4b3e      	ldr	r3, [pc, #248]	; (8017844 <251b1d447757d9850ec5af8486c96e3050487f39+0x120>)
 801774a:	681b      	ldr	r3, [r3, #0]
 801774c:	62bb      	str	r3, [r7, #40]	; 0x28
 801774e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017750:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8017754:	683a      	ldr	r2, [r7, #0]
 8017756:	1ad3      	subs	r3, r2, r3
 8017758:	627b      	str	r3, [r7, #36]	; 0x24
 801775a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801775c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8017760:	2b00      	cmp	r3, #0
 8017762:	d019      	beq.n	8017798 <251b1d447757d9850ec5af8486c96e3050487f39+0x74>
 8017764:	4b38      	ldr	r3, [pc, #224]	; (8017848 <251b1d447757d9850ec5af8486c96e3050487f39+0x124>)
 8017766:	691b      	ldr	r3, [r3, #16]
 8017768:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801776a:	429a      	cmp	r2, r3
 801776c:	d914      	bls.n	8017798 <251b1d447757d9850ec5af8486c96e3050487f39+0x74>
 801776e:	4a37      	ldr	r2, [pc, #220]	; (801784c <251b1d447757d9850ec5af8486c96e3050487f39+0x128>)
 8017770:	f107 0314 	add.w	r3, r7, #20
 8017774:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017778:	e883 0003 	stmia.w	r3, {r0, r1}
 801777c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801777e:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8017782:	9300      	str	r3, [sp, #0]
 8017784:	683b      	ldr	r3, [r7, #0]
 8017786:	4a32      	ldr	r2, [pc, #200]	; (8017850 <251b1d447757d9850ec5af8486c96e3050487f39+0x12c>)
 8017788:	f107 0114 	add.w	r1, r7, #20
 801778c:	c903      	ldmia	r1, {r0, r1}
 801778e:	f7fd fd3b 	bl	8015208 <LOGGER_PrintLine>
 8017792:	f003 f8ab 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8017796:	e04a      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 8017798:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801779a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801779e:	f083 0301 	eor.w	r3, r3, #1
 80177a2:	b2db      	uxtb	r3, r3
 80177a4:	2b00      	cmp	r3, #0
 80177a6:	d003      	beq.n	80177b0 <251b1d447757d9850ec5af8486c96e3050487f39+0x8c>
 80177a8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80177aa:	f000 f9c7 	bl	8017b3c <activity_synchronize_startOfFrame>
 80177ae:	e03e      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 80177b0:	f003 f890 	bl	801a8d4 <getState>
 80177b4:	4603      	mov	r3, r0
 80177b6:	3b07      	subs	r3, #7
 80177b8:	2b10      	cmp	r3, #16
 80177ba:	d835      	bhi.n	8017828 <251b1d447757d9850ec5af8486c96e3050487f39+0x104>
 80177bc:	a201      	add	r2, pc, #4	; (adr r2, 80177c4 <251b1d447757d9850ec5af8486c96e3050487f39+0xa0>)
 80177be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80177c2:	bf00      	nop
 80177c4:	08017809 	.word	0x08017809
 80177c8:	08017829 	.word	0x08017829
 80177cc:	08017829 	.word	0x08017829
 80177d0:	08017829 	.word	0x08017829
 80177d4:	08017811 	.word	0x08017811
 80177d8:	08017811 	.word	0x08017811
 80177dc:	08017829 	.word	0x08017829
 80177e0:	08017829 	.word	0x08017829
 80177e4:	08017829 	.word	0x08017829
 80177e8:	08017829 	.word	0x08017829
 80177ec:	08017819 	.word	0x08017819
 80177f0:	08017819 	.word	0x08017819
 80177f4:	08017829 	.word	0x08017829
 80177f8:	08017829 	.word	0x08017829
 80177fc:	08017829 	.word	0x08017829
 8017800:	08017829 	.word	0x08017829
 8017804:	08017821 	.word	0x08017821
 8017808:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801780a:	f000 fe7d 	bl	8018508 <activity_ti4>
 801780e:	e00e      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 8017810:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8017812:	f000 fff7 	bl	8018804 <activity_ti8>
 8017816:	e00a      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 8017818:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801781a:	f001 fa93 	bl	8018d44 <activity_ri4>
 801781e:	e006      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 8017820:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8017822:	f001 ff97 	bl	8019754 <activity_ri8>
 8017826:	e002      	b.n	801782e <251b1d447757d9850ec5af8486c96e3050487f39+0x10a>
 8017828:	f003 f860 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801782c:	bf00      	nop
 801782e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017830:	2b00      	cmp	r3, #0
 8017832:	d002      	beq.n	801783a <251b1d447757d9850ec5af8486c96e3050487f39+0x116>
 8017834:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017836:	2000      	movs	r0, #0
 8017838:	4798      	blx	r3
 801783a:	bf00      	nop
 801783c:	3730      	adds	r7, #48	; 0x30
 801783e:	46bd      	mov	sp, r7
 8017840:	bd80      	pop	{r7, pc}
 8017842:	bf00      	nop
 8017844:	20000040 	.word	0x20000040
 8017848:	080318ac 	.word	0x080318ac
 801784c:	0802f8b0 	.word	0x0802f8b0
 8017850:	0802f878 	.word	0x0802f878

08017854 <c6bd410106c16f549c325b1ca136c82e89930dcb>:
 8017854:	b580      	push	{r7, lr}
 8017856:	b08e      	sub	sp, #56	; 0x38
 8017858:	af02      	add	r7, sp, #8
 801785a:	6078      	str	r0, [r7, #4]
 801785c:	6039      	str	r1, [r7, #0]
 801785e:	4b45      	ldr	r3, [pc, #276]	; (8017974 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x120>)
 8017860:	681b      	ldr	r3, [r3, #0]
 8017862:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8017866:	f8d3 31b8 	ldr.w	r3, [r3, #440]	; 0x1b8
 801786a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801786c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801786e:	2b00      	cmp	r3, #0
 8017870:	d002      	beq.n	8017878 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x24>
 8017872:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017874:	2001      	movs	r0, #1
 8017876:	4798      	blx	r3
 8017878:	4b3e      	ldr	r3, [pc, #248]	; (8017974 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x120>)
 801787a:	681b      	ldr	r3, [r3, #0]
 801787c:	62bb      	str	r3, [r7, #40]	; 0x28
 801787e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8017880:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8017884:	683a      	ldr	r2, [r7, #0]
 8017886:	1ad3      	subs	r3, r2, r3
 8017888:	627b      	str	r3, [r7, #36]	; 0x24
 801788a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801788c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8017890:	2b00      	cmp	r3, #0
 8017892:	d019      	beq.n	80178c8 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x74>
 8017894:	4b38      	ldr	r3, [pc, #224]	; (8017978 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x124>)
 8017896:	691b      	ldr	r3, [r3, #16]
 8017898:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801789a:	429a      	cmp	r2, r3
 801789c:	d914      	bls.n	80178c8 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x74>
 801789e:	4a37      	ldr	r2, [pc, #220]	; (801797c <c6bd410106c16f549c325b1ca136c82e89930dcb+0x128>)
 80178a0:	f107 0314 	add.w	r3, r7, #20
 80178a4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80178a8:	e883 0003 	stmia.w	r3, {r0, r1}
 80178ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80178ae:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80178b2:	9300      	str	r3, [sp, #0]
 80178b4:	683b      	ldr	r3, [r7, #0]
 80178b6:	4a32      	ldr	r2, [pc, #200]	; (8017980 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x12c>)
 80178b8:	f107 0114 	add.w	r1, r7, #20
 80178bc:	c903      	ldmia	r1, {r0, r1}
 80178be:	f7fd fca3 	bl	8015208 <LOGGER_PrintLine>
 80178c2:	f003 f813 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80178c6:	e04a      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 80178c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80178ca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80178ce:	f083 0301 	eor.w	r3, r3, #1
 80178d2:	b2db      	uxtb	r3, r3
 80178d4:	2b00      	cmp	r3, #0
 80178d6:	d003      	beq.n	80178e0 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x8c>
 80178d8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80178da:	f000 f94d 	bl	8017b78 <activity_synchronize_endOfFrame>
 80178de:	e03e      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 80178e0:	f002 fff8 	bl	801a8d4 <getState>
 80178e4:	4603      	mov	r3, r0
 80178e6:	3b08      	subs	r3, #8
 80178e8:	2b10      	cmp	r3, #16
 80178ea:	d835      	bhi.n	8017958 <c6bd410106c16f549c325b1ca136c82e89930dcb+0x104>
 80178ec:	a201      	add	r2, pc, #4	; (adr r2, 80178f4 <c6bd410106c16f549c325b1ca136c82e89930dcb+0xa0>)
 80178ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80178f2:	bf00      	nop
 80178f4:	08017939 	.word	0x08017939
 80178f8:	08017959 	.word	0x08017959
 80178fc:	08017959 	.word	0x08017959
 8017900:	08017959 	.word	0x08017959
 8017904:	08017959 	.word	0x08017959
 8017908:	08017941 	.word	0x08017941
 801790c:	08017959 	.word	0x08017959
 8017910:	08017959 	.word	0x08017959
 8017914:	08017959 	.word	0x08017959
 8017918:	08017959 	.word	0x08017959
 801791c:	08017959 	.word	0x08017959
 8017920:	08017949 	.word	0x08017949
 8017924:	08017959 	.word	0x08017959
 8017928:	08017959 	.word	0x08017959
 801792c:	08017959 	.word	0x08017959
 8017930:	08017959 	.word	0x08017959
 8017934:	08017951 	.word	0x08017951
 8017938:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801793a:	f000 fe2f 	bl	801859c <activity_ti5>
 801793e:	e00e      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 8017940:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8017942:	f000 ffa5 	bl	8018890 <activity_ti9>
 8017946:	e00a      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 8017948:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801794a:	f001 fa49 	bl	8018de0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3>
 801794e:	e006      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 8017950:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8017952:	f001 ff49 	bl	80197e8 <activity_ri9>
 8017956:	e002      	b.n	801795e <c6bd410106c16f549c325b1ca136c82e89930dcb+0x10a>
 8017958:	f002 ffc8 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801795c:	bf00      	nop
 801795e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017960:	2b00      	cmp	r3, #0
 8017962:	d002      	beq.n	801796a <c6bd410106c16f549c325b1ca136c82e89930dcb+0x116>
 8017964:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017966:	2000      	movs	r0, #0
 8017968:	4798      	blx	r3
 801796a:	bf00      	nop
 801796c:	3730      	adds	r7, #48	; 0x30
 801796e:	46bd      	mov	sp, r7
 8017970:	bd80      	pop	{r7, pc}
 8017972:	bf00      	nop
 8017974:	20000040 	.word	0x20000040
 8017978:	080318ac 	.word	0x080318ac
 801797c:	0802f8b0 	.word	0x0802f8b0
 8017980:	0802f878 	.word	0x0802f878

08017984 <joinRootStart>:
 8017984:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017988:	b08d      	sub	sp, #52	; 0x34
 801798a:	af00      	add	r7, sp, #0
 801798c:	f04f 31ff 	mov.w	r1, #4294967295
 8017990:	2000      	movs	r0, #0
 8017992:	f7fa faa3 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 8017996:	4606      	mov	r6, r0
 8017998:	21ff      	movs	r1, #255	; 0xff
 801799a:	2000      	movs	r0, #0
 801799c:	f7fa fa9e 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 80179a0:	4603      	mov	r3, r0
 80179a2:	4433      	add	r3, r6
 80179a4:	2200      	movs	r2, #0
 80179a6:	461c      	mov	r4, r3
 80179a8:	4615      	mov	r5, r2
 80179aa:	46a0      	mov	r8, r4
 80179ac:	f005 09ff 	and.w	r9, r5, #255	; 0xff
 80179b0:	4644      	mov	r4, r8
 80179b2:	464d      	mov	r5, r9
 80179b4:	4623      	mov	r3, r4
 80179b6:	62bb      	str	r3, [r7, #40]	; 0x28
 80179b8:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80179bc:	462a      	mov	r2, r5
 80179be:	f362 0307 	bfi	r3, r2, #0, #8
 80179c2:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80179c6:	2002      	movs	r0, #2
 80179c8:	f7f5 fb18 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80179cc:	4603      	mov	r3, r0
 80179ce:	1c58      	adds	r0, r3, #1
 80179d0:	1d3a      	adds	r2, r7, #4
 80179d2:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80179d6:	2321      	movs	r3, #33	; 0x21
 80179d8:	f7fb f85a 	bl	8012a90 <ce7cfafa044c34a88028e8cf12995b3096f9f973>
 80179dc:	2002      	movs	r0, #2
 80179de:	f7f5 fb0d 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80179e2:	4603      	mov	r3, r0
 80179e4:	1c58      	adds	r0, r3, #1
 80179e6:	1d3a      	adds	r2, r7, #4
 80179e8:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80179ec:	2321      	movs	r3, #33	; 0x21
 80179ee:	f7fb f9a9 	bl	8012d44 <27342039fe058efec7af5218a4abe449221e7bb4>
 80179f2:	bf00      	nop
 80179f4:	3734      	adds	r7, #52	; 0x34
 80179f6:	46bd      	mov	sp, r7
 80179f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080179fc <joinRootWait>:
 80179fc:	b580      	push	{r7, lr}
 80179fe:	b08e      	sub	sp, #56	; 0x38
 8017a00:	af00      	add	r7, sp, #0
 8017a02:	2031      	movs	r0, #49	; 0x31
 8017a04:	f7f8 fb24 	bl	8010050 <d9cd3de8850ba05653155beecb1d40906820436e>
 8017a08:	6338      	str	r0, [r7, #48]	; 0x30
 8017a0a:	2300      	movs	r3, #0
 8017a0c:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8017a10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a12:	2b00      	cmp	r3, #0
 8017a14:	d02b      	beq.n	8017a6e <joinRootWait+0x72>
 8017a16:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a18:	781b      	ldrb	r3, [r3, #0]
 8017a1a:	2b90      	cmp	r3, #144	; 0x90
 8017a1c:	d127      	bne.n	8017a6e <joinRootWait+0x72>
 8017a1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a20:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 8017a24:	2b01      	cmp	r3, #1
 8017a26:	d124      	bne.n	8017a72 <joinRootWait+0x76>
 8017a28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a2a:	7a1b      	ldrb	r3, [r3, #8]
 8017a2c:	2b21      	cmp	r3, #33	; 0x21
 8017a2e:	d122      	bne.n	8017a76 <joinRootWait+0x7a>
 8017a30:	2002      	movs	r0, #2
 8017a32:	f7f5 fae3 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8017a36:	4603      	mov	r3, r0
 8017a38:	1c58      	adds	r0, r3, #1
 8017a3a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a3c:	6859      	ldr	r1, [r3, #4]
 8017a3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a40:	7a1b      	ldrb	r3, [r3, #8]
 8017a42:	461a      	mov	r2, r3
 8017a44:	f7fa ff80 	bl	8012948 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa>
 8017a48:	4603      	mov	r3, r0
 8017a4a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8017a4e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8017a52:	2b00      	cmp	r3, #0
 8017a54:	d00b      	beq.n	8017a6e <joinRootWait+0x72>
 8017a56:	f107 030c 	add.w	r3, r7, #12
 8017a5a:	4618      	mov	r0, r3
 8017a5c:	f7fa fd1e 	bl	801249c <7d0846c279c7703537dc22d139b898222dc42c28>
 8017a60:	f107 030c 	add.w	r3, r7, #12
 8017a64:	4619      	mov	r1, r3
 8017a66:	2001      	movs	r0, #1
 8017a68:	f7fe fe8e 	bl	8016788 <73e350c4a17e38f6f89a1d19f29db6422776fe5d>
 8017a6c:	e004      	b.n	8017a78 <joinRootWait+0x7c>
 8017a6e:	bf00      	nop
 8017a70:	e002      	b.n	8017a78 <joinRootWait+0x7c>
 8017a72:	bf00      	nop
 8017a74:	e000      	b.n	8017a78 <joinRootWait+0x7c>
 8017a76:	bf00      	nop
 8017a78:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8017a7a:	2b00      	cmp	r3, #0
 8017a7c:	d002      	beq.n	8017a84 <joinRootWait+0x88>
 8017a7e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8017a80:	f7f7 ff64 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8017a84:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8017a88:	4618      	mov	r0, r3
 8017a8a:	3738      	adds	r7, #56	; 0x38
 8017a8c:	46bd      	mov	sp, r7
 8017a8e:	bd80      	pop	{r7, pc}

08017a90 <activity_synchronize_newSlot>:
 8017a90:	b580      	push	{r7, lr}
 8017a92:	b084      	sub	sp, #16
 8017a94:	af02      	add	r7, sp, #8
 8017a96:	4b24      	ldr	r3, [pc, #144]	; (8017b28 <activity_synchronize_newSlot+0x98>)
 8017a98:	681b      	ldr	r3, [r3, #0]
 8017a9a:	607b      	str	r3, [r7, #4]
 8017a9c:	f002 ff1a 	bl	801a8d4 <getState>
 8017aa0:	4603      	mov	r3, r0
 8017aa2:	2b02      	cmp	r3, #2
 8017aa4:	d03b      	beq.n	8017b1e <activity_synchronize_newSlot+0x8e>
 8017aa6:	f002 ff15 	bl	801a8d4 <getState>
 8017aaa:	2001      	movs	r0, #1
 8017aac:	f002 ff00 	bl	801a8b0 <setState>
 8017ab0:	f7fa f9d2 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 8017ab4:	4603      	mov	r3, r0
 8017ab6:	461a      	mov	r2, r3
 8017ab8:	4b1c      	ldr	r3, [pc, #112]	; (8017b2c <activity_synchronize_newSlot+0x9c>)
 8017aba:	681b      	ldr	r3, [r3, #0]
 8017abc:	fbb2 f1f3 	udiv	r1, r2, r3
 8017ac0:	fb01 f303 	mul.w	r3, r1, r3
 8017ac4:	1ad3      	subs	r3, r2, r3
 8017ac6:	4a1a      	ldr	r2, [pc, #104]	; (8017b30 <activity_synchronize_newSlot+0xa0>)
 8017ac8:	5cd2      	ldrb	r2, [r2, r3]
 8017aca:	687b      	ldr	r3, [r7, #4]
 8017acc:	f883 2198 	strb.w	r2, [r3, #408]	; 0x198
 8017ad0:	f7ee fc94 	bl	80063fc <EMBENET_RADIO_Idle>
 8017ad4:	687b      	ldr	r3, [r7, #4]
 8017ad6:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8017ada:	4618      	mov	r0, r3
 8017adc:	f7ee fcec 	bl	80064b8 <EMBENET_RADIO_RxEnable>
 8017ae0:	f7ee fd12 	bl	8006508 <EMBENET_RADIO_RxNow>
 8017ae4:	2003      	movs	r0, #3
 8017ae6:	f002 fcc9 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8017aea:	687b      	ldr	r3, [r7, #4]
 8017aec:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8017af0:	4b10      	ldr	r3, [pc, #64]	; (8017b34 <activity_synchronize_newSlot+0xa4>)
 8017af2:	691a      	ldr	r2, [r3, #16]
 8017af4:	4613      	mov	r3, r2
 8017af6:	005b      	lsls	r3, r3, #1
 8017af8:	4413      	add	r3, r2
 8017afa:	009b      	lsls	r3, r3, #2
 8017afc:	441a      	add	r2, r3
 8017afe:	687b      	ldr	r3, [r7, #4]
 8017b00:	f8d3 31c0 	ldr.w	r3, [r3, #448]	; 0x1c0
 8017b04:	1ad2      	subs	r2, r2, r3
 8017b06:	687b      	ldr	r3, [r7, #4]
 8017b08:	f8d3 11b4 	ldr.w	r1, [r3, #436]	; 0x1b4
 8017b0c:	687b      	ldr	r3, [r7, #4]
 8017b0e:	9301      	str	r3, [sp, #4]
 8017b10:	4b09      	ldr	r3, [pc, #36]	; (8017b38 <activity_synchronize_newSlot+0xa8>)
 8017b12:	9300      	str	r3, [sp, #0]
 8017b14:	460b      	mov	r3, r1
 8017b16:	2101      	movs	r1, #1
 8017b18:	f7f9 fee8 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8017b1c:	e000      	b.n	8017b20 <activity_synchronize_newSlot+0x90>
 8017b1e:	bf00      	nop
 8017b20:	3708      	adds	r7, #8
 8017b22:	46bd      	mov	sp, r7
 8017b24:	bd80      	pop	{r7, pc}
 8017b26:	bf00      	nop
 8017b28:	20000040 	.word	0x20000040
 8017b2c:	08031918 	.word	0x08031918
 8017b30:	0803191c 	.word	0x0803191c
 8017b34:	080318ac 	.word	0x080318ac
 8017b38:	08017319 	.word	0x08017319

08017b3c <activity_synchronize_startOfFrame>:
 8017b3c:	b580      	push	{r7, lr}
 8017b3e:	b084      	sub	sp, #16
 8017b40:	af00      	add	r7, sp, #0
 8017b42:	6078      	str	r0, [r7, #4]
 8017b44:	4b0b      	ldr	r3, [pc, #44]	; (8017b74 <activity_synchronize_startOfFrame+0x38>)
 8017b46:	681b      	ldr	r3, [r3, #0]
 8017b48:	60fb      	str	r3, [r7, #12]
 8017b4a:	f002 fec3 	bl	801a8d4 <getState>
 8017b4e:	4603      	mov	r3, r0
 8017b50:	2b01      	cmp	r3, #1
 8017b52:	d10b      	bne.n	8017b6c <activity_synchronize_startOfFrame+0x30>
 8017b54:	2002      	movs	r0, #2
 8017b56:	f002 feab 	bl	801a8b0 <setState>
 8017b5a:	68fb      	ldr	r3, [r7, #12]
 8017b5c:	687a      	ldr	r2, [r7, #4]
 8017b5e:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8017b62:	68fb      	ldr	r3, [r7, #12]
 8017b64:	687a      	ldr	r2, [r7, #4]
 8017b66:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
 8017b6a:	e000      	b.n	8017b6e <activity_synchronize_startOfFrame+0x32>
 8017b6c:	bf00      	nop
 8017b6e:	3710      	adds	r7, #16
 8017b70:	46bd      	mov	sp, r7
 8017b72:	bd80      	pop	{r7, pc}
 8017b74:	20000040 	.word	0x20000040

08017b78 <activity_synchronize_endOfFrame>:
 8017b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b7c:	b0b9      	sub	sp, #228	; 0xe4
 8017b7e:	af04      	add	r7, sp, #16
 8017b80:	6078      	str	r0, [r7, #4]
 8017b82:	4bd0      	ldr	r3, [pc, #832]	; (8017ec4 <activity_synchronize_endOfFrame+0x34c>)
 8017b84:	681b      	ldr	r3, [r3, #0]
 8017b86:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8017b8a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017b8e:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 8017b92:	4618      	mov	r0, r3
 8017b94:	f7f9 ff96 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 8017b98:	2001      	movs	r0, #1
 8017b9a:	f002 fc6f 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8017b9e:	f002 fe99 	bl	801a8d4 <getState>
 8017ba2:	4603      	mov	r3, r0
 8017ba4:	2b02      	cmp	r3, #2
 8017ba6:	f040 8183 	bne.w	8017eb0 <activity_synchronize_endOfFrame+0x338>
 8017baa:	2003      	movs	r0, #3
 8017bac:	f002 fe80 	bl	801a8b0 <setState>
 8017bb0:	2031      	movs	r0, #49	; 0x31
 8017bb2:	f7f7 fdbf 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8017bb6:	4602      	mov	r2, r0
 8017bb8:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bbc:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8017bc0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bc4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017bc8:	2b00      	cmp	r3, #0
 8017bca:	f000 8173 	beq.w	8017eb4 <activity_synchronize_endOfFrame+0x33c>
 8017bce:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bd2:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017bd6:	2231      	movs	r2, #49	; 0x31
 8017bd8:	701a      	strb	r2, [r3, #0]
 8017bda:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bde:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017be2:	2231      	movs	r2, #49	; 0x31
 8017be4:	705a      	strb	r2, [r3, #1]
 8017be6:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bea:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8017bee:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bf2:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017bf6:	32ba      	adds	r2, #186	; 0xba
 8017bf8:	605a      	str	r2, [r3, #4]
 8017bfa:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017bfe:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c02:	6859      	ldr	r1, [r3, #4]
 8017c04:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 8017c08:	2280      	movs	r2, #128	; 0x80
 8017c0a:	4618      	mov	r0, r3
 8017c0c:	f7ee fc8c 	bl	8006528 <EMBENET_RADIO_GetReceivedFrame>
 8017c10:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8017c14:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c18:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c1c:	b2d2      	uxtb	r2, r2
 8017c1e:	721a      	strb	r2, [r3, #8]
 8017c20:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c24:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c28:	f997 20c0 	ldrsb.w	r2, [r7, #192]	; 0xc0
 8017c2c:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8017c30:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c34:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c38:	f897 20c1 	ldrb.w	r2, [r7, #193]	; 0xc1
 8017c3c:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
 8017c40:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c44:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c48:	f897 20c2 	ldrb.w	r2, [r7, #194]	; 0xc2
 8017c4c:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 8017c50:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c54:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c58:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8017c5c:	f083 0301 	eor.w	r3, r3, #1
 8017c60:	b2db      	uxtb	r3, r3
 8017c62:	2b00      	cmp	r3, #0
 8017c64:	f040 8128 	bne.w	8017eb8 <activity_synchronize_endOfFrame+0x340>
 8017c68:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c6c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c70:	7a1b      	ldrb	r3, [r3, #8]
 8017c72:	2b00      	cmp	r3, #0
 8017c74:	d006      	beq.n	8017c84 <activity_synchronize_endOfFrame+0x10c>
 8017c76:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c7a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c7e:	7a1b      	ldrb	r3, [r3, #8]
 8017c80:	2b80      	cmp	r3, #128	; 0x80
 8017c82:	d912      	bls.n	8017caa <activity_synchronize_endOfFrame+0x132>
 8017c84:	4a90      	ldr	r2, [pc, #576]	; (8017ec8 <activity_synchronize_endOfFrame+0x350>)
 8017c86:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8017c8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017c8e:	e883 0003 	stmia.w	r3, {r0, r1}
 8017c92:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017c96:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017c9a:	7a1b      	ldrb	r3, [r3, #8]
 8017c9c:	4a8b      	ldr	r2, [pc, #556]	; (8017ecc <activity_synchronize_endOfFrame+0x354>)
 8017c9e:	f107 0180 	add.w	r1, r7, #128	; 0x80
 8017ca2:	c903      	ldmia	r1, {r0, r1}
 8017ca4:	f7fd fab0 	bl	8015208 <LOGGER_PrintLine>
 8017ca8:	e113      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017caa:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017cae:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017cb2:	f107 020c 	add.w	r2, r7, #12
 8017cb6:	4611      	mov	r1, r2
 8017cb8:	4618      	mov	r0, r3
 8017cba:	f012 fc27 	bl	802a50c <93646682ea820ae310ba1b54d0fccca9d773749e>
 8017cbe:	7b3b      	ldrb	r3, [r7, #12]
 8017cc0:	f083 0301 	eor.w	r3, r3, #1
 8017cc4:	b2db      	uxtb	r3, r3
 8017cc6:	2b00      	cmp	r3, #0
 8017cc8:	f040 80f8 	bne.w	8017ebc <activity_synchronize_endOfFrame+0x344>
 8017ccc:	2002      	movs	r0, #2
 8017cce:	f7f5 f995 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8017cd2:	4603      	mov	r3, r0
 8017cd4:	1c59      	adds	r1, r3, #1
 8017cd6:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8017cda:	2208      	movs	r2, #8
 8017cdc:	4618      	mov	r0, r3
 8017cde:	f7ff f8ec 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8017ce2:	f107 030c 	add.w	r3, r7, #12
 8017ce6:	f103 012e 	add.w	r1, r3, #46	; 0x2e
 8017cea:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 8017cee:	2208      	movs	r2, #8
 8017cf0:	4618      	mov	r0, r3
 8017cf2:	f7ff f8e2 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8017cf6:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	; 0xb8
 8017cfa:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	; 0xb0
 8017cfe:	f002 ffe5 	bl	801accc <18852a76524cbdb850c5d6a14b013c23dafcaddf>
 8017d02:	4603      	mov	r3, r0
 8017d04:	f083 0301 	eor.w	r3, r3, #1
 8017d08:	b2db      	uxtb	r3, r3
 8017d0a:	2b00      	cmp	r3, #0
 8017d0c:	f040 80d8 	bne.w	8017ec0 <activity_synchronize_endOfFrame+0x348>
 8017d10:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017d14:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017d18:	7bba      	ldrb	r2, [r7, #14]
 8017d1a:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 8017d1e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017d22:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017d26:	7d7a      	ldrb	r2, [r7, #21]
 8017d28:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 8017d2c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017d30:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017d34:	3341      	adds	r3, #65	; 0x41
 8017d36:	461a      	mov	r2, r3
 8017d38:	f107 0339 	add.w	r3, r7, #57	; 0x39
 8017d3c:	f8d3 c000 	ldr.w	ip, [r3]
 8017d40:	685e      	ldr	r6, [r3, #4]
 8017d42:	6898      	ldr	r0, [r3, #8]
 8017d44:	68d9      	ldr	r1, [r3, #12]
 8017d46:	f8c2 c000 	str.w	ip, [r2]
 8017d4a:	6056      	str	r6, [r2, #4]
 8017d4c:	6090      	str	r0, [r2, #8]
 8017d4e:	60d1      	str	r1, [r2, #12]
 8017d50:	7c1b      	ldrb	r3, [r3, #16]
 8017d52:	7413      	strb	r3, [r2, #16]
 8017d54:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017d58:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017d5c:	f107 020c 	add.w	r2, r7, #12
 8017d60:	4611      	mov	r1, r2
 8017d62:	4618      	mov	r0, r3
 8017d64:	f001 fe48 	bl	80199f8 <isValidSync>
 8017d68:	4603      	mov	r3, r0
 8017d6a:	f083 0301 	eor.w	r3, r3, #1
 8017d6e:	b2db      	uxtb	r3, r3
 8017d70:	2b00      	cmp	r3, #0
 8017d72:	f040 80ad 	bne.w	8017ed0 <activity_synchronize_endOfFrame+0x358>
 8017d76:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8017d7a:	2211      	movs	r2, #17
 8017d7c:	2100      	movs	r1, #0
 8017d7e:	4618      	mov	r0, r3
 8017d80:	f013 f9ba 	bl	802b0f8 <memset>
 8017d84:	2306      	movs	r3, #6
 8017d86:	f887 309c 	strb.w	r3, [r7, #156]	; 0x9c
 8017d8a:	2300      	movs	r3, #0
 8017d8c:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8017d90:	e026      	b.n	8017de0 <activity_synchronize_endOfFrame+0x268>
 8017d92:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8017d96:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8017d9a:	33cc      	adds	r3, #204	; 0xcc
 8017d9c:	005b      	lsls	r3, r3, #1
 8017d9e:	4413      	add	r3, r2
 8017da0:	885e      	ldrh	r6, [r3, #2]
 8017da2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8017da6:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8017daa:	4413      	add	r3, r2
 8017dac:	f503 73ce 	add.w	r3, r3, #412	; 0x19c
 8017db0:	7819      	ldrb	r1, [r3, #0]
 8017db2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017db6:	aa02      	add	r2, sp, #8
 8017db8:	3331      	adds	r3, #49	; 0x31
 8017dba:	6818      	ldr	r0, [r3, #0]
 8017dbc:	6010      	str	r0, [r2, #0]
 8017dbe:	791b      	ldrb	r3, [r3, #4]
 8017dc0:	7113      	strb	r3, [r2, #4]
 8017dc2:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8017dc6:	9301      	str	r3, [sp, #4]
 8017dc8:	9100      	str	r1, [sp, #0]
 8017dca:	2301      	movs	r3, #1
 8017dcc:	2201      	movs	r2, #1
 8017dce:	2103      	movs	r1, #3
 8017dd0:	4630      	mov	r0, r6
 8017dd2:	f004 fe15 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 8017dd6:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8017dda:	3301      	adds	r3, #1
 8017ddc:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8017de0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017de4:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
 8017de8:	f8d7 20cc 	ldr.w	r2, [r7, #204]	; 0xcc
 8017dec:	429a      	cmp	r2, r3
 8017dee:	d3d0      	bcc.n	8017d92 <activity_synchronize_endOfFrame+0x21a>
 8017df0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017df4:	f8d3 8031 	ldr.w	r8, [r3, #49]	; 0x31
 8017df8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8017dfc:	4699      	mov	r9, r3
 8017dfe:	f004 fddf 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8017e02:	4603      	mov	r3, r0
 8017e04:	b29b      	uxth	r3, r3
 8017e06:	2200      	movs	r2, #0
 8017e08:	461c      	mov	r4, r3
 8017e0a:	4615      	mov	r5, r2
 8017e0c:	46a2      	mov	sl, r4
 8017e0e:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 8017e12:	4654      	mov	r4, sl
 8017e14:	465d      	mov	r5, fp
 8017e16:	4622      	mov	r2, r4
 8017e18:	462b      	mov	r3, r5
 8017e1a:	4640      	mov	r0, r8
 8017e1c:	4649      	mov	r1, r9
 8017e1e:	f7e8 fe0d 	bl	8000a3c <__aeabi_uldivmod>
 8017e22:	b292      	uxth	r2, r2
 8017e24:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017e28:	86da      	strh	r2, [r3, #54]	; 0x36
 8017e2a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017e2e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8017e30:	4618      	mov	r0, r3
 8017e32:	f005 fbff 	bl	801d634 <d611da576de3e6e1bad875dccfd97dcae1d67b2b>
 8017e36:	f005 fcd9 	bl	801d7ec <265e4cb026b8783377b1f22e25c3b310527be0c4>
 8017e3a:	4603      	mov	r3, r0
 8017e3c:	461a      	mov	r2, r3
 8017e3e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017e42:	871a      	strh	r2, [r3, #56]	; 0x38
 8017e44:	2000      	movs	r0, #0
 8017e46:	f002 fb19 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8017e4a:	f7ee fad7 	bl	80063fc <EMBENET_RADIO_Idle>
 8017e4e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017e52:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8017e56:	4618      	mov	r0, r3
 8017e58:	f002 f908 	bl	801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>
 8017e5c:	2001      	movs	r0, #1
 8017e5e:	f002 f9bf 	bl	801a1e0 <changeIsSync>
 8017e62:	f107 030c 	add.w	r3, r7, #12
 8017e66:	f103 010c 	add.w	r1, r3, #12
 8017e6a:	f107 039a 	add.w	r3, r7, #154	; 0x9a
 8017e6e:	2202      	movs	r2, #2
 8017e70:	4618      	mov	r0, r3
 8017e72:	f7ff f822 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8017e76:	f8b7 209a 	ldrh.w	r2, [r7, #154]	; 0x9a
 8017e7a:	f107 030c 	add.w	r3, r7, #12
 8017e7e:	3340      	adds	r3, #64	; 0x40
 8017e80:	4619      	mov	r1, r3
 8017e82:	4610      	mov	r0, r2
 8017e84:	f010 fccc 	bl	8028820 <dbdc37d2cc973221dbf43eabd97e4b7b09a554e4>
 8017e88:	f8b7 309a 	ldrh.w	r3, [r7, #154]	; 0x9a
 8017e8c:	4618      	mov	r0, r3
 8017e8e:	f010 fe53 	bl	8028b38 <658f5a28751601d813ae36c10ddb69a9ae00a793>
 8017e92:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017e96:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017e9a:	4618      	mov	r0, r3
 8017e9c:	f002 fa6a 	bl	801a374 <0d988943f13c94ad3b7af08357d5d17f9043f067>
 8017ea0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017ea4:	2200      	movs	r2, #0
 8017ea6:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8017eaa:	f002 fd1f 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8017eae:	e043      	b.n	8017f38 <activity_synchronize_endOfFrame+0x3c0>
 8017eb0:	bf00      	nop
 8017eb2:	e00e      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017eb4:	bf00      	nop
 8017eb6:	e00c      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017eb8:	bf00      	nop
 8017eba:	e00a      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017ebc:	bf00      	nop
 8017ebe:	e008      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017ec0:	bf00      	nop
 8017ec2:	e006      	b.n	8017ed2 <activity_synchronize_endOfFrame+0x35a>
 8017ec4:	20000040 	.word	0x20000040
 8017ec8:	0802f8b0 	.word	0x0802f8b0
 8017ecc:	0802f8b8 	.word	0x0802f8b8
 8017ed0:	bf00      	nop
 8017ed2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017ed6:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8017eda:	4618      	mov	r0, r3
 8017edc:	f7f7 fd36 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8017ee0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017ee4:	2200      	movs	r2, #0
 8017ee6:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8017eea:	2001      	movs	r0, #1
 8017eec:	f002 fce0 	bl	801a8b0 <setState>
 8017ef0:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017ef4:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8017ef8:	4618      	mov	r0, r3
 8017efa:	f7ee fadd 	bl	80064b8 <EMBENET_RADIO_RxEnable>
 8017efe:	f7ee fb03 	bl	8006508 <EMBENET_RADIO_RxNow>
 8017f02:	2003      	movs	r0, #3
 8017f04:	f002 faba 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8017f08:	f7f9 fe02 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 8017f0c:	4602      	mov	r2, r0
 8017f0e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017f12:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
 8017f16:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017f1a:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8017f1e:	4b08      	ldr	r3, [pc, #32]	; (8017f40 <activity_synchronize_endOfFrame+0x3c8>)
 8017f20:	691a      	ldr	r2, [r3, #16]
 8017f22:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8017f26:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8017f2a:	2100      	movs	r1, #0
 8017f2c:	9101      	str	r1, [sp, #4]
 8017f2e:	4905      	ldr	r1, [pc, #20]	; (8017f44 <activity_synchronize_endOfFrame+0x3cc>)
 8017f30:	9100      	str	r1, [sp, #0]
 8017f32:	2101      	movs	r1, #1
 8017f34:	f7f9 fcda 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8017f38:	37d4      	adds	r7, #212	; 0xd4
 8017f3a:	46bd      	mov	sp, r7
 8017f3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f40:	080318ac 	.word	0x080318ac
 8017f44:	08017319 	.word	0x08017319

08017f48 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb>:
 8017f48:	b580      	push	{r7, lr}
 8017f4a:	b088      	sub	sp, #32
 8017f4c:	af00      	add	r7, sp, #0
 8017f4e:	6078      	str	r0, [r7, #4]
 8017f50:	6039      	str	r1, [r7, #0]
 8017f52:	6839      	ldr	r1, [r7, #0]
 8017f54:	6878      	ldr	r0, [r7, #4]
 8017f56:	f001 fe0f 	bl	8019b78 <processEb>
 8017f5a:	4603      	mov	r3, r0
 8017f5c:	2b00      	cmp	r3, #0
 8017f5e:	d001      	beq.n	8017f64 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x1c>
 8017f60:	2301      	movs	r3, #1
 8017f62:	e000      	b.n	8017f66 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x1e>
 8017f64:	2300      	movs	r3, #0
 8017f66:	4618      	mov	r0, r3
 8017f68:	3720      	adds	r7, #32
 8017f6a:	46bd      	mov	sp, r7
 8017f6c:	bd80      	pop	{r7, pc}
	...

08017f70 <activity_ti1ORri1>:
 8017f70:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8017f74:	b09e      	sub	sp, #120	; 0x78
 8017f76:	af04      	add	r7, sp, #16
 8017f78:	4bbe      	ldr	r3, [pc, #760]	; (8018274 <activity_ti1ORri1+0x304>)
 8017f7a:	681b      	ldr	r3, [r3, #0]
 8017f7c:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8017f80:	f8d3 31ac 	ldr.w	r3, [r3, #428]	; 0x1ac
 8017f84:	65fb      	str	r3, [r7, #92]	; 0x5c
 8017f86:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8017f88:	2b00      	cmp	r3, #0
 8017f8a:	d002      	beq.n	8017f92 <activity_ti1ORri1+0x22>
 8017f8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8017f8e:	2001      	movs	r0, #1
 8017f90:	4798      	blx	r3
 8017f92:	4bb8      	ldr	r3, [pc, #736]	; (8018274 <activity_ti1ORri1+0x304>)
 8017f94:	681b      	ldr	r3, [r3, #0]
 8017f96:	65bb      	str	r3, [r7, #88]	; 0x58
 8017f98:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017f9a:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 8017f9c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017f9e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8017fa0:	1ad3      	subs	r3, r2, r3
 8017fa2:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
 8017fa6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017fa8:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 8017faa:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017fac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8017fae:	429a      	cmp	r2, r3
 8017fb0:	d808      	bhi.n	8017fc4 <activity_ti1ORri1+0x54>
 8017fb2:	f004 fd05 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8017fb6:	4603      	mov	r3, r0
 8017fb8:	461a      	mov	r2, r3
 8017fba:	f8b7 3066 	ldrh.w	r3, [r7, #102]	; 0x66
 8017fbe:	4413      	add	r3, r2
 8017fc0:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
 8017fc4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017fc6:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 8017fc8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8017fca:	86da      	strh	r2, [r3, #54]	; 0x36
 8017fcc:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8017fce:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 8017fd2:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 8017fd6:	460b      	mov	r3, r1
 8017fd8:	f8b7 1066 	ldrh.w	r1, [r7, #102]	; 0x66
 8017fdc:	2000      	movs	r0, #0
 8017fde:	460c      	mov	r4, r1
 8017fe0:	4605      	mov	r5, r0
 8017fe2:	603c      	str	r4, [r7, #0]
 8017fe4:	f005 01ff 	and.w	r1, r5, #255	; 0xff
 8017fe8:	6079      	str	r1, [r7, #4]
 8017fea:	e9d7 4500 	ldrd	r4, r5, [r7]
 8017fee:	eb12 0804 	adds.w	r8, r2, r4
 8017ff2:	eb43 0905 	adc.w	r9, r3, r5
 8017ff6:	46c2      	mov	sl, r8
 8017ff8:	f009 0bff 	and.w	fp, r9, #255	; 0xff
 8017ffc:	46d0      	mov	r8, sl
 8017ffe:	46d9      	mov	r9, fp
 8018000:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018002:	f8c3 8031 	str.w	r8, [r3, #49]	; 0x31
 8018006:	f893 2035 	ldrb.w	r2, [r3, #53]	; 0x35
 801800a:	4649      	mov	r1, r9
 801800c:	f361 0207 	bfi	r2, r1, #0, #8
 8018010:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8018014:	f7f4 ffae 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8018018:	4603      	mov	r3, r0
 801801a:	f083 0301 	eor.w	r3, r3, #1
 801801e:	b2db      	uxtb	r3, r3
 8018020:	2b00      	cmp	r3, #0
 8018022:	d011      	beq.n	8018048 <activity_ti1ORri1+0xd8>
 8018024:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018026:	8f5b      	ldrh	r3, [r3, #58]	; 0x3a
 8018028:	f8b7 2066 	ldrh.w	r2, [r7, #102]	; 0x66
 801802c:	429a      	cmp	r2, r3
 801802e:	d208      	bcs.n	8018042 <activity_ti1ORri1+0xd2>
 8018030:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018032:	8f5a      	ldrh	r2, [r3, #58]	; 0x3a
 8018034:	f8b7 3066 	ldrh.w	r3, [r7, #102]	; 0x66
 8018038:	1ad3      	subs	r3, r2, r3
 801803a:	b29a      	uxth	r2, r3
 801803c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801803e:	875a      	strh	r2, [r3, #58]	; 0x3a
 8018040:	e002      	b.n	8018048 <activity_ti1ORri1+0xd8>
 8018042:	f002 f8ed 	bl	801a220 <e0d63f279bcffa109806a257de8645074809531c>
 8018046:	e14f      	b.n	80182e8 <activity_ti1ORri1+0x378>
 8018048:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801804a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801804c:	4618      	mov	r0, r3
 801804e:	f005 faf1 	bl	801d634 <d611da576de3e6e1bad875dccfd97dcae1d67b2b>
 8018052:	4603      	mov	r3, r0
 8018054:	f083 0301 	eor.w	r3, r3, #1
 8018058:	b2db      	uxtb	r3, r3
 801805a:	2b00      	cmp	r3, #0
 801805c:	d010      	beq.n	8018080 <activity_ti1ORri1+0x110>
 801805e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018060:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8018062:	1c5c      	adds	r4, r3, #1
 8018064:	f004 fcac 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8018068:	4603      	mov	r3, r0
 801806a:	fb94 f2f3 	sdiv	r2, r4, r3
 801806e:	fb02 f303 	mul.w	r3, r2, r3
 8018072:	1ae3      	subs	r3, r4, r3
 8018074:	b29a      	uxth	r2, r3
 8018076:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018078:	871a      	strh	r2, [r3, #56]	; 0x38
 801807a:	f002 fc37 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801807e:	e133      	b.n	80182e8 <activity_ti1ORri1+0x378>
 8018080:	f005 fd9a 	bl	801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>
 8018084:	4603      	mov	r3, r0
 8018086:	4618      	mov	r0, r3
 8018088:	f002 fbac 	bl	801a7e4 <calculateFrequency>
 801808c:	4603      	mov	r3, r0
 801808e:	461a      	mov	r2, r3
 8018090:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018092:	f883 2198 	strb.w	r2, [r3, #408]	; 0x198
 8018096:	f005 fba9 	bl	801d7ec <265e4cb026b8783377b1f22e25c3b310527be0c4>
 801809a:	4603      	mov	r3, r0
 801809c:	461a      	mov	r2, r3
 801809e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80180a0:	871a      	strh	r2, [r3, #56]	; 0x38
 80180a2:	f005 fbed 	bl	801d880 <23fc3861a84c8d8f435c2599ea00b6593300a215>
 80180a6:	4603      	mov	r3, r0
 80180a8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 80180ac:	f7f4 ff62 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 80180b0:	4603      	mov	r3, r0
 80180b2:	f083 0301 	eor.w	r3, r3, #1
 80180b6:	b2db      	uxtb	r3, r3
 80180b8:	2b00      	cmp	r3, #0
 80180ba:	d036      	beq.n	801812a <activity_ti1ORri1+0x1ba>
 80180bc:	f005 fc0c 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 80180c0:	4603      	mov	r3, r0
 80180c2:	2b01      	cmp	r3, #1
 80180c4:	d131      	bne.n	801812a <activity_ti1ORri1+0x1ba>
 80180c6:	f7f7 fd9b 	bl	800fc00 <QUEUE_MacNotifySuperframeStart>
 80180ca:	f7f9 fd21 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 80180ce:	4603      	mov	r3, r0
 80180d0:	4618      	mov	r0, r3
 80180d2:	f7fa fb07 	bl	80126e4 <03d6da78285e4b5dbf21b3dd748386b7299cb1fe>
 80180d6:	4603      	mov	r3, r0
 80180d8:	f887 3056 	strb.w	r3, [r7, #86]	; 0x56
 80180dc:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 80180e0:	2b00      	cmp	r3, #0
 80180e2:	d007      	beq.n	80180f4 <activity_ti1ORri1+0x184>
 80180e4:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 80180e8:	2b04      	cmp	r3, #4
 80180ea:	d003      	beq.n	80180f4 <activity_ti1ORri1+0x184>
 80180ec:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 80180f0:	2b05      	cmp	r3, #5
 80180f2:	d102      	bne.n	80180fa <activity_ti1ORri1+0x18a>
 80180f4:	f002 f894 	bl	801a220 <e0d63f279bcffa109806a257de8645074809531c>
 80180f8:	e0f6      	b.n	80182e8 <activity_ti1ORri1+0x378>
 80180fa:	f897 3056 	ldrb.w	r3, [r7, #86]	; 0x56
 80180fe:	2b03      	cmp	r3, #3
 8018100:	d113      	bne.n	801812a <activity_ti1ORri1+0x1ba>
 8018102:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018104:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
 8018108:	2b00      	cmp	r3, #0
 801810a:	d00e      	beq.n	801812a <activity_ti1ORri1+0x1ba>
 801810c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801810e:	2200      	movs	r2, #0
 8018110:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8018114:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018118:	4618      	mov	r0, r3
 801811a:	f7fa f9bf 	bl	801249c <7d0846c279c7703537dc22d139b898222dc42c28>
 801811e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018122:	4619      	mov	r1, r3
 8018124:	2001      	movs	r0, #1
 8018126:	f7fe fb2f 	bl	8016788 <73e350c4a17e38f6f89a1d19f29db6422776fe5d>
 801812a:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801812e:	3b01      	subs	r3, #1
 8018130:	2b03      	cmp	r3, #3
 8018132:	f200 80d6 	bhi.w	80182e2 <activity_ti1ORri1+0x372>
 8018136:	a201      	add	r2, pc, #4	; (adr r2, 801813c <activity_ti1ORri1+0x1cc>)
 8018138:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801813c:	0801814d 	.word	0x0801814d
 8018140:	080182a3 	.word	0x080182a3
 8018144:	0801814d 	.word	0x0801814d
 8018148:	080182d3 	.word	0x080182d3
 801814c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801814e:	3331      	adds	r3, #49	; 0x31
 8018150:	4618      	mov	r0, r3
 8018152:	f005 fbeb 	bl	801d92c <ffe29f5c9712609bba4ef23834769dd10ed867f0>
 8018156:	4602      	mov	r2, r0
 8018158:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801815a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 801815e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018160:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8018164:	2b00      	cmp	r3, #0
 8018166:	d107      	bne.n	8018178 <activity_ti1ORri1+0x208>
 8018168:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 801816c:	2b01      	cmp	r3, #1
 801816e:	f040 8098 	bne.w	80182a2 <activity_ti1ORri1+0x332>
 8018172:	f002 fbbb 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018176:	e0b7      	b.n	80182e8 <activity_ti1ORri1+0x378>
 8018178:	2004      	movs	r0, #4
 801817a:	f002 fb99 	bl	801a8b0 <setState>
 801817e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018180:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8018184:	2231      	movs	r2, #49	; 0x31
 8018186:	705a      	strb	r2, [r3, #1]
 8018188:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801818a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801818e:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 8018192:	2b00      	cmp	r3, #0
 8018194:	d10c      	bne.n	80181b0 <activity_ti1ORri1+0x240>
 8018196:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018198:	f893 317c 	ldrb.w	r3, [r3, #380]	; 0x17c
 801819c:	1c5a      	adds	r2, r3, #1
 801819e:	b2d1      	uxtb	r1, r2
 80181a0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80181a2:	f882 117c 	strb.w	r1, [r2, #380]	; 0x17c
 80181a6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80181a8:	f8d2 2180 	ldr.w	r2, [r2, #384]	; 0x180
 80181ac:	f882 3053 	strb.w	r3, [r2, #83]	; 0x53
 80181b0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181b2:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80181b6:	f893 2055 	ldrb.w	r2, [r3, #85]	; 0x55
 80181ba:	3201      	adds	r2, #1
 80181bc:	b2d2      	uxtb	r2, r2
 80181be:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 80181c2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181c4:	f103 0240 	add.w	r2, r3, #64	; 0x40
 80181c8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181ca:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80181ce:	4619      	mov	r1, r3
 80181d0:	4610      	mov	r0, r2
 80181d2:	f011 fa2d 	bl	8029630 <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5>
 80181d6:	2300      	movs	r3, #0
 80181d8:	663b      	str	r3, [r7, #96]	; 0x60
 80181da:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181dc:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80181e0:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 80181e4:	2b00      	cmp	r3, #0
 80181e6:	d102      	bne.n	80181ee <activity_ti1ORri1+0x27e>
 80181e8:	f010 fb48 	bl	802887c <a59be9f028c32d03d0e01d3447553913a8330c11>
 80181ec:	6638      	str	r0, [r7, #96]	; 0x60
 80181ee:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181f0:	f103 0040 	add.w	r0, r3, #64	; 0x40
 80181f4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181f6:	f893 1092 	ldrb.w	r1, [r3, #146]	; 0x92
 80181fa:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80181fc:	f893 40dd 	ldrb.w	r4, [r3, #221]	; 0xdd
 8018200:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018202:	f893 5093 	ldrb.w	r5, [r3, #147]	; 0x93
 8018206:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018208:	3381      	adds	r3, #129	; 0x81
 801820a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 801820c:	9202      	str	r2, [sp, #8]
 801820e:	2200      	movs	r2, #0
 8018210:	9201      	str	r2, [sp, #4]
 8018212:	9300      	str	r3, [sp, #0]
 8018214:	462b      	mov	r3, r5
 8018216:	4622      	mov	r2, r4
 8018218:	f011 ff6a 	bl	802a0f0 <984b363f625cd8cdfbde20196ca1e6fa15d151b4>
 801821c:	4603      	mov	r3, r0
 801821e:	f083 0301 	eor.w	r3, r3, #1
 8018222:	b2db      	uxtb	r3, r3
 8018224:	2b00      	cmp	r3, #0
 8018226:	d008      	beq.n	801823a <activity_ti1ORri1+0x2ca>
 8018228:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801822a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801822e:	2200      	movs	r2, #0
 8018230:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8018234:	f002 fb5a 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018238:	e056      	b.n	80182e8 <activity_ti1ORri1+0x378>
 801823a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801823c:	f103 0431 	add.w	r4, r3, #49	; 0x31
 8018240:	2002      	movs	r0, #2
 8018242:	f7f4 fedb 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8018246:	4603      	mov	r3, r0
 8018248:	1c59      	adds	r1, r3, #1
 801824a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801824c:	3340      	adds	r3, #64	; 0x40
 801824e:	461a      	mov	r2, r3
 8018250:	4620      	mov	r0, r4
 8018252:	f7fe fb45 	bl	80168e0 <628044ebadd5376fad8b3928b1093d9e8f1976ae>
 8018256:	4603      	mov	r3, r0
 8018258:	f083 0301 	eor.w	r3, r3, #1
 801825c:	b2db      	uxtb	r3, r3
 801825e:	2b00      	cmp	r3, #0
 8018260:	d00a      	beq.n	8018278 <activity_ti1ORri1+0x308>
 8018262:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018264:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8018268:	2200      	movs	r2, #0
 801826a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801826e:	f002 fb3d 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018272:	e039      	b.n	80182e8 <activity_ti1ORri1+0x378>
 8018274:	20000040 	.word	0x20000040
 8018278:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801827a:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 801827e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018280:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018284:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8018286:	f8d3 31c4 	ldr.w	r3, [r3, #452]	; 0x1c4
 801828a:	441a      	add	r2, r3
 801828c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801828e:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018292:	2100      	movs	r1, #0
 8018294:	9101      	str	r1, [sp, #4]
 8018296:	4916      	ldr	r1, [pc, #88]	; (80182f0 <activity_ti1ORri1+0x380>)
 8018298:	9100      	str	r1, [sp, #0]
 801829a:	2101      	movs	r1, #1
 801829c:	f7f9 fb26 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80182a0:	e022      	b.n	80182e8 <activity_ti1ORri1+0x378>
 80182a2:	200f      	movs	r0, #15
 80182a4:	f002 fb04 	bl	801a8b0 <setState>
 80182a8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80182aa:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 80182ae:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80182b0:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 80182b4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80182b6:	f8d3 31dc 	ldr.w	r3, [r3, #476]	; 0x1dc
 80182ba:	441a      	add	r2, r3
 80182bc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80182be:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80182c2:	2100      	movs	r1, #0
 80182c4:	9101      	str	r1, [sp, #4]
 80182c6:	490a      	ldr	r1, [pc, #40]	; (80182f0 <activity_ti1ORri1+0x380>)
 80182c8:	9100      	str	r1, [sp, #0]
 80182ca:	2101      	movs	r1, #1
 80182cc:	f7f9 fb0e 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80182d0:	e00a      	b.n	80182e8 <activity_ti1ORri1+0x378>
 80182d2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80182d4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80182d6:	4618      	mov	r0, r3
 80182d8:	f002 fe70 	bl	801afbc <982333be2760117c5a90b228f88c7e9bbb3de31e>
 80182dc:	f002 fb06 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80182e0:	e002      	b.n	80182e8 <activity_ti1ORri1+0x378>
 80182e2:	f002 fb03 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80182e6:	bf00      	nop
 80182e8:	3768      	adds	r7, #104	; 0x68
 80182ea:	46bd      	mov	sp, r7
 80182ec:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80182f0:	08017605 	.word	0x08017605

080182f4 <activity_ti2>:
 80182f4:	b580      	push	{r7, lr}
 80182f6:	b088      	sub	sp, #32
 80182f8:	af02      	add	r7, sp, #8
 80182fa:	4b22      	ldr	r3, [pc, #136]	; (8018384 <activity_ti2+0x90>)
 80182fc:	681b      	ldr	r3, [r3, #0]
 80182fe:	617b      	str	r3, [r7, #20]
 8018300:	2005      	movs	r0, #5
 8018302:	f002 fad5 	bl	801a8b0 <setState>
 8018306:	697b      	ldr	r3, [r7, #20]
 8018308:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 801830c:	697b      	ldr	r3, [r7, #20]
 801830e:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018312:	697b      	ldr	r3, [r7, #20]
 8018314:	f8d3 31c8 	ldr.w	r3, [r3, #456]	; 0x1c8
 8018318:	441a      	add	r2, r3
 801831a:	697b      	ldr	r3, [r7, #20]
 801831c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018320:	2100      	movs	r1, #0
 8018322:	9101      	str	r1, [sp, #4]
 8018324:	4918      	ldr	r1, [pc, #96]	; (8018388 <activity_ti2+0x94>)
 8018326:	9100      	str	r1, [sp, #0]
 8018328:	2101      	movs	r1, #1
 801832a:	f7f9 fadf 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801832e:	2001      	movs	r0, #1
 8018330:	f002 f8a4 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018334:	4b13      	ldr	r3, [pc, #76]	; (8018384 <activity_ti2+0x90>)
 8018336:	681b      	ldr	r3, [r3, #0]
 8018338:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 801833c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018340:	613b      	str	r3, [r7, #16]
 8018342:	693b      	ldr	r3, [r7, #16]
 8018344:	2b00      	cmp	r3, #0
 8018346:	d002      	beq.n	801834e <activity_ti2+0x5a>
 8018348:	693b      	ldr	r3, [r7, #16]
 801834a:	2001      	movs	r0, #1
 801834c:	4798      	blx	r3
 801834e:	697b      	ldr	r3, [r7, #20]
 8018350:	f893 0198 	ldrb.w	r0, [r3, #408]	; 0x198
 8018354:	697b      	ldr	r3, [r7, #20]
 8018356:	f993 1199 	ldrsb.w	r1, [r3, #409]	; 0x199
 801835a:	697b      	ldr	r3, [r7, #20]
 801835c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 801835e:	697b      	ldr	r3, [r7, #20]
 8018360:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8018364:	f7ee f854 	bl	8006410 <EMBENET_RADIO_TxEnable>
 8018368:	693b      	ldr	r3, [r7, #16]
 801836a:	2b00      	cmp	r3, #0
 801836c:	d002      	beq.n	8018374 <activity_ti2+0x80>
 801836e:	693b      	ldr	r3, [r7, #16]
 8018370:	2000      	movs	r0, #0
 8018372:	4798      	blx	r3
 8018374:	2006      	movs	r0, #6
 8018376:	f002 fa9b 	bl	801a8b0 <setState>
 801837a:	bf00      	nop
 801837c:	3718      	adds	r7, #24
 801837e:	46bd      	mov	sp, r7
 8018380:	bd80      	pop	{r7, pc}
 8018382:	bf00      	nop
 8018384:	20000040 	.word	0x20000040
 8018388:	08017605 	.word	0x08017605

0801838c <activity_tie1>:
 801838c:	b580      	push	{r7, lr}
 801838e:	b082      	sub	sp, #8
 8018390:	af00      	add	r7, sp, #0
 8018392:	f002 faab 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018396:	4a08      	ldr	r2, [pc, #32]	; (80183b8 <activity_tie1+0x2c>)
 8018398:	463b      	mov	r3, r7
 801839a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801839e:	e883 0003 	stmia.w	r3, {r0, r1}
 80183a2:	4a06      	ldr	r2, [pc, #24]	; (80183bc <activity_tie1+0x30>)
 80183a4:	463b      	mov	r3, r7
 80183a6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80183aa:	f7fc ff2d 	bl	8015208 <LOGGER_PrintLine>
 80183ae:	bf00      	nop
 80183b0:	3708      	adds	r7, #8
 80183b2:	46bd      	mov	sp, r7
 80183b4:	bd80      	pop	{r7, pc}
 80183b6:	bf00      	nop
 80183b8:	0802f900 	.word	0x0802f900
 80183bc:	0802f8e0 	.word	0x0802f8e0

080183c0 <activity_ti3>:
 80183c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183c4:	b093      	sub	sp, #76	; 0x4c
 80183c6:	af0a      	add	r7, sp, #40	; 0x28
 80183c8:	4b3e      	ldr	r3, [pc, #248]	; (80184c4 <activity_ti3+0x104>)
 80183ca:	681b      	ldr	r3, [r3, #0]
 80183cc:	61fb      	str	r3, [r7, #28]
 80183ce:	2007      	movs	r0, #7
 80183d0:	f002 fa6e 	bl	801a8b0 <setState>
 80183d4:	69fb      	ldr	r3, [r7, #28]
 80183d6:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 80183da:	69fb      	ldr	r3, [r7, #28]
 80183dc:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 80183e0:	69fb      	ldr	r3, [r7, #28]
 80183e2:	f8d3 31cc 	ldr.w	r3, [r3, #460]	; 0x1cc
 80183e6:	441a      	add	r2, r3
 80183e8:	69fb      	ldr	r3, [r7, #28]
 80183ea:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80183ee:	2100      	movs	r1, #0
 80183f0:	9101      	str	r1, [sp, #4]
 80183f2:	4935      	ldr	r1, [pc, #212]	; (80184c8 <activity_ti3+0x108>)
 80183f4:	9100      	str	r1, [sp, #0]
 80183f6:	2101      	movs	r1, #1
 80183f8:	f7f9 fa78 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80183fc:	2002      	movs	r0, #2
 80183fe:	f002 f83d 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018402:	4b30      	ldr	r3, [pc, #192]	; (80184c4 <activity_ti3+0x104>)
 8018404:	681b      	ldr	r3, [r3, #0]
 8018406:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 801840a:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801840e:	61bb      	str	r3, [r7, #24]
 8018410:	69bb      	ldr	r3, [r7, #24]
 8018412:	2b00      	cmp	r3, #0
 8018414:	d002      	beq.n	801841c <activity_ti3+0x5c>
 8018416:	69bb      	ldr	r3, [r7, #24]
 8018418:	2001      	movs	r0, #1
 801841a:	4798      	blx	r3
 801841c:	f7ee f82e 	bl	800647c <EMBENET_RADIO_TxNow>
 8018420:	69bb      	ldr	r3, [r7, #24]
 8018422:	2b00      	cmp	r3, #0
 8018424:	d002      	beq.n	801842c <activity_ti3+0x6c>
 8018426:	69bb      	ldr	r3, [r7, #24]
 8018428:	2000      	movs	r0, #0
 801842a:	4798      	blx	r3
 801842c:	69f9      	ldr	r1, [r7, #28]
 801842e:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 8018432:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 8018436:	460b      	mov	r3, r1
 8018438:	4690      	mov	r8, r2
 801843a:	4699      	mov	r9, r3
 801843c:	f005 fbbc 	bl	801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>
 8018440:	4603      	mov	r3, r0
 8018442:	469a      	mov	sl, r3
 8018444:	f005 fbe2 	bl	801dc0c <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf>
 8018448:	4603      	mov	r3, r0
 801844a:	469b      	mov	fp, r3
 801844c:	f005 fa44 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 8018450:	4603      	mov	r3, r0
 8018452:	60fb      	str	r3, [r7, #12]
 8018454:	69fb      	ldr	r3, [r7, #28]
 8018456:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801845a:	f893 6052 	ldrb.w	r6, [r3, #82]	; 0x52
 801845e:	69fb      	ldr	r3, [r7, #28]
 8018460:	f993 2199 	ldrsb.w	r2, [r3, #409]	; 0x199
 8018464:	60ba      	str	r2, [r7, #8]
 8018466:	69fb      	ldr	r3, [r7, #28]
 8018468:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801846c:	607b      	str	r3, [r7, #4]
 801846e:	69fb      	ldr	r3, [r7, #28]
 8018470:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8018474:	3341      	adds	r3, #65	; 0x41
 8018476:	4618      	mov	r0, r3
 8018478:	f7f6 fdc4 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 801847c:	4604      	mov	r4, r0
 801847e:	460d      	mov	r5, r1
 8018480:	2002      	movs	r0, #2
 8018482:	f7f4 fdbb 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8018486:	4603      	mov	r3, r0
 8018488:	4618      	mov	r0, r3
 801848a:	f7f6 fdbb 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 801848e:	4602      	mov	r2, r0
 8018490:	460b      	mov	r3, r1
 8018492:	2101      	movs	r1, #1
 8018494:	9108      	str	r1, [sp, #32]
 8018496:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801849a:	e9cd 4504 	strd	r4, r5, [sp, #16]
 801849e:	6879      	ldr	r1, [r7, #4]
 80184a0:	9103      	str	r1, [sp, #12]
 80184a2:	68ba      	ldr	r2, [r7, #8]
 80184a4:	9202      	str	r2, [sp, #8]
 80184a6:	9601      	str	r6, [sp, #4]
 80184a8:	68fb      	ldr	r3, [r7, #12]
 80184aa:	9300      	str	r3, [sp, #0]
 80184ac:	465b      	mov	r3, fp
 80184ae:	4652      	mov	r2, sl
 80184b0:	4640      	mov	r0, r8
 80184b2:	4649      	mov	r1, r9
 80184b4:	f010 fcdc 	bl	8028e70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f>
 80184b8:	bf00      	nop
 80184ba:	3724      	adds	r7, #36	; 0x24
 80184bc:	46bd      	mov	sp, r7
 80184be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184c2:	bf00      	nop
 80184c4:	20000040 	.word	0x20000040
 80184c8:	08017605 	.word	0x08017605

080184cc <activity_tie2>:
 80184cc:	b580      	push	{r7, lr}
 80184ce:	b084      	sub	sp, #16
 80184d0:	af00      	add	r7, sp, #0
 80184d2:	f002 fa0b 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80184d6:	4a09      	ldr	r2, [pc, #36]	; (80184fc <activity_tie2+0x30>)
 80184d8:	463b      	mov	r3, r7
 80184da:	e892 0003 	ldmia.w	r2, {r0, r1}
 80184de:	e883 0003 	stmia.w	r3, {r0, r1}
 80184e2:	4b07      	ldr	r3, [pc, #28]	; (8018500 <activity_tie2+0x34>)
 80184e4:	681b      	ldr	r3, [r3, #0]
 80184e6:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 80184ea:	4a06      	ldr	r2, [pc, #24]	; (8018504 <activity_tie2+0x38>)
 80184ec:	4639      	mov	r1, r7
 80184ee:	c903      	ldmia	r1, {r0, r1}
 80184f0:	f7fc fe8a 	bl	8015208 <LOGGER_PrintLine>
 80184f4:	bf00      	nop
 80184f6:	3710      	adds	r7, #16
 80184f8:	46bd      	mov	sp, r7
 80184fa:	bd80      	pop	{r7, pc}
 80184fc:	0802f900 	.word	0x0802f900
 8018500:	20000040 	.word	0x20000040
 8018504:	0802f908 	.word	0x0802f908

08018508 <activity_ti4>:
 8018508:	b580      	push	{r7, lr}
 801850a:	b088      	sub	sp, #32
 801850c:	af02      	add	r7, sp, #8
 801850e:	6078      	str	r0, [r7, #4]
 8018510:	4b10      	ldr	r3, [pc, #64]	; (8018554 <activity_ti4+0x4c>)
 8018512:	681b      	ldr	r3, [r3, #0]
 8018514:	617b      	str	r3, [r7, #20]
 8018516:	2008      	movs	r0, #8
 8018518:	f002 f9ca 	bl	801a8b0 <setState>
 801851c:	697b      	ldr	r3, [r7, #20]
 801851e:	687a      	ldr	r2, [r7, #4]
 8018520:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8018524:	697b      	ldr	r3, [r7, #20]
 8018526:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 801852a:	697b      	ldr	r3, [r7, #20]
 801852c:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018530:	4b09      	ldr	r3, [pc, #36]	; (8018558 <activity_ti4+0x50>)
 8018532:	699b      	ldr	r3, [r3, #24]
 8018534:	441a      	add	r2, r3
 8018536:	697b      	ldr	r3, [r7, #20]
 8018538:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801853c:	2100      	movs	r1, #0
 801853e:	9101      	str	r1, [sp, #4]
 8018540:	4906      	ldr	r1, [pc, #24]	; (801855c <activity_ti4+0x54>)
 8018542:	9100      	str	r1, [sp, #0]
 8018544:	2101      	movs	r1, #1
 8018546:	f7f9 f9d1 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801854a:	bf00      	nop
 801854c:	3718      	adds	r7, #24
 801854e:	46bd      	mov	sp, r7
 8018550:	bd80      	pop	{r7, pc}
 8018552:	bf00      	nop
 8018554:	20000040 	.word	0x20000040
 8018558:	080318ac 	.word	0x080318ac
 801855c:	08017605 	.word	0x08017605

08018560 <activity_tie3>:
 8018560:	b580      	push	{r7, lr}
 8018562:	b084      	sub	sp, #16
 8018564:	af00      	add	r7, sp, #0
 8018566:	f002 f9c1 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801856a:	4a09      	ldr	r2, [pc, #36]	; (8018590 <activity_tie3+0x30>)
 801856c:	463b      	mov	r3, r7
 801856e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018572:	e883 0003 	stmia.w	r3, {r0, r1}
 8018576:	4b07      	ldr	r3, [pc, #28]	; (8018594 <activity_tie3+0x34>)
 8018578:	681b      	ldr	r3, [r3, #0]
 801857a:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 801857e:	4a06      	ldr	r2, [pc, #24]	; (8018598 <activity_tie3+0x38>)
 8018580:	4639      	mov	r1, r7
 8018582:	c903      	ldmia	r1, {r0, r1}
 8018584:	f7fc fe40 	bl	8015208 <LOGGER_PrintLine>
 8018588:	bf00      	nop
 801858a:	3710      	adds	r7, #16
 801858c:	46bd      	mov	sp, r7
 801858e:	bd80      	pop	{r7, pc}
 8018590:	0802f900 	.word	0x0802f900
 8018594:	20000040 	.word	0x20000040
 8018598:	0802f930 	.word	0x0802f930

0801859c <activity_ti5>:
 801859c:	b580      	push	{r7, lr}
 801859e:	b08a      	sub	sp, #40	; 0x28
 80185a0:	af02      	add	r7, sp, #8
 80185a2:	6078      	str	r0, [r7, #4]
 80185a4:	4b33      	ldr	r3, [pc, #204]	; (8018674 <activity_ti5+0xd8>)
 80185a6:	681b      	ldr	r3, [r3, #0]
 80185a8:	61fb      	str	r3, [r7, #28]
 80185aa:	2009      	movs	r0, #9
 80185ac:	f002 f980 	bl	801a8b0 <setState>
 80185b0:	69fb      	ldr	r3, [r7, #28]
 80185b2:	687a      	ldr	r2, [r7, #4]
 80185b4:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 80185b8:	69fb      	ldr	r3, [r7, #28]
 80185ba:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80185be:	2b00      	cmp	r3, #0
 80185c0:	d101      	bne.n	80185c6 <activity_ti5+0x2a>
 80185c2:	f002 f993 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80185c6:	69fb      	ldr	r3, [r7, #28]
 80185c8:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80185cc:	3341      	adds	r3, #65	; 0x41
 80185ce:	4618      	mov	r0, r3
 80185d0:	f7f6 fda6 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80185d4:	4603      	mov	r3, r0
 80185d6:	f083 0301 	eor.w	r3, r3, #1
 80185da:	b2db      	uxtb	r3, r3
 80185dc:	2b00      	cmp	r3, #0
 80185de:	d014      	beq.n	801860a <activity_ti5+0x6e>
 80185e0:	69fb      	ldr	r3, [r7, #28]
 80185e2:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 80185e6:	69fb      	ldr	r3, [r7, #28]
 80185e8:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 80185ec:	69fb      	ldr	r3, [r7, #28]
 80185ee:	f8d3 31d0 	ldr.w	r3, [r3, #464]	; 0x1d0
 80185f2:	441a      	add	r2, r3
 80185f4:	69fb      	ldr	r3, [r7, #28]
 80185f6:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80185fa:	2100      	movs	r1, #0
 80185fc:	9101      	str	r1, [sp, #4]
 80185fe:	491e      	ldr	r1, [pc, #120]	; (8018678 <activity_ti5+0xdc>)
 8018600:	9100      	str	r1, [sp, #0]
 8018602:	2101      	movs	r1, #1
 8018604:	f7f9 f972 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8018608:	e030      	b.n	801866c <activity_ti5+0xd0>
 801860a:	69fb      	ldr	r3, [r7, #28]
 801860c:	3331      	adds	r3, #49	; 0x31
 801860e:	2201      	movs	r2, #1
 8018610:	2101      	movs	r1, #1
 8018612:	4618      	mov	r0, r3
 8018614:	f005 fc84 	bl	801df20 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f>
 8018618:	69fb      	ldr	r3, [r7, #28]
 801861a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801861e:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8018622:	2b00      	cmp	r3, #0
 8018624:	d008      	beq.n	8018638 <activity_ti5+0x9c>
 8018626:	69fb      	ldr	r3, [r7, #28]
 8018628:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801862c:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 8018630:	3a01      	subs	r2, #1
 8018632:	b2d2      	uxtb	r2, r2
 8018634:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 8018638:	69fb      	ldr	r3, [r7, #28]
 801863a:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801863e:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8018642:	2b00      	cmp	r3, #0
 8018644:	d107      	bne.n	8018656 <activity_ti5+0xba>
 8018646:	69fb      	ldr	r3, [r7, #28]
 8018648:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801864c:	2101      	movs	r1, #1
 801864e:	4618      	mov	r0, r3
 8018650:	f001 fe6a 	bl	801a328 <fdc48e947b5f2f5ed5f47de398f99296ca12bee8>
 8018654:	e004      	b.n	8018660 <activity_ti5+0xc4>
 8018656:	69fb      	ldr	r3, [r7, #28]
 8018658:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801865c:	2240      	movs	r2, #64	; 0x40
 801865e:	705a      	strb	r2, [r3, #1]
 8018660:	69fb      	ldr	r3, [r7, #28]
 8018662:	2200      	movs	r2, #0
 8018664:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 8018668:	f002 f940 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801866c:	bf00      	nop
 801866e:	3720      	adds	r7, #32
 8018670:	46bd      	mov	sp, r7
 8018672:	bd80      	pop	{r7, pc}
 8018674:	20000040 	.word	0x20000040
 8018678:	08017605 	.word	0x08017605

0801867c <activity_ti6>:
 801867c:	b580      	push	{r7, lr}
 801867e:	b086      	sub	sp, #24
 8018680:	af02      	add	r7, sp, #8
 8018682:	4b1e      	ldr	r3, [pc, #120]	; (80186fc <activity_ti6+0x80>)
 8018684:	681b      	ldr	r3, [r3, #0]
 8018686:	60fb      	str	r3, [r7, #12]
 8018688:	200a      	movs	r0, #10
 801868a:	f002 f911 	bl	801a8b0 <setState>
 801868e:	68fb      	ldr	r3, [r7, #12]
 8018690:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018694:	68fb      	ldr	r3, [r7, #12]
 8018696:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 801869a:	68fb      	ldr	r3, [r7, #12]
 801869c:	f8d3 31d4 	ldr.w	r3, [r3, #468]	; 0x1d4
 80186a0:	441a      	add	r2, r3
 80186a2:	68fb      	ldr	r3, [r7, #12]
 80186a4:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80186a8:	2100      	movs	r1, #0
 80186aa:	9101      	str	r1, [sp, #4]
 80186ac:	4914      	ldr	r1, [pc, #80]	; (8018700 <activity_ti6+0x84>)
 80186ae:	9100      	str	r1, [sp, #0]
 80186b0:	2101      	movs	r1, #1
 80186b2:	f7f9 f91b 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80186b6:	2001      	movs	r0, #1
 80186b8:	f001 fee0 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 80186bc:	4b0f      	ldr	r3, [pc, #60]	; (80186fc <activity_ti6+0x80>)
 80186be:	681b      	ldr	r3, [r3, #0]
 80186c0:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 80186c4:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 80186c8:	60bb      	str	r3, [r7, #8]
 80186ca:	68bb      	ldr	r3, [r7, #8]
 80186cc:	2b00      	cmp	r3, #0
 80186ce:	d002      	beq.n	80186d6 <activity_ti6+0x5a>
 80186d0:	68bb      	ldr	r3, [r7, #8]
 80186d2:	2001      	movs	r0, #1
 80186d4:	4798      	blx	r3
 80186d6:	68fb      	ldr	r3, [r7, #12]
 80186d8:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 80186dc:	4618      	mov	r0, r3
 80186de:	f7ed feeb 	bl	80064b8 <EMBENET_RADIO_RxEnable>
 80186e2:	68bb      	ldr	r3, [r7, #8]
 80186e4:	2b00      	cmp	r3, #0
 80186e6:	d002      	beq.n	80186ee <activity_ti6+0x72>
 80186e8:	68bb      	ldr	r3, [r7, #8]
 80186ea:	2000      	movs	r0, #0
 80186ec:	4798      	blx	r3
 80186ee:	200b      	movs	r0, #11
 80186f0:	f002 f8de 	bl	801a8b0 <setState>
 80186f4:	bf00      	nop
 80186f6:	3710      	adds	r7, #16
 80186f8:	46bd      	mov	sp, r7
 80186fa:	bd80      	pop	{r7, pc}
 80186fc:	20000040 	.word	0x20000040
 8018700:	08017605 	.word	0x08017605

08018704 <activity_tie4>:
 8018704:	b580      	push	{r7, lr}
 8018706:	b084      	sub	sp, #16
 8018708:	af00      	add	r7, sp, #0
 801870a:	f002 f8ef 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801870e:	4a09      	ldr	r2, [pc, #36]	; (8018734 <activity_tie4+0x30>)
 8018710:	463b      	mov	r3, r7
 8018712:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018716:	e883 0003 	stmia.w	r3, {r0, r1}
 801871a:	4b07      	ldr	r3, [pc, #28]	; (8018738 <activity_tie4+0x34>)
 801871c:	681b      	ldr	r3, [r3, #0]
 801871e:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8018722:	4a06      	ldr	r2, [pc, #24]	; (801873c <activity_tie4+0x38>)
 8018724:	4639      	mov	r1, r7
 8018726:	c903      	ldmia	r1, {r0, r1}
 8018728:	f7fc fd6e 	bl	8015208 <LOGGER_PrintLine>
 801872c:	bf00      	nop
 801872e:	3710      	adds	r7, #16
 8018730:	46bd      	mov	sp, r7
 8018732:	bd80      	pop	{r7, pc}
 8018734:	0802f900 	.word	0x0802f900
 8018738:	20000040 	.word	0x20000040
 801873c:	0802f95c 	.word	0x0802f95c

08018740 <activity_ti7>:
 8018740:	b580      	push	{r7, lr}
 8018742:	b086      	sub	sp, #24
 8018744:	af02      	add	r7, sp, #8
 8018746:	4b1b      	ldr	r3, [pc, #108]	; (80187b4 <activity_ti7+0x74>)
 8018748:	681b      	ldr	r3, [r3, #0]
 801874a:	60fb      	str	r3, [r7, #12]
 801874c:	200c      	movs	r0, #12
 801874e:	f002 f8af 	bl	801a8b0 <setState>
 8018752:	2003      	movs	r0, #3
 8018754:	f001 fe92 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018758:	4b16      	ldr	r3, [pc, #88]	; (80187b4 <activity_ti7+0x74>)
 801875a:	681b      	ldr	r3, [r3, #0]
 801875c:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8018760:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018764:	60bb      	str	r3, [r7, #8]
 8018766:	68bb      	ldr	r3, [r7, #8]
 8018768:	2b00      	cmp	r3, #0
 801876a:	d002      	beq.n	8018772 <activity_ti7+0x32>
 801876c:	68bb      	ldr	r3, [r7, #8]
 801876e:	2001      	movs	r0, #1
 8018770:	4798      	blx	r3
 8018772:	f7ed fec9 	bl	8006508 <EMBENET_RADIO_RxNow>
 8018776:	68bb      	ldr	r3, [r7, #8]
 8018778:	2b00      	cmp	r3, #0
 801877a:	d002      	beq.n	8018782 <activity_ti7+0x42>
 801877c:	68bb      	ldr	r3, [r7, #8]
 801877e:	2000      	movs	r0, #0
 8018780:	4798      	blx	r3
 8018782:	68fb      	ldr	r3, [r7, #12]
 8018784:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018788:	68fb      	ldr	r3, [r7, #12]
 801878a:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 801878e:	68fb      	ldr	r3, [r7, #12]
 8018790:	f8d3 31d8 	ldr.w	r3, [r3, #472]	; 0x1d8
 8018794:	441a      	add	r2, r3
 8018796:	68fb      	ldr	r3, [r7, #12]
 8018798:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801879c:	2100      	movs	r1, #0
 801879e:	9101      	str	r1, [sp, #4]
 80187a0:	4905      	ldr	r1, [pc, #20]	; (80187b8 <activity_ti7+0x78>)
 80187a2:	9100      	str	r1, [sp, #0]
 80187a4:	2101      	movs	r1, #1
 80187a6:	f7f9 f8a1 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 80187aa:	bf00      	nop
 80187ac:	3710      	adds	r7, #16
 80187ae:	46bd      	mov	sp, r7
 80187b0:	bd80      	pop	{r7, pc}
 80187b2:	bf00      	nop
 80187b4:	20000040 	.word	0x20000040
 80187b8:	08017605 	.word	0x08017605

080187bc <activity_tie5>:
 80187bc:	b580      	push	{r7, lr}
 80187be:	b084      	sub	sp, #16
 80187c0:	af00      	add	r7, sp, #0
 80187c2:	4b0f      	ldr	r3, [pc, #60]	; (8018800 <activity_tie5+0x44>)
 80187c4:	681b      	ldr	r3, [r3, #0]
 80187c6:	60fb      	str	r3, [r7, #12]
 80187c8:	68fb      	ldr	r3, [r7, #12]
 80187ca:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80187ce:	f103 0041 	add.w	r0, r3, #65	; 0x41
 80187d2:	68fb      	ldr	r3, [r7, #12]
 80187d4:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80187d8:	f103 011d 	add.w	r1, r3, #29
 80187dc:	68fb      	ldr	r3, [r7, #12]
 80187de:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80187e2:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 80187e6:	f1c3 0303 	rsb	r3, r3, #3
 80187ea:	b2db      	uxtb	r3, r3
 80187ec:	461a      	mov	r2, r3
 80187ee:	f010 f9db 	bl	8028ba8 <b30d7ce97a9a073e92ec5e2adfc7cb092fcb104d>
 80187f2:	f002 f87b 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80187f6:	bf00      	nop
 80187f8:	3710      	adds	r7, #16
 80187fa:	46bd      	mov	sp, r7
 80187fc:	bd80      	pop	{r7, pc}
 80187fe:	bf00      	nop
 8018800:	20000040 	.word	0x20000040

08018804 <activity_ti8>:
 8018804:	b580      	push	{r7, lr}
 8018806:	b088      	sub	sp, #32
 8018808:	af02      	add	r7, sp, #8
 801880a:	6078      	str	r0, [r7, #4]
 801880c:	4b10      	ldr	r3, [pc, #64]	; (8018850 <activity_ti8+0x4c>)
 801880e:	681b      	ldr	r3, [r3, #0]
 8018810:	617b      	str	r3, [r7, #20]
 8018812:	200d      	movs	r0, #13
 8018814:	f002 f84c 	bl	801a8b0 <setState>
 8018818:	697b      	ldr	r3, [r7, #20]
 801881a:	687a      	ldr	r2, [r7, #4]
 801881c:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8018820:	697b      	ldr	r3, [r7, #20]
 8018822:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018826:	697b      	ldr	r3, [r7, #20]
 8018828:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 801882c:	4b09      	ldr	r3, [pc, #36]	; (8018854 <activity_ti8+0x50>)
 801882e:	69db      	ldr	r3, [r3, #28]
 8018830:	441a      	add	r2, r3
 8018832:	697b      	ldr	r3, [r7, #20]
 8018834:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018838:	2100      	movs	r1, #0
 801883a:	9101      	str	r1, [sp, #4]
 801883c:	4906      	ldr	r1, [pc, #24]	; (8018858 <activity_ti8+0x54>)
 801883e:	9100      	str	r1, [sp, #0]
 8018840:	2101      	movs	r1, #1
 8018842:	f7f9 f853 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8018846:	bf00      	nop
 8018848:	3718      	adds	r7, #24
 801884a:	46bd      	mov	sp, r7
 801884c:	bd80      	pop	{r7, pc}
 801884e:	bf00      	nop
 8018850:	20000040 	.word	0x20000040
 8018854:	080318ac 	.word	0x080318ac
 8018858:	08017605 	.word	0x08017605

0801885c <activity_tie6>:
 801885c:	b580      	push	{r7, lr}
 801885e:	b084      	sub	sp, #16
 8018860:	af00      	add	r7, sp, #0
 8018862:	f002 f843 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018866:	4a08      	ldr	r2, [pc, #32]	; (8018888 <activity_tie6+0x2c>)
 8018868:	463b      	mov	r3, r7
 801886a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801886e:	e883 0003 	stmia.w	r3, {r0, r1}
 8018872:	4a06      	ldr	r2, [pc, #24]	; (801888c <activity_tie6+0x30>)
 8018874:	463b      	mov	r3, r7
 8018876:	e893 0003 	ldmia.w	r3, {r0, r1}
 801887a:	f7fc fcc5 	bl	8015208 <LOGGER_PrintLine>
 801887e:	bf00      	nop
 8018880:	3710      	adds	r7, #16
 8018882:	46bd      	mov	sp, r7
 8018884:	bd80      	pop	{r7, pc}
 8018886:	bf00      	nop
 8018888:	0802f900 	.word	0x0802f900
 801888c:	0802f98c 	.word	0x0802f98c

08018890 <activity_ti9>:
 8018890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018894:	b0b7      	sub	sp, #220	; 0xdc
 8018896:	af0a      	add	r7, sp, #40	; 0x28
 8018898:	6178      	str	r0, [r7, #20]
 801889a:	4bd2      	ldr	r3, [pc, #840]	; (8018be4 <activity_ti9+0x354>)
 801889c:	681b      	ldr	r3, [r3, #0]
 801889e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80188a2:	2001      	movs	r0, #1
 80188a4:	f001 fdea 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 80188a8:	f7ed fbd2 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80188ac:	f002 f812 	bl	801a8d4 <getState>
 80188b0:	4603      	mov	r3, r0
 80188b2:	2b0d      	cmp	r3, #13
 80188b4:	d002      	beq.n	80188bc <activity_ti9+0x2c>
 80188b6:	f7ed fbeb 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80188ba:	e18e      	b.n	8018bda <activity_ti9+0x34a>
 80188bc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80188c0:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 80188c4:	4618      	mov	r0, r3
 80188c6:	f7f9 f8fd 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 80188ca:	f7ed fbe1 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80188ce:	200e      	movs	r0, #14
 80188d0:	f001 ffee 	bl	801a8b0 <setState>
 80188d4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80188d8:	697a      	ldr	r2, [r7, #20]
 80188da:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 80188de:	2031      	movs	r0, #49	; 0x31
 80188e0:	f7f6 ff28 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 80188e4:	4602      	mov	r2, r0
 80188e6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80188ea:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
 80188ee:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80188f2:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 80188f6:	2b00      	cmp	r3, #0
 80188f8:	d102      	bne.n	8018900 <activity_ti9+0x70>
 80188fa:	f001 fff7 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80188fe:	e16c      	b.n	8018bda <activity_ti9+0x34a>
 8018900:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018904:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018908:	2231      	movs	r2, #49	; 0x31
 801890a:	701a      	strb	r2, [r3, #0]
 801890c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018910:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018914:	2231      	movs	r2, #49	; 0x31
 8018916:	705a      	strb	r2, [r3, #1]
 8018918:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 801891c:	f8d3 218c 	ldr.w	r2, [r3, #396]	; 0x18c
 8018920:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018924:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018928:	32ba      	adds	r2, #186	; 0xba
 801892a:	605a      	str	r2, [r3, #4]
 801892c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018930:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018934:	6859      	ldr	r1, [r3, #4]
 8018936:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801893a:	2280      	movs	r2, #128	; 0x80
 801893c:	4618      	mov	r0, r3
 801893e:	f7ed fdf3 	bl	8006528 <EMBENET_RADIO_GetReceivedFrame>
 8018942:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8018944:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018948:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 801894c:	b2d2      	uxtb	r2, r2
 801894e:	721a      	strb	r2, [r3, #8]
 8018950:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018954:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018958:	f997 2040 	ldrsb.w	r2, [r7, #64]	; 0x40
 801895c:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8018960:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018964:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018968:	f897 2041 	ldrb.w	r2, [r7, #65]	; 0x41
 801896c:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
 8018970:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018974:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018978:	f897 2042 	ldrb.w	r2, [r7, #66]	; 0x42
 801897c:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 8018980:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018984:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018988:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 801898c:	f083 0301 	eor.w	r3, r3, #1
 8018990:	b2db      	uxtb	r3, r3
 8018992:	2b00      	cmp	r3, #0
 8018994:	f040 810c 	bne.w	8018bb0 <activity_ti9+0x320>
 8018998:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 801899c:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 80189a0:	7a1b      	ldrb	r3, [r3, #8]
 80189a2:	2b00      	cmp	r3, #0
 80189a4:	d006      	beq.n	80189b4 <activity_ti9+0x124>
 80189a6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80189aa:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 80189ae:	7a1b      	ldrb	r3, [r3, #8]
 80189b0:	2b80      	cmp	r3, #128	; 0x80
 80189b2:	d912      	bls.n	80189da <activity_ti9+0x14a>
 80189b4:	4a8c      	ldr	r2, [pc, #560]	; (8018be8 <activity_ti9+0x358>)
 80189b6:	f107 0320 	add.w	r3, r7, #32
 80189ba:	e892 0003 	ldmia.w	r2, {r0, r1}
 80189be:	e883 0003 	stmia.w	r3, {r0, r1}
 80189c2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80189c6:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80189ca:	7a1b      	ldrb	r3, [r3, #8]
 80189cc:	4a87      	ldr	r2, [pc, #540]	; (8018bec <activity_ti9+0x35c>)
 80189ce:	f107 0120 	add.w	r1, r7, #32
 80189d2:	c903      	ldmia	r1, {r0, r1}
 80189d4:	f7fc fc18 	bl	8015208 <LOGGER_PrintLine>
 80189d8:	e0f1      	b.n	8018bbe <activity_ti9+0x32e>
 80189da:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80189de:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 80189e2:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80189e6:	4611      	mov	r1, r2
 80189e8:	4618      	mov	r0, r3
 80189ea:	f011 fd8f 	bl	802a50c <93646682ea820ae310ba1b54d0fccca9d773749e>
 80189ee:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80189f2:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 80189f6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80189fa:	4611      	mov	r1, r2
 80189fc:	4618      	mov	r0, r3
 80189fe:	f000 ff97 	bl	8019930 <isValidAckPacket>
 8018a02:	4603      	mov	r3, r0
 8018a04:	f083 0301 	eor.w	r3, r3, #1
 8018a08:	b2db      	uxtb	r3, r3
 8018a0a:	2b00      	cmp	r3, #0
 8018a0c:	f040 80d2 	bne.w	8018bb4 <activity_ti9+0x324>
 8018a10:	2002      	movs	r0, #2
 8018a12:	f7f4 faf3 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8018a16:	4603      	mov	r3, r0
 8018a18:	1c59      	adds	r1, r3, #1
 8018a1a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8018a1e:	2208      	movs	r2, #8
 8018a20:	4618      	mov	r0, r3
 8018a22:	f7fe fa4a 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8018a26:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018a2a:	f103 012e 	add.w	r1, r3, #46	; 0x2e
 8018a2e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8018a32:	2208      	movs	r2, #8
 8018a34:	4618      	mov	r0, r3
 8018a36:	f7fe fa40 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8018a3a:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8018a3e:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8018a42:	f002 f943 	bl	801accc <18852a76524cbdb850c5d6a14b013c23dafcaddf>
 8018a46:	4603      	mov	r3, r0
 8018a48:	f083 0301 	eor.w	r3, r3, #1
 8018a4c:	b2db      	uxtb	r3, r3
 8018a4e:	2b00      	cmp	r3, #0
 8018a50:	f040 80b2 	bne.w	8018bb8 <activity_ti9+0x328>
 8018a54:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018a58:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018a5c:	f897 205a 	ldrb.w	r2, [r7, #90]	; 0x5a
 8018a60:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 8018a64:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018a68:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018a6c:	f897 2061 	ldrb.w	r2, [r7, #97]	; 0x61
 8018a70:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 8018a74:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018a78:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018a7c:	3341      	adds	r3, #65	; 0x41
 8018a7e:	461a      	mov	r2, r3
 8018a80:	f107 0385 	add.w	r3, r7, #133	; 0x85
 8018a84:	681d      	ldr	r5, [r3, #0]
 8018a86:	685c      	ldr	r4, [r3, #4]
 8018a88:	6898      	ldr	r0, [r3, #8]
 8018a8a:	68d9      	ldr	r1, [r3, #12]
 8018a8c:	6015      	str	r5, [r2, #0]
 8018a8e:	6054      	str	r4, [r2, #4]
 8018a90:	6090      	str	r0, [r2, #8]
 8018a92:	60d1      	str	r1, [r2, #12]
 8018a94:	7c1b      	ldrb	r3, [r3, #16]
 8018a96:	7413      	strb	r3, [r2, #16]
 8018a98:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018a9c:	f103 0231 	add.w	r2, r3, #49	; 0x31
 8018aa0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018aa4:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018aa8:	4619      	mov	r1, r3
 8018aaa:	4610      	mov	r0, r2
 8018aac:	f7fe f8a6 	bl	8016bfc <ccaf3079fe06f6d98cd1712d3ed21403c04581f9>
 8018ab0:	4603      	mov	r3, r0
 8018ab2:	f083 0301 	eor.w	r3, r3, #1
 8018ab6:	b2db      	uxtb	r3, r3
 8018ab8:	2b00      	cmp	r3, #0
 8018aba:	d17f      	bne.n	8018bbc <activity_ti9+0x32c>
 8018abc:	f8d7 10ac 	ldr.w	r1, [r7, #172]	; 0xac
 8018ac0:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 8018ac4:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 8018ac8:	460b      	mov	r3, r1
 8018aca:	4692      	mov	sl, r2
 8018acc:	469b      	mov	fp, r3
 8018ace:	f005 f873 	bl	801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>
 8018ad2:	4603      	mov	r3, r0
 8018ad4:	613b      	str	r3, [r7, #16]
 8018ad6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018ada:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8018adc:	60fb      	str	r3, [r7, #12]
 8018ade:	f004 fefb 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 8018ae2:	4603      	mov	r3, r0
 8018ae4:	60bb      	str	r3, [r7, #8]
 8018ae6:	f897 605a 	ldrb.w	r6, [r7, #90]	; 0x5a
 8018aea:	f997 1040 	ldrsb.w	r1, [r7, #64]	; 0x40
 8018aee:	6079      	str	r1, [r7, #4]
 8018af0:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8018af2:	6038      	str	r0, [r7, #0]
 8018af4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018af8:	331c      	adds	r3, #28
 8018afa:	4618      	mov	r0, r3
 8018afc:	f7f6 fa82 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8018b00:	4604      	mov	r4, r0
 8018b02:	460d      	mov	r5, r1
 8018b04:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018b08:	332d      	adds	r3, #45	; 0x2d
 8018b0a:	4618      	mov	r0, r3
 8018b0c:	f7f6 fa7a 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8018b10:	2300      	movs	r3, #0
 8018b12:	9308      	str	r3, [sp, #32]
 8018b14:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8018b18:	e9cd 4504 	strd	r4, r5, [sp, #16]
 8018b1c:	6838      	ldr	r0, [r7, #0]
 8018b1e:	9003      	str	r0, [sp, #12]
 8018b20:	6879      	ldr	r1, [r7, #4]
 8018b22:	9102      	str	r1, [sp, #8]
 8018b24:	9601      	str	r6, [sp, #4]
 8018b26:	68b9      	ldr	r1, [r7, #8]
 8018b28:	9100      	str	r1, [sp, #0]
 8018b2a:	68fb      	ldr	r3, [r7, #12]
 8018b2c:	693a      	ldr	r2, [r7, #16]
 8018b2e:	4650      	mov	r0, sl
 8018b30:	4659      	mov	r1, fp
 8018b32:	f010 f99d 	bl	8028e70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f>
 8018b36:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018b3a:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018b3e:	f897 2059 	ldrb.w	r2, [r7, #89]	; 0x59
 8018b42:	4611      	mov	r1, r2
 8018b44:	4618      	mov	r0, r3
 8018b46:	f010 fcdd 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8018b4a:	f7f4 fa13 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8018b4e:	4603      	mov	r3, r0
 8018b50:	f083 0301 	eor.w	r3, r3, #1
 8018b54:	b2db      	uxtb	r3, r3
 8018b56:	2b00      	cmp	r3, #0
 8018b58:	d014      	beq.n	8018b84 <activity_ti9+0x2f4>
 8018b5a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018b5e:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018b62:	3342      	adds	r3, #66	; 0x42
 8018b64:	4618      	mov	r0, r3
 8018b66:	f7f5 fb2f 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 8018b6a:	4603      	mov	r3, r0
 8018b6c:	2b00      	cmp	r3, #0
 8018b6e:	d009      	beq.n	8018b84 <activity_ti9+0x2f4>
 8018b70:	f9b7 3096 	ldrsh.w	r3, [r7, #150]	; 0x96
 8018b74:	b21b      	sxth	r3, r3
 8018b76:	17da      	asrs	r2, r3, #31
 8018b78:	4698      	mov	r8, r3
 8018b7a:	4691      	mov	r9, r2
 8018b7c:	4640      	mov	r0, r8
 8018b7e:	4649      	mov	r1, r9
 8018b80:	f001 fada 	bl	801a138 <synchronizeCellTimeOnAckPacket>
 8018b84:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018b88:	3331      	adds	r3, #49	; 0x31
 8018b8a:	2201      	movs	r2, #1
 8018b8c:	2101      	movs	r1, #1
 8018b8e:	4618      	mov	r0, r3
 8018b90:	f005 f9c6 	bl	801df20 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f>
 8018b94:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018b98:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8018b9c:	2101      	movs	r1, #1
 8018b9e:	4618      	mov	r0, r3
 8018ba0:	f001 fbc2 	bl	801a328 <fdc48e947b5f2f5ed5f47de398f99296ca12bee8>
 8018ba4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018ba8:	2200      	movs	r2, #0
 8018baa:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 8018bae:	e006      	b.n	8018bbe <activity_ti9+0x32e>
 8018bb0:	bf00      	nop
 8018bb2:	e004      	b.n	8018bbe <activity_ti9+0x32e>
 8018bb4:	bf00      	nop
 8018bb6:	e002      	b.n	8018bbe <activity_ti9+0x32e>
 8018bb8:	bf00      	nop
 8018bba:	e000      	b.n	8018bbe <activity_ti9+0x32e>
 8018bbc:	bf00      	nop
 8018bbe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018bc2:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8018bc6:	4618      	mov	r0, r3
 8018bc8:	f7f6 fec0 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8018bcc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8018bd0:	2200      	movs	r2, #0
 8018bd2:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
 8018bd6:	f001 fe89 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018bda:	37b4      	adds	r7, #180	; 0xb4
 8018bdc:	46bd      	mov	sp, r7
 8018bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018be2:	bf00      	nop
 8018be4:	20000040 	.word	0x20000040
 8018be8:	0802f8b0 	.word	0x0802f8b0
 8018bec:	0802f8b8 	.word	0x0802f8b8

08018bf0 <activity_ri2>:
 8018bf0:	b580      	push	{r7, lr}
 8018bf2:	b088      	sub	sp, #32
 8018bf4:	af02      	add	r7, sp, #8
 8018bf6:	4b1e      	ldr	r3, [pc, #120]	; (8018c70 <activity_ri2+0x80>)
 8018bf8:	681b      	ldr	r3, [r3, #0]
 8018bfa:	617b      	str	r3, [r7, #20]
 8018bfc:	2010      	movs	r0, #16
 8018bfe:	f001 fe57 	bl	801a8b0 <setState>
 8018c02:	697b      	ldr	r3, [r7, #20]
 8018c04:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018c08:	697b      	ldr	r3, [r7, #20]
 8018c0a:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018c0e:	697b      	ldr	r3, [r7, #20]
 8018c10:	f8d3 31e0 	ldr.w	r3, [r3, #480]	; 0x1e0
 8018c14:	441a      	add	r2, r3
 8018c16:	697b      	ldr	r3, [r7, #20]
 8018c18:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018c1c:	2100      	movs	r1, #0
 8018c1e:	9101      	str	r1, [sp, #4]
 8018c20:	4914      	ldr	r1, [pc, #80]	; (8018c74 <activity_ri2+0x84>)
 8018c22:	9100      	str	r1, [sp, #0]
 8018c24:	2101      	movs	r1, #1
 8018c26:	f7f8 fe61 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8018c2a:	2001      	movs	r0, #1
 8018c2c:	f001 fc26 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018c30:	4b0f      	ldr	r3, [pc, #60]	; (8018c70 <activity_ri2+0x80>)
 8018c32:	681b      	ldr	r3, [r3, #0]
 8018c34:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8018c38:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018c3c:	613b      	str	r3, [r7, #16]
 8018c3e:	693b      	ldr	r3, [r7, #16]
 8018c40:	2b00      	cmp	r3, #0
 8018c42:	d002      	beq.n	8018c4a <activity_ri2+0x5a>
 8018c44:	693b      	ldr	r3, [r7, #16]
 8018c46:	2001      	movs	r0, #1
 8018c48:	4798      	blx	r3
 8018c4a:	697b      	ldr	r3, [r7, #20]
 8018c4c:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8018c50:	4618      	mov	r0, r3
 8018c52:	f7ed fc31 	bl	80064b8 <EMBENET_RADIO_RxEnable>
 8018c56:	693b      	ldr	r3, [r7, #16]
 8018c58:	2b00      	cmp	r3, #0
 8018c5a:	d002      	beq.n	8018c62 <activity_ri2+0x72>
 8018c5c:	693b      	ldr	r3, [r7, #16]
 8018c5e:	2000      	movs	r0, #0
 8018c60:	4798      	blx	r3
 8018c62:	2011      	movs	r0, #17
 8018c64:	f001 fe24 	bl	801a8b0 <setState>
 8018c68:	bf00      	nop
 8018c6a:	3718      	adds	r7, #24
 8018c6c:	46bd      	mov	sp, r7
 8018c6e:	bd80      	pop	{r7, pc}
 8018c70:	20000040 	.word	0x20000040
 8018c74:	08017605 	.word	0x08017605

08018c78 <activity_rie1>:
 8018c78:	b580      	push	{r7, lr}
 8018c7a:	b082      	sub	sp, #8
 8018c7c:	af00      	add	r7, sp, #0
 8018c7e:	f001 fe35 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018c82:	4a09      	ldr	r2, [pc, #36]	; (8018ca8 <activity_rie1+0x30>)
 8018c84:	463b      	mov	r3, r7
 8018c86:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018c8a:	e883 0003 	stmia.w	r3, {r0, r1}
 8018c8e:	4b07      	ldr	r3, [pc, #28]	; (8018cac <activity_rie1+0x34>)
 8018c90:	681b      	ldr	r3, [r3, #0]
 8018c92:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8018c96:	4a06      	ldr	r2, [pc, #24]	; (8018cb0 <activity_rie1+0x38>)
 8018c98:	4639      	mov	r1, r7
 8018c9a:	c903      	ldmia	r1, {r0, r1}
 8018c9c:	f7fc fab4 	bl	8015208 <LOGGER_PrintLine>
 8018ca0:	bf00      	nop
 8018ca2:	3708      	adds	r7, #8
 8018ca4:	46bd      	mov	sp, r7
 8018ca6:	bd80      	pop	{r7, pc}
 8018ca8:	0802f900 	.word	0x0802f900
 8018cac:	20000040 	.word	0x20000040
 8018cb0:	0802f9ac 	.word	0x0802f9ac

08018cb4 <activity_ri3>:
 8018cb4:	b580      	push	{r7, lr}
 8018cb6:	b086      	sub	sp, #24
 8018cb8:	af02      	add	r7, sp, #8
 8018cba:	4b1b      	ldr	r3, [pc, #108]	; (8018d28 <activity_ri3+0x74>)
 8018cbc:	681b      	ldr	r3, [r3, #0]
 8018cbe:	60fb      	str	r3, [r7, #12]
 8018cc0:	2012      	movs	r0, #18
 8018cc2:	f001 fdf5 	bl	801a8b0 <setState>
 8018cc6:	2003      	movs	r0, #3
 8018cc8:	f001 fbd8 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018ccc:	4b16      	ldr	r3, [pc, #88]	; (8018d28 <activity_ri3+0x74>)
 8018cce:	681b      	ldr	r3, [r3, #0]
 8018cd0:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8018cd4:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018cd8:	60bb      	str	r3, [r7, #8]
 8018cda:	68bb      	ldr	r3, [r7, #8]
 8018cdc:	2b00      	cmp	r3, #0
 8018cde:	d002      	beq.n	8018ce6 <activity_ri3+0x32>
 8018ce0:	68bb      	ldr	r3, [r7, #8]
 8018ce2:	2001      	movs	r0, #1
 8018ce4:	4798      	blx	r3
 8018ce6:	f7ed fc0f 	bl	8006508 <EMBENET_RADIO_RxNow>
 8018cea:	68bb      	ldr	r3, [r7, #8]
 8018cec:	2b00      	cmp	r3, #0
 8018cee:	d002      	beq.n	8018cf6 <activity_ri3+0x42>
 8018cf0:	68bb      	ldr	r3, [r7, #8]
 8018cf2:	2000      	movs	r0, #0
 8018cf4:	4798      	blx	r3
 8018cf6:	68fb      	ldr	r3, [r7, #12]
 8018cf8:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018cfc:	68fb      	ldr	r3, [r7, #12]
 8018cfe:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018d02:	68fb      	ldr	r3, [r7, #12]
 8018d04:	f8d3 31e4 	ldr.w	r3, [r3, #484]	; 0x1e4
 8018d08:	441a      	add	r2, r3
 8018d0a:	68fb      	ldr	r3, [r7, #12]
 8018d0c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018d10:	2100      	movs	r1, #0
 8018d12:	9101      	str	r1, [sp, #4]
 8018d14:	4905      	ldr	r1, [pc, #20]	; (8018d2c <activity_ri3+0x78>)
 8018d16:	9100      	str	r1, [sp, #0]
 8018d18:	2101      	movs	r1, #1
 8018d1a:	f7f8 fde7 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8018d1e:	bf00      	nop
 8018d20:	3710      	adds	r7, #16
 8018d22:	46bd      	mov	sp, r7
 8018d24:	bd80      	pop	{r7, pc}
 8018d26:	bf00      	nop
 8018d28:	20000040 	.word	0x20000040
 8018d2c:	08017605 	.word	0x08017605

08018d30 <activity_rie2>:
 8018d30:	b580      	push	{r7, lr}
 8018d32:	b082      	sub	sp, #8
 8018d34:	af00      	add	r7, sp, #0
 8018d36:	f001 fdd9 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018d3a:	bf00      	nop
 8018d3c:	3708      	adds	r7, #8
 8018d3e:	46bd      	mov	sp, r7
 8018d40:	bd80      	pop	{r7, pc}
	...

08018d44 <activity_ri4>:
 8018d44:	b580      	push	{r7, lr}
 8018d46:	b088      	sub	sp, #32
 8018d48:	af02      	add	r7, sp, #8
 8018d4a:	6078      	str	r0, [r7, #4]
 8018d4c:	4b12      	ldr	r3, [pc, #72]	; (8018d98 <activity_ri4+0x54>)
 8018d4e:	681b      	ldr	r3, [r3, #0]
 8018d50:	617b      	str	r3, [r7, #20]
 8018d52:	2013      	movs	r0, #19
 8018d54:	f001 fdac 	bl	801a8b0 <setState>
 8018d58:	697b      	ldr	r3, [r7, #20]
 8018d5a:	687a      	ldr	r2, [r7, #4]
 8018d5c:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8018d60:	697b      	ldr	r3, [r7, #20]
 8018d62:	687a      	ldr	r2, [r7, #4]
 8018d64:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
 8018d68:	697b      	ldr	r3, [r7, #20]
 8018d6a:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8018d6e:	697b      	ldr	r3, [r7, #20]
 8018d70:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8018d74:	4b09      	ldr	r3, [pc, #36]	; (8018d9c <activity_ri4+0x58>)
 8018d76:	699b      	ldr	r3, [r3, #24]
 8018d78:	441a      	add	r2, r3
 8018d7a:	697b      	ldr	r3, [r7, #20]
 8018d7c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8018d80:	2100      	movs	r1, #0
 8018d82:	9101      	str	r1, [sp, #4]
 8018d84:	4906      	ldr	r1, [pc, #24]	; (8018da0 <activity_ri4+0x5c>)
 8018d86:	9100      	str	r1, [sp, #0]
 8018d88:	2101      	movs	r1, #1
 8018d8a:	f7f8 fdaf 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8018d8e:	bf00      	nop
 8018d90:	3718      	adds	r7, #24
 8018d92:	46bd      	mov	sp, r7
 8018d94:	bd80      	pop	{r7, pc}
 8018d96:	bf00      	nop
 8018d98:	20000040 	.word	0x20000040
 8018d9c:	080318ac 	.word	0x080318ac
 8018da0:	08017605 	.word	0x08017605

08018da4 <activity_rie3>:
 8018da4:	b580      	push	{r7, lr}
 8018da6:	b084      	sub	sp, #16
 8018da8:	af00      	add	r7, sp, #0
 8018daa:	f001 fd9f 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018dae:	4a09      	ldr	r2, [pc, #36]	; (8018dd4 <activity_rie3+0x30>)
 8018db0:	463b      	mov	r3, r7
 8018db2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018db6:	e883 0003 	stmia.w	r3, {r0, r1}
 8018dba:	4b07      	ldr	r3, [pc, #28]	; (8018dd8 <activity_rie3+0x34>)
 8018dbc:	681b      	ldr	r3, [r3, #0]
 8018dbe:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8018dc2:	4a06      	ldr	r2, [pc, #24]	; (8018ddc <activity_rie3+0x38>)
 8018dc4:	4639      	mov	r1, r7
 8018dc6:	c903      	ldmia	r1, {r0, r1}
 8018dc8:	f7fc fa1e 	bl	8015208 <LOGGER_PrintLine>
 8018dcc:	bf00      	nop
 8018dce:	3710      	adds	r7, #16
 8018dd0:	46bd      	mov	sp, r7
 8018dd2:	bd80      	pop	{r7, pc}
 8018dd4:	0802f900 	.word	0x0802f900
 8018dd8:	20000040 	.word	0x20000040
 8018ddc:	0802f9dc 	.word	0x0802f9dc

08018de0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3>:
 8018de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018de4:	b0cf      	sub	sp, #316	; 0x13c
 8018de6:	af0a      	add	r7, sp, #40	; 0x28
 8018de8:	f507 7388 	add.w	r3, r7, #272	; 0x110
 8018dec:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8018df0:	6018      	str	r0, [r3, #0]
 8018df2:	4bc8      	ldr	r3, [pc, #800]	; (8019114 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x334>)
 8018df4:	681b      	ldr	r3, [r3, #0]
 8018df6:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8018dfa:	2001      	movs	r0, #1
 8018dfc:	f001 fb3e 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8018e00:	f7ed f926 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 8018e04:	f001 fd66 	bl	801a8d4 <getState>
 8018e08:	4603      	mov	r3, r0
 8018e0a:	2b13      	cmp	r3, #19
 8018e0c:	d002      	beq.n	8018e14 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x34>
 8018e0e:	f7ed f93f 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8018e12:	e385      	b.n	8019520 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x740>
 8018e14:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e18:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 8018e1c:	4618      	mov	r0, r3
 8018e1e:	f7f8 fe51 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 8018e22:	f7ed f935 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 8018e26:	2014      	movs	r0, #20
 8018e28:	f001 fd42 	bl	801a8b0 <setState>
 8018e2c:	2031      	movs	r0, #49	; 0x31
 8018e2e:	f7f6 fc81 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8018e32:	4602      	mov	r2, r0
 8018e34:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e38:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8018e3c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e40:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e44:	2b00      	cmp	r3, #0
 8018e46:	d102      	bne.n	8018e4e <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6e>
 8018e48:	f001 fd50 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8018e4c:	e368      	b.n	8019520 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x740>
 8018e4e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e52:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e56:	2231      	movs	r2, #49	; 0x31
 8018e58:	701a      	strb	r2, [r3, #0]
 8018e5a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e5e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e62:	2231      	movs	r2, #49	; 0x31
 8018e64:	705a      	strb	r2, [r3, #1]
 8018e66:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e6a:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8018e6e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e72:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e76:	32ba      	adds	r2, #186	; 0xba
 8018e78:	605a      	str	r2, [r3, #4]
 8018e7a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e7e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e82:	6859      	ldr	r1, [r3, #4]
 8018e84:	f107 03f0 	add.w	r3, r7, #240	; 0xf0
 8018e88:	2280      	movs	r2, #128	; 0x80
 8018e8a:	4618      	mov	r0, r3
 8018e8c:	f7ed fb4c 	bl	8006528 <EMBENET_RADIO_GetReceivedFrame>
 8018e90:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
 8018e94:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018e98:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018e9c:	b2d2      	uxtb	r2, r2
 8018e9e:	721a      	strb	r2, [r3, #8]
 8018ea0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018ea4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018ea8:	f997 20f0 	ldrsb.w	r2, [r7, #240]	; 0xf0
 8018eac:	f883 20b6 	strb.w	r2, [r3, #182]	; 0xb6
 8018eb0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018eb4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018eb8:	f897 20f1 	ldrb.w	r2, [r7, #241]	; 0xf1
 8018ebc:	f883 20b7 	strb.w	r2, [r3, #183]	; 0xb7
 8018ec0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018ec4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018ec8:	f897 20f2 	ldrb.w	r2, [r7, #242]	; 0xf2
 8018ecc:	f883 20b8 	strb.w	r2, [r3, #184]	; 0xb8
 8018ed0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018ed4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018ed8:	f893 30b8 	ldrb.w	r3, [r3, #184]	; 0xb8
 8018edc:	f083 0301 	eor.w	r3, r3, #1
 8018ee0:	b2db      	uxtb	r3, r3
 8018ee2:	2b00      	cmp	r3, #0
 8018ee4:	f040 82f3 	bne.w	80194ce <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6ee>
 8018ee8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018eec:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018ef0:	7a1b      	ldrb	r3, [r3, #8]
 8018ef2:	2b00      	cmp	r3, #0
 8018ef4:	d006      	beq.n	8018f04 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x124>
 8018ef6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018efa:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018efe:	7a1b      	ldrb	r3, [r3, #8]
 8018f00:	2b80      	cmp	r3, #128	; 0x80
 8018f02:	d912      	bls.n	8018f2a <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x14a>
 8018f04:	4a84      	ldr	r2, [pc, #528]	; (8019118 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x338>)
 8018f06:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8018f0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018f0e:	e883 0003 	stmia.w	r3, {r0, r1}
 8018f12:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018f16:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018f1a:	7a1b      	ldrb	r3, [r3, #8]
 8018f1c:	4a7f      	ldr	r2, [pc, #508]	; (801911c <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x33c>)
 8018f1e:	f107 01cc 	add.w	r1, r7, #204	; 0xcc
 8018f22:	c903      	ldmia	r1, {r0, r1}
 8018f24:	f7fc f970 	bl	8015208 <LOGGER_PrintLine>
 8018f28:	e2e4      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 8018f2a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018f2e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018f32:	f107 0214 	add.w	r2, r7, #20
 8018f36:	4611      	mov	r1, r2
 8018f38:	4618      	mov	r0, r3
 8018f3a:	f011 fae7 	bl	802a50c <93646682ea820ae310ba1b54d0fccca9d773749e>
 8018f3e:	f107 0314 	add.w	r3, r7, #20
 8018f42:	4618      	mov	r0, r3
 8018f44:	f000 fc92 	bl	801986c <isValidDataPacket>
 8018f48:	4603      	mov	r3, r0
 8018f4a:	f083 0301 	eor.w	r3, r3, #1
 8018f4e:	b2db      	uxtb	r3, r3
 8018f50:	2b00      	cmp	r3, #0
 8018f52:	f040 82be 	bne.w	80194d2 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6f2>
 8018f56:	2002      	movs	r0, #2
 8018f58:	f7f4 f850 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8018f5c:	4603      	mov	r3, r0
 8018f5e:	1c59      	adds	r1, r3, #1
 8018f60:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8018f64:	2208      	movs	r2, #8
 8018f66:	4618      	mov	r0, r3
 8018f68:	f7fd ffa7 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8018f6c:	f107 0314 	add.w	r3, r7, #20
 8018f70:	f103 012e 	add.w	r1, r3, #46	; 0x2e
 8018f74:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8018f78:	2208      	movs	r2, #8
 8018f7a:	4618      	mov	r0, r3
 8018f7c:	f7fd ff9d 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8018f80:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	; 0xe8
 8018f84:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 8018f88:	f001 fea0 	bl	801accc <18852a76524cbdb850c5d6a14b013c23dafcaddf>
 8018f8c:	4603      	mov	r3, r0
 8018f8e:	f083 0301 	eor.w	r3, r3, #1
 8018f92:	b2db      	uxtb	r3, r3
 8018f94:	2b00      	cmp	r3, #0
 8018f96:	f040 829e 	bne.w	80194d6 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6f6>
 8018f9a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018f9e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018fa2:	7dba      	ldrb	r2, [r7, #22]
 8018fa4:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 8018fa8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018fac:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018fb0:	7f7a      	ldrb	r2, [r7, #29]
 8018fb2:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 8018fb6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018fba:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8018fbe:	3341      	adds	r3, #65	; 0x41
 8018fc0:	461a      	mov	r2, r3
 8018fc2:	f107 0341 	add.w	r3, r7, #65	; 0x41
 8018fc6:	681d      	ldr	r5, [r3, #0]
 8018fc8:	685c      	ldr	r4, [r3, #4]
 8018fca:	6898      	ldr	r0, [r3, #8]
 8018fcc:	68d9      	ldr	r1, [r3, #12]
 8018fce:	6015      	str	r5, [r2, #0]
 8018fd0:	6054      	str	r4, [r2, #4]
 8018fd2:	6090      	str	r0, [r2, #8]
 8018fd4:	60d1      	str	r1, [r2, #12]
 8018fd6:	7c1b      	ldrb	r3, [r3, #16]
 8018fd8:	7413      	strb	r3, [r2, #16]
 8018fda:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8018fde:	f8d3 4184 	ldr.w	r4, [r3, #388]	; 0x184
 8018fe2:	f004 fc79 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 8018fe6:	4603      	mov	r3, r0
 8018fe8:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 8018fec:	f107 0314 	add.w	r3, r7, #20
 8018ff0:	331c      	adds	r3, #28
 8018ff2:	4618      	mov	r0, r3
 8018ff4:	f7f6 f894 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8018ff8:	4603      	mov	r3, r0
 8018ffa:	2b00      	cmp	r3, #0
 8018ffc:	d035      	beq.n	801906a <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x28a>
 8018ffe:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019002:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019006:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801900a:	2b01      	cmp	r3, #1
 801900c:	d02d      	beq.n	801906a <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x28a>
 801900e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019012:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019016:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801901a:	2b03      	cmp	r3, #3
 801901c:	f040 825d 	bne.w	80194da <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6fa>
 8019020:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8019024:	2200      	movs	r2, #0
 8019026:	601a      	str	r2, [r3, #0]
 8019028:	605a      	str	r2, [r3, #4]
 801902a:	609a      	str	r2, [r3, #8]
 801902c:	60da      	str	r2, [r3, #12]
 801902e:	741a      	strb	r2, [r3, #16]
 8019030:	2302      	movs	r3, #2
 8019032:	f887 30b8 	strb.w	r3, [r7, #184]	; 0xb8
 8019036:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 801903a:	3301      	adds	r3, #1
 801903c:	4619      	mov	r1, r3
 801903e:	2000      	movs	r0, #0
 8019040:	f7f5 f896 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8019044:	4603      	mov	r3, r0
 8019046:	2b00      	cmp	r3, #0
 8019048:	f000 8249 	beq.w	80194de <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6fe>
 801904c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019050:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019054:	3341      	adds	r3, #65	; 0x41
 8019056:	f107 02b8 	add.w	r2, r7, #184	; 0xb8
 801905a:	4611      	mov	r1, r2
 801905c:	4618      	mov	r0, r3
 801905e:	f7f6 f965 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8019062:	4603      	mov	r3, r0
 8019064:	2b00      	cmp	r3, #0
 8019066:	f000 823c 	beq.w	80194e2 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x702>
 801906a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801906e:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
 8019072:	2b00      	cmp	r3, #0
 8019074:	d010      	beq.n	8019098 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x2b8>
 8019076:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801907a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801907e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8019082:	2b00      	cmp	r3, #0
 8019084:	d008      	beq.n	8019098 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x2b8>
 8019086:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801908a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801908e:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8019092:	2b05      	cmp	r3, #5
 8019094:	f000 8227 	beq.w	80194e6 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x706>
 8019098:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801909c:	f103 0231 	add.w	r2, r3, #49	; 0x31
 80190a0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80190a4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80190a8:	4619      	mov	r1, r3
 80190aa:	4610      	mov	r0, r2
 80190ac:	f7fd fda6 	bl	8016bfc <ccaf3079fe06f6d98cd1712d3ed21403c04581f9>
 80190b0:	4603      	mov	r3, r0
 80190b2:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
 80190b6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80190ba:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
 80190be:	f083 0301 	eor.w	r3, r3, #1
 80190c2:	b2db      	uxtb	r3, r3
 80190c4:	2b00      	cmp	r3, #0
 80190c6:	d037      	beq.n	8019138 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x358>
 80190c8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80190cc:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
 80190d0:	f083 0301 	eor.w	r3, r3, #1
 80190d4:	b2db      	uxtb	r3, r3
 80190d6:	2b00      	cmp	r3, #0
 80190d8:	d02e      	beq.n	8019138 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x358>
 80190da:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80190de:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80190e2:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80190e6:	2b05      	cmp	r3, #5
 80190e8:	d126      	bne.n	8019138 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x358>
 80190ea:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 80190ee:	2b00      	cmp	r3, #0
 80190f0:	d016      	beq.n	8019120 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x340>
 80190f2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80190f6:	2201      	movs	r2, #1
 80190f8:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 80190fc:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8019100:	4618      	mov	r0, r3
 8019102:	f7f9 f9cb 	bl	801249c <7d0846c279c7703537dc22d139b898222dc42c28>
 8019106:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801910a:	4618      	mov	r0, r3
 801910c:	f00f fc7e 	bl	8028a0c <6a7c8072467648b34afad307e6f084585ae97774>
 8019110:	e012      	b.n	8019138 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x358>
 8019112:	bf00      	nop
 8019114:	20000040 	.word	0x20000040
 8019118:	0802f8b0 	.word	0x0802f8b0
 801911c:	0802f8b8 	.word	0x0802f8b8
 8019120:	f7f8 fcf6 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 8019124:	4603      	mov	r3, r0
 8019126:	2100      	movs	r1, #0
 8019128:	4618      	mov	r0, r3
 801912a:	f7f9 fb93 	bl	8012854 <9506f9c37a945216115ab5227293f46163fc6230>
 801912e:	4603      	mov	r3, r0
 8019130:	2b00      	cmp	r3, #0
 8019132:	d001      	beq.n	8019138 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x358>
 8019134:	f00f fca2 	bl	8028a7c <d6f04be9d8ad12cb38262f1bba36a144854d1588>
 8019138:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 801913c:	f083 0301 	eor.w	r3, r3, #1
 8019140:	b2db      	uxtb	r3, r3
 8019142:	2b00      	cmp	r3, #0
 8019144:	f040 81d1 	bne.w	80194ea <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x70a>
 8019148:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801914c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019150:	7d7a      	ldrb	r2, [r7, #21]
 8019152:	4611      	mov	r1, r2
 8019154:	4618      	mov	r0, r3
 8019156:	f010 f9d5 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 801915a:	2300      	movs	r3, #0
 801915c:	f8a7 30de 	strh.w	r3, [r7, #222]	; 0xde
 8019160:	7efb      	ldrb	r3, [r7, #27]
 8019162:	2b00      	cmp	r3, #0
 8019164:	d021      	beq.n	80191aa <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x3ca>
 8019166:	7dbb      	ldrb	r3, [r7, #22]
 8019168:	2b00      	cmp	r3, #0
 801916a:	d11e      	bne.n	80191aa <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x3ca>
 801916c:	2004      	movs	r0, #4
 801916e:	f7f3 ff45 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8019172:	4602      	mov	r2, r0
 8019174:	f107 0314 	add.w	r3, r7, #20
 8019178:	330b      	adds	r3, #11
 801917a:	4611      	mov	r1, r2
 801917c:	4618      	mov	r0, r3
 801917e:	f7f6 f8d5 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8019182:	4603      	mov	r3, r0
 8019184:	2b00      	cmp	r3, #0
 8019186:	d010      	beq.n	80191aa <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x3ca>
 8019188:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801918c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019190:	f107 02de 	add.w	r2, r7, #222	; 0xde
 8019194:	4611      	mov	r1, r2
 8019196:	4618      	mov	r0, r3
 8019198:	f7fe fed6 	bl	8017f48 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb>
 801919c:	4603      	mov	r3, r0
 801919e:	f083 0301 	eor.w	r3, r3, #1
 80191a2:	b2db      	uxtb	r3, r3
 80191a4:	2b00      	cmp	r3, #0
 80191a6:	f040 81a2 	bne.w	80194ee <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x70e>
 80191aa:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80191ae:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80191b2:	f8b7 20de 	ldrh.w	r2, [r7, #222]	; 0xde
 80191b6:	b2d2      	uxtb	r2, r2
 80191b8:	4611      	mov	r1, r2
 80191ba:	4618      	mov	r0, r3
 80191bc:	f010 f9a2 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80191c0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80191c4:	f507 7288 	add.w	r2, r7, #272	; 0x110
 80191c8:	f5a2 7282 	sub.w	r2, r2, #260	; 0x104
 80191cc:	6812      	ldr	r2, [r2, #0]
 80191ce:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 80191d2:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80191d6:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 80191da:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 80191de:	460b      	mov	r3, r1
 80191e0:	4690      	mov	r8, r2
 80191e2:	4699      	mov	r9, r3
 80191e4:	f004 fce8 	bl	801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>
 80191e8:	4603      	mov	r3, r0
 80191ea:	469a      	mov	sl, r3
 80191ec:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80191f0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80191f2:	469b      	mov	fp, r3
 80191f4:	f004 fb70 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 80191f8:	4603      	mov	r3, r0
 80191fa:	60bb      	str	r3, [r7, #8]
 80191fc:	7dbe      	ldrb	r6, [r7, #22]
 80191fe:	f997 20f0 	ldrsb.w	r2, [r7, #240]	; 0xf0
 8019202:	607a      	str	r2, [r7, #4]
 8019204:	f8d7 10f4 	ldr.w	r1, [r7, #244]	; 0xf4
 8019208:	6039      	str	r1, [r7, #0]
 801920a:	f107 0314 	add.w	r3, r7, #20
 801920e:	331c      	adds	r3, #28
 8019210:	4618      	mov	r0, r3
 8019212:	f7f5 fef7 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8019216:	4604      	mov	r4, r0
 8019218:	460d      	mov	r5, r1
 801921a:	f107 0314 	add.w	r3, r7, #20
 801921e:	332d      	adds	r3, #45	; 0x2d
 8019220:	4618      	mov	r0, r3
 8019222:	f7f5 feef 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8019226:	4602      	mov	r2, r0
 8019228:	460b      	mov	r3, r1
 801922a:	2100      	movs	r1, #0
 801922c:	9108      	str	r1, [sp, #32]
 801922e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8019232:	e9cd 4504 	strd	r4, r5, [sp, #16]
 8019236:	6839      	ldr	r1, [r7, #0]
 8019238:	9103      	str	r1, [sp, #12]
 801923a:	687a      	ldr	r2, [r7, #4]
 801923c:	9202      	str	r2, [sp, #8]
 801923e:	9601      	str	r6, [sp, #4]
 8019240:	68bb      	ldr	r3, [r7, #8]
 8019242:	9300      	str	r3, [sp, #0]
 8019244:	465b      	mov	r3, fp
 8019246:	4652      	mov	r2, sl
 8019248:	4640      	mov	r0, r8
 801924a:	4649      	mov	r1, r9
 801924c:	f00f fe10 	bl	8028e70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f>
 8019250:	7e7b      	ldrb	r3, [r7, #25]
 8019252:	2b00      	cmp	r3, #0
 8019254:	f000 80df 	beq.w	8019416 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x636>
 8019258:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801925c:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8019260:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019264:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8019268:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801926c:	f8d3 31e8 	ldr.w	r3, [r3, #488]	; 0x1e8
 8019270:	441a      	add	r2, r3
 8019272:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019276:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801927a:	2100      	movs	r1, #0
 801927c:	9101      	str	r1, [sp, #4]
 801927e:	49ab      	ldr	r1, [pc, #684]	; (801952c <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x74c>)
 8019280:	9100      	str	r1, [sp, #0]
 8019282:	2101      	movs	r1, #1
 8019284:	f7f8 fb32 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8019288:	2031      	movs	r0, #49	; 0x31
 801928a:	f7f6 fa53 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 801928e:	4602      	mov	r2, r0
 8019290:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019294:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
 8019298:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801929c:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192a0:	2b00      	cmp	r3, #0
 80192a2:	f000 8126 	beq.w	80194f2 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x712>
 80192a6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192aa:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192ae:	2231      	movs	r2, #49	; 0x31
 80192b0:	701a      	strb	r2, [r3, #0]
 80192b2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192b6:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192ba:	2231      	movs	r2, #49	; 0x31
 80192bc:	705a      	strb	r2, [r3, #1]
 80192be:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192c2:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192c6:	2202      	movs	r2, #2
 80192c8:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 80192cc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192d0:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 80192d4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192d8:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192dc:	f892 2053 	ldrb.w	r2, [r2, #83]	; 0x53
 80192e0:	f883 2053 	strb.w	r2, [r3, #83]	; 0x53
 80192e4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192e8:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 80192ec:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80192f0:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80192f4:	f892 20a1 	ldrb.w	r2, [r2, #161]	; 0xa1
 80192f8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80192fc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019300:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8019304:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019308:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 801930c:	f892 20a2 	ldrb.w	r2, [r2, #162]	; 0xa2
 8019310:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 8019314:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019318:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 801931c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019320:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 8019324:	f892 20a3 	ldrb.w	r2, [r2, #163]	; 0xa3
 8019328:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 801932c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019330:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8019334:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019338:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 801933c:	3341      	adds	r3, #65	; 0x41
 801933e:	3241      	adds	r2, #65	; 0x41
 8019340:	6815      	ldr	r5, [r2, #0]
 8019342:	6854      	ldr	r4, [r2, #4]
 8019344:	6890      	ldr	r0, [r2, #8]
 8019346:	68d1      	ldr	r1, [r2, #12]
 8019348:	601d      	str	r5, [r3, #0]
 801934a:	605c      	str	r4, [r3, #4]
 801934c:	6098      	str	r0, [r3, #8]
 801934e:	60d9      	str	r1, [r3, #12]
 8019350:	7c12      	ldrb	r2, [r2, #16]
 8019352:	741a      	strb	r2, [r3, #16]
 8019354:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019358:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
 801935c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019360:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 8019364:	f893 4052 	ldrb.w	r4, [r3, #82]	; 0x52
 8019368:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801936c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019370:	f893 5053 	ldrb.w	r5, [r3, #83]	; 0x53
 8019374:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019378:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801937c:	3341      	adds	r3, #65	; 0x41
 801937e:	4a6c      	ldr	r2, [pc, #432]	; (8019530 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x750>)
 8019380:	6812      	ldr	r2, [r2, #0]
 8019382:	b291      	uxth	r1, r2
 8019384:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 8019388:	f8d2 2194 	ldr.w	r2, [r2, #404]	; 0x194
 801938c:	b292      	uxth	r2, r2
 801938e:	1a8a      	subs	r2, r1, r2
 8019390:	b292      	uxth	r2, r2
 8019392:	b212      	sxth	r2, r2
 8019394:	2100      	movs	r1, #0
 8019396:	9102      	str	r1, [sp, #8]
 8019398:	9201      	str	r2, [sp, #4]
 801939a:	9300      	str	r3, [sp, #0]
 801939c:	462b      	mov	r3, r5
 801939e:	2200      	movs	r2, #0
 80193a0:	4621      	mov	r1, r4
 80193a2:	f010 fea5 	bl	802a0f0 <984b363f625cd8cdfbde20196ca1e6fa15d151b4>
 80193a6:	4603      	mov	r3, r0
 80193a8:	f083 0301 	eor.w	r3, r3, #1
 80193ac:	b2db      	uxtb	r3, r3
 80193ae:	2b00      	cmp	r3, #0
 80193b0:	d00c      	beq.n	80193cc <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x5ec>
 80193b2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80193b6:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80193ba:	4618      	mov	r0, r3
 80193bc:	f7f6 fac6 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80193c0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80193c4:	2200      	movs	r2, #0
 80193c6:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
 80193ca:	e093      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80193cc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80193d0:	f103 0431 	add.w	r4, r3, #49	; 0x31
 80193d4:	2002      	movs	r0, #2
 80193d6:	f7f3 fe11 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80193da:	4603      	mov	r3, r0
 80193dc:	1c59      	adds	r1, r3, #1
 80193de:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80193e2:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80193e6:	461a      	mov	r2, r3
 80193e8:	4620      	mov	r0, r4
 80193ea:	f7fd fa79 	bl	80168e0 <628044ebadd5376fad8b3928b1093d9e8f1976ae>
 80193ee:	4603      	mov	r3, r0
 80193f0:	f083 0301 	eor.w	r3, r3, #1
 80193f4:	b2db      	uxtb	r3, r3
 80193f6:	2b00      	cmp	r3, #0
 80193f8:	f000 8091 	beq.w	801951e <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x73e>
 80193fc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019400:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 8019404:	4618      	mov	r0, r3
 8019406:	f7f6 faa1 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801940a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801940e:	2200      	movs	r2, #0
 8019410:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
 8019414:	e06e      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 8019416:	f7f3 fdad 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 801941a:	4603      	mov	r3, r0
 801941c:	f083 0301 	eor.w	r3, r3, #1
 8019420:	b2db      	uxtb	r3, r3
 8019422:	2b00      	cmp	r3, #0
 8019424:	d044      	beq.n	80194b0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6d0>
 8019426:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801942a:	2200      	movs	r2, #0
 801942c:	601a      	str	r2, [r3, #0]
 801942e:	605a      	str	r2, [r3, #4]
 8019430:	609a      	str	r2, [r3, #8]
 8019432:	60da      	str	r2, [r3, #12]
 8019434:	741a      	strb	r2, [r3, #16]
 8019436:	2302      	movs	r3, #2
 8019438:	f887 3068 	strb.w	r3, [r7, #104]	; 0x68
 801943c:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8019440:	1c5a      	adds	r2, r3, #1
 8019442:	f107 037b 	add.w	r3, r7, #123	; 0x7b
 8019446:	4611      	mov	r1, r2
 8019448:	4618      	mov	r0, r3
 801944a:	f7f4 fe91 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801944e:	4603      	mov	r3, r0
 8019450:	2b00      	cmp	r3, #0
 8019452:	d026      	beq.n	80194a2 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6c2>
 8019454:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019458:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801945c:	f103 0241 	add.w	r2, r3, #65	; 0x41
 8019460:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8019464:	4611      	mov	r1, r2
 8019466:	4618      	mov	r0, r3
 8019468:	f7f5 ff60 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801946c:	4603      	mov	r3, r0
 801946e:	2b00      	cmp	r3, #0
 8019470:	d007      	beq.n	8019482 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6a2>
 8019472:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019476:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 801947a:	4618      	mov	r0, r3
 801947c:	f000 fdf6 	bl	801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>
 8019480:	e016      	b.n	80194b0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6d0>
 8019482:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8019486:	4618      	mov	r0, r3
 8019488:	f003 fefe 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801948c:	4603      	mov	r3, r0
 801948e:	2b00      	cmp	r3, #0
 8019490:	d10e      	bne.n	80194b0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6d0>
 8019492:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019496:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 801949a:	4618      	mov	r0, r3
 801949c:	f000 fde6 	bl	801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>
 80194a0:	e006      	b.n	80194b0 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x6d0>
 80194a2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80194a6:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 80194aa:	4618      	mov	r0, r3
 80194ac:	f000 fdde 	bl	801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>
 80194b0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80194b4:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80194b8:	4618      	mov	r0, r3
 80194ba:	f000 ff5b 	bl	801a374 <0d988943f13c94ad3b7af08357d5d17f9043f067>
 80194be:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80194c2:	2200      	movs	r2, #0
 80194c4:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 80194c8:	f001 fa10 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80194cc:	e028      	b.n	8019520 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x740>
 80194ce:	bf00      	nop
 80194d0:	e010      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194d2:	bf00      	nop
 80194d4:	e00e      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194d6:	bf00      	nop
 80194d8:	e00c      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194da:	bf00      	nop
 80194dc:	e00a      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194de:	bf00      	nop
 80194e0:	e008      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194e2:	bf00      	nop
 80194e4:	e006      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194e6:	bf00      	nop
 80194e8:	e004      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194ea:	bf00      	nop
 80194ec:	e002      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194ee:	bf00      	nop
 80194f0:	e000      	b.n	80194f4 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x714>
 80194f2:	bf00      	nop
 80194f4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80194f8:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 80194fc:	2b00      	cmp	r3, #0
 80194fe:	d00b      	beq.n	8019518 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x738>
 8019500:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019504:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019508:	4618      	mov	r0, r3
 801950a:	f7f6 fa1f 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801950e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8019512:	2200      	movs	r2, #0
 8019514:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 8019518:	f001 f9e8 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801951c:	e000      	b.n	8019520 <83d88540f7d4b89e9c3eaa07c396c9c08fef74b3+0x740>
 801951e:	bf00      	nop
 8019520:	f507 778a 	add.w	r7, r7, #276	; 0x114
 8019524:	46bd      	mov	sp, r7
 8019526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801952a:	bf00      	nop
 801952c:	08017605 	.word	0x08017605
 8019530:	080318ac 	.word	0x080318ac

08019534 <activity_ri6>:
 8019534:	b580      	push	{r7, lr}
 8019536:	b086      	sub	sp, #24
 8019538:	af02      	add	r7, sp, #8
 801953a:	4b23      	ldr	r3, [pc, #140]	; (80195c8 <activity_ri6+0x94>)
 801953c:	681b      	ldr	r3, [r3, #0]
 801953e:	60fb      	str	r3, [r7, #12]
 8019540:	2015      	movs	r0, #21
 8019542:	f001 f9b5 	bl	801a8b0 <setState>
 8019546:	68fb      	ldr	r3, [r7, #12]
 8019548:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 801954c:	68fb      	ldr	r3, [r7, #12]
 801954e:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 8019552:	68fb      	ldr	r3, [r7, #12]
 8019554:	f8d3 31ec 	ldr.w	r3, [r3, #492]	; 0x1ec
 8019558:	441a      	add	r2, r3
 801955a:	68fb      	ldr	r3, [r7, #12]
 801955c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8019560:	2100      	movs	r1, #0
 8019562:	9101      	str	r1, [sp, #4]
 8019564:	4919      	ldr	r1, [pc, #100]	; (80195cc <activity_ri6+0x98>)
 8019566:	9100      	str	r1, [sp, #0]
 8019568:	2101      	movs	r1, #1
 801956a:	f7f8 f9bf 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801956e:	2001      	movs	r0, #1
 8019570:	f000 ff84 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 8019574:	4b14      	ldr	r3, [pc, #80]	; (80195c8 <activity_ri6+0x94>)
 8019576:	681b      	ldr	r3, [r3, #0]
 8019578:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 801957c:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8019580:	60bb      	str	r3, [r7, #8]
 8019582:	68bb      	ldr	r3, [r7, #8]
 8019584:	2b00      	cmp	r3, #0
 8019586:	d002      	beq.n	801958e <activity_ri6+0x5a>
 8019588:	68bb      	ldr	r3, [r7, #8]
 801958a:	2001      	movs	r0, #1
 801958c:	4798      	blx	r3
 801958e:	68fb      	ldr	r3, [r7, #12]
 8019590:	f893 0198 	ldrb.w	r0, [r3, #408]	; 0x198
 8019594:	68fb      	ldr	r3, [r7, #12]
 8019596:	f993 1199 	ldrsb.w	r1, [r3, #409]	; 0x199
 801959a:	68fb      	ldr	r3, [r7, #12]
 801959c:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80195a0:	685a      	ldr	r2, [r3, #4]
 80195a2:	68fb      	ldr	r3, [r7, #12]
 80195a4:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80195a8:	7a1b      	ldrb	r3, [r3, #8]
 80195aa:	f7ec ff31 	bl	8006410 <EMBENET_RADIO_TxEnable>
 80195ae:	68bb      	ldr	r3, [r7, #8]
 80195b0:	2b00      	cmp	r3, #0
 80195b2:	d002      	beq.n	80195ba <activity_ri6+0x86>
 80195b4:	68bb      	ldr	r3, [r7, #8]
 80195b6:	2000      	movs	r0, #0
 80195b8:	4798      	blx	r3
 80195ba:	2016      	movs	r0, #22
 80195bc:	f001 f978 	bl	801a8b0 <setState>
 80195c0:	bf00      	nop
 80195c2:	3710      	adds	r7, #16
 80195c4:	46bd      	mov	sp, r7
 80195c6:	bd80      	pop	{r7, pc}
 80195c8:	20000040 	.word	0x20000040
 80195cc:	08017605 	.word	0x08017605

080195d0 <activity_rie4>:
 80195d0:	b580      	push	{r7, lr}
 80195d2:	b084      	sub	sp, #16
 80195d4:	af00      	add	r7, sp, #0
 80195d6:	f001 f989 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80195da:	4a09      	ldr	r2, [pc, #36]	; (8019600 <activity_rie4+0x30>)
 80195dc:	463b      	mov	r3, r7
 80195de:	e892 0003 	ldmia.w	r2, {r0, r1}
 80195e2:	e883 0003 	stmia.w	r3, {r0, r1}
 80195e6:	4b07      	ldr	r3, [pc, #28]	; (8019604 <activity_rie4+0x34>)
 80195e8:	681b      	ldr	r3, [r3, #0]
 80195ea:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 80195ee:	4a06      	ldr	r2, [pc, #24]	; (8019608 <activity_rie4+0x38>)
 80195f0:	4639      	mov	r1, r7
 80195f2:	c903      	ldmia	r1, {r0, r1}
 80195f4:	f7fb fe08 	bl	8015208 <LOGGER_PrintLine>
 80195f8:	bf00      	nop
 80195fa:	3710      	adds	r7, #16
 80195fc:	46bd      	mov	sp, r7
 80195fe:	bd80      	pop	{r7, pc}
 8019600:	0802f900 	.word	0x0802f900
 8019604:	20000040 	.word	0x20000040
 8019608:	0802fa0c 	.word	0x0802fa0c

0801960c <activity_ri7>:
 801960c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019610:	b093      	sub	sp, #76	; 0x4c
 8019612:	af0a      	add	r7, sp, #40	; 0x28
 8019614:	4b3e      	ldr	r3, [pc, #248]	; (8019710 <activity_ri7+0x104>)
 8019616:	681b      	ldr	r3, [r3, #0]
 8019618:	61fb      	str	r3, [r7, #28]
 801961a:	2017      	movs	r0, #23
 801961c:	f001 f948 	bl	801a8b0 <setState>
 8019620:	69fb      	ldr	r3, [r7, #28]
 8019622:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8019626:	69fb      	ldr	r3, [r7, #28]
 8019628:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 801962c:	69fb      	ldr	r3, [r7, #28]
 801962e:	f8d3 31f0 	ldr.w	r3, [r3, #496]	; 0x1f0
 8019632:	441a      	add	r2, r3
 8019634:	69fb      	ldr	r3, [r7, #28]
 8019636:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801963a:	2100      	movs	r1, #0
 801963c:	9101      	str	r1, [sp, #4]
 801963e:	4935      	ldr	r1, [pc, #212]	; (8019714 <activity_ri7+0x108>)
 8019640:	9100      	str	r1, [sp, #0]
 8019642:	2101      	movs	r1, #1
 8019644:	f7f8 f952 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8019648:	2002      	movs	r0, #2
 801964a:	f000 ff17 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 801964e:	4b30      	ldr	r3, [pc, #192]	; (8019710 <activity_ri7+0x104>)
 8019650:	681b      	ldr	r3, [r3, #0]
 8019652:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8019656:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801965a:	61bb      	str	r3, [r7, #24]
 801965c:	69bb      	ldr	r3, [r7, #24]
 801965e:	2b00      	cmp	r3, #0
 8019660:	d002      	beq.n	8019668 <activity_ri7+0x5c>
 8019662:	69bb      	ldr	r3, [r7, #24]
 8019664:	2001      	movs	r0, #1
 8019666:	4798      	blx	r3
 8019668:	f7ec ff08 	bl	800647c <EMBENET_RADIO_TxNow>
 801966c:	69bb      	ldr	r3, [r7, #24]
 801966e:	2b00      	cmp	r3, #0
 8019670:	d002      	beq.n	8019678 <activity_ri7+0x6c>
 8019672:	69bb      	ldr	r3, [r7, #24]
 8019674:	2000      	movs	r0, #0
 8019676:	4798      	blx	r3
 8019678:	69f9      	ldr	r1, [r7, #28]
 801967a:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 801967e:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 8019682:	460b      	mov	r3, r1
 8019684:	4690      	mov	r8, r2
 8019686:	4699      	mov	r9, r3
 8019688:	f004 fa96 	bl	801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>
 801968c:	4603      	mov	r3, r0
 801968e:	469a      	mov	sl, r3
 8019690:	69fb      	ldr	r3, [r7, #28]
 8019692:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8019694:	469b      	mov	fp, r3
 8019696:	f004 f91f 	bl	801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>
 801969a:	4603      	mov	r3, r0
 801969c:	60fb      	str	r3, [r7, #12]
 801969e:	69fb      	ldr	r3, [r7, #28]
 80196a0:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80196a4:	f893 6052 	ldrb.w	r6, [r3, #82]	; 0x52
 80196a8:	69fb      	ldr	r3, [r7, #28]
 80196aa:	f993 2199 	ldrsb.w	r2, [r3, #409]	; 0x199
 80196ae:	60ba      	str	r2, [r7, #8]
 80196b0:	69fb      	ldr	r3, [r7, #28]
 80196b2:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80196b6:	7a1b      	ldrb	r3, [r3, #8]
 80196b8:	607b      	str	r3, [r7, #4]
 80196ba:	69fb      	ldr	r3, [r7, #28]
 80196bc:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 80196c0:	3341      	adds	r3, #65	; 0x41
 80196c2:	4618      	mov	r0, r3
 80196c4:	f7f5 fc9e 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 80196c8:	4604      	mov	r4, r0
 80196ca:	460d      	mov	r5, r1
 80196cc:	2002      	movs	r0, #2
 80196ce:	f7f3 fc95 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80196d2:	4603      	mov	r3, r0
 80196d4:	4618      	mov	r0, r3
 80196d6:	f7f5 fc95 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 80196da:	4602      	mov	r2, r0
 80196dc:	460b      	mov	r3, r1
 80196de:	2101      	movs	r1, #1
 80196e0:	9108      	str	r1, [sp, #32]
 80196e2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80196e6:	e9cd 4504 	strd	r4, r5, [sp, #16]
 80196ea:	6879      	ldr	r1, [r7, #4]
 80196ec:	9103      	str	r1, [sp, #12]
 80196ee:	68ba      	ldr	r2, [r7, #8]
 80196f0:	9202      	str	r2, [sp, #8]
 80196f2:	9601      	str	r6, [sp, #4]
 80196f4:	68fb      	ldr	r3, [r7, #12]
 80196f6:	9300      	str	r3, [sp, #0]
 80196f8:	465b      	mov	r3, fp
 80196fa:	4652      	mov	r2, sl
 80196fc:	4640      	mov	r0, r8
 80196fe:	4649      	mov	r1, r9
 8019700:	f00f fbb6 	bl	8028e70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f>
 8019704:	bf00      	nop
 8019706:	3724      	adds	r7, #36	; 0x24
 8019708:	46bd      	mov	sp, r7
 801970a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801970e:	bf00      	nop
 8019710:	20000040 	.word	0x20000040
 8019714:	08017605 	.word	0x08017605

08019718 <activity_rie5>:
 8019718:	b580      	push	{r7, lr}
 801971a:	b084      	sub	sp, #16
 801971c:	af00      	add	r7, sp, #0
 801971e:	f001 f8e5 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8019722:	4a09      	ldr	r2, [pc, #36]	; (8019748 <activity_rie5+0x30>)
 8019724:	463b      	mov	r3, r7
 8019726:	e892 0003 	ldmia.w	r2, {r0, r1}
 801972a:	e883 0003 	stmia.w	r3, {r0, r1}
 801972e:	4b07      	ldr	r3, [pc, #28]	; (801974c <activity_rie5+0x34>)
 8019730:	681b      	ldr	r3, [r3, #0]
 8019732:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 8019736:	4a06      	ldr	r2, [pc, #24]	; (8019750 <activity_rie5+0x38>)
 8019738:	4639      	mov	r1, r7
 801973a:	c903      	ldmia	r1, {r0, r1}
 801973c:	f7fb fd64 	bl	8015208 <LOGGER_PrintLine>
 8019740:	bf00      	nop
 8019742:	3710      	adds	r7, #16
 8019744:	46bd      	mov	sp, r7
 8019746:	bd80      	pop	{r7, pc}
 8019748:	0802f900 	.word	0x0802f900
 801974c:	20000040 	.word	0x20000040
 8019750:	0802fa40 	.word	0x0802fa40

08019754 <activity_ri8>:
 8019754:	b580      	push	{r7, lr}
 8019756:	b088      	sub	sp, #32
 8019758:	af02      	add	r7, sp, #8
 801975a:	6078      	str	r0, [r7, #4]
 801975c:	4b10      	ldr	r3, [pc, #64]	; (80197a0 <activity_ri8+0x4c>)
 801975e:	681b      	ldr	r3, [r3, #0]
 8019760:	617b      	str	r3, [r7, #20]
 8019762:	2018      	movs	r0, #24
 8019764:	f001 f8a4 	bl	801a8b0 <setState>
 8019768:	697b      	ldr	r3, [r7, #20]
 801976a:	687a      	ldr	r2, [r7, #4]
 801976c:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8019770:	697b      	ldr	r3, [r7, #20]
 8019772:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 8019776:	697b      	ldr	r3, [r7, #20]
 8019778:	f8d3 2190 	ldr.w	r2, [r3, #400]	; 0x190
 801977c:	4b09      	ldr	r3, [pc, #36]	; (80197a4 <activity_ri8+0x50>)
 801977e:	69db      	ldr	r3, [r3, #28]
 8019780:	441a      	add	r2, r3
 8019782:	697b      	ldr	r3, [r7, #20]
 8019784:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 8019788:	2100      	movs	r1, #0
 801978a:	9101      	str	r1, [sp, #4]
 801978c:	4906      	ldr	r1, [pc, #24]	; (80197a8 <activity_ri8+0x54>)
 801978e:	9100      	str	r1, [sp, #0]
 8019790:	2101      	movs	r1, #1
 8019792:	f7f8 f8ab 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 8019796:	bf00      	nop
 8019798:	3718      	adds	r7, #24
 801979a:	46bd      	mov	sp, r7
 801979c:	bd80      	pop	{r7, pc}
 801979e:	bf00      	nop
 80197a0:	20000040 	.word	0x20000040
 80197a4:	080318ac 	.word	0x080318ac
 80197a8:	08017605 	.word	0x08017605

080197ac <activity_rie6>:
 80197ac:	b580      	push	{r7, lr}
 80197ae:	b084      	sub	sp, #16
 80197b0:	af00      	add	r7, sp, #0
 80197b2:	f001 f89b 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 80197b6:	4a09      	ldr	r2, [pc, #36]	; (80197dc <activity_rie6+0x30>)
 80197b8:	463b      	mov	r3, r7
 80197ba:	e892 0003 	ldmia.w	r2, {r0, r1}
 80197be:	e883 0003 	stmia.w	r3, {r0, r1}
 80197c2:	4b07      	ldr	r3, [pc, #28]	; (80197e0 <activity_rie6+0x34>)
 80197c4:	681b      	ldr	r3, [r3, #0]
 80197c6:	f893 3198 	ldrb.w	r3, [r3, #408]	; 0x198
 80197ca:	4a06      	ldr	r2, [pc, #24]	; (80197e4 <activity_rie6+0x38>)
 80197cc:	4639      	mov	r1, r7
 80197ce:	c903      	ldmia	r1, {r0, r1}
 80197d0:	f7fb fd1a 	bl	8015208 <LOGGER_PrintLine>
 80197d4:	bf00      	nop
 80197d6:	3710      	adds	r7, #16
 80197d8:	46bd      	mov	sp, r7
 80197da:	bd80      	pop	{r7, pc}
 80197dc:	0802f900 	.word	0x0802f900
 80197e0:	20000040 	.word	0x20000040
 80197e4:	0802fa6c 	.word	0x0802fa6c

080197e8 <activity_ri9>:
 80197e8:	b580      	push	{r7, lr}
 80197ea:	b086      	sub	sp, #24
 80197ec:	af00      	add	r7, sp, #0
 80197ee:	6078      	str	r0, [r7, #4]
 80197f0:	4b1d      	ldr	r3, [pc, #116]	; (8019868 <activity_ri9+0x80>)
 80197f2:	681b      	ldr	r3, [r3, #0]
 80197f4:	617b      	str	r3, [r7, #20]
 80197f6:	2019      	movs	r0, #25
 80197f8:	f001 f85a 	bl	801a8b0 <setState>
 80197fc:	697b      	ldr	r3, [r7, #20]
 80197fe:	687a      	ldr	r2, [r7, #4]
 8019800:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 8019804:	697b      	ldr	r3, [r7, #20]
 8019806:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 801980a:	4618      	mov	r0, r3
 801980c:	f7f6 f89e 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8019810:	697b      	ldr	r3, [r7, #20]
 8019812:	2200      	movs	r2, #0
 8019814:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
 8019818:	f7f3 fbac 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 801981c:	4603      	mov	r3, r0
 801981e:	f083 0301 	eor.w	r3, r3, #1
 8019822:	b2db      	uxtb	r3, r3
 8019824:	2b00      	cmp	r3, #0
 8019826:	d00f      	beq.n	8019848 <activity_ri9+0x60>
 8019828:	697b      	ldr	r3, [r7, #20]
 801982a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801982e:	3342      	adds	r3, #66	; 0x42
 8019830:	4618      	mov	r0, r3
 8019832:	f7f4 fcc9 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 8019836:	4603      	mov	r3, r0
 8019838:	2b00      	cmp	r3, #0
 801983a:	d005      	beq.n	8019848 <activity_ri9+0x60>
 801983c:	697b      	ldr	r3, [r7, #20]
 801983e:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8019842:	4618      	mov	r0, r3
 8019844:	f000 fc12 	bl	801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>
 8019848:	697b      	ldr	r3, [r7, #20]
 801984a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801984e:	4618      	mov	r0, r3
 8019850:	f000 fd90 	bl	801a374 <0d988943f13c94ad3b7af08357d5d17f9043f067>
 8019854:	697b      	ldr	r3, [r7, #20]
 8019856:	2200      	movs	r2, #0
 8019858:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 801985c:	f001 f846 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 8019860:	bf00      	nop
 8019862:	3718      	adds	r7, #24
 8019864:	46bd      	mov	sp, r7
 8019866:	bd80      	pop	{r7, pc}
 8019868:	20000040 	.word	0x20000040

0801986c <isValidDataPacket>:
 801986c:	b590      	push	{r4, r7, lr}
 801986e:	b08b      	sub	sp, #44	; 0x2c
 8019870:	af00      	add	r7, sp, #0
 8019872:	6078      	str	r0, [r7, #4]
 8019874:	687b      	ldr	r3, [r7, #4]
 8019876:	781b      	ldrb	r3, [r3, #0]
 8019878:	2b00      	cmp	r3, #0
 801987a:	d027      	beq.n	80198cc <isValidDataPacket+0x60>
 801987c:	687b      	ldr	r3, [r7, #4]
 801987e:	789b      	ldrb	r3, [r3, #2]
 8019880:	2b01      	cmp	r3, #1
 8019882:	d003      	beq.n	801988c <isValidDataPacket+0x20>
 8019884:	687b      	ldr	r3, [r7, #4]
 8019886:	789b      	ldrb	r3, [r3, #2]
 8019888:	2b00      	cmp	r3, #0
 801988a:	d11f      	bne.n	80198cc <isValidDataPacket+0x60>
 801988c:	687b      	ldr	r3, [r7, #4]
 801988e:	f103 040b 	add.w	r4, r3, #11
 8019892:	2004      	movs	r0, #4
 8019894:	f7f3 fbb2 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8019898:	4603      	mov	r3, r0
 801989a:	4619      	mov	r1, r3
 801989c:	4620      	mov	r0, r4
 801989e:	f7f5 fd45 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 80198a2:	4603      	mov	r3, r0
 80198a4:	2b00      	cmp	r3, #0
 80198a6:	d011      	beq.n	80198cc <isValidDataPacket+0x60>
 80198a8:	687b      	ldr	r3, [r7, #4]
 80198aa:	331c      	adds	r3, #28
 80198ac:	4618      	mov	r0, r3
 80198ae:	f7f5 fc37 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80198b2:	4603      	mov	r3, r0
 80198b4:	2b00      	cmp	r3, #0
 80198b6:	d107      	bne.n	80198c8 <isValidDataPacket+0x5c>
 80198b8:	687b      	ldr	r3, [r7, #4]
 80198ba:	331c      	adds	r3, #28
 80198bc:	4618      	mov	r0, r3
 80198be:	f7f3 fc25 	bl	800d10c <ef42a56931e541b0c8c1f2660a00aa81f857110a>
 80198c2:	4603      	mov	r3, r0
 80198c4:	2b00      	cmp	r3, #0
 80198c6:	d001      	beq.n	80198cc <isValidDataPacket+0x60>
 80198c8:	2301      	movs	r3, #1
 80198ca:	e000      	b.n	80198ce <isValidDataPacket+0x62>
 80198cc:	2300      	movs	r3, #0
 80198ce:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80198d2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80198d6:	f003 0301 	and.w	r3, r3, #1
 80198da:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80198de:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80198e2:	f083 0301 	eor.w	r3, r3, #1
 80198e6:	b2db      	uxtb	r3, r3
 80198e8:	2b00      	cmp	r3, #0
 80198ea:	d01b      	beq.n	8019924 <isValidDataPacket+0xb8>
 80198ec:	687b      	ldr	r3, [r7, #4]
 80198ee:	781b      	ldrb	r3, [r3, #0]
 80198f0:	f083 0301 	eor.w	r3, r3, #1
 80198f4:	b2db      	uxtb	r3, r3
 80198f6:	2b00      	cmp	r3, #0
 80198f8:	d114      	bne.n	8019924 <isValidDataPacket+0xb8>
 80198fa:	687b      	ldr	r3, [r7, #4]
 80198fc:	789b      	ldrb	r3, [r3, #2]
 80198fe:	2b01      	cmp	r3, #1
 8019900:	d003      	beq.n	801990a <isValidDataPacket+0x9e>
 8019902:	687b      	ldr	r3, [r7, #4]
 8019904:	789b      	ldrb	r3, [r3, #2]
 8019906:	2b00      	cmp	r3, #0
 8019908:	d10b      	bne.n	8019922 <isValidDataPacket+0xb6>
 801990a:	687b      	ldr	r3, [r7, #4]
 801990c:	f103 040b 	add.w	r4, r3, #11
 8019910:	2004      	movs	r0, #4
 8019912:	f7f3 fb73 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8019916:	4603      	mov	r3, r0
 8019918:	4619      	mov	r1, r3
 801991a:	4620      	mov	r0, r4
 801991c:	f7f5 fd06 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8019920:	e000      	b.n	8019924 <isValidDataPacket+0xb8>
 8019922:	bf00      	nop
 8019924:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019928:	4618      	mov	r0, r3
 801992a:	372c      	adds	r7, #44	; 0x2c
 801992c:	46bd      	mov	sp, r7
 801992e:	bd90      	pop	{r4, r7, pc}

08019930 <isValidAckPacket>:
 8019930:	b590      	push	{r4, r7, lr}
 8019932:	b087      	sub	sp, #28
 8019934:	af00      	add	r7, sp, #0
 8019936:	6078      	str	r0, [r7, #4]
 8019938:	6039      	str	r1, [r7, #0]
 801993a:	687b      	ldr	r3, [r7, #4]
 801993c:	781b      	ldrb	r3, [r3, #0]
 801993e:	2b00      	cmp	r3, #0
 8019940:	d02e      	beq.n	80199a0 <isValidAckPacket+0x70>
 8019942:	687b      	ldr	r3, [r7, #4]
 8019944:	789b      	ldrb	r3, [r3, #2]
 8019946:	2b02      	cmp	r3, #2
 8019948:	d12a      	bne.n	80199a0 <isValidAckPacket+0x70>
 801994a:	687b      	ldr	r3, [r7, #4]
 801994c:	7a5a      	ldrb	r2, [r3, #9]
 801994e:	683b      	ldr	r3, [r7, #0]
 8019950:	f893 3053 	ldrb.w	r3, [r3, #83]	; 0x53
 8019954:	429a      	cmp	r2, r3
 8019956:	d123      	bne.n	80199a0 <isValidAckPacket+0x70>
 8019958:	687b      	ldr	r3, [r7, #4]
 801995a:	f103 040b 	add.w	r4, r3, #11
 801995e:	2004      	movs	r0, #4
 8019960:	f7f3 fb4c 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8019964:	4603      	mov	r3, r0
 8019966:	4619      	mov	r1, r3
 8019968:	4620      	mov	r0, r4
 801996a:	f7f5 fcdf 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801996e:	4603      	mov	r3, r0
 8019970:	2b00      	cmp	r3, #0
 8019972:	d015      	beq.n	80199a0 <isValidAckPacket+0x70>
 8019974:	687b      	ldr	r3, [r7, #4]
 8019976:	331c      	adds	r3, #28
 8019978:	4618      	mov	r0, r3
 801997a:	f7f3 fbc7 	bl	800d10c <ef42a56931e541b0c8c1f2660a00aa81f857110a>
 801997e:	4603      	mov	r3, r0
 8019980:	2b00      	cmp	r3, #0
 8019982:	d00d      	beq.n	80199a0 <isValidAckPacket+0x70>
 8019984:	687b      	ldr	r3, [r7, #4]
 8019986:	f103 022d 	add.w	r2, r3, #45	; 0x2d
 801998a:	683b      	ldr	r3, [r7, #0]
 801998c:	3341      	adds	r3, #65	; 0x41
 801998e:	4619      	mov	r1, r3
 8019990:	4610      	mov	r0, r2
 8019992:	f7f5 fccb 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8019996:	4603      	mov	r3, r0
 8019998:	2b00      	cmp	r3, #0
 801999a:	d001      	beq.n	80199a0 <isValidAckPacket+0x70>
 801999c:	2301      	movs	r3, #1
 801999e:	e000      	b.n	80199a2 <isValidAckPacket+0x72>
 80199a0:	2300      	movs	r3, #0
 80199a2:	75fb      	strb	r3, [r7, #23]
 80199a4:	7dfb      	ldrb	r3, [r7, #23]
 80199a6:	f003 0301 	and.w	r3, r3, #1
 80199aa:	75fb      	strb	r3, [r7, #23]
 80199ac:	7dfb      	ldrb	r3, [r7, #23]
 80199ae:	4618      	mov	r0, r3
 80199b0:	371c      	adds	r7, #28
 80199b2:	46bd      	mov	sp, r7
 80199b4:	bd90      	pop	{r4, r7, pc}
	...

080199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>:
 80199b8:	b580      	push	{r7, lr}
 80199ba:	b084      	sub	sp, #16
 80199bc:	af00      	add	r7, sp, #0
 80199be:	6078      	str	r0, [r7, #4]
 80199c0:	f7ec fb46 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 80199c4:	4b0b      	ldr	r3, [pc, #44]	; (80199f4 <21f13ea89246a8f3ee5116c9b445be3be24e58a5+0x3c>)
 80199c6:	681a      	ldr	r2, [r3, #0]
 80199c8:	f107 0308 	add.w	r3, r7, #8
 80199cc:	3231      	adds	r2, #49	; 0x31
 80199ce:	6810      	ldr	r0, [r2, #0]
 80199d0:	6018      	str	r0, [r3, #0]
 80199d2:	7912      	ldrb	r2, [r2, #4]
 80199d4:	711a      	strb	r2, [r3, #4]
 80199d6:	f7ec fb5b 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 80199da:	687b      	ldr	r3, [r7, #4]
 80199dc:	461a      	mov	r2, r3
 80199de:	f107 0308 	add.w	r3, r7, #8
 80199e2:	6818      	ldr	r0, [r3, #0]
 80199e4:	6010      	str	r0, [r2, #0]
 80199e6:	791b      	ldrb	r3, [r3, #4]
 80199e8:	7113      	strb	r3, [r2, #4]
 80199ea:	6878      	ldr	r0, [r7, #4]
 80199ec:	3710      	adds	r7, #16
 80199ee:	46bd      	mov	sp, r7
 80199f0:	bd80      	pop	{r7, pc}
 80199f2:	bf00      	nop
 80199f4:	20000040 	.word	0x20000040

080199f8 <isValidSync>:
 80199f8:	b590      	push	{r4, r7, lr}
 80199fa:	b091      	sub	sp, #68	; 0x44
 80199fc:	af00      	add	r7, sp, #0
 80199fe:	6078      	str	r0, [r7, #4]
 8019a00:	6039      	str	r1, [r7, #0]
 8019a02:	4b5a      	ldr	r3, [pc, #360]	; (8019b6c <isValidSync+0x174>)
 8019a04:	681b      	ldr	r3, [r3, #0]
 8019a06:	63fb      	str	r3, [r7, #60]	; 0x3c
 8019a08:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019a0a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8019a0e:	2b00      	cmp	r3, #0
 8019a10:	d00f      	beq.n	8019a32 <isValidSync+0x3a>
 8019a12:	4a57      	ldr	r2, [pc, #348]	; (8019b70 <isValidSync+0x178>)
 8019a14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019a18:	e892 0003 	ldmia.w	r2, {r0, r1}
 8019a1c:	e883 0003 	stmia.w	r3, {r0, r1}
 8019a20:	4a54      	ldr	r2, [pc, #336]	; (8019b74 <isValidSync+0x17c>)
 8019a22:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019a26:	e893 0003 	ldmia.w	r3, {r0, r1}
 8019a2a:	f7fb fbed 	bl	8015208 <LOGGER_PrintLine>
 8019a2e:	2300      	movs	r3, #0
 8019a30:	e097      	b.n	8019b62 <isValidSync+0x16a>
 8019a32:	683b      	ldr	r3, [r7, #0]
 8019a34:	789b      	ldrb	r3, [r3, #2]
 8019a36:	2b00      	cmp	r3, #0
 8019a38:	d001      	beq.n	8019a3e <isValidSync+0x46>
 8019a3a:	2300      	movs	r3, #0
 8019a3c:	e091      	b.n	8019b62 <isValidSync+0x16a>
 8019a3e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019a40:	2201      	movs	r2, #1
 8019a42:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8019a46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019a48:	2200      	movs	r2, #0
 8019a4a:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 8019a4e:	683b      	ldr	r3, [r7, #0]
 8019a50:	330b      	adds	r3, #11
 8019a52:	4618      	mov	r0, r3
 8019a54:	f7f3 fb0a 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 8019a58:	683b      	ldr	r3, [r7, #0]
 8019a5a:	785b      	ldrb	r3, [r3, #1]
 8019a5c:	4619      	mov	r1, r3
 8019a5e:	6878      	ldr	r0, [r7, #4]
 8019a60:	f00f fd50 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8019a64:	2300      	movs	r3, #0
 8019a66:	873b      	strh	r3, [r7, #56]	; 0x38
 8019a68:	683b      	ldr	r3, [r7, #0]
 8019a6a:	781b      	ldrb	r3, [r3, #0]
 8019a6c:	f083 0301 	eor.w	r3, r3, #1
 8019a70:	b2db      	uxtb	r3, r3
 8019a72:	2b00      	cmp	r3, #0
 8019a74:	d116      	bne.n	8019aa4 <isValidSync+0xac>
 8019a76:	683b      	ldr	r3, [r7, #0]
 8019a78:	79db      	ldrb	r3, [r3, #7]
 8019a7a:	f083 0301 	eor.w	r3, r3, #1
 8019a7e:	b2db      	uxtb	r3, r3
 8019a80:	2b00      	cmp	r3, #0
 8019a82:	d10f      	bne.n	8019aa4 <isValidSync+0xac>
 8019a84:	683b      	ldr	r3, [r7, #0]
 8019a86:	789b      	ldrb	r3, [r3, #2]
 8019a88:	2b00      	cmp	r3, #0
 8019a8a:	d10b      	bne.n	8019aa4 <isValidSync+0xac>
 8019a8c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8019a90:	4619      	mov	r1, r3
 8019a92:	6878      	ldr	r0, [r7, #4]
 8019a94:	f7fe fa58 	bl	8017f48 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb>
 8019a98:	4603      	mov	r3, r0
 8019a9a:	f083 0301 	eor.w	r3, r3, #1
 8019a9e:	b2db      	uxtb	r3, r3
 8019aa0:	2b00      	cmp	r3, #0
 8019aa2:	d001      	beq.n	8019aa8 <isValidSync+0xb0>
 8019aa4:	2300      	movs	r3, #0
 8019aa6:	e05c      	b.n	8019b62 <isValidSync+0x16a>
 8019aa8:	683b      	ldr	r3, [r7, #0]
 8019aaa:	785b      	ldrb	r3, [r3, #1]
 8019aac:	4619      	mov	r1, r3
 8019aae:	6878      	ldr	r0, [r7, #4]
 8019ab0:	f00f fcf0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8019ab4:	4603      	mov	r3, r0
 8019ab6:	f083 0301 	eor.w	r3, r3, #1
 8019aba:	b2db      	uxtb	r3, r3
 8019abc:	2b00      	cmp	r3, #0
 8019abe:	d001      	beq.n	8019ac4 <isValidSync+0xcc>
 8019ac0:	2300      	movs	r3, #0
 8019ac2:	e04e      	b.n	8019b62 <isValidSync+0x16a>
 8019ac4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8019ac8:	2200      	movs	r2, #0
 8019aca:	601a      	str	r2, [r3, #0]
 8019acc:	809a      	strh	r2, [r3, #4]
 8019ace:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019ad0:	3331      	adds	r3, #49	; 0x31
 8019ad2:	6879      	ldr	r1, [r7, #4]
 8019ad4:	4618      	mov	r0, r3
 8019ad6:	f7fd f891 	bl	8016bfc <ccaf3079fe06f6d98cd1712d3ed21403c04581f9>
 8019ada:	4603      	mov	r3, r0
 8019adc:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8019ae0:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8019ae4:	f083 0301 	eor.w	r3, r3, #1
 8019ae8:	b2db      	uxtb	r3, r3
 8019aea:	2b00      	cmp	r3, #0
 8019aec:	d007      	beq.n	8019afe <isValidSync+0x106>
 8019aee:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8019af2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8019af6:	f002 ff03 	bl	801c900 <6759635076cb4c933592248ebd293b63832a7e9b>
 8019afa:	2300      	movs	r3, #0
 8019afc:	e031      	b.n	8019b62 <isValidSync+0x16a>
 8019afe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019b00:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8019b04:	683b      	ldr	r3, [r7, #0]
 8019b06:	785b      	ldrb	r3, [r3, #1]
 8019b08:	4619      	mov	r1, r3
 8019b0a:	4610      	mov	r0, r2
 8019b0c:	f00f fcfa 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8019b10:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8019b12:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019b16:	8f3a      	ldrh	r2, [r7, #56]	; 0x38
 8019b18:	b2d2      	uxtb	r2, r2
 8019b1a:	4611      	mov	r1, r2
 8019b1c:	4618      	mov	r0, r3
 8019b1e:	f00f fcf1 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8019b22:	683b      	ldr	r3, [r7, #0]
 8019b24:	f103 010c 	add.w	r1, r3, #12
 8019b28:	f107 032e 	add.w	r3, r7, #46	; 0x2e
 8019b2c:	2202      	movs	r2, #2
 8019b2e:	4618      	mov	r0, r3
 8019b30:	f7fd f9c3 	bl	8016eba <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8019b34:	8dfc      	ldrh	r4, [r7, #46]	; 0x2e
 8019b36:	f7f7 ffeb 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 8019b3a:	4603      	mov	r3, r0
 8019b3c:	4619      	mov	r1, r3
 8019b3e:	4620      	mov	r0, r4
 8019b40:	f7f8 fcd6 	bl	80124f0 <d492673eb40b0122449614ddec3203e781e2c714>
 8019b44:	4603      	mov	r3, r0
 8019b46:	f083 0301 	eor.w	r3, r3, #1
 8019b4a:	b2db      	uxtb	r3, r3
 8019b4c:	2b00      	cmp	r3, #0
 8019b4e:	d007      	beq.n	8019b60 <isValidSync+0x168>
 8019b50:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8019b54:	e893 0003 	ldmia.w	r3, {r0, r1}
 8019b58:	f002 fed2 	bl	801c900 <6759635076cb4c933592248ebd293b63832a7e9b>
 8019b5c:	2300      	movs	r3, #0
 8019b5e:	e000      	b.n	8019b62 <isValidSync+0x16a>
 8019b60:	2301      	movs	r3, #1
 8019b62:	4618      	mov	r0, r3
 8019b64:	3744      	adds	r7, #68	; 0x44
 8019b66:	46bd      	mov	sp, r7
 8019b68:	bd90      	pop	{r4, r7, pc}
 8019b6a:	bf00      	nop
 8019b6c:	20000040 	.word	0x20000040
 8019b70:	0802f8b0 	.word	0x0802f8b0
 8019b74:	0802fa9c 	.word	0x0802fa9c

08019b78 <processEb>:
 8019b78:	b580      	push	{r7, lr}
 8019b7a:	b090      	sub	sp, #64	; 0x40
 8019b7c:	af00      	add	r7, sp, #0
 8019b7e:	6078      	str	r0, [r7, #4]
 8019b80:	6039      	str	r1, [r7, #0]
 8019b82:	2300      	movs	r3, #0
 8019b84:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8019b88:	4ba6      	ldr	r3, [pc, #664]	; (8019e24 <processEb+0x2ac>)
 8019b8a:	681b      	ldr	r3, [r3, #0]
 8019b8c:	62bb      	str	r3, [r7, #40]	; 0x28
 8019b8e:	2300      	movs	r3, #0
 8019b90:	63bb      	str	r3, [r7, #56]	; 0x38
 8019b92:	e032      	b.n	8019bfa <processEb+0x82>
 8019b94:	687b      	ldr	r3, [r7, #4]
 8019b96:	685a      	ldr	r2, [r3, #4]
 8019b98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019b9a:	4413      	add	r3, r2
 8019b9c:	781b      	ldrb	r3, [r3, #0]
 8019b9e:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019ba0:	687b      	ldr	r3, [r7, #4]
 8019ba2:	685a      	ldr	r2, [r3, #4]
 8019ba4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019ba6:	3301      	adds	r3, #1
 8019ba8:	4413      	add	r3, r2
 8019baa:	781b      	ldrb	r3, [r3, #0]
 8019bac:	021b      	lsls	r3, r3, #8
 8019bae:	b29a      	uxth	r2, r3
 8019bb0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019bb2:	4313      	orrs	r3, r2
 8019bb4:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019bb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019bb8:	b2db      	uxtb	r3, r3
 8019bba:	3302      	adds	r3, #2
 8019bbc:	b2db      	uxtb	r3, r3
 8019bbe:	63bb      	str	r3, [r7, #56]	; 0x38
 8019bc0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019bc2:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8019bc6:	87fb      	strh	r3, [r7, #62]	; 0x3e
 8019bc8:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019bca:	12db      	asrs	r3, r3, #11
 8019bcc:	f003 030f 	and.w	r3, r3, #15
 8019bd0:	2b01      	cmp	r3, #1
 8019bd2:	d103      	bne.n	8019bdc <processEb+0x64>
 8019bd4:	f9b7 3026 	ldrsh.w	r3, [r7, #38]	; 0x26
 8019bd8:	2b00      	cmp	r3, #0
 8019bda:	db07      	blt.n	8019bec <processEb+0x74>
 8019bdc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019bde:	b2da      	uxtb	r2, r3
 8019be0:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8019be2:	b2db      	uxtb	r3, r3
 8019be4:	4413      	add	r3, r2
 8019be6:	b2db      	uxtb	r3, r3
 8019be8:	63bb      	str	r3, [r7, #56]	; 0x38
 8019bea:	e006      	b.n	8019bfa <processEb+0x82>
 8019bec:	2301      	movs	r3, #1
 8019bee:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8019bf2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019bf4:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8019bf8:	e005      	b.n	8019c06 <processEb+0x8e>
 8019bfa:	687b      	ldr	r3, [r7, #4]
 8019bfc:	7a1b      	ldrb	r3, [r3, #8]
 8019bfe:	461a      	mov	r2, r3
 8019c00:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019c02:	4293      	cmp	r3, r2
 8019c04:	d3c6      	bcc.n	8019b94 <processEb+0x1c>
 8019c06:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 8019c0a:	f083 0301 	eor.w	r3, r3, #1
 8019c0e:	b2db      	uxtb	r3, r3
 8019c10:	2b00      	cmp	r3, #0
 8019c12:	d001      	beq.n	8019c18 <processEb+0xa0>
 8019c14:	2300      	movs	r3, #0
 8019c16:	e200      	b.n	801a01a <processEb+0x4a2>
 8019c18:	2300      	movs	r3, #0
 8019c1a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8019c1e:	2300      	movs	r3, #0
 8019c20:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 8019c24:	2300      	movs	r3, #0
 8019c26:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 8019c2a:	2300      	movs	r3, #0
 8019c2c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8019c30:	2300      	movs	r3, #0
 8019c32:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8019c36:	e1a8      	b.n	8019f8a <processEb+0x412>
 8019c38:	687b      	ldr	r3, [r7, #4]
 8019c3a:	685a      	ldr	r2, [r3, #4]
 8019c3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019c3e:	4413      	add	r3, r2
 8019c40:	781b      	ldrb	r3, [r3, #0]
 8019c42:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019c44:	687b      	ldr	r3, [r7, #4]
 8019c46:	685a      	ldr	r2, [r3, #4]
 8019c48:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019c4a:	3301      	adds	r3, #1
 8019c4c:	4413      	add	r3, r2
 8019c4e:	781b      	ldrb	r3, [r3, #0]
 8019c50:	021b      	lsls	r3, r3, #8
 8019c52:	b29a      	uxth	r2, r3
 8019c54:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019c56:	4313      	orrs	r3, r2
 8019c58:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019c5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019c5c:	b2db      	uxtb	r3, r3
 8019c5e:	3302      	adds	r3, #2
 8019c60:	b2db      	uxtb	r3, r3
 8019c62:	63bb      	str	r3, [r7, #56]	; 0x38
 8019c64:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019c66:	0bdb      	lsrs	r3, r3, #15
 8019c68:	b29b      	uxth	r3, r3
 8019c6a:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8019c6e:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8019c72:	2b01      	cmp	r3, #1
 8019c74:	d122      	bne.n	8019cbc <processEb+0x144>
 8019c76:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019c78:	12db      	asrs	r3, r3, #11
 8019c7a:	b2db      	uxtb	r3, r3
 8019c7c:	f003 030f 	and.w	r3, r3, #15
 8019c80:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8019c84:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019c86:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 8019c8a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8019c8e:	2b09      	cmp	r3, #9
 8019c90:	f040 816b 	bne.w	8019f6a <processEb+0x3f2>
 8019c94:	687b      	ldr	r3, [r7, #4]
 8019c96:	685a      	ldr	r2, [r3, #4]
 8019c98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019c9a:	4413      	add	r3, r2
 8019c9c:	781b      	ldrb	r3, [r3, #0]
 8019c9e:	2b00      	cmp	r3, #0
 8019ca0:	f040 8165 	bne.w	8019f6e <processEb+0x3f6>
 8019ca4:	687b      	ldr	r3, [r7, #4]
 8019ca6:	685a      	ldr	r2, [r3, #4]
 8019ca8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019caa:	4413      	add	r3, r2
 8019cac:	781b      	ldrb	r3, [r3, #0]
 8019cae:	4618      	mov	r0, r3
 8019cb0:	f000 f9ca 	bl	801a048 <channelhoppingTemplateIDStoreFromEB>
 8019cb4:	2301      	movs	r3, #1
 8019cb6:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8019cba:	e158      	b.n	8019f6e <processEb+0x3f6>
 8019cbc:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019cbe:	121b      	asrs	r3, r3, #8
 8019cc0:	b2db      	uxtb	r3, r3
 8019cc2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8019cc6:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8019cca:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019ccc:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 8019cd0:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8019cd4:	3b1a      	subs	r3, #26
 8019cd6:	2b1d      	cmp	r3, #29
 8019cd8:	f200 814b 	bhi.w	8019f72 <processEb+0x3fa>
 8019cdc:	a201      	add	r2, pc, #4	; (adr r2, 8019ce4 <processEb+0x16c>)
 8019cde:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019ce2:	bf00      	nop
 8019ce4:	08019d5d 	.word	0x08019d5d
 8019ce8:	08019e29 	.word	0x08019e29
 8019cec:	08019dfd 	.word	0x08019dfd
 8019cf0:	08019f73 	.word	0x08019f73
 8019cf4:	08019f73 	.word	0x08019f73
 8019cf8:	08019f73 	.word	0x08019f73
 8019cfc:	08019f73 	.word	0x08019f73
 8019d00:	08019f73 	.word	0x08019f73
 8019d04:	08019f73 	.word	0x08019f73
 8019d08:	08019f73 	.word	0x08019f73
 8019d0c:	08019f73 	.word	0x08019f73
 8019d10:	08019f73 	.word	0x08019f73
 8019d14:	08019f73 	.word	0x08019f73
 8019d18:	08019f73 	.word	0x08019f73
 8019d1c:	08019f73 	.word	0x08019f73
 8019d20:	08019f73 	.word	0x08019f73
 8019d24:	08019f73 	.word	0x08019f73
 8019d28:	08019f73 	.word	0x08019f73
 8019d2c:	08019f73 	.word	0x08019f73
 8019d30:	08019f73 	.word	0x08019f73
 8019d34:	08019f73 	.word	0x08019f73
 8019d38:	08019f73 	.word	0x08019f73
 8019d3c:	08019f73 	.word	0x08019f73
 8019d40:	08019f73 	.word	0x08019f73
 8019d44:	08019f73 	.word	0x08019f73
 8019d48:	08019f73 	.word	0x08019f73
 8019d4c:	08019f73 	.word	0x08019f73
 8019d50:	08019f73 	.word	0x08019f73
 8019d54:	08019f73 	.word	0x08019f73
 8019d58:	08019d9d 	.word	0x08019d9d
 8019d5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019d5e:	f103 0031 	add.w	r0, r3, #49	; 0x31
 8019d62:	687b      	ldr	r3, [r7, #4]
 8019d64:	685a      	ldr	r2, [r3, #4]
 8019d66:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019d68:	4413      	add	r3, r2
 8019d6a:	2205      	movs	r2, #5
 8019d6c:	4619      	mov	r1, r3
 8019d6e:	f7fd f8cb 	bl	8016f08 <ENDIANNESS_LittleToNative>
 8019d72:	687b      	ldr	r3, [r7, #4]
 8019d74:	685a      	ldr	r2, [r3, #4]
 8019d76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019d78:	3305      	adds	r3, #5
 8019d7a:	441a      	add	r2, r3
 8019d7c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019d7e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019d82:	7812      	ldrb	r2, [r2, #0]
 8019d84:	f883 209c 	strb.w	r2, [r3, #156]	; 0x9c
 8019d88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019d8a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8019d8e:	2201      	movs	r2, #1
 8019d90:	f883 209f 	strb.w	r2, [r3, #159]	; 0x9f
 8019d94:	2301      	movs	r3, #1
 8019d96:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 8019d9a:	e0ef      	b.n	8019f7c <processEb+0x404>
 8019d9c:	687b      	ldr	r3, [r7, #4]
 8019d9e:	3342      	adds	r3, #66	; 0x42
 8019da0:	f107 021d 	add.w	r2, r7, #29
 8019da4:	4611      	mov	r1, r2
 8019da6:	4618      	mov	r0, r3
 8019da8:	f7f4 fce4 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 8019dac:	4603      	mov	r3, r0
 8019dae:	2b00      	cmp	r3, #0
 8019db0:	d020      	beq.n	8019df4 <processEb+0x27c>
 8019db2:	687b      	ldr	r3, [r7, #4]
 8019db4:	685a      	ldr	r2, [r3, #4]
 8019db6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019db8:	18d1      	adds	r1, r2, r3
 8019dba:	f107 031e 	add.w	r3, r7, #30
 8019dbe:	2202      	movs	r2, #2
 8019dc0:	4618      	mov	r0, r3
 8019dc2:	f7fd f8a1 	bl	8016f08 <ENDIANNESS_LittleToNative>
 8019dc6:	7f7b      	ldrb	r3, [r7, #29]
 8019dc8:	8bfa      	ldrh	r2, [r7, #30]
 8019dca:	4611      	mov	r1, r2
 8019dcc:	4618      	mov	r0, r3
 8019dce:	f7f4 faab 	bl	800e328 <8a74e7031ce6bc2ae0c06fa9b4f66a6dea2edd3c>
 8019dd2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019dd4:	3302      	adds	r3, #2
 8019dd6:	63bb      	str	r3, [r7, #56]	; 0x38
 8019dd8:	687b      	ldr	r3, [r7, #4]
 8019dda:	685a      	ldr	r2, [r3, #4]
 8019ddc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019dde:	4413      	add	r3, r2
 8019de0:	781b      	ldrb	r3, [r3, #0]
 8019de2:	2b00      	cmp	r3, #0
 8019de4:	d006      	beq.n	8019df4 <processEb+0x27c>
 8019de6:	7f7a      	ldrb	r2, [r7, #29]
 8019de8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019dea:	3331      	adds	r3, #49	; 0x31
 8019dec:	4619      	mov	r1, r3
 8019dee:	4610      	mov	r0, r2
 8019df0:	f7f3 fd92 	bl	800d918 <027deecf67887395ef5db16208d3312ee727e45e>
 8019df4:	2301      	movs	r3, #1
 8019df6:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8019dfa:	e0bf      	b.n	8019f7c <processEb+0x404>
 8019dfc:	687b      	ldr	r3, [r7, #4]
 8019dfe:	685a      	ldr	r2, [r3, #4]
 8019e00:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e02:	4413      	add	r3, r2
 8019e04:	781b      	ldrb	r3, [r3, #0]
 8019e06:	2b00      	cmp	r3, #0
 8019e08:	f040 80b5 	bne.w	8019f76 <processEb+0x3fe>
 8019e0c:	687b      	ldr	r3, [r7, #4]
 8019e0e:	685a      	ldr	r2, [r3, #4]
 8019e10:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e12:	4413      	add	r3, r2
 8019e14:	781b      	ldrb	r3, [r3, #0]
 8019e16:	4618      	mov	r0, r3
 8019e18:	f000 f904 	bl	801a024 <timeslotTemplateIDStoreFromEB>
 8019e1c:	2301      	movs	r3, #1
 8019e1e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 8019e22:	e0a8      	b.n	8019f76 <processEb+0x3fe>
 8019e24:	20000040 	.word	0x20000040
 8019e28:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8019e2c:	2b00      	cmp	r3, #0
 8019e2e:	f000 80a4 	beq.w	8019f7a <processEb+0x402>
 8019e32:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8019e36:	2b00      	cmp	r3, #0
 8019e38:	f000 809f 	beq.w	8019f7a <processEb+0x402>
 8019e3c:	f107 0314 	add.w	r3, r7, #20
 8019e40:	4618      	mov	r0, r3
 8019e42:	f002 fd97 	bl	801c974 <362182124631b23da2866810d52fbd55ab277bcc>
 8019e46:	7e3b      	ldrb	r3, [r7, #24]
 8019e48:	f083 0301 	eor.w	r3, r3, #1
 8019e4c:	b2db      	uxtb	r3, r3
 8019e4e:	2b00      	cmp	r3, #0
 8019e50:	f000 8087 	beq.w	8019f62 <processEb+0x3ea>
 8019e54:	687b      	ldr	r3, [r7, #4]
 8019e56:	685a      	ldr	r2, [r3, #4]
 8019e58:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e5a:	4413      	add	r3, r2
 8019e5c:	781b      	ldrb	r3, [r3, #0]
 8019e5e:	75fb      	strb	r3, [r7, #23]
 8019e60:	687b      	ldr	r3, [r7, #4]
 8019e62:	685a      	ldr	r2, [r3, #4]
 8019e64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e66:	3301      	adds	r3, #1
 8019e68:	4413      	add	r3, r2
 8019e6a:	781b      	ldrb	r3, [r3, #0]
 8019e6c:	75bb      	strb	r3, [r7, #22]
 8019e6e:	687b      	ldr	r3, [r7, #4]
 8019e70:	685a      	ldr	r2, [r3, #4]
 8019e72:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e74:	3302      	adds	r3, #2
 8019e76:	4413      	add	r3, r2
 8019e78:	781b      	ldrb	r3, [r3, #0]
 8019e7a:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019e7c:	687b      	ldr	r3, [r7, #4]
 8019e7e:	685a      	ldr	r2, [r3, #4]
 8019e80:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019e82:	3303      	adds	r3, #3
 8019e84:	4413      	add	r3, r2
 8019e86:	781b      	ldrb	r3, [r3, #0]
 8019e88:	021b      	lsls	r3, r3, #8
 8019e8a:	b29a      	uxth	r2, r3
 8019e8c:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019e8e:	4313      	orrs	r3, r2
 8019e90:	84fb      	strh	r3, [r7, #38]	; 0x26
 8019e92:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8019e94:	82bb      	strh	r3, [r7, #20]
 8019e96:	8abb      	ldrh	r3, [r7, #20]
 8019e98:	2b0d      	cmp	r3, #13
 8019e9a:	d16e      	bne.n	8019f7a <processEb+0x402>
 8019e9c:	2301      	movs	r3, #1
 8019e9e:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8019ea2:	2301      	movs	r3, #1
 8019ea4:	763b      	strb	r3, [r7, #24]
 8019ea6:	f107 0314 	add.w	r3, r7, #20
 8019eaa:	e893 0003 	ldmia.w	r3, {r0, r1}
 8019eae:	f002 fd27 	bl	801c900 <6759635076cb4c933592248ebd293b63832a7e9b>
 8019eb2:	687b      	ldr	r3, [r7, #4]
 8019eb4:	685a      	ldr	r2, [r3, #4]
 8019eb6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019eb8:	3304      	adds	r3, #4
 8019eba:	4413      	add	r3, r2
 8019ebc:	781b      	ldrb	r3, [r3, #0]
 8019ebe:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 8019ec2:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 8019ec6:	2b01      	cmp	r3, #1
 8019ec8:	d902      	bls.n	8019ed0 <processEb+0x358>
 8019eca:	2301      	movs	r3, #1
 8019ecc:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 8019ed0:	f897 2031 	ldrb.w	r2, [r7, #49]	; 0x31
 8019ed4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8019ed6:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
 8019eda:	2300      	movs	r3, #0
 8019edc:	62fb      	str	r3, [r7, #44]	; 0x2c
 8019ede:	e03a      	b.n	8019f56 <processEb+0x3de>
 8019ee0:	687b      	ldr	r3, [r7, #4]
 8019ee2:	6859      	ldr	r1, [r3, #4]
 8019ee4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019ee6:	4613      	mov	r3, r2
 8019ee8:	009b      	lsls	r3, r3, #2
 8019eea:	441a      	add	r2, r3
 8019eec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019eee:	4413      	add	r3, r2
 8019ef0:	3305      	adds	r3, #5
 8019ef2:	440b      	add	r3, r1
 8019ef4:	781b      	ldrb	r3, [r3, #0]
 8019ef6:	847b      	strh	r3, [r7, #34]	; 0x22
 8019ef8:	687b      	ldr	r3, [r7, #4]
 8019efa:	6859      	ldr	r1, [r3, #4]
 8019efc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019efe:	4613      	mov	r3, r2
 8019f00:	009b      	lsls	r3, r3, #2
 8019f02:	441a      	add	r2, r3
 8019f04:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019f06:	4413      	add	r3, r2
 8019f08:	3306      	adds	r3, #6
 8019f0a:	440b      	add	r3, r1
 8019f0c:	781b      	ldrb	r3, [r3, #0]
 8019f0e:	021b      	lsls	r3, r3, #8
 8019f10:	b29a      	uxth	r2, r3
 8019f12:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8019f14:	4313      	orrs	r3, r2
 8019f16:	847b      	strh	r3, [r7, #34]	; 0x22
 8019f18:	687b      	ldr	r3, [r7, #4]
 8019f1a:	6859      	ldr	r1, [r3, #4]
 8019f1c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019f1e:	4613      	mov	r3, r2
 8019f20:	009b      	lsls	r3, r3, #2
 8019f22:	441a      	add	r2, r3
 8019f24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019f26:	4413      	add	r3, r2
 8019f28:	3307      	adds	r3, #7
 8019f2a:	440b      	add	r3, r1
 8019f2c:	781b      	ldrb	r3, [r3, #0]
 8019f2e:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8019f32:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8019f34:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8019f36:	33cc      	adds	r3, #204	; 0xcc
 8019f38:	005b      	lsls	r3, r3, #1
 8019f3a:	4413      	add	r3, r2
 8019f3c:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8019f3e:	805a      	strh	r2, [r3, #2]
 8019f40:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8019f42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8019f44:	4413      	add	r3, r2
 8019f46:	f503 73ce 	add.w	r3, r3, #412	; 0x19c
 8019f4a:	f897 2021 	ldrb.w	r2, [r7, #33]	; 0x21
 8019f4e:	701a      	strb	r2, [r3, #0]
 8019f50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8019f52:	3301      	adds	r3, #1
 8019f54:	62fb      	str	r3, [r7, #44]	; 0x2c
 8019f56:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 8019f5a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8019f5c:	429a      	cmp	r2, r3
 8019f5e:	d3bf      	bcc.n	8019ee0 <processEb+0x368>
 8019f60:	e00b      	b.n	8019f7a <processEb+0x402>
 8019f62:	2301      	movs	r3, #1
 8019f64:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8019f68:	e007      	b.n	8019f7a <processEb+0x402>
 8019f6a:	bf00      	nop
 8019f6c:	e006      	b.n	8019f7c <processEb+0x404>
 8019f6e:	bf00      	nop
 8019f70:	e004      	b.n	8019f7c <processEb+0x404>
 8019f72:	bf00      	nop
 8019f74:	e002      	b.n	8019f7c <processEb+0x404>
 8019f76:	bf00      	nop
 8019f78:	e000      	b.n	8019f7c <processEb+0x404>
 8019f7a:	bf00      	nop
 8019f7c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019f7e:	b2da      	uxtb	r2, r3
 8019f80:	f897 3032 	ldrb.w	r3, [r7, #50]	; 0x32
 8019f84:	4413      	add	r3, r2
 8019f86:	b2db      	uxtb	r3, r3
 8019f88:	63bb      	str	r3, [r7, #56]	; 0x38
 8019f8a:	f897 203c 	ldrb.w	r2, [r7, #60]	; 0x3c
 8019f8e:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 8019f90:	4413      	add	r3, r2
 8019f92:	461a      	mov	r2, r3
 8019f94:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8019f96:	4293      	cmp	r3, r2
 8019f98:	d227      	bcs.n	8019fea <processEb+0x472>
 8019f9a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8019f9e:	f083 0301 	eor.w	r3, r3, #1
 8019fa2:	b2db      	uxtb	r3, r3
 8019fa4:	2b00      	cmp	r3, #0
 8019fa6:	f47f ae47 	bne.w	8019c38 <processEb+0xc0>
 8019faa:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8019fae:	f083 0301 	eor.w	r3, r3, #1
 8019fb2:	b2db      	uxtb	r3, r3
 8019fb4:	2b00      	cmp	r3, #0
 8019fb6:	f47f ae3f 	bne.w	8019c38 <processEb+0xc0>
 8019fba:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8019fbe:	f083 0301 	eor.w	r3, r3, #1
 8019fc2:	b2db      	uxtb	r3, r3
 8019fc4:	2b00      	cmp	r3, #0
 8019fc6:	f47f ae37 	bne.w	8019c38 <processEb+0xc0>
 8019fca:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8019fce:	f083 0301 	eor.w	r3, r3, #1
 8019fd2:	b2db      	uxtb	r3, r3
 8019fd4:	2b00      	cmp	r3, #0
 8019fd6:	f47f ae2f 	bne.w	8019c38 <processEb+0xc0>
 8019fda:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8019fde:	f083 0301 	eor.w	r3, r3, #1
 8019fe2:	b2db      	uxtb	r3, r3
 8019fe4:	2b00      	cmp	r3, #0
 8019fe6:	f47f ae27 	bne.w	8019c38 <processEb+0xc0>
 8019fea:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8019fee:	2b00      	cmp	r3, #0
 8019ff0:	d012      	beq.n	801a018 <processEb+0x4a0>
 8019ff2:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8019ff6:	2b00      	cmp	r3, #0
 8019ff8:	d00e      	beq.n	801a018 <processEb+0x4a0>
 8019ffa:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8019ffe:	2b00      	cmp	r3, #0
 801a000:	d00a      	beq.n	801a018 <processEb+0x4a0>
 801a002:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 801a006:	2b00      	cmp	r3, #0
 801a008:	d006      	beq.n	801a018 <processEb+0x4a0>
 801a00a:	687b      	ldr	r3, [r7, #4]
 801a00c:	7a1b      	ldrb	r3, [r3, #8]
 801a00e:	461a      	mov	r2, r3
 801a010:	683b      	ldr	r3, [r7, #0]
 801a012:	801a      	strh	r2, [r3, #0]
 801a014:	2301      	movs	r3, #1
 801a016:	e000      	b.n	801a01a <processEb+0x4a2>
 801a018:	2300      	movs	r3, #0
 801a01a:	4618      	mov	r0, r3
 801a01c:	3740      	adds	r7, #64	; 0x40
 801a01e:	46bd      	mov	sp, r7
 801a020:	bd80      	pop	{r7, pc}
 801a022:	bf00      	nop

0801a024 <timeslotTemplateIDStoreFromEB>:
 801a024:	b480      	push	{r7}
 801a026:	b083      	sub	sp, #12
 801a028:	af00      	add	r7, sp, #0
 801a02a:	4603      	mov	r3, r0
 801a02c:	71fb      	strb	r3, [r7, #7]
 801a02e:	4b05      	ldr	r3, [pc, #20]	; (801a044 <timeslotTemplateIDStoreFromEB+0x20>)
 801a030:	681b      	ldr	r3, [r3, #0]
 801a032:	79fa      	ldrb	r2, [r7, #7]
 801a034:	f883 21a4 	strb.w	r2, [r3, #420]	; 0x1a4
 801a038:	bf00      	nop
 801a03a:	370c      	adds	r7, #12
 801a03c:	46bd      	mov	sp, r7
 801a03e:	bc80      	pop	{r7}
 801a040:	4770      	bx	lr
 801a042:	bf00      	nop
 801a044:	20000040 	.word	0x20000040

0801a048 <channelhoppingTemplateIDStoreFromEB>:
 801a048:	b480      	push	{r7}
 801a04a:	b083      	sub	sp, #12
 801a04c:	af00      	add	r7, sp, #0
 801a04e:	4603      	mov	r3, r0
 801a050:	71fb      	strb	r3, [r7, #7]
 801a052:	4b05      	ldr	r3, [pc, #20]	; (801a068 <channelhoppingTemplateIDStoreFromEB+0x20>)
 801a054:	681b      	ldr	r3, [r3, #0]
 801a056:	79fa      	ldrb	r2, [r7, #7]
 801a058:	f883 21a5 	strb.w	r2, [r3, #421]	; 0x1a5
 801a05c:	bf00      	nop
 801a05e:	370c      	adds	r7, #12
 801a060:	46bd      	mov	sp, r7
 801a062:	bc80      	pop	{r7}
 801a064:	4770      	bx	lr
 801a066:	bf00      	nop
 801a068:	20000040 	.word	0x20000040

0801a06c <66ac93647e4c684dee2227e883242cdee4e3524a>:
 801a06c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801a070:	b08c      	sub	sp, #48	; 0x30
 801a072:	af00      	add	r7, sp, #0
 801a074:	6178      	str	r0, [r7, #20]
 801a076:	4b2c      	ldr	r3, [pc, #176]	; (801a128 <66ac93647e4c684dee2227e883242cdee4e3524a+0xbc>)
 801a078:	681b      	ldr	r3, [r3, #0]
 801a07a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801a07c:	697b      	ldr	r3, [r7, #20]
 801a07e:	2000      	movs	r0, #0
 801a080:	4619      	mov	r1, r3
 801a082:	4602      	mov	r2, r0
 801a084:	4b29      	ldr	r3, [pc, #164]	; (801a12c <66ac93647e4c684dee2227e883242cdee4e3524a+0xc0>)
 801a086:	681b      	ldr	r3, [r3, #0]
 801a088:	2000      	movs	r0, #0
 801a08a:	469a      	mov	sl, r3
 801a08c:	4683      	mov	fp, r0
 801a08e:	ebb1 030a 	subs.w	r3, r1, sl
 801a092:	60bb      	str	r3, [r7, #8]
 801a094:	eb62 030b 	sbc.w	r3, r2, fp
 801a098:	60fb      	str	r3, [r7, #12]
 801a09a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a09c:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 801a0a0:	e9c3 126a 	strd	r1, r2, [r3, #424]	; 0x1a8
 801a0a4:	4b22      	ldr	r3, [pc, #136]	; (801a130 <66ac93647e4c684dee2227e883242cdee4e3524a+0xc4>)
 801a0a6:	681b      	ldr	r3, [r3, #0]
 801a0a8:	b29a      	uxth	r2, r3
 801a0aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0ac:	875a      	strh	r2, [r3, #58]	; 0x3a
 801a0ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0b0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801a0b4:	2b00      	cmp	r3, #0
 801a0b6:	d031      	beq.n	801a11c <66ac93647e4c684dee2227e883242cdee4e3524a+0xb0>
 801a0b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0ba:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 801a0be:	f083 0301 	eor.w	r3, r3, #1
 801a0c2:	b2db      	uxtb	r3, r3
 801a0c4:	2b00      	cmp	r3, #0
 801a0c6:	d025      	beq.n	801a114 <66ac93647e4c684dee2227e883242cdee4e3524a+0xa8>
 801a0c8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0ca:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801a0ce:	4613      	mov	r3, r2
 801a0d0:	4618      	mov	r0, r3
 801a0d2:	f00e feb1 	bl	8028e38 <aefcd9c92df085a8eaba8a8f7a9a9648ff7bcca6>
 801a0d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0d8:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801a0dc:	4610      	mov	r0, r2
 801a0de:	4619      	mov	r1, r3
 801a0e0:	f000 f986 	bl	801a3f0 <statsUpdateTimeCorrection>
 801a0e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a0e6:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801a0ea:	4912      	ldr	r1, [pc, #72]	; (801a134 <66ac93647e4c684dee2227e883242cdee4e3524a+0xc8>)
 801a0ec:	6809      	ldr	r1, [r1, #0]
 801a0ee:	2000      	movs	r0, #0
 801a0f0:	4688      	mov	r8, r1
 801a0f2:	4681      	mov	r9, r0
 801a0f4:	4590      	cmp	r8, r2
 801a0f6:	eb79 0303 	sbcs.w	r3, r9, r3
 801a0fa:	db0f      	blt.n	801a11c <66ac93647e4c684dee2227e883242cdee4e3524a+0xb0>
 801a0fc:	4b0d      	ldr	r3, [pc, #52]	; (801a134 <66ac93647e4c684dee2227e883242cdee4e3524a+0xc8>)
 801a0fe:	681b      	ldr	r3, [r3, #0]
 801a100:	2200      	movs	r2, #0
 801a102:	461c      	mov	r4, r3
 801a104:	4615      	mov	r5, r2
 801a106:	2300      	movs	r3, #0
 801a108:	4262      	negs	r2, r4
 801a10a:	603a      	str	r2, [r7, #0]
 801a10c:	eb63 0305 	sbc.w	r3, r3, r5
 801a110:	607b      	str	r3, [r7, #4]
 801a112:	e003      	b.n	801a11c <66ac93647e4c684dee2227e883242cdee4e3524a+0xb0>
 801a114:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a116:	2200      	movs	r2, #0
 801a118:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 801a11c:	bf00      	nop
 801a11e:	3730      	adds	r7, #48	; 0x30
 801a120:	46bd      	mov	sp, r7
 801a122:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801a126:	bf00      	nop
 801a128:	20000040 	.word	0x20000040
 801a12c:	080318ac 	.word	0x080318ac
 801a130:	08031928 	.word	0x08031928
 801a134:	08031920 	.word	0x08031920

0801a138 <synchronizeCellTimeOnAckPacket>:
 801a138:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801a13c:	b088      	sub	sp, #32
 801a13e:	af00      	add	r7, sp, #0
 801a140:	e9c7 0100 	strd	r0, r1, [r7]
 801a144:	4b23      	ldr	r3, [pc, #140]	; (801a1d4 <synchronizeCellTimeOnAckPacket+0x9c>)
 801a146:	681b      	ldr	r3, [r3, #0]
 801a148:	61fb      	str	r3, [r7, #28]
 801a14a:	69f9      	ldr	r1, [r7, #28]
 801a14c:	e9d7 2300 	ldrd	r2, r3, [r7]
 801a150:	e9c1 236a 	strd	r2, r3, [r1, #424]	; 0x1a8
 801a154:	4b20      	ldr	r3, [pc, #128]	; (801a1d8 <synchronizeCellTimeOnAckPacket+0xa0>)
 801a156:	681b      	ldr	r3, [r3, #0]
 801a158:	b29a      	uxth	r2, r3
 801a15a:	69fb      	ldr	r3, [r7, #28]
 801a15c:	875a      	strh	r2, [r3, #58]	; 0x3a
 801a15e:	69fb      	ldr	r3, [r7, #28]
 801a160:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801a164:	2b00      	cmp	r3, #0
 801a166:	d02f      	beq.n	801a1c8 <synchronizeCellTimeOnAckPacket+0x90>
 801a168:	69fb      	ldr	r3, [r7, #28]
 801a16a:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 801a16e:	f083 0301 	eor.w	r3, r3, #1
 801a172:	b2db      	uxtb	r3, r3
 801a174:	2b00      	cmp	r3, #0
 801a176:	d023      	beq.n	801a1c0 <synchronizeCellTimeOnAckPacket+0x88>
 801a178:	69fb      	ldr	r3, [r7, #28]
 801a17a:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801a17e:	4613      	mov	r3, r2
 801a180:	4618      	mov	r0, r3
 801a182:	f00e fe59 	bl	8028e38 <aefcd9c92df085a8eaba8a8f7a9a9648ff7bcca6>
 801a186:	69fb      	ldr	r3, [r7, #28]
 801a188:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801a18c:	4610      	mov	r0, r2
 801a18e:	4619      	mov	r1, r3
 801a190:	f000 f92e 	bl	801a3f0 <statsUpdateTimeCorrection>
 801a194:	4b11      	ldr	r3, [pc, #68]	; (801a1dc <synchronizeCellTimeOnAckPacket+0xa4>)
 801a196:	681b      	ldr	r3, [r3, #0]
 801a198:	2200      	movs	r2, #0
 801a19a:	4698      	mov	r8, r3
 801a19c:	4691      	mov	r9, r2
 801a19e:	e9d7 2300 	ldrd	r2, r3, [r7]
 801a1a2:	4590      	cmp	r8, r2
 801a1a4:	eb79 0303 	sbcs.w	r3, r9, r3
 801a1a8:	db0e      	blt.n	801a1c8 <synchronizeCellTimeOnAckPacket+0x90>
 801a1aa:	4b0c      	ldr	r3, [pc, #48]	; (801a1dc <synchronizeCellTimeOnAckPacket+0xa4>)
 801a1ac:	681b      	ldr	r3, [r3, #0]
 801a1ae:	2200      	movs	r2, #0
 801a1b0:	461c      	mov	r4, r3
 801a1b2:	4615      	mov	r5, r2
 801a1b4:	2300      	movs	r3, #0
 801a1b6:	f1d4 0a00 	rsbs	sl, r4, #0
 801a1ba:	eb63 0b05 	sbc.w	fp, r3, r5
 801a1be:	e003      	b.n	801a1c8 <synchronizeCellTimeOnAckPacket+0x90>
 801a1c0:	69fb      	ldr	r3, [r7, #28]
 801a1c2:	2200      	movs	r2, #0
 801a1c4:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 801a1c8:	bf00      	nop
 801a1ca:	3720      	adds	r7, #32
 801a1cc:	46bd      	mov	sp, r7
 801a1ce:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801a1d2:	bf00      	nop
 801a1d4:	20000040 	.word	0x20000040
 801a1d8:	08031928 	.word	0x08031928
 801a1dc:	08031920 	.word	0x08031920

0801a1e0 <changeIsSync>:
 801a1e0:	b580      	push	{r7, lr}
 801a1e2:	b084      	sub	sp, #16
 801a1e4:	af00      	add	r7, sp, #0
 801a1e6:	4603      	mov	r3, r0
 801a1e8:	71fb      	strb	r3, [r7, #7]
 801a1ea:	4b0c      	ldr	r3, [pc, #48]	; (801a21c <changeIsSync+0x3c>)
 801a1ec:	681b      	ldr	r3, [r3, #0]
 801a1ee:	60fb      	str	r3, [r7, #12]
 801a1f0:	79fb      	ldrb	r3, [r7, #7]
 801a1f2:	4618      	mov	r0, r3
 801a1f4:	f001 f864 	bl	801b2c0 <a4805eff5c63b0d94a41387b77d7c2398243d1cd>
 801a1f8:	68fb      	ldr	r3, [r7, #12]
 801a1fa:	79fa      	ldrb	r2, [r7, #7]
 801a1fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 801a200:	68fb      	ldr	r3, [r7, #12]
 801a202:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801a206:	f083 0301 	eor.w	r3, r3, #1
 801a20a:	b2db      	uxtb	r3, r3
 801a20c:	2b00      	cmp	r3, #0
 801a20e:	d001      	beq.n	801a214 <changeIsSync+0x34>
 801a210:	f000 f918 	bl	801a444 <statsUpdateNumDesync>
 801a214:	bf00      	nop
 801a216:	3710      	adds	r7, #16
 801a218:	46bd      	mov	sp, r7
 801a21a:	bd80      	pop	{r7, pc}
 801a21c:	20000040 	.word	0x20000040

0801a220 <e0d63f279bcffa109806a257de8645074809531c>:
 801a220:	b580      	push	{r7, lr}
 801a222:	b08c      	sub	sp, #48	; 0x30
 801a224:	af00      	add	r7, sp, #0
 801a226:	f000 fb61 	bl	801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>
 801a22a:	4b3e      	ldr	r3, [pc, #248]	; (801a324 <e0d63f279bcffa109806a257de8645074809531c+0x104>)
 801a22c:	681b      	ldr	r3, [r3, #0]
 801a22e:	627b      	str	r3, [r7, #36]	; 0x24
 801a230:	2300      	movs	r3, #0
 801a232:	62fb      	str	r3, [r7, #44]	; 0x2c
 801a234:	2141      	movs	r1, #65	; 0x41
 801a236:	2040      	movs	r0, #64	; 0x40
 801a238:	f7f6 fd32 	bl	8010ca0 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73>
 801a23c:	62f8      	str	r0, [r7, #44]	; 0x2c
 801a23e:	e014      	b.n	801a26a <e0d63f279bcffa109806a257de8645074809531c+0x4a>
 801a240:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a242:	2200      	movs	r2, #0
 801a244:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 801a248:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a24a:	f103 0056 	add.w	r0, r3, #86	; 0x56
 801a24e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a250:	3331      	adds	r3, #49	; 0x31
 801a252:	2205      	movs	r2, #5
 801a254:	4619      	mov	r1, r3
 801a256:	f010 ffee 	bl	802b236 <memcpy>
 801a25a:	2000      	movs	r0, #0
 801a25c:	f004 fdbe 	bl	801eddc <249d70512359d3b556e86d60c45850a37e74e9ce>
 801a260:	2141      	movs	r1, #65	; 0x41
 801a262:	2040      	movs	r0, #64	; 0x40
 801a264:	f7f6 fd1c 	bl	8010ca0 <6e9ad617bf3c14b2ac474e5b98f5ac57b3d3da73>
 801a268:	62f8      	str	r0, [r7, #44]	; 0x2c
 801a26a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a26c:	2b00      	cmp	r3, #0
 801a26e:	d1e7      	bne.n	801a240 <e0d63f279bcffa109806a257de8645074809531c+0x20>
 801a270:	2000      	movs	r0, #0
 801a272:	f7ff ffb5 	bl	801a1e0 <changeIsSync>
 801a276:	f00b fbbf 	bl	80259f8 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b>
 801a27a:	f7f4 fa51 	bl	800e720 <112b6c7ff0378e3d771f72ee1fe6c65d1cd5ff37>
 801a27e:	f7f5 fc6d 	bl	800fb5c <5abd2f358b9e462fcede09cdd96a94c4ca379573>
 801a282:	f107 0310 	add.w	r3, r7, #16
 801a286:	2211      	movs	r2, #17
 801a288:	2100      	movs	r1, #0
 801a28a:	4618      	mov	r0, r3
 801a28c:	f010 ff34 	bl	802b0f8 <memset>
 801a290:	2306      	movs	r3, #6
 801a292:	743b      	strb	r3, [r7, #16]
 801a294:	2300      	movs	r3, #0
 801a296:	62bb      	str	r3, [r7, #40]	; 0x28
 801a298:	e00e      	b.n	801a2b8 <e0d63f279bcffa109806a257de8645074809531c+0x98>
 801a29a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801a29c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801a29e:	33cc      	adds	r3, #204	; 0xcc
 801a2a0:	005b      	lsls	r3, r3, #1
 801a2a2:	4413      	add	r3, r2
 801a2a4:	885b      	ldrh	r3, [r3, #2]
 801a2a6:	f107 0210 	add.w	r2, r7, #16
 801a2aa:	4611      	mov	r1, r2
 801a2ac:	4618      	mov	r0, r3
 801a2ae:	f002 fd99 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801a2b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801a2b4:	3301      	adds	r3, #1
 801a2b6:	62bb      	str	r3, [r7, #40]	; 0x28
 801a2b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a2ba:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
 801a2be:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801a2c0:	429a      	cmp	r2, r3
 801a2c2:	d3ea      	bcc.n	801a29a <e0d63f279bcffa109806a257de8645074809531c+0x7a>
 801a2c4:	f107 0308 	add.w	r3, r7, #8
 801a2c8:	2200      	movs	r2, #0
 801a2ca:	601a      	str	r2, [r3, #0]
 801a2cc:	809a      	strh	r2, [r3, #4]
 801a2ce:	f107 0308 	add.w	r3, r7, #8
 801a2d2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a2d6:	f002 fb13 	bl	801c900 <6759635076cb4c933592248ebd293b63832a7e9b>
 801a2da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a2dc:	2200      	movs	r2, #0
 801a2de:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
 801a2e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a2e4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801a2e8:	3301      	adds	r3, #1
 801a2ea:	b2da      	uxtb	r2, r3
 801a2ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a2ee:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801a2f2:	f7f7 fc0d 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801a2f6:	4603      	mov	r3, r0
 801a2f8:	2101      	movs	r1, #1
 801a2fa:	4618      	mov	r0, r3
 801a2fc:	f7f8 faaa 	bl	8012854 <9506f9c37a945216115ab5227293f46163fc6230>
 801a300:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a302:	2200      	movs	r2, #0
 801a304:	86da      	strh	r2, [r3, #54]	; 0x36
 801a306:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a308:	2201      	movs	r2, #1
 801a30a:	871a      	strh	r2, [r3, #56]	; 0x38
 801a30c:	f7f7 fc00 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801a310:	4602      	mov	r2, r0
 801a312:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801a314:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
 801a318:	f00e fc2c 	bl	8028b74 <e9a40864df7737216396ae2e57c8bf2439468a7c>
 801a31c:	bf00      	nop
 801a31e:	3730      	adds	r7, #48	; 0x30
 801a320:	46bd      	mov	sp, r7
 801a322:	bd80      	pop	{r7, pc}
 801a324:	20000040 	.word	0x20000040

0801a328 <fdc48e947b5f2f5ed5f47de398f99296ca12bee8>:
 801a328:	b580      	push	{r7, lr}
 801a32a:	b084      	sub	sp, #16
 801a32c:	af00      	add	r7, sp, #0
 801a32e:	6078      	str	r0, [r7, #4]
 801a330:	460b      	mov	r3, r1
 801a332:	70fb      	strb	r3, [r7, #3]
 801a334:	4b0d      	ldr	r3, [pc, #52]	; (801a36c <fdc48e947b5f2f5ed5f47de398f99296ca12bee8+0x44>)
 801a336:	681b      	ldr	r3, [r3, #0]
 801a338:	60fb      	str	r3, [r7, #12]
 801a33a:	687b      	ldr	r3, [r7, #4]
 801a33c:	78fa      	ldrb	r2, [r7, #3]
 801a33e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 801a342:	687b      	ldr	r3, [r7, #4]
 801a344:	f103 0056 	add.w	r0, r3, #86	; 0x56
 801a348:	68fb      	ldr	r3, [r7, #12]
 801a34a:	3331      	adds	r3, #49	; 0x31
 801a34c:	2205      	movs	r2, #5
 801a34e:	4619      	mov	r1, r3
 801a350:	f010 ff71 	bl	802b236 <memcpy>
 801a354:	687b      	ldr	r3, [r7, #4]
 801a356:	2241      	movs	r2, #65	; 0x41
 801a358:	705a      	strb	r2, [r3, #1]
 801a35a:	2202      	movs	r2, #2
 801a35c:	2100      	movs	r1, #0
 801a35e:	4804      	ldr	r0, [pc, #16]	; (801a370 <fdc48e947b5f2f5ed5f47de398f99296ca12bee8+0x48>)
 801a360:	f7f9 f8da 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 801a364:	bf00      	nop
 801a366:	3710      	adds	r7, #16
 801a368:	46bd      	mov	sp, r7
 801a36a:	bd80      	pop	{r7, pc}
 801a36c:	20000040 	.word	0x20000040
 801a370:	0801eddd 	.word	0x0801eddd

0801a374 <0d988943f13c94ad3b7af08357d5d17f9043f067>:
 801a374:	b580      	push	{r7, lr}
 801a376:	b084      	sub	sp, #16
 801a378:	af00      	add	r7, sp, #0
 801a37a:	6078      	str	r0, [r7, #4]
 801a37c:	4b0e      	ldr	r3, [pc, #56]	; (801a3b8 <0d988943f13c94ad3b7af08357d5d17f9043f067+0x44>)
 801a37e:	681b      	ldr	r3, [r3, #0]
 801a380:	60fb      	str	r3, [r7, #12]
 801a382:	687b      	ldr	r3, [r7, #4]
 801a384:	f103 0056 	add.w	r0, r3, #86	; 0x56
 801a388:	68fb      	ldr	r3, [r7, #12]
 801a38a:	3331      	adds	r3, #49	; 0x31
 801a38c:	2205      	movs	r2, #5
 801a38e:	4619      	mov	r1, r3
 801a390:	f010 ff51 	bl	802b236 <memcpy>
 801a394:	687b      	ldr	r3, [r7, #4]
 801a396:	3356      	adds	r3, #86	; 0x56
 801a398:	4618      	mov	r0, r3
 801a39a:	f003 fd95 	bl	801dec8 <c44994d9507f8e8896ef91cc0ed0c665b4e74466>
 801a39e:	687b      	ldr	r3, [r7, #4]
 801a3a0:	2241      	movs	r2, #65	; 0x41
 801a3a2:	705a      	strb	r2, [r3, #1]
 801a3a4:	2201      	movs	r2, #1
 801a3a6:	2100      	movs	r1, #0
 801a3a8:	4804      	ldr	r0, [pc, #16]	; (801a3bc <0d988943f13c94ad3b7af08357d5d17f9043f067+0x48>)
 801a3aa:	f7f9 f8b5 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 801a3ae:	bf00      	nop
 801a3b0:	3710      	adds	r7, #16
 801a3b2:	46bd      	mov	sp, r7
 801a3b4:	bd80      	pop	{r7, pc}
 801a3b6:	bf00      	nop
 801a3b8:	20000040 	.word	0x20000040
 801a3bc:	0801ef55 	.word	0x0801ef55

0801a3c0 <statsReset>:
 801a3c0:	b580      	push	{r7, lr}
 801a3c2:	b082      	sub	sp, #8
 801a3c4:	af00      	add	r7, sp, #0
 801a3c6:	4b09      	ldr	r3, [pc, #36]	; (801a3ec <statsReset+0x2c>)
 801a3c8:	681b      	ldr	r3, [r3, #0]
 801a3ca:	607b      	str	r3, [r7, #4]
 801a3cc:	687b      	ldr	r3, [r7, #4]
 801a3ce:	222e      	movs	r2, #46	; 0x2e
 801a3d0:	2100      	movs	r1, #0
 801a3d2:	4618      	mov	r0, r3
 801a3d4:	f010 fe90 	bl	802b0f8 <memset>
 801a3d8:	f7f7 fb9a 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801a3dc:	4602      	mov	r2, r0
 801a3de:	687b      	ldr	r3, [r7, #4]
 801a3e0:	f8c3 2029 	str.w	r2, [r3, #41]	; 0x29
 801a3e4:	bf00      	nop
 801a3e6:	3708      	adds	r7, #8
 801a3e8:	46bd      	mov	sp, r7
 801a3ea:	bd80      	pop	{r7, pc}
 801a3ec:	20000040 	.word	0x20000040

0801a3f0 <statsUpdateTimeCorrection>:
 801a3f0:	b4b0      	push	{r4, r5, r7}
 801a3f2:	b085      	sub	sp, #20
 801a3f4:	af00      	add	r7, sp, #0
 801a3f6:	e9c7 0100 	strd	r0, r1, [r7]
 801a3fa:	4911      	ldr	r1, [pc, #68]	; (801a440 <statsUpdateTimeCorrection+0x50>)
 801a3fc:	6809      	ldr	r1, [r1, #0]
 801a3fe:	60f9      	str	r1, [r7, #12]
 801a400:	68f9      	ldr	r1, [r7, #12]
 801a402:	6809      	ldr	r1, [r1, #0]
 801a404:	17c8      	asrs	r0, r1, #31
 801a406:	460c      	mov	r4, r1
 801a408:	4605      	mov	r5, r0
 801a40a:	e9d7 0100 	ldrd	r0, r1, [r7]
 801a40e:	42a0      	cmp	r0, r4
 801a410:	41a9      	sbcs	r1, r5
 801a412:	da02      	bge.n	801a41a <statsUpdateTimeCorrection+0x2a>
 801a414:	6838      	ldr	r0, [r7, #0]
 801a416:	68f9      	ldr	r1, [r7, #12]
 801a418:	6008      	str	r0, [r1, #0]
 801a41a:	68f9      	ldr	r1, [r7, #12]
 801a41c:	6849      	ldr	r1, [r1, #4]
 801a41e:	17c8      	asrs	r0, r1, #31
 801a420:	460a      	mov	r2, r1
 801a422:	4603      	mov	r3, r0
 801a424:	e9d7 0100 	ldrd	r0, r1, [r7]
 801a428:	4282      	cmp	r2, r0
 801a42a:	418b      	sbcs	r3, r1
 801a42c:	da02      	bge.n	801a434 <statsUpdateTimeCorrection+0x44>
 801a42e:	683a      	ldr	r2, [r7, #0]
 801a430:	68fb      	ldr	r3, [r7, #12]
 801a432:	605a      	str	r2, [r3, #4]
 801a434:	bf00      	nop
 801a436:	3714      	adds	r7, #20
 801a438:	46bd      	mov	sp, r7
 801a43a:	bcb0      	pop	{r4, r5, r7}
 801a43c:	4770      	bx	lr
 801a43e:	bf00      	nop
 801a440:	20000040 	.word	0x20000040

0801a444 <statsUpdateNumDesync>:
 801a444:	b480      	push	{r7}
 801a446:	b083      	sub	sp, #12
 801a448:	af00      	add	r7, sp, #0
 801a44a:	4b0b      	ldr	r3, [pc, #44]	; (801a478 <statsUpdateNumDesync+0x34>)
 801a44c:	681b      	ldr	r3, [r3, #0]
 801a44e:	607b      	str	r3, [r7, #4]
 801a450:	687b      	ldr	r3, [r7, #4]
 801a452:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 801a456:	3301      	adds	r3, #1
 801a458:	b2da      	uxtb	r2, r3
 801a45a:	687b      	ldr	r3, [r7, #4]
 801a45c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 801a460:	687b      	ldr	r3, [r7, #4]
 801a462:	2200      	movs	r2, #0
 801a464:	601a      	str	r2, [r3, #0]
 801a466:	687b      	ldr	r3, [r7, #4]
 801a468:	2200      	movs	r2, #0
 801a46a:	605a      	str	r2, [r3, #4]
 801a46c:	bf00      	nop
 801a46e:	370c      	adds	r7, #12
 801a470:	46bd      	mov	sp, r7
 801a472:	bc80      	pop	{r7}
 801a474:	4770      	bx	lr
 801a476:	bf00      	nop
 801a478:	20000040 	.word	0x20000040

0801a47c <077287437cab717c06c53f5380059be6eda08357>:
 801a47c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801a480:	b090      	sub	sp, #64	; 0x40
 801a482:	af00      	add	r7, sp, #0
 801a484:	4603      	mov	r3, r0
 801a486:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801a48a:	4b3c      	ldr	r3, [pc, #240]	; (801a57c <077287437cab717c06c53f5380059be6eda08357+0x100>)
 801a48c:	681b      	ldr	r3, [r3, #0]
 801a48e:	63fb      	str	r3, [r7, #60]	; 0x3c
 801a490:	f7f7 fb3e 	bl	8011b10 <98bf14dc0e749cb1b7db48b40e4393705fb7926a>
 801a494:	63b8      	str	r0, [r7, #56]	; 0x38
 801a496:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a498:	f8d3 2029 	ldr.w	r2, [r3, #41]	; 0x29
 801a49c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801a49e:	1a9b      	subs	r3, r3, r2
 801a4a0:	637b      	str	r3, [r7, #52]	; 0x34
 801a4a2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 801a4a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801a4a6:	f8c2 3029 	str.w	r3, [r2, #41]	; 0x29
 801a4aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a4ac:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801a4b0:	6b79      	ldr	r1, [r7, #52]	; 0x34
 801a4b2:	2000      	movs	r0, #0
 801a4b4:	460c      	mov	r4, r1
 801a4b6:	4605      	mov	r5, r0
 801a4b8:	1911      	adds	r1, r2, r4
 801a4ba:	6239      	str	r1, [r7, #32]
 801a4bc:	416b      	adcs	r3, r5
 801a4be:	627b      	str	r3, [r7, #36]	; 0x24
 801a4c0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a4c2:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 801a4c6:	e9c3 1208 	strd	r1, r2, [r3, #32]
 801a4ca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a4cc:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 801a4d0:	2b03      	cmp	r3, #3
 801a4d2:	d847      	bhi.n	801a564 <077287437cab717c06c53f5380059be6eda08357+0xe8>
 801a4d4:	a201      	add	r2, pc, #4	; (adr r2, 801a4dc <077287437cab717c06c53f5380059be6eda08357+0x60>)
 801a4d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a4da:	bf00      	nop
 801a4dc:	0801a565 	.word	0x0801a565
 801a4e0:	0801a4ed 	.word	0x0801a4ed
 801a4e4:	0801a519 	.word	0x0801a519
 801a4e8:	0801a53f 	.word	0x0801a53f
 801a4ec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a4ee:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 801a4f2:	6b79      	ldr	r1, [r7, #52]	; 0x34
 801a4f4:	2000      	movs	r0, #0
 801a4f6:	61b9      	str	r1, [r7, #24]
 801a4f8:	61f8      	str	r0, [r7, #28]
 801a4fa:	e9d7 4506 	ldrd	r4, r5, [r7, #24]
 801a4fe:	4621      	mov	r1, r4
 801a500:	1851      	adds	r1, r2, r1
 801a502:	6139      	str	r1, [r7, #16]
 801a504:	4629      	mov	r1, r5
 801a506:	eb43 0101 	adc.w	r1, r3, r1
 801a50a:	6179      	str	r1, [r7, #20]
 801a50c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a50e:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 801a512:	e9c3 1206 	strd	r1, r2, [r3, #24]
 801a516:	e026      	b.n	801a566 <077287437cab717c06c53f5380059be6eda08357+0xea>
 801a518:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a51a:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a51e:	6b79      	ldr	r1, [r7, #52]	; 0x34
 801a520:	2000      	movs	r0, #0
 801a522:	468a      	mov	sl, r1
 801a524:	4683      	mov	fp, r0
 801a526:	eb12 010a 	adds.w	r1, r2, sl
 801a52a:	60b9      	str	r1, [r7, #8]
 801a52c:	eb43 030b 	adc.w	r3, r3, fp
 801a530:	60fb      	str	r3, [r7, #12]
 801a532:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a534:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 801a538:	e9c3 1202 	strd	r1, r2, [r3, #8]
 801a53c:	e013      	b.n	801a566 <077287437cab717c06c53f5380059be6eda08357+0xea>
 801a53e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a540:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 801a544:	6b79      	ldr	r1, [r7, #52]	; 0x34
 801a546:	2000      	movs	r0, #0
 801a548:	4688      	mov	r8, r1
 801a54a:	4681      	mov	r9, r0
 801a54c:	eb12 0108 	adds.w	r1, r2, r8
 801a550:	6039      	str	r1, [r7, #0]
 801a552:	eb43 0309 	adc.w	r3, r3, r9
 801a556:	607b      	str	r3, [r7, #4]
 801a558:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a55a:	e9d7 1200 	ldrd	r1, r2, [r7]
 801a55e:	e9c3 1204 	strd	r1, r2, [r3, #16]
 801a562:	e000      	b.n	801a566 <077287437cab717c06c53f5380059be6eda08357+0xea>
 801a564:	bf00      	nop
 801a566:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a568:	f897 202f 	ldrb.w	r2, [r7, #47]	; 0x2f
 801a56c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 801a570:	bf00      	nop
 801a572:	3740      	adds	r7, #64	; 0x40
 801a574:	46bd      	mov	sp, r7
 801a576:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801a57a:	bf00      	nop
 801a57c:	20000040 	.word	0x20000040

0801a580 <57d2957de5f8b1f87a34ecc897e93650c3f2e297>:
 801a580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a584:	b087      	sub	sp, #28
 801a586:	af00      	add	r7, sp, #0
 801a588:	4b2f      	ldr	r3, [pc, #188]	; (801a648 <57d2957de5f8b1f87a34ecc897e93650c3f2e297+0xc8>)
 801a58a:	681b      	ldr	r3, [r3, #0]
 801a58c:	617b      	str	r3, [r7, #20]
 801a58e:	f7eb fd5f 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801a592:	697b      	ldr	r3, [r7, #20]
 801a594:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 801a598:	e9c7 2300 	strd	r2, r3, [r7]
 801a59c:	f04f 0000 	mov.w	r0, #0
 801a5a0:	f04f 0100 	mov.w	r1, #0
 801a5a4:	e9c7 0102 	strd	r0, r1, [r7, #8]
 801a5a8:	6879      	ldr	r1, [r7, #4]
 801a5aa:	008e      	lsls	r6, r1, #2
 801a5ac:	60fe      	str	r6, [r7, #12]
 801a5ae:	68f9      	ldr	r1, [r7, #12]
 801a5b0:	6838      	ldr	r0, [r7, #0]
 801a5b2:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 801a5b6:	60f9      	str	r1, [r7, #12]
 801a5b8:	6839      	ldr	r1, [r7, #0]
 801a5ba:	0089      	lsls	r1, r1, #2
 801a5bc:	60b9      	str	r1, [r7, #8]
 801a5be:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 801a5c2:	4606      	mov	r6, r0
 801a5c4:	eb16 0802 	adds.w	r8, r6, r2
 801a5c8:	eb41 0903 	adc.w	r9, r1, r3
 801a5cc:	f04f 0000 	mov.w	r0, #0
 801a5d0:	f04f 0100 	mov.w	r1, #0
 801a5d4:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801a5d8:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
 801a5dc:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 801a5e0:	4680      	mov	r8, r0
 801a5e2:	4689      	mov	r9, r1
 801a5e4:	ebb8 0402 	subs.w	r4, r8, r2
 801a5e8:	eb69 0503 	sbc.w	r5, r9, r3
 801a5ec:	f04f 0000 	mov.w	r0, #0
 801a5f0:	f04f 0100 	mov.w	r1, #0
 801a5f4:	0129      	lsls	r1, r5, #4
 801a5f6:	ea41 7114 	orr.w	r1, r1, r4, lsr #28
 801a5fa:	0120      	lsls	r0, r4, #4
 801a5fc:	4604      	mov	r4, r0
 801a5fe:	460d      	mov	r5, r1
 801a600:	eb14 0a02 	adds.w	sl, r4, r2
 801a604:	eb45 0b03 	adc.w	fp, r5, r3
 801a608:	f04f 0200 	mov.w	r2, #0
 801a60c:	f04f 0300 	mov.w	r3, #0
 801a610:	ea4f 130b 	mov.w	r3, fp, lsl #4
 801a614:	ea43 731a 	orr.w	r3, r3, sl, lsr #28
 801a618:	ea4f 120a 	mov.w	r2, sl, lsl #4
 801a61c:	4692      	mov	sl, r2
 801a61e:	469b      	mov	fp, r3
 801a620:	4650      	mov	r0, sl
 801a622:	4659      	mov	r1, fp
 801a624:	697b      	ldr	r3, [r7, #20]
 801a626:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801a62a:	f7e6 fa07 	bl	8000a3c <__aeabi_uldivmod>
 801a62e:	4602      	mov	r2, r0
 801a630:	460b      	mov	r3, r1
 801a632:	4613      	mov	r3, r2
 801a634:	827b      	strh	r3, [r7, #18]
 801a636:	f7eb fd2b 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801a63a:	8a7b      	ldrh	r3, [r7, #18]
 801a63c:	4618      	mov	r0, r3
 801a63e:	371c      	adds	r7, #28
 801a640:	46bd      	mov	sp, r7
 801a642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a646:	bf00      	nop
 801a648:	20000040 	.word	0x20000040

0801a64c <430fd23aeea8952b7b416b6590815371f1106b85>:
 801a64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a650:	b087      	sub	sp, #28
 801a652:	af00      	add	r7, sp, #0
 801a654:	4b2f      	ldr	r3, [pc, #188]	; (801a714 <430fd23aeea8952b7b416b6590815371f1106b85+0xc8>)
 801a656:	681b      	ldr	r3, [r3, #0]
 801a658:	617b      	str	r3, [r7, #20]
 801a65a:	f7eb fcf9 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801a65e:	697b      	ldr	r3, [r7, #20]
 801a660:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a664:	e9c7 2300 	strd	r2, r3, [r7]
 801a668:	f04f 0000 	mov.w	r0, #0
 801a66c:	f04f 0100 	mov.w	r1, #0
 801a670:	e9c7 0102 	strd	r0, r1, [r7, #8]
 801a674:	6879      	ldr	r1, [r7, #4]
 801a676:	008e      	lsls	r6, r1, #2
 801a678:	60fe      	str	r6, [r7, #12]
 801a67a:	68f9      	ldr	r1, [r7, #12]
 801a67c:	6838      	ldr	r0, [r7, #0]
 801a67e:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 801a682:	60f9      	str	r1, [r7, #12]
 801a684:	6839      	ldr	r1, [r7, #0]
 801a686:	0089      	lsls	r1, r1, #2
 801a688:	60b9      	str	r1, [r7, #8]
 801a68a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 801a68e:	4606      	mov	r6, r0
 801a690:	eb16 0802 	adds.w	r8, r6, r2
 801a694:	eb41 0903 	adc.w	r9, r1, r3
 801a698:	f04f 0000 	mov.w	r0, #0
 801a69c:	f04f 0100 	mov.w	r1, #0
 801a6a0:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801a6a4:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
 801a6a8:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 801a6ac:	4680      	mov	r8, r0
 801a6ae:	4689      	mov	r9, r1
 801a6b0:	ebb8 0402 	subs.w	r4, r8, r2
 801a6b4:	eb69 0503 	sbc.w	r5, r9, r3
 801a6b8:	f04f 0000 	mov.w	r0, #0
 801a6bc:	f04f 0100 	mov.w	r1, #0
 801a6c0:	0129      	lsls	r1, r5, #4
 801a6c2:	ea41 7114 	orr.w	r1, r1, r4, lsr #28
 801a6c6:	0120      	lsls	r0, r4, #4
 801a6c8:	4604      	mov	r4, r0
 801a6ca:	460d      	mov	r5, r1
 801a6cc:	eb14 0a02 	adds.w	sl, r4, r2
 801a6d0:	eb45 0b03 	adc.w	fp, r5, r3
 801a6d4:	f04f 0200 	mov.w	r2, #0
 801a6d8:	f04f 0300 	mov.w	r3, #0
 801a6dc:	ea4f 130b 	mov.w	r3, fp, lsl #4
 801a6e0:	ea43 731a 	orr.w	r3, r3, sl, lsr #28
 801a6e4:	ea4f 120a 	mov.w	r2, sl, lsl #4
 801a6e8:	4692      	mov	sl, r2
 801a6ea:	469b      	mov	fp, r3
 801a6ec:	4650      	mov	r0, sl
 801a6ee:	4659      	mov	r1, fp
 801a6f0:	697b      	ldr	r3, [r7, #20]
 801a6f2:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801a6f6:	f7e6 f9a1 	bl	8000a3c <__aeabi_uldivmod>
 801a6fa:	4602      	mov	r2, r0
 801a6fc:	460b      	mov	r3, r1
 801a6fe:	4613      	mov	r3, r2
 801a700:	827b      	strh	r3, [r7, #18]
 801a702:	f7eb fcc5 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801a706:	8a7b      	ldrh	r3, [r7, #18]
 801a708:	4618      	mov	r0, r3
 801a70a:	371c      	adds	r7, #28
 801a70c:	46bd      	mov	sp, r7
 801a70e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a712:	bf00      	nop
 801a714:	20000040 	.word	0x20000040

0801a718 <2a6c61bbc29fcf617904472e829df358a186c125>:
 801a718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a71c:	b087      	sub	sp, #28
 801a71e:	af00      	add	r7, sp, #0
 801a720:	4b2f      	ldr	r3, [pc, #188]	; (801a7e0 <2a6c61bbc29fcf617904472e829df358a186c125+0xc8>)
 801a722:	681b      	ldr	r3, [r3, #0]
 801a724:	617b      	str	r3, [r7, #20]
 801a726:	f7eb fc93 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801a72a:	697b      	ldr	r3, [r7, #20]
 801a72c:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 801a730:	e9c7 2300 	strd	r2, r3, [r7]
 801a734:	f04f 0000 	mov.w	r0, #0
 801a738:	f04f 0100 	mov.w	r1, #0
 801a73c:	e9c7 0102 	strd	r0, r1, [r7, #8]
 801a740:	6879      	ldr	r1, [r7, #4]
 801a742:	008e      	lsls	r6, r1, #2
 801a744:	60fe      	str	r6, [r7, #12]
 801a746:	68f9      	ldr	r1, [r7, #12]
 801a748:	6838      	ldr	r0, [r7, #0]
 801a74a:	ea41 7190 	orr.w	r1, r1, r0, lsr #30
 801a74e:	60f9      	str	r1, [r7, #12]
 801a750:	6839      	ldr	r1, [r7, #0]
 801a752:	0089      	lsls	r1, r1, #2
 801a754:	60b9      	str	r1, [r7, #8]
 801a756:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 801a75a:	4606      	mov	r6, r0
 801a75c:	eb16 0802 	adds.w	r8, r6, r2
 801a760:	eb41 0903 	adc.w	r9, r1, r3
 801a764:	f04f 0000 	mov.w	r0, #0
 801a768:	f04f 0100 	mov.w	r1, #0
 801a76c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801a770:	ea41 7158 	orr.w	r1, r1, r8, lsr #29
 801a774:	ea4f 00c8 	mov.w	r0, r8, lsl #3
 801a778:	4680      	mov	r8, r0
 801a77a:	4689      	mov	r9, r1
 801a77c:	ebb8 0402 	subs.w	r4, r8, r2
 801a780:	eb69 0503 	sbc.w	r5, r9, r3
 801a784:	f04f 0000 	mov.w	r0, #0
 801a788:	f04f 0100 	mov.w	r1, #0
 801a78c:	0129      	lsls	r1, r5, #4
 801a78e:	ea41 7114 	orr.w	r1, r1, r4, lsr #28
 801a792:	0120      	lsls	r0, r4, #4
 801a794:	4604      	mov	r4, r0
 801a796:	460d      	mov	r5, r1
 801a798:	eb14 0a02 	adds.w	sl, r4, r2
 801a79c:	eb45 0b03 	adc.w	fp, r5, r3
 801a7a0:	f04f 0200 	mov.w	r2, #0
 801a7a4:	f04f 0300 	mov.w	r3, #0
 801a7a8:	ea4f 130b 	mov.w	r3, fp, lsl #4
 801a7ac:	ea43 731a 	orr.w	r3, r3, sl, lsr #28
 801a7b0:	ea4f 120a 	mov.w	r2, sl, lsl #4
 801a7b4:	4692      	mov	sl, r2
 801a7b6:	469b      	mov	fp, r3
 801a7b8:	4650      	mov	r0, sl
 801a7ba:	4659      	mov	r1, fp
 801a7bc:	697b      	ldr	r3, [r7, #20]
 801a7be:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801a7c2:	f7e6 f93b 	bl	8000a3c <__aeabi_uldivmod>
 801a7c6:	4602      	mov	r2, r0
 801a7c8:	460b      	mov	r3, r1
 801a7ca:	4613      	mov	r3, r2
 801a7cc:	827b      	strh	r3, [r7, #18]
 801a7ce:	f7eb fc5f 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801a7d2:	8a7b      	ldrh	r3, [r7, #18]
 801a7d4:	4618      	mov	r0, r3
 801a7d6:	371c      	adds	r7, #28
 801a7d8:	46bd      	mov	sp, r7
 801a7da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7de:	bf00      	nop
 801a7e0:	20000040 	.word	0x20000040

0801a7e4 <calculateFrequency>:
 801a7e4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801a7e8:	b08c      	sub	sp, #48	; 0x30
 801a7ea:	af00      	add	r7, sp, #0
 801a7ec:	4603      	mov	r3, r0
 801a7ee:	77fb      	strb	r3, [r7, #31]
 801a7f0:	4b2a      	ldr	r3, [pc, #168]	; (801a89c <calculateFrequency+0xb8>)
 801a7f2:	681b      	ldr	r3, [r3, #0]
 801a7f4:	62bb      	str	r3, [r7, #40]	; 0x28
 801a7f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801a7f8:	f8d3 0031 	ldr.w	r0, [r3, #49]	; 0x31
 801a7fc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801a800:	4619      	mov	r1, r3
 801a802:	e9c7 0108 	strd	r0, r1, [r7, #32]
 801a806:	2300      	movs	r3, #0
 801a808:	62fb      	str	r3, [r7, #44]	; 0x2c
 801a80a:	e027      	b.n	801a85c <calculateFrequency+0x78>
 801a80c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801a80e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a810:	33cc      	adds	r3, #204	; 0xcc
 801a812:	005b      	lsls	r3, r3, #1
 801a814:	4413      	add	r3, r2
 801a816:	885a      	ldrh	r2, [r3, #2]
 801a818:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801a81a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801a81c:	429a      	cmp	r2, r3
 801a81e:	d11a      	bne.n	801a856 <calculateFrequency+0x72>
 801a820:	7ffb      	ldrb	r3, [r7, #31]
 801a822:	2200      	movs	r2, #0
 801a824:	4698      	mov	r8, r3
 801a826:	4691      	mov	r9, r2
 801a828:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 801a82c:	eb18 0102 	adds.w	r1, r8, r2
 801a830:	6139      	str	r1, [r7, #16]
 801a832:	eb49 0303 	adc.w	r3, r9, r3
 801a836:	617b      	str	r3, [r7, #20]
 801a838:	4b19      	ldr	r3, [pc, #100]	; (801a8a0 <calculateFrequency+0xbc>)
 801a83a:	681b      	ldr	r3, [r3, #0]
 801a83c:	2200      	movs	r2, #0
 801a83e:	60bb      	str	r3, [r7, #8]
 801a840:	60fa      	str	r2, [r7, #12]
 801a842:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801a846:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 801a84a:	f7e6 f8f7 	bl	8000a3c <__aeabi_uldivmod>
 801a84e:	4915      	ldr	r1, [pc, #84]	; (801a8a4 <calculateFrequency+0xc0>)
 801a850:	188b      	adds	r3, r1, r2
 801a852:	781b      	ldrb	r3, [r3, #0]
 801a854:	e01d      	b.n	801a892 <calculateFrequency+0xae>
 801a856:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a858:	3301      	adds	r3, #1
 801a85a:	62fb      	str	r3, [r7, #44]	; 0x2c
 801a85c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801a85e:	2b00      	cmp	r3, #0
 801a860:	d0d4      	beq.n	801a80c <calculateFrequency+0x28>
 801a862:	7ffb      	ldrb	r3, [r7, #31]
 801a864:	2200      	movs	r2, #0
 801a866:	461c      	mov	r4, r3
 801a868:	4615      	mov	r5, r2
 801a86a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 801a86e:	eb14 0a02 	adds.w	sl, r4, r2
 801a872:	eb45 0b03 	adc.w	fp, r5, r3
 801a876:	4b0c      	ldr	r3, [pc, #48]	; (801a8a8 <calculateFrequency+0xc4>)
 801a878:	681b      	ldr	r3, [r3, #0]
 801a87a:	2200      	movs	r2, #0
 801a87c:	603b      	str	r3, [r7, #0]
 801a87e:	607a      	str	r2, [r7, #4]
 801a880:	e9d7 2300 	ldrd	r2, r3, [r7]
 801a884:	4650      	mov	r0, sl
 801a886:	4659      	mov	r1, fp
 801a888:	f7e6 f8d8 	bl	8000a3c <__aeabi_uldivmod>
 801a88c:	4907      	ldr	r1, [pc, #28]	; (801a8ac <calculateFrequency+0xc8>)
 801a88e:	188b      	adds	r3, r1, r2
 801a890:	781b      	ldrb	r3, [r3, #0]
 801a892:	4618      	mov	r0, r3
 801a894:	3730      	adds	r7, #48	; 0x30
 801a896:	46bd      	mov	sp, r7
 801a898:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801a89c:	20000040 	.word	0x20000040
 801a8a0:	08031918 	.word	0x08031918
 801a8a4:	0803191c 	.word	0x0803191c
 801a8a8:	080318cc 	.word	0x080318cc
 801a8ac:	080318d0 	.word	0x080318d0

0801a8b0 <setState>:
 801a8b0:	b480      	push	{r7}
 801a8b2:	b083      	sub	sp, #12
 801a8b4:	af00      	add	r7, sp, #0
 801a8b6:	4603      	mov	r3, r0
 801a8b8:	71fb      	strb	r3, [r7, #7]
 801a8ba:	4b05      	ldr	r3, [pc, #20]	; (801a8d0 <setState+0x20>)
 801a8bc:	681b      	ldr	r3, [r3, #0]
 801a8be:	79fa      	ldrb	r2, [r7, #7]
 801a8c0:	f883 217d 	strb.w	r2, [r3, #381]	; 0x17d
 801a8c4:	bf00      	nop
 801a8c6:	370c      	adds	r7, #12
 801a8c8:	46bd      	mov	sp, r7
 801a8ca:	bc80      	pop	{r7}
 801a8cc:	4770      	bx	lr
 801a8ce:	bf00      	nop
 801a8d0:	20000040 	.word	0x20000040

0801a8d4 <getState>:
 801a8d4:	b480      	push	{r7}
 801a8d6:	af00      	add	r7, sp, #0
 801a8d8:	4b03      	ldr	r3, [pc, #12]	; (801a8e8 <getState+0x14>)
 801a8da:	681b      	ldr	r3, [r3, #0]
 801a8dc:	f893 317d 	ldrb.w	r3, [r3, #381]	; 0x17d
 801a8e0:	4618      	mov	r0, r3
 801a8e2:	46bd      	mov	sp, r7
 801a8e4:	bc80      	pop	{r7}
 801a8e6:	4770      	bx	lr
 801a8e8:	20000040 	.word	0x20000040

0801a8ec <b7931a89d28a92b314e0dd9484b762986b0a117e>:
 801a8ec:	b590      	push	{r4, r7, lr}
 801a8ee:	b08b      	sub	sp, #44	; 0x2c
 801a8f0:	af02      	add	r7, sp, #8
 801a8f2:	4b9d      	ldr	r3, [pc, #628]	; (801ab68 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x27c>)
 801a8f4:	681b      	ldr	r3, [r3, #0]
 801a8f6:	61bb      	str	r3, [r7, #24]
 801a8f8:	2000      	movs	r0, #0
 801a8fa:	f7ff fdbf 	bl	801a47c <077287437cab717c06c53f5380059be6eda08357>
 801a8fe:	f7eb fd7d 	bl	80063fc <EMBENET_RADIO_Idle>
 801a902:	69bb      	ldr	r3, [r7, #24]
 801a904:	2200      	movs	r2, #0
 801a906:	f8c3 2190 	str.w	r2, [r3, #400]	; 0x190
 801a90a:	69bb      	ldr	r3, [r7, #24]
 801a90c:	2200      	movs	r2, #0
 801a90e:	f8c3 2194 	str.w	r2, [r3, #404]	; 0x194
 801a912:	69bb      	ldr	r3, [r7, #24]
 801a914:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a918:	2b00      	cmp	r3, #0
 801a91a:	d038      	beq.n	801a98e <b7931a89d28a92b314e0dd9484b762986b0a117e+0xa2>
 801a91c:	69bb      	ldr	r3, [r7, #24]
 801a91e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a922:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 801a926:	2b00      	cmp	r3, #0
 801a928:	d019      	beq.n	801a95e <b7931a89d28a92b314e0dd9484b762986b0a117e+0x72>
 801a92a:	69bb      	ldr	r3, [r7, #24]
 801a92c:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a930:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 801a934:	3a01      	subs	r2, #1
 801a936:	b2d2      	uxtb	r2, r2
 801a938:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801a93c:	69bb      	ldr	r3, [r7, #24]
 801a93e:	f103 0031 	add.w	r0, r3, #49	; 0x31
 801a942:	69bb      	ldr	r3, [r7, #24]
 801a944:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a948:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 801a94c:	2b00      	cmp	r3, #0
 801a94e:	bf0c      	ite	eq
 801a950:	2301      	moveq	r3, #1
 801a952:	2300      	movne	r3, #0
 801a954:	b2db      	uxtb	r3, r3
 801a956:	461a      	mov	r2, r3
 801a958:	2100      	movs	r1, #0
 801a95a:	f003 fae1 	bl	801df20 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f>
 801a95e:	69bb      	ldr	r3, [r7, #24]
 801a960:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a964:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 801a968:	2b00      	cmp	r3, #0
 801a96a:	d107      	bne.n	801a97c <b7931a89d28a92b314e0dd9484b762986b0a117e+0x90>
 801a96c:	69bb      	ldr	r3, [r7, #24]
 801a96e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a972:	2100      	movs	r1, #0
 801a974:	4618      	mov	r0, r3
 801a976:	f7ff fcd7 	bl	801a328 <fdc48e947b5f2f5ed5f47de398f99296ca12bee8>
 801a97a:	e004      	b.n	801a986 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x9a>
 801a97c:	69bb      	ldr	r3, [r7, #24]
 801a97e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801a982:	2240      	movs	r2, #64	; 0x40
 801a984:	705a      	strb	r2, [r3, #1]
 801a986:	69bb      	ldr	r3, [r7, #24]
 801a988:	2200      	movs	r2, #0
 801a98a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 801a98e:	69bb      	ldr	r3, [r7, #24]
 801a990:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801a994:	2b00      	cmp	r3, #0
 801a996:	d009      	beq.n	801a9ac <b7931a89d28a92b314e0dd9484b762986b0a117e+0xc0>
 801a998:	69bb      	ldr	r3, [r7, #24]
 801a99a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 801a99e:	4618      	mov	r0, r3
 801a9a0:	f7f4 ffd4 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801a9a4:	69bb      	ldr	r3, [r7, #24]
 801a9a6:	2200      	movs	r2, #0
 801a9a8:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 801a9ac:	69bb      	ldr	r3, [r7, #24]
 801a9ae:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 801a9b2:	2b00      	cmp	r3, #0
 801a9b4:	d009      	beq.n	801a9ca <b7931a89d28a92b314e0dd9484b762986b0a117e+0xde>
 801a9b6:	69bb      	ldr	r3, [r7, #24]
 801a9b8:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 801a9bc:	4618      	mov	r0, r3
 801a9be:	f7f4 ffc5 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801a9c2:	69bb      	ldr	r3, [r7, #24]
 801a9c4:	2200      	movs	r2, #0
 801a9c6:	f8c3 2188 	str.w	r2, [r3, #392]	; 0x188
 801a9ca:	69bb      	ldr	r3, [r7, #24]
 801a9cc:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	d009      	beq.n	801a9e8 <b7931a89d28a92b314e0dd9484b762986b0a117e+0xfc>
 801a9d4:	69bb      	ldr	r3, [r7, #24]
 801a9d6:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 801a9da:	4618      	mov	r0, r3
 801a9dc:	f7f4 ffb6 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801a9e0:	69bb      	ldr	r3, [r7, #24]
 801a9e2:	2200      	movs	r2, #0
 801a9e4:	f8c3 218c 	str.w	r2, [r3, #396]	; 0x18c
 801a9e8:	69bb      	ldr	r3, [r7, #24]
 801a9ea:	f8d3 2031 	ldr.w	r2, [r3, #49]	; 0x31
 801a9ee:	4611      	mov	r1, r2
 801a9f0:	f893 2035 	ldrb.w	r2, [r3, #53]	; 0x35
 801a9f4:	2300      	movs	r3, #0
 801a9f6:	f362 0307 	bfi	r3, r2, #0, #8
 801a9fa:	4608      	mov	r0, r1
 801a9fc:	4619      	mov	r1, r3
 801a9fe:	f7f6 fb25 	bl	801104c <7b29e7e9f3d2a5fbd391fecca02c9843bed48afc>
 801aa02:	f7f2 fab7 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 801aa06:	4603      	mov	r3, r0
 801aa08:	2b00      	cmp	r3, #0
 801aa0a:	d00d      	beq.n	801aa28 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x13c>
 801aa0c:	69bb      	ldr	r3, [r7, #24]
 801aa0e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801aa10:	1c5c      	adds	r4, r3, #1
 801aa12:	f001 ffd5 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801aa16:	4603      	mov	r3, r0
 801aa18:	fb94 f2f3 	sdiv	r2, r4, r3
 801aa1c:	fb02 f303 	mul.w	r3, r2, r3
 801aa20:	1ae3      	subs	r3, r4, r3
 801aa22:	b29a      	uxth	r2, r3
 801aa24:	69bb      	ldr	r3, [r7, #24]
 801aa26:	871a      	strh	r2, [r3, #56]	; 0x38
 801aa28:	69bb      	ldr	r3, [r7, #24]
 801aa2a:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 801aa2c:	69bb      	ldr	r3, [r7, #24]
 801aa2e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801aa30:	1ad3      	subs	r3, r2, r3
 801aa32:	83fb      	strh	r3, [r7, #30]
 801aa34:	69bb      	ldr	r3, [r7, #24]
 801aa36:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 801aa38:	69bb      	ldr	r3, [r7, #24]
 801aa3a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801aa3c:	429a      	cmp	r2, r3
 801aa3e:	d806      	bhi.n	801aa4e <b7931a89d28a92b314e0dd9484b762986b0a117e+0x162>
 801aa40:	f001 ffbe 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801aa44:	4603      	mov	r3, r0
 801aa46:	461a      	mov	r2, r3
 801aa48:	8bfb      	ldrh	r3, [r7, #30]
 801aa4a:	4413      	add	r3, r2
 801aa4c:	83fb      	strh	r3, [r7, #30]
 801aa4e:	69bb      	ldr	r3, [r7, #24]
 801aa50:	f893 31b0 	ldrb.w	r3, [r3, #432]	; 0x1b0
 801aa54:	4618      	mov	r0, r3
 801aa56:	f7f7 f835 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801aa5a:	2000      	movs	r0, #0
 801aa5c:	f7ff ff28 	bl	801a8b0 <setState>
 801aa60:	69bb      	ldr	r3, [r7, #24]
 801aa62:	e9d3 236a 	ldrd	r2, r3, [r3, #424]	; 0x1a8
 801aa66:	e9c7 2304 	strd	r2, r3, [r7, #16]
 801aa6a:	69b9      	ldr	r1, [r7, #24]
 801aa6c:	f04f 0200 	mov.w	r2, #0
 801aa70:	f04f 0300 	mov.w	r3, #0
 801aa74:	e9c1 236a 	strd	r2, r3, [r1, #424]	; 0x1a8
 801aa78:	69bb      	ldr	r3, [r7, #24]
 801aa7a:	3331      	adds	r3, #49	; 0x31
 801aa7c:	4618      	mov	r0, r3
 801aa7e:	f7f5 f807 	bl	800fa90 <77b737f3175c59c67851de07d0921a2dae9a70ab>
 801aa82:	69bb      	ldr	r3, [r7, #24]
 801aa84:	f893 01b0 	ldrb.w	r0, [r3, #432]	; 0x1b0
 801aa88:	8bfb      	ldrh	r3, [r7, #30]
 801aa8a:	4a38      	ldr	r2, [pc, #224]	; (801ab6c <b7931a89d28a92b314e0dd9484b762986b0a117e+0x280>)
 801aa8c:	6912      	ldr	r2, [r2, #16]
 801aa8e:	fb03 f202 	mul.w	r2, r3, r2
 801aa92:	693b      	ldr	r3, [r7, #16]
 801aa94:	441a      	add	r2, r3
 801aa96:	69bb      	ldr	r3, [r7, #24]
 801aa98:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801aa9c:	2100      	movs	r1, #0
 801aa9e:	9101      	str	r1, [sp, #4]
 801aaa0:	4933      	ldr	r1, [pc, #204]	; (801ab70 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x284>)
 801aaa2:	9100      	str	r1, [sp, #0]
 801aaa4:	2101      	movs	r1, #1
 801aaa6:	f7f6 ff21 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801aaaa:	f7f2 fa63 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 801aaae:	4603      	mov	r3, r0
 801aab0:	f083 0301 	eor.w	r3, r3, #1
 801aab4:	b2db      	uxtb	r3, r3
 801aab6:	2b00      	cmp	r3, #0
 801aab8:	d044      	beq.n	801ab44 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x258>
 801aaba:	69bb      	ldr	r3, [r7, #24]
 801aabc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801aac0:	2b00      	cmp	r3, #0
 801aac2:	d03f      	beq.n	801ab44 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x258>
 801aac4:	69bb      	ldr	r3, [r7, #24]
 801aac6:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 801aac8:	69bb      	ldr	r3, [r7, #24]
 801aaca:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801aacc:	1ad3      	subs	r3, r2, r3
 801aace:	b29a      	uxth	r2, r3
 801aad0:	69bb      	ldr	r3, [r7, #24]
 801aad2:	f8a3 21ba 	strh.w	r2, [r3, #442]	; 0x1ba
 801aad6:	69bb      	ldr	r3, [r7, #24]
 801aad8:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
 801aada:	69bb      	ldr	r3, [r7, #24]
 801aadc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 801aade:	429a      	cmp	r2, r3
 801aae0:	d80a      	bhi.n	801aaf8 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x20c>
 801aae2:	69bb      	ldr	r3, [r7, #24]
 801aae4:	f8b3 41ba 	ldrh.w	r4, [r3, #442]	; 0x1ba
 801aae8:	f001 ff6a 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801aaec:	4603      	mov	r3, r0
 801aaee:	4423      	add	r3, r4
 801aaf0:	b29a      	uxth	r2, r3
 801aaf2:	69bb      	ldr	r3, [r7, #24]
 801aaf4:	f8a3 21ba 	strh.w	r2, [r3, #442]	; 0x1ba
 801aaf8:	69bb      	ldr	r3, [r7, #24]
 801aafa:	f8b3 31ba 	ldrh.w	r3, [r3, #442]	; 0x1ba
 801aafe:	3b01      	subs	r3, #1
 801ab00:	b29a      	uxth	r2, r3
 801ab02:	69bb      	ldr	r3, [r7, #24]
 801ab04:	f8a3 21ba 	strh.w	r2, [r3, #442]	; 0x1ba
 801ab08:	69bb      	ldr	r3, [r7, #24]
 801ab0a:	f8b3 31ba 	ldrh.w	r3, [r3, #442]	; 0x1ba
 801ab0e:	2b00      	cmp	r3, #0
 801ab10:	d018      	beq.n	801ab44 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x258>
 801ab12:	69bb      	ldr	r3, [r7, #24]
 801ab14:	f8b3 41ba 	ldrh.w	r4, [r3, #442]	; 0x1ba
 801ab18:	f001 ff52 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801ab1c:	4603      	mov	r3, r0
 801ab1e:	429c      	cmp	r4, r3
 801ab20:	d810      	bhi.n	801ab44 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x258>
 801ab22:	69bb      	ldr	r3, [r7, #24]
 801ab24:	f893 01b8 	ldrb.w	r0, [r3, #440]	; 0x1b8
 801ab28:	4b10      	ldr	r3, [pc, #64]	; (801ab6c <b7931a89d28a92b314e0dd9484b762986b0a117e+0x280>)
 801ab2a:	691a      	ldr	r2, [r3, #16]
 801ab2c:	693b      	ldr	r3, [r7, #16]
 801ab2e:	441a      	add	r2, r3
 801ab30:	69bb      	ldr	r3, [r7, #24]
 801ab32:	f8d3 31b4 	ldr.w	r3, [r3, #436]	; 0x1b4
 801ab36:	2100      	movs	r1, #0
 801ab38:	9101      	str	r1, [sp, #4]
 801ab3a:	490e      	ldr	r1, [pc, #56]	; (801ab74 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x288>)
 801ab3c:	9100      	str	r1, [sp, #0]
 801ab3e:	2101      	movs	r1, #1
 801ab40:	f7f6 fed4 	bl	80118ec <730eb7956d67b4105233f5dd87140a7c05a0a0f0>
 801ab44:	4b08      	ldr	r3, [pc, #32]	; (801ab68 <b7931a89d28a92b314e0dd9484b762986b0a117e+0x27c>)
 801ab46:	681b      	ldr	r3, [r3, #0]
 801ab48:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 801ab4c:	f8d3 31ac 	ldr.w	r3, [r3, #428]	; 0x1ac
 801ab50:	60fb      	str	r3, [r7, #12]
 801ab52:	68fb      	ldr	r3, [r7, #12]
 801ab54:	2b00      	cmp	r3, #0
 801ab56:	d002      	beq.n	801ab5e <b7931a89d28a92b314e0dd9484b762986b0a117e+0x272>
 801ab58:	68fb      	ldr	r3, [r7, #12]
 801ab5a:	2000      	movs	r0, #0
 801ab5c:	4798      	blx	r3
 801ab5e:	bf00      	nop
 801ab60:	3724      	adds	r7, #36	; 0x24
 801ab62:	46bd      	mov	sp, r7
 801ab64:	bd90      	pop	{r4, r7, pc}
 801ab66:	bf00      	nop
 801ab68:	20000040 	.word	0x20000040
 801ab6c:	080318ac 	.word	0x080318ac
 801ab70:	08017319 	.word	0x08017319
 801ab74:	0801ab79 	.word	0x0801ab79

0801ab78 <notifyFreeSlots>:
 801ab78:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801ab7c:	b08e      	sub	sp, #56	; 0x38
 801ab7e:	af02      	add	r7, sp, #8
 801ab80:	60f8      	str	r0, [r7, #12]
 801ab82:	4b34      	ldr	r3, [pc, #208]	; (801ac54 <notifyFreeSlots+0xdc>)
 801ab84:	681b      	ldr	r3, [r3, #0]
 801ab86:	62fb      	str	r3, [r7, #44]	; 0x2c
 801ab88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ab8a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801ab8e:	2b00      	cmp	r3, #0
 801ab90:	d043      	beq.n	801ac1a <notifyFreeSlots+0xa2>
 801ab92:	f7eb fa5d 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801ab96:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801ab98:	f8d1 2031 	ldr.w	r2, [r1, #49]	; 0x31
 801ab9c:	f891 1035 	ldrb.w	r1, [r1, #53]	; 0x35
 801aba0:	460b      	mov	r3, r1
 801aba2:	1c54      	adds	r4, r2, #1
 801aba4:	f143 0500 	adc.w	r5, r3, #0
 801aba8:	603c      	str	r4, [r7, #0]
 801abaa:	f005 03ff 	and.w	r3, r5, #255	; 0xff
 801abae:	607b      	str	r3, [r7, #4]
 801abb0:	e9d7 4500 	ldrd	r4, r5, [r7]
 801abb4:	e9c7 4508 	strd	r4, r5, [r7, #32]
 801abb8:	4b27      	ldr	r3, [pc, #156]	; (801ac58 <notifyFreeSlots+0xe0>)
 801abba:	691b      	ldr	r3, [r3, #16]
 801abbc:	2200      	movs	r2, #0
 801abbe:	469a      	mov	sl, r3
 801abc0:	4693      	mov	fp, r2
 801abc2:	6a3b      	ldr	r3, [r7, #32]
 801abc4:	fb0b f203 	mul.w	r2, fp, r3
 801abc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801abca:	fb0a f303 	mul.w	r3, sl, r3
 801abce:	4413      	add	r3, r2
 801abd0:	6a3a      	ldr	r2, [r7, #32]
 801abd2:	fba2 890a 	umull	r8, r9, r2, sl
 801abd6:	444b      	add	r3, r9
 801abd8:	4699      	mov	r9, r3
 801abda:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801abde:	f04f 0300 	mov.w	r3, #0
 801abe2:	4640      	mov	r0, r8
 801abe4:	4649      	mov	r1, r9
 801abe6:	f7e5 ff29 	bl	8000a3c <__aeabi_uldivmod>
 801abea:	4602      	mov	r2, r0
 801abec:	460b      	mov	r3, r1
 801abee:	e9c7 2306 	strd	r2, r3, [r7, #24]
 801abf2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801abf4:	f8b3 31ba 	ldrh.w	r3, [r3, #442]	; 0x1ba
 801abf8:	461a      	mov	r2, r3
 801abfa:	4b17      	ldr	r3, [pc, #92]	; (801ac58 <notifyFreeSlots+0xe0>)
 801abfc:	691b      	ldr	r3, [r3, #16]
 801abfe:	fb02 f303 	mul.w	r3, r2, r3
 801ac02:	617b      	str	r3, [r7, #20]
 801ac04:	f7eb fa44 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801ac08:	697b      	ldr	r3, [r7, #20]
 801ac0a:	9300      	str	r3, [sp, #0]
 801ac0c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 801ac10:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 801ac14:	f00e f9b2 	bl	8028f7c <EMBENET_INTERNAL_TRACE_OnFreeSlots>
 801ac18:	e016      	b.n	801ac48 <notifyFreeSlots+0xd0>
 801ac1a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ac1c:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 801ac20:	2b00      	cmp	r3, #0
 801ac22:	d00d      	beq.n	801ac40 <notifyFreeSlots+0xc8>
 801ac24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ac26:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 801ac2a:	9300      	str	r3, [sp, #0]
 801ac2c:	f04f 0200 	mov.w	r2, #0
 801ac30:	f04f 0300 	mov.w	r3, #0
 801ac34:	f04f 0000 	mov.w	r0, #0
 801ac38:	f04f 0100 	mov.w	r1, #0
 801ac3c:	f00e f99e 	bl	8028f7c <EMBENET_INTERNAL_TRACE_OnFreeSlots>
 801ac40:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801ac42:	2200      	movs	r2, #0
 801ac44:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
 801ac48:	bf00      	nop
 801ac4a:	3730      	adds	r7, #48	; 0x30
 801ac4c:	46bd      	mov	sp, r7
 801ac4e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801ac52:	bf00      	nop
 801ac54:	20000040 	.word	0x20000040
 801ac58:	080318ac 	.word	0x080318ac

0801ac5c <60f007314f15c808f67a076d33295282887c81e9>:
 801ac5c:	b480      	push	{r7}
 801ac5e:	af00      	add	r7, sp, #0
 801ac60:	4b03      	ldr	r3, [pc, #12]	; (801ac70 <60f007314f15c808f67a076d33295282887c81e9+0x14>)
 801ac62:	681b      	ldr	r3, [r3, #0]
 801ac64:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801ac68:	4618      	mov	r0, r3
 801ac6a:	46bd      	mov	sp, r7
 801ac6c:	bc80      	pop	{r7}
 801ac6e:	4770      	bx	lr
 801ac70:	20000040 	.word	0x20000040

0801ac74 <2fba4ddec868eb31998278adcb690f685bb9d2cf>:
 801ac74:	b580      	push	{r7, lr}
 801ac76:	af00      	add	r7, sp, #0
 801ac78:	f7ff fad2 	bl	801a220 <e0d63f279bcffa109806a257de8645074809531c>
 801ac7c:	bf00      	nop
 801ac7e:	bd80      	pop	{r7, pc}

0801ac80 <423de69afc5c7b88ba71928d815161412a3b9f11>:
 801ac80:	b580      	push	{r7, lr}
 801ac82:	b084      	sub	sp, #16
 801ac84:	af00      	add	r7, sp, #0
 801ac86:	6078      	str	r0, [r7, #4]
 801ac88:	6039      	str	r1, [r7, #0]
 801ac8a:	4b0f      	ldr	r3, [pc, #60]	; (801acc8 <423de69afc5c7b88ba71928d815161412a3b9f11+0x48>)
 801ac8c:	681b      	ldr	r3, [r3, #0]
 801ac8e:	60fb      	str	r3, [r7, #12]
 801ac90:	68fb      	ldr	r3, [r7, #12]
 801ac92:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801ac96:	2b00      	cmp	r3, #0
 801ac98:	d011      	beq.n	801acbe <423de69afc5c7b88ba71928d815161412a3b9f11+0x3e>
 801ac9a:	f7eb f9d9 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801ac9e:	687a      	ldr	r2, [r7, #4]
 801aca0:	68fb      	ldr	r3, [r7, #12]
 801aca2:	3331      	adds	r3, #49	; 0x31
 801aca4:	6819      	ldr	r1, [r3, #0]
 801aca6:	6011      	str	r1, [r2, #0]
 801aca8:	791b      	ldrb	r3, [r3, #4]
 801acaa:	7113      	strb	r3, [r2, #4]
 801acac:	68fb      	ldr	r3, [r7, #12]
 801acae:	f8d3 21b4 	ldr.w	r2, [r3, #436]	; 0x1b4
 801acb2:	683b      	ldr	r3, [r7, #0]
 801acb4:	601a      	str	r2, [r3, #0]
 801acb6:	f7eb f9eb 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801acba:	2301      	movs	r3, #1
 801acbc:	e000      	b.n	801acc0 <423de69afc5c7b88ba71928d815161412a3b9f11+0x40>
 801acbe:	2300      	movs	r3, #0
 801acc0:	4618      	mov	r0, r3
 801acc2:	3710      	adds	r7, #16
 801acc4:	46bd      	mov	sp, r7
 801acc6:	bd80      	pop	{r7, pc}
 801acc8:	20000040 	.word	0x20000040

0801accc <18852a76524cbdb850c5d6a14b013c23dafcaddf>:
 801accc:	b480      	push	{r7}
 801acce:	b087      	sub	sp, #28
 801acd0:	af00      	add	r7, sp, #0
 801acd2:	e9c7 0102 	strd	r0, r1, [r7, #8]
 801acd6:	e9c7 2300 	strd	r2, r3, [r7]
 801acda:	4b28      	ldr	r3, [pc, #160]	; (801ad7c <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb0>)
 801acdc:	781b      	ldrb	r3, [r3, #0]
 801acde:	2b00      	cmp	r3, #0
 801ace0:	d046      	beq.n	801ad70 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xa4>
 801ace2:	2300      	movs	r3, #0
 801ace4:	75fb      	strb	r3, [r7, #23]
 801ace6:	2300      	movs	r3, #0
 801ace8:	613b      	str	r3, [r7, #16]
 801acea:	e03a      	b.n	801ad62 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x96>
 801acec:	4a24      	ldr	r2, [pc, #144]	; (801ad80 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb4>)
 801acee:	693b      	ldr	r3, [r7, #16]
 801acf0:	011b      	lsls	r3, r3, #4
 801acf2:	4413      	add	r3, r2
 801acf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 801acf8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 801acfc:	4299      	cmp	r1, r3
 801acfe:	bf08      	it	eq
 801ad00:	4290      	cmpeq	r0, r2
 801ad02:	d10f      	bne.n	801ad24 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x58>
 801ad04:	4a1e      	ldr	r2, [pc, #120]	; (801ad80 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb4>)
 801ad06:	693b      	ldr	r3, [r7, #16]
 801ad08:	011b      	lsls	r3, r3, #4
 801ad0a:	4413      	add	r3, r2
 801ad0c:	3308      	adds	r3, #8
 801ad0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ad12:	e9d7 0100 	ldrd	r0, r1, [r7]
 801ad16:	4299      	cmp	r1, r3
 801ad18:	bf08      	it	eq
 801ad1a:	4290      	cmpeq	r0, r2
 801ad1c:	d102      	bne.n	801ad24 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x58>
 801ad1e:	2301      	movs	r3, #1
 801ad20:	75fb      	strb	r3, [r7, #23]
 801ad22:	e023      	b.n	801ad6c <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xa0>
 801ad24:	4a16      	ldr	r2, [pc, #88]	; (801ad80 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb4>)
 801ad26:	693b      	ldr	r3, [r7, #16]
 801ad28:	011b      	lsls	r3, r3, #4
 801ad2a:	4413      	add	r3, r2
 801ad2c:	3308      	adds	r3, #8
 801ad2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ad32:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 801ad36:	4299      	cmp	r1, r3
 801ad38:	bf08      	it	eq
 801ad3a:	4290      	cmpeq	r0, r2
 801ad3c:	d10e      	bne.n	801ad5c <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x90>
 801ad3e:	4a10      	ldr	r2, [pc, #64]	; (801ad80 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb4>)
 801ad40:	693b      	ldr	r3, [r7, #16]
 801ad42:	011b      	lsls	r3, r3, #4
 801ad44:	4413      	add	r3, r2
 801ad46:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ad4a:	e9d7 0100 	ldrd	r0, r1, [r7]
 801ad4e:	4299      	cmp	r1, r3
 801ad50:	bf08      	it	eq
 801ad52:	4290      	cmpeq	r0, r2
 801ad54:	d102      	bne.n	801ad5c <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x90>
 801ad56:	2301      	movs	r3, #1
 801ad58:	75fb      	strb	r3, [r7, #23]
 801ad5a:	e007      	b.n	801ad6c <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xa0>
 801ad5c:	693b      	ldr	r3, [r7, #16]
 801ad5e:	3301      	adds	r3, #1
 801ad60:	613b      	str	r3, [r7, #16]
 801ad62:	4b08      	ldr	r3, [pc, #32]	; (801ad84 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xb8>)
 801ad64:	681b      	ldr	r3, [r3, #0]
 801ad66:	693a      	ldr	r2, [r7, #16]
 801ad68:	429a      	cmp	r2, r3
 801ad6a:	d3bf      	bcc.n	801acec <18852a76524cbdb850c5d6a14b013c23dafcaddf+0x20>
 801ad6c:	7dfb      	ldrb	r3, [r7, #23]
 801ad6e:	e000      	b.n	801ad72 <18852a76524cbdb850c5d6a14b013c23dafcaddf+0xa6>
 801ad70:	2301      	movs	r3, #1
 801ad72:	4618      	mov	r0, r3
 801ad74:	371c      	adds	r7, #28
 801ad76:	46bd      	mov	sp, r7
 801ad78:	bc80      	pop	{r7}
 801ad7a:	4770      	bx	lr
 801ad7c:	0803192c 	.word	0x0803192c
 801ad80:	08031930 	.word	0x08031930
 801ad84:	08031940 	.word	0x08031940

0801ad88 <bcbd76277dc83b5a545ee18a3f2075697c040c84>:
 801ad88:	b480      	push	{r7}
 801ad8a:	b085      	sub	sp, #20
 801ad8c:	af00      	add	r7, sp, #0
 801ad8e:	4b06      	ldr	r3, [pc, #24]	; (801ada8 <bcbd76277dc83b5a545ee18a3f2075697c040c84+0x20>)
 801ad90:	681b      	ldr	r3, [r3, #0]
 801ad92:	f503 7335 	add.w	r3, r3, #724	; 0x2d4
 801ad96:	2200      	movs	r2, #0
 801ad98:	601a      	str	r2, [r3, #0]
 801ad9a:	605a      	str	r2, [r3, #4]
 801ad9c:	609a      	str	r2, [r3, #8]
 801ad9e:	bf00      	nop
 801ada0:	3714      	adds	r7, #20
 801ada2:	46bd      	mov	sp, r7
 801ada4:	bc80      	pop	{r7}
 801ada6:	4770      	bx	lr
 801ada8:	20000040 	.word	0x20000040

0801adac <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f>:
 801adac:	b590      	push	{r4, r7, lr}
 801adae:	b09d      	sub	sp, #116	; 0x74
 801adb0:	af04      	add	r7, sp, #16
 801adb2:	4603      	mov	r3, r0
 801adb4:	80fb      	strh	r3, [r7, #6]
 801adb6:	4b78      	ldr	r3, [pc, #480]	; (801af98 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1ec>)
 801adb8:	681b      	ldr	r3, [r3, #0]
 801adba:	f503 7335 	add.w	r3, r3, #724	; 0x2d4
 801adbe:	653b      	str	r3, [r7, #80]	; 0x50
 801adc0:	2300      	movs	r3, #0
 801adc2:	65fb      	str	r3, [r7, #92]	; 0x5c
 801adc4:	e00e      	b.n	801ade4 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x38>
 801adc6:	6d39      	ldr	r1, [r7, #80]	; 0x50
 801adc8:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801adca:	4613      	mov	r3, r2
 801adcc:	005b      	lsls	r3, r3, #1
 801adce:	4413      	add	r3, r2
 801add0:	009b      	lsls	r3, r3, #2
 801add2:	440b      	add	r3, r1
 801add4:	881b      	ldrh	r3, [r3, #0]
 801add6:	88fa      	ldrh	r2, [r7, #6]
 801add8:	429a      	cmp	r2, r3
 801adda:	d007      	beq.n	801adec <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x40>
 801addc:	bf00      	nop
 801adde:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801ade0:	3301      	adds	r3, #1
 801ade2:	65fb      	str	r3, [r7, #92]	; 0x5c
 801ade4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801ade6:	2b00      	cmp	r3, #0
 801ade8:	d0ed      	beq.n	801adc6 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1a>
 801adea:	e000      	b.n	801adee <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x42>
 801adec:	bf00      	nop
 801adee:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801adf0:	2b01      	cmp	r3, #1
 801adf2:	d10f      	bne.n	801ae14 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x68>
 801adf4:	4a69      	ldr	r2, [pc, #420]	; (801af9c <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1f0>)
 801adf6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801adfa:	e892 0003 	ldmia.w	r2, {r0, r1}
 801adfe:	e883 0003 	stmia.w	r3, {r0, r1}
 801ae02:	4a67      	ldr	r2, [pc, #412]	; (801afa0 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1f4>)
 801ae04:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801ae08:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ae0c:	f7fa f9fc 	bl	8015208 <LOGGER_PrintLine>
 801ae10:	2300      	movs	r3, #0
 801ae12:	e0bc      	b.n	801af8e <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1e2>
 801ae14:	f001 fdd4 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801ae18:	4603      	mov	r3, r0
 801ae1a:	f8a7 305a 	strh.w	r3, [r7, #90]	; 0x5a
 801ae1e:	2300      	movs	r3, #0
 801ae20:	657b      	str	r3, [r7, #84]	; 0x54
 801ae22:	e021      	b.n	801ae68 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0xbc>
 801ae24:	2300      	movs	r3, #0
 801ae26:	f8a7 305a 	strh.w	r3, [r7, #90]	; 0x5a
 801ae2a:	e010      	b.n	801ae4e <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0xa2>
 801ae2c:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801ae30:	4618      	mov	r0, r3
 801ae32:	f002 f9b9 	bl	801d1a8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34>
 801ae36:	4603      	mov	r3, r0
 801ae38:	2b00      	cmp	r3, #0
 801ae3a:	d003      	beq.n	801ae44 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x98>
 801ae3c:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801ae40:	2b00      	cmp	r3, #0
 801ae42:	d10d      	bne.n	801ae60 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0xb4>
 801ae44:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801ae48:	3301      	adds	r3, #1
 801ae4a:	f8a7 305a 	strh.w	r3, [r7, #90]	; 0x5a
 801ae4e:	f001 fdb7 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801ae52:	4603      	mov	r3, r0
 801ae54:	461a      	mov	r2, r3
 801ae56:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801ae5a:	4293      	cmp	r3, r2
 801ae5c:	d3e6      	bcc.n	801ae2c <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x80>
 801ae5e:	e000      	b.n	801ae62 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0xb6>
 801ae60:	bf00      	nop
 801ae62:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801ae64:	3301      	adds	r3, #1
 801ae66:	657b      	str	r3, [r7, #84]	; 0x54
 801ae68:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801ae6a:	2b00      	cmp	r3, #0
 801ae6c:	d0da      	beq.n	801ae24 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x78>
 801ae6e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ae72:	2200      	movs	r2, #0
 801ae74:	601a      	str	r2, [r3, #0]
 801ae76:	605a      	str	r2, [r3, #4]
 801ae78:	609a      	str	r2, [r3, #8]
 801ae7a:	60da      	str	r2, [r3, #12]
 801ae7c:	741a      	strb	r2, [r3, #16]
 801ae7e:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801ae82:	88fb      	ldrh	r3, [r7, #6]
 801ae84:	4611      	mov	r1, r2
 801ae86:	4618      	mov	r0, r3
 801ae88:	f001 ffac 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801ae8c:	4603      	mov	r3, r0
 801ae8e:	f083 0301 	eor.w	r3, r3, #1
 801ae92:	b2db      	uxtb	r3, r3
 801ae94:	2b00      	cmp	r3, #0
 801ae96:	d00f      	beq.n	801aeb8 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x10c>
 801ae98:	2300      	movs	r3, #0
 801ae9a:	627b      	str	r3, [r7, #36]	; 0x24
 801ae9c:	4b41      	ldr	r3, [pc, #260]	; (801afa4 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1f8>)
 801ae9e:	62bb      	str	r3, [r7, #40]	; 0x28
 801aea0:	4a41      	ldr	r2, [pc, #260]	; (801afa8 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1fc>)
 801aea2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801aea6:	e893 0003 	ldmia.w	r3, {r0, r1}
 801aeaa:	f7fa f9ad 	bl	8015208 <LOGGER_PrintLine>
 801aeae:	2264      	movs	r2, #100	; 0x64
 801aeb0:	493e      	ldr	r1, [pc, #248]	; (801afac <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x200>)
 801aeb2:	483f      	ldr	r0, [pc, #252]	; (801afb0 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x204>)
 801aeb4:	f7e6 fc28 	bl	8001708 <EXPECT_OnAbortHandler>
 801aeb8:	f001 fd82 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801aebc:	4603      	mov	r3, r0
 801aebe:	461a      	mov	r2, r3
 801aec0:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801aec4:	4293      	cmp	r3, r2
 801aec6:	d047      	beq.n	801af58 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1ac>
 801aec8:	2300      	movs	r3, #0
 801aeca:	61fb      	str	r3, [r7, #28]
 801aecc:	f897 3020 	ldrb.w	r3, [r7, #32]
 801aed0:	f36f 0307 	bfc	r3, #0, #8
 801aed4:	f887 3020 	strb.w	r3, [r7, #32]
 801aed8:	f8b7 405a 	ldrh.w	r4, [r7, #90]	; 0x5a
 801aedc:	ab02      	add	r3, sp, #8
 801aede:	f107 021c 	add.w	r2, r7, #28
 801aee2:	e892 0003 	ldmia.w	r2, {r0, r1}
 801aee6:	6018      	str	r0, [r3, #0]
 801aee8:	3304      	adds	r3, #4
 801aeea:	7019      	strb	r1, [r3, #0]
 801aeec:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801aef0:	9301      	str	r3, [sp, #4]
 801aef2:	2300      	movs	r3, #0
 801aef4:	9300      	str	r3, [sp, #0]
 801aef6:	2300      	movs	r3, #0
 801aef8:	2206      	movs	r2, #6
 801aefa:	2104      	movs	r1, #4
 801aefc:	4620      	mov	r0, r4
 801aefe:	f001 fd7f 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 801af02:	4603      	mov	r3, r0
 801af04:	2b00      	cmp	r3, #0
 801af06:	d00b      	beq.n	801af20 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x174>
 801af08:	6d39      	ldr	r1, [r7, #80]	; 0x50
 801af0a:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801af0c:	4613      	mov	r3, r2
 801af0e:	005b      	lsls	r3, r3, #1
 801af10:	4413      	add	r3, r2
 801af12:	009b      	lsls	r3, r3, #2
 801af14:	440b      	add	r3, r1
 801af16:	f8b7 205a 	ldrh.w	r2, [r7, #90]	; 0x5a
 801af1a:	801a      	strh	r2, [r3, #0]
 801af1c:	2301      	movs	r3, #1
 801af1e:	e036      	b.n	801af8e <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1e2>
 801af20:	4a1e      	ldr	r2, [pc, #120]	; (801af9c <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1f0>)
 801af22:	f107 0314 	add.w	r3, r7, #20
 801af26:	e892 0003 	ldmia.w	r2, {r0, r1}
 801af2a:	e883 0003 	stmia.w	r3, {r0, r1}
 801af2e:	4a21      	ldr	r2, [pc, #132]	; (801afb4 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x208>)
 801af30:	f107 0314 	add.w	r3, r7, #20
 801af34:	e893 0003 	ldmia.w	r3, {r0, r1}
 801af38:	f7fa f966 	bl	8015208 <LOGGER_PrintLine>
 801af3c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801af3e:	4613      	mov	r3, r2
 801af40:	005b      	lsls	r3, r3, #1
 801af42:	4413      	add	r3, r2
 801af44:	009b      	lsls	r3, r3, #2
 801af46:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801af48:	4413      	add	r3, r2
 801af4a:	220c      	movs	r2, #12
 801af4c:	2100      	movs	r1, #0
 801af4e:	4618      	mov	r0, r3
 801af50:	f010 f8d2 	bl	802b0f8 <memset>
 801af54:	2300      	movs	r3, #0
 801af56:	e01a      	b.n	801af8e <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1e2>
 801af58:	4a10      	ldr	r2, [pc, #64]	; (801af9c <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x1f0>)
 801af5a:	f107 030c 	add.w	r3, r7, #12
 801af5e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801af62:	e883 0003 	stmia.w	r3, {r0, r1}
 801af66:	4a14      	ldr	r2, [pc, #80]	; (801afb8 <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f+0x20c>)
 801af68:	f107 030c 	add.w	r3, r7, #12
 801af6c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801af70:	f7fa f94a 	bl	8015208 <LOGGER_PrintLine>
 801af74:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801af76:	4613      	mov	r3, r2
 801af78:	005b      	lsls	r3, r3, #1
 801af7a:	4413      	add	r3, r2
 801af7c:	009b      	lsls	r3, r3, #2
 801af7e:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801af80:	4413      	add	r3, r2
 801af82:	220c      	movs	r2, #12
 801af84:	2100      	movs	r1, #0
 801af86:	4618      	mov	r0, r3
 801af88:	f010 f8b6 	bl	802b0f8 <memset>
 801af8c:	2300      	movs	r3, #0
 801af8e:	4618      	mov	r0, r3
 801af90:	3764      	adds	r7, #100	; 0x64
 801af92:	46bd      	mov	sp, r7
 801af94:	bd90      	pop	{r4, r7, pc}
 801af96:	bf00      	nop
 801af98:	20000040 	.word	0x20000040
 801af9c:	0802fb34 	.word	0x0802fb34
 801afa0:	0802fb3c 	.word	0x0802fb3c
 801afa4:	0802fb28 	.word	0x0802fb28
 801afa8:	0802fb50 	.word	0x0802fb50
 801afac:	0802fb84 	.word	0x0802fb84
 801afb0:	0802fbe8 	.word	0x0802fbe8
 801afb4:	0802fc1c 	.word	0x0802fc1c
 801afb8:	0802fc48 	.word	0x0802fc48

0801afbc <982333be2760117c5a90b228f88c7e9bbb3de31e>:
 801afbc:	b580      	push	{r7, lr}
 801afbe:	b086      	sub	sp, #24
 801afc0:	af00      	add	r7, sp, #0
 801afc2:	4603      	mov	r3, r0
 801afc4:	80fb      	strh	r3, [r7, #6]
 801afc6:	4b17      	ldr	r3, [pc, #92]	; (801b024 <982333be2760117c5a90b228f88c7e9bbb3de31e+0x68>)
 801afc8:	681b      	ldr	r3, [r3, #0]
 801afca:	f503 7335 	add.w	r3, r3, #724	; 0x2d4
 801afce:	613b      	str	r3, [r7, #16]
 801afd0:	2300      	movs	r3, #0
 801afd2:	617b      	str	r3, [r7, #20]
 801afd4:	e01e      	b.n	801b014 <982333be2760117c5a90b228f88c7e9bbb3de31e+0x58>
 801afd6:	6939      	ldr	r1, [r7, #16]
 801afd8:	697a      	ldr	r2, [r7, #20]
 801afda:	4613      	mov	r3, r2
 801afdc:	005b      	lsls	r3, r3, #1
 801afde:	4413      	add	r3, r2
 801afe0:	009b      	lsls	r3, r3, #2
 801afe2:	440b      	add	r3, r1
 801afe4:	881b      	ldrh	r3, [r3, #0]
 801afe6:	88fa      	ldrh	r2, [r7, #6]
 801afe8:	429a      	cmp	r2, r3
 801afea:	d10f      	bne.n	801b00c <982333be2760117c5a90b228f88c7e9bbb3de31e+0x50>
 801afec:	6939      	ldr	r1, [r7, #16]
 801afee:	697a      	ldr	r2, [r7, #20]
 801aff0:	4613      	mov	r3, r2
 801aff2:	005b      	lsls	r3, r3, #1
 801aff4:	4413      	add	r3, r2
 801aff6:	009b      	lsls	r3, r3, #2
 801aff8:	440b      	add	r3, r1
 801affa:	3308      	adds	r3, #8
 801affc:	2201      	movs	r2, #1
 801affe:	701a      	strb	r2, [r3, #0]
 801b000:	2212      	movs	r2, #18
 801b002:	6939      	ldr	r1, [r7, #16]
 801b004:	4808      	ldr	r0, [pc, #32]	; (801b028 <982333be2760117c5a90b228f88c7e9bbb3de31e+0x6c>)
 801b006:	f7f8 fa87 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 801b00a:	e000      	b.n	801b00e <982333be2760117c5a90b228f88c7e9bbb3de31e+0x52>
 801b00c:	bf00      	nop
 801b00e:	697b      	ldr	r3, [r7, #20]
 801b010:	3301      	adds	r3, #1
 801b012:	617b      	str	r3, [r7, #20]
 801b014:	697b      	ldr	r3, [r7, #20]
 801b016:	2b00      	cmp	r3, #0
 801b018:	d0dd      	beq.n	801afd6 <982333be2760117c5a90b228f88c7e9bbb3de31e+0x1a>
 801b01a:	bf00      	nop
 801b01c:	bf00      	nop
 801b01e:	3718      	adds	r7, #24
 801b020:	46bd      	mov	sp, r7
 801b022:	bd80      	pop	{r7, pc}
 801b024:	20000040 	.word	0x20000040
 801b028:	0801b0b1 	.word	0x0801b0b1

0801b02c <f13b11cc0bbf49b03ea71d42a05b941abea0a520>:
 801b02c:	b580      	push	{r7, lr}
 801b02e:	b088      	sub	sp, #32
 801b030:	af00      	add	r7, sp, #0
 801b032:	4b1e      	ldr	r3, [pc, #120]	; (801b0ac <f13b11cc0bbf49b03ea71d42a05b941abea0a520+0x80>)
 801b034:	681b      	ldr	r3, [r3, #0]
 801b036:	f503 7335 	add.w	r3, r3, #724	; 0x2d4
 801b03a:	61bb      	str	r3, [r7, #24]
 801b03c:	1d3b      	adds	r3, r7, #4
 801b03e:	2200      	movs	r2, #0
 801b040:	601a      	str	r2, [r3, #0]
 801b042:	605a      	str	r2, [r3, #4]
 801b044:	609a      	str	r2, [r3, #8]
 801b046:	60da      	str	r2, [r3, #12]
 801b048:	741a      	strb	r2, [r3, #16]
 801b04a:	2300      	movs	r3, #0
 801b04c:	61fb      	str	r3, [r7, #28]
 801b04e:	e024      	b.n	801b09a <f13b11cc0bbf49b03ea71d42a05b941abea0a520+0x6e>
 801b050:	69b9      	ldr	r1, [r7, #24]
 801b052:	69fa      	ldr	r2, [r7, #28]
 801b054:	4613      	mov	r3, r2
 801b056:	005b      	lsls	r3, r3, #1
 801b058:	4413      	add	r3, r2
 801b05a:	009b      	lsls	r3, r3, #2
 801b05c:	440b      	add	r3, r1
 801b05e:	3304      	adds	r3, #4
 801b060:	681b      	ldr	r3, [r3, #0]
 801b062:	2b00      	cmp	r3, #0
 801b064:	d016      	beq.n	801b094 <f13b11cc0bbf49b03ea71d42a05b941abea0a520+0x68>
 801b066:	69b9      	ldr	r1, [r7, #24]
 801b068:	69fa      	ldr	r2, [r7, #28]
 801b06a:	4613      	mov	r3, r2
 801b06c:	005b      	lsls	r3, r3, #1
 801b06e:	4413      	add	r3, r2
 801b070:	009b      	lsls	r3, r3, #2
 801b072:	440b      	add	r3, r1
 801b074:	881b      	ldrh	r3, [r3, #0]
 801b076:	1d3a      	adds	r2, r7, #4
 801b078:	4611      	mov	r1, r2
 801b07a:	4618      	mov	r0, r3
 801b07c:	f001 feb2 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801b080:	69b9      	ldr	r1, [r7, #24]
 801b082:	69fa      	ldr	r2, [r7, #28]
 801b084:	4613      	mov	r3, r2
 801b086:	005b      	lsls	r3, r3, #1
 801b088:	4413      	add	r3, r2
 801b08a:	009b      	lsls	r3, r3, #2
 801b08c:	440b      	add	r3, r1
 801b08e:	3304      	adds	r3, #4
 801b090:	2200      	movs	r2, #0
 801b092:	601a      	str	r2, [r3, #0]
 801b094:	69fb      	ldr	r3, [r7, #28]
 801b096:	3301      	adds	r3, #1
 801b098:	61fb      	str	r3, [r7, #28]
 801b09a:	69fb      	ldr	r3, [r7, #28]
 801b09c:	2b00      	cmp	r3, #0
 801b09e:	d0d7      	beq.n	801b050 <f13b11cc0bbf49b03ea71d42a05b941abea0a520+0x24>
 801b0a0:	bf00      	nop
 801b0a2:	bf00      	nop
 801b0a4:	3720      	adds	r7, #32
 801b0a6:	46bd      	mov	sp, r7
 801b0a8:	bd80      	pop	{r7, pc}
 801b0aa:	bf00      	nop
 801b0ac:	20000040 	.word	0x20000040

0801b0b0 <7fbb727db4b2b6715b092505673cb5922a0d63a8>:
 801b0b0:	b580      	push	{r7, lr}
 801b0b2:	b084      	sub	sp, #16
 801b0b4:	af00      	add	r7, sp, #0
 801b0b6:	6078      	str	r0, [r7, #4]
 801b0b8:	687b      	ldr	r3, [r7, #4]
 801b0ba:	60bb      	str	r3, [r7, #8]
 801b0bc:	2300      	movs	r3, #0
 801b0be:	60fb      	str	r3, [r7, #12]
 801b0c0:	e02e      	b.n	801b120 <7fbb727db4b2b6715b092505673cb5922a0d63a8+0x70>
 801b0c2:	68b9      	ldr	r1, [r7, #8]
 801b0c4:	68fa      	ldr	r2, [r7, #12]
 801b0c6:	4613      	mov	r3, r2
 801b0c8:	005b      	lsls	r3, r3, #1
 801b0ca:	4413      	add	r3, r2
 801b0cc:	009b      	lsls	r3, r3, #2
 801b0ce:	440b      	add	r3, r1
 801b0d0:	3308      	adds	r3, #8
 801b0d2:	781b      	ldrb	r3, [r3, #0]
 801b0d4:	2b00      	cmp	r3, #0
 801b0d6:	d020      	beq.n	801b11a <7fbb727db4b2b6715b092505673cb5922a0d63a8+0x6a>
 801b0d8:	68b9      	ldr	r1, [r7, #8]
 801b0da:	68fa      	ldr	r2, [r7, #12]
 801b0dc:	4613      	mov	r3, r2
 801b0de:	005b      	lsls	r3, r3, #1
 801b0e0:	4413      	add	r3, r2
 801b0e2:	009b      	lsls	r3, r3, #2
 801b0e4:	440b      	add	r3, r1
 801b0e6:	3308      	adds	r3, #8
 801b0e8:	2200      	movs	r2, #0
 801b0ea:	701a      	strb	r2, [r3, #0]
 801b0ec:	68b9      	ldr	r1, [r7, #8]
 801b0ee:	68fa      	ldr	r2, [r7, #12]
 801b0f0:	4613      	mov	r3, r2
 801b0f2:	005b      	lsls	r3, r3, #1
 801b0f4:	4413      	add	r3, r2
 801b0f6:	009b      	lsls	r3, r3, #2
 801b0f8:	440b      	add	r3, r1
 801b0fa:	3304      	adds	r3, #4
 801b0fc:	681b      	ldr	r3, [r3, #0]
 801b0fe:	2b00      	cmp	r3, #0
 801b100:	d00b      	beq.n	801b11a <7fbb727db4b2b6715b092505673cb5922a0d63a8+0x6a>
 801b102:	68b9      	ldr	r1, [r7, #8]
 801b104:	68fa      	ldr	r2, [r7, #12]
 801b106:	4613      	mov	r3, r2
 801b108:	005b      	lsls	r3, r3, #1
 801b10a:	4413      	add	r3, r2
 801b10c:	009b      	lsls	r3, r3, #2
 801b10e:	440b      	add	r3, r1
 801b110:	3304      	adds	r3, #4
 801b112:	681b      	ldr	r3, [r3, #0]
 801b114:	68fa      	ldr	r2, [r7, #12]
 801b116:	4610      	mov	r0, r2
 801b118:	4798      	blx	r3
 801b11a:	68fb      	ldr	r3, [r7, #12]
 801b11c:	3301      	adds	r3, #1
 801b11e:	60fb      	str	r3, [r7, #12]
 801b120:	68fb      	ldr	r3, [r7, #12]
 801b122:	2b00      	cmp	r3, #0
 801b124:	d0cd      	beq.n	801b0c2 <7fbb727db4b2b6715b092505673cb5922a0d63a8+0x12>
 801b126:	bf00      	nop
 801b128:	bf00      	nop
 801b12a:	3710      	adds	r7, #16
 801b12c:	46bd      	mov	sp, r7
 801b12e:	bd80      	pop	{r7, pc}

0801b130 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 801b130:	b480      	push	{r7}
 801b132:	b089      	sub	sp, #36	; 0x24
 801b134:	af00      	add	r7, sp, #0
 801b136:	60f8      	str	r0, [r7, #12]
 801b138:	60b9      	str	r1, [r7, #8]
 801b13a:	607a      	str	r2, [r7, #4]
 801b13c:	68fb      	ldr	r3, [r7, #12]
 801b13e:	61fb      	str	r3, [r7, #28]
 801b140:	68bb      	ldr	r3, [r7, #8]
 801b142:	61bb      	str	r3, [r7, #24]
 801b144:	687b      	ldr	r3, [r7, #4]
 801b146:	617b      	str	r3, [r7, #20]
 801b148:	2300      	movs	r3, #0
 801b14a:	613b      	str	r3, [r7, #16]
 801b14c:	e00d      	b.n	801b16a <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 801b14e:	69ba      	ldr	r2, [r7, #24]
 801b150:	693b      	ldr	r3, [r7, #16]
 801b152:	441a      	add	r2, r3
 801b154:	6979      	ldr	r1, [r7, #20]
 801b156:	693b      	ldr	r3, [r7, #16]
 801b158:	1acb      	subs	r3, r1, r3
 801b15a:	3b01      	subs	r3, #1
 801b15c:	69f9      	ldr	r1, [r7, #28]
 801b15e:	440b      	add	r3, r1
 801b160:	7812      	ldrb	r2, [r2, #0]
 801b162:	701a      	strb	r2, [r3, #0]
 801b164:	693b      	ldr	r3, [r7, #16]
 801b166:	3301      	adds	r3, #1
 801b168:	613b      	str	r3, [r7, #16]
 801b16a:	697a      	ldr	r2, [r7, #20]
 801b16c:	693b      	ldr	r3, [r7, #16]
 801b16e:	429a      	cmp	r2, r3
 801b170:	d8ed      	bhi.n	801b14e <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 801b172:	bf00      	nop
 801b174:	bf00      	nop
 801b176:	3724      	adds	r7, #36	; 0x24
 801b178:	46bd      	mov	sp, r7
 801b17a:	bc80      	pop	{r7}
 801b17c:	4770      	bx	lr
	...

0801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>:
 801b180:	b480      	push	{r7}
 801b182:	af00      	add	r7, sp, #0
 801b184:	4b11      	ldr	r3, [pc, #68]	; (801b1cc <15dba1c7fc73543b1601dd226b614c09581a3c00+0x4c>)
 801b186:	681b      	ldr	r3, [r3, #0]
 801b188:	f893 32ed 	ldrb.w	r3, [r3, #749]	; 0x2ed
 801b18c:	2b04      	cmp	r3, #4
 801b18e:	d817      	bhi.n	801b1c0 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x40>
 801b190:	a201      	add	r2, pc, #4	; (adr r2, 801b198 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x18>)
 801b192:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b196:	bf00      	nop
 801b198:	0801b1ad 	.word	0x0801b1ad
 801b19c:	0801b1b1 	.word	0x0801b1b1
 801b1a0:	0801b1b5 	.word	0x0801b1b5
 801b1a4:	0801b1b9 	.word	0x0801b1b9
 801b1a8:	0801b1bd 	.word	0x0801b1bd
 801b1ac:	4b08      	ldr	r3, [pc, #32]	; (801b1d0 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x50>)
 801b1ae:	e009      	b.n	801b1c4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x44>
 801b1b0:	4b08      	ldr	r3, [pc, #32]	; (801b1d4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x54>)
 801b1b2:	e007      	b.n	801b1c4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x44>
 801b1b4:	4b08      	ldr	r3, [pc, #32]	; (801b1d8 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x58>)
 801b1b6:	e005      	b.n	801b1c4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x44>
 801b1b8:	4b08      	ldr	r3, [pc, #32]	; (801b1dc <15dba1c7fc73543b1601dd226b614c09581a3c00+0x5c>)
 801b1ba:	e003      	b.n	801b1c4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x44>
 801b1bc:	4b08      	ldr	r3, [pc, #32]	; (801b1e0 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x60>)
 801b1be:	e001      	b.n	801b1c4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x44>
 801b1c0:	bf00      	nop
 801b1c2:	4b08      	ldr	r3, [pc, #32]	; (801b1e4 <15dba1c7fc73543b1601dd226b614c09581a3c00+0x64>)
 801b1c4:	4618      	mov	r0, r3
 801b1c6:	46bd      	mov	sp, r7
 801b1c8:	bc80      	pop	{r7}
 801b1ca:	4770      	bx	lr
 801b1cc:	20000040 	.word	0x20000040
 801b1d0:	0802fc60 	.word	0x0802fc60
 801b1d4:	0802fc80 	.word	0x0802fc80
 801b1d8:	0802fc90 	.word	0x0802fc90
 801b1dc:	0802fca4 	.word	0x0802fca4
 801b1e0:	0802fcb8 	.word	0x0802fcb8
 801b1e4:	0802fcc4 	.word	0x0802fcc4

0801b1e8 <d3d7042d854d8905136f03fa99a8893947aafdc7>:
 801b1e8:	b580      	push	{r7, lr}
 801b1ea:	b082      	sub	sp, #8
 801b1ec:	af00      	add	r7, sp, #0
 801b1ee:	4b0b      	ldr	r3, [pc, #44]	; (801b21c <d3d7042d854d8905136f03fa99a8893947aafdc7+0x34>)
 801b1f0:	681b      	ldr	r3, [r3, #0]
 801b1f2:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b1f6:	607b      	str	r3, [r7, #4]
 801b1f8:	2001      	movs	r0, #1
 801b1fa:	f7f6 fb13 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 801b1fe:	4603      	mov	r3, r0
 801b200:	461a      	mov	r2, r3
 801b202:	687b      	ldr	r3, [r7, #4]
 801b204:	711a      	strb	r2, [r3, #4]
 801b206:	687b      	ldr	r3, [r7, #4]
 801b208:	4a05      	ldr	r2, [pc, #20]	; (801b220 <d3d7042d854d8905136f03fa99a8893947aafdc7+0x38>)
 801b20a:	609a      	str	r2, [r3, #8]
 801b20c:	687b      	ldr	r3, [r7, #4]
 801b20e:	2200      	movs	r2, #0
 801b210:	735a      	strb	r2, [r3, #13]
 801b212:	bf00      	nop
 801b214:	3708      	adds	r7, #8
 801b216:	46bd      	mov	sp, r7
 801b218:	bd80      	pop	{r7, pc}
 801b21a:	bf00      	nop
 801b21c:	20000040 	.word	0x20000040
 801b220:	00e4e1c0 	.word	0x00e4e1c0

0801b224 <530f39758cfcff95a518bf89df4776da9faf92b4>:
 801b224:	b590      	push	{r4, r7, lr}
 801b226:	b085      	sub	sp, #20
 801b228:	af02      	add	r7, sp, #8
 801b22a:	4b11      	ldr	r3, [pc, #68]	; (801b270 <530f39758cfcff95a518bf89df4776da9faf92b4+0x4c>)
 801b22c:	681b      	ldr	r3, [r3, #0]
 801b22e:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b232:	607b      	str	r3, [r7, #4]
 801b234:	687b      	ldr	r3, [r7, #4]
 801b236:	9300      	str	r3, [sp, #0]
 801b238:	4b0e      	ldr	r3, [pc, #56]	; (801b274 <530f39758cfcff95a518bf89df4776da9faf92b4+0x50>)
 801b23a:	4a0f      	ldr	r2, [pc, #60]	; (801b278 <530f39758cfcff95a518bf89df4776da9faf92b4+0x54>)
 801b23c:	490f      	ldr	r1, [pc, #60]	; (801b27c <530f39758cfcff95a518bf89df4776da9faf92b4+0x58>)
 801b23e:	4810      	ldr	r0, [pc, #64]	; (801b280 <530f39758cfcff95a518bf89df4776da9faf92b4+0x5c>)
 801b240:	f003 f888 	bl	801e354 <c2e65bb9a83a19ef15c3f2ab85b29089d354be41>
 801b244:	687b      	ldr	r3, [r7, #4]
 801b246:	791c      	ldrb	r4, [r3, #4]
 801b248:	687b      	ldr	r3, [r7, #4]
 801b24a:	689a      	ldr	r2, [r3, #8]
 801b24c:	687b      	ldr	r3, [r7, #4]
 801b24e:	689b      	ldr	r3, [r3, #8]
 801b250:	4619      	mov	r1, r3
 801b252:	4610      	mov	r0, r2
 801b254:	f7f6 fe84 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 801b258:	4602      	mov	r2, r0
 801b25a:	687b      	ldr	r3, [r7, #4]
 801b25c:	9300      	str	r3, [sp, #0]
 801b25e:	4b09      	ldr	r3, [pc, #36]	; (801b284 <530f39758cfcff95a518bf89df4776da9faf92b4+0x60>)
 801b260:	2101      	movs	r1, #1
 801b262:	4620      	mov	r0, r4
 801b264:	f7f6 fb28 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801b268:	bf00      	nop
 801b26a:	370c      	adds	r7, #12
 801b26c:	46bd      	mov	sp, r7
 801b26e:	bd90      	pop	{r4, r7, pc}
 801b270:	20000040 	.word	0x20000040
 801b274:	0801b6b5 	.word	0x0801b6b5
 801b278:	0801b6a5 	.word	0x0801b6a5
 801b27c:	0801b697 	.word	0x0801b697
 801b280:	0801b689 	.word	0x0801b689
 801b284:	0801b731 	.word	0x0801b731

0801b288 <53bc4933f2d7947a48dac4db096e7506c8e8667c>:
 801b288:	b580      	push	{r7, lr}
 801b28a:	b084      	sub	sp, #16
 801b28c:	af02      	add	r7, sp, #8
 801b28e:	4b0b      	ldr	r3, [pc, #44]	; (801b2bc <53bc4933f2d7947a48dac4db096e7506c8e8667c+0x34>)
 801b290:	681b      	ldr	r3, [r3, #0]
 801b292:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b296:	607b      	str	r3, [r7, #4]
 801b298:	687b      	ldr	r3, [r7, #4]
 801b29a:	791b      	ldrb	r3, [r3, #4]
 801b29c:	4618      	mov	r0, r3
 801b29e:	f7f6 fc11 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801b2a2:	2300      	movs	r3, #0
 801b2a4:	9300      	str	r3, [sp, #0]
 801b2a6:	2300      	movs	r3, #0
 801b2a8:	2200      	movs	r2, #0
 801b2aa:	2100      	movs	r1, #0
 801b2ac:	2000      	movs	r0, #0
 801b2ae:	f003 f851 	bl	801e354 <c2e65bb9a83a19ef15c3f2ab85b29089d354be41>
 801b2b2:	bf00      	nop
 801b2b4:	3708      	adds	r7, #8
 801b2b6:	46bd      	mov	sp, r7
 801b2b8:	bd80      	pop	{r7, pc}
 801b2ba:	bf00      	nop
 801b2bc:	20000040 	.word	0x20000040

0801b2c0 <a4805eff5c63b0d94a41387b77d7c2398243d1cd>:
 801b2c0:	b5b0      	push	{r4, r5, r7, lr}
 801b2c2:	b094      	sub	sp, #80	; 0x50
 801b2c4:	af04      	add	r7, sp, #16
 801b2c6:	4603      	mov	r3, r0
 801b2c8:	71fb      	strb	r3, [r7, #7]
 801b2ca:	f107 031c 	add.w	r3, r7, #28
 801b2ce:	2211      	movs	r2, #17
 801b2d0:	2100      	movs	r1, #0
 801b2d2:	4618      	mov	r0, r3
 801b2d4:	f00f ff10 	bl	802b0f8 <memset>
 801b2d8:	2306      	movs	r3, #6
 801b2da:	773b      	strb	r3, [r7, #28]
 801b2dc:	2002      	movs	r0, #2
 801b2de:	f7f1 fe8d 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 801b2e2:	4603      	mov	r3, r0
 801b2e4:	3301      	adds	r3, #1
 801b2e6:	f107 0218 	add.w	r2, r7, #24
 801b2ea:	4611      	mov	r1, r2
 801b2ec:	4618      	mov	r0, r3
 801b2ee:	f001 f887 	bl	801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>
 801b2f2:	79fb      	ldrb	r3, [r7, #7]
 801b2f4:	2b00      	cmp	r3, #0
 801b2f6:	d046      	beq.n	801b386 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0xc6>
 801b2f8:	2300      	movs	r3, #0
 801b2fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b2fc:	e03f      	b.n	801b37e <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0xbe>
 801b2fe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b300:	005b      	lsls	r3, r3, #1
 801b302:	3340      	adds	r3, #64	; 0x40
 801b304:	443b      	add	r3, r7
 801b306:	f833 5c28 	ldrh.w	r5, [r3, #-40]
 801b30a:	f107 021a 	add.w	r2, r7, #26
 801b30e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b310:	4413      	add	r3, r2
 801b312:	781c      	ldrb	r4, [r3, #0]
 801b314:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801b318:	4618      	mov	r0, r3
 801b31a:	f7fe fb4d 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801b31e:	ab02      	add	r3, sp, #8
 801b320:	f107 0230 	add.w	r2, r7, #48	; 0x30
 801b324:	e892 0003 	ldmia.w	r2, {r0, r1}
 801b328:	6018      	str	r0, [r3, #0]
 801b32a:	3304      	adds	r3, #4
 801b32c:	7019      	strb	r1, [r3, #0]
 801b32e:	f107 031c 	add.w	r3, r7, #28
 801b332:	9301      	str	r3, [sp, #4]
 801b334:	9400      	str	r4, [sp, #0]
 801b336:	2300      	movs	r3, #0
 801b338:	2202      	movs	r2, #2
 801b33a:	2103      	movs	r1, #3
 801b33c:	4628      	mov	r0, r5
 801b33e:	f001 fb5f 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 801b342:	4a2b      	ldr	r2, [pc, #172]	; (801b3f0 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x130>)
 801b344:	f107 0310 	add.w	r3, r7, #16
 801b348:	e892 0003 	ldmia.w	r2, {r0, r1}
 801b34c:	e883 0003 	stmia.w	r3, {r0, r1}
 801b350:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b352:	005b      	lsls	r3, r3, #1
 801b354:	3340      	adds	r3, #64	; 0x40
 801b356:	443b      	add	r3, r7
 801b358:	f833 3c28 	ldrh.w	r3, [r3, #-40]
 801b35c:	4619      	mov	r1, r3
 801b35e:	f107 021a 	add.w	r2, r7, #26
 801b362:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b364:	4413      	add	r3, r2
 801b366:	781b      	ldrb	r3, [r3, #0]
 801b368:	9300      	str	r3, [sp, #0]
 801b36a:	460b      	mov	r3, r1
 801b36c:	4a21      	ldr	r2, [pc, #132]	; (801b3f4 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x134>)
 801b36e:	f107 0110 	add.w	r1, r7, #16
 801b372:	c903      	ldmia	r1, {r0, r1}
 801b374:	f7f9 ff48 	bl	8015208 <LOGGER_PrintLine>
 801b378:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b37a:	3301      	adds	r3, #1
 801b37c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801b37e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801b380:	2b00      	cmp	r3, #0
 801b382:	d0bc      	beq.n	801b2fe <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x3e>
 801b384:	e02f      	b.n	801b3e6 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x126>
 801b386:	2300      	movs	r3, #0
 801b388:	63bb      	str	r3, [r7, #56]	; 0x38
 801b38a:	e029      	b.n	801b3e0 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x120>
 801b38c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b38e:	005b      	lsls	r3, r3, #1
 801b390:	3340      	adds	r3, #64	; 0x40
 801b392:	443b      	add	r3, r7
 801b394:	f833 3c28 	ldrh.w	r3, [r3, #-40]
 801b398:	f107 021c 	add.w	r2, r7, #28
 801b39c:	4611      	mov	r1, r2
 801b39e:	4618      	mov	r0, r3
 801b3a0:	f001 fd20 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801b3a4:	4a12      	ldr	r2, [pc, #72]	; (801b3f0 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x130>)
 801b3a6:	f107 0308 	add.w	r3, r7, #8
 801b3aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 801b3ae:	e883 0003 	stmia.w	r3, {r0, r1}
 801b3b2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b3b4:	005b      	lsls	r3, r3, #1
 801b3b6:	3340      	adds	r3, #64	; 0x40
 801b3b8:	443b      	add	r3, r7
 801b3ba:	f833 3c28 	ldrh.w	r3, [r3, #-40]
 801b3be:	4619      	mov	r1, r3
 801b3c0:	f107 021a 	add.w	r2, r7, #26
 801b3c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b3c6:	4413      	add	r3, r2
 801b3c8:	781b      	ldrb	r3, [r3, #0]
 801b3ca:	9300      	str	r3, [sp, #0]
 801b3cc:	460b      	mov	r3, r1
 801b3ce:	4a0a      	ldr	r2, [pc, #40]	; (801b3f8 <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0x138>)
 801b3d0:	f107 0108 	add.w	r1, r7, #8
 801b3d4:	c903      	ldmia	r1, {r0, r1}
 801b3d6:	f7f9 ff17 	bl	8015208 <LOGGER_PrintLine>
 801b3da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b3dc:	3301      	adds	r3, #1
 801b3de:	63bb      	str	r3, [r7, #56]	; 0x38
 801b3e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801b3e2:	2b00      	cmp	r3, #0
 801b3e4:	d0d2      	beq.n	801b38c <a4805eff5c63b0d94a41387b77d7c2398243d1cd+0xcc>
 801b3e6:	bf00      	nop
 801b3e8:	3740      	adds	r7, #64	; 0x40
 801b3ea:	46bd      	mov	sp, r7
 801b3ec:	bdb0      	pop	{r4, r5, r7, pc}
 801b3ee:	bf00      	nop
 801b3f0:	0802fd1c 	.word	0x0802fd1c
 801b3f4:	0802fcc8 	.word	0x0802fcc8
 801b3f8:	0802fcf0 	.word	0x0802fcf0

0801b3fc <a8d9689c957cda0372b2d720a687974af26c85d2>:
 801b3fc:	b480      	push	{r7}
 801b3fe:	b085      	sub	sp, #20
 801b400:	af00      	add	r7, sp, #0
 801b402:	6078      	str	r0, [r7, #4]
 801b404:	6039      	str	r1, [r7, #0]
 801b406:	4b1e      	ldr	r3, [pc, #120]	; (801b480 <a8d9689c957cda0372b2d720a687974af26c85d2+0x84>)
 801b408:	681b      	ldr	r3, [r3, #0]
 801b40a:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b40e:	60fb      	str	r3, [r7, #12]
 801b410:	687b      	ldr	r3, [r7, #4]
 801b412:	2b00      	cmp	r3, #0
 801b414:	d015      	beq.n	801b442 <a8d9689c957cda0372b2d720a687974af26c85d2+0x46>
 801b416:	68fb      	ldr	r3, [r7, #12]
 801b418:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 801b41a:	2b00      	cmp	r3, #0
 801b41c:	d00e      	beq.n	801b43c <a8d9689c957cda0372b2d720a687974af26c85d2+0x40>
 801b41e:	68fb      	ldr	r3, [r7, #12]
 801b420:	8c1b      	ldrh	r3, [r3, #32]
 801b422:	461a      	mov	r2, r3
 801b424:	f242 7310 	movw	r3, #10000	; 0x2710
 801b428:	fb02 f303 	mul.w	r3, r2, r3
 801b42c:	68fa      	ldr	r2, [r7, #12]
 801b42e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b430:	fbb3 f3f2 	udiv	r3, r3, r2
 801b434:	b29a      	uxth	r2, r3
 801b436:	687b      	ldr	r3, [r7, #4]
 801b438:	801a      	strh	r2, [r3, #0]
 801b43a:	e002      	b.n	801b442 <a8d9689c957cda0372b2d720a687974af26c85d2+0x46>
 801b43c:	687b      	ldr	r3, [r7, #4]
 801b43e:	2200      	movs	r2, #0
 801b440:	801a      	strh	r2, [r3, #0]
 801b442:	683b      	ldr	r3, [r7, #0]
 801b444:	2b00      	cmp	r3, #0
 801b446:	d015      	beq.n	801b474 <a8d9689c957cda0372b2d720a687974af26c85d2+0x78>
 801b448:	68fb      	ldr	r3, [r7, #12]
 801b44a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801b44c:	2b00      	cmp	r3, #0
 801b44e:	d00e      	beq.n	801b46e <a8d9689c957cda0372b2d720a687974af26c85d2+0x72>
 801b450:	68fb      	ldr	r3, [r7, #12]
 801b452:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 801b454:	461a      	mov	r2, r3
 801b456:	f242 7310 	movw	r3, #10000	; 0x2710
 801b45a:	fb02 f303 	mul.w	r3, r2, r3
 801b45e:	68fa      	ldr	r2, [r7, #12]
 801b460:	8cd2      	ldrh	r2, [r2, #38]	; 0x26
 801b462:	fbb3 f3f2 	udiv	r3, r3, r2
 801b466:	b29a      	uxth	r2, r3
 801b468:	683b      	ldr	r3, [r7, #0]
 801b46a:	801a      	strh	r2, [r3, #0]
 801b46c:	e002      	b.n	801b474 <a8d9689c957cda0372b2d720a687974af26c85d2+0x78>
 801b46e:	683b      	ldr	r3, [r7, #0]
 801b470:	2200      	movs	r2, #0
 801b472:	801a      	strh	r2, [r3, #0]
 801b474:	bf00      	nop
 801b476:	3714      	adds	r7, #20
 801b478:	46bd      	mov	sp, r7
 801b47a:	bc80      	pop	{r7}
 801b47c:	4770      	bx	lr
 801b47e:	bf00      	nop
 801b480:	20000040 	.word	0x20000040

0801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>:
 801b484:	b580      	push	{r7, lr}
 801b486:	b084      	sub	sp, #16
 801b488:	af00      	add	r7, sp, #0
 801b48a:	6078      	str	r0, [r7, #4]
 801b48c:	460b      	mov	r3, r1
 801b48e:	70fb      	strb	r3, [r7, #3]
 801b490:	4b3e      	ldr	r3, [pc, #248]	; (801b58c <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x108>)
 801b492:	681b      	ldr	r3, [r3, #0]
 801b494:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b498:	60fb      	str	r3, [r7, #12]
 801b49a:	687b      	ldr	r3, [r7, #4]
 801b49c:	2b00      	cmp	r3, #0
 801b49e:	d050      	beq.n	801b542 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0xbe>
 801b4a0:	687b      	ldr	r3, [r7, #4]
 801b4a2:	3301      	adds	r3, #1
 801b4a4:	4618      	mov	r0, r3
 801b4a6:	f7f2 fe8f 	bl	800e1c8 <fdce4034d9451f08e0a61574976ed9ce452b5ba4>
 801b4aa:	4603      	mov	r3, r0
 801b4ac:	2b00      	cmp	r3, #0
 801b4ae:	d069      	beq.n	801b584 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x100>
 801b4b0:	68fb      	ldr	r3, [r7, #12]
 801b4b2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 801b4b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801b4b8:	4293      	cmp	r3, r2
 801b4ba:	d10b      	bne.n	801b4d4 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x50>
 801b4bc:	68fb      	ldr	r3, [r7, #12]
 801b4be:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 801b4c0:	085b      	lsrs	r3, r3, #1
 801b4c2:	b29a      	uxth	r2, r3
 801b4c4:	68fb      	ldr	r3, [r7, #12]
 801b4c6:	845a      	strh	r2, [r3, #34]	; 0x22
 801b4c8:	68fb      	ldr	r3, [r7, #12]
 801b4ca:	8c1b      	ldrh	r3, [r3, #32]
 801b4cc:	085b      	lsrs	r3, r3, #1
 801b4ce:	b29a      	uxth	r2, r3
 801b4d0:	68fb      	ldr	r3, [r7, #12]
 801b4d2:	841a      	strh	r2, [r3, #32]
 801b4d4:	68fb      	ldr	r3, [r7, #12]
 801b4d6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 801b4d8:	3301      	adds	r3, #1
 801b4da:	b29a      	uxth	r2, r3
 801b4dc:	68fb      	ldr	r3, [r7, #12]
 801b4de:	845a      	strh	r2, [r3, #34]	; 0x22
 801b4e0:	78fb      	ldrb	r3, [r7, #3]
 801b4e2:	2b00      	cmp	r3, #0
 801b4e4:	d005      	beq.n	801b4f2 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x6e>
 801b4e6:	68fb      	ldr	r3, [r7, #12]
 801b4e8:	8c1b      	ldrh	r3, [r3, #32]
 801b4ea:	3301      	adds	r3, #1
 801b4ec:	b29a      	uxth	r2, r3
 801b4ee:	68fb      	ldr	r3, [r7, #12]
 801b4f0:	841a      	strh	r2, [r3, #32]
 801b4f2:	78fb      	ldrb	r3, [r7, #3]
 801b4f4:	2b00      	cmp	r3, #0
 801b4f6:	d005      	beq.n	801b504 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x80>
 801b4f8:	68fb      	ldr	r3, [r7, #12]
 801b4fa:	789b      	ldrb	r3, [r3, #2]
 801b4fc:	3301      	adds	r3, #1
 801b4fe:	b2da      	uxtb	r2, r3
 801b500:	68fb      	ldr	r3, [r7, #12]
 801b502:	709a      	strb	r2, [r3, #2]
 801b504:	68fb      	ldr	r3, [r7, #12]
 801b506:	785b      	ldrb	r3, [r3, #1]
 801b508:	3301      	adds	r3, #1
 801b50a:	b2da      	uxtb	r2, r3
 801b50c:	68fb      	ldr	r3, [r7, #12]
 801b50e:	705a      	strb	r2, [r3, #1]
 801b510:	68fb      	ldr	r3, [r7, #12]
 801b512:	785b      	ldrb	r3, [r3, #1]
 801b514:	2b14      	cmp	r3, #20
 801b516:	d135      	bne.n	801b584 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x100>
 801b518:	68fb      	ldr	r3, [r7, #12]
 801b51a:	789b      	ldrb	r3, [r3, #2]
 801b51c:	2b10      	cmp	r3, #16
 801b51e:	d902      	bls.n	801b526 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0xa2>
 801b520:	68fb      	ldr	r3, [r7, #12]
 801b522:	2201      	movs	r2, #1
 801b524:	70da      	strb	r2, [r3, #3]
 801b526:	68fb      	ldr	r3, [r7, #12]
 801b528:	789b      	ldrb	r3, [r3, #2]
 801b52a:	2b01      	cmp	r3, #1
 801b52c:	d802      	bhi.n	801b534 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0xb0>
 801b52e:	68fb      	ldr	r3, [r7, #12]
 801b530:	22ff      	movs	r2, #255	; 0xff
 801b532:	70da      	strb	r2, [r3, #3]
 801b534:	68fb      	ldr	r3, [r7, #12]
 801b536:	2200      	movs	r2, #0
 801b538:	705a      	strb	r2, [r3, #1]
 801b53a:	68fb      	ldr	r3, [r7, #12]
 801b53c:	2200      	movs	r2, #0
 801b53e:	709a      	strb	r2, [r3, #2]
 801b540:	e020      	b.n	801b584 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x100>
 801b542:	68fb      	ldr	r3, [r7, #12]
 801b544:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801b546:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801b54a:	4293      	cmp	r3, r2
 801b54c:	d10b      	bne.n	801b566 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0xe2>
 801b54e:	68fb      	ldr	r3, [r7, #12]
 801b550:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801b552:	085b      	lsrs	r3, r3, #1
 801b554:	b29a      	uxth	r2, r3
 801b556:	68fb      	ldr	r3, [r7, #12]
 801b558:	84da      	strh	r2, [r3, #38]	; 0x26
 801b55a:	68fb      	ldr	r3, [r7, #12]
 801b55c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 801b55e:	085b      	lsrs	r3, r3, #1
 801b560:	b29a      	uxth	r2, r3
 801b562:	68fb      	ldr	r3, [r7, #12]
 801b564:	849a      	strh	r2, [r3, #36]	; 0x24
 801b566:	68fb      	ldr	r3, [r7, #12]
 801b568:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801b56a:	3301      	adds	r3, #1
 801b56c:	b29a      	uxth	r2, r3
 801b56e:	68fb      	ldr	r3, [r7, #12]
 801b570:	84da      	strh	r2, [r3, #38]	; 0x26
 801b572:	78fb      	ldrb	r3, [r7, #3]
 801b574:	2b00      	cmp	r3, #0
 801b576:	d005      	beq.n	801b584 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed+0x100>
 801b578:	68fb      	ldr	r3, [r7, #12]
 801b57a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 801b57c:	3301      	adds	r3, #1
 801b57e:	b29a      	uxth	r2, r3
 801b580:	68fb      	ldr	r3, [r7, #12]
 801b582:	849a      	strh	r2, [r3, #36]	; 0x24
 801b584:	bf00      	nop
 801b586:	3710      	adds	r7, #16
 801b588:	46bd      	mov	sp, r7
 801b58a:	bd80      	pop	{r7, pc}
 801b58c:	20000040 	.word	0x20000040

0801b590 <4d4d07b4e30904d5f2361bdbdd317c9b751af65f>:
 801b590:	b590      	push	{r4, r7, lr}
 801b592:	b08b      	sub	sp, #44	; 0x2c
 801b594:	af02      	add	r7, sp, #8
 801b596:	4603      	mov	r3, r0
 801b598:	603a      	str	r2, [r7, #0]
 801b59a:	71fb      	strb	r3, [r7, #7]
 801b59c:	460b      	mov	r3, r1
 801b59e:	71bb      	strb	r3, [r7, #6]
 801b5a0:	4b19      	ldr	r3, [pc, #100]	; (801b608 <4d4d07b4e30904d5f2361bdbdd317c9b751af65f+0x78>)
 801b5a2:	681b      	ldr	r3, [r3, #0]
 801b5a4:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801b5a8:	61fb      	str	r3, [r7, #28]
 801b5aa:	79fb      	ldrb	r3, [r7, #7]
 801b5ac:	f083 0301 	eor.w	r3, r3, #1
 801b5b0:	b2db      	uxtb	r3, r3
 801b5b2:	2b00      	cmp	r3, #0
 801b5b4:	d00a      	beq.n	801b5cc <4d4d07b4e30904d5f2361bdbdd317c9b751af65f+0x3c>
 801b5b6:	79bb      	ldrb	r3, [r7, #6]
 801b5b8:	f083 0301 	eor.w	r3, r3, #1
 801b5bc:	b2db      	uxtb	r3, r3
 801b5be:	2b00      	cmp	r3, #0
 801b5c0:	d004      	beq.n	801b5cc <4d4d07b4e30904d5f2361bdbdd317c9b751af65f+0x3c>
 801b5c2:	f001 fffb 	bl	801d5bc <1baccc0636a0c0164401b195d5e58f3f8da51c03>
 801b5c6:	6838      	ldr	r0, [r7, #0]
 801b5c8:	f001 ff18 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 801b5cc:	69fb      	ldr	r3, [r7, #28]
 801b5ce:	791b      	ldrb	r3, [r3, #4]
 801b5d0:	4618      	mov	r0, r3
 801b5d2:	f7f6 fa77 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801b5d6:	69fb      	ldr	r3, [r7, #28]
 801b5d8:	791c      	ldrb	r4, [r3, #4]
 801b5da:	69fb      	ldr	r3, [r7, #28]
 801b5dc:	689a      	ldr	r2, [r3, #8]
 801b5de:	69fb      	ldr	r3, [r7, #28]
 801b5e0:	689b      	ldr	r3, [r3, #8]
 801b5e2:	4619      	mov	r1, r3
 801b5e4:	4610      	mov	r0, r2
 801b5e6:	f7f6 fcbb 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 801b5ea:	4602      	mov	r2, r0
 801b5ec:	69fb      	ldr	r3, [r7, #28]
 801b5ee:	9300      	str	r3, [sp, #0]
 801b5f0:	4b06      	ldr	r3, [pc, #24]	; (801b60c <4d4d07b4e30904d5f2361bdbdd317c9b751af65f+0x7c>)
 801b5f2:	2101      	movs	r1, #1
 801b5f4:	4620      	mov	r0, r4
 801b5f6:	f7f6 f95f 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801b5fa:	f000 fa9f 	bl	801bb3c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d>
 801b5fe:	bf00      	nop
 801b600:	3724      	adds	r7, #36	; 0x24
 801b602:	46bd      	mov	sp, r7
 801b604:	bd90      	pop	{r4, r7, pc}
 801b606:	bf00      	nop
 801b608:	20000040 	.word	0x20000040
 801b60c:	0801b731 	.word	0x0801b731

0801b610 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a>:
 801b610:	b580      	push	{r7, lr}
 801b612:	b086      	sub	sp, #24
 801b614:	af00      	add	r7, sp, #0
 801b616:	6078      	str	r0, [r7, #4]
 801b618:	2002      	movs	r0, #2
 801b61a:	f7f1 fcef 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 801b61e:	4603      	mov	r3, r0
 801b620:	3301      	adds	r3, #1
 801b622:	f107 020c 	add.w	r2, r7, #12
 801b626:	4611      	mov	r1, r2
 801b628:	4618      	mov	r0, r3
 801b62a:	f000 fee9 	bl	801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>
 801b62e:	f107 0308 	add.w	r3, r7, #8
 801b632:	4619      	mov	r1, r3
 801b634:	6878      	ldr	r0, [r7, #4]
 801b636:	f000 fee3 	bl	801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>
 801b63a:	2300      	movs	r3, #0
 801b63c:	617b      	str	r3, [r7, #20]
 801b63e:	e01b      	b.n	801b678 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x68>
 801b640:	2300      	movs	r3, #0
 801b642:	613b      	str	r3, [r7, #16]
 801b644:	e012      	b.n	801b66c <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x5c>
 801b646:	697b      	ldr	r3, [r7, #20]
 801b648:	005b      	lsls	r3, r3, #1
 801b64a:	3318      	adds	r3, #24
 801b64c:	443b      	add	r3, r7
 801b64e:	f833 2c0c 	ldrh.w	r2, [r3, #-12]
 801b652:	693b      	ldr	r3, [r7, #16]
 801b654:	005b      	lsls	r3, r3, #1
 801b656:	3318      	adds	r3, #24
 801b658:	443b      	add	r3, r7
 801b65a:	f833 3c10 	ldrh.w	r3, [r3, #-16]
 801b65e:	429a      	cmp	r2, r3
 801b660:	d101      	bne.n	801b666 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x56>
 801b662:	2301      	movs	r3, #1
 801b664:	e00c      	b.n	801b680 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x70>
 801b666:	693b      	ldr	r3, [r7, #16]
 801b668:	3301      	adds	r3, #1
 801b66a:	613b      	str	r3, [r7, #16]
 801b66c:	693b      	ldr	r3, [r7, #16]
 801b66e:	2b00      	cmp	r3, #0
 801b670:	d0e9      	beq.n	801b646 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x36>
 801b672:	697b      	ldr	r3, [r7, #20]
 801b674:	3301      	adds	r3, #1
 801b676:	617b      	str	r3, [r7, #20]
 801b678:	697b      	ldr	r3, [r7, #20]
 801b67a:	2b00      	cmp	r3, #0
 801b67c:	d0e0      	beq.n	801b640 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a+0x30>
 801b67e:	2300      	movs	r3, #0
 801b680:	4618      	mov	r0, r3
 801b682:	3718      	adds	r7, #24
 801b684:	46bd      	mov	sp, r7
 801b686:	bd80      	pop	{r7, pc}

0801b688 <05eb4bf7e3ef9650051a184f9a45beef977581cc>:
 801b688:	b480      	push	{r7}
 801b68a:	af00      	add	r7, sp, #0
 801b68c:	2300      	movs	r3, #0
 801b68e:	4618      	mov	r0, r3
 801b690:	46bd      	mov	sp, r7
 801b692:	bc80      	pop	{r7}
 801b694:	4770      	bx	lr

0801b696 <7d1cb8091a20cdd8ca4da922eaffd9d973c739dd>:
 801b696:	b480      	push	{r7}
 801b698:	af00      	add	r7, sp, #0
 801b69a:	2300      	movs	r3, #0
 801b69c:	4618      	mov	r0, r3
 801b69e:	46bd      	mov	sp, r7
 801b6a0:	bc80      	pop	{r7}
 801b6a2:	4770      	bx	lr

0801b6a4 <ea8791126746fbed7807350ad8e855f2738f0828>:
 801b6a4:	b480      	push	{r7}
 801b6a6:	af00      	add	r7, sp, #0
 801b6a8:	2300      	movs	r3, #0
 801b6aa:	4618      	mov	r0, r3
 801b6ac:	46bd      	mov	sp, r7
 801b6ae:	bc80      	pop	{r7}
 801b6b0:	4770      	bx	lr
	...

0801b6b4 <44dfb88cdd7607734702d454330b85a9c16a18d6>:
 801b6b4:	b580      	push	{r7, lr}
 801b6b6:	b088      	sub	sp, #32
 801b6b8:	af00      	add	r7, sp, #0
 801b6ba:	60f8      	str	r0, [r7, #12]
 801b6bc:	460b      	mov	r3, r1
 801b6be:	607a      	str	r2, [r7, #4]
 801b6c0:	72fb      	strb	r3, [r7, #11]
 801b6c2:	68fb      	ldr	r3, [r7, #12]
 801b6c4:	61fb      	str	r3, [r7, #28]
 801b6c6:	69fb      	ldr	r3, [r7, #28]
 801b6c8:	330e      	adds	r3, #14
 801b6ca:	2211      	movs	r2, #17
 801b6cc:	6879      	ldr	r1, [r7, #4]
 801b6ce:	4618      	mov	r0, r3
 801b6d0:	f00f fdb1 	bl	802b236 <memcpy>
 801b6d4:	7afb      	ldrb	r3, [r7, #11]
 801b6d6:	2b06      	cmp	r3, #6
 801b6d8:	d002      	beq.n	801b6e0 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x2c>
 801b6da:	7afb      	ldrb	r3, [r7, #11]
 801b6dc:	2b07      	cmp	r3, #7
 801b6de:	d112      	bne.n	801b706 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x52>
 801b6e0:	4a0f      	ldr	r2, [pc, #60]	; (801b720 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x6c>)
 801b6e2:	f107 0314 	add.w	r3, r7, #20
 801b6e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801b6ea:	e883 0003 	stmia.w	r3, {r0, r1}
 801b6ee:	4a0d      	ldr	r2, [pc, #52]	; (801b724 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x70>)
 801b6f0:	f107 0314 	add.w	r3, r7, #20
 801b6f4:	e893 0003 	ldmia.w	r3, {r0, r1}
 801b6f8:	f7f9 fd86 	bl	8015208 <LOGGER_PrintLine>
 801b6fc:	2207      	movs	r2, #7
 801b6fe:	69f9      	ldr	r1, [r7, #28]
 801b700:	4809      	ldr	r0, [pc, #36]	; (801b728 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x74>)
 801b702:	f7f7 ff09 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 801b706:	7afb      	ldrb	r3, [r7, #11]
 801b708:	2b00      	cmp	r3, #0
 801b70a:	d104      	bne.n	801b716 <44dfb88cdd7607734702d454330b85a9c16a18d6+0x62>
 801b70c:	2207      	movs	r2, #7
 801b70e:	69f9      	ldr	r1, [r7, #28]
 801b710:	4806      	ldr	r0, [pc, #24]	; (801b72c <44dfb88cdd7607734702d454330b85a9c16a18d6+0x78>)
 801b712:	f7f7 ff01 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 801b716:	bf00      	nop
 801b718:	3720      	adds	r7, #32
 801b71a:	46bd      	mov	sp, r7
 801b71c:	bd80      	pop	{r7, pc}
 801b71e:	bf00      	nop
 801b720:	0802fd54 	.word	0x0802fd54
 801b724:	0802fd24 	.word	0x0802fd24
 801b728:	0801c5ff 	.word	0x0801c5ff
 801b72c:	0801b731 	.word	0x0801b731

0801b730 <b72e07a39f6da27974c9147939138222c897d050>:
 801b730:	b590      	push	{r4, r7, lr}
 801b732:	b087      	sub	sp, #28
 801b734:	af02      	add	r7, sp, #8
 801b736:	6078      	str	r0, [r7, #4]
 801b738:	687b      	ldr	r3, [r7, #4]
 801b73a:	60fb      	str	r3, [r7, #12]
 801b73c:	68fb      	ldr	r3, [r7, #12]
 801b73e:	791c      	ldrb	r4, [r3, #4]
 801b740:	68fb      	ldr	r3, [r7, #12]
 801b742:	689a      	ldr	r2, [r3, #8]
 801b744:	68fb      	ldr	r3, [r7, #12]
 801b746:	689b      	ldr	r3, [r3, #8]
 801b748:	4619      	mov	r1, r3
 801b74a:	4610      	mov	r0, r2
 801b74c:	f7f6 fc08 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 801b750:	4602      	mov	r2, r0
 801b752:	68fb      	ldr	r3, [r7, #12]
 801b754:	9300      	str	r3, [sp, #0]
 801b756:	4b05      	ldr	r3, [pc, #20]	; (801b76c <b72e07a39f6da27974c9147939138222c897d050+0x3c>)
 801b758:	2101      	movs	r1, #1
 801b75a:	4620      	mov	r0, r4
 801b75c:	f7f6 f8ac 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801b760:	f000 f9ec 	bl	801bb3c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d>
 801b764:	bf00      	nop
 801b766:	3714      	adds	r7, #20
 801b768:	46bd      	mov	sp, r7
 801b76a:	bd90      	pop	{r4, r7, pc}
 801b76c:	0801b731 	.word	0x0801b731

0801b770 <857de3c8f5260b81d9c8f1309c962f70e86f8d45>:
 801b770:	b580      	push	{r7, lr}
 801b772:	b092      	sub	sp, #72	; 0x48
 801b774:	af06      	add	r7, sp, #24
 801b776:	6078      	str	r0, [r7, #4]
 801b778:	460b      	mov	r3, r1
 801b77a:	70fb      	strb	r3, [r7, #3]
 801b77c:	f7ff fa6e 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 801b780:	4603      	mov	r3, r0
 801b782:	f083 0301 	eor.w	r3, r3, #1
 801b786:	b2db      	uxtb	r3, r3
 801b788:	2b00      	cmp	r3, #0
 801b78a:	d11e      	bne.n	801b7ca <857de3c8f5260b81d9c8f1309c962f70e86f8d45+0x5a>
 801b78c:	78fa      	ldrb	r2, [r7, #3]
 801b78e:	f107 0314 	add.w	r3, r7, #20
 801b792:	2101      	movs	r1, #1
 801b794:	4618      	mov	r0, r3
 801b796:	f000 f859 	bl	801b84c <candidateAddCellList>
 801b79a:	4603      	mov	r3, r0
 801b79c:	f083 0301 	eor.w	r3, r3, #1
 801b7a0:	b2db      	uxtb	r3, r3
 801b7a2:	2b00      	cmp	r3, #0
 801b7a4:	d113      	bne.n	801b7ce <857de3c8f5260b81d9c8f1309c962f70e86f8d45+0x5e>
 801b7a6:	2300      	movs	r3, #0
 801b7a8:	9304      	str	r3, [sp, #16]
 801b7aa:	2300      	movs	r3, #0
 801b7ac:	9303      	str	r3, [sp, #12]
 801b7ae:	2300      	movs	r3, #0
 801b7b0:	9302      	str	r3, [sp, #8]
 801b7b2:	2300      	movs	r3, #0
 801b7b4:	9301      	str	r3, [sp, #4]
 801b7b6:	f107 0314 	add.w	r3, r7, #20
 801b7ba:	9300      	str	r3, [sp, #0]
 801b7bc:	2301      	movs	r3, #1
 801b7be:	2201      	movs	r2, #1
 801b7c0:	6879      	ldr	r1, [r7, #4]
 801b7c2:	2001      	movs	r0, #1
 801b7c4:	f002 fde8 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801b7c8:	e002      	b.n	801b7d0 <857de3c8f5260b81d9c8f1309c962f70e86f8d45+0x60>
 801b7ca:	bf00      	nop
 801b7cc:	e000      	b.n	801b7d0 <857de3c8f5260b81d9c8f1309c962f70e86f8d45+0x60>
 801b7ce:	bf00      	nop
 801b7d0:	3730      	adds	r7, #48	; 0x30
 801b7d2:	46bd      	mov	sp, r7
 801b7d4:	bd80      	pop	{r7, pc}

0801b7d6 <trigger6pDelete>:
 801b7d6:	b580      	push	{r7, lr}
 801b7d8:	b092      	sub	sp, #72	; 0x48
 801b7da:	af06      	add	r7, sp, #24
 801b7dc:	6078      	str	r0, [r7, #4]
 801b7de:	460b      	mov	r3, r1
 801b7e0:	70fb      	strb	r3, [r7, #3]
 801b7e2:	f7ff fa3b 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 801b7e6:	4603      	mov	r3, r0
 801b7e8:	f083 0301 	eor.w	r3, r3, #1
 801b7ec:	b2db      	uxtb	r3, r3
 801b7ee:	2b00      	cmp	r3, #0
 801b7f0:	d124      	bne.n	801b83c <trigger6pDelete+0x66>
 801b7f2:	6878      	ldr	r0, [r7, #4]
 801b7f4:	f001 fd48 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801b7f8:	4603      	mov	r3, r0
 801b7fa:	2b01      	cmp	r3, #1
 801b7fc:	d920      	bls.n	801b840 <trigger6pDelete+0x6a>
 801b7fe:	78fb      	ldrb	r3, [r7, #3]
 801b800:	f107 0014 	add.w	r0, r7, #20
 801b804:	687a      	ldr	r2, [r7, #4]
 801b806:	2101      	movs	r1, #1
 801b808:	f000 f8ea 	bl	801b9e0 <candidateRemoveCellList>
 801b80c:	4603      	mov	r3, r0
 801b80e:	f083 0301 	eor.w	r3, r3, #1
 801b812:	b2db      	uxtb	r3, r3
 801b814:	2b00      	cmp	r3, #0
 801b816:	d115      	bne.n	801b844 <trigger6pDelete+0x6e>
 801b818:	2300      	movs	r3, #0
 801b81a:	9304      	str	r3, [sp, #16]
 801b81c:	2300      	movs	r3, #0
 801b81e:	9303      	str	r3, [sp, #12]
 801b820:	2300      	movs	r3, #0
 801b822:	9302      	str	r3, [sp, #8]
 801b824:	f107 0314 	add.w	r3, r7, #20
 801b828:	9301      	str	r3, [sp, #4]
 801b82a:	2300      	movs	r3, #0
 801b82c:	9300      	str	r3, [sp, #0]
 801b82e:	2301      	movs	r3, #1
 801b830:	2201      	movs	r2, #1
 801b832:	6879      	ldr	r1, [r7, #4]
 801b834:	2002      	movs	r0, #2
 801b836:	f002 fdaf 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801b83a:	e004      	b.n	801b846 <trigger6pDelete+0x70>
 801b83c:	bf00      	nop
 801b83e:	e002      	b.n	801b846 <trigger6pDelete+0x70>
 801b840:	bf00      	nop
 801b842:	e000      	b.n	801b846 <trigger6pDelete+0x70>
 801b844:	bf00      	nop
 801b846:	3730      	adds	r7, #48	; 0x30
 801b848:	46bd      	mov	sp, r7
 801b84a:	bd80      	pop	{r7, pc}

0801b84c <candidateAddCellList>:
 801b84c:	b590      	push	{r4, r7, lr}
 801b84e:	b08d      	sub	sp, #52	; 0x34
 801b850:	af00      	add	r7, sp, #0
 801b852:	6078      	str	r0, [r7, #4]
 801b854:	460b      	mov	r3, r1
 801b856:	70fb      	strb	r3, [r7, #3]
 801b858:	4613      	mov	r3, r2
 801b85a:	70bb      	strb	r3, [r7, #2]
 801b85c:	78fb      	ldrb	r3, [r7, #3]
 801b85e:	2b00      	cmp	r3, #0
 801b860:	d101      	bne.n	801b866 <candidateAddCellList+0x1a>
 801b862:	2300      	movs	r3, #0
 801b864:	e0b8      	b.n	801b9d8 <candidateAddCellList+0x18c>
 801b866:	2219      	movs	r2, #25
 801b868:	2100      	movs	r1, #0
 801b86a:	6878      	ldr	r0, [r7, #4]
 801b86c:	f00f fc44 	bl	802b0f8 <memset>
 801b870:	f107 0308 	add.w	r3, r7, #8
 801b874:	221a      	movs	r2, #26
 801b876:	21ff      	movs	r1, #255	; 0xff
 801b878:	4618      	mov	r0, r3
 801b87a:	f00f fc3d 	bl	802b0f8 <memset>
 801b87e:	78bb      	ldrb	r3, [r7, #2]
 801b880:	4618      	mov	r0, r3
 801b882:	f7f2 fd89 	bl	800e398 <284c3d2939813df9bbc67851898b3a4c94b0a9cc>
 801b886:	4603      	mov	r3, r0
 801b888:	84bb      	strh	r3, [r7, #36]	; 0x24
 801b88a:	2300      	movs	r3, #0
 801b88c:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801b88e:	2300      	movs	r3, #0
 801b890:	85bb      	strh	r3, [r7, #44]	; 0x2c
 801b892:	e02a      	b.n	801b8ea <candidateAddCellList+0x9e>
 801b894:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 801b896:	2b00      	cmp	r3, #0
 801b898:	d023      	beq.n	801b8e2 <candidateAddCellList+0x96>
 801b89a:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 801b89c:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 801b89e:	429a      	cmp	r2, r3
 801b8a0:	d204      	bcs.n	801b8ac <candidateAddCellList+0x60>
 801b8a2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 801b8a4:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 801b8a6:	1ad3      	subs	r3, r2, r3
 801b8a8:	b29b      	uxth	r3, r3
 801b8aa:	e005      	b.n	801b8b8 <candidateAddCellList+0x6c>
 801b8ac:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 801b8ae:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 801b8b0:	1ad3      	subs	r3, r2, r3
 801b8b2:	b29b      	uxth	r3, r3
 801b8b4:	330d      	adds	r3, #13
 801b8b6:	b29b      	uxth	r3, r3
 801b8b8:	847b      	strh	r3, [r7, #34]	; 0x22
 801b8ba:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 801b8bc:	2b00      	cmp	r3, #0
 801b8be:	d011      	beq.n	801b8e4 <candidateAddCellList+0x98>
 801b8c0:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 801b8c2:	4618      	mov	r0, r3
 801b8c4:	f001 fc70 	bl	801d1a8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34>
 801b8c8:	4603      	mov	r3, r0
 801b8ca:	2b00      	cmp	r3, #0
 801b8cc:	d00a      	beq.n	801b8e4 <candidateAddCellList+0x98>
 801b8ce:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801b8d0:	1c5a      	adds	r2, r3, #1
 801b8d2:	85fa      	strh	r2, [r7, #46]	; 0x2e
 801b8d4:	005b      	lsls	r3, r3, #1
 801b8d6:	3330      	adds	r3, #48	; 0x30
 801b8d8:	443b      	add	r3, r7
 801b8da:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 801b8dc:	f823 2c28 	strh.w	r2, [r3, #-40]
 801b8e0:	e000      	b.n	801b8e4 <candidateAddCellList+0x98>
 801b8e2:	bf00      	nop
 801b8e4:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 801b8e6:	3301      	adds	r3, #1
 801b8e8:	85bb      	strh	r3, [r7, #44]	; 0x2c
 801b8ea:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 801b8ec:	2b0c      	cmp	r3, #12
 801b8ee:	d9d1      	bls.n	801b894 <candidateAddCellList+0x48>
 801b8f0:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801b8f2:	2b05      	cmp	r3, #5
 801b8f4:	d835      	bhi.n	801b962 <candidateAddCellList+0x116>
 801b8f6:	2300      	movs	r3, #0
 801b8f8:	857b      	strh	r3, [r7, #42]	; 0x2a
 801b8fa:	e025      	b.n	801b948 <candidateAddCellList+0xfc>
 801b8fc:	8d79      	ldrh	r1, [r7, #42]	; 0x2a
 801b8fe:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 801b900:	4613      	mov	r3, r2
 801b902:	009b      	lsls	r3, r3, #2
 801b904:	4413      	add	r3, r2
 801b906:	687a      	ldr	r2, [r7, #4]
 801b908:	441a      	add	r2, r3
 801b90a:	004b      	lsls	r3, r1, #1
 801b90c:	3330      	adds	r3, #48	; 0x30
 801b90e:	443b      	add	r3, r7
 801b910:	f833 3c28 	ldrh.w	r3, [r3, #-40]
 801b914:	f8a2 3001 	strh.w	r3, [r2, #1]
 801b918:	f000 fddc 	bl	801c4d4 <getRandomChannelOffset>
 801b91c:	4603      	mov	r3, r0
 801b91e:	4619      	mov	r1, r3
 801b920:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 801b922:	4613      	mov	r3, r2
 801b924:	009b      	lsls	r3, r3, #2
 801b926:	4413      	add	r3, r2
 801b928:	687a      	ldr	r2, [r7, #4]
 801b92a:	4413      	add	r3, r2
 801b92c:	460a      	mov	r2, r1
 801b92e:	f8a3 2003 	strh.w	r2, [r3, #3]
 801b932:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 801b934:	4613      	mov	r3, r2
 801b936:	009b      	lsls	r3, r3, #2
 801b938:	4413      	add	r3, r2
 801b93a:	687a      	ldr	r2, [r7, #4]
 801b93c:	4413      	add	r3, r2
 801b93e:	2201      	movs	r2, #1
 801b940:	701a      	strb	r2, [r3, #0]
 801b942:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 801b944:	3301      	adds	r3, #1
 801b946:	857b      	strh	r3, [r7, #42]	; 0x2a
 801b948:	8d7a      	ldrh	r2, [r7, #42]	; 0x2a
 801b94a:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801b94c:	429a      	cmp	r2, r3
 801b94e:	d9d5      	bls.n	801b8fc <candidateAddCellList+0xb0>
 801b950:	78fb      	ldrb	r3, [r7, #3]
 801b952:	b29b      	uxth	r3, r3
 801b954:	8dfa      	ldrh	r2, [r7, #46]	; 0x2e
 801b956:	429a      	cmp	r2, r3
 801b958:	bf2c      	ite	cs
 801b95a:	2301      	movcs	r3, #1
 801b95c:	2300      	movcc	r3, #0
 801b95e:	b2db      	uxtb	r3, r3
 801b960:	e03a      	b.n	801b9d8 <candidateAddCellList+0x18c>
 801b962:	2300      	movs	r3, #0
 801b964:	84fb      	strh	r3, [r7, #38]	; 0x26
 801b966:	e033      	b.n	801b9d0 <candidateAddCellList+0x184>
 801b968:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 801b96a:	2b04      	cmp	r3, #4
 801b96c:	d102      	bne.n	801b974 <candidateAddCellList+0x128>
 801b96e:	230d      	movs	r3, #13
 801b970:	853b      	strh	r3, [r7, #40]	; 0x28
 801b972:	e004      	b.n	801b97e <candidateAddCellList+0x132>
 801b974:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 801b976:	2201      	movs	r2, #1
 801b978:	fa02 f303 	lsl.w	r3, r2, r3
 801b97c:	853b      	strh	r3, [r7, #40]	; 0x28
 801b97e:	8df8      	ldrh	r0, [r7, #46]	; 0x2e
 801b980:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 801b982:	4613      	mov	r3, r2
 801b984:	009b      	lsls	r3, r3, #2
 801b986:	4413      	add	r3, r2
 801b988:	687a      	ldr	r2, [r7, #4]
 801b98a:	18d4      	adds	r4, r2, r3
 801b98c:	f107 0108 	add.w	r1, r7, #8
 801b990:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 801b992:	4602      	mov	r2, r0
 801b994:	4618      	mov	r0, r3
 801b996:	f000 fdaf 	bl	801c4f8 <getRandomSlotOffsetFromAvailableRange>
 801b99a:	4603      	mov	r3, r0
 801b99c:	f8a4 3001 	strh.w	r3, [r4, #1]
 801b9a0:	f000 fd98 	bl	801c4d4 <getRandomChannelOffset>
 801b9a4:	4603      	mov	r3, r0
 801b9a6:	4619      	mov	r1, r3
 801b9a8:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 801b9aa:	4613      	mov	r3, r2
 801b9ac:	009b      	lsls	r3, r3, #2
 801b9ae:	4413      	add	r3, r2
 801b9b0:	687a      	ldr	r2, [r7, #4]
 801b9b2:	4413      	add	r3, r2
 801b9b4:	460a      	mov	r2, r1
 801b9b6:	f8a3 2003 	strh.w	r2, [r3, #3]
 801b9ba:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 801b9bc:	4613      	mov	r3, r2
 801b9be:	009b      	lsls	r3, r3, #2
 801b9c0:	4413      	add	r3, r2
 801b9c2:	687a      	ldr	r2, [r7, #4]
 801b9c4:	4413      	add	r3, r2
 801b9c6:	2201      	movs	r2, #1
 801b9c8:	701a      	strb	r2, [r3, #0]
 801b9ca:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 801b9cc:	3301      	adds	r3, #1
 801b9ce:	84fb      	strh	r3, [r7, #38]	; 0x26
 801b9d0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 801b9d2:	2b04      	cmp	r3, #4
 801b9d4:	d9c8      	bls.n	801b968 <candidateAddCellList+0x11c>
 801b9d6:	2301      	movs	r3, #1
 801b9d8:	4618      	mov	r0, r3
 801b9da:	3734      	adds	r7, #52	; 0x34
 801b9dc:	46bd      	mov	sp, r7
 801b9de:	bd90      	pop	{r4, r7, pc}

0801b9e0 <candidateRemoveCellList>:
 801b9e0:	b5b0      	push	{r4, r5, r7, lr}
 801b9e2:	b098      	sub	sp, #96	; 0x60
 801b9e4:	af00      	add	r7, sp, #0
 801b9e6:	62f8      	str	r0, [r7, #44]	; 0x2c
 801b9e8:	627a      	str	r2, [r7, #36]	; 0x24
 801b9ea:	461a      	mov	r2, r3
 801b9ec:	460b      	mov	r3, r1
 801b9ee:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801b9f2:	4613      	mov	r3, r2
 801b9f4:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 801b9f8:	2219      	movs	r2, #25
 801b9fa:	2100      	movs	r1, #0
 801b9fc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 801b9fe:	f00f fb7b 	bl	802b0f8 <memset>
 801ba02:	f000 ffdd 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801ba06:	4603      	mov	r3, r0
 801ba08:	f8a7 305a 	strh.w	r3, [r7, #90]	; 0x5a
 801ba0c:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 801ba10:	4618      	mov	r0, r3
 801ba12:	f7f2 fcc1 	bl	800e398 <284c3d2939813df9bbc67851898b3a4c94b0a9cc>
 801ba16:	4603      	mov	r3, r0
 801ba18:	f8a7 3058 	strh.w	r3, [r7, #88]	; 0x58
 801ba1c:	2300      	movs	r3, #0
 801ba1e:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
 801ba22:	2300      	movs	r3, #0
 801ba24:	f8a7 305c 	strh.w	r3, [r7, #92]	; 0x5c
 801ba28:	e06d      	b.n	801bb06 <candidateRemoveCellList+0x126>
 801ba2a:	f8b7 2058 	ldrh.w	r2, [r7, #88]	; 0x58
 801ba2e:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 801ba32:	4413      	add	r3, r2
 801ba34:	b29b      	uxth	r3, r3
 801ba36:	f8b7 205a 	ldrh.w	r2, [r7, #90]	; 0x5a
 801ba3a:	fbb3 f1f2 	udiv	r1, r3, r2
 801ba3e:	fb01 f202 	mul.w	r2, r1, r2
 801ba42:	1a9b      	subs	r3, r3, r2
 801ba44:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 801ba48:	463b      	mov	r3, r7
 801ba4a:	f8b7 2056 	ldrh.w	r2, [r7, #86]	; 0x56
 801ba4e:	4611      	mov	r1, r2
 801ba50:	4618      	mov	r0, r3
 801ba52:	f001 fb01 	bl	801d058 <SCHEDULE_GetCellInfo>
 801ba56:	f107 0438 	add.w	r4, r7, #56	; 0x38
 801ba5a:	463d      	mov	r5, r7
 801ba5c:	6828      	ldr	r0, [r5, #0]
 801ba5e:	6869      	ldr	r1, [r5, #4]
 801ba60:	68aa      	ldr	r2, [r5, #8]
 801ba62:	68eb      	ldr	r3, [r5, #12]
 801ba64:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801ba66:	6928      	ldr	r0, [r5, #16]
 801ba68:	6969      	ldr	r1, [r5, #20]
 801ba6a:	69aa      	ldr	r2, [r5, #24]
 801ba6c:	c407      	stmia	r4!, {r0, r1, r2}
 801ba6e:	8bab      	ldrh	r3, [r5, #28]
 801ba70:	8023      	strh	r3, [r4, #0]
 801ba72:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 801ba76:	2b05      	cmp	r3, #5
 801ba78:	d140      	bne.n	801bafc <candidateRemoveCellList+0x11c>
 801ba7a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801ba7e:	4619      	mov	r1, r3
 801ba80:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801ba82:	f7f3 fc53 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801ba86:	4603      	mov	r3, r0
 801ba88:	2b00      	cmp	r3, #0
 801ba8a:	d037      	beq.n	801bafc <candidateRemoveCellList+0x11c>
 801ba8c:	4a29      	ldr	r2, [pc, #164]	; (801bb34 <candidateRemoveCellList+0x154>)
 801ba8e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801ba92:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ba96:	e883 0003 	stmia.w	r3, {r0, r1}
 801ba9a:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 801ba9e:	4a26      	ldr	r2, [pc, #152]	; (801bb38 <candidateRemoveCellList+0x158>)
 801baa0:	f107 0130 	add.w	r1, r7, #48	; 0x30
 801baa4:	c903      	ldmia	r1, {r0, r1}
 801baa6:	f7f9 fbaf 	bl	8015208 <LOGGER_PrintLine>
 801baaa:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 801baae:	4613      	mov	r3, r2
 801bab0:	009b      	lsls	r3, r3, #2
 801bab2:	4413      	add	r3, r2
 801bab4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801bab6:	4413      	add	r3, r2
 801bab8:	f8b7 204c 	ldrh.w	r2, [r7, #76]	; 0x4c
 801babc:	f8a3 2001 	strh.w	r2, [r3, #1]
 801bac0:	f897 104e 	ldrb.w	r1, [r7, #78]	; 0x4e
 801bac4:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 801bac8:	4613      	mov	r3, r2
 801baca:	009b      	lsls	r3, r3, #2
 801bacc:	4413      	add	r3, r2
 801bace:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801bad0:	4413      	add	r3, r2
 801bad2:	460a      	mov	r2, r1
 801bad4:	f8a3 2003 	strh.w	r2, [r3, #3]
 801bad8:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 801badc:	4613      	mov	r3, r2
 801bade:	009b      	lsls	r3, r3, #2
 801bae0:	4413      	add	r3, r2
 801bae2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 801bae4:	4413      	add	r3, r2
 801bae6:	2201      	movs	r2, #1
 801bae8:	701a      	strb	r2, [r3, #0]
 801baea:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 801baee:	3301      	adds	r3, #1
 801baf0:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
 801baf4:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 801baf8:	2b04      	cmp	r3, #4
 801bafa:	d80b      	bhi.n	801bb14 <candidateRemoveCellList+0x134>
 801bafc:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 801bb00:	3301      	adds	r3, #1
 801bb02:	f8a7 305c 	strh.w	r3, [r7, #92]	; 0x5c
 801bb06:	f8b7 205c 	ldrh.w	r2, [r7, #92]	; 0x5c
 801bb0a:	f8b7 305a 	ldrh.w	r3, [r7, #90]	; 0x5a
 801bb0e:	429a      	cmp	r2, r3
 801bb10:	d38b      	bcc.n	801ba2a <candidateRemoveCellList+0x4a>
 801bb12:	e000      	b.n	801bb16 <candidateRemoveCellList+0x136>
 801bb14:	bf00      	nop
 801bb16:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 801bb1a:	b29b      	uxth	r3, r3
 801bb1c:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 801bb20:	429a      	cmp	r2, r3
 801bb22:	bf2c      	ite	cs
 801bb24:	2301      	movcs	r3, #1
 801bb26:	2300      	movcc	r3, #0
 801bb28:	b2db      	uxtb	r3, r3
 801bb2a:	4618      	mov	r0, r3
 801bb2c:	3760      	adds	r7, #96	; 0x60
 801bb2e:	46bd      	mov	sp, r7
 801bb30:	bdb0      	pop	{r4, r5, r7, pc}
 801bb32:	bf00      	nop
 801bb34:	0802fd1c 	.word	0x0802fd1c
 801bb38:	0802fd5c 	.word	0x0802fd5c

0801bb3c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d>:
 801bb3c:	b5b0      	push	{r4, r5, r7, lr}
 801bb3e:	b0e0      	sub	sp, #384	; 0x180
 801bb40:	af06      	add	r7, sp, #24
 801bb42:	4bce      	ldr	r3, [pc, #824]	; (801be7c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x340>)
 801bb44:	681b      	ldr	r3, [r3, #0]
 801bb46:	f503 7338 	add.w	r3, r3, #736	; 0x2e0
 801bb4a:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 801bb4e:	f7f1 fa11 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 801bb52:	4603      	mov	r3, r0
 801bb54:	2b00      	cmp	r3, #0
 801bb56:	f040 844a 	bne.w	801c3ee <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b2>
 801bb5a:	f000 fd6d 	bl	801c638 <wipeOutUnusedCells>
 801bb5e:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801bb62:	2200      	movs	r2, #0
 801bb64:	601a      	str	r2, [r3, #0]
 801bb66:	605a      	str	r2, [r3, #4]
 801bb68:	609a      	str	r2, [r3, #8]
 801bb6a:	60da      	str	r2, [r3, #12]
 801bb6c:	741a      	strb	r2, [r3, #16]
 801bb6e:	2302      	movs	r3, #2
 801bb70:	f887 30d8 	strb.w	r3, [r7, #216]	; 0xd8
 801bb74:	f7ff f872 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 801bb78:	4603      	mov	r3, r0
 801bb7a:	f083 0301 	eor.w	r3, r3, #1
 801bb7e:	b2db      	uxtb	r3, r3
 801bb80:	2b00      	cmp	r3, #0
 801bb82:	d10e      	bne.n	801bba2 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x66>
 801bb84:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801bb88:	1c5a      	adds	r2, r3, #1
 801bb8a:	f107 03eb 	add.w	r3, r7, #235	; 0xeb
 801bb8e:	4611      	mov	r1, r2
 801bb90:	4618      	mov	r0, r3
 801bb92:	f7f2 faed 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801bb96:	4603      	mov	r3, r0
 801bb98:	f083 0301 	eor.w	r3, r3, #1
 801bb9c:	b2db      	uxtb	r3, r3
 801bb9e:	2b00      	cmp	r3, #0
 801bba0:	d005      	beq.n	801bbae <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x72>
 801bba2:	f001 fc93 	bl	801d4cc <6ddbbbac57a040e4656a8033d785bd5c35bb4db8>
 801bba6:	f001 fd09 	bl	801d5bc <1baccc0636a0c0164401b195d5e58f3f8da51c03>
 801bbaa:	f000 bc21 	b.w	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801bbae:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bbb2:	2200      	movs	r2, #0
 801bbb4:	601a      	str	r2, [r3, #0]
 801bbb6:	605a      	str	r2, [r3, #4]
 801bbb8:	609a      	str	r2, [r3, #8]
 801bbba:	60da      	str	r2, [r3, #12]
 801bbbc:	741a      	strb	r2, [r3, #16]
 801bbbe:	2302      	movs	r3, #2
 801bbc0:	f887 30c4 	strb.w	r3, [r7, #196]	; 0xc4
 801bbc4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bbc8:	4618      	mov	r0, r3
 801bbca:	f001 fcbb 	bl	801d544 <0a6eef3dd890049c6feb9f053ae4732930866b35>
 801bbce:	4603      	mov	r3, r0
 801bbd0:	2b00      	cmp	r3, #0
 801bbd2:	f000 80d5 	beq.w	801bd80 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x244>
 801bbd6:	f107 02d8 	add.w	r2, r7, #216	; 0xd8
 801bbda:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bbde:	4611      	mov	r1, r2
 801bbe0:	4618      	mov	r0, r3
 801bbe2:	f7f3 fba3 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801bbe6:	4603      	mov	r3, r0
 801bbe8:	f083 0301 	eor.w	r3, r3, #1
 801bbec:	b2db      	uxtb	r3, r3
 801bbee:	2b00      	cmp	r3, #0
 801bbf0:	f000 80ca 	beq.w	801bd88 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x24c>
 801bbf4:	4aa2      	ldr	r2, [pc, #648]	; (801be80 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x344>)
 801bbf6:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 801bbfa:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bbfe:	e883 0003 	stmia.w	r3, {r0, r1}
 801bc02:	4aa0      	ldr	r2, [pc, #640]	; (801be84 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x348>)
 801bc04:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 801bc08:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bc0c:	f7f9 fafc 	bl	8015208 <LOGGER_PrintLine>
 801bc10:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bc14:	4618      	mov	r0, r3
 801bc16:	f001 fb37 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801bc1a:	4603      	mov	r3, r0
 801bc1c:	2b00      	cmp	r3, #0
 801bc1e:	bf0c      	ite	eq
 801bc20:	2301      	moveq	r3, #1
 801bc22:	2300      	movne	r3, #0
 801bc24:	f887 3157 	strb.w	r3, [r7, #343]	; 0x157
 801bc28:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bc2c:	7b5b      	ldrb	r3, [r3, #13]
 801bc2e:	2b00      	cmp	r3, #0
 801bc30:	d019      	beq.n	801bc66 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x12a>
 801bc32:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bc36:	2200      	movs	r2, #0
 801bc38:	735a      	strb	r2, [r3, #13]
 801bc3a:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bc3e:	2200      	movs	r2, #0
 801bc40:	731a      	strb	r2, [r3, #12]
 801bc42:	4a8f      	ldr	r2, [pc, #572]	; (801be80 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x344>)
 801bc44:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 801bc48:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bc4c:	e883 0003 	stmia.w	r3, {r0, r1}
 801bc50:	f8d7 0158 	ldr.w	r0, [r7, #344]	; 0x158
 801bc54:	f7ff fa94 	bl	801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>
 801bc58:	4603      	mov	r3, r0
 801bc5a:	4a8b      	ldr	r2, [pc, #556]	; (801be88 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x34c>)
 801bc5c:	f107 01b4 	add.w	r1, r7, #180	; 0xb4
 801bc60:	c903      	ldmia	r1, {r0, r1}
 801bc62:	f7f9 fad1 	bl	8015208 <LOGGER_PrintLine>
 801bc66:	f897 3157 	ldrb.w	r3, [r7, #343]	; 0x157
 801bc6a:	f083 0301 	eor.w	r3, r3, #1
 801bc6e:	b2db      	uxtb	r3, r3
 801bc70:	2b00      	cmp	r3, #0
 801bc72:	d02c      	beq.n	801bcce <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x192>
 801bc74:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bc78:	7b1b      	ldrb	r3, [r3, #12]
 801bc7a:	2b00      	cmp	r3, #0
 801bc7c:	d127      	bne.n	801bcce <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x192>
 801bc7e:	4a80      	ldr	r2, [pc, #512]	; (801be80 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x344>)
 801bc80:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 801bc84:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bc88:	e883 0003 	stmia.w	r3, {r0, r1}
 801bc8c:	4a7f      	ldr	r2, [pc, #508]	; (801be8c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x350>)
 801bc8e:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 801bc92:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bc96:	f7f9 fab7 	bl	8015208 <LOGGER_PrintLine>
 801bc9a:	f107 01c4 	add.w	r1, r7, #196	; 0xc4
 801bc9e:	2300      	movs	r3, #0
 801bca0:	9304      	str	r3, [sp, #16]
 801bca2:	2300      	movs	r3, #0
 801bca4:	9303      	str	r3, [sp, #12]
 801bca6:	2300      	movs	r3, #0
 801bca8:	9302      	str	r3, [sp, #8]
 801bcaa:	2300      	movs	r3, #0
 801bcac:	9301      	str	r3, [sp, #4]
 801bcae:	2300      	movs	r3, #0
 801bcb0:	9300      	str	r3, [sp, #0]
 801bcb2:	2301      	movs	r3, #1
 801bcb4:	2201      	movs	r2, #1
 801bcb6:	2007      	movs	r0, #7
 801bcb8:	f002 fb6e 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801bcbc:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bcc0:	7b1b      	ldrb	r3, [r3, #12]
 801bcc2:	3301      	adds	r3, #1
 801bcc4:	b2da      	uxtb	r2, r3
 801bcc6:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bcca:	731a      	strb	r2, [r3, #12]
 801bccc:	e390      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801bcce:	f897 3157 	ldrb.w	r3, [r7, #343]	; 0x157
 801bcd2:	f083 0301 	eor.w	r3, r3, #1
 801bcd6:	b2db      	uxtb	r3, r3
 801bcd8:	2b00      	cmp	r3, #0
 801bcda:	d012      	beq.n	801bd02 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x1c6>
 801bcdc:	4a6c      	ldr	r2, [pc, #432]	; (801be90 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x354>)
 801bcde:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801bce2:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bce6:	e883 0003 	stmia.w	r3, {r0, r1}
 801bcea:	4a6a      	ldr	r2, [pc, #424]	; (801be94 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x358>)
 801bcec:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801bcf0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bcf4:	f7f9 fa88 	bl	8015208 <LOGGER_PrintLine>
 801bcf8:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bcfc:	4618      	mov	r0, r3
 801bcfe:	f001 fb7d 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 801bd02:	f107 02ec 	add.w	r2, r7, #236	; 0xec
 801bd06:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801bd0a:	3301      	adds	r3, #1
 801bd0c:	4611      	mov	r1, r2
 801bd0e:	4618      	mov	r0, r3
 801bd10:	f000 fb76 	bl	801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>
 801bd14:	2300      	movs	r3, #0
 801bd16:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
 801bd1a:	e012      	b.n	801bd42 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x206>
 801bd1c:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 801bd20:	005b      	lsls	r3, r3, #1
 801bd22:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801bd26:	443b      	add	r3, r7
 801bd28:	f833 3c7c 	ldrh.w	r3, [r3, #-124]
 801bd2c:	f107 02c4 	add.w	r2, r7, #196	; 0xc4
 801bd30:	4611      	mov	r1, r2
 801bd32:	4618      	mov	r0, r3
 801bd34:	f001 f856 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801bd38:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 801bd3c:	3301      	adds	r3, #1
 801bd3e:	f8c7 3164 	str.w	r3, [r7, #356]	; 0x164
 801bd42:	f8d7 3164 	ldr.w	r3, [r7, #356]	; 0x164
 801bd46:	2b00      	cmp	r3, #0
 801bd48:	d0e8      	beq.n	801bd1c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x1e0>
 801bd4a:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bd4e:	2201      	movs	r2, #1
 801bd50:	735a      	strb	r2, [r3, #13]
 801bd52:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bd56:	2200      	movs	r2, #0
 801bd58:	731a      	strb	r2, [r3, #12]
 801bd5a:	4a49      	ldr	r2, [pc, #292]	; (801be80 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x344>)
 801bd5c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 801bd60:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bd64:	e883 0003 	stmia.w	r3, {r0, r1}
 801bd68:	f8d7 0158 	ldr.w	r0, [r7, #344]	; 0x158
 801bd6c:	f7ff fa08 	bl	801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>
 801bd70:	4603      	mov	r3, r0
 801bd72:	4a45      	ldr	r2, [pc, #276]	; (801be88 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x34c>)
 801bd74:	f107 0194 	add.w	r1, r7, #148	; 0x94
 801bd78:	c903      	ldmia	r1, {r0, r1}
 801bd7a:	f7f9 fa45 	bl	8015208 <LOGGER_PrintLine>
 801bd7e:	e003      	b.n	801bd88 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x24c>
 801bd80:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bd84:	2201      	movs	r2, #1
 801bd86:	735a      	strb	r2, [r3, #13]
 801bd88:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bd8c:	7b5b      	ldrb	r3, [r3, #13]
 801bd8e:	2b01      	cmp	r3, #1
 801bd90:	f040 8157 	bne.w	801c042 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x506>
 801bd94:	f107 02ec 	add.w	r2, r7, #236	; 0xec
 801bd98:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801bd9c:	3301      	adds	r3, #1
 801bd9e:	4611      	mov	r1, r2
 801bda0:	4618      	mov	r0, r3
 801bda2:	f000 fb2d 	bl	801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>
 801bda6:	2300      	movs	r3, #0
 801bda8:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 801bdac:	e125      	b.n	801bffa <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4be>
 801bdae:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bdb2:	005b      	lsls	r3, r3, #1
 801bdb4:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801bdb8:	443b      	add	r3, r7
 801bdba:	f833 2c7c 	ldrh.w	r2, [r3, #-124]
 801bdbe:	463b      	mov	r3, r7
 801bdc0:	4611      	mov	r1, r2
 801bdc2:	4618      	mov	r0, r3
 801bdc4:	f001 f948 	bl	801d058 <SCHEDULE_GetCellInfo>
 801bdc8:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801bdcc:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168
 801bdd0:	f107 04f0 	add.w	r4, r7, #240	; 0xf0
 801bdd4:	461d      	mov	r5, r3
 801bdd6:	6828      	ldr	r0, [r5, #0]
 801bdd8:	6869      	ldr	r1, [r5, #4]
 801bdda:	68aa      	ldr	r2, [r5, #8]
 801bddc:	68eb      	ldr	r3, [r5, #12]
 801bdde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801bde0:	6928      	ldr	r0, [r5, #16]
 801bde2:	6969      	ldr	r1, [r5, #20]
 801bde4:	69aa      	ldr	r2, [r5, #24]
 801bde6:	c407      	stmia	r4!, {r0, r1, r2}
 801bde8:	8bab      	ldrh	r3, [r5, #28]
 801bdea:	8023      	strh	r3, [r4, #0]
 801bdec:	f897 3101 	ldrb.w	r3, [r7, #257]	; 0x101
 801bdf0:	2b04      	cmp	r3, #4
 801bdf2:	d10a      	bne.n	801be0a <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x2ce>
 801bdf4:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bdf8:	005b      	lsls	r3, r3, #1
 801bdfa:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801bdfe:	443b      	add	r3, r7
 801be00:	f833 3c7c 	ldrh.w	r3, [r3, #-124]
 801be04:	4618      	mov	r0, r3
 801be06:	f7fe ffd1 	bl	801adac <7d76a56aa2790d7b3ba433ec1df82e5a4bdd5a6f>
 801be0a:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 801be0e:	2b04      	cmp	r3, #4
 801be10:	f000 80ed 	beq.w	801bfee <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4b2>
 801be14:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 801be18:	2b03      	cmp	r3, #3
 801be1a:	f000 80e8 	beq.w	801bfee <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4b2>
 801be1e:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 801be22:	2b00      	cmp	r3, #0
 801be24:	d003      	beq.n	801be2e <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x2f2>
 801be26:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 801be2a:	2b02      	cmp	r3, #2
 801be2c:	d134      	bne.n	801be98 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x35c>
 801be2e:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801be32:	005b      	lsls	r3, r3, #1
 801be34:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801be38:	443b      	add	r3, r7
 801be3a:	f833 5c7c 	ldrh.w	r5, [r3, #-124]
 801be3e:	f107 02ee 	add.w	r2, r7, #238	; 0xee
 801be42:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801be46:	4413      	add	r3, r2
 801be48:	781c      	ldrb	r4, [r3, #0]
 801be4a:	f507 73a4 	add.w	r3, r7, #328	; 0x148
 801be4e:	4618      	mov	r0, r3
 801be50:	f7fd fdb2 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801be54:	ab02      	add	r3, sp, #8
 801be56:	f507 72a4 	add.w	r2, r7, #328	; 0x148
 801be5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801be5e:	6018      	str	r0, [r3, #0]
 801be60:	3304      	adds	r3, #4
 801be62:	7019      	strb	r1, [r3, #0]
 801be64:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801be68:	9301      	str	r3, [sp, #4]
 801be6a:	9400      	str	r4, [sp, #0]
 801be6c:	2301      	movs	r3, #1
 801be6e:	2203      	movs	r2, #3
 801be70:	2103      	movs	r1, #3
 801be72:	4628      	mov	r0, r5
 801be74:	f000 fdc4 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 801be78:	e0ba      	b.n	801bff0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4b4>
 801be7a:	bf00      	nop
 801be7c:	20000040 	.word	0x20000040
 801be80:	0802fd1c 	.word	0x0802fd1c
 801be84:	0802fd74 	.word	0x0802fd74
 801be88:	0802fd98 	.word	0x0802fd98
 801be8c:	0802fdb0 	.word	0x0802fdb0
 801be90:	0802fd54 	.word	0x0802fd54
 801be94:	0802fdec 	.word	0x0802fdec
 801be98:	f897 3102 	ldrb.w	r3, [r7, #258]	; 0x102
 801be9c:	2b05      	cmp	r3, #5
 801be9e:	f040 80a7 	bne.w	801bff0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4b4>
 801bea2:	f107 046c 	add.w	r4, r7, #108	; 0x6c
 801bea6:	f107 05f0 	add.w	r5, r7, #240	; 0xf0
 801beaa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801beac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801beae:	682b      	ldr	r3, [r5, #0]
 801beb0:	7023      	strb	r3, [r4, #0]
 801beb2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801beb6:	7b1b      	ldrb	r3, [r3, #12]
 801beb8:	2b00      	cmp	r3, #0
 801beba:	d158      	bne.n	801bf6e <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x432>
 801bebc:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801bec0:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 801bec4:	4ac4      	ldr	r2, [pc, #784]	; (801c1d8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x69c>)
 801bec6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801beca:	e883 0003 	stmia.w	r3, {r0, r1}
 801bece:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801bed2:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 801bed6:	4ac1      	ldr	r2, [pc, #772]	; (801c1dc <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6a0>)
 801bed8:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bedc:	f7f9 f994 	bl	8015208 <LOGGER_PrintLine>
 801bee0:	f507 7388 	add.w	r3, r7, #272	; 0x110
 801bee4:	2219      	movs	r2, #25
 801bee6:	2100      	movs	r1, #0
 801bee8:	4618      	mov	r0, r3
 801beea:	f00f f905 	bl	802b0f8 <memset>
 801beee:	2301      	movs	r3, #1
 801bef0:	f887 3110 	strb.w	r3, [r7, #272]	; 0x110
 801bef4:	f8b7 3104 	ldrh.w	r3, [r7, #260]	; 0x104
 801bef8:	f8a7 3111 	strh.w	r3, [r7, #273]	; 0x111
 801befc:	f897 3106 	ldrb.w	r3, [r7, #262]	; 0x106
 801bf00:	f8a7 3113 	strh.w	r3, [r7, #275]	; 0x113
 801bf04:	f897 20eb 	ldrb.w	r2, [r7, #235]	; 0xeb
 801bf08:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 801bf0c:	2101      	movs	r1, #1
 801bf0e:	4618      	mov	r0, r3
 801bf10:	f7ff fc9c 	bl	801b84c <candidateAddCellList>
 801bf14:	4603      	mov	r3, r0
 801bf16:	f083 0301 	eor.w	r3, r3, #1
 801bf1a:	b2db      	uxtb	r3, r3
 801bf1c:	2b00      	cmp	r3, #0
 801bf1e:	d008      	beq.n	801bf32 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x3f6>
 801bf20:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bf24:	7b1b      	ldrb	r3, [r3, #12]
 801bf26:	3301      	adds	r3, #1
 801bf28:	b2da      	uxtb	r2, r3
 801bf2a:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bf2e:	731a      	strb	r2, [r3, #12]
 801bf30:	e25e      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801bf32:	f897 2101 	ldrb.w	r2, [r7, #257]	; 0x101
 801bf36:	f107 016c 	add.w	r1, r7, #108	; 0x6c
 801bf3a:	2300      	movs	r3, #0
 801bf3c:	9304      	str	r3, [sp, #16]
 801bf3e:	2300      	movs	r3, #0
 801bf40:	9303      	str	r3, [sp, #12]
 801bf42:	2300      	movs	r3, #0
 801bf44:	9302      	str	r3, [sp, #8]
 801bf46:	f507 7388 	add.w	r3, r7, #272	; 0x110
 801bf4a:	9301      	str	r3, [sp, #4]
 801bf4c:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 801bf50:	9300      	str	r3, [sp, #0]
 801bf52:	4613      	mov	r3, r2
 801bf54:	2201      	movs	r2, #1
 801bf56:	2003      	movs	r0, #3
 801bf58:	f002 fa1e 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801bf5c:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bf60:	7b1b      	ldrb	r3, [r3, #12]
 801bf62:	3301      	adds	r3, #1
 801bf64:	b2da      	uxtb	r2, r3
 801bf66:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801bf6a:	731a      	strb	r2, [r3, #12]
 801bf6c:	e240      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801bf6e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801bf72:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 801bf76:	4a9a      	ldr	r2, [pc, #616]	; (801c1e0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6a4>)
 801bf78:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bf7c:	e883 0003 	stmia.w	r3, {r0, r1}
 801bf80:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801bf84:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 801bf88:	4a96      	ldr	r2, [pc, #600]	; (801c1e4 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6a8>)
 801bf8a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bf8e:	f7f9 f93b 	bl	8015208 <LOGGER_PrintLine>
 801bf92:	f8b7 3104 	ldrh.w	r3, [r7, #260]	; 0x104
 801bf96:	f107 026c 	add.w	r2, r7, #108	; 0x6c
 801bf9a:	4611      	mov	r1, r2
 801bf9c:	4618      	mov	r0, r3
 801bf9e:	f000 ff21 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801bfa2:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bfa6:	005b      	lsls	r3, r3, #1
 801bfa8:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801bfac:	443b      	add	r3, r7
 801bfae:	f833 5c7c 	ldrh.w	r5, [r3, #-124]
 801bfb2:	f107 02ee 	add.w	r2, r7, #238	; 0xee
 801bfb6:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bfba:	4413      	add	r3, r2
 801bfbc:	781c      	ldrb	r4, [r3, #0]
 801bfbe:	f507 73a8 	add.w	r3, r7, #336	; 0x150
 801bfc2:	4618      	mov	r0, r3
 801bfc4:	f7fd fcf8 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801bfc8:	ab02      	add	r3, sp, #8
 801bfca:	f507 72a8 	add.w	r2, r7, #336	; 0x150
 801bfce:	e892 0003 	ldmia.w	r2, {r0, r1}
 801bfd2:	6018      	str	r0, [r3, #0]
 801bfd4:	3304      	adds	r3, #4
 801bfd6:	7019      	strb	r1, [r3, #0]
 801bfd8:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801bfdc:	9301      	str	r3, [sp, #4]
 801bfde:	9400      	str	r4, [sp, #0]
 801bfe0:	2301      	movs	r3, #1
 801bfe2:	2203      	movs	r2, #3
 801bfe4:	2103      	movs	r1, #3
 801bfe6:	4628      	mov	r0, r5
 801bfe8:	f000 fd0a 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 801bfec:	e000      	b.n	801bff0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x4b4>
 801bfee:	bf00      	nop
 801bff0:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bff4:	3301      	adds	r3, #1
 801bff6:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 801bffa:	f8d7 3160 	ldr.w	r3, [r7, #352]	; 0x160
 801bffe:	2b00      	cmp	r3, #0
 801c000:	f43f aed5 	beq.w	801bdae <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x272>
 801c004:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c008:	2202      	movs	r2, #2
 801c00a:	735a      	strb	r2, [r3, #13]
 801c00c:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c010:	2200      	movs	r2, #0
 801c012:	731a      	strb	r2, [r3, #12]
 801c014:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c018:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 801c01c:	4a6e      	ldr	r2, [pc, #440]	; (801c1d8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x69c>)
 801c01e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c022:	e883 0003 	stmia.w	r3, {r0, r1}
 801c026:	f8d7 0158 	ldr.w	r0, [r7, #344]	; 0x158
 801c02a:	f7ff f8a9 	bl	801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>
 801c02e:	4602      	mov	r2, r0
 801c030:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c034:	f5a3 718a 	sub.w	r1, r3, #276	; 0x114
 801c038:	4613      	mov	r3, r2
 801c03a:	4a6b      	ldr	r2, [pc, #428]	; (801c1e8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6ac>)
 801c03c:	c903      	ldmia	r1, {r0, r1}
 801c03e:	f7f9 f8e3 	bl	8015208 <LOGGER_PrintLine>
 801c042:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c046:	7b5b      	ldrb	r3, [r3, #13]
 801c048:	2b02      	cmp	r3, #2
 801c04a:	d15d      	bne.n	801c108 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x5cc>
 801c04c:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c050:	4618      	mov	r0, r3
 801c052:	f001 f919 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801c056:	4603      	mov	r3, r0
 801c058:	2b00      	cmp	r3, #0
 801c05a:	d12a      	bne.n	801c0b2 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x576>
 801c05c:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c060:	7b1b      	ldrb	r3, [r3, #12]
 801c062:	2b04      	cmp	r3, #4
 801c064:	d810      	bhi.n	801c088 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x54c>
 801c066:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c06a:	7b1b      	ldrb	r3, [r3, #12]
 801c06c:	3301      	adds	r3, #1
 801c06e:	b2da      	uxtb	r2, r3
 801c070:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c074:	731a      	strb	r2, [r3, #12]
 801c076:	f897 20eb 	ldrb.w	r2, [r7, #235]	; 0xeb
 801c07a:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c07e:	4611      	mov	r1, r2
 801c080:	4618      	mov	r0, r3
 801c082:	f7ff fb75 	bl	801b770 <857de3c8f5260b81d9c8f1309c962f70e86f8d45>
 801c086:	e1b3      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c088:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c08c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 801c090:	4a56      	ldr	r2, [pc, #344]	; (801c1ec <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6b0>)
 801c092:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c096:	e883 0003 	stmia.w	r3, {r0, r1}
 801c09a:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c09e:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 801c0a2:	4a53      	ldr	r2, [pc, #332]	; (801c1f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6b4>)
 801c0a4:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c0a8:	f7f9 f8ae 	bl	8015208 <LOGGER_PrintLine>
 801c0ac:	f009 fd88 	bl	8025bc0 <15dfb4a8f71a3c92937ea9475d964fb266f362bf>
 801c0b0:	e19e      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c0b2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c0b6:	2203      	movs	r2, #3
 801c0b8:	735a      	strb	r2, [r3, #13]
 801c0ba:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c0be:	2200      	movs	r2, #0
 801c0c0:	731a      	strb	r2, [r3, #12]
 801c0c2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c0c6:	2200      	movs	r2, #0
 801c0c8:	705a      	strb	r2, [r3, #1]
 801c0ca:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c0ce:	2200      	movs	r2, #0
 801c0d0:	709a      	strb	r2, [r3, #2]
 801c0d2:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c0d6:	2200      	movs	r2, #0
 801c0d8:	70da      	strb	r2, [r3, #3]
 801c0da:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c0de:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 801c0e2:	4a3d      	ldr	r2, [pc, #244]	; (801c1d8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x69c>)
 801c0e4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c0e8:	e883 0003 	stmia.w	r3, {r0, r1}
 801c0ec:	f8d7 0158 	ldr.w	r0, [r7, #344]	; 0x158
 801c0f0:	f7ff f846 	bl	801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>
 801c0f4:	4602      	mov	r2, r0
 801c0f6:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c0fa:	f5a3 7196 	sub.w	r1, r3, #300	; 0x12c
 801c0fe:	4613      	mov	r3, r2
 801c100:	4a39      	ldr	r2, [pc, #228]	; (801c1e8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6ac>)
 801c102:	c903      	ldmia	r1, {r0, r1}
 801c104:	f7f9 f880 	bl	8015208 <LOGGER_PrintLine>
 801c108:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c10c:	7b5b      	ldrb	r3, [r3, #13]
 801c10e:	2b03      	cmp	r3, #3
 801c110:	d120      	bne.n	801c154 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x618>
 801c112:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c116:	2204      	movs	r2, #4
 801c118:	735a      	strb	r2, [r3, #13]
 801c11a:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c11e:	2200      	movs	r2, #0
 801c120:	731a      	strb	r2, [r3, #12]
 801c122:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c126:	f5a3 739a 	sub.w	r3, r3, #308	; 0x134
 801c12a:	4a2b      	ldr	r2, [pc, #172]	; (801c1d8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x69c>)
 801c12c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c130:	e883 0003 	stmia.w	r3, {r0, r1}
 801c134:	f8d7 0158 	ldr.w	r0, [r7, #344]	; 0x158
 801c138:	f7ff f822 	bl	801b180 <15dba1c7fc73543b1601dd226b614c09581a3c00>
 801c13c:	4602      	mov	r2, r0
 801c13e:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c142:	f5a3 719a 	sub.w	r1, r3, #308	; 0x134
 801c146:	4613      	mov	r3, r2
 801c148:	4a27      	ldr	r2, [pc, #156]	; (801c1e8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6ac>)
 801c14a:	c903      	ldmia	r1, {r0, r1}
 801c14c:	f7f9 f85c 	bl	8015208 <LOGGER_PrintLine>
 801c150:	f009 fccc 	bl	8025aec <85bee7284ee25f7a29b50481cf48923ac2abd69d>
 801c154:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c158:	7b5b      	ldrb	r3, [r3, #13]
 801c15a:	2b04      	cmp	r3, #4
 801c15c:	f040 8148 	bne.w	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c160:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c164:	4618      	mov	r0, r3
 801c166:	f001 f88f 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801c16a:	4603      	mov	r3, r0
 801c16c:	2b00      	cmp	r3, #0
 801c16e:	f000 8135 	beq.w	801c3dc <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8a0>
 801c172:	2300      	movs	r3, #0
 801c174:	f887 315f 	strb.w	r3, [r7, #351]	; 0x15f
 801c178:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c17c:	f993 3003 	ldrsb.w	r3, [r3, #3]
 801c180:	2b00      	cmp	r3, #0
 801c182:	dd39      	ble.n	801c1f8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6bc>
 801c184:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c188:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 801c18c:	4a12      	ldr	r2, [pc, #72]	; (801c1d8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x69c>)
 801c18e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c192:	e883 0003 	stmia.w	r3, {r0, r1}
 801c196:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c19a:	f5a3 739e 	sub.w	r3, r3, #316	; 0x13c
 801c19e:	4a15      	ldr	r2, [pc, #84]	; (801c1f4 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x6b8>)
 801c1a0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c1a4:	f7f9 f830 	bl	8015208 <LOGGER_PrintLine>
 801c1a8:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c1ac:	f993 3003 	ldrsb.w	r3, [r3, #3]
 801c1b0:	b2db      	uxtb	r3, r3
 801c1b2:	3b01      	subs	r3, #1
 801c1b4:	b2db      	uxtb	r3, r3
 801c1b6:	b25a      	sxtb	r2, r3
 801c1b8:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c1bc:	70da      	strb	r2, [r3, #3]
 801c1be:	2301      	movs	r3, #1
 801c1c0:	f887 315f 	strb.w	r3, [r7, #351]	; 0x15f
 801c1c4:	f897 20eb 	ldrb.w	r2, [r7, #235]	; 0xeb
 801c1c8:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c1cc:	4611      	mov	r1, r2
 801c1ce:	4618      	mov	r0, r3
 801c1d0:	f7ff face 	bl	801b770 <857de3c8f5260b81d9c8f1309c962f70e86f8d45>
 801c1d4:	e059      	b.n	801c28a <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x74e>
 801c1d6:	bf00      	nop
 801c1d8:	0802fd1c 	.word	0x0802fd1c
 801c1dc:	0802fe44 	.word	0x0802fe44
 801c1e0:	0802fd54 	.word	0x0802fd54
 801c1e4:	0802fe78 	.word	0x0802fe78
 801c1e8:	0802fd98 	.word	0x0802fd98
 801c1ec:	0802ff10 	.word	0x0802ff10
 801c1f0:	0802fea0 	.word	0x0802fea0
 801c1f4:	0802fec0 	.word	0x0802fec0
 801c1f8:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c1fc:	f993 3003 	ldrsb.w	r3, [r3, #3]
 801c200:	2b00      	cmp	r3, #0
 801c202:	da42      	bge.n	801c28a <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x74e>
 801c204:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c208:	4618      	mov	r0, r3
 801c20a:	f001 f83d 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801c20e:	4603      	mov	r3, r0
 801c210:	f887 3156 	strb.w	r3, [r7, #342]	; 0x156
 801c214:	f897 3156 	ldrb.w	r3, [r7, #342]	; 0x156
 801c218:	2b01      	cmp	r3, #1
 801c21a:	d932      	bls.n	801c282 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x746>
 801c21c:	f897 4156 	ldrb.w	r4, [r7, #342]	; 0x156
 801c220:	2000      	movs	r0, #0
 801c222:	f001 f87b 	bl	801d31c <ee504f8deafedb03386eec1c989207132bd15110>
 801c226:	4603      	mov	r3, r0
 801c228:	3b01      	subs	r3, #1
 801c22a:	085b      	lsrs	r3, r3, #1
 801c22c:	429c      	cmp	r4, r3
 801c22e:	d928      	bls.n	801c282 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x746>
 801c230:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c234:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 801c238:	4a6f      	ldr	r2, [pc, #444]	; (801c3f8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8bc>)
 801c23a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c23e:	e883 0003 	stmia.w	r3, {r0, r1}
 801c242:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801c246:	f5a3 73a2 	sub.w	r3, r3, #324	; 0x144
 801c24a:	4a6c      	ldr	r2, [pc, #432]	; (801c3fc <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8c0>)
 801c24c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c250:	f7f8 ffda 	bl	8015208 <LOGGER_PrintLine>
 801c254:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c258:	f993 3003 	ldrsb.w	r3, [r3, #3]
 801c25c:	b2db      	uxtb	r3, r3
 801c25e:	3301      	adds	r3, #1
 801c260:	b2db      	uxtb	r3, r3
 801c262:	b25a      	sxtb	r2, r3
 801c264:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c268:	70da      	strb	r2, [r3, #3]
 801c26a:	2301      	movs	r3, #1
 801c26c:	f887 315f 	strb.w	r3, [r7, #351]	; 0x15f
 801c270:	f897 20eb 	ldrb.w	r2, [r7, #235]	; 0xeb
 801c274:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801c278:	4611      	mov	r1, r2
 801c27a:	4618      	mov	r0, r3
 801c27c:	f7ff faab 	bl	801b7d6 <trigger6pDelete>
 801c280:	e003      	b.n	801c28a <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x74e>
 801c282:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c286:	2200      	movs	r2, #0
 801c288:	70da      	strb	r2, [r3, #3]
 801c28a:	f897 315f 	ldrb.w	r3, [r7, #351]	; 0x15f
 801c28e:	f083 0301 	eor.w	r3, r3, #1
 801c292:	b2db      	uxtb	r3, r3
 801c294:	2b00      	cmp	r3, #0
 801c296:	f000 80ab 	beq.w	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c29a:	f107 02d8 	add.w	r2, r7, #216	; 0xd8
 801c29e:	f507 7388 	add.w	r3, r7, #272	; 0x110
 801c2a2:	4611      	mov	r1, r2
 801c2a4:	4618      	mov	r0, r3
 801c2a6:	f001 fcdb 	bl	801dc60 <e1a4ca54296e83210dff3006a7ef95c89a4943bb>
 801c2aa:	4603      	mov	r3, r0
 801c2ac:	2b00      	cmp	r3, #0
 801c2ae:	f000 809f 	beq.w	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c2b2:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 801c2b6:	2219      	movs	r2, #25
 801c2b8:	2100      	movs	r1, #0
 801c2ba:	4618      	mov	r0, r3
 801c2bc:	f00e ff1c 	bl	802b0f8 <memset>
 801c2c0:	2300      	movs	r3, #0
 801c2c2:	f887 315e 	strb.w	r3, [r7, #350]	; 0x15e
 801c2c6:	e06e      	b.n	801c3a6 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x86a>
 801c2c8:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c2cc:	4613      	mov	r3, r2
 801c2ce:	009b      	lsls	r3, r3, #2
 801c2d0:	4413      	add	r3, r2
 801c2d2:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c2d6:	443b      	add	r3, r7
 801c2d8:	3b58      	subs	r3, #88	; 0x58
 801c2da:	781b      	ldrb	r3, [r3, #0]
 801c2dc:	2b00      	cmp	r3, #0
 801c2de:	d05d      	beq.n	801c39c <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x860>
 801c2e0:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c2e4:	4613      	mov	r3, r2
 801c2e6:	009b      	lsls	r3, r3, #2
 801c2e8:	4413      	add	r3, r2
 801c2ea:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c2ee:	443b      	add	r3, r7
 801c2f0:	3b3c      	subs	r3, #60	; 0x3c
 801c2f2:	2201      	movs	r2, #1
 801c2f4:	701a      	strb	r2, [r3, #0]
 801c2f6:	f000 f8ed 	bl	801c4d4 <getRandomChannelOffset>
 801c2fa:	4603      	mov	r3, r0
 801c2fc:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c300:	4619      	mov	r1, r3
 801c302:	4613      	mov	r3, r2
 801c304:	009b      	lsls	r3, r3, #2
 801c306:	4413      	add	r3, r2
 801c308:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c30c:	443b      	add	r3, r7
 801c30e:	3b3c      	subs	r3, #60	; 0x3c
 801c310:	460a      	mov	r2, r1
 801c312:	f8a3 2003 	strh.w	r2, [r3, #3]
 801c316:	e00f      	b.n	801c338 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x7fc>
 801c318:	f000 f8dc 	bl	801c4d4 <getRandomChannelOffset>
 801c31c:	4603      	mov	r3, r0
 801c31e:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c322:	4619      	mov	r1, r3
 801c324:	4613      	mov	r3, r2
 801c326:	009b      	lsls	r3, r3, #2
 801c328:	4413      	add	r3, r2
 801c32a:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c32e:	443b      	add	r3, r7
 801c330:	3b3c      	subs	r3, #60	; 0x3c
 801c332:	460a      	mov	r2, r1
 801c334:	f8a3 2003 	strh.w	r2, [r3, #3]
 801c338:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c33c:	4613      	mov	r3, r2
 801c33e:	009b      	lsls	r3, r3, #2
 801c340:	4413      	add	r3, r2
 801c342:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c346:	443b      	add	r3, r7
 801c348:	3b3c      	subs	r3, #60	; 0x3c
 801c34a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801c34e:	b299      	uxth	r1, r3
 801c350:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c354:	4613      	mov	r3, r2
 801c356:	009b      	lsls	r3, r3, #2
 801c358:	4413      	add	r3, r2
 801c35a:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c35e:	443b      	add	r3, r7
 801c360:	3b58      	subs	r3, #88	; 0x58
 801c362:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801c366:	b29b      	uxth	r3, r3
 801c368:	4299      	cmp	r1, r3
 801c36a:	d0d5      	beq.n	801c318 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x7dc>
 801c36c:	f897 115e 	ldrb.w	r1, [r7, #350]	; 0x15e
 801c370:	f897 215e 	ldrb.w	r2, [r7, #350]	; 0x15e
 801c374:	460b      	mov	r3, r1
 801c376:	009b      	lsls	r3, r3, #2
 801c378:	440b      	add	r3, r1
 801c37a:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c37e:	443b      	add	r3, r7
 801c380:	3b58      	subs	r3, #88	; 0x58
 801c382:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801c386:	b299      	uxth	r1, r3
 801c388:	4613      	mov	r3, r2
 801c38a:	009b      	lsls	r3, r3, #2
 801c38c:	4413      	add	r3, r2
 801c38e:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 801c392:	443b      	add	r3, r7
 801c394:	3b3c      	subs	r3, #60	; 0x3c
 801c396:	460a      	mov	r2, r1
 801c398:	f8a3 2001 	strh.w	r2, [r3, #1]
 801c39c:	f897 315e 	ldrb.w	r3, [r7, #350]	; 0x15e
 801c3a0:	3301      	adds	r3, #1
 801c3a2:	f887 315e 	strb.w	r3, [r7, #350]	; 0x15e
 801c3a6:	f897 315e 	ldrb.w	r3, [r7, #350]	; 0x15e
 801c3aa:	2b04      	cmp	r3, #4
 801c3ac:	d98c      	bls.n	801c2c8 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x78c>
 801c3ae:	2301      	movs	r3, #1
 801c3b0:	f887 315f 	strb.w	r3, [r7, #351]	; 0x15f
 801c3b4:	f107 01d8 	add.w	r1, r7, #216	; 0xd8
 801c3b8:	2300      	movs	r3, #0
 801c3ba:	9304      	str	r3, [sp, #16]
 801c3bc:	2300      	movs	r3, #0
 801c3be:	9303      	str	r3, [sp, #12]
 801c3c0:	2300      	movs	r3, #0
 801c3c2:	9302      	str	r3, [sp, #8]
 801c3c4:	f507 7388 	add.w	r3, r7, #272	; 0x110
 801c3c8:	9301      	str	r3, [sp, #4]
 801c3ca:	f507 7396 	add.w	r3, r7, #300	; 0x12c
 801c3ce:	9300      	str	r3, [sp, #0]
 801c3d0:	2301      	movs	r3, #1
 801c3d2:	2201      	movs	r2, #1
 801c3d4:	2003      	movs	r0, #3
 801c3d6:	f001 ffdf 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801c3da:	e009      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c3dc:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c3e0:	2202      	movs	r2, #2
 801c3e2:	735a      	strb	r2, [r3, #13]
 801c3e4:	f8d7 3158 	ldr.w	r3, [r7, #344]	; 0x158
 801c3e8:	2200      	movs	r2, #0
 801c3ea:	731a      	strb	r2, [r3, #12]
 801c3ec:	e000      	b.n	801c3f0 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x8b4>
 801c3ee:	bf00      	nop
 801c3f0:	f507 77b4 	add.w	r7, r7, #360	; 0x168
 801c3f4:	46bd      	mov	sp, r7
 801c3f6:	bdb0      	pop	{r4, r5, r7, pc}
 801c3f8:	0802fd1c 	.word	0x0802fd1c
 801c3fc:	0802fee8 	.word	0x0802fee8

0801c400 <73cbc6b3efc5bccd854bcb41733d9be650914b6e>:
 801c400:	b580      	push	{r7, lr}
 801c402:	b086      	sub	sp, #24
 801c404:	af00      	add	r7, sp, #0
 801c406:	6078      	str	r0, [r7, #4]
 801c408:	6039      	str	r1, [r7, #0]
 801c40a:	687b      	ldr	r3, [r7, #4]
 801c40c:	1d99      	adds	r1, r3, #6
 801c40e:	f107 030e 	add.w	r3, r7, #14
 801c412:	2202      	movs	r2, #2
 801c414:	4618      	mov	r0, r3
 801c416:	f7fe fe8b 	bl	801b130 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801c41a:	2300      	movs	r3, #0
 801c41c:	617b      	str	r3, [r7, #20]
 801c41e:	e04c      	b.n	801c4ba <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xba>
 801c420:	89fb      	ldrh	r3, [r7, #14]
 801c422:	461a      	mov	r2, r3
 801c424:	4b29      	ldr	r3, [pc, #164]	; (801c4cc <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xcc>)
 801c426:	681b      	ldr	r3, [r3, #0]
 801c428:	fbb2 f1f3 	udiv	r1, r2, r3
 801c42c:	fb01 f303 	mul.w	r3, r1, r3
 801c430:	1ad3      	subs	r3, r2, r3
 801c432:	b2d9      	uxtb	r1, r3
 801c434:	683a      	ldr	r2, [r7, #0]
 801c436:	697b      	ldr	r3, [r7, #20]
 801c438:	4413      	add	r3, r2
 801c43a:	3302      	adds	r3, #2
 801c43c:	460a      	mov	r2, r1
 801c43e:	701a      	strb	r2, [r3, #0]
 801c440:	89fa      	ldrh	r2, [r7, #14]
 801c442:	4b23      	ldr	r3, [pc, #140]	; (801c4d0 <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xd0>)
 801c444:	fba3 1302 	umull	r1, r3, r3, r2
 801c448:	08d9      	lsrs	r1, r3, #3
 801c44a:	460b      	mov	r3, r1
 801c44c:	005b      	lsls	r3, r3, #1
 801c44e:	440b      	add	r3, r1
 801c450:	009b      	lsls	r3, r3, #2
 801c452:	1ad3      	subs	r3, r2, r3
 801c454:	b29b      	uxth	r3, r3
 801c456:	3301      	adds	r3, #1
 801c458:	b299      	uxth	r1, r3
 801c45a:	683b      	ldr	r3, [r7, #0]
 801c45c:	697a      	ldr	r2, [r7, #20]
 801c45e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 801c462:	683a      	ldr	r2, [r7, #0]
 801c464:	697b      	ldr	r3, [r7, #20]
 801c466:	4413      	add	r3, r2
 801c468:	3302      	adds	r3, #2
 801c46a:	781b      	ldrb	r3, [r3, #0]
 801c46c:	461a      	mov	r2, r3
 801c46e:	89fb      	ldrh	r3, [r7, #14]
 801c470:	4413      	add	r3, r2
 801c472:	b29b      	uxth	r3, r3
 801c474:	81fb      	strh	r3, [r7, #14]
 801c476:	89fb      	ldrh	r3, [r7, #14]
 801c478:	3301      	adds	r3, #1
 801c47a:	b29b      	uxth	r3, r3
 801c47c:	81fb      	strh	r3, [r7, #14]
 801c47e:	697b      	ldr	r3, [r7, #20]
 801c480:	2b00      	cmp	r3, #0
 801c482:	d017      	beq.n	801c4b4 <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xb4>
 801c484:	2300      	movs	r3, #0
 801c486:	613b      	str	r3, [r7, #16]
 801c488:	e010      	b.n	801c4ac <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xac>
 801c48a:	683b      	ldr	r3, [r7, #0]
 801c48c:	697a      	ldr	r2, [r7, #20]
 801c48e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801c492:	683b      	ldr	r3, [r7, #0]
 801c494:	6939      	ldr	r1, [r7, #16]
 801c496:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
 801c49a:	429a      	cmp	r2, r3
 801c49c:	d103      	bne.n	801c4a6 <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xa6>
 801c49e:	697b      	ldr	r3, [r7, #20]
 801c4a0:	3b01      	subs	r3, #1
 801c4a2:	617b      	str	r3, [r7, #20]
 801c4a4:	e006      	b.n	801c4b4 <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0xb4>
 801c4a6:	693b      	ldr	r3, [r7, #16]
 801c4a8:	3301      	adds	r3, #1
 801c4aa:	613b      	str	r3, [r7, #16]
 801c4ac:	693a      	ldr	r2, [r7, #16]
 801c4ae:	697b      	ldr	r3, [r7, #20]
 801c4b0:	429a      	cmp	r2, r3
 801c4b2:	d3ea      	bcc.n	801c48a <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0x8a>
 801c4b4:	697b      	ldr	r3, [r7, #20]
 801c4b6:	3301      	adds	r3, #1
 801c4b8:	617b      	str	r3, [r7, #20]
 801c4ba:	697b      	ldr	r3, [r7, #20]
 801c4bc:	2b00      	cmp	r3, #0
 801c4be:	d0af      	beq.n	801c420 <73cbc6b3efc5bccd854bcb41733d9be650914b6e+0x20>
 801c4c0:	bf00      	nop
 801c4c2:	bf00      	nop
 801c4c4:	3718      	adds	r7, #24
 801c4c6:	46bd      	mov	sp, r7
 801c4c8:	bd80      	pop	{r7, pc}
 801c4ca:	bf00      	nop
 801c4cc:	080318cc 	.word	0x080318cc
 801c4d0:	aaaaaaab 	.word	0xaaaaaaab

0801c4d4 <getRandomChannelOffset>:
 801c4d4:	b580      	push	{r7, lr}
 801c4d6:	af00      	add	r7, sp, #0
 801c4d8:	f7f5 fcbe 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801c4dc:	4603      	mov	r3, r0
 801c4de:	461a      	mov	r2, r3
 801c4e0:	4b04      	ldr	r3, [pc, #16]	; (801c4f4 <getRandomChannelOffset+0x20>)
 801c4e2:	681b      	ldr	r3, [r3, #0]
 801c4e4:	fbb2 f1f3 	udiv	r1, r2, r3
 801c4e8:	fb01 f303 	mul.w	r3, r1, r3
 801c4ec:	1ad3      	subs	r3, r2, r3
 801c4ee:	b2db      	uxtb	r3, r3
 801c4f0:	4618      	mov	r0, r3
 801c4f2:	bd80      	pop	{r7, pc}
 801c4f4:	080318cc 	.word	0x080318cc

0801c4f8 <getRandomSlotOffsetFromAvailableRange>:
 801c4f8:	b580      	push	{r7, lr}
 801c4fa:	b08a      	sub	sp, #40	; 0x28
 801c4fc:	af00      	add	r7, sp, #0
 801c4fe:	4603      	mov	r3, r0
 801c500:	60b9      	str	r1, [r7, #8]
 801c502:	607a      	str	r2, [r7, #4]
 801c504:	81fb      	strh	r3, [r7, #14]
 801c506:	f7f5 fca7 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801c50a:	4603      	mov	r3, r0
 801c50c:	461a      	mov	r2, r3
 801c50e:	89fb      	ldrh	r3, [r7, #14]
 801c510:	fbb2 f1f3 	udiv	r1, r2, r3
 801c514:	fb01 f303 	mul.w	r3, r1, r3
 801c518:	1ad3      	subs	r3, r2, r3
 801c51a:	827b      	strh	r3, [r7, #18]
 801c51c:	2300      	movs	r3, #0
 801c51e:	627b      	str	r3, [r7, #36]	; 0x24
 801c520:	2300      	movs	r3, #0
 801c522:	623b      	str	r3, [r7, #32]
 801c524:	e00e      	b.n	801c544 <getRandomSlotOffsetFromAvailableRange+0x4c>
 801c526:	6a3b      	ldr	r3, [r7, #32]
 801c528:	005b      	lsls	r3, r3, #1
 801c52a:	68ba      	ldr	r2, [r7, #8]
 801c52c:	4413      	add	r3, r2
 801c52e:	881b      	ldrh	r3, [r3, #0]
 801c530:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c534:	4293      	cmp	r3, r2
 801c536:	d002      	beq.n	801c53e <getRandomSlotOffsetFromAvailableRange+0x46>
 801c538:	6a3b      	ldr	r3, [r7, #32]
 801c53a:	627b      	str	r3, [r7, #36]	; 0x24
 801c53c:	e006      	b.n	801c54c <getRandomSlotOffsetFromAvailableRange+0x54>
 801c53e:	6a3b      	ldr	r3, [r7, #32]
 801c540:	3301      	adds	r3, #1
 801c542:	623b      	str	r3, [r7, #32]
 801c544:	6a3a      	ldr	r2, [r7, #32]
 801c546:	687b      	ldr	r3, [r7, #4]
 801c548:	429a      	cmp	r2, r3
 801c54a:	d3ec      	bcc.n	801c526 <getRandomSlotOffsetFromAvailableRange+0x2e>
 801c54c:	8a7b      	ldrh	r3, [r7, #18]
 801c54e:	2b00      	cmp	r3, #0
 801c550:	d10e      	bne.n	801c570 <getRandomSlotOffsetFromAvailableRange+0x78>
 801c552:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c554:	005b      	lsls	r3, r3, #1
 801c556:	68ba      	ldr	r2, [r7, #8]
 801c558:	4413      	add	r3, r2
 801c55a:	881b      	ldrh	r3, [r3, #0]
 801c55c:	823b      	strh	r3, [r7, #16]
 801c55e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c560:	005b      	lsls	r3, r3, #1
 801c562:	68ba      	ldr	r2, [r7, #8]
 801c564:	4413      	add	r3, r2
 801c566:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c56a:	801a      	strh	r2, [r3, #0]
 801c56c:	8a3b      	ldrh	r3, [r7, #16]
 801c56e:	e042      	b.n	801c5f6 <getRandomSlotOffsetFromAvailableRange+0xfe>
 801c570:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801c572:	61fb      	str	r3, [r7, #28]
 801c574:	2300      	movs	r3, #0
 801c576:	61bb      	str	r3, [r7, #24]
 801c578:	e02b      	b.n	801c5d2 <getRandomSlotOffsetFromAvailableRange+0xda>
 801c57a:	2301      	movs	r3, #1
 801c57c:	617b      	str	r3, [r7, #20]
 801c57e:	e021      	b.n	801c5c4 <getRandomSlotOffsetFromAvailableRange+0xcc>
 801c580:	697a      	ldr	r2, [r7, #20]
 801c582:	69fb      	ldr	r3, [r7, #28]
 801c584:	4413      	add	r3, r2
 801c586:	687a      	ldr	r2, [r7, #4]
 801c588:	fbb3 f2f2 	udiv	r2, r3, r2
 801c58c:	6879      	ldr	r1, [r7, #4]
 801c58e:	fb01 f202 	mul.w	r2, r1, r2
 801c592:	1a9b      	subs	r3, r3, r2
 801c594:	005b      	lsls	r3, r3, #1
 801c596:	68ba      	ldr	r2, [r7, #8]
 801c598:	4413      	add	r3, r2
 801c59a:	881b      	ldrh	r3, [r3, #0]
 801c59c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c5a0:	4293      	cmp	r3, r2
 801c5a2:	d00c      	beq.n	801c5be <getRandomSlotOffsetFromAvailableRange+0xc6>
 801c5a4:	697a      	ldr	r2, [r7, #20]
 801c5a6:	69fb      	ldr	r3, [r7, #28]
 801c5a8:	4413      	add	r3, r2
 801c5aa:	687a      	ldr	r2, [r7, #4]
 801c5ac:	fbb3 f2f2 	udiv	r2, r3, r2
 801c5b0:	6879      	ldr	r1, [r7, #4]
 801c5b2:	fb01 f202 	mul.w	r2, r1, r2
 801c5b6:	1a9b      	subs	r3, r3, r2
 801c5b8:	b29b      	uxth	r3, r3
 801c5ba:	61fb      	str	r3, [r7, #28]
 801c5bc:	e006      	b.n	801c5cc <getRandomSlotOffsetFromAvailableRange+0xd4>
 801c5be:	697b      	ldr	r3, [r7, #20]
 801c5c0:	3301      	adds	r3, #1
 801c5c2:	617b      	str	r3, [r7, #20]
 801c5c4:	697a      	ldr	r2, [r7, #20]
 801c5c6:	687b      	ldr	r3, [r7, #4]
 801c5c8:	429a      	cmp	r2, r3
 801c5ca:	d3d9      	bcc.n	801c580 <getRandomSlotOffsetFromAvailableRange+0x88>
 801c5cc:	69bb      	ldr	r3, [r7, #24]
 801c5ce:	3301      	adds	r3, #1
 801c5d0:	61bb      	str	r3, [r7, #24]
 801c5d2:	8a7b      	ldrh	r3, [r7, #18]
 801c5d4:	69ba      	ldr	r2, [r7, #24]
 801c5d6:	429a      	cmp	r2, r3
 801c5d8:	d3cf      	bcc.n	801c57a <getRandomSlotOffsetFromAvailableRange+0x82>
 801c5da:	69fb      	ldr	r3, [r7, #28]
 801c5dc:	005b      	lsls	r3, r3, #1
 801c5de:	68ba      	ldr	r2, [r7, #8]
 801c5e0:	4413      	add	r3, r2
 801c5e2:	881b      	ldrh	r3, [r3, #0]
 801c5e4:	823b      	strh	r3, [r7, #16]
 801c5e6:	69fb      	ldr	r3, [r7, #28]
 801c5e8:	005b      	lsls	r3, r3, #1
 801c5ea:	68ba      	ldr	r2, [r7, #8]
 801c5ec:	4413      	add	r3, r2
 801c5ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801c5f2:	801a      	strh	r2, [r3, #0]
 801c5f4:	8a3b      	ldrh	r3, [r7, #16]
 801c5f6:	4618      	mov	r0, r3
 801c5f8:	3728      	adds	r7, #40	; 0x28
 801c5fa:	46bd      	mov	sp, r7
 801c5fc:	bd80      	pop	{r7, pc}

0801c5fe <ea0b8bb8dfe469dd0c00b9aeff09f3d664539527>:
 801c5fe:	b580      	push	{r7, lr}
 801c600:	b08a      	sub	sp, #40	; 0x28
 801c602:	af06      	add	r7, sp, #24
 801c604:	6078      	str	r0, [r7, #4]
 801c606:	687b      	ldr	r3, [r7, #4]
 801c608:	60fb      	str	r3, [r7, #12]
 801c60a:	68fb      	ldr	r3, [r7, #12]
 801c60c:	f103 010e 	add.w	r1, r3, #14
 801c610:	2300      	movs	r3, #0
 801c612:	9304      	str	r3, [sp, #16]
 801c614:	2300      	movs	r3, #0
 801c616:	9303      	str	r3, [sp, #12]
 801c618:	2300      	movs	r3, #0
 801c61a:	9302      	str	r3, [sp, #8]
 801c61c:	2300      	movs	r3, #0
 801c61e:	9301      	str	r3, [sp, #4]
 801c620:	2300      	movs	r3, #0
 801c622:	9300      	str	r3, [sp, #0]
 801c624:	2301      	movs	r3, #1
 801c626:	2201      	movs	r2, #1
 801c628:	2007      	movs	r0, #7
 801c62a:	f001 feb5 	bl	801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>
 801c62e:	bf00      	nop
 801c630:	3710      	adds	r7, #16
 801c632:	46bd      	mov	sp, r7
 801c634:	bd80      	pop	{r7, pc}
	...

0801c638 <wipeOutUnusedCells>:
 801c638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c63c:	b09b      	sub	sp, #108	; 0x6c
 801c63e:	af00      	add	r7, sp, #0
 801c640:	f000 f9be 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801c644:	4603      	mov	r3, r0
 801c646:	f8a7 3060 	strh.w	r3, [r7, #96]	; 0x60
 801c64a:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801c64e:	4618      	mov	r0, r3
 801c650:	f7fd f9b2 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801c654:	2300      	movs	r3, #0
 801c656:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
 801c65a:	e0a0      	b.n	801c79e <wipeOutUnusedCells+0x166>
 801c65c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801c660:	f8b7 2066 	ldrh.w	r2, [r7, #102]	; 0x66
 801c664:	4611      	mov	r1, r2
 801c666:	4618      	mov	r0, r3
 801c668:	f000 fcf6 	bl	801d058 <SCHEDULE_GetCellInfo>
 801c66c:	f897 304a 	ldrb.w	r3, [r7, #74]	; 0x4a
 801c670:	2b05      	cmp	r3, #5
 801c672:	f040 808f 	bne.w	801c794 <wipeOutUnusedCells+0x15c>
 801c676:	6db8      	ldr	r0, [r7, #88]	; 0x58
 801c678:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 801c67c:	4619      	mov	r1, r3
 801c67e:	f8d7 204f 	ldr.w	r2, [r7, #79]	; 0x4f
 801c682:	f897 6053 	ldrb.w	r6, [r7, #83]	; 0x53
 801c686:	4633      	mov	r3, r6
 801c688:	1a84      	subs	r4, r0, r2
 801c68a:	eb61 0503 	sbc.w	r5, r1, r3
 801c68e:	46a2      	mov	sl, r4
 801c690:	f005 0bff 	and.w	fp, r5, #255	; 0xff
 801c694:	4654      	mov	r4, sl
 801c696:	465d      	mov	r5, fp
 801c698:	f243 23c9 	movw	r3, #13001	; 0x32c9
 801c69c:	429c      	cmp	r4, r3
 801c69e:	f175 0300 	sbcs.w	r3, r5, #0
 801c6a2:	d377      	bcc.n	801c794 <wipeOutUnusedCells+0x15c>
 801c6a4:	2301      	movs	r3, #1
 801c6a6:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 801c6aa:	f8b7 3066 	ldrh.w	r3, [r7, #102]	; 0x66
 801c6ae:	3301      	adds	r3, #1
 801c6b0:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
 801c6b4:	e038      	b.n	801c728 <wipeOutUnusedCells+0xf0>
 801c6b6:	f107 0318 	add.w	r3, r7, #24
 801c6ba:	f8b7 2062 	ldrh.w	r2, [r7, #98]	; 0x62
 801c6be:	4611      	mov	r1, r2
 801c6c0:	4618      	mov	r0, r3
 801c6c2:	f000 fcc9 	bl	801d058 <SCHEDULE_GetCellInfo>
 801c6c6:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 801c6ca:	2b05      	cmp	r3, #5
 801c6cc:	d127      	bne.n	801c71e <wipeOutUnusedCells+0xe6>
 801c6ce:	f107 0218 	add.w	r2, r7, #24
 801c6d2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801c6d6:	4611      	mov	r1, r2
 801c6d8:	4618      	mov	r0, r3
 801c6da:	f7f2 fe27 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801c6de:	4603      	mov	r3, r0
 801c6e0:	2b00      	cmp	r3, #0
 801c6e2:	d01c      	beq.n	801c71e <wipeOutUnusedCells+0xe6>
 801c6e4:	6db8      	ldr	r0, [r7, #88]	; 0x58
 801c6e6:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 801c6ea:	4619      	mov	r1, r3
 801c6ec:	f8d7 202f 	ldr.w	r2, [r7, #47]	; 0x2f
 801c6f0:	f897 6033 	ldrb.w	r6, [r7, #51]	; 0x33
 801c6f4:	4633      	mov	r3, r6
 801c6f6:	ebb0 0802 	subs.w	r8, r0, r2
 801c6fa:	eb61 0903 	sbc.w	r9, r1, r3
 801c6fe:	f8c7 8000 	str.w	r8, [r7]
 801c702:	f009 03ff 	and.w	r3, r9, #255	; 0xff
 801c706:	607b      	str	r3, [r7, #4]
 801c708:	e9d7 8900 	ldrd	r8, r9, [r7]
 801c70c:	f243 23c8 	movw	r3, #13000	; 0x32c8
 801c710:	4598      	cmp	r8, r3
 801c712:	f179 0300 	sbcs.w	r3, r9, #0
 801c716:	d202      	bcs.n	801c71e <wipeOutUnusedCells+0xe6>
 801c718:	2300      	movs	r3, #0
 801c71a:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 801c71e:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 801c722:	3301      	adds	r3, #1
 801c724:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
 801c728:	f8b7 2062 	ldrh.w	r2, [r7, #98]	; 0x62
 801c72c:	f8b7 3060 	ldrh.w	r3, [r7, #96]	; 0x60
 801c730:	429a      	cmp	r2, r3
 801c732:	d3c0      	bcc.n	801c6b6 <wipeOutUnusedCells+0x7e>
 801c734:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 801c738:	2b00      	cmp	r3, #0
 801c73a:	d02b      	beq.n	801c794 <wipeOutUnusedCells+0x15c>
 801c73c:	f107 0238 	add.w	r2, r7, #56	; 0x38
 801c740:	f8b7 3066 	ldrh.w	r3, [r7, #102]	; 0x66
 801c744:	4611      	mov	r1, r2
 801c746:	4618      	mov	r0, r3
 801c748:	f000 fb4c 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801c74c:	f7f8 fda6 	bl	801529c <LOGGER_StartSection>
 801c750:	4603      	mov	r3, r0
 801c752:	2b00      	cmp	r3, #0
 801c754:	d01e      	beq.n	801c794 <wipeOutUnusedCells+0x15c>
 801c756:	4a18      	ldr	r2, [pc, #96]	; (801c7b8 <wipeOutUnusedCells+0x180>)
 801c758:	f107 0310 	add.w	r3, r7, #16
 801c75c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801c760:	e883 0003 	stmia.w	r3, {r0, r1}
 801c764:	f107 0310 	add.w	r3, r7, #16
 801c768:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c76c:	f7f8 fdb2 	bl	80152d4 <LOGGER_PrintHeader>
 801c770:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801c774:	1c59      	adds	r1, r3, #1
 801c776:	f107 0308 	add.w	r3, r7, #8
 801c77a:	2208      	movs	r2, #8
 801c77c:	4618      	mov	r0, r3
 801c77e:	f7fe fcd7 	bl	801b130 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801c782:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801c786:	480d      	ldr	r0, [pc, #52]	; (801c7bc <wipeOutUnusedCells+0x184>)
 801c788:	f7f8 fd70 	bl	801526c <LOGGER_Print>
 801c78c:	f7f8 fd2e 	bl	80151ec <LOGGER_PrintNL>
 801c790:	f7f8 fd97 	bl	80152c2 <LOGGER_EndSection>
 801c794:	f8b7 3066 	ldrh.w	r3, [r7, #102]	; 0x66
 801c798:	3301      	adds	r3, #1
 801c79a:	f8a7 3066 	strh.w	r3, [r7, #102]	; 0x66
 801c79e:	f8b7 2066 	ldrh.w	r2, [r7, #102]	; 0x66
 801c7a2:	f8b7 3060 	ldrh.w	r3, [r7, #96]	; 0x60
 801c7a6:	429a      	cmp	r2, r3
 801c7a8:	f4ff af58 	bcc.w	801c65c <wipeOutUnusedCells+0x24>
 801c7ac:	bf00      	nop
 801c7ae:	bf00      	nop
 801c7b0:	376c      	adds	r7, #108	; 0x6c
 801c7b2:	46bd      	mov	sp, r7
 801c7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7b8:	0802ff10 	.word	0x0802ff10
 801c7bc:	0802ff18 	.word	0x0802ff18

0801c7c0 <ENDIANNESS_NativeToLittle>:
 801c7c0:	b580      	push	{r7, lr}
 801c7c2:	b084      	sub	sp, #16
 801c7c4:	af00      	add	r7, sp, #0
 801c7c6:	60f8      	str	r0, [r7, #12]
 801c7c8:	60b9      	str	r1, [r7, #8]
 801c7ca:	607a      	str	r2, [r7, #4]
 801c7cc:	687a      	ldr	r2, [r7, #4]
 801c7ce:	68b9      	ldr	r1, [r7, #8]
 801c7d0:	68f8      	ldr	r0, [r7, #12]
 801c7d2:	f00e fd30 	bl	802b236 <memcpy>
 801c7d6:	bf00      	nop
 801c7d8:	3710      	adds	r7, #16
 801c7da:	46bd      	mov	sp, r7
 801c7dc:	bd80      	pop	{r7, pc}

0801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 801c7de:	b480      	push	{r7}
 801c7e0:	b089      	sub	sp, #36	; 0x24
 801c7e2:	af00      	add	r7, sp, #0
 801c7e4:	60f8      	str	r0, [r7, #12]
 801c7e6:	60b9      	str	r1, [r7, #8]
 801c7e8:	607a      	str	r2, [r7, #4]
 801c7ea:	68fb      	ldr	r3, [r7, #12]
 801c7ec:	61fb      	str	r3, [r7, #28]
 801c7ee:	68bb      	ldr	r3, [r7, #8]
 801c7f0:	61bb      	str	r3, [r7, #24]
 801c7f2:	687b      	ldr	r3, [r7, #4]
 801c7f4:	617b      	str	r3, [r7, #20]
 801c7f6:	2300      	movs	r3, #0
 801c7f8:	613b      	str	r3, [r7, #16]
 801c7fa:	e00d      	b.n	801c818 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 801c7fc:	69ba      	ldr	r2, [r7, #24]
 801c7fe:	693b      	ldr	r3, [r7, #16]
 801c800:	441a      	add	r2, r3
 801c802:	6979      	ldr	r1, [r7, #20]
 801c804:	693b      	ldr	r3, [r7, #16]
 801c806:	1acb      	subs	r3, r1, r3
 801c808:	3b01      	subs	r3, #1
 801c80a:	69f9      	ldr	r1, [r7, #28]
 801c80c:	440b      	add	r3, r1
 801c80e:	7812      	ldrb	r2, [r2, #0]
 801c810:	701a      	strb	r2, [r3, #0]
 801c812:	693b      	ldr	r3, [r7, #16]
 801c814:	3301      	adds	r3, #1
 801c816:	613b      	str	r3, [r7, #16]
 801c818:	697a      	ldr	r2, [r7, #20]
 801c81a:	693b      	ldr	r3, [r7, #16]
 801c81c:	429a      	cmp	r2, r3
 801c81e:	d8ed      	bhi.n	801c7fc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 801c820:	bf00      	nop
 801c822:	bf00      	nop
 801c824:	3724      	adds	r7, #36	; 0x24
 801c826:	46bd      	mov	sp, r7
 801c828:	bc80      	pop	{r7}
 801c82a:	4770      	bx	lr

0801c82c <cellTypeStr>:
 801c82c:	b480      	push	{r7}
 801c82e:	b083      	sub	sp, #12
 801c830:	af00      	add	r7, sp, #0
 801c832:	4603      	mov	r3, r0
 801c834:	71fb      	strb	r3, [r7, #7]
 801c836:	79fb      	ldrb	r3, [r7, #7]
 801c838:	2b04      	cmp	r3, #4
 801c83a:	d804      	bhi.n	801c846 <cellTypeStr+0x1a>
 801c83c:	79fb      	ldrb	r3, [r7, #7]
 801c83e:	4a05      	ldr	r2, [pc, #20]	; (801c854 <cellTypeStr+0x28>)
 801c840:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801c844:	e001      	b.n	801c84a <cellTypeStr+0x1e>
 801c846:	4b03      	ldr	r3, [pc, #12]	; (801c854 <cellTypeStr+0x28>)
 801c848:	695b      	ldr	r3, [r3, #20]
 801c84a:	4618      	mov	r0, r3
 801c84c:	370c      	adds	r7, #12
 801c84e:	46bd      	mov	sp, r7
 801c850:	bc80      	pop	{r7}
 801c852:	4770      	bx	lr
 801c854:	20000244 	.word	0x20000244

0801c858 <cellRoleStr>:
 801c858:	b480      	push	{r7}
 801c85a:	b083      	sub	sp, #12
 801c85c:	af00      	add	r7, sp, #0
 801c85e:	4603      	mov	r3, r0
 801c860:	71fb      	strb	r3, [r7, #7]
 801c862:	79fb      	ldrb	r3, [r7, #7]
 801c864:	2b05      	cmp	r3, #5
 801c866:	d804      	bhi.n	801c872 <cellRoleStr+0x1a>
 801c868:	79fb      	ldrb	r3, [r7, #7]
 801c86a:	4a05      	ldr	r2, [pc, #20]	; (801c880 <cellRoleStr+0x28>)
 801c86c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801c870:	e001      	b.n	801c876 <cellRoleStr+0x1e>
 801c872:	4b03      	ldr	r3, [pc, #12]	; (801c880 <cellRoleStr+0x28>)
 801c874:	699b      	ldr	r3, [r3, #24]
 801c876:	4618      	mov	r0, r3
 801c878:	370c      	adds	r7, #12
 801c87a:	46bd      	mov	sp, r7
 801c87c:	bc80      	pop	{r7}
 801c87e:	4770      	bx	lr
 801c880:	2000025c 	.word	0x2000025c

0801c884 <eea52b91d7a1bb91cb2c756cbb75125f1315d891>:
 801c884:	b580      	push	{r7, lr}
 801c886:	f5ad 7d0c 	sub.w	sp, sp, #560	; 0x230
 801c88a:	af00      	add	r7, sp, #0
 801c88c:	4b1b      	ldr	r3, [pc, #108]	; (801c8fc <eea52b91d7a1bb91cb2c756cbb75125f1315d891+0x78>)
 801c88e:	681b      	ldr	r3, [r3, #0]
 801c890:	f8c7 3228 	str.w	r3, [r7, #552]	; 0x228
 801c894:	f8d7 3228 	ldr.w	r3, [r7, #552]	; 0x228
 801c898:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801c89c:	f8c7 3224 	str.w	r3, [r7, #548]	; 0x224
 801c8a0:	f8d7 3224 	ldr.w	r3, [r7, #548]	; 0x224
 801c8a4:	4618      	mov	r0, r3
 801c8a6:	f44f 7306 	mov.w	r3, #536	; 0x218
 801c8aa:	461a      	mov	r2, r3
 801c8ac:	2100      	movs	r1, #0
 801c8ae:	f00e fc23 	bl	802b0f8 <memset>
 801c8b2:	f8d7 3224 	ldr.w	r3, [r7, #548]	; 0x224
 801c8b6:	220d      	movs	r2, #13
 801c8b8:	f8a3 220c 	strh.w	r2, [r3, #524]	; 0x20c
 801c8bc:	2300      	movs	r3, #0
 801c8be:	f8c7 322c 	str.w	r3, [r7, #556]	; 0x22c
 801c8c2:	e010      	b.n	801c8e6 <eea52b91d7a1bb91cb2c756cbb75125f1315d891+0x62>
 801c8c4:	f8d7 222c 	ldr.w	r2, [r7, #556]	; 0x22c
 801c8c8:	4613      	mov	r3, r2
 801c8ca:	009b      	lsls	r3, r3, #2
 801c8cc:	4413      	add	r3, r2
 801c8ce:	00db      	lsls	r3, r3, #3
 801c8d0:	f8d7 2224 	ldr.w	r2, [r7, #548]	; 0x224
 801c8d4:	4413      	add	r3, r2
 801c8d6:	4618      	mov	r0, r3
 801c8d8:	f001 fc5e 	bl	801e198 <f28a7f5ab7578008c51f3fac008d0f632d1bdb54>
 801c8dc:	f8d7 322c 	ldr.w	r3, [r7, #556]	; 0x22c
 801c8e0:	3301      	adds	r3, #1
 801c8e2:	f8c7 322c 	str.w	r3, [r7, #556]	; 0x22c
 801c8e6:	f8d7 322c 	ldr.w	r3, [r7, #556]	; 0x22c
 801c8ea:	2b0d      	cmp	r3, #13
 801c8ec:	d1ea      	bne.n	801c8c4 <eea52b91d7a1bb91cb2c756cbb75125f1315d891+0x40>
 801c8ee:	bf00      	nop
 801c8f0:	bf00      	nop
 801c8f2:	f507 770c 	add.w	r7, r7, #560	; 0x230
 801c8f6:	46bd      	mov	sp, r7
 801c8f8:	bd80      	pop	{r7, pc}
 801c8fa:	bf00      	nop
 801c8fc:	20000040 	.word	0x20000040

0801c900 <6759635076cb4c933592248ebd293b63832a7e9b>:
 801c900:	b580      	push	{r7, lr}
 801c902:	b084      	sub	sp, #16
 801c904:	af00      	add	r7, sp, #0
 801c906:	463b      	mov	r3, r7
 801c908:	e883 0003 	stmia.w	r3, {r0, r1}
 801c90c:	4b18      	ldr	r3, [pc, #96]	; (801c970 <6759635076cb4c933592248ebd293b63832a7e9b+0x70>)
 801c90e:	681b      	ldr	r3, [r3, #0]
 801c910:	60fb      	str	r3, [r7, #12]
 801c912:	68fb      	ldr	r3, [r7, #12]
 801c914:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801c918:	60bb      	str	r3, [r7, #8]
 801c91a:	f7e9 fb99 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801c91e:	793b      	ldrb	r3, [r7, #4]
 801c920:	2b00      	cmp	r3, #0
 801c922:	d017      	beq.n	801c954 <6759635076cb4c933592248ebd293b63832a7e9b+0x54>
 801c924:	883a      	ldrh	r2, [r7, #0]
 801c926:	68bb      	ldr	r3, [r7, #8]
 801c928:	f8a3 220e 	strh.w	r2, [r3, #526]	; 0x20e
 801c92c:	883b      	ldrh	r3, [r7, #0]
 801c92e:	2b0d      	cmp	r3, #13
 801c930:	d803      	bhi.n	801c93a <6759635076cb4c933592248ebd293b63832a7e9b+0x3a>
 801c932:	883a      	ldrh	r2, [r7, #0]
 801c934:	68bb      	ldr	r3, [r7, #8]
 801c936:	f8a3 220c 	strh.w	r2, [r3, #524]	; 0x20c
 801c93a:	78fa      	ldrb	r2, [r7, #3]
 801c93c:	68bb      	ldr	r3, [r7, #8]
 801c93e:	f883 2211 	strb.w	r2, [r3, #529]	; 0x211
 801c942:	78ba      	ldrb	r2, [r7, #2]
 801c944:	68bb      	ldr	r3, [r7, #8]
 801c946:	f883 2210 	strb.w	r2, [r3, #528]	; 0x210
 801c94a:	68bb      	ldr	r3, [r7, #8]
 801c94c:	2201      	movs	r2, #1
 801c94e:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
 801c952:	e007      	b.n	801c964 <6759635076cb4c933592248ebd293b63832a7e9b+0x64>
 801c954:	68bb      	ldr	r3, [r7, #8]
 801c956:	2200      	movs	r2, #0
 801c958:	f883 2212 	strb.w	r2, [r3, #530]	; 0x212
 801c95c:	68bb      	ldr	r3, [r7, #8]
 801c95e:	220d      	movs	r2, #13
 801c960:	f8a3 220c 	strh.w	r2, [r3, #524]	; 0x20c
 801c964:	f7e9 fb94 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801c968:	bf00      	nop
 801c96a:	3710      	adds	r7, #16
 801c96c:	46bd      	mov	sp, r7
 801c96e:	bd80      	pop	{r7, pc}
 801c970:	20000040 	.word	0x20000040

0801c974 <362182124631b23da2866810d52fbd55ab277bcc>:
 801c974:	b580      	push	{r7, lr}
 801c976:	b086      	sub	sp, #24
 801c978:	af00      	add	r7, sp, #0
 801c97a:	6078      	str	r0, [r7, #4]
 801c97c:	4b0f      	ldr	r3, [pc, #60]	; (801c9bc <362182124631b23da2866810d52fbd55ab277bcc+0x48>)
 801c97e:	681b      	ldr	r3, [r3, #0]
 801c980:	617b      	str	r3, [r7, #20]
 801c982:	697b      	ldr	r3, [r7, #20]
 801c984:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801c988:	613b      	str	r3, [r7, #16]
 801c98a:	f7e9 fb61 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801c98e:	693b      	ldr	r3, [r7, #16]
 801c990:	f203 210e 	addw	r1, r3, #526	; 0x20e
 801c994:	f107 0308 	add.w	r3, r7, #8
 801c998:	2206      	movs	r2, #6
 801c99a:	4618      	mov	r0, r3
 801c99c:	f00e fc4b 	bl	802b236 <memcpy>
 801c9a0:	f7e9 fb76 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801c9a4:	687b      	ldr	r3, [r7, #4]
 801c9a6:	461a      	mov	r2, r3
 801c9a8:	f107 0308 	add.w	r3, r7, #8
 801c9ac:	6818      	ldr	r0, [r3, #0]
 801c9ae:	6010      	str	r0, [r2, #0]
 801c9b0:	889b      	ldrh	r3, [r3, #4]
 801c9b2:	8093      	strh	r3, [r2, #4]
 801c9b4:	6878      	ldr	r0, [r7, #4]
 801c9b6:	3718      	adds	r7, #24
 801c9b8:	46bd      	mov	sp, r7
 801c9ba:	bd80      	pop	{r7, pc}
 801c9bc:	20000040 	.word	0x20000040

0801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>:
 801c9c0:	b580      	push	{r7, lr}
 801c9c2:	b084      	sub	sp, #16
 801c9c4:	af00      	add	r7, sp, #0
 801c9c6:	2300      	movs	r3, #0
 801c9c8:	81fb      	strh	r3, [r7, #14]
 801c9ca:	4b0c      	ldr	r3, [pc, #48]	; (801c9fc <8342496502f723d085ab3cae139cfe28db3db880+0x3c>)
 801c9cc:	681b      	ldr	r3, [r3, #0]
 801c9ce:	60bb      	str	r3, [r7, #8]
 801c9d0:	68bb      	ldr	r3, [r7, #8]
 801c9d2:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801c9d6:	607b      	str	r3, [r7, #4]
 801c9d8:	f7e9 fb3a 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801c9dc:	687b      	ldr	r3, [r7, #4]
 801c9de:	f893 3212 	ldrb.w	r3, [r3, #530]	; 0x212
 801c9e2:	2b00      	cmp	r3, #0
 801c9e4:	d003      	beq.n	801c9ee <8342496502f723d085ab3cae139cfe28db3db880+0x2e>
 801c9e6:	687b      	ldr	r3, [r7, #4]
 801c9e8:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 801c9ec:	81fb      	strh	r3, [r7, #14]
 801c9ee:	f7e9 fb4f 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801c9f2:	89fb      	ldrh	r3, [r7, #14]
 801c9f4:	4618      	mov	r0, r3
 801c9f6:	3710      	adds	r7, #16
 801c9f8:	46bd      	mov	sp, r7
 801c9fa:	bd80      	pop	{r7, pc}
 801c9fc:	20000040 	.word	0x20000040

0801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>:
 801ca00:	b5b0      	push	{r4, r5, r7, lr}
 801ca02:	b09c      	sub	sp, #112	; 0x70
 801ca04:	af04      	add	r7, sp, #16
 801ca06:	4604      	mov	r4, r0
 801ca08:	4608      	mov	r0, r1
 801ca0a:	4611      	mov	r1, r2
 801ca0c:	461a      	mov	r2, r3
 801ca0e:	4623      	mov	r3, r4
 801ca10:	80fb      	strh	r3, [r7, #6]
 801ca12:	4603      	mov	r3, r0
 801ca14:	717b      	strb	r3, [r7, #5]
 801ca16:	460b      	mov	r3, r1
 801ca18:	713b      	strb	r3, [r7, #4]
 801ca1a:	4613      	mov	r3, r2
 801ca1c:	70fb      	strb	r3, [r7, #3]
 801ca1e:	4ba7      	ldr	r3, [pc, #668]	; (801ccbc <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2bc>)
 801ca20:	681b      	ldr	r3, [r3, #0]
 801ca22:	657b      	str	r3, [r7, #84]	; 0x54
 801ca24:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801ca26:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801ca2a:	653b      	str	r3, [r7, #80]	; 0x50
 801ca2c:	f7f8 fc36 	bl	801529c <LOGGER_StartSection>
 801ca30:	4603      	mov	r3, r0
 801ca32:	2b00      	cmp	r3, #0
 801ca34:	d03d      	beq.n	801cab2 <d34d9cc57da987921722d6f0e44d498b73ec396e+0xb2>
 801ca36:	4aa2      	ldr	r2, [pc, #648]	; (801ccc0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2c0>)
 801ca38:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801ca3c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ca40:	e883 0003 	stmia.w	r3, {r0, r1}
 801ca44:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801ca48:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ca4c:	f7f8 fc42 	bl	80152d4 <LOGGER_PrintHeader>
 801ca50:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801ca52:	1c59      	adds	r1, r3, #1
 801ca54:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801ca58:	2208      	movs	r2, #8
 801ca5a:	4618      	mov	r0, r3
 801ca5c:	f7ff febf 	bl	801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801ca60:	4898      	ldr	r0, [pc, #608]	; (801ccc4 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2c4>)
 801ca62:	f7f8 fc03 	bl	801526c <LOGGER_Print>
 801ca66:	78fb      	ldrb	r3, [r7, #3]
 801ca68:	2b00      	cmp	r3, #0
 801ca6a:	d003      	beq.n	801ca74 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x74>
 801ca6c:	4896      	ldr	r0, [pc, #600]	; (801ccc8 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2c8>)
 801ca6e:	f7f8 fbfd 	bl	801526c <LOGGER_Print>
 801ca72:	e002      	b.n	801ca7a <d34d9cc57da987921722d6f0e44d498b73ec396e+0x7a>
 801ca74:	4895      	ldr	r0, [pc, #596]	; (801cccc <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2cc>)
 801ca76:	f7f8 fbf9 	bl	801526c <LOGGER_Print>
 801ca7a:	797b      	ldrb	r3, [r7, #5]
 801ca7c:	4618      	mov	r0, r3
 801ca7e:	f7ff fed5 	bl	801c82c <cellTypeStr>
 801ca82:	4604      	mov	r4, r0
 801ca84:	793b      	ldrb	r3, [r7, #4]
 801ca86:	4618      	mov	r0, r3
 801ca88:	f7ff fee6 	bl	801c858 <cellRoleStr>
 801ca8c:	4605      	mov	r5, r0
 801ca8e:	88f8      	ldrh	r0, [r7, #6]
 801ca90:	f897 1070 	ldrb.w	r1, [r7, #112]	; 0x70
 801ca94:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 801ca98:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801ca9c:	9100      	str	r1, [sp, #0]
 801ca9e:	4603      	mov	r3, r0
 801caa0:	462a      	mov	r2, r5
 801caa2:	4621      	mov	r1, r4
 801caa4:	488a      	ldr	r0, [pc, #552]	; (801ccd0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2d0>)
 801caa6:	f7f8 fbe1 	bl	801526c <LOGGER_Print>
 801caaa:	f7f8 fb9f 	bl	80151ec <LOGGER_PrintNL>
 801caae:	f7f8 fc08 	bl	80152c2 <LOGGER_EndSection>
 801cab2:	f7e9 facd 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801cab6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cab8:	65fb      	str	r3, [r7, #92]	; 0x5c
 801caba:	e002      	b.n	801cac2 <d34d9cc57da987921722d6f0e44d498b73ec396e+0xc2>
 801cabc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cabe:	3328      	adds	r3, #40	; 0x28
 801cac0:	65fb      	str	r3, [r7, #92]	; 0x5c
 801cac2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cac4:	78db      	ldrb	r3, [r3, #3]
 801cac6:	2b00      	cmp	r3, #0
 801cac8:	d00c      	beq.n	801cae4 <d34d9cc57da987921722d6f0e44d498b73ec396e+0xe4>
 801caca:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cacc:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801cad0:	461a      	mov	r2, r3
 801cad2:	4613      	mov	r3, r2
 801cad4:	009b      	lsls	r3, r3, #2
 801cad6:	4413      	add	r3, r2
 801cad8:	00db      	lsls	r3, r3, #3
 801cada:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801cadc:	4413      	add	r3, r2
 801cade:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801cae0:	429a      	cmp	r2, r3
 801cae2:	d3eb      	bcc.n	801cabc <d34d9cc57da987921722d6f0e44d498b73ec396e+0xbc>
 801cae4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cae6:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801caea:	461a      	mov	r2, r3
 801caec:	4613      	mov	r3, r2
 801caee:	009b      	lsls	r3, r3, #2
 801caf0:	4413      	add	r3, r2
 801caf2:	00db      	lsls	r3, r3, #3
 801caf4:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 801caf6:	4413      	add	r3, r2
 801caf8:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801cafa:	429a      	cmp	r2, r3
 801cafc:	d311      	bcc.n	801cb22 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x122>
 801cafe:	f7e9 fac7 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801cb02:	4a74      	ldr	r2, [pc, #464]	; (801ccd4 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2d4>)
 801cb04:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801cb08:	e892 0003 	ldmia.w	r2, {r0, r1}
 801cb0c:	e883 0003 	stmia.w	r3, {r0, r1}
 801cb10:	4a71      	ldr	r2, [pc, #452]	; (801ccd8 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2d8>)
 801cb12:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801cb16:	e893 0003 	ldmia.w	r3, {r0, r1}
 801cb1a:	f7f8 fb75 	bl	8015208 <LOGGER_PrintLine>
 801cb1e:	2300      	movs	r3, #0
 801cb20:	e151      	b.n	801cdc6 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3c6>
 801cb22:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 801cb24:	f001 fb38 	bl	801e198 <f28a7f5ab7578008c51f3fac008d0f632d1bdb54>
 801cb28:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb2a:	88fa      	ldrh	r2, [r7, #6]
 801cb2c:	801a      	strh	r2, [r3, #0]
 801cb2e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb30:	797a      	ldrb	r2, [r7, #5]
 801cb32:	70da      	strb	r2, [r3, #3]
 801cb34:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb36:	793a      	ldrb	r2, [r7, #4]
 801cb38:	711a      	strb	r2, [r3, #4]
 801cb3a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb3c:	78fa      	ldrb	r2, [r7, #3]
 801cb3e:	715a      	strb	r2, [r3, #5]
 801cb40:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb42:	f897 2070 	ldrb.w	r2, [r7, #112]	; 0x70
 801cb46:	709a      	strb	r2, [r3, #2]
 801cb48:	6fb8      	ldr	r0, [r7, #120]	; 0x78
 801cb4a:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 801cb4e:	4619      	mov	r1, r3
 801cb50:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb52:	4602      	mov	r2, r0
 801cb54:	61da      	str	r2, [r3, #28]
 801cb56:	f893 2020 	ldrb.w	r2, [r3, #32]
 801cb5a:	f361 0207 	bfi	r2, r1, #0, #8
 801cb5e:	f883 2020 	strb.w	r2, [r3, #32]
 801cb62:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb64:	3307      	adds	r3, #7
 801cb66:	2211      	movs	r2, #17
 801cb68:	6f79      	ldr	r1, [r7, #116]	; 0x74
 801cb6a:	4618      	mov	r0, r3
 801cb6c:	f00e fb63 	bl	802b236 <memcpy>
 801cb70:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cb72:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801cb76:	2b00      	cmp	r3, #0
 801cb78:	d107      	bne.n	801cb8a <d34d9cc57da987921722d6f0e44d498b73ec396e+0x18a>
 801cb7a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cb7c:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801cb7e:	625a      	str	r2, [r3, #36]	; 0x24
 801cb80:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cb82:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801cb84:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801cb88:	e104      	b.n	801cd94 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x394>
 801cb8a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801cb8c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801cb90:	65bb      	str	r3, [r7, #88]	; 0x58
 801cb92:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cb94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb96:	64fb      	str	r3, [r7, #76]	; 0x4c
 801cb98:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cb9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb9c:	64fb      	str	r3, [r7, #76]	; 0x4c
 801cb9e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cba0:	881a      	ldrh	r2, [r3, #0]
 801cba2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cba4:	881b      	ldrh	r3, [r3, #0]
 801cba6:	429a      	cmp	r2, r3
 801cba8:	d906      	bls.n	801cbb8 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x1b8>
 801cbaa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cbac:	881a      	ldrh	r2, [r3, #0]
 801cbae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cbb0:	881b      	ldrh	r3, [r3, #0]
 801cbb2:	429a      	cmp	r2, r3
 801cbb4:	f0c0 80e8 	bcc.w	801cd88 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x388>
 801cbb8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cbba:	881a      	ldrh	r2, [r3, #0]
 801cbbc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cbbe:	881b      	ldrh	r3, [r3, #0]
 801cbc0:	429a      	cmp	r2, r3
 801cbc2:	d906      	bls.n	801cbd2 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x1d2>
 801cbc4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cbc6:	881a      	ldrh	r2, [r3, #0]
 801cbc8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cbca:	881b      	ldrh	r3, [r3, #0]
 801cbcc:	429a      	cmp	r2, r3
 801cbce:	f240 80db 	bls.w	801cd88 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x388>
 801cbd2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cbd4:	881a      	ldrh	r2, [r3, #0]
 801cbd6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cbd8:	881b      	ldrh	r3, [r3, #0]
 801cbda:	429a      	cmp	r2, r3
 801cbdc:	d206      	bcs.n	801cbec <d34d9cc57da987921722d6f0e44d498b73ec396e+0x1ec>
 801cbde:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cbe0:	881a      	ldrh	r2, [r3, #0]
 801cbe2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cbe4:	881b      	ldrh	r3, [r3, #0]
 801cbe6:	429a      	cmp	r2, r3
 801cbe8:	f240 80ce 	bls.w	801cd88 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x388>
 801cbec:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cbee:	881a      	ldrh	r2, [r3, #0]
 801cbf0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cbf2:	881b      	ldrh	r3, [r3, #0]
 801cbf4:	429a      	cmp	r2, r3
 801cbf6:	f040 80c3 	bne.w	801cd80 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x380>
 801cbfa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cbfc:	791b      	ldrb	r3, [r3, #4]
 801cbfe:	2b02      	cmp	r3, #2
 801cc00:	d103      	bne.n	801cc0a <d34d9cc57da987921722d6f0e44d498b73ec396e+0x20a>
 801cc02:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cc04:	791b      	ldrb	r3, [r3, #4]
 801cc06:	2b03      	cmp	r3, #3
 801cc08:	d007      	beq.n	801cc1a <d34d9cc57da987921722d6f0e44d498b73ec396e+0x21a>
 801cc0a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc0c:	791b      	ldrb	r3, [r3, #4]
 801cc0e:	2b03      	cmp	r3, #3
 801cc10:	d166      	bne.n	801cce0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2e0>
 801cc12:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cc14:	791b      	ldrb	r3, [r3, #4]
 801cc16:	2b02      	cmp	r3, #2
 801cc18:	d162      	bne.n	801cce0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2e0>
 801cc1a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc1c:	2201      	movs	r2, #1
 801cc1e:	719a      	strb	r2, [r3, #6]
 801cc20:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cc22:	2201      	movs	r2, #1
 801cc24:	719a      	strb	r2, [r3, #6]
 801cc26:	f7f8 fb39 	bl	801529c <LOGGER_StartSection>
 801cc2a:	4603      	mov	r3, r0
 801cc2c:	2b00      	cmp	r3, #0
 801cc2e:	f000 80aa 	beq.w	801cd86 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x386>
 801cc32:	4a23      	ldr	r2, [pc, #140]	; (801ccc0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2c0>)
 801cc34:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801cc38:	e892 0003 	ldmia.w	r2, {r0, r1}
 801cc3c:	e883 0003 	stmia.w	r3, {r0, r1}
 801cc40:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801cc44:	e893 0003 	ldmia.w	r3, {r0, r1}
 801cc48:	f7f8 fb44 	bl	80152d4 <LOGGER_PrintHeader>
 801cc4c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc4e:	f103 0108 	add.w	r1, r3, #8
 801cc52:	f107 0320 	add.w	r3, r7, #32
 801cc56:	2208      	movs	r2, #8
 801cc58:	4618      	mov	r0, r3
 801cc5a:	f7ff fdc0 	bl	801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801cc5e:	481f      	ldr	r0, [pc, #124]	; (801ccdc <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2dc>)
 801cc60:	f7f8 fb04 	bl	801526c <LOGGER_Print>
 801cc64:	78fb      	ldrb	r3, [r7, #3]
 801cc66:	2b00      	cmp	r3, #0
 801cc68:	d003      	beq.n	801cc72 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x272>
 801cc6a:	4817      	ldr	r0, [pc, #92]	; (801ccc8 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2c8>)
 801cc6c:	f7f8 fafe 	bl	801526c <LOGGER_Print>
 801cc70:	e002      	b.n	801cc78 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x278>
 801cc72:	4816      	ldr	r0, [pc, #88]	; (801cccc <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2cc>)
 801cc74:	f7f8 fafa 	bl	801526c <LOGGER_Print>
 801cc78:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc7a:	78db      	ldrb	r3, [r3, #3]
 801cc7c:	4618      	mov	r0, r3
 801cc7e:	f7ff fdd5 	bl	801c82c <cellTypeStr>
 801cc82:	4604      	mov	r4, r0
 801cc84:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc86:	791b      	ldrb	r3, [r3, #4]
 801cc88:	4618      	mov	r0, r3
 801cc8a:	f7ff fde5 	bl	801c858 <cellRoleStr>
 801cc8e:	4601      	mov	r1, r0
 801cc90:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc92:	881b      	ldrh	r3, [r3, #0]
 801cc94:	461d      	mov	r5, r3
 801cc96:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cc98:	789b      	ldrb	r3, [r3, #2]
 801cc9a:	4618      	mov	r0, r3
 801cc9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 801cca0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801cca4:	9000      	str	r0, [sp, #0]
 801cca6:	462b      	mov	r3, r5
 801cca8:	460a      	mov	r2, r1
 801ccaa:	4621      	mov	r1, r4
 801ccac:	4808      	ldr	r0, [pc, #32]	; (801ccd0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x2d0>)
 801ccae:	f7f8 fadd 	bl	801526c <LOGGER_Print>
 801ccb2:	f7f8 fa9b 	bl	80151ec <LOGGER_PrintNL>
 801ccb6:	f7f8 fb04 	bl	80152c2 <LOGGER_EndSection>
 801ccba:	e064      	b.n	801cd86 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x386>
 801ccbc:	20000040 	.word	0x20000040
 801ccc0:	0802ffe4 	.word	0x0802ffe4
 801ccc4:	0802ff38 	.word	0x0802ff38
 801ccc8:	0802ff50 	.word	0x0802ff50
 801cccc:	0802ff58 	.word	0x0802ff58
 801ccd0:	0802ff64 	.word	0x0802ff64
 801ccd4:	0802ffec 	.word	0x0802ffec
 801ccd8:	0802ff98 	.word	0x0802ff98
 801ccdc:	0802ffac 	.word	0x0802ffac
 801cce0:	f7f8 fadc 	bl	801529c <LOGGER_StartSection>
 801cce4:	4603      	mov	r3, r0
 801cce6:	2b00      	cmp	r3, #0
 801cce8:	d043      	beq.n	801cd72 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x372>
 801ccea:	4a39      	ldr	r2, [pc, #228]	; (801cdd0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3d0>)
 801ccec:	f107 0318 	add.w	r3, r7, #24
 801ccf0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ccf4:	e883 0003 	stmia.w	r3, {r0, r1}
 801ccf8:	f107 0318 	add.w	r3, r7, #24
 801ccfc:	e893 0003 	ldmia.w	r3, {r0, r1}
 801cd00:	f7f8 fae8 	bl	80152d4 <LOGGER_PrintHeader>
 801cd04:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd06:	f103 0108 	add.w	r1, r3, #8
 801cd0a:	f107 0310 	add.w	r3, r7, #16
 801cd0e:	2208      	movs	r2, #8
 801cd10:	4618      	mov	r0, r3
 801cd12:	f7ff fd64 	bl	801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801cd16:	482f      	ldr	r0, [pc, #188]	; (801cdd4 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3d4>)
 801cd18:	f7f8 faa8 	bl	801526c <LOGGER_Print>
 801cd1c:	78fb      	ldrb	r3, [r7, #3]
 801cd1e:	2b00      	cmp	r3, #0
 801cd20:	d003      	beq.n	801cd2a <d34d9cc57da987921722d6f0e44d498b73ec396e+0x32a>
 801cd22:	482d      	ldr	r0, [pc, #180]	; (801cdd8 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3d8>)
 801cd24:	f7f8 faa2 	bl	801526c <LOGGER_Print>
 801cd28:	e002      	b.n	801cd30 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x330>
 801cd2a:	482c      	ldr	r0, [pc, #176]	; (801cddc <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3dc>)
 801cd2c:	f7f8 fa9e 	bl	801526c <LOGGER_Print>
 801cd30:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd32:	78db      	ldrb	r3, [r3, #3]
 801cd34:	4618      	mov	r0, r3
 801cd36:	f7ff fd79 	bl	801c82c <cellTypeStr>
 801cd3a:	4604      	mov	r4, r0
 801cd3c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd3e:	791b      	ldrb	r3, [r3, #4]
 801cd40:	4618      	mov	r0, r3
 801cd42:	f7ff fd89 	bl	801c858 <cellRoleStr>
 801cd46:	4601      	mov	r1, r0
 801cd48:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd4a:	881b      	ldrh	r3, [r3, #0]
 801cd4c:	461d      	mov	r5, r3
 801cd4e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd50:	789b      	ldrb	r3, [r3, #2]
 801cd52:	4618      	mov	r0, r3
 801cd54:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 801cd58:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801cd5c:	9000      	str	r0, [sp, #0]
 801cd5e:	462b      	mov	r3, r5
 801cd60:	460a      	mov	r2, r1
 801cd62:	4621      	mov	r1, r4
 801cd64:	481e      	ldr	r0, [pc, #120]	; (801cde0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3e0>)
 801cd66:	f7f8 fa81 	bl	801526c <LOGGER_Print>
 801cd6a:	f7f8 fa3f 	bl	80151ec <LOGGER_PrintNL>
 801cd6e:	f7f8 faa8 	bl	80152c2 <LOGGER_EndSection>
 801cd72:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 801cd74:	f001 fa10 	bl	801e198 <f28a7f5ab7578008c51f3fac008d0f632d1bdb54>
 801cd78:	f7e9 f98a 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801cd7c:	2300      	movs	r3, #0
 801cd7e:	e022      	b.n	801cdc6 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3c6>
 801cd80:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cd82:	65bb      	str	r3, [r7, #88]	; 0x58
 801cd84:	e708      	b.n	801cb98 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x198>
 801cd86:	bf00      	nop
 801cd88:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 801cd8a:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 801cd8c:	625a      	str	r2, [r3, #36]	; 0x24
 801cd8e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 801cd90:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801cd92:	625a      	str	r2, [r3, #36]	; 0x24
 801cd94:	793b      	ldrb	r3, [r7, #4]
 801cd96:	2b05      	cmp	r3, #5
 801cd98:	d112      	bne.n	801cdc0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3c0>
 801cd9a:	797b      	ldrb	r3, [r7, #5]
 801cd9c:	2b02      	cmp	r3, #2
 801cd9e:	d10f      	bne.n	801cdc0 <d34d9cc57da987921722d6f0e44d498b73ec396e+0x3c0>
 801cda0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801cda2:	2202      	movs	r2, #2
 801cda4:	701a      	strb	r2, [r3, #0]
 801cda6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801cda8:	3301      	adds	r3, #1
 801cdaa:	f107 020f 	add.w	r2, r7, #15
 801cdae:	4611      	mov	r1, r2
 801cdb0:	4618      	mov	r0, r3
 801cdb2:	f7f1 fcdf 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 801cdb6:	7bfb      	ldrb	r3, [r7, #15]
 801cdb8:	2101      	movs	r1, #1
 801cdba:	4618      	mov	r0, r3
 801cdbc:	f7f1 fd48 	bl	800e850 <ca04a83f27bd1933b342c8619a464a402518176b>
 801cdc0:	f7e9 f966 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801cdc4:	2301      	movs	r3, #1
 801cdc6:	4618      	mov	r0, r3
 801cdc8:	3760      	adds	r7, #96	; 0x60
 801cdca:	46bd      	mov	sp, r7
 801cdcc:	bdb0      	pop	{r4, r5, r7, pc}
 801cdce:	bf00      	nop
 801cdd0:	0802ffec 	.word	0x0802ffec
 801cdd4:	0802ffc4 	.word	0x0802ffc4
 801cdd8:	0802ff50 	.word	0x0802ff50
 801cddc:	0802ff58 	.word	0x0802ff58
 801cde0:	0802ff64 	.word	0x0802ff64

0801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>:
 801cde4:	b580      	push	{r7, lr}
 801cde6:	b094      	sub	sp, #80	; 0x50
 801cde8:	af00      	add	r7, sp, #0
 801cdea:	4603      	mov	r3, r0
 801cdec:	6039      	str	r1, [r7, #0]
 801cdee:	80fb      	strh	r3, [r7, #6]
 801cdf0:	4b93      	ldr	r3, [pc, #588]	; (801d040 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x25c>)
 801cdf2:	681b      	ldr	r3, [r3, #0]
 801cdf4:	637b      	str	r3, [r7, #52]	; 0x34
 801cdf6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801cdf8:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801cdfc:	633b      	str	r3, [r7, #48]	; 0x30
 801cdfe:	f7f8 fa4d 	bl	801529c <LOGGER_StartSection>
 801ce02:	4603      	mov	r3, r0
 801ce04:	2b00      	cmp	r3, #0
 801ce06:	d01e      	beq.n	801ce46 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x62>
 801ce08:	4a8e      	ldr	r2, [pc, #568]	; (801d044 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x260>)
 801ce0a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ce0e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ce12:	e883 0003 	stmia.w	r3, {r0, r1}
 801ce16:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ce1a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ce1e:	f7f8 fa59 	bl	80152d4 <LOGGER_PrintHeader>
 801ce22:	683b      	ldr	r3, [r7, #0]
 801ce24:	1c59      	adds	r1, r3, #1
 801ce26:	f107 0320 	add.w	r3, r7, #32
 801ce2a:	2208      	movs	r2, #8
 801ce2c:	4618      	mov	r0, r3
 801ce2e:	f7ff fcd6 	bl	801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801ce32:	88f9      	ldrh	r1, [r7, #6]
 801ce34:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 801ce38:	4883      	ldr	r0, [pc, #524]	; (801d048 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x264>)
 801ce3a:	f7f8 fa17 	bl	801526c <LOGGER_Print>
 801ce3e:	f7f8 f9d5 	bl	80151ec <LOGGER_PrintNL>
 801ce42:	f7f8 fa3e 	bl	80152c2 <LOGGER_EndSection>
 801ce46:	f7e9 f903 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801ce4a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ce4c:	64fb      	str	r3, [r7, #76]	; 0x4c
 801ce4e:	e010      	b.n	801ce72 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x8e>
 801ce50:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801ce52:	881b      	ldrh	r3, [r3, #0]
 801ce54:	88fa      	ldrh	r2, [r7, #6]
 801ce56:	429a      	cmp	r2, r3
 801ce58:	d108      	bne.n	801ce6c <77238aa43a8b504c643ddf656419f5fe633c06fa+0x88>
 801ce5a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801ce5c:	3307      	adds	r3, #7
 801ce5e:	4619      	mov	r1, r3
 801ce60:	6838      	ldr	r0, [r7, #0]
 801ce62:	f7f2 fa63 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801ce66:	4603      	mov	r3, r0
 801ce68:	2b00      	cmp	r3, #0
 801ce6a:	d110      	bne.n	801ce8e <77238aa43a8b504c643ddf656419f5fe633c06fa+0xaa>
 801ce6c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801ce6e:	3328      	adds	r3, #40	; 0x28
 801ce70:	64fb      	str	r3, [r7, #76]	; 0x4c
 801ce72:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ce74:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801ce78:	461a      	mov	r2, r3
 801ce7a:	4613      	mov	r3, r2
 801ce7c:	009b      	lsls	r3, r3, #2
 801ce7e:	4413      	add	r3, r2
 801ce80:	00db      	lsls	r3, r3, #3
 801ce82:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801ce84:	4413      	add	r3, r2
 801ce86:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801ce88:	429a      	cmp	r2, r3
 801ce8a:	d3e1      	bcc.n	801ce50 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x6c>
 801ce8c:	e000      	b.n	801ce90 <77238aa43a8b504c643ddf656419f5fe633c06fa+0xac>
 801ce8e:	bf00      	nop
 801ce90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ce92:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801ce96:	461a      	mov	r2, r3
 801ce98:	4613      	mov	r3, r2
 801ce9a:	009b      	lsls	r3, r3, #2
 801ce9c:	4413      	add	r3, r2
 801ce9e:	00db      	lsls	r3, r3, #3
 801cea0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 801cea2:	4413      	add	r3, r2
 801cea4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801cea6:	429a      	cmp	r2, r3
 801cea8:	d311      	bcc.n	801cece <77238aa43a8b504c643ddf656419f5fe633c06fa+0xea>
 801ceaa:	f7e9 f8f1 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801ceae:	4a67      	ldr	r2, [pc, #412]	; (801d04c <77238aa43a8b504c643ddf656419f5fe633c06fa+0x268>)
 801ceb0:	f107 0318 	add.w	r3, r7, #24
 801ceb4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ceb8:	e883 0003 	stmia.w	r3, {r0, r1}
 801cebc:	4a64      	ldr	r2, [pc, #400]	; (801d050 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x26c>)
 801cebe:	f107 0318 	add.w	r3, r7, #24
 801cec2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801cec6:	f7f8 f99f 	bl	8015208 <LOGGER_PrintLine>
 801ceca:	2300      	movs	r3, #0
 801cecc:	e0b3      	b.n	801d036 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x252>
 801cece:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ced0:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801ced4:	2b00      	cmp	r3, #0
 801ced6:	d06f      	beq.n	801cfb8 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x1d4>
 801ced8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801ceda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cedc:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801cede:	429a      	cmp	r2, r3
 801cee0:	d107      	bne.n	801cef2 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x10e>
 801cee2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cee4:	2200      	movs	r2, #0
 801cee6:	625a      	str	r2, [r3, #36]	; 0x24
 801cee8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ceea:	2200      	movs	r2, #0
 801ceec:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801cef0:	e062      	b.n	801cfb8 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x1d4>
 801cef2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801cef4:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801cef8:	64bb      	str	r3, [r7, #72]	; 0x48
 801cefa:	2300      	movs	r3, #0
 801cefc:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801cf00:	2300      	movs	r3, #0
 801cf02:	643b      	str	r3, [r7, #64]	; 0x40
 801cf04:	e00e      	b.n	801cf24 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x140>
 801cf06:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801cf08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cf0a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801cf0c:	429a      	cmp	r2, r3
 801cf0e:	d103      	bne.n	801cf18 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x134>
 801cf10:	2301      	movs	r3, #1
 801cf12:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801cf16:	e008      	b.n	801cf2a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x146>
 801cf18:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801cf1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cf1c:	64bb      	str	r3, [r7, #72]	; 0x48
 801cf1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801cf20:	3301      	adds	r3, #1
 801cf22:	643b      	str	r3, [r7, #64]	; 0x40
 801cf24:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801cf26:	2b0c      	cmp	r3, #12
 801cf28:	d9ed      	bls.n	801cf06 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x122>
 801cf2a:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 801cf2e:	f083 0301 	eor.w	r3, r3, #1
 801cf32:	b2db      	uxtb	r3, r3
 801cf34:	2b00      	cmp	r3, #0
 801cf36:	d011      	beq.n	801cf5c <77238aa43a8b504c643ddf656419f5fe633c06fa+0x178>
 801cf38:	f7e9 f8aa 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801cf3c:	4a43      	ldr	r2, [pc, #268]	; (801d04c <77238aa43a8b504c643ddf656419f5fe633c06fa+0x268>)
 801cf3e:	f107 0310 	add.w	r3, r7, #16
 801cf42:	e892 0003 	ldmia.w	r2, {r0, r1}
 801cf46:	e883 0003 	stmia.w	r3, {r0, r1}
 801cf4a:	4a42      	ldr	r2, [pc, #264]	; (801d054 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x270>)
 801cf4c:	f107 0310 	add.w	r3, r7, #16
 801cf50:	e893 0003 	ldmia.w	r3, {r0, r1}
 801cf54:	f7f8 f958 	bl	8015208 <LOGGER_PrintLine>
 801cf58:	2300      	movs	r3, #0
 801cf5a:	e06c      	b.n	801d036 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x252>
 801cf5c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cf5e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801cf60:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801cf62:	625a      	str	r2, [r3, #36]	; 0x24
 801cf64:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801cf66:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801cf6a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 801cf6c:	429a      	cmp	r2, r3
 801cf6e:	d104      	bne.n	801cf7a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x196>
 801cf70:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cf72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801cf74:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801cf76:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801cf7a:	2300      	movs	r3, #0
 801cf7c:	63fb      	str	r3, [r7, #60]	; 0x3c
 801cf7e:	e018      	b.n	801cfb2 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x1ce>
 801cf80:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801cf82:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 801cf84:	4613      	mov	r3, r2
 801cf86:	009b      	lsls	r3, r3, #2
 801cf88:	4413      	add	r3, r2
 801cf8a:	00db      	lsls	r3, r3, #3
 801cf8c:	440b      	add	r3, r1
 801cf8e:	881a      	ldrh	r2, [r3, #0]
 801cf90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cf92:	881b      	ldrh	r3, [r3, #0]
 801cf94:	429a      	cmp	r2, r3
 801cf96:	d109      	bne.n	801cfac <77238aa43a8b504c643ddf656419f5fe633c06fa+0x1c8>
 801cf98:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801cf9a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 801cf9c:	4613      	mov	r3, r2
 801cf9e:	009b      	lsls	r3, r3, #2
 801cfa0:	4413      	add	r3, r2
 801cfa2:	00db      	lsls	r3, r3, #3
 801cfa4:	440b      	add	r3, r1
 801cfa6:	3306      	adds	r3, #6
 801cfa8:	2200      	movs	r2, #0
 801cfaa:	701a      	strb	r2, [r3, #0]
 801cfac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801cfae:	3301      	adds	r3, #1
 801cfb0:	63fb      	str	r3, [r7, #60]	; 0x3c
 801cfb2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801cfb4:	2b0c      	cmp	r3, #12
 801cfb6:	d9e3      	bls.n	801cf80 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x19c>
 801cfb8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cfba:	791b      	ldrb	r3, [r3, #4]
 801cfbc:	2b05      	cmp	r3, #5
 801cfbe:	d134      	bne.n	801d02a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x246>
 801cfc0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801cfc2:	78db      	ldrb	r3, [r3, #3]
 801cfc4:	2b02      	cmp	r3, #2
 801cfc6:	d130      	bne.n	801d02a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x246>
 801cfc8:	230c      	movs	r3, #12
 801cfca:	63bb      	str	r3, [r7, #56]	; 0x38
 801cfcc:	e018      	b.n	801d000 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x21c>
 801cfce:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801cfd0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801cfd2:	4613      	mov	r3, r2
 801cfd4:	009b      	lsls	r3, r3, #2
 801cfd6:	4413      	add	r3, r2
 801cfd8:	00db      	lsls	r3, r3, #3
 801cfda:	440b      	add	r3, r1
 801cfdc:	3304      	adds	r3, #4
 801cfde:	781b      	ldrb	r3, [r3, #0]
 801cfe0:	2b05      	cmp	r3, #5
 801cfe2:	d10a      	bne.n	801cffa <77238aa43a8b504c643ddf656419f5fe633c06fa+0x216>
 801cfe4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801cfe6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801cfe8:	4613      	mov	r3, r2
 801cfea:	009b      	lsls	r3, r3, #2
 801cfec:	4413      	add	r3, r2
 801cfee:	00db      	lsls	r3, r3, #3
 801cff0:	440b      	add	r3, r1
 801cff2:	3303      	adds	r3, #3
 801cff4:	781b      	ldrb	r3, [r3, #0]
 801cff6:	2b02      	cmp	r3, #2
 801cff8:	d006      	beq.n	801d008 <77238aa43a8b504c643ddf656419f5fe633c06fa+0x224>
 801cffa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801cffc:	3b01      	subs	r3, #1
 801cffe:	63bb      	str	r3, [r7, #56]	; 0x38
 801d000:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801d002:	2b00      	cmp	r3, #0
 801d004:	dae3      	bge.n	801cfce <77238aa43a8b504c643ddf656419f5fe633c06fa+0x1ea>
 801d006:	e000      	b.n	801d00a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x226>
 801d008:	bf00      	nop
 801d00a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801d00c:	2b00      	cmp	r3, #0
 801d00e:	da0c      	bge.n	801d02a <77238aa43a8b504c643ddf656419f5fe633c06fa+0x246>
 801d010:	683b      	ldr	r3, [r7, #0]
 801d012:	3301      	adds	r3, #1
 801d014:	f107 020f 	add.w	r2, r7, #15
 801d018:	4611      	mov	r1, r2
 801d01a:	4618      	mov	r0, r3
 801d01c:	f7f1 fbaa 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 801d020:	7bfb      	ldrb	r3, [r7, #15]
 801d022:	2100      	movs	r1, #0
 801d024:	4618      	mov	r0, r3
 801d026:	f7f1 fc13 	bl	800e850 <ca04a83f27bd1933b342c8619a464a402518176b>
 801d02a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 801d02c:	f001 f8b4 	bl	801e198 <f28a7f5ab7578008c51f3fac008d0f632d1bdb54>
 801d030:	f7e9 f82e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d034:	2301      	movs	r3, #1
 801d036:	4618      	mov	r0, r3
 801d038:	3750      	adds	r7, #80	; 0x50
 801d03a:	46bd      	mov	sp, r7
 801d03c:	bd80      	pop	{r7, pc}
 801d03e:	bf00      	nop
 801d040:	20000040 	.word	0x20000040
 801d044:	0802ffe4 	.word	0x0802ffe4
 801d048:	0802fff4 	.word	0x0802fff4
 801d04c:	08030058 	.word	0x08030058
 801d050:	0803001c 	.word	0x0803001c
 801d054:	08030030 	.word	0x08030030

0801d058 <SCHEDULE_GetCellInfo>:
 801d058:	b5b0      	push	{r4, r5, r7, lr}
 801d05a:	b092      	sub	sp, #72	; 0x48
 801d05c:	af00      	add	r7, sp, #0
 801d05e:	6078      	str	r0, [r7, #4]
 801d060:	460b      	mov	r3, r1
 801d062:	807b      	strh	r3, [r7, #2]
 801d064:	4b4f      	ldr	r3, [pc, #316]	; (801d1a4 <SCHEDULE_GetCellInfo+0x14c>)
 801d066:	681b      	ldr	r3, [r3, #0]
 801d068:	643b      	str	r3, [r7, #64]	; 0x40
 801d06a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d06c:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d070:	63fb      	str	r3, [r7, #60]	; 0x3c
 801d072:	f107 031c 	add.w	r3, r7, #28
 801d076:	221e      	movs	r2, #30
 801d078:	2100      	movs	r1, #0
 801d07a:	4618      	mov	r0, r3
 801d07c:	f00e f83c 	bl	802b0f8 <memset>
 801d080:	f7e8 ffe6 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d084:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801d086:	647b      	str	r3, [r7, #68]	; 0x44
 801d088:	e069      	b.n	801d15e <SCHEDULE_GetCellInfo+0x106>
 801d08a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d08c:	881b      	ldrh	r3, [r3, #0]
 801d08e:	887a      	ldrh	r2, [r7, #2]
 801d090:	429a      	cmp	r2, r3
 801d092:	d161      	bne.n	801d158 <SCHEDULE_GetCellInfo+0x100>
 801d094:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d096:	78db      	ldrb	r3, [r3, #3]
 801d098:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 801d09c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d09e:	799b      	ldrb	r3, [r3, #6]
 801d0a0:	2b00      	cmp	r3, #0
 801d0a2:	d003      	beq.n	801d0ac <SCHEDULE_GetCellInfo+0x54>
 801d0a4:	2304      	movs	r3, #4
 801d0a6:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 801d0aa:	e003      	b.n	801d0b4 <SCHEDULE_GetCellInfo+0x5c>
 801d0ac:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0ae:	791b      	ldrb	r3, [r3, #4]
 801d0b0:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 801d0b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0b6:	795b      	ldrb	r3, [r3, #5]
 801d0b8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801d0bc:	887b      	ldrh	r3, [r7, #2]
 801d0be:	863b      	strh	r3, [r7, #48]	; 0x30
 801d0c0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0c2:	789b      	ldrb	r3, [r3, #2]
 801d0c4:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 801d0c8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 801d0ca:	f107 0333 	add.w	r3, r7, #51	; 0x33
 801d0ce:	321c      	adds	r2, #28
 801d0d0:	6810      	ldr	r0, [r2, #0]
 801d0d2:	6018      	str	r0, [r3, #0]
 801d0d4:	7912      	ldrb	r2, [r2, #4]
 801d0d6:	711a      	strb	r2, [r3, #4]
 801d0d8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0da:	8b5a      	ldrh	r2, [r3, #26]
 801d0dc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0de:	8b1b      	ldrh	r3, [r3, #24]
 801d0e0:	429a      	cmp	r2, r3
 801d0e2:	d907      	bls.n	801d0f4 <SCHEDULE_GetCellInfo+0x9c>
 801d0e4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0e6:	8b1a      	ldrh	r2, [r3, #24]
 801d0e8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0ea:	835a      	strh	r2, [r3, #26]
 801d0ec:	f242 7310 	movw	r3, #10000	; 0x2710
 801d0f0:	873b      	strh	r3, [r7, #56]	; 0x38
 801d0f2:	e013      	b.n	801d11c <SCHEDULE_GetCellInfo+0xc4>
 801d0f4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d0f6:	8b1b      	ldrh	r3, [r3, #24]
 801d0f8:	2b00      	cmp	r3, #0
 801d0fa:	d102      	bne.n	801d102 <SCHEDULE_GetCellInfo+0xaa>
 801d0fc:	2300      	movs	r3, #0
 801d0fe:	873b      	strh	r3, [r7, #56]	; 0x38
 801d100:	e00c      	b.n	801d11c <SCHEDULE_GetCellInfo+0xc4>
 801d102:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d104:	8b5b      	ldrh	r3, [r3, #26]
 801d106:	461a      	mov	r2, r3
 801d108:	f242 7310 	movw	r3, #10000	; 0x2710
 801d10c:	fb02 f303 	mul.w	r3, r2, r3
 801d110:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 801d112:	8b12      	ldrh	r2, [r2, #24]
 801d114:	fbb3 f3f2 	udiv	r3, r3, r2
 801d118:	b29b      	uxth	r3, r3
 801d11a:	873b      	strh	r3, [r7, #56]	; 0x38
 801d11c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d11e:	3307      	adds	r3, #7
 801d120:	f107 041c 	add.w	r4, r7, #28
 801d124:	461d      	mov	r5, r3
 801d126:	6828      	ldr	r0, [r5, #0]
 801d128:	6869      	ldr	r1, [r5, #4]
 801d12a:	68aa      	ldr	r2, [r5, #8]
 801d12c:	68eb      	ldr	r3, [r5, #12]
 801d12e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801d130:	7c2b      	ldrb	r3, [r5, #16]
 801d132:	7023      	strb	r3, [r4, #0]
 801d134:	f7e8 ffac 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d138:	687b      	ldr	r3, [r7, #4]
 801d13a:	461d      	mov	r5, r3
 801d13c:	f107 041c 	add.w	r4, r7, #28
 801d140:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d142:	6028      	str	r0, [r5, #0]
 801d144:	6069      	str	r1, [r5, #4]
 801d146:	60aa      	str	r2, [r5, #8]
 801d148:	60eb      	str	r3, [r5, #12]
 801d14a:	cc07      	ldmia	r4!, {r0, r1, r2}
 801d14c:	6128      	str	r0, [r5, #16]
 801d14e:	6169      	str	r1, [r5, #20]
 801d150:	61aa      	str	r2, [r5, #24]
 801d152:	8823      	ldrh	r3, [r4, #0]
 801d154:	83ab      	strh	r3, [r5, #28]
 801d156:	e020      	b.n	801d19a <SCHEDULE_GetCellInfo+0x142>
 801d158:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d15a:	3328      	adds	r3, #40	; 0x28
 801d15c:	647b      	str	r3, [r7, #68]	; 0x44
 801d15e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801d160:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801d164:	461a      	mov	r2, r3
 801d166:	4613      	mov	r3, r2
 801d168:	009b      	lsls	r3, r3, #2
 801d16a:	4413      	add	r3, r2
 801d16c:	00db      	lsls	r3, r3, #3
 801d16e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 801d170:	4413      	add	r3, r2
 801d172:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 801d174:	429a      	cmp	r2, r3
 801d176:	d388      	bcc.n	801d08a <SCHEDULE_GetCellInfo+0x32>
 801d178:	f7e8 ff8a 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d17c:	687b      	ldr	r3, [r7, #4]
 801d17e:	461d      	mov	r5, r3
 801d180:	f107 041c 	add.w	r4, r7, #28
 801d184:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801d186:	6028      	str	r0, [r5, #0]
 801d188:	6069      	str	r1, [r5, #4]
 801d18a:	60aa      	str	r2, [r5, #8]
 801d18c:	60eb      	str	r3, [r5, #12]
 801d18e:	cc07      	ldmia	r4!, {r0, r1, r2}
 801d190:	6128      	str	r0, [r5, #16]
 801d192:	6169      	str	r1, [r5, #20]
 801d194:	61aa      	str	r2, [r5, #24]
 801d196:	8823      	ldrh	r3, [r4, #0]
 801d198:	83ab      	strh	r3, [r5, #28]
 801d19a:	6878      	ldr	r0, [r7, #4]
 801d19c:	3748      	adds	r7, #72	; 0x48
 801d19e:	46bd      	mov	sp, r7
 801d1a0:	bdb0      	pop	{r4, r5, r7, pc}
 801d1a2:	bf00      	nop
 801d1a4:	20000040 	.word	0x20000040

0801d1a8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34>:
 801d1a8:	b580      	push	{r7, lr}
 801d1aa:	b088      	sub	sp, #32
 801d1ac:	af00      	add	r7, sp, #0
 801d1ae:	4603      	mov	r3, r0
 801d1b0:	80fb      	strh	r3, [r7, #6]
 801d1b2:	4b1c      	ldr	r3, [pc, #112]	; (801d224 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x7c>)
 801d1b4:	681b      	ldr	r3, [r3, #0]
 801d1b6:	61bb      	str	r3, [r7, #24]
 801d1b8:	69bb      	ldr	r3, [r7, #24]
 801d1ba:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d1be:	617b      	str	r3, [r7, #20]
 801d1c0:	f7e8 ff46 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d1c4:	697b      	ldr	r3, [r7, #20]
 801d1c6:	f8b3 320e 	ldrh.w	r3, [r3, #526]	; 0x20e
 801d1ca:	88fa      	ldrh	r2, [r7, #6]
 801d1cc:	429a      	cmp	r2, r3
 801d1ce:	d303      	bcc.n	801d1d8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x30>
 801d1d0:	f7e8 ff5e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d1d4:	2300      	movs	r3, #0
 801d1d6:	e021      	b.n	801d21c <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x74>
 801d1d8:	697b      	ldr	r3, [r7, #20]
 801d1da:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d1de:	2b00      	cmp	r3, #0
 801d1e0:	d103      	bne.n	801d1ea <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x42>
 801d1e2:	f7e8 ff55 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d1e6:	2301      	movs	r3, #1
 801d1e8:	e018      	b.n	801d21c <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x74>
 801d1ea:	697b      	ldr	r3, [r7, #20]
 801d1ec:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d1f0:	61fb      	str	r3, [r7, #28]
 801d1f2:	69fb      	ldr	r3, [r7, #28]
 801d1f4:	881b      	ldrh	r3, [r3, #0]
 801d1f6:	88fa      	ldrh	r2, [r7, #6]
 801d1f8:	429a      	cmp	r2, r3
 801d1fa:	d103      	bne.n	801d204 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x5c>
 801d1fc:	f7e8 ff48 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d200:	2300      	movs	r3, #0
 801d202:	e00b      	b.n	801d21c <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x74>
 801d204:	69fb      	ldr	r3, [r7, #28]
 801d206:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d208:	61fb      	str	r3, [r7, #28]
 801d20a:	697b      	ldr	r3, [r7, #20]
 801d20c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d210:	69fa      	ldr	r2, [r7, #28]
 801d212:	429a      	cmp	r2, r3
 801d214:	d1ed      	bne.n	801d1f2 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34+0x4a>
 801d216:	f7e8 ff3b 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d21a:	2301      	movs	r3, #1
 801d21c:	4618      	mov	r0, r3
 801d21e:	3720      	adds	r7, #32
 801d220:	46bd      	mov	sp, r7
 801d222:	bd80      	pop	{r7, pc}
 801d224:	20000040 	.word	0x20000040

0801d228 <a332c320f50553856ddcee95ff765027b8f3e118>:
 801d228:	b580      	push	{r7, lr}
 801d22a:	b086      	sub	sp, #24
 801d22c:	af00      	add	r7, sp, #0
 801d22e:	4b15      	ldr	r3, [pc, #84]	; (801d284 <a332c320f50553856ddcee95ff765027b8f3e118+0x5c>)
 801d230:	681b      	ldr	r3, [r3, #0]
 801d232:	60fb      	str	r3, [r7, #12]
 801d234:	68fb      	ldr	r3, [r7, #12]
 801d236:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d23a:	60bb      	str	r3, [r7, #8]
 801d23c:	f7e8 ff08 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d240:	2300      	movs	r3, #0
 801d242:	617b      	str	r3, [r7, #20]
 801d244:	2300      	movs	r3, #0
 801d246:	613b      	str	r3, [r7, #16]
 801d248:	e010      	b.n	801d26c <a332c320f50553856ddcee95ff765027b8f3e118+0x44>
 801d24a:	68b9      	ldr	r1, [r7, #8]
 801d24c:	693a      	ldr	r2, [r7, #16]
 801d24e:	4613      	mov	r3, r2
 801d250:	009b      	lsls	r3, r3, #2
 801d252:	4413      	add	r3, r2
 801d254:	00db      	lsls	r3, r3, #3
 801d256:	440b      	add	r3, r1
 801d258:	3303      	adds	r3, #3
 801d25a:	781b      	ldrb	r3, [r3, #0]
 801d25c:	2b00      	cmp	r3, #0
 801d25e:	d102      	bne.n	801d266 <a332c320f50553856ddcee95ff765027b8f3e118+0x3e>
 801d260:	697b      	ldr	r3, [r7, #20]
 801d262:	3301      	adds	r3, #1
 801d264:	617b      	str	r3, [r7, #20]
 801d266:	693b      	ldr	r3, [r7, #16]
 801d268:	3301      	adds	r3, #1
 801d26a:	613b      	str	r3, [r7, #16]
 801d26c:	693b      	ldr	r3, [r7, #16]
 801d26e:	2b0c      	cmp	r3, #12
 801d270:	d9eb      	bls.n	801d24a <a332c320f50553856ddcee95ff765027b8f3e118+0x22>
 801d272:	f7e8 ff0d 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d276:	697b      	ldr	r3, [r7, #20]
 801d278:	b2db      	uxtb	r3, r3
 801d27a:	4618      	mov	r0, r3
 801d27c:	3718      	adds	r7, #24
 801d27e:	46bd      	mov	sp, r7
 801d280:	bd80      	pop	{r7, pc}
 801d282:	bf00      	nop
 801d284:	20000040 	.word	0x20000040

0801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>:
 801d288:	b580      	push	{r7, lr}
 801d28a:	b088      	sub	sp, #32
 801d28c:	af00      	add	r7, sp, #0
 801d28e:	6078      	str	r0, [r7, #4]
 801d290:	4b21      	ldr	r3, [pc, #132]	; (801d318 <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x90>)
 801d292:	681b      	ldr	r3, [r3, #0]
 801d294:	617b      	str	r3, [r7, #20]
 801d296:	697b      	ldr	r3, [r7, #20]
 801d298:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d29c:	613b      	str	r3, [r7, #16]
 801d29e:	f7e8 fed7 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d2a2:	2300      	movs	r3, #0
 801d2a4:	61fb      	str	r3, [r7, #28]
 801d2a6:	2300      	movs	r3, #0
 801d2a8:	61bb      	str	r3, [r7, #24]
 801d2aa:	e02a      	b.n	801d302 <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x7a>
 801d2ac:	6939      	ldr	r1, [r7, #16]
 801d2ae:	69ba      	ldr	r2, [r7, #24]
 801d2b0:	4613      	mov	r3, r2
 801d2b2:	009b      	lsls	r3, r3, #2
 801d2b4:	4413      	add	r3, r2
 801d2b6:	00db      	lsls	r3, r3, #3
 801d2b8:	440b      	add	r3, r1
 801d2ba:	3304      	adds	r3, #4
 801d2bc:	781b      	ldrb	r3, [r3, #0]
 801d2be:	2b05      	cmp	r3, #5
 801d2c0:	d11c      	bne.n	801d2fc <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x74>
 801d2c2:	6939      	ldr	r1, [r7, #16]
 801d2c4:	69ba      	ldr	r2, [r7, #24]
 801d2c6:	4613      	mov	r3, r2
 801d2c8:	009b      	lsls	r3, r3, #2
 801d2ca:	4413      	add	r3, r2
 801d2cc:	00db      	lsls	r3, r3, #3
 801d2ce:	440b      	add	r3, r1
 801d2d0:	3303      	adds	r3, #3
 801d2d2:	781b      	ldrb	r3, [r3, #0]
 801d2d4:	2b01      	cmp	r3, #1
 801d2d6:	d111      	bne.n	801d2fc <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x74>
 801d2d8:	69ba      	ldr	r2, [r7, #24]
 801d2da:	4613      	mov	r3, r2
 801d2dc:	009b      	lsls	r3, r3, #2
 801d2de:	4413      	add	r3, r2
 801d2e0:	00db      	lsls	r3, r3, #3
 801d2e2:	693a      	ldr	r2, [r7, #16]
 801d2e4:	4413      	add	r3, r2
 801d2e6:	3307      	adds	r3, #7
 801d2e8:	6879      	ldr	r1, [r7, #4]
 801d2ea:	4618      	mov	r0, r3
 801d2ec:	f7f2 f81e 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801d2f0:	4603      	mov	r3, r0
 801d2f2:	2b00      	cmp	r3, #0
 801d2f4:	d002      	beq.n	801d2fc <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x74>
 801d2f6:	69fb      	ldr	r3, [r7, #28]
 801d2f8:	3301      	adds	r3, #1
 801d2fa:	61fb      	str	r3, [r7, #28]
 801d2fc:	69bb      	ldr	r3, [r7, #24]
 801d2fe:	3301      	adds	r3, #1
 801d300:	61bb      	str	r3, [r7, #24]
 801d302:	69bb      	ldr	r3, [r7, #24]
 801d304:	2b0c      	cmp	r3, #12
 801d306:	d9d1      	bls.n	801d2ac <45512773dac7d59ca8bf45f1f7d9d11b7c610605+0x24>
 801d308:	f7e8 fec2 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d30c:	69fb      	ldr	r3, [r7, #28]
 801d30e:	b2db      	uxtb	r3, r3
 801d310:	4618      	mov	r0, r3
 801d312:	3720      	adds	r7, #32
 801d314:	46bd      	mov	sp, r7
 801d316:	bd80      	pop	{r7, pc}
 801d318:	20000040 	.word	0x20000040

0801d31c <ee504f8deafedb03386eec1c989207132bd15110>:
 801d31c:	b580      	push	{r7, lr}
 801d31e:	b08a      	sub	sp, #40	; 0x28
 801d320:	af00      	add	r7, sp, #0
 801d322:	6078      	str	r0, [r7, #4]
 801d324:	4b34      	ldr	r3, [pc, #208]	; (801d3f8 <ee504f8deafedb03386eec1c989207132bd15110+0xdc>)
 801d326:	681b      	ldr	r3, [r3, #0]
 801d328:	61bb      	str	r3, [r7, #24]
 801d32a:	69bb      	ldr	r3, [r7, #24]
 801d32c:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d330:	617b      	str	r3, [r7, #20]
 801d332:	2300      	movs	r3, #0
 801d334:	627b      	str	r3, [r7, #36]	; 0x24
 801d336:	f7e8 fe8b 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d33a:	687b      	ldr	r3, [r7, #4]
 801d33c:	2b00      	cmp	r3, #0
 801d33e:	d031      	beq.n	801d3a4 <ee504f8deafedb03386eec1c989207132bd15110+0x88>
 801d340:	2300      	movs	r3, #0
 801d342:	623b      	str	r3, [r7, #32]
 801d344:	e02a      	b.n	801d39c <ee504f8deafedb03386eec1c989207132bd15110+0x80>
 801d346:	6979      	ldr	r1, [r7, #20]
 801d348:	6a3a      	ldr	r2, [r7, #32]
 801d34a:	4613      	mov	r3, r2
 801d34c:	009b      	lsls	r3, r3, #2
 801d34e:	4413      	add	r3, r2
 801d350:	00db      	lsls	r3, r3, #3
 801d352:	440b      	add	r3, r1
 801d354:	3304      	adds	r3, #4
 801d356:	781b      	ldrb	r3, [r3, #0]
 801d358:	2b05      	cmp	r3, #5
 801d35a:	d11c      	bne.n	801d396 <ee504f8deafedb03386eec1c989207132bd15110+0x7a>
 801d35c:	6979      	ldr	r1, [r7, #20]
 801d35e:	6a3a      	ldr	r2, [r7, #32]
 801d360:	4613      	mov	r3, r2
 801d362:	009b      	lsls	r3, r3, #2
 801d364:	4413      	add	r3, r2
 801d366:	00db      	lsls	r3, r3, #3
 801d368:	440b      	add	r3, r1
 801d36a:	3303      	adds	r3, #3
 801d36c:	781b      	ldrb	r3, [r3, #0]
 801d36e:	2b02      	cmp	r3, #2
 801d370:	d111      	bne.n	801d396 <ee504f8deafedb03386eec1c989207132bd15110+0x7a>
 801d372:	6a3a      	ldr	r2, [r7, #32]
 801d374:	4613      	mov	r3, r2
 801d376:	009b      	lsls	r3, r3, #2
 801d378:	4413      	add	r3, r2
 801d37a:	00db      	lsls	r3, r3, #3
 801d37c:	697a      	ldr	r2, [r7, #20]
 801d37e:	4413      	add	r3, r2
 801d380:	3307      	adds	r3, #7
 801d382:	6879      	ldr	r1, [r7, #4]
 801d384:	4618      	mov	r0, r3
 801d386:	f7f1 ffd1 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801d38a:	4603      	mov	r3, r0
 801d38c:	2b00      	cmp	r3, #0
 801d38e:	d002      	beq.n	801d396 <ee504f8deafedb03386eec1c989207132bd15110+0x7a>
 801d390:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d392:	3301      	adds	r3, #1
 801d394:	627b      	str	r3, [r7, #36]	; 0x24
 801d396:	6a3b      	ldr	r3, [r7, #32]
 801d398:	3301      	adds	r3, #1
 801d39a:	623b      	str	r3, [r7, #32]
 801d39c:	6a3b      	ldr	r3, [r7, #32]
 801d39e:	2b0c      	cmp	r3, #12
 801d3a0:	d9d1      	bls.n	801d346 <ee504f8deafedb03386eec1c989207132bd15110+0x2a>
 801d3a2:	e021      	b.n	801d3e8 <ee504f8deafedb03386eec1c989207132bd15110+0xcc>
 801d3a4:	2300      	movs	r3, #0
 801d3a6:	61fb      	str	r3, [r7, #28]
 801d3a8:	e01b      	b.n	801d3e2 <ee504f8deafedb03386eec1c989207132bd15110+0xc6>
 801d3aa:	6979      	ldr	r1, [r7, #20]
 801d3ac:	69fa      	ldr	r2, [r7, #28]
 801d3ae:	4613      	mov	r3, r2
 801d3b0:	009b      	lsls	r3, r3, #2
 801d3b2:	4413      	add	r3, r2
 801d3b4:	00db      	lsls	r3, r3, #3
 801d3b6:	440b      	add	r3, r1
 801d3b8:	3304      	adds	r3, #4
 801d3ba:	781b      	ldrb	r3, [r3, #0]
 801d3bc:	2b05      	cmp	r3, #5
 801d3be:	d10d      	bne.n	801d3dc <ee504f8deafedb03386eec1c989207132bd15110+0xc0>
 801d3c0:	6979      	ldr	r1, [r7, #20]
 801d3c2:	69fa      	ldr	r2, [r7, #28]
 801d3c4:	4613      	mov	r3, r2
 801d3c6:	009b      	lsls	r3, r3, #2
 801d3c8:	4413      	add	r3, r2
 801d3ca:	00db      	lsls	r3, r3, #3
 801d3cc:	440b      	add	r3, r1
 801d3ce:	3303      	adds	r3, #3
 801d3d0:	781b      	ldrb	r3, [r3, #0]
 801d3d2:	2b02      	cmp	r3, #2
 801d3d4:	d102      	bne.n	801d3dc <ee504f8deafedb03386eec1c989207132bd15110+0xc0>
 801d3d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d3d8:	3301      	adds	r3, #1
 801d3da:	627b      	str	r3, [r7, #36]	; 0x24
 801d3dc:	69fb      	ldr	r3, [r7, #28]
 801d3de:	3301      	adds	r3, #1
 801d3e0:	61fb      	str	r3, [r7, #28]
 801d3e2:	69fb      	ldr	r3, [r7, #28]
 801d3e4:	2b0c      	cmp	r3, #12
 801d3e6:	d9e0      	bls.n	801d3aa <ee504f8deafedb03386eec1c989207132bd15110+0x8e>
 801d3e8:	f7e8 fe52 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d3ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d3ee:	4618      	mov	r0, r3
 801d3f0:	3728      	adds	r7, #40	; 0x28
 801d3f2:	46bd      	mov	sp, r7
 801d3f4:	bd80      	pop	{r7, pc}
 801d3f6:	bf00      	nop
 801d3f8:	20000040 	.word	0x20000040

0801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>:
 801d3fc:	b580      	push	{r7, lr}
 801d3fe:	b08a      	sub	sp, #40	; 0x28
 801d400:	af00      	add	r7, sp, #0
 801d402:	6078      	str	r0, [r7, #4]
 801d404:	4b2e      	ldr	r3, [pc, #184]	; (801d4c0 <b3b14ea0535ea7766b14c305344e9dd58438abce+0xc4>)
 801d406:	681b      	ldr	r3, [r3, #0]
 801d408:	623b      	str	r3, [r7, #32]
 801d40a:	6a3b      	ldr	r3, [r7, #32]
 801d40c:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d410:	61fb      	str	r3, [r7, #28]
 801d412:	f7f7 ff43 	bl	801529c <LOGGER_StartSection>
 801d416:	4603      	mov	r3, r0
 801d418:	2b00      	cmp	r3, #0
 801d41a:	d01d      	beq.n	801d458 <b3b14ea0535ea7766b14c305344e9dd58438abce+0x5c>
 801d41c:	4a29      	ldr	r2, [pc, #164]	; (801d4c4 <b3b14ea0535ea7766b14c305344e9dd58438abce+0xc8>)
 801d41e:	f107 0314 	add.w	r3, r7, #20
 801d422:	e892 0003 	ldmia.w	r2, {r0, r1}
 801d426:	e883 0003 	stmia.w	r3, {r0, r1}
 801d42a:	f107 0314 	add.w	r3, r7, #20
 801d42e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801d432:	f7f7 ff4f 	bl	80152d4 <LOGGER_PrintHeader>
 801d436:	687b      	ldr	r3, [r7, #4]
 801d438:	1c59      	adds	r1, r3, #1
 801d43a:	f107 0308 	add.w	r3, r7, #8
 801d43e:	2208      	movs	r2, #8
 801d440:	4618      	mov	r0, r3
 801d442:	f7ff f9cc 	bl	801c7de <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801d446:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801d44a:	481f      	ldr	r0, [pc, #124]	; (801d4c8 <b3b14ea0535ea7766b14c305344e9dd58438abce+0xcc>)
 801d44c:	f7f7 ff0e 	bl	801526c <LOGGER_Print>
 801d450:	f7f7 fecc 	bl	80151ec <LOGGER_PrintNL>
 801d454:	f7f7 ff35 	bl	80152c2 <LOGGER_EndSection>
 801d458:	2300      	movs	r3, #0
 801d45a:	627b      	str	r3, [r7, #36]	; 0x24
 801d45c:	e028      	b.n	801d4b0 <b3b14ea0535ea7766b14c305344e9dd58438abce+0xb4>
 801d45e:	69f9      	ldr	r1, [r7, #28]
 801d460:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801d462:	4613      	mov	r3, r2
 801d464:	009b      	lsls	r3, r3, #2
 801d466:	4413      	add	r3, r2
 801d468:	00db      	lsls	r3, r3, #3
 801d46a:	440b      	add	r3, r1
 801d46c:	3304      	adds	r3, #4
 801d46e:	781b      	ldrb	r3, [r3, #0]
 801d470:	2b05      	cmp	r3, #5
 801d472:	d11a      	bne.n	801d4aa <b3b14ea0535ea7766b14c305344e9dd58438abce+0xae>
 801d474:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801d476:	4613      	mov	r3, r2
 801d478:	009b      	lsls	r3, r3, #2
 801d47a:	4413      	add	r3, r2
 801d47c:	00db      	lsls	r3, r3, #3
 801d47e:	69fa      	ldr	r2, [r7, #28]
 801d480:	4413      	add	r3, r2
 801d482:	3307      	adds	r3, #7
 801d484:	6879      	ldr	r1, [r7, #4]
 801d486:	4618      	mov	r0, r3
 801d488:	f7f1 ff50 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801d48c:	4603      	mov	r3, r0
 801d48e:	2b00      	cmp	r3, #0
 801d490:	d00b      	beq.n	801d4aa <b3b14ea0535ea7766b14c305344e9dd58438abce+0xae>
 801d492:	69f9      	ldr	r1, [r7, #28]
 801d494:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801d496:	4613      	mov	r3, r2
 801d498:	009b      	lsls	r3, r3, #2
 801d49a:	4413      	add	r3, r2
 801d49c:	00db      	lsls	r3, r3, #3
 801d49e:	440b      	add	r3, r1
 801d4a0:	881b      	ldrh	r3, [r3, #0]
 801d4a2:	6879      	ldr	r1, [r7, #4]
 801d4a4:	4618      	mov	r0, r3
 801d4a6:	f7ff fc9d 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801d4aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d4ac:	3301      	adds	r3, #1
 801d4ae:	627b      	str	r3, [r7, #36]	; 0x24
 801d4b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801d4b2:	2b0c      	cmp	r3, #12
 801d4b4:	d9d3      	bls.n	801d45e <b3b14ea0535ea7766b14c305344e9dd58438abce+0x62>
 801d4b6:	bf00      	nop
 801d4b8:	bf00      	nop
 801d4ba:	3728      	adds	r7, #40	; 0x28
 801d4bc:	46bd      	mov	sp, r7
 801d4be:	bd80      	pop	{r7, pc}
 801d4c0:	20000040 	.word	0x20000040
 801d4c4:	0802ffe4 	.word	0x0802ffe4
 801d4c8:	08030060 	.word	0x08030060

0801d4cc <6ddbbbac57a040e4656a8033d785bd5c35bb4db8>:
 801d4cc:	b580      	push	{r7, lr}
 801d4ce:	b086      	sub	sp, #24
 801d4d0:	af00      	add	r7, sp, #0
 801d4d2:	4b1b      	ldr	r3, [pc, #108]	; (801d540 <6ddbbbac57a040e4656a8033d785bd5c35bb4db8+0x74>)
 801d4d4:	681b      	ldr	r3, [r3, #0]
 801d4d6:	613b      	str	r3, [r7, #16]
 801d4d8:	693b      	ldr	r3, [r7, #16]
 801d4da:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d4de:	60fb      	str	r3, [r7, #12]
 801d4e0:	f7e8 fdb6 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d4e4:	2300      	movs	r3, #0
 801d4e6:	617b      	str	r3, [r7, #20]
 801d4e8:	e020      	b.n	801d52c <6ddbbbac57a040e4656a8033d785bd5c35bb4db8+0x60>
 801d4ea:	68f9      	ldr	r1, [r7, #12]
 801d4ec:	697a      	ldr	r2, [r7, #20]
 801d4ee:	4613      	mov	r3, r2
 801d4f0:	009b      	lsls	r3, r3, #2
 801d4f2:	4413      	add	r3, r2
 801d4f4:	00db      	lsls	r3, r3, #3
 801d4f6:	440b      	add	r3, r1
 801d4f8:	3304      	adds	r3, #4
 801d4fa:	781b      	ldrb	r3, [r3, #0]
 801d4fc:	2b05      	cmp	r3, #5
 801d4fe:	d112      	bne.n	801d526 <6ddbbbac57a040e4656a8033d785bd5c35bb4db8+0x5a>
 801d500:	68f9      	ldr	r1, [r7, #12]
 801d502:	697a      	ldr	r2, [r7, #20]
 801d504:	4613      	mov	r3, r2
 801d506:	009b      	lsls	r3, r3, #2
 801d508:	4413      	add	r3, r2
 801d50a:	00db      	lsls	r3, r3, #3
 801d50c:	440b      	add	r3, r1
 801d50e:	8818      	ldrh	r0, [r3, #0]
 801d510:	697a      	ldr	r2, [r7, #20]
 801d512:	4613      	mov	r3, r2
 801d514:	009b      	lsls	r3, r3, #2
 801d516:	4413      	add	r3, r2
 801d518:	00db      	lsls	r3, r3, #3
 801d51a:	68fa      	ldr	r2, [r7, #12]
 801d51c:	4413      	add	r3, r2
 801d51e:	3307      	adds	r3, #7
 801d520:	4619      	mov	r1, r3
 801d522:	f7ff fc5f 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801d526:	697b      	ldr	r3, [r7, #20]
 801d528:	3301      	adds	r3, #1
 801d52a:	617b      	str	r3, [r7, #20]
 801d52c:	697b      	ldr	r3, [r7, #20]
 801d52e:	2b0c      	cmp	r3, #12
 801d530:	d9db      	bls.n	801d4ea <6ddbbbac57a040e4656a8033d785bd5c35bb4db8+0x1e>
 801d532:	f7e8 fdad 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d536:	bf00      	nop
 801d538:	3718      	adds	r7, #24
 801d53a:	46bd      	mov	sp, r7
 801d53c:	bd80      	pop	{r7, pc}
 801d53e:	bf00      	nop
 801d540:	20000040 	.word	0x20000040

0801d544 <0a6eef3dd890049c6feb9f053ae4732930866b35>:
 801d544:	b580      	push	{r7, lr}
 801d546:	b088      	sub	sp, #32
 801d548:	af00      	add	r7, sp, #0
 801d54a:	6078      	str	r0, [r7, #4]
 801d54c:	4b1a      	ldr	r3, [pc, #104]	; (801d5b8 <0a6eef3dd890049c6feb9f053ae4732930866b35+0x74>)
 801d54e:	681b      	ldr	r3, [r3, #0]
 801d550:	61bb      	str	r3, [r7, #24]
 801d552:	69bb      	ldr	r3, [r7, #24]
 801d554:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d558:	617b      	str	r3, [r7, #20]
 801d55a:	f7e8 fd79 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d55e:	2300      	movs	r3, #0
 801d560:	61fb      	str	r3, [r7, #28]
 801d562:	e01e      	b.n	801d5a2 <0a6eef3dd890049c6feb9f053ae4732930866b35+0x5e>
 801d564:	6979      	ldr	r1, [r7, #20]
 801d566:	69fa      	ldr	r2, [r7, #28]
 801d568:	4613      	mov	r3, r2
 801d56a:	009b      	lsls	r3, r3, #2
 801d56c:	4413      	add	r3, r2
 801d56e:	00db      	lsls	r3, r3, #3
 801d570:	440b      	add	r3, r1
 801d572:	3304      	adds	r3, #4
 801d574:	781b      	ldrb	r3, [r3, #0]
 801d576:	2b03      	cmp	r3, #3
 801d578:	d110      	bne.n	801d59c <0a6eef3dd890049c6feb9f053ae4732930866b35+0x58>
 801d57a:	69fa      	ldr	r2, [r7, #28]
 801d57c:	4613      	mov	r3, r2
 801d57e:	009b      	lsls	r3, r3, #2
 801d580:	4413      	add	r3, r2
 801d582:	00db      	lsls	r3, r3, #3
 801d584:	697a      	ldr	r2, [r7, #20]
 801d586:	4413      	add	r3, r2
 801d588:	3307      	adds	r3, #7
 801d58a:	2211      	movs	r2, #17
 801d58c:	4619      	mov	r1, r3
 801d58e:	6878      	ldr	r0, [r7, #4]
 801d590:	f00d fe51 	bl	802b236 <memcpy>
 801d594:	f7e8 fd7c 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d598:	2301      	movs	r3, #1
 801d59a:	e008      	b.n	801d5ae <0a6eef3dd890049c6feb9f053ae4732930866b35+0x6a>
 801d59c:	69fb      	ldr	r3, [r7, #28]
 801d59e:	3301      	adds	r3, #1
 801d5a0:	61fb      	str	r3, [r7, #28]
 801d5a2:	69fb      	ldr	r3, [r7, #28]
 801d5a4:	2b0c      	cmp	r3, #12
 801d5a6:	d9dd      	bls.n	801d564 <0a6eef3dd890049c6feb9f053ae4732930866b35+0x20>
 801d5a8:	f7e8 fd72 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d5ac:	2300      	movs	r3, #0
 801d5ae:	4618      	mov	r0, r3
 801d5b0:	3720      	adds	r7, #32
 801d5b2:	46bd      	mov	sp, r7
 801d5b4:	bd80      	pop	{r7, pc}
 801d5b6:	bf00      	nop
 801d5b8:	20000040 	.word	0x20000040

0801d5bc <1baccc0636a0c0164401b195d5e58f3f8da51c03>:
 801d5bc:	b580      	push	{r7, lr}
 801d5be:	b086      	sub	sp, #24
 801d5c0:	af00      	add	r7, sp, #0
 801d5c2:	4b1b      	ldr	r3, [pc, #108]	; (801d630 <1baccc0636a0c0164401b195d5e58f3f8da51c03+0x74>)
 801d5c4:	681b      	ldr	r3, [r3, #0]
 801d5c6:	613b      	str	r3, [r7, #16]
 801d5c8:	693b      	ldr	r3, [r7, #16]
 801d5ca:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d5ce:	60fb      	str	r3, [r7, #12]
 801d5d0:	f7e8 fd3e 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d5d4:	2300      	movs	r3, #0
 801d5d6:	617b      	str	r3, [r7, #20]
 801d5d8:	e020      	b.n	801d61c <1baccc0636a0c0164401b195d5e58f3f8da51c03+0x60>
 801d5da:	68f9      	ldr	r1, [r7, #12]
 801d5dc:	697a      	ldr	r2, [r7, #20]
 801d5de:	4613      	mov	r3, r2
 801d5e0:	009b      	lsls	r3, r3, #2
 801d5e2:	4413      	add	r3, r2
 801d5e4:	00db      	lsls	r3, r3, #3
 801d5e6:	440b      	add	r3, r1
 801d5e8:	3304      	adds	r3, #4
 801d5ea:	781b      	ldrb	r3, [r3, #0]
 801d5ec:	2b03      	cmp	r3, #3
 801d5ee:	d112      	bne.n	801d616 <1baccc0636a0c0164401b195d5e58f3f8da51c03+0x5a>
 801d5f0:	68f9      	ldr	r1, [r7, #12]
 801d5f2:	697a      	ldr	r2, [r7, #20]
 801d5f4:	4613      	mov	r3, r2
 801d5f6:	009b      	lsls	r3, r3, #2
 801d5f8:	4413      	add	r3, r2
 801d5fa:	00db      	lsls	r3, r3, #3
 801d5fc:	440b      	add	r3, r1
 801d5fe:	8818      	ldrh	r0, [r3, #0]
 801d600:	697a      	ldr	r2, [r7, #20]
 801d602:	4613      	mov	r3, r2
 801d604:	009b      	lsls	r3, r3, #2
 801d606:	4413      	add	r3, r2
 801d608:	00db      	lsls	r3, r3, #3
 801d60a:	68fa      	ldr	r2, [r7, #12]
 801d60c:	4413      	add	r3, r2
 801d60e:	3307      	adds	r3, #7
 801d610:	4619      	mov	r1, r3
 801d612:	f7ff fbe7 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 801d616:	697b      	ldr	r3, [r7, #20]
 801d618:	3301      	adds	r3, #1
 801d61a:	617b      	str	r3, [r7, #20]
 801d61c:	697b      	ldr	r3, [r7, #20]
 801d61e:	2b0c      	cmp	r3, #12
 801d620:	d9db      	bls.n	801d5da <1baccc0636a0c0164401b195d5e58f3f8da51c03+0x1e>
 801d622:	f7e8 fd35 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d626:	bf00      	nop
 801d628:	3718      	adds	r7, #24
 801d62a:	46bd      	mov	sp, r7
 801d62c:	bd80      	pop	{r7, pc}
 801d62e:	bf00      	nop
 801d630:	20000040 	.word	0x20000040

0801d634 <d611da576de3e6e1bad875dccfd97dcae1d67b2b>:
 801d634:	b5b0      	push	{r4, r5, r7, lr}
 801d636:	b094      	sub	sp, #80	; 0x50
 801d638:	af00      	add	r7, sp, #0
 801d63a:	4603      	mov	r3, r0
 801d63c:	80fb      	strh	r3, [r7, #6]
 801d63e:	4b68      	ldr	r3, [pc, #416]	; (801d7e0 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x1ac>)
 801d640:	681b      	ldr	r3, [r3, #0]
 801d642:	647b      	str	r3, [r7, #68]	; 0x44
 801d644:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801d646:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d64a:	643b      	str	r3, [r7, #64]	; 0x40
 801d64c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d64e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d652:	2b00      	cmp	r3, #0
 801d654:	d105      	bne.n	801d662 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x2e>
 801d656:	f240 2266 	movw	r2, #614	; 0x266
 801d65a:	4962      	ldr	r1, [pc, #392]	; (801d7e4 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x1b0>)
 801d65c:	4862      	ldr	r0, [pc, #392]	; (801d7e8 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x1b4>)
 801d65e:	f7e4 f853 	bl	8001708 <EXPECT_OnAbortHandler>
 801d662:	2300      	movs	r3, #0
 801d664:	64fb      	str	r3, [r7, #76]	; 0x4c
 801d666:	f7e8 fcf3 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d66a:	e010      	b.n	801d68e <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x5a>
 801d66c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d66e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d672:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801d674:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d676:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801d67a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801d67c:	3301      	adds	r3, #1
 801d67e:	64fb      	str	r3, [r7, #76]	; 0x4c
 801d680:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801d682:	2b0d      	cmp	r3, #13
 801d684:	d903      	bls.n	801d68e <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x5a>
 801d686:	f7e8 fd03 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d68a:	2300      	movs	r3, #0
 801d68c:	e0a4      	b.n	801d7d8 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x1a4>
 801d68e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d690:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d694:	881b      	ldrh	r3, [r3, #0]
 801d696:	88fa      	ldrh	r2, [r7, #6]
 801d698:	429a      	cmp	r2, r3
 801d69a:	d1e7      	bne.n	801d66c <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x38>
 801d69c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d69e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6a2:	799b      	ldrb	r3, [r3, #6]
 801d6a4:	2b00      	cmp	r3, #0
 801d6a6:	f000 8094 	beq.w	801d7d2 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x19e>
 801d6aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d6ac:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d6b2:	799b      	ldrb	r3, [r3, #6]
 801d6b4:	2b00      	cmp	r3, #0
 801d6b6:	f000 808c 	beq.w	801d7d2 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x19e>
 801d6ba:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d6bc:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d6c2:	881b      	ldrh	r3, [r3, #0]
 801d6c4:	88fa      	ldrh	r2, [r7, #6]
 801d6c6:	429a      	cmp	r2, r3
 801d6c8:	f040 8083 	bne.w	801d7d2 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x19e>
 801d6cc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d6ce:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6d2:	791b      	ldrb	r3, [r3, #4]
 801d6d4:	2b03      	cmp	r3, #3
 801d6d6:	d10e      	bne.n	801d6f6 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0xc2>
 801d6d8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d6da:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6de:	3307      	adds	r3, #7
 801d6e0:	f107 0424 	add.w	r4, r7, #36	; 0x24
 801d6e4:	461d      	mov	r5, r3
 801d6e6:	6828      	ldr	r0, [r5, #0]
 801d6e8:	6869      	ldr	r1, [r5, #4]
 801d6ea:	68aa      	ldr	r2, [r5, #8]
 801d6ec:	68eb      	ldr	r3, [r5, #12]
 801d6ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801d6f0:	7c2b      	ldrb	r3, [r5, #16]
 801d6f2:	7023      	strb	r3, [r4, #0]
 801d6f4:	e00e      	b.n	801d714 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0xe0>
 801d6f6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d6f8:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d6fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d6fe:	3307      	adds	r3, #7
 801d700:	f107 0424 	add.w	r4, r7, #36	; 0x24
 801d704:	461d      	mov	r5, r3
 801d706:	6828      	ldr	r0, [r5, #0]
 801d708:	6869      	ldr	r1, [r5, #4]
 801d70a:	68aa      	ldr	r2, [r5, #8]
 801d70c:	68eb      	ldr	r3, [r5, #12]
 801d70e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801d710:	7c2b      	ldrb	r3, [r5, #16]
 801d712:	7023      	strb	r3, [r4, #0]
 801d714:	2300      	movs	r3, #0
 801d716:	64bb      	str	r3, [r7, #72]	; 0x48
 801d718:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801d71c:	4618      	mov	r0, r3
 801d71e:	f7ff fdb3 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801d722:	4603      	mov	r3, r0
 801d724:	2b00      	cmp	r3, #0
 801d726:	d106      	bne.n	801d736 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x102>
 801d728:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801d72c:	2140      	movs	r1, #64	; 0x40
 801d72e:	4618      	mov	r0, r3
 801d730:	f7f2 fdbe 	bl	80102b0 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca>
 801d734:	64b8      	str	r0, [r7, #72]	; 0x48
 801d736:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801d738:	2b00      	cmp	r3, #0
 801d73a:	d00e      	beq.n	801d75a <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x126>
 801d73c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d73e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d742:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d744:	791b      	ldrb	r3, [r3, #4]
 801d746:	2b03      	cmp	r3, #3
 801d748:	d132      	bne.n	801d7b0 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x17c>
 801d74a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d74c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d750:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801d752:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d754:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801d758:	e02a      	b.n	801d7b0 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x17c>
 801d75a:	2302      	movs	r3, #2
 801d75c:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 801d760:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801d764:	3301      	adds	r3, #1
 801d766:	4619      	mov	r1, r3
 801d768:	2000      	movs	r0, #0
 801d76a:	f7f0 fd01 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801d76e:	4603      	mov	r3, r0
 801d770:	2b00      	cmp	r3, #0
 801d772:	d007      	beq.n	801d784 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x150>
 801d774:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801d778:	2140      	movs	r1, #64	; 0x40
 801d77a:	4618      	mov	r0, r3
 801d77c:	f7f2 fe46 	bl	801040c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f>
 801d780:	64b8      	str	r0, [r7, #72]	; 0x48
 801d782:	e004      	b.n	801d78e <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x15a>
 801d784:	2140      	movs	r1, #64	; 0x40
 801d786:	2000      	movs	r0, #0
 801d788:	f7f2 fe40 	bl	801040c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f>
 801d78c:	64b8      	str	r0, [r7, #72]	; 0x48
 801d78e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801d790:	2b00      	cmp	r3, #0
 801d792:	d00d      	beq.n	801d7b0 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x17c>
 801d794:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d796:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d79a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d79c:	791b      	ldrb	r3, [r3, #4]
 801d79e:	2b02      	cmp	r3, #2
 801d7a0:	d106      	bne.n	801d7b0 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x17c>
 801d7a2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d7a4:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d7a8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801d7aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d7ac:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801d7b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 801d7b2:	2b00      	cmp	r3, #0
 801d7b4:	d10d      	bne.n	801d7d2 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x19e>
 801d7b6:	f7f4 fb4f 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801d7ba:	4603      	mov	r3, r0
 801d7bc:	f003 0301 	and.w	r3, r3, #1
 801d7c0:	2b00      	cmp	r3, #0
 801d7c2:	d006      	beq.n	801d7d2 <d611da576de3e6e1bad875dccfd97dcae1d67b2b+0x19e>
 801d7c4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d7c6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d7ca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801d7cc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 801d7ce:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 801d7d2:	f7e8 fc5d 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d7d6:	2301      	movs	r3, #1
 801d7d8:	4618      	mov	r0, r3
 801d7da:	3750      	adds	r7, #80	; 0x50
 801d7dc:	46bd      	mov	sp, r7
 801d7de:	bdb0      	pop	{r4, r5, r7, pc}
 801d7e0:	20000040 	.word	0x20000040
 801d7e4:	08030084 	.word	0x08030084
 801d7e8:	080300ec 	.word	0x080300ec

0801d7ec <265e4cb026b8783377b1f22e25c3b310527be0c4>:
 801d7ec:	b580      	push	{r7, lr}
 801d7ee:	b086      	sub	sp, #24
 801d7f0:	af00      	add	r7, sp, #0
 801d7f2:	4b20      	ldr	r3, [pc, #128]	; (801d874 <265e4cb026b8783377b1f22e25c3b310527be0c4+0x88>)
 801d7f4:	681b      	ldr	r3, [r3, #0]
 801d7f6:	613b      	str	r3, [r7, #16]
 801d7f8:	693b      	ldr	r3, [r7, #16]
 801d7fa:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d7fe:	60fb      	str	r3, [r7, #12]
 801d800:	68fb      	ldr	r3, [r7, #12]
 801d802:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d806:	2b00      	cmp	r3, #0
 801d808:	d105      	bne.n	801d816 <265e4cb026b8783377b1f22e25c3b310527be0c4+0x2a>
 801d80a:	f44f 722c 	mov.w	r2, #688	; 0x2b0
 801d80e:	491a      	ldr	r1, [pc, #104]	; (801d878 <265e4cb026b8783377b1f22e25c3b310527be0c4+0x8c>)
 801d810:	481a      	ldr	r0, [pc, #104]	; (801d87c <265e4cb026b8783377b1f22e25c3b310527be0c4+0x90>)
 801d812:	f7e3 ff79 	bl	8001708 <EXPECT_OnAbortHandler>
 801d816:	f7e8 fc1b 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d81a:	68fb      	ldr	r3, [r7, #12]
 801d81c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d820:	799b      	ldrb	r3, [r3, #6]
 801d822:	2b00      	cmp	r3, #0
 801d824:	d019      	beq.n	801d85a <265e4cb026b8783377b1f22e25c3b310527be0c4+0x6e>
 801d826:	68fb      	ldr	r3, [r7, #12]
 801d828:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d82c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d82e:	799b      	ldrb	r3, [r3, #6]
 801d830:	2b00      	cmp	r3, #0
 801d832:	d012      	beq.n	801d85a <265e4cb026b8783377b1f22e25c3b310527be0c4+0x6e>
 801d834:	68fb      	ldr	r3, [r7, #12]
 801d836:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d83a:	881a      	ldrh	r2, [r3, #0]
 801d83c:	68fb      	ldr	r3, [r7, #12]
 801d83e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d844:	881b      	ldrh	r3, [r3, #0]
 801d846:	429a      	cmp	r2, r3
 801d848:	d107      	bne.n	801d85a <265e4cb026b8783377b1f22e25c3b310527be0c4+0x6e>
 801d84a:	68fb      	ldr	r3, [r7, #12]
 801d84c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d854:	881b      	ldrh	r3, [r3, #0]
 801d856:	82fb      	strh	r3, [r7, #22]
 801d858:	e005      	b.n	801d866 <265e4cb026b8783377b1f22e25c3b310527be0c4+0x7a>
 801d85a:	68fb      	ldr	r3, [r7, #12]
 801d85c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d860:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d862:	881b      	ldrh	r3, [r3, #0]
 801d864:	82fb      	strh	r3, [r7, #22]
 801d866:	f7e8 fc13 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d86a:	8afb      	ldrh	r3, [r7, #22]
 801d86c:	4618      	mov	r0, r3
 801d86e:	3718      	adds	r7, #24
 801d870:	46bd      	mov	sp, r7
 801d872:	bd80      	pop	{r7, pc}
 801d874:	20000040 	.word	0x20000040
 801d878:	08030084 	.word	0x08030084
 801d87c:	080300ec 	.word	0x080300ec

0801d880 <23fc3861a84c8d8f435c2599ea00b6593300a215>:
 801d880:	b580      	push	{r7, lr}
 801d882:	b088      	sub	sp, #32
 801d884:	af00      	add	r7, sp, #0
 801d886:	4b11      	ldr	r3, [pc, #68]	; (801d8cc <23fc3861a84c8d8f435c2599ea00b6593300a215+0x4c>)
 801d888:	681b      	ldr	r3, [r3, #0]
 801d88a:	61fb      	str	r3, [r7, #28]
 801d88c:	69fb      	ldr	r3, [r7, #28]
 801d88e:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d892:	61bb      	str	r3, [r7, #24]
 801d894:	69bb      	ldr	r3, [r7, #24]
 801d896:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d89a:	2b00      	cmp	r3, #0
 801d89c:	d105      	bne.n	801d8aa <23fc3861a84c8d8f435c2599ea00b6593300a215+0x2a>
 801d89e:	f44f 7232 	mov.w	r2, #712	; 0x2c8
 801d8a2:	490b      	ldr	r1, [pc, #44]	; (801d8d0 <23fc3861a84c8d8f435c2599ea00b6593300a215+0x50>)
 801d8a4:	480b      	ldr	r0, [pc, #44]	; (801d8d4 <23fc3861a84c8d8f435c2599ea00b6593300a215+0x54>)
 801d8a6:	f7e3 ff2f 	bl	8001708 <EXPECT_OnAbortHandler>
 801d8aa:	f7e8 fbd1 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d8ae:	69bb      	ldr	r3, [r7, #24]
 801d8b0:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d8b4:	78db      	ldrb	r3, [r3, #3]
 801d8b6:	75fb      	strb	r3, [r7, #23]
 801d8b8:	7dfb      	ldrb	r3, [r7, #23]
 801d8ba:	2b02      	cmp	r3, #2
 801d8bc:	f7e8 fbe8 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d8c0:	7dfb      	ldrb	r3, [r7, #23]
 801d8c2:	4618      	mov	r0, r3
 801d8c4:	3720      	adds	r7, #32
 801d8c6:	46bd      	mov	sp, r7
 801d8c8:	bd80      	pop	{r7, pc}
 801d8ca:	bf00      	nop
 801d8cc:	20000040 	.word	0x20000040
 801d8d0:	08030084 	.word	0x08030084
 801d8d4:	080300ec 	.word	0x080300ec

0801d8d8 <b800951da4b2039f1ee67c6e225564a563003bc0>:
 801d8d8:	b580      	push	{r7, lr}
 801d8da:	b086      	sub	sp, #24
 801d8dc:	af00      	add	r7, sp, #0
 801d8de:	4b10      	ldr	r3, [pc, #64]	; (801d920 <b800951da4b2039f1ee67c6e225564a563003bc0+0x48>)
 801d8e0:	681b      	ldr	r3, [r3, #0]
 801d8e2:	617b      	str	r3, [r7, #20]
 801d8e4:	697b      	ldr	r3, [r7, #20]
 801d8e6:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d8ea:	613b      	str	r3, [r7, #16]
 801d8ec:	693b      	ldr	r3, [r7, #16]
 801d8ee:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d8f2:	2b00      	cmp	r3, #0
 801d8f4:	d105      	bne.n	801d902 <b800951da4b2039f1ee67c6e225564a563003bc0+0x2a>
 801d8f6:	f240 22dd 	movw	r2, #733	; 0x2dd
 801d8fa:	490a      	ldr	r1, [pc, #40]	; (801d924 <b800951da4b2039f1ee67c6e225564a563003bc0+0x4c>)
 801d8fc:	480a      	ldr	r0, [pc, #40]	; (801d928 <b800951da4b2039f1ee67c6e225564a563003bc0+0x50>)
 801d8fe:	f7e3 ff03 	bl	8001708 <EXPECT_OnAbortHandler>
 801d902:	f7e8 fba5 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d906:	693b      	ldr	r3, [r7, #16]
 801d908:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d90c:	791b      	ldrb	r3, [r3, #4]
 801d90e:	73fb      	strb	r3, [r7, #15]
 801d910:	f7e8 fbbe 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801d914:	7bfb      	ldrb	r3, [r7, #15]
 801d916:	4618      	mov	r0, r3
 801d918:	3718      	adds	r7, #24
 801d91a:	46bd      	mov	sp, r7
 801d91c:	bd80      	pop	{r7, pc}
 801d91e:	bf00      	nop
 801d920:	20000040 	.word	0x20000040
 801d924:	08030084 	.word	0x08030084
 801d928:	080300ec 	.word	0x080300ec

0801d92c <ffe29f5c9712609bba4ef23834769dd10ed867f0>:
 801d92c:	b5b0      	push	{r4, r5, r7, lr}
 801d92e:	b0a6      	sub	sp, #152	; 0x98
 801d930:	af00      	add	r7, sp, #0
 801d932:	6078      	str	r0, [r7, #4]
 801d934:	4b9d      	ldr	r3, [pc, #628]	; (801dbac <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x280>)
 801d936:	681b      	ldr	r3, [r3, #0]
 801d938:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 801d93c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 801d940:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801d944:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 801d948:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d94c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d950:	2b00      	cmp	r3, #0
 801d952:	d105      	bne.n	801d960 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x34>
 801d954:	f44f 723b 	mov.w	r2, #748	; 0x2ec
 801d958:	4995      	ldr	r1, [pc, #596]	; (801dbb0 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x284>)
 801d95a:	4896      	ldr	r0, [pc, #600]	; (801dbb4 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x288>)
 801d95c:	f7e3 fed4 	bl	8001708 <EXPECT_OnAbortHandler>
 801d960:	2300      	movs	r3, #0
 801d962:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 801d966:	f7e8 fb73 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801d96a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d96e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d972:	3307      	adds	r3, #7
 801d974:	f107 0474 	add.w	r4, r7, #116	; 0x74
 801d978:	461d      	mov	r5, r3
 801d97a:	6828      	ldr	r0, [r5, #0]
 801d97c:	6869      	ldr	r1, [r5, #4]
 801d97e:	68aa      	ldr	r2, [r5, #8]
 801d980:	68eb      	ldr	r3, [r5, #12]
 801d982:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801d984:	7c2b      	ldrb	r3, [r5, #16]
 801d986:	7023      	strb	r3, [r4, #0]
 801d988:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d98c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d990:	791b      	ldrb	r3, [r3, #4]
 801d992:	f887 308f 	strb.w	r3, [r7, #143]	; 0x8f
 801d996:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d99a:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d99e:	78db      	ldrb	r3, [r3, #3]
 801d9a0:	f887 308e 	strb.w	r3, [r7, #142]	; 0x8e
 801d9a4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d9a8:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d9ac:	791b      	ldrb	r3, [r3, #4]
 801d9ae:	2b02      	cmp	r3, #2
 801d9b0:	d02b      	beq.n	801da0a <ffe29f5c9712609bba4ef23834769dd10ed867f0+0xde>
 801d9b2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d9b6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d9ba:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 801d9be:	2b00      	cmp	r3, #0
 801d9c0:	d009      	beq.n	801d9d6 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0xaa>
 801d9c2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d9c6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d9ca:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 801d9ce:	3a01      	subs	r2, #1
 801d9d0:	b2d2      	uxtb	r2, r2
 801d9d2:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 801d9d6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801d9da:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801d9de:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 801d9e2:	2b00      	cmp	r3, #0
 801d9e4:	d011      	beq.n	801da0a <ffe29f5c9712609bba4ef23834769dd10ed867f0+0xde>
 801d9e6:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 801d9ea:	2b05      	cmp	r3, #5
 801d9ec:	d105      	bne.n	801d9fa <ffe29f5c9712609bba4ef23834769dd10ed867f0+0xce>
 801d9ee:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801d9f2:	2101      	movs	r1, #1
 801d9f4:	4618      	mov	r0, r3
 801d9f6:	f7fd fd45 	bl	801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>
 801d9fa:	2101      	movs	r1, #1
 801d9fc:	2000      	movs	r0, #0
 801d9fe:	f7fd fd41 	bl	801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>
 801da02:	f7e8 fb45 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801da06:	2300      	movs	r3, #0
 801da08:	e0cc      	b.n	801dba4 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x278>
 801da0a:	f7e8 fb41 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801da0e:	f107 0360 	add.w	r3, r7, #96	; 0x60
 801da12:	2200      	movs	r2, #0
 801da14:	601a      	str	r2, [r3, #0]
 801da16:	605a      	str	r2, [r3, #4]
 801da18:	609a      	str	r2, [r3, #8]
 801da1a:	60da      	str	r2, [r3, #12]
 801da1c:	741a      	strb	r2, [r3, #16]
 801da1e:	2302      	movs	r3, #2
 801da20:	f887 3060 	strb.w	r3, [r7, #96]	; 0x60
 801da24:	f107 0360 	add.w	r3, r7, #96	; 0x60
 801da28:	3301      	adds	r3, #1
 801da2a:	4619      	mov	r1, r3
 801da2c:	2000      	movs	r0, #0
 801da2e:	f7f0 fb9f 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801da32:	4603      	mov	r3, r0
 801da34:	f887 3087 	strb.w	r3, [r7, #135]	; 0x87
 801da38:	f897 308f 	ldrb.w	r3, [r7, #143]	; 0x8f
 801da3c:	3b01      	subs	r3, #1
 801da3e:	2b04      	cmp	r3, #4
 801da40:	f200 809d 	bhi.w	801db7e <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x252>
 801da44:	a201      	add	r2, pc, #4	; (adr r2, 801da4c <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x120>)
 801da46:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801da4a:	bf00      	nop
 801da4c:	0801da61 	.word	0x0801da61
 801da50:	0801dae3 	.word	0x0801dae3
 801da54:	0801db21 	.word	0x0801db21
 801da58:	0801db7f 	.word	0x0801db7f
 801da5c:	0801db43 	.word	0x0801db43
 801da60:	2031      	movs	r0, #49	; 0x31
 801da62:	f7f2 faf5 	bl	8010050 <d9cd3de8850ba05653155beecb1d40906820436e>
 801da66:	f8c7 0090 	str.w	r0, [r7, #144]	; 0x90
 801da6a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801da6e:	2b00      	cmp	r3, #0
 801da70:	f000 8087 	beq.w	801db82 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x256>
 801da74:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801da78:	781b      	ldrb	r3, [r3, #0]
 801da7a:	2b50      	cmp	r3, #80	; 0x50
 801da7c:	d11b      	bne.n	801dab6 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x18a>
 801da7e:	f007 ff9d 	bl	80259bc <93f4deb1287f872116dccf0c4dae004ac9b29b84>
 801da82:	4603      	mov	r3, r0
 801da84:	b2db      	uxtb	r3, r3
 801da86:	3b01      	subs	r3, #1
 801da88:	b2db      	uxtb	r3, r3
 801da8a:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 801da8e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801da92:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801da96:	2205      	movs	r2, #5
 801da98:	6879      	ldr	r1, [r7, #4]
 801da9a:	4618      	mov	r0, r3
 801da9c:	f7fe fe90 	bl	801c7c0 <ENDIANNESS_NativeToLittle>
 801daa0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801daa4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801daa8:	3305      	adds	r3, #5
 801daaa:	f107 0147 	add.w	r1, r7, #71	; 0x47
 801daae:	2201      	movs	r2, #1
 801dab0:	4618      	mov	r0, r3
 801dab2:	f7fe fe85 	bl	801c7c0 <ENDIANNESS_NativeToLittle>
 801dab6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801daba:	781b      	ldrb	r3, [r3, #0]
 801dabc:	2b90      	cmp	r3, #144	; 0x90
 801dabe:	d160      	bne.n	801db82 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x256>
 801dac0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801dac4:	68db      	ldr	r3, [r3, #12]
 801dac6:	2b00      	cmp	r3, #0
 801dac8:	d05b      	beq.n	801db82 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x256>
 801daca:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801dace:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801dad2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801dad6:	68da      	ldr	r2, [r3, #12]
 801dad8:	2321      	movs	r3, #33	; 0x21
 801dada:	6879      	ldr	r1, [r7, #4]
 801dadc:	f7f4 ffd8 	bl	8012a90 <ce7cfafa044c34a88028e8cf12995b3096f9f973>
 801dae0:	e04f      	b.n	801db82 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x256>
 801dae2:	f897 3087 	ldrb.w	r3, [r7, #135]	; 0x87
 801dae6:	2b00      	cmp	r3, #0
 801dae8:	d008      	beq.n	801dafc <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x1d0>
 801daea:	f107 0360 	add.w	r3, r7, #96	; 0x60
 801daee:	2131      	movs	r1, #49	; 0x31
 801daf0:	4618      	mov	r0, r3
 801daf2:	f7f2 fc8b 	bl	801040c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f>
 801daf6:	f8c7 0090 	str.w	r0, [r7, #144]	; 0x90
 801dafa:	e005      	b.n	801db08 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x1dc>
 801dafc:	2131      	movs	r1, #49	; 0x31
 801dafe:	2000      	movs	r0, #0
 801db00:	f7f2 fc84 	bl	801040c <b889de2f10cc0917d24c2de3fa3fd08176b8c62f>
 801db04:	f8c7 0090 	str.w	r0, [r7, #144]	; 0x90
 801db08:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801db0c:	2b00      	cmp	r3, #0
 801db0e:	bf14      	ite	ne
 801db10:	2301      	movne	r3, #1
 801db12:	2300      	moveq	r3, #0
 801db14:	b2db      	uxtb	r3, r3
 801db16:	4619      	mov	r1, r3
 801db18:	2000      	movs	r0, #0
 801db1a:	f7fd fcb3 	bl	801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>
 801db1e:	e035      	b.n	801db8c <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x260>
 801db20:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801db24:	4618      	mov	r0, r3
 801db26:	f7ff fbaf 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801db2a:	4603      	mov	r3, r0
 801db2c:	2b00      	cmp	r3, #0
 801db2e:	d12a      	bne.n	801db86 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x25a>
 801db30:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801db34:	2131      	movs	r1, #49	; 0x31
 801db36:	4618      	mov	r0, r3
 801db38:	f7f2 fbba 	bl	80102b0 <e22731f1bc5e11c30d17c816b254bbe1a1e0e9ca>
 801db3c:	f8c7 0090 	str.w	r0, [r7, #144]	; 0x90
 801db40:	e021      	b.n	801db86 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x25a>
 801db42:	f897 308e 	ldrb.w	r3, [r7, #142]	; 0x8e
 801db46:	2b01      	cmp	r3, #1
 801db48:	d11f      	bne.n	801db8a <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x25e>
 801db4a:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801db4e:	2131      	movs	r1, #49	; 0x31
 801db50:	4618      	mov	r0, r3
 801db52:	f7f2 feff 	bl	8010954 <fc07e894741fc85c512f976929ce54659d763792>
 801db56:	f8c7 0090 	str.w	r0, [r7, #144]	; 0x90
 801db5a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801db5e:	2b00      	cmp	r3, #0
 801db60:	d006      	beq.n	801db70 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x244>
 801db62:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801db66:	2101      	movs	r1, #1
 801db68:	4618      	mov	r0, r3
 801db6a:	f7fd fc8b 	bl	801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>
 801db6e:	e00c      	b.n	801db8a <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x25e>
 801db70:	f107 0374 	add.w	r3, r7, #116	; 0x74
 801db74:	2100      	movs	r1, #0
 801db76:	4618      	mov	r0, r3
 801db78:	f7fd fc84 	bl	801b484 <9856fe7f99ddec4cee04e781ec13e80fb35fb8ed>
 801db7c:	e005      	b.n	801db8a <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x25e>
 801db7e:	bf00      	nop
 801db80:	e004      	b.n	801db8c <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x260>
 801db82:	bf00      	nop
 801db84:	e002      	b.n	801db8c <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x260>
 801db86:	bf00      	nop
 801db88:	e000      	b.n	801db8c <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x260>
 801db8a:	bf00      	nop
 801db8c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801db90:	2b00      	cmp	r3, #0
 801db92:	d005      	beq.n	801dba0 <ffe29f5c9712609bba4ef23834769dd10ed867f0+0x274>
 801db94:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801db98:	f897 208f 	ldrb.w	r2, [r7, #143]	; 0x8f
 801db9c:	f883 209e 	strb.w	r2, [r3, #158]	; 0x9e
 801dba0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801dba4:	4618      	mov	r0, r3
 801dba6:	3798      	adds	r7, #152	; 0x98
 801dba8:	46bd      	mov	sp, r7
 801dbaa:	bdb0      	pop	{r4, r5, r7, pc}
 801dbac:	20000040 	.word	0x20000040
 801dbb0:	08030084 	.word	0x08030084
 801dbb4:	080300ec 	.word	0x080300ec

0801dbb8 <132157aa3fd4bf1277c4734fe270cbaef9b35a98>:
 801dbb8:	b580      	push	{r7, lr}
 801dbba:	b086      	sub	sp, #24
 801dbbc:	af00      	add	r7, sp, #0
 801dbbe:	4b10      	ldr	r3, [pc, #64]	; (801dc00 <132157aa3fd4bf1277c4734fe270cbaef9b35a98+0x48>)
 801dbc0:	681b      	ldr	r3, [r3, #0]
 801dbc2:	617b      	str	r3, [r7, #20]
 801dbc4:	697b      	ldr	r3, [r7, #20]
 801dbc6:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801dbca:	613b      	str	r3, [r7, #16]
 801dbcc:	693b      	ldr	r3, [r7, #16]
 801dbce:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dbd2:	2b00      	cmp	r3, #0
 801dbd4:	d105      	bne.n	801dbe2 <132157aa3fd4bf1277c4734fe270cbaef9b35a98+0x2a>
 801dbd6:	f44f 7256 	mov.w	r2, #856	; 0x358
 801dbda:	490a      	ldr	r1, [pc, #40]	; (801dc04 <132157aa3fd4bf1277c4734fe270cbaef9b35a98+0x4c>)
 801dbdc:	480a      	ldr	r0, [pc, #40]	; (801dc08 <132157aa3fd4bf1277c4734fe270cbaef9b35a98+0x50>)
 801dbde:	f7e3 fd93 	bl	8001708 <EXPECT_OnAbortHandler>
 801dbe2:	f7e8 fa35 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801dbe6:	693b      	ldr	r3, [r7, #16]
 801dbe8:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dbec:	789b      	ldrb	r3, [r3, #2]
 801dbee:	73fb      	strb	r3, [r7, #15]
 801dbf0:	f7e8 fa4e 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801dbf4:	7bfb      	ldrb	r3, [r7, #15]
 801dbf6:	4618      	mov	r0, r3
 801dbf8:	3718      	adds	r7, #24
 801dbfa:	46bd      	mov	sp, r7
 801dbfc:	bd80      	pop	{r7, pc}
 801dbfe:	bf00      	nop
 801dc00:	20000040 	.word	0x20000040
 801dc04:	08030084 	.word	0x08030084
 801dc08:	080300ec 	.word	0x080300ec

0801dc0c <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf>:
 801dc0c:	b580      	push	{r7, lr}
 801dc0e:	b086      	sub	sp, #24
 801dc10:	af00      	add	r7, sp, #0
 801dc12:	4b10      	ldr	r3, [pc, #64]	; (801dc54 <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf+0x48>)
 801dc14:	681b      	ldr	r3, [r3, #0]
 801dc16:	617b      	str	r3, [r7, #20]
 801dc18:	697b      	ldr	r3, [r7, #20]
 801dc1a:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801dc1e:	613b      	str	r3, [r7, #16]
 801dc20:	693b      	ldr	r3, [r7, #16]
 801dc22:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dc26:	2b00      	cmp	r3, #0
 801dc28:	d105      	bne.n	801dc36 <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf+0x2a>
 801dc2a:	f44f 725a 	mov.w	r2, #872	; 0x368
 801dc2e:	490a      	ldr	r1, [pc, #40]	; (801dc58 <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf+0x4c>)
 801dc30:	480a      	ldr	r0, [pc, #40]	; (801dc5c <0be11d8c56927ea5d7f03e6fc26e8da8ab6824cf+0x50>)
 801dc32:	f7e3 fd69 	bl	8001708 <EXPECT_OnAbortHandler>
 801dc36:	f7e8 fa0b 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801dc3a:	693b      	ldr	r3, [r7, #16]
 801dc3c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dc40:	881b      	ldrh	r3, [r3, #0]
 801dc42:	81fb      	strh	r3, [r7, #14]
 801dc44:	f7e8 fa24 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801dc48:	89fb      	ldrh	r3, [r7, #14]
 801dc4a:	4618      	mov	r0, r3
 801dc4c:	3718      	adds	r7, #24
 801dc4e:	46bd      	mov	sp, r7
 801dc50:	bd80      	pop	{r7, pc}
 801dc52:	bf00      	nop
 801dc54:	20000040 	.word	0x20000040
 801dc58:	08030084 	.word	0x08030084
 801dc5c:	080300ec 	.word	0x080300ec

0801dc60 <e1a4ca54296e83210dff3006a7ef95c89a4943bb>:
 801dc60:	b580      	push	{r7, lr}
 801dc62:	b090      	sub	sp, #64	; 0x40
 801dc64:	af00      	add	r7, sp, #0
 801dc66:	6078      	str	r0, [r7, #4]
 801dc68:	6039      	str	r1, [r7, #0]
 801dc6a:	4b7e      	ldr	r3, [pc, #504]	; (801de64 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x204>)
 801dc6c:	681b      	ldr	r3, [r3, #0]
 801dc6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 801dc70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801dc72:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801dc76:	62bb      	str	r3, [r7, #40]	; 0x28
 801dc78:	2300      	movs	r3, #0
 801dc7a:	627b      	str	r3, [r7, #36]	; 0x24
 801dc7c:	2300      	movs	r3, #0
 801dc7e:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 801dc82:	2301      	movs	r3, #1
 801dc84:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 801dc88:	f7f0 fe4e 	bl	800e928 <a72cb89288ba405a2fc975c124a720574840c109>
 801dc8c:	4603      	mov	r3, r0
 801dc8e:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 801dc92:	2300      	movs	r3, #0
 801dc94:	63bb      	str	r3, [r7, #56]	; 0x38
 801dc96:	f7e8 f9db 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801dc9a:	2219      	movs	r2, #25
 801dc9c:	2100      	movs	r1, #0
 801dc9e:	6878      	ldr	r0, [r7, #4]
 801dca0:	f00d fa2a 	bl	802b0f8 <memset>
 801dca4:	2300      	movs	r3, #0
 801dca6:	637b      	str	r3, [r7, #52]	; 0x34
 801dca8:	e0b8      	b.n	801de1c <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1bc>
 801dcaa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801dcac:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dcae:	4613      	mov	r3, r2
 801dcb0:	009b      	lsls	r3, r3, #2
 801dcb2:	4413      	add	r3, r2
 801dcb4:	00db      	lsls	r3, r3, #3
 801dcb6:	440b      	add	r3, r1
 801dcb8:	3304      	adds	r3, #4
 801dcba:	781b      	ldrb	r3, [r3, #0]
 801dcbc:	2b05      	cmp	r3, #5
 801dcbe:	f040 80aa 	bne.w	801de16 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1b6>
 801dcc2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801dcc4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dcc6:	4613      	mov	r3, r2
 801dcc8:	009b      	lsls	r3, r3, #2
 801dcca:	4413      	add	r3, r2
 801dccc:	00db      	lsls	r3, r3, #3
 801dcce:	440b      	add	r3, r1
 801dcd0:	3303      	adds	r3, #3
 801dcd2:	781b      	ldrb	r3, [r3, #0]
 801dcd4:	2b01      	cmp	r3, #1
 801dcd6:	f040 809e 	bne.w	801de16 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1b6>
 801dcda:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dcdc:	4613      	mov	r3, r2
 801dcde:	009b      	lsls	r3, r3, #2
 801dce0:	4413      	add	r3, r2
 801dce2:	00db      	lsls	r3, r3, #3
 801dce4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801dce6:	4413      	add	r3, r2
 801dce8:	3307      	adds	r3, #7
 801dcea:	4619      	mov	r1, r3
 801dcec:	6838      	ldr	r0, [r7, #0]
 801dcee:	f7f1 fb1d 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 801dcf2:	4603      	mov	r3, r0
 801dcf4:	2b00      	cmp	r3, #0
 801dcf6:	f000 808e 	beq.w	801de16 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1b6>
 801dcfa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801dcfc:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dcfe:	4613      	mov	r3, r2
 801dd00:	009b      	lsls	r3, r3, #2
 801dd02:	4413      	add	r3, r2
 801dd04:	00db      	lsls	r3, r3, #3
 801dd06:	440b      	add	r3, r1
 801dd08:	3318      	adds	r3, #24
 801dd0a:	881b      	ldrh	r3, [r3, #0]
 801dd0c:	2b32      	cmp	r3, #50	; 0x32
 801dd0e:	f240 8082 	bls.w	801de16 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1b6>
 801dd12:	2301      	movs	r3, #1
 801dd14:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 801dd18:	2300      	movs	r3, #0
 801dd1a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801dd1e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801dd20:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dd22:	4613      	mov	r3, r2
 801dd24:	009b      	lsls	r3, r3, #2
 801dd26:	4413      	add	r3, r2
 801dd28:	00db      	lsls	r3, r3, #3
 801dd2a:	440b      	add	r3, r1
 801dd2c:	331a      	adds	r3, #26
 801dd2e:	881b      	ldrh	r3, [r3, #0]
 801dd30:	461a      	mov	r2, r3
 801dd32:	2364      	movs	r3, #100	; 0x64
 801dd34:	fb03 f102 	mul.w	r1, r3, r2
 801dd38:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801dd3a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801dd3c:	4613      	mov	r3, r2
 801dd3e:	009b      	lsls	r3, r3, #2
 801dd40:	4413      	add	r3, r2
 801dd42:	00db      	lsls	r3, r3, #3
 801dd44:	4403      	add	r3, r0
 801dd46:	3318      	adds	r3, #24
 801dd48:	881b      	ldrh	r3, [r3, #0]
 801dd4a:	fbb1 f3f3 	udiv	r3, r1, r3
 801dd4e:	627b      	str	r3, [r7, #36]	; 0x24
 801dd50:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801dd54:	2b03      	cmp	r3, #3
 801dd56:	d810      	bhi.n	801dd7a <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x11a>
 801dd58:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801dd5a:	2b4f      	cmp	r3, #79	; 0x4f
 801dd5c:	d813      	bhi.n	801dd86 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x126>
 801dd5e:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801dd62:	3301      	adds	r3, #1
 801dd64:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 801dd68:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801dd6c:	4618      	mov	r0, r3
 801dd6e:	f7f0 fe05 	bl	800e97c <201075ddfc12155ac10a81b74045472dd935ece2>
 801dd72:	2301      	movs	r3, #1
 801dd74:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801dd78:	e005      	b.n	801dd86 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x126>
 801dd7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801dd7c:	2b27      	cmp	r3, #39	; 0x27
 801dd7e:	d802      	bhi.n	801dd86 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x126>
 801dd80:	2301      	movs	r3, #1
 801dd82:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801dd86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801dd88:	2b4f      	cmp	r3, #79	; 0x4f
 801dd8a:	d802      	bhi.n	801dd92 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x132>
 801dd8c:	2300      	movs	r3, #0
 801dd8e:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 801dd92:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801dd96:	2b00      	cmp	r3, #0
 801dd98:	d03d      	beq.n	801de16 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1b6>
 801dd9a:	4a33      	ldr	r2, [pc, #204]	; (801de68 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x208>)
 801dd9c:	f107 0314 	add.w	r3, r7, #20
 801dda0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801dda4:	e883 0003 	stmia.w	r3, {r0, r1}
 801dda8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801ddaa:	4a30      	ldr	r2, [pc, #192]	; (801de6c <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x20c>)
 801ddac:	f107 0114 	add.w	r1, r7, #20
 801ddb0:	c903      	ldmia	r1, {r0, r1}
 801ddb2:	f7f7 fa29 	bl	8015208 <LOGGER_PrintLine>
 801ddb6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801ddb8:	4613      	mov	r3, r2
 801ddba:	009b      	lsls	r3, r3, #2
 801ddbc:	4413      	add	r3, r2
 801ddbe:	687a      	ldr	r2, [r7, #4]
 801ddc0:	4413      	add	r3, r2
 801ddc2:	2201      	movs	r2, #1
 801ddc4:	701a      	strb	r2, [r3, #0]
 801ddc6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801ddc8:	4613      	mov	r3, r2
 801ddca:	009b      	lsls	r3, r3, #2
 801ddcc:	4413      	add	r3, r2
 801ddce:	687a      	ldr	r2, [r7, #4]
 801ddd0:	18d1      	adds	r1, r2, r3
 801ddd2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801ddd4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801ddd6:	4613      	mov	r3, r2
 801ddd8:	009b      	lsls	r3, r3, #2
 801ddda:	4413      	add	r3, r2
 801dddc:	00db      	lsls	r3, r3, #3
 801ddde:	4403      	add	r3, r0
 801dde0:	881b      	ldrh	r3, [r3, #0]
 801dde2:	f8a1 3001 	strh.w	r3, [r1, #1]
 801dde6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801dde8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801ddea:	4613      	mov	r3, r2
 801ddec:	009b      	lsls	r3, r3, #2
 801ddee:	4413      	add	r3, r2
 801ddf0:	00db      	lsls	r3, r3, #3
 801ddf2:	440b      	add	r3, r1
 801ddf4:	3302      	adds	r3, #2
 801ddf6:	7819      	ldrb	r1, [r3, #0]
 801ddf8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 801ddfa:	4613      	mov	r3, r2
 801ddfc:	009b      	lsls	r3, r3, #2
 801ddfe:	4413      	add	r3, r2
 801de00:	687a      	ldr	r2, [r7, #4]
 801de02:	4413      	add	r3, r2
 801de04:	460a      	mov	r2, r1
 801de06:	f8a3 2003 	strh.w	r2, [r3, #3]
 801de0a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801de0c:	3301      	adds	r3, #1
 801de0e:	63bb      	str	r3, [r7, #56]	; 0x38
 801de10:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801de12:	2b04      	cmp	r3, #4
 801de14:	d807      	bhi.n	801de26 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1c6>
 801de16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801de18:	3301      	adds	r3, #1
 801de1a:	637b      	str	r3, [r7, #52]	; 0x34
 801de1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801de1e:	2b0c      	cmp	r3, #12
 801de20:	f67f af43 	bls.w	801dcaa <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x4a>
 801de24:	e000      	b.n	801de28 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1c8>
 801de26:	bf00      	nop
 801de28:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 801de2c:	2b00      	cmp	r3, #0
 801de2e:	d011      	beq.n	801de54 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1f4>
 801de30:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 801de34:	2b00      	cmp	r3, #0
 801de36:	d00d      	beq.n	801de54 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1f4>
 801de38:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801de3c:	2b00      	cmp	r3, #0
 801de3e:	d009      	beq.n	801de54 <e1a4ca54296e83210dff3006a7ef95c89a4943bb+0x1f4>
 801de40:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801de44:	3b01      	subs	r3, #1
 801de46:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 801de4a:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 801de4e:	4618      	mov	r0, r3
 801de50:	f7f0 fd94 	bl	800e97c <201075ddfc12155ac10a81b74045472dd935ece2>
 801de54:	f7e8 f91c 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801de58:	687b      	ldr	r3, [r7, #4]
 801de5a:	781b      	ldrb	r3, [r3, #0]
 801de5c:	4618      	mov	r0, r3
 801de5e:	3740      	adds	r7, #64	; 0x40
 801de60:	46bd      	mov	sp, r7
 801de62:	bd80      	pop	{r7, pc}
 801de64:	20000040 	.word	0x20000040
 801de68:	08030128 	.word	0x08030128
 801de6c:	08030104 	.word	0x08030104

0801de70 <SCHEDULE_GetCellsCount>:
 801de70:	b580      	push	{r7, lr}
 801de72:	b084      	sub	sp, #16
 801de74:	af00      	add	r7, sp, #0
 801de76:	4b13      	ldr	r3, [pc, #76]	; (801dec4 <SCHEDULE_GetCellsCount+0x54>)
 801de78:	681b      	ldr	r3, [r3, #0]
 801de7a:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801de7e:	607b      	str	r3, [r7, #4]
 801de80:	2300      	movs	r3, #0
 801de82:	60fb      	str	r3, [r7, #12]
 801de84:	2300      	movs	r3, #0
 801de86:	60bb      	str	r3, [r7, #8]
 801de88:	e014      	b.n	801deb4 <SCHEDULE_GetCellsCount+0x44>
 801de8a:	f7e8 f8e1 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801de8e:	6879      	ldr	r1, [r7, #4]
 801de90:	68ba      	ldr	r2, [r7, #8]
 801de92:	4613      	mov	r3, r2
 801de94:	009b      	lsls	r3, r3, #2
 801de96:	4413      	add	r3, r2
 801de98:	00db      	lsls	r3, r3, #3
 801de9a:	440b      	add	r3, r1
 801de9c:	3303      	adds	r3, #3
 801de9e:	781b      	ldrb	r3, [r3, #0]
 801dea0:	2b00      	cmp	r3, #0
 801dea2:	d002      	beq.n	801deaa <SCHEDULE_GetCellsCount+0x3a>
 801dea4:	68fb      	ldr	r3, [r7, #12]
 801dea6:	3301      	adds	r3, #1
 801dea8:	60fb      	str	r3, [r7, #12]
 801deaa:	f7e8 f8f1 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801deae:	68bb      	ldr	r3, [r7, #8]
 801deb0:	3301      	adds	r3, #1
 801deb2:	60bb      	str	r3, [r7, #8]
 801deb4:	68bb      	ldr	r3, [r7, #8]
 801deb6:	2b0c      	cmp	r3, #12
 801deb8:	d9e7      	bls.n	801de8a <SCHEDULE_GetCellsCount+0x1a>
 801deba:	68fb      	ldr	r3, [r7, #12]
 801debc:	4618      	mov	r0, r3
 801debe:	3710      	adds	r7, #16
 801dec0:	46bd      	mov	sp, r7
 801dec2:	bd80      	pop	{r7, pc}
 801dec4:	20000040 	.word	0x20000040

0801dec8 <c44994d9507f8e8896ef91cc0ed0c665b4e74466>:
 801dec8:	b580      	push	{r7, lr}
 801deca:	b086      	sub	sp, #24
 801decc:	af00      	add	r7, sp, #0
 801dece:	6078      	str	r0, [r7, #4]
 801ded0:	4b10      	ldr	r3, [pc, #64]	; (801df14 <c44994d9507f8e8896ef91cc0ed0c665b4e74466+0x4c>)
 801ded2:	681b      	ldr	r3, [r3, #0]
 801ded4:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801ded8:	617b      	str	r3, [r7, #20]
 801deda:	697b      	ldr	r3, [r7, #20]
 801dedc:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dee0:	2b00      	cmp	r3, #0
 801dee2:	d105      	bne.n	801def0 <c44994d9507f8e8896ef91cc0ed0c665b4e74466+0x28>
 801dee4:	f44f 7272 	mov.w	r2, #968	; 0x3c8
 801dee8:	490b      	ldr	r1, [pc, #44]	; (801df18 <c44994d9507f8e8896ef91cc0ed0c665b4e74466+0x50>)
 801deea:	480c      	ldr	r0, [pc, #48]	; (801df1c <c44994d9507f8e8896ef91cc0ed0c665b4e74466+0x54>)
 801deec:	f7e3 fc0c 	bl	8001708 <EXPECT_OnAbortHandler>
 801def0:	f7e8 f8ae 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801def4:	697b      	ldr	r3, [r7, #20]
 801def6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801defa:	687a      	ldr	r2, [r7, #4]
 801defc:	331c      	adds	r3, #28
 801defe:	6810      	ldr	r0, [r2, #0]
 801df00:	6018      	str	r0, [r3, #0]
 801df02:	7912      	ldrb	r2, [r2, #4]
 801df04:	711a      	strb	r2, [r3, #4]
 801df06:	f7e8 f8c3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801df0a:	bf00      	nop
 801df0c:	3718      	adds	r7, #24
 801df0e:	46bd      	mov	sp, r7
 801df10:	bd80      	pop	{r7, pc}
 801df12:	bf00      	nop
 801df14:	20000040 	.word	0x20000040
 801df18:	08030084 	.word	0x08030084
 801df1c:	080300ec 	.word	0x080300ec

0801df20 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f>:
 801df20:	b580      	push	{r7, lr}
 801df22:	b088      	sub	sp, #32
 801df24:	af00      	add	r7, sp, #0
 801df26:	6078      	str	r0, [r7, #4]
 801df28:	460b      	mov	r3, r1
 801df2a:	70fb      	strb	r3, [r7, #3]
 801df2c:	4613      	mov	r3, r2
 801df2e:	70bb      	strb	r3, [r7, #2]
 801df30:	4b50      	ldr	r3, [pc, #320]	; (801e074 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x154>)
 801df32:	681b      	ldr	r3, [r3, #0]
 801df34:	61fb      	str	r3, [r7, #28]
 801df36:	69fb      	ldr	r3, [r7, #28]
 801df38:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801df3c:	61bb      	str	r3, [r7, #24]
 801df3e:	69bb      	ldr	r3, [r7, #24]
 801df40:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801df44:	2b00      	cmp	r3, #0
 801df46:	d105      	bne.n	801df54 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x34>
 801df48:	f240 32d7 	movw	r2, #983	; 0x3d7
 801df4c:	494a      	ldr	r1, [pc, #296]	; (801e078 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x158>)
 801df4e:	484b      	ldr	r0, [pc, #300]	; (801e07c <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x15c>)
 801df50:	f7e3 fbda 	bl	8001708 <EXPECT_OnAbortHandler>
 801df54:	78fb      	ldrb	r3, [r7, #3]
 801df56:	f083 0301 	eor.w	r3, r3, #1
 801df5a:	b2db      	uxtb	r3, r3
 801df5c:	2b00      	cmp	r3, #0
 801df5e:	d012      	beq.n	801df86 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x66>
 801df60:	69bb      	ldr	r3, [r7, #24]
 801df62:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801df66:	791b      	ldrb	r3, [r3, #4]
 801df68:	2b05      	cmp	r3, #5
 801df6a:	d10c      	bne.n	801df86 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x66>
 801df6c:	69bb      	ldr	r3, [r7, #24]
 801df6e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801df72:	3307      	adds	r3, #7
 801df74:	4618      	mov	r0, r3
 801df76:	f7f1 f845 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 801df7a:	e9c7 0104 	strd	r0, r1, [r7, #16]
 801df7e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 801df82:	f00a fe3d 	bl	8028c00 <e097653d016fa9f6f38b73037603a15c791aa10d>
 801df86:	f7e8 f863 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801df8a:	69bb      	ldr	r3, [r7, #24]
 801df8c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801df90:	8b1a      	ldrh	r2, [r3, #24]
 801df92:	3201      	adds	r2, #1
 801df94:	b292      	uxth	r2, r2
 801df96:	831a      	strh	r2, [r3, #24]
 801df98:	78fb      	ldrb	r3, [r7, #3]
 801df9a:	2b00      	cmp	r3, #0
 801df9c:	d006      	beq.n	801dfac <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x8c>
 801df9e:	69bb      	ldr	r3, [r7, #24]
 801dfa0:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfa4:	8b5a      	ldrh	r2, [r3, #26]
 801dfa6:	3201      	adds	r2, #1
 801dfa8:	b292      	uxth	r2, r2
 801dfaa:	835a      	strh	r2, [r3, #26]
 801dfac:	69bb      	ldr	r3, [r7, #24]
 801dfae:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfb2:	8b1b      	ldrh	r3, [r3, #24]
 801dfb4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dfb8:	4293      	cmp	r3, r2
 801dfba:	d113      	bne.n	801dfe4 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0xc4>
 801dfbc:	69bb      	ldr	r3, [r7, #24]
 801dfbe:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfc2:	8b1a      	ldrh	r2, [r3, #24]
 801dfc4:	69bb      	ldr	r3, [r7, #24]
 801dfc6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfca:	0852      	lsrs	r2, r2, #1
 801dfcc:	b292      	uxth	r2, r2
 801dfce:	831a      	strh	r2, [r3, #24]
 801dfd0:	69bb      	ldr	r3, [r7, #24]
 801dfd2:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfd6:	8b5a      	ldrh	r2, [r3, #26]
 801dfd8:	69bb      	ldr	r3, [r7, #24]
 801dfda:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfde:	0852      	lsrs	r2, r2, #1
 801dfe0:	b292      	uxth	r2, r2
 801dfe2:	835a      	strh	r2, [r3, #26]
 801dfe4:	69bb      	ldr	r3, [r7, #24]
 801dfe6:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801dfea:	687a      	ldr	r2, [r7, #4]
 801dfec:	331c      	adds	r3, #28
 801dfee:	6810      	ldr	r0, [r2, #0]
 801dff0:	6018      	str	r0, [r3, #0]
 801dff2:	7912      	ldrb	r2, [r2, #4]
 801dff4:	711a      	strb	r2, [r3, #4]
 801dff6:	78fb      	ldrb	r3, [r7, #3]
 801dff8:	2b00      	cmp	r3, #0
 801dffa:	d102      	bne.n	801e002 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0xe2>
 801dffc:	78bb      	ldrb	r3, [r7, #2]
 801dffe:	2b00      	cmp	r3, #0
 801e000:	d00c      	beq.n	801e01c <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0xfc>
 801e002:	69bb      	ldr	r3, [r7, #24]
 801e004:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e008:	2200      	movs	r2, #0
 801e00a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e00e:	69bb      	ldr	r3, [r7, #24]
 801e010:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e014:	2200      	movs	r2, #0
 801e016:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 801e01a:	e025      	b.n	801e068 <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x148>
 801e01c:	69bb      	ldr	r3, [r7, #24]
 801e01e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e022:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 801e026:	2b03      	cmp	r3, #3
 801e028:	d808      	bhi.n	801e03c <aeb5f65936f4e5306bdeeda4df8abd03e176b12f+0x11c>
 801e02a:	69bb      	ldr	r3, [r7, #24]
 801e02c:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e030:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 801e034:	3201      	adds	r2, #1
 801e036:	b2d2      	uxtb	r2, r2
 801e038:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e03c:	f7f3 ff0c 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801e040:	4603      	mov	r3, r0
 801e042:	461a      	mov	r2, r3
 801e044:	69bb      	ldr	r3, [r7, #24]
 801e046:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e04a:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 801e04e:	4619      	mov	r1, r3
 801e050:	2301      	movs	r3, #1
 801e052:	408b      	lsls	r3, r1
 801e054:	3b01      	subs	r3, #1
 801e056:	b29b      	uxth	r3, r3
 801e058:	4013      	ands	r3, r2
 801e05a:	b29a      	uxth	r2, r3
 801e05c:	69bb      	ldr	r3, [r7, #24]
 801e05e:	f8d3 3208 	ldr.w	r3, [r3, #520]	; 0x208
 801e062:	b2d2      	uxtb	r2, r2
 801e064:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 801e068:	f7e8 f812 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801e06c:	bf00      	nop
 801e06e:	3720      	adds	r7, #32
 801e070:	46bd      	mov	sp, r7
 801e072:	bd80      	pop	{r7, pc}
 801e074:	20000040 	.word	0x20000040
 801e078:	08030084 	.word	0x08030084
 801e07c:	080300ec 	.word	0x080300ec

0801e080 <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25>:
 801e080:	b580      	push	{r7, lr}
 801e082:	b084      	sub	sp, #16
 801e084:	af00      	add	r7, sp, #0
 801e086:	4b23      	ldr	r3, [pc, #140]	; (801e114 <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x94>)
 801e088:	681b      	ldr	r3, [r3, #0]
 801e08a:	607b      	str	r3, [r7, #4]
 801e08c:	687b      	ldr	r3, [r7, #4]
 801e08e:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801e092:	603b      	str	r3, [r7, #0]
 801e094:	683b      	ldr	r3, [r7, #0]
 801e096:	f8b3 320c 	ldrh.w	r3, [r3, #524]	; 0x20c
 801e09a:	81fb      	strh	r3, [r7, #14]
 801e09c:	f7e7 ffd8 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801e0a0:	2300      	movs	r3, #0
 801e0a2:	60bb      	str	r3, [r7, #8]
 801e0a4:	e02c      	b.n	801e100 <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x80>
 801e0a6:	6839      	ldr	r1, [r7, #0]
 801e0a8:	68ba      	ldr	r2, [r7, #8]
 801e0aa:	4613      	mov	r3, r2
 801e0ac:	009b      	lsls	r3, r3, #2
 801e0ae:	4413      	add	r3, r2
 801e0b0:	00db      	lsls	r3, r3, #3
 801e0b2:	440b      	add	r3, r1
 801e0b4:	3304      	adds	r3, #4
 801e0b6:	781b      	ldrb	r3, [r3, #0]
 801e0b8:	2b05      	cmp	r3, #5
 801e0ba:	d11e      	bne.n	801e0fa <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x7a>
 801e0bc:	6839      	ldr	r1, [r7, #0]
 801e0be:	68ba      	ldr	r2, [r7, #8]
 801e0c0:	4613      	mov	r3, r2
 801e0c2:	009b      	lsls	r3, r3, #2
 801e0c4:	4413      	add	r3, r2
 801e0c6:	00db      	lsls	r3, r3, #3
 801e0c8:	440b      	add	r3, r1
 801e0ca:	3303      	adds	r3, #3
 801e0cc:	781b      	ldrb	r3, [r3, #0]
 801e0ce:	2b01      	cmp	r3, #1
 801e0d0:	d113      	bne.n	801e0fa <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x7a>
 801e0d2:	6839      	ldr	r1, [r7, #0]
 801e0d4:	68ba      	ldr	r2, [r7, #8]
 801e0d6:	4613      	mov	r3, r2
 801e0d8:	009b      	lsls	r3, r3, #2
 801e0da:	4413      	add	r3, r2
 801e0dc:	00db      	lsls	r3, r3, #3
 801e0de:	440b      	add	r3, r1
 801e0e0:	881b      	ldrh	r3, [r3, #0]
 801e0e2:	89fa      	ldrh	r2, [r7, #14]
 801e0e4:	429a      	cmp	r2, r3
 801e0e6:	d908      	bls.n	801e0fa <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x7a>
 801e0e8:	6839      	ldr	r1, [r7, #0]
 801e0ea:	68ba      	ldr	r2, [r7, #8]
 801e0ec:	4613      	mov	r3, r2
 801e0ee:	009b      	lsls	r3, r3, #2
 801e0f0:	4413      	add	r3, r2
 801e0f2:	00db      	lsls	r3, r3, #3
 801e0f4:	440b      	add	r3, r1
 801e0f6:	881b      	ldrh	r3, [r3, #0]
 801e0f8:	81fb      	strh	r3, [r7, #14]
 801e0fa:	68bb      	ldr	r3, [r7, #8]
 801e0fc:	3301      	adds	r3, #1
 801e0fe:	60bb      	str	r3, [r7, #8]
 801e100:	68bb      	ldr	r3, [r7, #8]
 801e102:	2b0c      	cmp	r3, #12
 801e104:	d9cf      	bls.n	801e0a6 <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25+0x26>
 801e106:	f7e7 ffc3 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801e10a:	89fb      	ldrh	r3, [r7, #14]
 801e10c:	4618      	mov	r0, r3
 801e10e:	3710      	adds	r7, #16
 801e110:	46bd      	mov	sp, r7
 801e112:	bd80      	pop	{r7, pc}
 801e114:	20000040 	.word	0x20000040

0801e118 <1f2424ac27c2cb6c4102eeae83b319f761410057>:
 801e118:	b580      	push	{r7, lr}
 801e11a:	b08a      	sub	sp, #40	; 0x28
 801e11c:	af00      	add	r7, sp, #0
 801e11e:	607b      	str	r3, [r7, #4]
 801e120:	4603      	mov	r3, r0
 801e122:	81fb      	strh	r3, [r7, #14]
 801e124:	460b      	mov	r3, r1
 801e126:	81bb      	strh	r3, [r7, #12]
 801e128:	4613      	mov	r3, r2
 801e12a:	72fb      	strb	r3, [r7, #11]
 801e12c:	4b19      	ldr	r3, [pc, #100]	; (801e194 <1f2424ac27c2cb6c4102eeae83b319f761410057+0x7c>)
 801e12e:	681b      	ldr	r3, [r3, #0]
 801e130:	61fb      	str	r3, [r7, #28]
 801e132:	69fb      	ldr	r3, [r7, #28]
 801e134:	f503 7343 	add.w	r3, r3, #780	; 0x30c
 801e138:	61bb      	str	r3, [r7, #24]
 801e13a:	f7e7 ff89 	bl	8006050 <EMBENET_CRITICAL_SECTION_Enter>
 801e13e:	2300      	movs	r3, #0
 801e140:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e144:	69bb      	ldr	r3, [r7, #24]
 801e146:	623b      	str	r3, [r7, #32]
 801e148:	6a3b      	ldr	r3, [r7, #32]
 801e14a:	78db      	ldrb	r3, [r3, #3]
 801e14c:	7afa      	ldrb	r2, [r7, #11]
 801e14e:	429a      	cmp	r2, r3
 801e150:	d110      	bne.n	801e174 <1f2424ac27c2cb6c4102eeae83b319f761410057+0x5c>
 801e152:	6a3b      	ldr	r3, [r7, #32]
 801e154:	881b      	ldrh	r3, [r3, #0]
 801e156:	89ba      	ldrh	r2, [r7, #12]
 801e158:	429a      	cmp	r2, r3
 801e15a:	d80b      	bhi.n	801e174 <1f2424ac27c2cb6c4102eeae83b319f761410057+0x5c>
 801e15c:	6a3b      	ldr	r3, [r7, #32]
 801e15e:	881a      	ldrh	r2, [r3, #0]
 801e160:	687b      	ldr	r3, [r7, #4]
 801e162:	801a      	strh	r2, [r3, #0]
 801e164:	6a3b      	ldr	r3, [r7, #32]
 801e166:	789a      	ldrb	r2, [r3, #2]
 801e168:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801e16a:	701a      	strb	r2, [r3, #0]
 801e16c:	2301      	movs	r3, #1
 801e16e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e172:	e006      	b.n	801e182 <1f2424ac27c2cb6c4102eeae83b319f761410057+0x6a>
 801e174:	6a3b      	ldr	r3, [r7, #32]
 801e176:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e178:	623b      	str	r3, [r7, #32]
 801e17a:	69bb      	ldr	r3, [r7, #24]
 801e17c:	6a3a      	ldr	r2, [r7, #32]
 801e17e:	429a      	cmp	r2, r3
 801e180:	d1e2      	bne.n	801e148 <1f2424ac27c2cb6c4102eeae83b319f761410057+0x30>
 801e182:	f7e7 ff85 	bl	8006090 <EMBENET_CRITICAL_SECTION_Exit>
 801e186:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e18a:	4618      	mov	r0, r3
 801e18c:	3728      	adds	r7, #40	; 0x28
 801e18e:	46bd      	mov	sp, r7
 801e190:	bd80      	pop	{r7, pc}
 801e192:	bf00      	nop
 801e194:	20000040 	.word	0x20000040

0801e198 <f28a7f5ab7578008c51f3fac008d0f632d1bdb54>:
 801e198:	b580      	push	{r7, lr}
 801e19a:	b08c      	sub	sp, #48	; 0x30
 801e19c:	af00      	add	r7, sp, #0
 801e19e:	6078      	str	r0, [r7, #4]
 801e1a0:	687b      	ldr	r3, [r7, #4]
 801e1a2:	4618      	mov	r0, r3
 801e1a4:	2328      	movs	r3, #40	; 0x28
 801e1a6:	461a      	mov	r2, r3
 801e1a8:	2100      	movs	r1, #0
 801e1aa:	f00c ffa5 	bl	802b0f8 <memset>
 801e1ae:	687b      	ldr	r3, [r7, #4]
 801e1b0:	2200      	movs	r2, #0
 801e1b2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e1b6:	bf00      	nop
 801e1b8:	3730      	adds	r7, #48	; 0x30
 801e1ba:	46bd      	mov	sp, r7
 801e1bc:	bd80      	pop	{r7, pc}

0801e1be <ENDIANNESS_NativeToLittle>:
 801e1be:	b580      	push	{r7, lr}
 801e1c0:	b084      	sub	sp, #16
 801e1c2:	af00      	add	r7, sp, #0
 801e1c4:	60f8      	str	r0, [r7, #12]
 801e1c6:	60b9      	str	r1, [r7, #8]
 801e1c8:	607a      	str	r2, [r7, #4]
 801e1ca:	687a      	ldr	r2, [r7, #4]
 801e1cc:	68b9      	ldr	r1, [r7, #8]
 801e1ce:	68f8      	ldr	r0, [r7, #12]
 801e1d0:	f00d f831 	bl	802b236 <memcpy>
 801e1d4:	bf00      	nop
 801e1d6:	3710      	adds	r7, #16
 801e1d8:	46bd      	mov	sp, r7
 801e1da:	bd80      	pop	{r7, pc}

0801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 801e1dc:	b480      	push	{r7}
 801e1de:	b089      	sub	sp, #36	; 0x24
 801e1e0:	af00      	add	r7, sp, #0
 801e1e2:	60f8      	str	r0, [r7, #12]
 801e1e4:	60b9      	str	r1, [r7, #8]
 801e1e6:	607a      	str	r2, [r7, #4]
 801e1e8:	68fb      	ldr	r3, [r7, #12]
 801e1ea:	61fb      	str	r3, [r7, #28]
 801e1ec:	68bb      	ldr	r3, [r7, #8]
 801e1ee:	61bb      	str	r3, [r7, #24]
 801e1f0:	687b      	ldr	r3, [r7, #4]
 801e1f2:	617b      	str	r3, [r7, #20]
 801e1f4:	2300      	movs	r3, #0
 801e1f6:	613b      	str	r3, [r7, #16]
 801e1f8:	e00d      	b.n	801e216 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 801e1fa:	69ba      	ldr	r2, [r7, #24]
 801e1fc:	693b      	ldr	r3, [r7, #16]
 801e1fe:	441a      	add	r2, r3
 801e200:	6979      	ldr	r1, [r7, #20]
 801e202:	693b      	ldr	r3, [r7, #16]
 801e204:	1acb      	subs	r3, r1, r3
 801e206:	3b01      	subs	r3, #1
 801e208:	69f9      	ldr	r1, [r7, #28]
 801e20a:	440b      	add	r3, r1
 801e20c:	7812      	ldrb	r2, [r2, #0]
 801e20e:	701a      	strb	r2, [r3, #0]
 801e210:	693b      	ldr	r3, [r7, #16]
 801e212:	3301      	adds	r3, #1
 801e214:	613b      	str	r3, [r7, #16]
 801e216:	697a      	ldr	r2, [r7, #20]
 801e218:	693b      	ldr	r3, [r7, #16]
 801e21a:	429a      	cmp	r2, r3
 801e21c:	d8ed      	bhi.n	801e1fa <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 801e21e:	bf00      	nop
 801e220:	bf00      	nop
 801e222:	3724      	adds	r7, #36	; 0x24
 801e224:	46bd      	mov	sp, r7
 801e226:	bc80      	pop	{r7}
 801e228:	4770      	bx	lr
	...

0801e22c <fbe24b77062e695b9b69518d2423c2cc606c842f>:
 801e22c:	b5b0      	push	{r4, r5, r7, lr}
 801e22e:	b096      	sub	sp, #88	; 0x58
 801e230:	af00      	add	r7, sp, #0
 801e232:	491b      	ldr	r1, [pc, #108]	; (801e2a0 <fbe24b77062e695b9b69518d2423c2cc606c842f+0x74>)
 801e234:	6809      	ldr	r1, [r1, #0]
 801e236:	f201 5124 	addw	r1, r1, #1316	; 0x524
 801e23a:	6579      	str	r1, [r7, #84]	; 0x54
 801e23c:	4919      	ldr	r1, [pc, #100]	; (801e2a4 <fbe24b77062e695b9b69518d2423c2cc606c842f+0x78>)
 801e23e:	6809      	ldr	r1, [r1, #0]
 801e240:	2000      	movs	r0, #0
 801e242:	460c      	mov	r4, r1
 801e244:	4605      	mov	r5, r0
 801e246:	4622      	mov	r2, r4
 801e248:	f005 03ff 	and.w	r3, r5, #255	; 0xff
 801e24c:	4614      	mov	r4, r2
 801e24e:	461d      	mov	r5, r3
 801e250:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801e252:	4618      	mov	r0, r3
 801e254:	234c      	movs	r3, #76	; 0x4c
 801e256:	461a      	mov	r2, r3
 801e258:	2100      	movs	r1, #0
 801e25a:	f00c ff4d 	bl	802b0f8 <memset>
 801e25e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801e260:	f8c3 4006 	str.w	r4, [r3, #6]
 801e264:	7a9a      	ldrb	r2, [r3, #10]
 801e266:	4629      	mov	r1, r5
 801e268:	f361 0207 	bfi	r2, r1, #0, #8
 801e26c:	729a      	strb	r2, [r3, #10]
 801e26e:	2001      	movs	r0, #1
 801e270:	f7f3 fad8 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 801e274:	4603      	mov	r3, r0
 801e276:	461a      	mov	r2, r3
 801e278:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801e27a:	70da      	strb	r2, [r3, #3]
 801e27c:	2001      	movs	r0, #1
 801e27e:	f7f3 fad1 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 801e282:	4603      	mov	r3, r0
 801e284:	461a      	mov	r2, r3
 801e286:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801e288:	711a      	strb	r2, [r3, #4]
 801e28a:	2001      	movs	r0, #1
 801e28c:	f7f3 faca 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 801e290:	4603      	mov	r3, r0
 801e292:	461a      	mov	r2, r3
 801e294:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 801e296:	715a      	strb	r2, [r3, #5]
 801e298:	bf00      	nop
 801e29a:	3758      	adds	r7, #88	; 0x58
 801e29c:	46bd      	mov	sp, r7
 801e29e:	bdb0      	pop	{r4, r5, r7, pc}
 801e2a0:	20000040 	.word	0x20000040
 801e2a4:	08031924 	.word	0x08031924

0801e2a8 <5b77f5d059012f38360090be73e77f682e6af1b1>:
 801e2a8:	b590      	push	{r4, r7, lr}
 801e2aa:	b085      	sub	sp, #20
 801e2ac:	af02      	add	r7, sp, #8
 801e2ae:	4b16      	ldr	r3, [pc, #88]	; (801e308 <5b77f5d059012f38360090be73e77f682e6af1b1+0x60>)
 801e2b0:	681b      	ldr	r3, [r3, #0]
 801e2b2:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801e2b6:	607b      	str	r3, [r7, #4]
 801e2b8:	687b      	ldr	r3, [r7, #4]
 801e2ba:	791c      	ldrb	r4, [r3, #4]
 801e2bc:	f7f3 fdcc 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801e2c0:	4603      	mov	r3, r0
 801e2c2:	b2db      	uxtb	r3, r3
 801e2c4:	f603 33b8 	addw	r3, r3, #3000	; 0xbb8
 801e2c8:	461a      	mov	r2, r3
 801e2ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801e2ce:	fb03 f202 	mul.w	r2, r3, r2
 801e2d2:	687b      	ldr	r3, [r7, #4]
 801e2d4:	9300      	str	r3, [sp, #0]
 801e2d6:	4b0d      	ldr	r3, [pc, #52]	; (801e30c <5b77f5d059012f38360090be73e77f682e6af1b1+0x64>)
 801e2d8:	2100      	movs	r1, #0
 801e2da:	4620      	mov	r0, r4
 801e2dc:	f7f3 faec 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801e2e0:	687b      	ldr	r3, [r7, #4]
 801e2e2:	78d8      	ldrb	r0, [r3, #3]
 801e2e4:	4b0a      	ldr	r3, [pc, #40]	; (801e310 <5b77f5d059012f38360090be73e77f682e6af1b1+0x68>)
 801e2e6:	691a      	ldr	r2, [r3, #16]
 801e2e8:	4613      	mov	r3, r2
 801e2ea:	005b      	lsls	r3, r3, #1
 801e2ec:	4413      	add	r3, r2
 801e2ee:	009b      	lsls	r3, r3, #2
 801e2f0:	441a      	add	r2, r3
 801e2f2:	687b      	ldr	r3, [r7, #4]
 801e2f4:	9300      	str	r3, [sp, #0]
 801e2f6:	4b07      	ldr	r3, [pc, #28]	; (801e314 <5b77f5d059012f38360090be73e77f682e6af1b1+0x6c>)
 801e2f8:	2100      	movs	r1, #0
 801e2fa:	f7f3 fadd 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801e2fe:	bf00      	nop
 801e300:	370c      	adds	r7, #12
 801e302:	46bd      	mov	sp, r7
 801e304:	bd90      	pop	{r4, r7, pc}
 801e306:	bf00      	nop
 801e308:	20000040 	.word	0x20000040
 801e30c:	0801f2a9 	.word	0x0801f2a9
 801e310:	080318ac 	.word	0x080318ac
 801e314:	0801f32b 	.word	0x0801f32b

0801e318 <ae19410868335b64a066b6d27dd8944b8c55271b>:
 801e318:	b580      	push	{r7, lr}
 801e31a:	b082      	sub	sp, #8
 801e31c:	af00      	add	r7, sp, #0
 801e31e:	4b0c      	ldr	r3, [pc, #48]	; (801e350 <ae19410868335b64a066b6d27dd8944b8c55271b+0x38>)
 801e320:	681b      	ldr	r3, [r3, #0]
 801e322:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801e326:	607b      	str	r3, [r7, #4]
 801e328:	687b      	ldr	r3, [r7, #4]
 801e32a:	791b      	ldrb	r3, [r3, #4]
 801e32c:	4618      	mov	r0, r3
 801e32e:	f7f3 fbc9 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801e332:	687b      	ldr	r3, [r7, #4]
 801e334:	78db      	ldrb	r3, [r3, #3]
 801e336:	4618      	mov	r0, r3
 801e338:	f7f3 fbc4 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801e33c:	687b      	ldr	r3, [r7, #4]
 801e33e:	795b      	ldrb	r3, [r3, #5]
 801e340:	4618      	mov	r0, r3
 801e342:	f7f3 fbbf 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801e346:	bf00      	nop
 801e348:	3708      	adds	r7, #8
 801e34a:	46bd      	mov	sp, r7
 801e34c:	bd80      	pop	{r7, pc}
 801e34e:	bf00      	nop
 801e350:	20000040 	.word	0x20000040

0801e354 <c2e65bb9a83a19ef15c3f2ab85b29089d354be41>:
 801e354:	b480      	push	{r7}
 801e356:	b087      	sub	sp, #28
 801e358:	af00      	add	r7, sp, #0
 801e35a:	60f8      	str	r0, [r7, #12]
 801e35c:	60b9      	str	r1, [r7, #8]
 801e35e:	607a      	str	r2, [r7, #4]
 801e360:	603b      	str	r3, [r7, #0]
 801e362:	4b0c      	ldr	r3, [pc, #48]	; (801e394 <c2e65bb9a83a19ef15c3f2ab85b29089d354be41+0x40>)
 801e364:	681b      	ldr	r3, [r3, #0]
 801e366:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801e36a:	617b      	str	r3, [r7, #20]
 801e36c:	697b      	ldr	r3, [r7, #20]
 801e36e:	68fa      	ldr	r2, [r7, #12]
 801e370:	639a      	str	r2, [r3, #56]	; 0x38
 801e372:	697b      	ldr	r3, [r7, #20]
 801e374:	68ba      	ldr	r2, [r7, #8]
 801e376:	63da      	str	r2, [r3, #60]	; 0x3c
 801e378:	697b      	ldr	r3, [r7, #20]
 801e37a:	687a      	ldr	r2, [r7, #4]
 801e37c:	641a      	str	r2, [r3, #64]	; 0x40
 801e37e:	697b      	ldr	r3, [r7, #20]
 801e380:	683a      	ldr	r2, [r7, #0]
 801e382:	645a      	str	r2, [r3, #68]	; 0x44
 801e384:	697b      	ldr	r3, [r7, #20]
 801e386:	6a3a      	ldr	r2, [r7, #32]
 801e388:	649a      	str	r2, [r3, #72]	; 0x48
 801e38a:	bf00      	nop
 801e38c:	371c      	adds	r7, #28
 801e38e:	46bd      	mov	sp, r7
 801e390:	bc80      	pop	{r7}
 801e392:	4770      	bx	lr
 801e394:	20000040 	.word	0x20000040

0801e398 <14badbfcf8ba87e6cb548e87226eea3b20d9e928>:
 801e398:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e39a:	b0ab      	sub	sp, #172	; 0xac
 801e39c:	af0c      	add	r7, sp, #48	; 0x30
 801e39e:	6239      	str	r1, [r7, #32]
 801e3a0:	4611      	mov	r1, r2
 801e3a2:	461a      	mov	r2, r3
 801e3a4:	4603      	mov	r3, r0
 801e3a6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801e3aa:	460b      	mov	r3, r1
 801e3ac:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 801e3b0:	4613      	mov	r3, r2
 801e3b2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 801e3b6:	4b95      	ldr	r3, [pc, #596]	; (801e60c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x274>)
 801e3b8:	681b      	ldr	r3, [r3, #0]
 801e3ba:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801e3be:	673b      	str	r3, [r7, #112]	; 0x70
 801e3c0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e3c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e3c4:	2b00      	cmp	r3, #0
 801e3c6:	d104      	bne.n	801e3d2 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x3a>
 801e3c8:	22f7      	movs	r2, #247	; 0xf7
 801e3ca:	4991      	ldr	r1, [pc, #580]	; (801e610 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x278>)
 801e3cc:	4891      	ldr	r0, [pc, #580]	; (801e614 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x27c>)
 801e3ce:	f7e3 f99b 	bl	8001708 <EXPECT_OnAbortHandler>
 801e3d2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e3d4:	7adb      	ldrb	r3, [r3, #11]
 801e3d6:	2b00      	cmp	r3, #0
 801e3d8:	d02a      	beq.n	801e430 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x98>
 801e3da:	4a8f      	ldr	r2, [pc, #572]	; (801e618 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x280>)
 801e3dc:	f107 0360 	add.w	r3, r7, #96	; 0x60
 801e3e0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e3e4:	e883 0003 	stmia.w	r3, {r0, r1}
 801e3e8:	4a8c      	ldr	r2, [pc, #560]	; (801e61c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x284>)
 801e3ea:	f107 0360 	add.w	r3, r7, #96	; 0x60
 801e3ee:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e3f2:	f7f6 ff09 	bl	8015208 <LOGGER_PrintLine>
 801e3f6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e3f8:	795b      	ldrb	r3, [r3, #5]
 801e3fa:	4618      	mov	r0, r3
 801e3fc:	f7f3 fbc4 	bl	8011b88 <56445be374e93738432324b7e0ececbd8047647a>
 801e400:	4603      	mov	r3, r0
 801e402:	f083 0301 	eor.w	r3, r3, #1
 801e406:	b2db      	uxtb	r3, r3
 801e408:	2b00      	cmp	r3, #0
 801e40a:	d00e      	beq.n	801e42a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x92>
 801e40c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e40e:	7958      	ldrb	r0, [r3, #5]
 801e410:	4b83      	ldr	r3, [pc, #524]	; (801e620 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x288>)
 801e412:	691a      	ldr	r2, [r3, #16]
 801e414:	4613      	mov	r3, r2
 801e416:	00db      	lsls	r3, r3, #3
 801e418:	1a9b      	subs	r3, r3, r2
 801e41a:	019a      	lsls	r2, r3, #6
 801e41c:	441a      	add	r2, r3
 801e41e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e420:	9300      	str	r3, [sp, #0]
 801e422:	4b80      	ldr	r3, [pc, #512]	; (801e624 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x28c>)
 801e424:	2101      	movs	r1, #1
 801e426:	f7f3 fa47 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801e42a:	2300      	movs	r3, #0
 801e42c:	f000 bc94 	b.w	801ed58 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c0>
 801e430:	6a3b      	ldr	r3, [r7, #32]
 801e432:	2b00      	cmp	r3, #0
 801e434:	d110      	bne.n	801e458 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0xc0>
 801e436:	4a78      	ldr	r2, [pc, #480]	; (801e618 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x280>)
 801e438:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801e43c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e440:	e883 0003 	stmia.w	r3, {r0, r1}
 801e444:	4a78      	ldr	r2, [pc, #480]	; (801e628 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x290>)
 801e446:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801e44a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e44e:	f7f6 fedb 	bl	8015208 <LOGGER_PrintLine>
 801e452:	2300      	movs	r3, #0
 801e454:	f000 bc80 	b.w	801ed58 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c0>
 801e458:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801e45c:	2b00      	cmp	r3, #0
 801e45e:	d114      	bne.n	801e48a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0xf2>
 801e460:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e464:	2b02      	cmp	r3, #2
 801e466:	d110      	bne.n	801e48a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0xf2>
 801e468:	4a6b      	ldr	r2, [pc, #428]	; (801e618 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x280>)
 801e46a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801e46e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e472:	e883 0003 	stmia.w	r3, {r0, r1}
 801e476:	4a6d      	ldr	r2, [pc, #436]	; (801e62c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x294>)
 801e478:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801e47c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e480:	f7f6 fec2 	bl	8015208 <LOGGER_PrintLine>
 801e484:	2300      	movs	r3, #0
 801e486:	f000 bc67 	b.w	801ed58 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c0>
 801e48a:	6a38      	ldr	r0, [r7, #32]
 801e48c:	f7f1 fc84 	bl	800fd98 <43f11770a6d1a267a732a77a0ad450aed83746a6>
 801e490:	4603      	mov	r3, r0
 801e492:	2b00      	cmp	r3, #0
 801e494:	d002      	beq.n	801e49c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x104>
 801e496:	6a38      	ldr	r0, [r7, #32]
 801e498:	f7f1 fd06 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 801e49c:	2053      	movs	r0, #83	; 0x53
 801e49e:	f7f1 f949 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 801e4a2:	66f8      	str	r0, [r7, #108]	; 0x6c
 801e4a4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e4a6:	2b00      	cmp	r3, #0
 801e4a8:	d110      	bne.n	801e4cc <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x134>
 801e4aa:	4a5b      	ldr	r2, [pc, #364]	; (801e618 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x280>)
 801e4ac:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4b0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801e4b4:	e883 0003 	stmia.w	r3, {r0, r1}
 801e4b8:	4a5d      	ldr	r2, [pc, #372]	; (801e630 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x298>)
 801e4ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4be:	e893 0003 	ldmia.w	r3, {r0, r1}
 801e4c2:	f7f6 fea1 	bl	8015208 <LOGGER_PrintLine>
 801e4c6:	2300      	movs	r3, #0
 801e4c8:	f000 bc46 	b.w	801ed58 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c0>
 801e4cc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e4ce:	2253      	movs	r2, #83	; 0x53
 801e4d0:	701a      	strb	r2, [r3, #0]
 801e4d2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e4d4:	2253      	movs	r2, #83	; 0x53
 801e4d6:	705a      	strb	r2, [r3, #1]
 801e4d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e4da:	3341      	adds	r3, #65	; 0x41
 801e4dc:	2211      	movs	r2, #17
 801e4de:	6a39      	ldr	r1, [r7, #32]
 801e4e0:	4618      	mov	r0, r3
 801e4e2:	f00c fea8 	bl	802b236 <memcpy>
 801e4e6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	d007      	beq.n	801e4fe <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x166>
 801e4ee:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e4f0:	331e      	adds	r3, #30
 801e4f2:	2219      	movs	r2, #25
 801e4f4:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 801e4f8:	4618      	mov	r0, r3
 801e4fa:	f00c fe9c 	bl	802b236 <memcpy>
 801e4fe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e500:	f897 2025 	ldrb.w	r2, [r7, #37]	; 0x25
 801e504:	775a      	strb	r2, [r3, #29]
 801e506:	2300      	movs	r3, #0
 801e508:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e50c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e510:	2b01      	cmp	r3, #1
 801e512:	d008      	beq.n	801e526 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x18e>
 801e514:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e518:	2b02      	cmp	r3, #2
 801e51a:	d004      	beq.n	801e526 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x18e>
 801e51c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e520:	2b03      	cmp	r3, #3
 801e522:	f040 81c8 	bne.w	801e8b6 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x51e>
 801e526:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e52a:	2b01      	cmp	r3, #1
 801e52c:	d165      	bne.n	801e5fa <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x262>
 801e52e:	2304      	movs	r3, #4
 801e530:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e534:	e05d      	b.n	801e5f2 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x25a>
 801e536:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e53a:	4613      	mov	r3, r2
 801e53c:	009b      	lsls	r3, r3, #2
 801e53e:	4413      	add	r3, r2
 801e540:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e544:	4413      	add	r3, r2
 801e546:	781b      	ldrb	r3, [r3, #0]
 801e548:	2b00      	cmp	r3, #0
 801e54a:	d04b      	beq.n	801e5e4 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x24c>
 801e54c:	2104      	movs	r1, #4
 801e54e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e550:	f00a ffa0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e554:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e558:	4613      	mov	r3, r2
 801e55a:	009b      	lsls	r3, r3, #2
 801e55c:	4413      	add	r3, r2
 801e55e:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e562:	4413      	add	r3, r2
 801e564:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e568:	b29a      	uxth	r2, r3
 801e56a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e56c:	685b      	ldr	r3, [r3, #4]
 801e56e:	b2d2      	uxtb	r2, r2
 801e570:	701a      	strb	r2, [r3, #0]
 801e572:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e576:	4613      	mov	r3, r2
 801e578:	009b      	lsls	r3, r3, #2
 801e57a:	4413      	add	r3, r2
 801e57c:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e580:	4413      	add	r3, r2
 801e582:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e586:	b29b      	uxth	r3, r3
 801e588:	0a1b      	lsrs	r3, r3, #8
 801e58a:	b29a      	uxth	r2, r3
 801e58c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e58e:	685b      	ldr	r3, [r3, #4]
 801e590:	3301      	adds	r3, #1
 801e592:	b2d2      	uxtb	r2, r2
 801e594:	701a      	strb	r2, [r3, #0]
 801e596:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e59a:	4613      	mov	r3, r2
 801e59c:	009b      	lsls	r3, r3, #2
 801e59e:	4413      	add	r3, r2
 801e5a0:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e5a4:	4413      	add	r3, r2
 801e5a6:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e5aa:	b29a      	uxth	r2, r3
 801e5ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e5ae:	685b      	ldr	r3, [r3, #4]
 801e5b0:	3302      	adds	r3, #2
 801e5b2:	b2d2      	uxtb	r2, r2
 801e5b4:	701a      	strb	r2, [r3, #0]
 801e5b6:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e5ba:	4613      	mov	r3, r2
 801e5bc:	009b      	lsls	r3, r3, #2
 801e5be:	4413      	add	r3, r2
 801e5c0:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e5c4:	4413      	add	r3, r2
 801e5c6:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e5ca:	b29b      	uxth	r3, r3
 801e5cc:	0a1b      	lsrs	r3, r3, #8
 801e5ce:	b29a      	uxth	r2, r3
 801e5d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e5d2:	685b      	ldr	r3, [r3, #4]
 801e5d4:	3303      	adds	r3, #3
 801e5d6:	b2d2      	uxtb	r2, r2
 801e5d8:	701a      	strb	r2, [r3, #0]
 801e5da:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e5de:	3304      	adds	r3, #4
 801e5e0:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e5e4:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e5e8:	b2db      	uxtb	r3, r3
 801e5ea:	3b01      	subs	r3, #1
 801e5ec:	b2db      	uxtb	r3, r3
 801e5ee:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e5f2:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e5f6:	2b00      	cmp	r3, #0
 801e5f8:	da9d      	bge.n	801e536 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x19e>
 801e5fa:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e5fe:	2b02      	cmp	r3, #2
 801e600:	d17a      	bne.n	801e6f8 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x360>
 801e602:	2304      	movs	r3, #4
 801e604:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e608:	e072      	b.n	801e6f0 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x358>
 801e60a:	bf00      	nop
 801e60c:	20000040 	.word	0x20000040
 801e610:	08030224 	.word	0x08030224
 801e614:	08030288 	.word	0x08030288
 801e618:	0803043c 	.word	0x0803043c
 801e61c:	0803029c 	.word	0x0803029c
 801e620:	080318ac 	.word	0x080318ac
 801e624:	0801f6d1 	.word	0x0801f6d1
 801e628:	080302c8 	.word	0x080302c8
 801e62c:	08030304 	.word	0x08030304
 801e630:	08030338 	.word	0x08030338
 801e634:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e638:	4613      	mov	r3, r2
 801e63a:	009b      	lsls	r3, r3, #2
 801e63c:	4413      	add	r3, r2
 801e63e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e642:	4413      	add	r3, r2
 801e644:	781b      	ldrb	r3, [r3, #0]
 801e646:	2b00      	cmp	r3, #0
 801e648:	d04b      	beq.n	801e6e2 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x34a>
 801e64a:	2104      	movs	r1, #4
 801e64c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e64e:	f00a ff21 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e652:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e656:	4613      	mov	r3, r2
 801e658:	009b      	lsls	r3, r3, #2
 801e65a:	4413      	add	r3, r2
 801e65c:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e660:	4413      	add	r3, r2
 801e662:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e666:	b29a      	uxth	r2, r3
 801e668:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e66a:	685b      	ldr	r3, [r3, #4]
 801e66c:	b2d2      	uxtb	r2, r2
 801e66e:	701a      	strb	r2, [r3, #0]
 801e670:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e674:	4613      	mov	r3, r2
 801e676:	009b      	lsls	r3, r3, #2
 801e678:	4413      	add	r3, r2
 801e67a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e67e:	4413      	add	r3, r2
 801e680:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e684:	b29b      	uxth	r3, r3
 801e686:	0a1b      	lsrs	r3, r3, #8
 801e688:	b29a      	uxth	r2, r3
 801e68a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e68c:	685b      	ldr	r3, [r3, #4]
 801e68e:	3301      	adds	r3, #1
 801e690:	b2d2      	uxtb	r2, r2
 801e692:	701a      	strb	r2, [r3, #0]
 801e694:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e698:	4613      	mov	r3, r2
 801e69a:	009b      	lsls	r3, r3, #2
 801e69c:	4413      	add	r3, r2
 801e69e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e6a2:	4413      	add	r3, r2
 801e6a4:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e6a8:	b29a      	uxth	r2, r3
 801e6aa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e6ac:	685b      	ldr	r3, [r3, #4]
 801e6ae:	3302      	adds	r3, #2
 801e6b0:	b2d2      	uxtb	r2, r2
 801e6b2:	701a      	strb	r2, [r3, #0]
 801e6b4:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e6b8:	4613      	mov	r3, r2
 801e6ba:	009b      	lsls	r3, r3, #2
 801e6bc:	4413      	add	r3, r2
 801e6be:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e6c2:	4413      	add	r3, r2
 801e6c4:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e6c8:	b29b      	uxth	r3, r3
 801e6ca:	0a1b      	lsrs	r3, r3, #8
 801e6cc:	b29a      	uxth	r2, r3
 801e6ce:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e6d0:	685b      	ldr	r3, [r3, #4]
 801e6d2:	3303      	adds	r3, #3
 801e6d4:	b2d2      	uxtb	r2, r2
 801e6d6:	701a      	strb	r2, [r3, #0]
 801e6d8:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e6dc:	3304      	adds	r3, #4
 801e6de:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e6e2:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e6e6:	b2db      	uxtb	r3, r3
 801e6e8:	3b01      	subs	r3, #1
 801e6ea:	b2db      	uxtb	r3, r3
 801e6ec:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e6f0:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e6f4:	2b00      	cmp	r3, #0
 801e6f6:	da9d      	bge.n	801e634 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x29c>
 801e6f8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e6fc:	2b03      	cmp	r3, #3
 801e6fe:	f040 80cc 	bne.w	801e89a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x502>
 801e702:	2304      	movs	r3, #4
 801e704:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e708:	e05d      	b.n	801e7c6 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x42e>
 801e70a:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e70e:	4613      	mov	r3, r2
 801e710:	009b      	lsls	r3, r3, #2
 801e712:	4413      	add	r3, r2
 801e714:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e718:	4413      	add	r3, r2
 801e71a:	781b      	ldrb	r3, [r3, #0]
 801e71c:	2b00      	cmp	r3, #0
 801e71e:	d04b      	beq.n	801e7b8 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x420>
 801e720:	2104      	movs	r1, #4
 801e722:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e724:	f00a feb6 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e728:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e72c:	4613      	mov	r3, r2
 801e72e:	009b      	lsls	r3, r3, #2
 801e730:	4413      	add	r3, r2
 801e732:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e736:	4413      	add	r3, r2
 801e738:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e73c:	b29a      	uxth	r2, r3
 801e73e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e740:	685b      	ldr	r3, [r3, #4]
 801e742:	b2d2      	uxtb	r2, r2
 801e744:	701a      	strb	r2, [r3, #0]
 801e746:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e74a:	4613      	mov	r3, r2
 801e74c:	009b      	lsls	r3, r3, #2
 801e74e:	4413      	add	r3, r2
 801e750:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e754:	4413      	add	r3, r2
 801e756:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e75a:	b29b      	uxth	r3, r3
 801e75c:	0a1b      	lsrs	r3, r3, #8
 801e75e:	b29a      	uxth	r2, r3
 801e760:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e762:	685b      	ldr	r3, [r3, #4]
 801e764:	3301      	adds	r3, #1
 801e766:	b2d2      	uxtb	r2, r2
 801e768:	701a      	strb	r2, [r3, #0]
 801e76a:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e76e:	4613      	mov	r3, r2
 801e770:	009b      	lsls	r3, r3, #2
 801e772:	4413      	add	r3, r2
 801e774:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e778:	4413      	add	r3, r2
 801e77a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e77e:	b29a      	uxth	r2, r3
 801e780:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e782:	685b      	ldr	r3, [r3, #4]
 801e784:	3302      	adds	r3, #2
 801e786:	b2d2      	uxtb	r2, r2
 801e788:	701a      	strb	r2, [r3, #0]
 801e78a:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e78e:	4613      	mov	r3, r2
 801e790:	009b      	lsls	r3, r3, #2
 801e792:	4413      	add	r3, r2
 801e794:	f8d7 2090 	ldr.w	r2, [r7, #144]	; 0x90
 801e798:	4413      	add	r3, r2
 801e79a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e79e:	b29b      	uxth	r3, r3
 801e7a0:	0a1b      	lsrs	r3, r3, #8
 801e7a2:	b29a      	uxth	r2, r3
 801e7a4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e7a6:	685b      	ldr	r3, [r3, #4]
 801e7a8:	3303      	adds	r3, #3
 801e7aa:	b2d2      	uxtb	r2, r2
 801e7ac:	701a      	strb	r2, [r3, #0]
 801e7ae:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e7b2:	3304      	adds	r3, #4
 801e7b4:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e7b8:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e7bc:	b2db      	uxtb	r3, r3
 801e7be:	3b01      	subs	r3, #1
 801e7c0:	b2db      	uxtb	r3, r3
 801e7c2:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e7c6:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e7ca:	2b00      	cmp	r3, #0
 801e7cc:	da9d      	bge.n	801e70a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x372>
 801e7ce:	2304      	movs	r3, #4
 801e7d0:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e7d4:	e05d      	b.n	801e892 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x4fa>
 801e7d6:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e7da:	4613      	mov	r3, r2
 801e7dc:	009b      	lsls	r3, r3, #2
 801e7de:	4413      	add	r3, r2
 801e7e0:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e7e4:	4413      	add	r3, r2
 801e7e6:	781b      	ldrb	r3, [r3, #0]
 801e7e8:	2b00      	cmp	r3, #0
 801e7ea:	d04b      	beq.n	801e884 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x4ec>
 801e7ec:	2104      	movs	r1, #4
 801e7ee:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e7f0:	f00a fe50 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e7f4:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e7f8:	4613      	mov	r3, r2
 801e7fa:	009b      	lsls	r3, r3, #2
 801e7fc:	4413      	add	r3, r2
 801e7fe:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e802:	4413      	add	r3, r2
 801e804:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e808:	b29a      	uxth	r2, r3
 801e80a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e80c:	685b      	ldr	r3, [r3, #4]
 801e80e:	b2d2      	uxtb	r2, r2
 801e810:	701a      	strb	r2, [r3, #0]
 801e812:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e816:	4613      	mov	r3, r2
 801e818:	009b      	lsls	r3, r3, #2
 801e81a:	4413      	add	r3, r2
 801e81c:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e820:	4413      	add	r3, r2
 801e822:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801e826:	b29b      	uxth	r3, r3
 801e828:	0a1b      	lsrs	r3, r3, #8
 801e82a:	b29a      	uxth	r2, r3
 801e82c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e82e:	685b      	ldr	r3, [r3, #4]
 801e830:	3301      	adds	r3, #1
 801e832:	b2d2      	uxtb	r2, r2
 801e834:	701a      	strb	r2, [r3, #0]
 801e836:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e83a:	4613      	mov	r3, r2
 801e83c:	009b      	lsls	r3, r3, #2
 801e83e:	4413      	add	r3, r2
 801e840:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e844:	4413      	add	r3, r2
 801e846:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e84a:	b29a      	uxth	r2, r3
 801e84c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e84e:	685b      	ldr	r3, [r3, #4]
 801e850:	3302      	adds	r3, #2
 801e852:	b2d2      	uxtb	r2, r2
 801e854:	701a      	strb	r2, [r3, #0]
 801e856:	f997 2077 	ldrsb.w	r2, [r7, #119]	; 0x77
 801e85a:	4613      	mov	r3, r2
 801e85c:	009b      	lsls	r3, r3, #2
 801e85e:	4413      	add	r3, r2
 801e860:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 801e864:	4413      	add	r3, r2
 801e866:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801e86a:	b29b      	uxth	r3, r3
 801e86c:	0a1b      	lsrs	r3, r3, #8
 801e86e:	b29a      	uxth	r2, r3
 801e870:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e872:	685b      	ldr	r3, [r3, #4]
 801e874:	3303      	adds	r3, #3
 801e876:	b2d2      	uxtb	r2, r2
 801e878:	701a      	strb	r2, [r3, #0]
 801e87a:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e87e:	3304      	adds	r3, #4
 801e880:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e884:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e888:	b2db      	uxtb	r3, r3
 801e88a:	3b01      	subs	r3, #1
 801e88c:	b2db      	uxtb	r3, r3
 801e88e:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 801e892:	f997 3077 	ldrsb.w	r3, [r7, #119]	; 0x77
 801e896:	2b00      	cmp	r3, #0
 801e898:	da9d      	bge.n	801e7d6 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x43e>
 801e89a:	2101      	movs	r1, #1
 801e89c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e89e:	f00a fdf9 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e8a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e8a4:	685b      	ldr	r3, [r3, #4]
 801e8a6:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
 801e8aa:	701a      	strb	r2, [r3, #0]
 801e8ac:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e8b0:	3301      	adds	r3, #1
 801e8b2:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e8b6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e8ba:	2b05      	cmp	r3, #5
 801e8bc:	d132      	bne.n	801e924 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x58c>
 801e8be:	2102      	movs	r1, #2
 801e8c0:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e8c2:	f00a fde7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e8c6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e8c8:	685b      	ldr	r3, [r3, #4]
 801e8ca:	f897 20a0 	ldrb.w	r2, [r7, #160]	; 0xa0
 801e8ce:	701a      	strb	r2, [r3, #0]
 801e8d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e8d2:	685b      	ldr	r3, [r3, #4]
 801e8d4:	3301      	adds	r3, #1
 801e8d6:	2200      	movs	r2, #0
 801e8d8:	701a      	strb	r2, [r3, #0]
 801e8da:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e8de:	3302      	adds	r3, #2
 801e8e0:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e8e4:	2102      	movs	r1, #2
 801e8e6:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e8e8:	f00a fdd4 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e8ec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e8ee:	685b      	ldr	r3, [r3, #4]
 801e8f0:	f897 209c 	ldrb.w	r2, [r7, #156]	; 0x9c
 801e8f4:	701a      	strb	r2, [r3, #0]
 801e8f6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e8f8:	685b      	ldr	r3, [r3, #4]
 801e8fa:	3301      	adds	r3, #1
 801e8fc:	2200      	movs	r2, #0
 801e8fe:	701a      	strb	r2, [r3, #0]
 801e900:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e904:	3302      	adds	r3, #2
 801e906:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e90a:	2101      	movs	r1, #1
 801e90c:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e90e:	f00a fdc1 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e912:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e914:	685b      	ldr	r3, [r3, #4]
 801e916:	2200      	movs	r2, #0
 801e918:	701a      	strb	r2, [r3, #0]
 801e91a:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e91e:	3301      	adds	r3, #1
 801e920:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e924:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801e928:	2b07      	cmp	r3, #7
 801e92a:	d00d      	beq.n	801e948 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x5b0>
 801e92c:	2101      	movs	r1, #1
 801e92e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e930:	f00a fdb0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e934:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e936:	685b      	ldr	r3, [r3, #4]
 801e938:	f897 2025 	ldrb.w	r2, [r7, #37]	; 0x25
 801e93c:	701a      	strb	r2, [r3, #0]
 801e93e:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e942:	3301      	adds	r3, #1
 801e944:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e948:	2102      	movs	r1, #2
 801e94a:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e94c:	f00a fda2 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e950:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e952:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e954:	4798      	blx	r3
 801e956:	4603      	mov	r3, r0
 801e958:	461a      	mov	r2, r3
 801e95a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e95c:	685b      	ldr	r3, [r3, #4]
 801e95e:	b2d2      	uxtb	r2, r2
 801e960:	701a      	strb	r2, [r3, #0]
 801e962:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801e964:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e966:	4798      	blx	r3
 801e968:	4603      	mov	r3, r0
 801e96a:	121a      	asrs	r2, r3, #8
 801e96c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e96e:	685b      	ldr	r3, [r3, #4]
 801e970:	3301      	adds	r3, #1
 801e972:	b2d2      	uxtb	r2, r2
 801e974:	701a      	strb	r2, [r3, #0]
 801e976:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e97a:	3302      	adds	r3, #2
 801e97c:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e980:	2101      	movs	r1, #1
 801e982:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e984:	f00a fd86 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e988:	6a3b      	ldr	r3, [r7, #32]
 801e98a:	3301      	adds	r3, #1
 801e98c:	4618      	mov	r0, r3
 801e98e:	f7ef f80d 	bl	800d9ac <0a8a8543f799df9767389ce496f81ab8433a71f4>
 801e992:	4603      	mov	r3, r0
 801e994:	f887 306b 	strb.w	r3, [r7, #107]	; 0x6b
 801e998:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e99a:	685b      	ldr	r3, [r3, #4]
 801e99c:	f897 206b 	ldrb.w	r2, [r7, #107]	; 0x6b
 801e9a0:	701a      	strb	r2, [r3, #0]
 801e9a2:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e9a6:	3301      	adds	r3, #1
 801e9a8:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e9ac:	2101      	movs	r1, #1
 801e9ae:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e9b0:	f00a fd70 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e9b4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e9b6:	685b      	ldr	r3, [r3, #4]
 801e9b8:	f897 2098 	ldrb.w	r2, [r7, #152]	; 0x98
 801e9bc:	701a      	strb	r2, [r3, #0]
 801e9be:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e9c2:	3301      	adds	r3, #1
 801e9c4:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e9c8:	2101      	movs	r1, #1
 801e9ca:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e9cc:	f00a fd62 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e9d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e9d2:	685b      	ldr	r3, [r3, #4]
 801e9d4:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 801e9d8:	701a      	strb	r2, [r3, #0]
 801e9da:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e9dc:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 801e9e0:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 801e9e4:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801e9e8:	3301      	adds	r3, #1
 801e9ea:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801e9ee:	2101      	movs	r1, #1
 801e9f0:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801e9f2:	f00a fd4f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801e9f6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801e9f8:	685b      	ldr	r3, [r3, #4]
 801e9fa:	2200      	movs	r2, #0
 801e9fc:	701a      	strb	r2, [r3, #0]
 801e9fe:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801ea02:	3301      	adds	r3, #1
 801ea04:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801ea08:	2101      	movs	r1, #1
 801ea0a:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801ea0c:	f00a fd42 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801ea10:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ea12:	685b      	ldr	r3, [r3, #4]
 801ea14:	22c9      	movs	r2, #201	; 0xc9
 801ea16:	701a      	strb	r2, [r3, #0]
 801ea18:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801ea1c:	3301      	adds	r3, #1
 801ea1e:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 801ea22:	2102      	movs	r1, #2
 801ea24:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801ea26:	f00a fd35 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801ea2a:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 801ea2e:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
 801ea32:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 801ea36:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 801ea3a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 801ea3e:	f443 4328 	orr.w	r3, r3, #43008	; 0xa800
 801ea42:	f8a7 3068 	strh.w	r3, [r7, #104]	; 0x68
 801ea46:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ea48:	685b      	ldr	r3, [r3, #4]
 801ea4a:	f8b7 2068 	ldrh.w	r2, [r7, #104]	; 0x68
 801ea4e:	b2d2      	uxtb	r2, r2
 801ea50:	701a      	strb	r2, [r3, #0]
 801ea52:	f8b7 3068 	ldrh.w	r3, [r7, #104]	; 0x68
 801ea56:	0a1b      	lsrs	r3, r3, #8
 801ea58:	b29a      	uxth	r2, r3
 801ea5a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ea5c:	685b      	ldr	r3, [r3, #4]
 801ea5e:	3301      	adds	r3, #1
 801ea60:	b2d2      	uxtb	r2, r2
 801ea62:	701a      	strb	r2, [r3, #0]
 801ea64:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ea66:	2201      	movs	r2, #1
 801ea68:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 801ea6c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ea6e:	2200      	movs	r2, #0
 801ea70:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 801ea74:	f7f6 fc12 	bl	801529c <LOGGER_StartSection>
 801ea78:	4603      	mov	r3, r0
 801ea7a:	2b00      	cmp	r3, #0
 801ea7c:	f000 8091 	beq.w	801eba2 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x80a>
 801ea80:	4ab7      	ldr	r2, [pc, #732]	; (801ed60 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c8>)
 801ea82:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801ea86:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ea8a:	e883 0003 	stmia.w	r3, {r0, r1}
 801ea8e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801ea92:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ea96:	f7f6 fc1d 	bl	80152d4 <LOGGER_PrintHeader>
 801ea9a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ea9e:	2b02      	cmp	r3, #2
 801eaa0:	d003      	beq.n	801eaaa <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x712>
 801eaa2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801eaa6:	2b03      	cmp	r3, #3
 801eaa8:	d177      	bne.n	801eb9a <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x802>
 801eaaa:	6a3b      	ldr	r3, [r7, #32]
 801eaac:	1c59      	adds	r1, r3, #1
 801eaae:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801eab2:	2208      	movs	r2, #8
 801eab4:	4618      	mov	r0, r3
 801eab6:	f7ff fb91 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801eaba:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801eabe:	4aa9      	ldr	r2, [pc, #676]	; (801ed64 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9cc>)
 801eac0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 801eac4:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 801eac8:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
 801eacc:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801ead0:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ead4:	b29b      	uxth	r3, r3
 801ead6:	461d      	mov	r5, r3
 801ead8:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eadc:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801eae0:	b29b      	uxth	r3, r3
 801eae2:	461e      	mov	r6, r3
 801eae4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eae8:	3305      	adds	r3, #5
 801eaea:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801eaee:	b29b      	uxth	r3, r3
 801eaf0:	61fb      	str	r3, [r7, #28]
 801eaf2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eaf6:	3305      	adds	r3, #5
 801eaf8:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801eafc:	b29b      	uxth	r3, r3
 801eafe:	61bb      	str	r3, [r7, #24]
 801eb00:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb04:	330a      	adds	r3, #10
 801eb06:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801eb0a:	b29b      	uxth	r3, r3
 801eb0c:	617b      	str	r3, [r7, #20]
 801eb0e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb12:	330a      	adds	r3, #10
 801eb14:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801eb18:	b29b      	uxth	r3, r3
 801eb1a:	613b      	str	r3, [r7, #16]
 801eb1c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb20:	330f      	adds	r3, #15
 801eb22:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801eb26:	b29b      	uxth	r3, r3
 801eb28:	60fb      	str	r3, [r7, #12]
 801eb2a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb2e:	330f      	adds	r3, #15
 801eb30:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801eb34:	b29b      	uxth	r3, r3
 801eb36:	60bb      	str	r3, [r7, #8]
 801eb38:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb3c:	3314      	adds	r3, #20
 801eb3e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801eb42:	b29b      	uxth	r3, r3
 801eb44:	607b      	str	r3, [r7, #4]
 801eb46:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 801eb4a:	3314      	adds	r3, #20
 801eb4c:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801eb50:	b29b      	uxth	r3, r3
 801eb52:	930a      	str	r3, [sp, #40]	; 0x28
 801eb54:	f8d7 c004 	ldr.w	ip, [r7, #4]
 801eb58:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 801eb5c:	f8d7 c008 	ldr.w	ip, [r7, #8]
 801eb60:	f8cd c020 	str.w	ip, [sp, #32]
 801eb64:	f8d7 c00c 	ldr.w	ip, [r7, #12]
 801eb68:	f8cd c01c 	str.w	ip, [sp, #28]
 801eb6c:	f8d7 c010 	ldr.w	ip, [r7, #16]
 801eb70:	f8cd c018 	str.w	ip, [sp, #24]
 801eb74:	f8d7 c014 	ldr.w	ip, [r7, #20]
 801eb78:	f8cd c014 	str.w	ip, [sp, #20]
 801eb7c:	f8d7 c018 	ldr.w	ip, [r7, #24]
 801eb80:	f8cd c010 	str.w	ip, [sp, #16]
 801eb84:	69fb      	ldr	r3, [r7, #28]
 801eb86:	9303      	str	r3, [sp, #12]
 801eb88:	9602      	str	r6, [sp, #8]
 801eb8a:	9501      	str	r5, [sp, #4]
 801eb8c:	9200      	str	r2, [sp, #0]
 801eb8e:	4602      	mov	r2, r0
 801eb90:	460b      	mov	r3, r1
 801eb92:	4621      	mov	r1, r4
 801eb94:	4874      	ldr	r0, [pc, #464]	; (801ed68 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9d0>)
 801eb96:	f7f6 fb69 	bl	801526c <LOGGER_Print>
 801eb9a:	f7f6 fb27 	bl	80151ec <LOGGER_PrintNL>
 801eb9e:	f7f6 fb90 	bl	80152c2 <LOGGER_EndSection>
 801eba2:	f7f6 fb7b 	bl	801529c <LOGGER_StartSection>
 801eba6:	4603      	mov	r3, r0
 801eba8:	2b00      	cmp	r3, #0
 801ebaa:	f000 8091 	beq.w	801ecd0 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x938>
 801ebae:	4a6c      	ldr	r2, [pc, #432]	; (801ed60 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c8>)
 801ebb0:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801ebb4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ebb8:	e883 0003 	stmia.w	r3, {r0, r1}
 801ebbc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 801ebc0:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ebc4:	f7f6 fb86 	bl	80152d4 <LOGGER_PrintHeader>
 801ebc8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ebcc:	2b01      	cmp	r3, #1
 801ebce:	d003      	beq.n	801ebd8 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x840>
 801ebd0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ebd4:	2b03      	cmp	r3, #3
 801ebd6:	d177      	bne.n	801ecc8 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x930>
 801ebd8:	6a3b      	ldr	r3, [r7, #32]
 801ebda:	1c59      	adds	r1, r3, #1
 801ebdc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ebe0:	2208      	movs	r2, #8
 801ebe2:	4618      	mov	r0, r3
 801ebe4:	f7ff fafa 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801ebe8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ebec:	4a5d      	ldr	r2, [pc, #372]	; (801ed64 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9cc>)
 801ebee:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 801ebf2:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 801ebf6:	f897 2026 	ldrb.w	r2, [r7, #38]	; 0x26
 801ebfa:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ebfe:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ec02:	b29b      	uxth	r3, r3
 801ec04:	461d      	mov	r5, r3
 801ec06:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec0a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801ec0e:	b29b      	uxth	r3, r3
 801ec10:	461e      	mov	r6, r3
 801ec12:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec16:	3305      	adds	r3, #5
 801ec18:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ec1c:	b29b      	uxth	r3, r3
 801ec1e:	61fb      	str	r3, [r7, #28]
 801ec20:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec24:	3305      	adds	r3, #5
 801ec26:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801ec2a:	b29b      	uxth	r3, r3
 801ec2c:	61bb      	str	r3, [r7, #24]
 801ec2e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec32:	330a      	adds	r3, #10
 801ec34:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ec38:	b29b      	uxth	r3, r3
 801ec3a:	617b      	str	r3, [r7, #20]
 801ec3c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec40:	330a      	adds	r3, #10
 801ec42:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801ec46:	b29b      	uxth	r3, r3
 801ec48:	613b      	str	r3, [r7, #16]
 801ec4a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec4e:	330f      	adds	r3, #15
 801ec50:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ec54:	b29b      	uxth	r3, r3
 801ec56:	60fb      	str	r3, [r7, #12]
 801ec58:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec5c:	330f      	adds	r3, #15
 801ec5e:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801ec62:	b29b      	uxth	r3, r3
 801ec64:	60bb      	str	r3, [r7, #8]
 801ec66:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec6a:	3314      	adds	r3, #20
 801ec6c:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 801ec70:	b29b      	uxth	r3, r3
 801ec72:	607b      	str	r3, [r7, #4]
 801ec74:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 801ec78:	3314      	adds	r3, #20
 801ec7a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 801ec7e:	b29b      	uxth	r3, r3
 801ec80:	930a      	str	r3, [sp, #40]	; 0x28
 801ec82:	f8d7 c004 	ldr.w	ip, [r7, #4]
 801ec86:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 801ec8a:	f8d7 c008 	ldr.w	ip, [r7, #8]
 801ec8e:	f8cd c020 	str.w	ip, [sp, #32]
 801ec92:	f8d7 c00c 	ldr.w	ip, [r7, #12]
 801ec96:	f8cd c01c 	str.w	ip, [sp, #28]
 801ec9a:	f8d7 c010 	ldr.w	ip, [r7, #16]
 801ec9e:	f8cd c018 	str.w	ip, [sp, #24]
 801eca2:	f8d7 c014 	ldr.w	ip, [r7, #20]
 801eca6:	f8cd c014 	str.w	ip, [sp, #20]
 801ecaa:	f8d7 c018 	ldr.w	ip, [r7, #24]
 801ecae:	f8cd c010 	str.w	ip, [sp, #16]
 801ecb2:	69fb      	ldr	r3, [r7, #28]
 801ecb4:	9303      	str	r3, [sp, #12]
 801ecb6:	9602      	str	r6, [sp, #8]
 801ecb8:	9501      	str	r5, [sp, #4]
 801ecba:	9200      	str	r2, [sp, #0]
 801ecbc:	4602      	mov	r2, r0
 801ecbe:	460b      	mov	r3, r1
 801ecc0:	4621      	mov	r1, r4
 801ecc2:	482a      	ldr	r0, [pc, #168]	; (801ed6c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9d4>)
 801ecc4:	f7f6 fad2 	bl	801526c <LOGGER_Print>
 801ecc8:	f7f6 fa90 	bl	80151ec <LOGGER_PrintNL>
 801eccc:	f7f6 faf9 	bl	80152c2 <LOGGER_EndSection>
 801ecd0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ecd2:	f103 000c 	add.w	r0, r3, #12
 801ecd6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 801ecd8:	3341      	adds	r3, #65	; 0x41
 801ecda:	2211      	movs	r2, #17
 801ecdc:	4619      	mov	r1, r3
 801ecde:	f00c faaa 	bl	802b236 <memcpy>
 801ece2:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801ece4:	f000 f844 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 801ece8:	4603      	mov	r3, r0
 801ecea:	2b00      	cmp	r3, #0
 801ecec:	d030      	beq.n	801ed50 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b8>
 801ecee:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801ecf2:	3b01      	subs	r3, #1
 801ecf4:	2b06      	cmp	r3, #6
 801ecf6:	d829      	bhi.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ecf8:	a201      	add	r2, pc, #4	; (adr r2, 801ed00 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x968>)
 801ecfa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ecfe:	bf00      	nop
 801ed00:	0801ed1d 	.word	0x0801ed1d
 801ed04:	0801ed25 	.word	0x0801ed25
 801ed08:	0801ed2d 	.word	0x0801ed2d
 801ed0c:	0801ed35 	.word	0x0801ed35
 801ed10:	0801ed3d 	.word	0x0801ed3d
 801ed14:	0801ed4d 	.word	0x0801ed4d
 801ed18:	0801ed45 	.word	0x0801ed45
 801ed1c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed1e:	2201      	movs	r2, #1
 801ed20:	72da      	strb	r2, [r3, #11]
 801ed22:	e013      	b.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ed24:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed26:	2202      	movs	r2, #2
 801ed28:	72da      	strb	r2, [r3, #11]
 801ed2a:	e00f      	b.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ed2c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed2e:	2203      	movs	r2, #3
 801ed30:	72da      	strb	r2, [r3, #11]
 801ed32:	e00b      	b.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ed34:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed36:	2204      	movs	r2, #4
 801ed38:	72da      	strb	r2, [r3, #11]
 801ed3a:	e007      	b.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ed3c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed3e:	2205      	movs	r2, #5
 801ed40:	72da      	strb	r2, [r3, #11]
 801ed42:	e003      	b.n	801ed4c <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9b4>
 801ed44:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 801ed46:	2206      	movs	r2, #6
 801ed48:	72da      	strb	r2, [r3, #11]
 801ed4a:	bf00      	nop
 801ed4c:	2301      	movs	r3, #1
 801ed4e:	e003      	b.n	801ed58 <14badbfcf8ba87e6cb548e87226eea3b20d9e928+0x9c0>
 801ed50:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 801ed52:	f7f0 fdfb 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801ed56:	2300      	movs	r3, #0
 801ed58:	4618      	mov	r0, r3
 801ed5a:	377c      	adds	r7, #124	; 0x7c
 801ed5c:	46bd      	mov	sp, r7
 801ed5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ed60:	08030444 	.word	0x08030444
 801ed64:	20000278 	.word	0x20000278
 801ed68:	08030350 	.word	0x08030350
 801ed6c:	080303c4 	.word	0x080303c4

0801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>:
 801ed70:	b580      	push	{r7, lr}
 801ed72:	b082      	sub	sp, #8
 801ed74:	af00      	add	r7, sp, #0
 801ed76:	6078      	str	r0, [r7, #4]
 801ed78:	687b      	ldr	r3, [r7, #4]
 801ed7a:	2250      	movs	r2, #80	; 0x50
 801ed7c:	705a      	strb	r2, [r3, #1]
 801ed7e:	687b      	ldr	r3, [r7, #4]
 801ed80:	2201      	movs	r2, #1
 801ed82:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 801ed86:	687b      	ldr	r3, [r7, #4]
 801ed88:	781b      	ldrb	r3, [r3, #0]
 801ed8a:	2b90      	cmp	r3, #144	; 0x90
 801ed8c:	d10f      	bne.n	801edae <84a9c9a6c63997e804410fedf3e4beedf650a414+0x3e>
 801ed8e:	687b      	ldr	r3, [r7, #4]
 801ed90:	2201      	movs	r2, #1
 801ed92:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 801ed96:	687b      	ldr	r3, [r7, #4]
 801ed98:	2200      	movs	r2, #0
 801ed9a:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 801ed9e:	f7f7 fcbf 	bl	8016720 <281684afe20744fe8e8db0e02bb6f53b74a050bd>
 801eda2:	4603      	mov	r3, r0
 801eda4:	461a      	mov	r2, r3
 801eda6:	687b      	ldr	r3, [r7, #4]
 801eda8:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 801edac:	e00e      	b.n	801edcc <84a9c9a6c63997e804410fedf3e4beedf650a414+0x5c>
 801edae:	687b      	ldr	r3, [r7, #4]
 801edb0:	2205      	movs	r2, #5
 801edb2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 801edb6:	687b      	ldr	r3, [r7, #4]
 801edb8:	2200      	movs	r2, #0
 801edba:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 801edbe:	f7f7 fcbb 	bl	8016738 <6339f3934eecab924c4cd30c35957a539872f6f3>
 801edc2:	4603      	mov	r3, r0
 801edc4:	461a      	mov	r2, r3
 801edc6:	687b      	ldr	r3, [r7, #4]
 801edc8:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 801edcc:	6878      	ldr	r0, [r7, #4]
 801edce:	f000 fa19 	bl	801f204 <send_internal>
 801edd2:	4603      	mov	r3, r0
 801edd4:	4618      	mov	r0, r3
 801edd6:	3708      	adds	r7, #8
 801edd8:	46bd      	mov	sp, r7
 801edda:	bd80      	pop	{r7, pc}

0801eddc <249d70512359d3b556e86d60c45850a37e74e9ce>:
 801eddc:	b580      	push	{r7, lr}
 801edde:	b090      	sub	sp, #64	; 0x40
 801ede0:	af02      	add	r7, sp, #8
 801ede2:	6078      	str	r0, [r7, #4]
 801ede4:	4b55      	ldr	r3, [pc, #340]	; (801ef3c <249d70512359d3b556e86d60c45850a37e74e9ce+0x160>)
 801ede6:	681b      	ldr	r3, [r3, #0]
 801ede8:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801edec:	637b      	str	r3, [r7, #52]	; 0x34
 801edee:	f7f0 ff5b 	bl	800fca8 <207e15ee7bccb2eb76dd4c1d27604170dc079160>
 801edf2:	6338      	str	r0, [r7, #48]	; 0x30
 801edf4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801edf6:	2b00      	cmp	r3, #0
 801edf8:	d10e      	bne.n	801ee18 <249d70512359d3b556e86d60c45850a37e74e9ce+0x3c>
 801edfa:	4a51      	ldr	r2, [pc, #324]	; (801ef40 <249d70512359d3b556e86d60c45850a37e74e9ce+0x164>)
 801edfc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ee00:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ee04:	e883 0003 	stmia.w	r3, {r0, r1}
 801ee08:	4a4e      	ldr	r2, [pc, #312]	; (801ef44 <249d70512359d3b556e86d60c45850a37e74e9ce+0x168>)
 801ee0a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ee0e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ee12:	f7f6 f9f9 	bl	8015208 <LOGGER_PrintLine>
 801ee16:	e08e      	b.n	801ef36 <249d70512359d3b556e86d60c45850a37e74e9ce+0x15a>
 801ee18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee1a:	2250      	movs	r2, #80	; 0x50
 801ee1c:	705a      	strb	r2, [r3, #1]
 801ee1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee20:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 801ee24:	2b00      	cmp	r3, #0
 801ee26:	d014      	beq.n	801ee52 <249d70512359d3b556e86d60c45850a37e74e9ce+0x76>
 801ee28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee2a:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801ee2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee30:	f893 1055 	ldrb.w	r1, [r3, #85]	; 0x55
 801ee34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee36:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801ee3a:	2b05      	cmp	r3, #5
 801ee3c:	bf0c      	ite	eq
 801ee3e:	2301      	moveq	r3, #1
 801ee40:	2300      	movne	r3, #0
 801ee42:	b2da      	uxtb	r2, r3
 801ee44:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee46:	3356      	adds	r3, #86	; 0x56
 801ee48:	9300      	str	r3, [sp, #0]
 801ee4a:	2301      	movs	r3, #1
 801ee4c:	f7ee fed6 	bl	800dbfc <8c07271647b7d6eded14e64818e8777967155b78>
 801ee50:	e01c      	b.n	801ee8c <249d70512359d3b556e86d60c45850a37e74e9ce+0xb0>
 801ee52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee54:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801ee58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee5a:	f893 1055 	ldrb.w	r1, [r3, #85]	; 0x55
 801ee5e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee60:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801ee64:	2b05      	cmp	r3, #5
 801ee66:	bf0c      	ite	eq
 801ee68:	2301      	moveq	r3, #1
 801ee6a:	2300      	movne	r3, #0
 801ee6c:	b2da      	uxtb	r2, r3
 801ee6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee70:	3356      	adds	r3, #86	; 0x56
 801ee72:	9300      	str	r3, [sp, #0]
 801ee74:	2300      	movs	r3, #0
 801ee76:	f7ee fec1 	bl	800dbfc <8c07271647b7d6eded14e64818e8777967155b78>
 801ee7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee7c:	f103 0241 	add.w	r2, r3, #65	; 0x41
 801ee80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee82:	331d      	adds	r3, #29
 801ee84:	4619      	mov	r1, r3
 801ee86:	4610      	mov	r0, r2
 801ee88:	f009 fed8 	bl	8028c3c <99726ecaa54bb51ed3276e5afbd8833277b6b1cc>
 801ee8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ee8e:	781b      	ldrb	r3, [r3, #0]
 801ee90:	2b90      	cmp	r3, #144	; 0x90
 801ee92:	d044      	beq.n	801ef1e <249d70512359d3b556e86d60c45850a37e74e9ce+0x142>
 801ee94:	2b90      	cmp	r3, #144	; 0x90
 801ee96:	dc46      	bgt.n	801ef26 <249d70512359d3b556e86d60c45850a37e74e9ce+0x14a>
 801ee98:	2b50      	cmp	r3, #80	; 0x50
 801ee9a:	d002      	beq.n	801eea2 <249d70512359d3b556e86d60c45850a37e74e9ce+0xc6>
 801ee9c:	2b53      	cmp	r3, #83	; 0x53
 801ee9e:	d036      	beq.n	801ef0e <249d70512359d3b556e86d60c45850a37e74e9ce+0x132>
 801eea0:	e041      	b.n	801ef26 <249d70512359d3b556e86d60c45850a37e74e9ce+0x14a>
 801eea2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801eea4:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 801eea8:	2b00      	cmp	r3, #0
 801eeaa:	d116      	bne.n	801eeda <249d70512359d3b556e86d60c45850a37e74e9ce+0xfe>
 801eeac:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801eeae:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 801eeb2:	2b00      	cmp	r3, #0
 801eeb4:	d10d      	bne.n	801eed2 <249d70512359d3b556e86d60c45850a37e74e9ce+0xf6>
 801eeb6:	4a24      	ldr	r2, [pc, #144]	; (801ef48 <249d70512359d3b556e86d60c45850a37e74e9ce+0x16c>)
 801eeb8:	f107 0318 	add.w	r3, r7, #24
 801eebc:	e892 0003 	ldmia.w	r2, {r0, r1}
 801eec0:	e883 0003 	stmia.w	r3, {r0, r1}
 801eec4:	4a21      	ldr	r2, [pc, #132]	; (801ef4c <249d70512359d3b556e86d60c45850a37e74e9ce+0x170>)
 801eec6:	f107 0318 	add.w	r3, r7, #24
 801eeca:	e893 0003 	ldmia.w	r3, {r0, r1}
 801eece:	f7f6 f99b 	bl	8015208 <LOGGER_PrintLine>
 801eed2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801eed4:	2200      	movs	r2, #0
 801eed6:	705a      	strb	r2, [r3, #1]
 801eed8:	e015      	b.n	801ef06 <249d70512359d3b556e86d60c45850a37e74e9ce+0x12a>
 801eeda:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801eedc:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 801eee0:	2b00      	cmp	r3, #0
 801eee2:	d10d      	bne.n	801ef00 <249d70512359d3b556e86d60c45850a37e74e9ce+0x124>
 801eee4:	4a18      	ldr	r2, [pc, #96]	; (801ef48 <249d70512359d3b556e86d60c45850a37e74e9ce+0x16c>)
 801eee6:	f107 0308 	add.w	r3, r7, #8
 801eeea:	e892 0003 	ldmia.w	r2, {r0, r1}
 801eeee:	e883 0003 	stmia.w	r3, {r0, r1}
 801eef2:	4a17      	ldr	r2, [pc, #92]	; (801ef50 <249d70512359d3b556e86d60c45850a37e74e9ce+0x174>)
 801eef4:	f107 0308 	add.w	r3, r7, #8
 801eef8:	e893 0003 	ldmia.w	r3, {r0, r1}
 801eefc:	f7f6 f984 	bl	8015208 <LOGGER_PrintLine>
 801ef00:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ef02:	2200      	movs	r2, #0
 801ef04:	701a      	strb	r2, [r3, #0]
 801ef06:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ef08:	f7f0 fd20 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801ef0c:	e013      	b.n	801ef36 <249d70512359d3b556e86d60c45850a37e74e9ce+0x15a>
 801ef0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ef10:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 801ef14:	4619      	mov	r1, r3
 801ef16:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ef18:	f000 fc14 	bl	801f744 <six2six_sendDone>
 801ef1c:	e00b      	b.n	801ef36 <249d70512359d3b556e86d60c45850a37e74e9ce+0x15a>
 801ef1e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ef20:	f7f0 fd14 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801ef24:	e007      	b.n	801ef36 <249d70512359d3b556e86d60c45850a37e74e9ce+0x15a>
 801ef26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801ef28:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 801ef2c:	4619      	mov	r1, r3
 801ef2e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801ef30:	f002 fff1 	bl	8021f16 <c4cc1e8c684869221cde02c1ffd97d6034352506>
 801ef34:	bf00      	nop
 801ef36:	3738      	adds	r7, #56	; 0x38
 801ef38:	46bd      	mov	sp, r7
 801ef3a:	bd80      	pop	{r7, pc}
 801ef3c:	20000040 	.word	0x20000040
 801ef40:	080304a0 	.word	0x080304a0
 801ef44:	0803044c 	.word	0x0803044c
 801ef48:	080304a8 	.word	0x080304a8
 801ef4c:	08030474 	.word	0x08030474
 801ef50:	0803048c 	.word	0x0803048c

0801ef54 <b5c72b6730fdfd332fa9751af01c9df74e6e3448>:
 801ef54:	b5b0      	push	{r4, r5, r7, lr}
 801ef56:	b090      	sub	sp, #64	; 0x40
 801ef58:	af02      	add	r7, sp, #8
 801ef5a:	6078      	str	r0, [r7, #4]
 801ef5c:	f7f0 fee0 	bl	800fd20 <52883b33bb80ca8d67a0717f5cdfbf4b90874f00>
 801ef60:	6378      	str	r0, [r7, #52]	; 0x34
 801ef62:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ef64:	2b00      	cmp	r3, #0
 801ef66:	d10e      	bne.n	801ef86 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x32>
 801ef68:	4a9e      	ldr	r2, [pc, #632]	; (801f1e4 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x290>)
 801ef6a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ef6e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801ef72:	e883 0003 	stmia.w	r3, {r0, r1}
 801ef76:	4a9c      	ldr	r2, [pc, #624]	; (801f1e8 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x294>)
 801ef78:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801ef7c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ef80:	f7f6 f942 	bl	8015208 <LOGGER_PrintLine>
 801ef84:	e12a      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801ef86:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ef88:	2250      	movs	r2, #80	; 0x50
 801ef8a:	705a      	strb	r2, [r3, #1]
 801ef8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ef8e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 801ef92:	f083 0301 	eor.w	r3, r3, #1
 801ef96:	b2db      	uxtb	r3, r3
 801ef98:	2b00      	cmp	r3, #0
 801ef9a:	d024      	beq.n	801efe6 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x92>
 801ef9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801ef9e:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 801efa2:	2b01      	cmp	r3, #1
 801efa4:	d11f      	bne.n	801efe6 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x92>
 801efa6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efa8:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801efac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efae:	6859      	ldr	r1, [r3, #4]
 801efb0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efb2:	7a1b      	ldrb	r3, [r3, #8]
 801efb4:	461a      	mov	r2, r3
 801efb6:	f7f3 fcc7 	bl	8012948 <19861f752ed5b4a4fab486514c3b7aa2c914e6fa>
 801efba:	4603      	mov	r3, r0
 801efbc:	f083 0301 	eor.w	r3, r3, #1
 801efc0:	b2db      	uxtb	r3, r3
 801efc2:	2b00      	cmp	r3, #0
 801efc4:	d00b      	beq.n	801efde <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x8a>
 801efc6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efc8:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801efcc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efce:	f103 0156 	add.w	r1, r3, #86	; 0x56
 801efd2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efd4:	685a      	ldr	r2, [r3, #4]
 801efd6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efd8:	7a1b      	ldrb	r3, [r3, #8]
 801efda:	f7f3 feb3 	bl	8012d44 <27342039fe058efec7af5218a4abe449221e7bb4>
 801efde:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801efe0:	f7f0 fcb4 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801efe4:	e0fa      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801efe6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efe8:	f103 0042 	add.w	r0, r3, #66	; 0x42
 801efec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801efee:	f993 10b6 	ldrsb.w	r1, [r3, #182]	; 0xb6
 801eff2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801eff4:	f103 0456 	add.w	r4, r3, #86	; 0x56
 801eff8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801effa:	f893 509f 	ldrb.w	r5, [r3, #159]	; 0x9f
 801effe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f000:	f893 309c 	ldrb.w	r3, [r3, #156]	; 0x9c
 801f004:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 801f006:	f892 20a1 	ldrb.w	r2, [r2, #161]	; 0xa1
 801f00a:	2a00      	cmp	r2, #0
 801f00c:	bf0c      	ite	eq
 801f00e:	2201      	moveq	r2, #1
 801f010:	2200      	movne	r2, #0
 801f012:	b2d2      	uxtb	r2, r2
 801f014:	9201      	str	r2, [sp, #4]
 801f016:	9300      	str	r3, [sp, #0]
 801f018:	462b      	mov	r3, r5
 801f01a:	4622      	mov	r2, r4
 801f01c:	f7ee fd4a 	bl	800dab4 <9f1a6cf98ed84541f8f0a98d41c73f676d47aa86>
 801f020:	4603      	mov	r3, r0
 801f022:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 801f026:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801f02a:	f083 0301 	eor.w	r3, r3, #1
 801f02e:	b2db      	uxtb	r3, r3
 801f030:	2b00      	cmp	r3, #0
 801f032:	d011      	beq.n	801f058 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x104>
 801f034:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f036:	f7f0 fc89 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f03a:	4a6a      	ldr	r2, [pc, #424]	; (801f1e4 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x290>)
 801f03c:	f107 0320 	add.w	r3, r7, #32
 801f040:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f044:	e883 0003 	stmia.w	r3, {r0, r1}
 801f048:	4a68      	ldr	r2, [pc, #416]	; (801f1ec <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x298>)
 801f04a:	f107 0320 	add.w	r3, r7, #32
 801f04e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f052:	f7f6 f8d9 	bl	8015208 <LOGGER_PrintLine>
 801f056:	e0c1      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f058:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f05a:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801f05e:	2b05      	cmp	r3, #5
 801f060:	d009      	beq.n	801f076 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x122>
 801f062:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f064:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801f068:	2b02      	cmp	r3, #2
 801f06a:	d004      	beq.n	801f076 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x122>
 801f06c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f06e:	f893 309e 	ldrb.w	r3, [r3, #158]	; 0x9e
 801f072:	2b03      	cmp	r3, #3
 801f074:	d13c      	bne.n	801f0f0 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x19c>
 801f076:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f078:	f893 1053 	ldrb.w	r1, [r3, #83]	; 0x53
 801f07c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f07e:	f103 0242 	add.w	r2, r3, #66	; 0x42
 801f082:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f084:	9200      	str	r2, [sp, #0]
 801f086:	f8d3 2056 	ldr.w	r2, [r3, #86]	; 0x56
 801f08a:	4610      	mov	r0, r2
 801f08c:	f893 205a 	ldrb.w	r2, [r3, #90]	; 0x5a
 801f090:	2300      	movs	r3, #0
 801f092:	f362 0307 	bfi	r3, r2, #0, #8
 801f096:	4602      	mov	r2, r0
 801f098:	4608      	mov	r0, r1
 801f09a:	f7ee ff45 	bl	800df28 <e5d2a5998d8277723156e3d7efef427ee7af0c3f>
 801f09e:	4603      	mov	r3, r0
 801f0a0:	2b00      	cmp	r3, #0
 801f0a2:	d011      	beq.n	801f0c8 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x174>
 801f0a4:	4a52      	ldr	r2, [pc, #328]	; (801f1f0 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x29c>)
 801f0a6:	f107 0318 	add.w	r3, r7, #24
 801f0aa:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f0ae:	e883 0003 	stmia.w	r3, {r0, r1}
 801f0b2:	4a50      	ldr	r2, [pc, #320]	; (801f1f4 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x2a0>)
 801f0b4:	f107 0318 	add.w	r3, r7, #24
 801f0b8:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f0bc:	f7f6 f8a4 	bl	8015208 <LOGGER_PrintLine>
 801f0c0:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f0c2:	f7f0 fc43 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f0c6:	e089      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f0c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f0ca:	f893 1053 	ldrb.w	r1, [r3, #83]	; 0x53
 801f0ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f0d0:	f103 0242 	add.w	r2, r3, #66	; 0x42
 801f0d4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f0d6:	9200      	str	r2, [sp, #0]
 801f0d8:	f8d3 2056 	ldr.w	r2, [r3, #86]	; 0x56
 801f0dc:	4610      	mov	r0, r2
 801f0de:	f893 205a 	ldrb.w	r2, [r3, #90]	; 0x5a
 801f0e2:	2300      	movs	r3, #0
 801f0e4:	f362 0307 	bfi	r3, r2, #0, #8
 801f0e8:	4602      	mov	r2, r0
 801f0ea:	4608      	mov	r0, r1
 801f0ec:	f7ee fece 	bl	800de8c <5e760e12acdfba35bd9ad67595126b5a8623f934>
 801f0f0:	2300      	movs	r3, #0
 801f0f2:	863b      	strh	r3, [r7, #48]	; 0x30
 801f0f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f0f6:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 801f0fa:	2b01      	cmp	r3, #1
 801f0fc:	d116      	bne.n	801f12c <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x1d8>
 801f0fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f100:	f893 309d 	ldrb.w	r3, [r3, #157]	; 0x9d
 801f104:	2b00      	cmp	r3, #0
 801f106:	d011      	beq.n	801f12c <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x1d8>
 801f108:	f107 0230 	add.w	r2, r7, #48	; 0x30
 801f10c:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 801f110:	4619      	mov	r1, r3
 801f112:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f114:	f000 fc74 	bl	801fa00 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb>
 801f118:	4603      	mov	r3, r0
 801f11a:	f083 0301 	eor.w	r3, r3, #1
 801f11e:	b2db      	uxtb	r3, r3
 801f120:	2b00      	cmp	r3, #0
 801f122:	d003      	beq.n	801f12c <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x1d8>
 801f124:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f126:	f7f0 fc11 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f12a:	e057      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f12c:	8e3b      	ldrh	r3, [r7, #48]	; 0x30
 801f12e:	b2db      	uxtb	r3, r3
 801f130:	4619      	mov	r1, r3
 801f132:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f134:	f00a f9e6 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 801f138:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f13a:	2200      	movs	r2, #0
 801f13c:	f883 209f 	strb.w	r2, [r3, #159]	; 0x9f
 801f140:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f142:	f893 3052 	ldrb.w	r3, [r3, #82]	; 0x52
 801f146:	2b03      	cmp	r3, #3
 801f148:	d843      	bhi.n	801f1d2 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x27e>
 801f14a:	a201      	add	r2, pc, #4	; (adr r2, 801f150 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x1fc>)
 801f14c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801f150:	0801f183 	.word	0x0801f183
 801f154:	0801f161 	.word	0x0801f161
 801f158:	0801f18b 	.word	0x0801f18b
 801f15c:	0801f1af 	.word	0x0801f1af
 801f160:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f162:	7a1b      	ldrb	r3, [r3, #8]
 801f164:	2b00      	cmp	r3, #0
 801f166:	d103      	bne.n	801f170 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x21c>
 801f168:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f16a:	f7f0 fbef 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f16e:	e035      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f170:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 801f172:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 801f176:	2b00      	cmp	r3, #0
 801f178:	d02f      	beq.n	801f1da <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x286>
 801f17a:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f17c:	f002 ff30 	bl	8021fe0 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69>
 801f180:	e02b      	b.n	801f1da <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x286>
 801f182:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f184:	f7f0 fbe2 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f188:	e028      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f18a:	4a1b      	ldr	r2, [pc, #108]	; (801f1f8 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x2a4>)
 801f18c:	f107 0310 	add.w	r3, r7, #16
 801f190:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f194:	e883 0003 	stmia.w	r3, {r0, r1}
 801f198:	4a18      	ldr	r2, [pc, #96]	; (801f1fc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x2a8>)
 801f19a:	f107 0310 	add.w	r3, r7, #16
 801f19e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f1a2:	f7f6 f831 	bl	8015208 <LOGGER_PrintLine>
 801f1a6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f1a8:	f7f0 fbd0 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f1ac:	e016      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f1ae:	4a12      	ldr	r2, [pc, #72]	; (801f1f8 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x2a4>)
 801f1b0:	f107 0308 	add.w	r3, r7, #8
 801f1b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f1b8:	e883 0003 	stmia.w	r3, {r0, r1}
 801f1bc:	4a10      	ldr	r2, [pc, #64]	; (801f200 <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x2ac>)
 801f1be:	f107 0308 	add.w	r3, r7, #8
 801f1c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f1c6:	f7f6 f81f 	bl	8015208 <LOGGER_PrintLine>
 801f1ca:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f1cc:	f7f0 fbbe 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f1d0:	e004      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f1d2:	6b78      	ldr	r0, [r7, #52]	; 0x34
 801f1d4:	f7f0 fbba 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f1d8:	e000      	b.n	801f1dc <b5c72b6730fdfd332fa9751af01c9df74e6e3448+0x288>
 801f1da:	bf00      	nop
 801f1dc:	3738      	adds	r7, #56	; 0x38
 801f1de:	46bd      	mov	sp, r7
 801f1e0:	bdb0      	pop	{r4, r5, r7, pc}
 801f1e2:	bf00      	nop
 801f1e4:	080304a8 	.word	0x080304a8
 801f1e8:	080304b0 	.word	0x080304b0
 801f1ec:	080304d4 	.word	0x080304d4
 801f1f0:	08030444 	.word	0x08030444
 801f1f4:	08030504 	.word	0x08030504
 801f1f8:	0803043c 	.word	0x0803043c
 801f1fc:	08030514 	.word	0x08030514
 801f200:	08030534 	.word	0x08030534

0801f204 <send_internal>:
 801f204:	b590      	push	{r4, r7, lr}
 801f206:	b087      	sub	sp, #28
 801f208:	af00      	add	r7, sp, #0
 801f20a:	60f8      	str	r0, [r7, #12]
 801f20c:	68fb      	ldr	r3, [r7, #12]
 801f20e:	3341      	adds	r3, #65	; 0x41
 801f210:	4618      	mov	r0, r3
 801f212:	f7ef ff85 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 801f216:	4603      	mov	r3, r0
 801f218:	2b00      	cmp	r3, #0
 801f21a:	d029      	beq.n	801f270 <send_internal+0x6c>
 801f21c:	68fb      	ldr	r3, [r7, #12]
 801f21e:	2201      	movs	r2, #1
 801f220:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801f224:	68fb      	ldr	r3, [r7, #12]
 801f226:	331d      	adds	r3, #29
 801f228:	4618      	mov	r0, r3
 801f22a:	f7ef ff79 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 801f22e:	4603      	mov	r3, r0
 801f230:	2b00      	cmp	r3, #0
 801f232:	d00f      	beq.n	801f254 <send_internal+0x50>
 801f234:	68fb      	ldr	r3, [r7, #12]
 801f236:	331d      	adds	r3, #29
 801f238:	4618      	mov	r0, r3
 801f23a:	f7ef ffb9 	bl	800f1b0 <271b2dbe31e411eac579adb987eb6de74d66e6b2>
 801f23e:	4603      	mov	r3, r0
 801f240:	f083 0301 	eor.w	r3, r3, #1
 801f244:	b2db      	uxtb	r3, r3
 801f246:	2b00      	cmp	r3, #0
 801f248:	d004      	beq.n	801f254 <send_internal+0x50>
 801f24a:	68fb      	ldr	r3, [r7, #12]
 801f24c:	2202      	movs	r2, #2
 801f24e:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801f252:	e011      	b.n	801f278 <send_internal+0x74>
 801f254:	68fb      	ldr	r3, [r7, #12]
 801f256:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 801f25a:	2b02      	cmp	r3, #2
 801f25c:	d10c      	bne.n	801f278 <send_internal+0x74>
 801f25e:	68fb      	ldr	r3, [r7, #12]
 801f260:	7f5b      	ldrb	r3, [r3, #29]
 801f262:	2b00      	cmp	r3, #0
 801f264:	d108      	bne.n	801f278 <send_internal+0x74>
 801f266:	68fb      	ldr	r3, [r7, #12]
 801f268:	2202      	movs	r2, #2
 801f26a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801f26e:	e003      	b.n	801f278 <send_internal+0x74>
 801f270:	68fb      	ldr	r3, [r7, #12]
 801f272:	2204      	movs	r2, #4
 801f274:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801f278:	68fb      	ldr	r3, [r7, #12]
 801f27a:	2200      	movs	r2, #0
 801f27c:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 801f280:	68fc      	ldr	r4, [r7, #12]
 801f282:	463b      	mov	r3, r7
 801f284:	4618      	mov	r0, r3
 801f286:	f7fa fb97 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801f28a:	f104 0356 	add.w	r3, r4, #86	; 0x56
 801f28e:	463a      	mov	r2, r7
 801f290:	6811      	ldr	r1, [r2, #0]
 801f292:	6019      	str	r1, [r3, #0]
 801f294:	7912      	ldrb	r2, [r2, #4]
 801f296:	711a      	strb	r2, [r3, #4]
 801f298:	68fb      	ldr	r3, [r7, #12]
 801f29a:	2240      	movs	r2, #64	; 0x40
 801f29c:	705a      	strb	r2, [r3, #1]
 801f29e:	2301      	movs	r3, #1
 801f2a0:	4618      	mov	r0, r3
 801f2a2:	371c      	adds	r7, #28
 801f2a4:	46bd      	mov	sp, r7
 801f2a6:	bd90      	pop	{r4, r7, pc}

0801f2a8 <45a0de43b00f668f42645b8c08621371fe4b9150>:
 801f2a8:	b580      	push	{r7, lr}
 801f2aa:	b08a      	sub	sp, #40	; 0x28
 801f2ac:	af00      	add	r7, sp, #0
 801f2ae:	6078      	str	r0, [r7, #4]
 801f2b0:	f107 030c 	add.w	r3, r7, #12
 801f2b4:	2200      	movs	r2, #0
 801f2b6:	601a      	str	r2, [r3, #0]
 801f2b8:	605a      	str	r2, [r3, #4]
 801f2ba:	609a      	str	r2, [r3, #8]
 801f2bc:	60da      	str	r2, [r3, #12]
 801f2be:	741a      	strb	r2, [r3, #16]
 801f2c0:	2302      	movs	r3, #2
 801f2c2:	733b      	strb	r3, [r7, #12]
 801f2c4:	f107 030c 	add.w	r3, r7, #12
 801f2c8:	3301      	adds	r3, #1
 801f2ca:	4619      	mov	r1, r3
 801f2cc:	2000      	movs	r0, #0
 801f2ce:	f7ee ff4f 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801f2d2:	4603      	mov	r3, r0
 801f2d4:	f083 0301 	eor.w	r3, r3, #1
 801f2d8:	b2db      	uxtb	r3, r3
 801f2da:	2b00      	cmp	r3, #0
 801f2dc:	d11f      	bne.n	801f31e <45a0de43b00f668f42645b8c08621371fe4b9150+0x76>
 801f2de:	f107 030c 	add.w	r3, r7, #12
 801f2e2:	3301      	adds	r3, #1
 801f2e4:	4619      	mov	r1, r3
 801f2e6:	2000      	movs	r0, #0
 801f2e8:	f7ee ff42 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 801f2ec:	4603      	mov	r3, r0
 801f2ee:	2b00      	cmp	r3, #0
 801f2f0:	d00a      	beq.n	801f308 <45a0de43b00f668f42645b8c08621371fe4b9150+0x60>
 801f2f2:	f107 030c 	add.w	r3, r7, #12
 801f2f6:	4618      	mov	r0, r3
 801f2f8:	f7fe f924 	bl	801d544 <0a6eef3dd890049c6feb9f053ae4732930866b35>
 801f2fc:	4603      	mov	r3, r0
 801f2fe:	f083 0301 	eor.w	r3, r3, #1
 801f302:	b2db      	uxtb	r3, r3
 801f304:	2b00      	cmp	r3, #0
 801f306:	d10a      	bne.n	801f31e <45a0de43b00f668f42645b8c08621371fe4b9150+0x76>
 801f308:	f107 0320 	add.w	r3, r7, #32
 801f30c:	4618      	mov	r0, r3
 801f30e:	f7fa fb53 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801f312:	f107 0320 	add.w	r3, r7, #32
 801f316:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f31a:	f7ee ff75 	bl	800e208 <aee20a6aed232d40647d21a3bace71ea0c450c20>
 801f31e:	f000 f931 	bl	801f584 <sendKA>
 801f322:	bf00      	nop
 801f324:	3728      	adds	r7, #40	; 0x28
 801f326:	46bd      	mov	sp, r7
 801f328:	bd80      	pop	{r7, pc}

0801f32a <225fdc1664c4e3cff7509f058a004348ebce99b7>:
 801f32a:	b580      	push	{r7, lr}
 801f32c:	b084      	sub	sp, #16
 801f32e:	af00      	add	r7, sp, #0
 801f330:	6078      	str	r0, [r7, #4]
 801f332:	f7ed ffa1 	bl	800d278 <5dd6fb766eeca12f408d546c8d4a40a272e3f785>
 801f336:	4603      	mov	r3, r0
 801f338:	73fb      	strb	r3, [r7, #15]
 801f33a:	f7f2 fd8d 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 801f33e:	4603      	mov	r3, r0
 801f340:	4619      	mov	r1, r3
 801f342:	7bfb      	ldrb	r3, [r7, #15]
 801f344:	1c5a      	adds	r2, r3, #1
 801f346:	4613      	mov	r3, r2
 801f348:	005b      	lsls	r3, r3, #1
 801f34a:	4413      	add	r3, r2
 801f34c:	005b      	lsls	r3, r3, #1
 801f34e:	461a      	mov	r2, r3
 801f350:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801f354:	fb93 f3f2 	sdiv	r3, r3, r2
 801f358:	4299      	cmp	r1, r3
 801f35a:	da01      	bge.n	801f360 <225fdc1664c4e3cff7509f058a004348ebce99b7+0x36>
 801f35c:	f000 f804 	bl	801f368 <sendEB>
 801f360:	bf00      	nop
 801f362:	3710      	adds	r7, #16
 801f364:	46bd      	mov	sp, r7
 801f366:	bd80      	pop	{r7, pc}

0801f368 <sendEB>:
 801f368:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f36a:	b08d      	sub	sp, #52	; 0x34
 801f36c:	af00      	add	r7, sp, #0
 801f36e:	4b7f      	ldr	r3, [pc, #508]	; (801f56c <sendEB+0x204>)
 801f370:	681b      	ldr	r3, [r3, #0]
 801f372:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801f376:	62fb      	str	r3, [r7, #44]	; 0x2c
 801f378:	f107 0314 	add.w	r3, r7, #20
 801f37c:	2211      	movs	r2, #17
 801f37e:	2100      	movs	r1, #0
 801f380:	4618      	mov	r0, r3
 801f382:	f00b feb9 	bl	802b0f8 <memset>
 801f386:	f7fb fc69 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 801f38a:	4603      	mov	r3, r0
 801f38c:	f083 0301 	eor.w	r3, r3, #1
 801f390:	b2db      	uxtb	r3, r3
 801f392:	2b00      	cmp	r3, #0
 801f394:	d10f      	bne.n	801f3b6 <sendEB+0x4e>
 801f396:	f006 fb1d 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 801f39a:	4603      	mov	r3, r0
 801f39c:	461a      	mov	r2, r3
 801f39e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801f3a2:	429a      	cmp	r2, r3
 801f3a4:	d007      	beq.n	801f3b6 <sendEB+0x4e>
 801f3a6:	f006 fb8f 	bl	8025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>
 801f3aa:	4603      	mov	r3, r0
 801f3ac:	f083 0301 	eor.w	r3, r3, #1
 801f3b0:	b2db      	uxtb	r3, r3
 801f3b2:	2b00      	cmp	r3, #0
 801f3b4:	d009      	beq.n	801f3ca <sendEB+0x62>
 801f3b6:	2050      	movs	r0, #80	; 0x50
 801f3b8:	f7f0 fb2c 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 801f3bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f3be:	2200      	movs	r2, #0
 801f3c0:	705a      	strb	r2, [r3, #1]
 801f3c2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f3c4:	2200      	movs	r2, #0
 801f3c6:	701a      	strb	r2, [r3, #0]
 801f3c8:	e0cc      	b.n	801f564 <sendEB+0x1fc>
 801f3ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f3cc:	785b      	ldrb	r3, [r3, #1]
 801f3ce:	2b00      	cmp	r3, #0
 801f3d0:	f040 80c7 	bne.w	801f562 <sendEB+0x1fa>
 801f3d4:	2050      	movs	r0, #80	; 0x50
 801f3d6:	f7f0 f9ad 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 801f3da:	62b8      	str	r0, [r7, #40]	; 0x28
 801f3dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f3de:	2b00      	cmp	r3, #0
 801f3e0:	d10e      	bne.n	801f400 <sendEB+0x98>
 801f3e2:	4a63      	ldr	r2, [pc, #396]	; (801f570 <sendEB+0x208>)
 801f3e4:	f107 0308 	add.w	r3, r7, #8
 801f3e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f3ec:	e883 0003 	stmia.w	r3, {r0, r1}
 801f3f0:	4a60      	ldr	r2, [pc, #384]	; (801f574 <sendEB+0x20c>)
 801f3f2:	f107 0308 	add.w	r3, r7, #8
 801f3f6:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f3fa:	f7f5 ff05 	bl	8015208 <LOGGER_PrintLine>
 801f3fe:	e0b1      	b.n	801f564 <sendEB+0x1fc>
 801f400:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f402:	2250      	movs	r2, #80	; 0x50
 801f404:	701a      	strb	r2, [r3, #0]
 801f406:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f408:	2250      	movs	r2, #80	; 0x50
 801f40a:	705a      	strb	r2, [r3, #1]
 801f40c:	2121      	movs	r1, #33	; 0x21
 801f40e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801f410:	f00a f840 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 801f414:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f416:	685b      	ldr	r3, [r3, #4]
 801f418:	4a57      	ldr	r2, [pc, #348]	; (801f578 <sendEB+0x210>)
 801f41a:	4614      	mov	r4, r2
 801f41c:	469c      	mov	ip, r3
 801f41e:	f104 0e20 	add.w	lr, r4, #32
 801f422:	4665      	mov	r5, ip
 801f424:	4626      	mov	r6, r4
 801f426:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801f428:	6028      	str	r0, [r5, #0]
 801f42a:	6069      	str	r1, [r5, #4]
 801f42c:	60aa      	str	r2, [r5, #8]
 801f42e:	60eb      	str	r3, [r5, #12]
 801f430:	3410      	adds	r4, #16
 801f432:	f10c 0c10 	add.w	ip, ip, #16
 801f436:	4574      	cmp	r4, lr
 801f438:	d1f3      	bne.n	801f422 <sendEB+0xba>
 801f43a:	4663      	mov	r3, ip
 801f43c:	4622      	mov	r2, r4
 801f43e:	7812      	ldrb	r2, [r2, #0]
 801f440:	701a      	strb	r2, [r3, #0]
 801f442:	f7fe fe1d 	bl	801e080 <4599ddd83c8ba8887c16bb3b34fd73d1aeebea25>
 801f446:	4603      	mov	r3, r0
 801f448:	827b      	strh	r3, [r7, #18]
 801f44a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f44c:	685b      	ldr	r3, [r3, #4]
 801f44e:	331e      	adds	r3, #30
 801f450:	f107 0112 	add.w	r1, r7, #18
 801f454:	2202      	movs	r2, #2
 801f456:	4618      	mov	r0, r3
 801f458:	f7fe feb1 	bl	801e1be <ENDIANNESS_NativeToLittle>
 801f45c:	f7fd fee4 	bl	801d228 <a332c320f50553856ddcee95ff765027b8f3e118>
 801f460:	4603      	mov	r3, r0
 801f462:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801f466:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f468:	789b      	ldrb	r3, [r3, #2]
 801f46a:	2b00      	cmp	r3, #0
 801f46c:	d007      	beq.n	801f47e <sendEB+0x116>
 801f46e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801f472:	2b05      	cmp	r3, #5
 801f474:	d90a      	bls.n	801f48c <sendEB+0x124>
 801f476:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f478:	2200      	movs	r2, #0
 801f47a:	709a      	strb	r2, [r3, #2]
 801f47c:	e006      	b.n	801f48c <sendEB+0x124>
 801f47e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801f482:	2b01      	cmp	r3, #1
 801f484:	d802      	bhi.n	801f48c <sendEB+0x124>
 801f486:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f488:	2201      	movs	r2, #1
 801f48a:	709a      	strb	r2, [r3, #2]
 801f48c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f48e:	789b      	ldrb	r3, [r3, #2]
 801f490:	f083 0301 	eor.w	r3, r3, #1
 801f494:	b2db      	uxtb	r3, r3
 801f496:	2b00      	cmp	r3, #0
 801f498:	d005      	beq.n	801f4a6 <sendEB+0x13e>
 801f49a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f49c:	685b      	ldr	r3, [r3, #4]
 801f49e:	3320      	adds	r3, #32
 801f4a0:	2200      	movs	r2, #0
 801f4a2:	701a      	strb	r2, [r3, #0]
 801f4a4:	e004      	b.n	801f4b0 <sendEB+0x148>
 801f4a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4a8:	685b      	ldr	r3, [r3, #4]
 801f4aa:	3320      	adds	r3, #32
 801f4ac:	2201      	movs	r2, #1
 801f4ae:	701a      	strb	r2, [r3, #0]
 801f4b0:	f7fd fa86 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801f4b4:	4603      	mov	r3, r0
 801f4b6:	461a      	mov	r2, r3
 801f4b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4ba:	685b      	ldr	r3, [r3, #4]
 801f4bc:	3314      	adds	r3, #20
 801f4be:	b2d2      	uxtb	r2, r2
 801f4c0:	701a      	strb	r2, [r3, #0]
 801f4c2:	f7fd fa7d 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 801f4c6:	4603      	mov	r3, r0
 801f4c8:	0a1b      	lsrs	r3, r3, #8
 801f4ca:	b29a      	uxth	r2, r3
 801f4cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4ce:	685b      	ldr	r3, [r3, #4]
 801f4d0:	3315      	adds	r3, #21
 801f4d2:	b2d2      	uxtb	r2, r2
 801f4d4:	701a      	strb	r2, [r3, #0]
 801f4d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4d8:	685b      	ldr	r3, [r3, #4]
 801f4da:	1d1a      	adds	r2, r3, #4
 801f4dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4de:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 801f4e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4e4:	2200      	movs	r2, #0
 801f4e6:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 801f4ea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4ec:	2201      	movs	r2, #1
 801f4ee:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 801f4f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4f4:	22ff      	movs	r2, #255	; 0xff
 801f4f6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 801f4fa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f4fc:	22ff      	movs	r2, #255	; 0xff
 801f4fe:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 801f502:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f504:	2201      	movs	r2, #1
 801f506:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 801f50a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f50c:	2201      	movs	r2, #1
 801f50e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 801f512:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f514:	2200      	movs	r2, #0
 801f516:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 801f51a:	f7f7 f901 	bl	8016720 <281684afe20744fe8e8db0e02bb6f53b74a050bd>
 801f51e:	4603      	mov	r3, r0
 801f520:	461a      	mov	r2, r3
 801f522:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f524:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 801f528:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801f52a:	f7ff fe6b 	bl	801f204 <send_internal>
 801f52e:	4603      	mov	r3, r0
 801f530:	f083 0301 	eor.w	r3, r3, #1
 801f534:	b2db      	uxtb	r3, r3
 801f536:	2b00      	cmp	r3, #0
 801f538:	d00f      	beq.n	801f55a <sendEB+0x1f2>
 801f53a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801f53c:	f7f0 fa06 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f540:	4a0e      	ldr	r2, [pc, #56]	; (801f57c <sendEB+0x214>)
 801f542:	463b      	mov	r3, r7
 801f544:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f548:	e883 0003 	stmia.w	r3, {r0, r1}
 801f54c:	4a0c      	ldr	r2, [pc, #48]	; (801f580 <sendEB+0x218>)
 801f54e:	463b      	mov	r3, r7
 801f550:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f554:	f7f5 fe58 	bl	8015208 <LOGGER_PrintLine>
 801f558:	e004      	b.n	801f564 <sendEB+0x1fc>
 801f55a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f55c:	2201      	movs	r2, #1
 801f55e:	705a      	strb	r2, [r3, #1]
 801f560:	e000      	b.n	801f564 <sendEB+0x1fc>
 801f562:	bf00      	nop
 801f564:	3734      	adds	r7, #52	; 0x34
 801f566:	46bd      	mov	sp, r7
 801f568:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f56a:	bf00      	nop
 801f56c:	20000040 	.word	0x20000040
 801f570:	0803043c 	.word	0x0803043c
 801f574:	08030338 	.word	0x08030338
 801f578:	08031a70 	.word	0x08031a70
 801f57c:	080304a8 	.word	0x080304a8
 801f580:	08030558 	.word	0x08030558

0801f584 <sendKA>:
 801f584:	b5b0      	push	{r4, r5, r7, lr}
 801f586:	b08c      	sub	sp, #48	; 0x30
 801f588:	af00      	add	r7, sp, #0
 801f58a:	4b4e      	ldr	r3, [pc, #312]	; (801f6c4 <sendKA+0x140>)
 801f58c:	681b      	ldr	r3, [r3, #0]
 801f58e:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801f592:	62fb      	str	r3, [r7, #44]	; 0x2c
 801f594:	f7fb fb62 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 801f598:	4603      	mov	r3, r0
 801f59a:	f083 0301 	eor.w	r3, r3, #1
 801f59e:	b2db      	uxtb	r3, r3
 801f5a0:	2b00      	cmp	r3, #0
 801f5a2:	d009      	beq.n	801f5b8 <sendKA+0x34>
 801f5a4:	2050      	movs	r0, #80	; 0x50
 801f5a6:	f7f0 fa35 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 801f5aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f5ac:	2200      	movs	r2, #0
 801f5ae:	705a      	strb	r2, [r3, #1]
 801f5b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f5b2:	2200      	movs	r2, #0
 801f5b4:	701a      	strb	r2, [r3, #0]
 801f5b6:	e081      	b.n	801f6bc <sendKA+0x138>
 801f5b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f5ba:	781b      	ldrb	r3, [r3, #0]
 801f5bc:	2b00      	cmp	r3, #0
 801f5be:	d17a      	bne.n	801f6b6 <sendKA+0x132>
 801f5c0:	f107 031c 	add.w	r3, r7, #28
 801f5c4:	4618      	mov	r0, r3
 801f5c6:	f7fa f9f7 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 801f5ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f5cc:	f8d3 2006 	ldr.w	r2, [r3, #6]
 801f5d0:	4610      	mov	r0, r2
 801f5d2:	7a9b      	ldrb	r3, [r3, #10]
 801f5d4:	2100      	movs	r1, #0
 801f5d6:	f363 0107 	bfi	r1, r3, #0, #8
 801f5da:	f107 031c 	add.w	r3, r7, #28
 801f5de:	cb0c      	ldmia	r3, {r2, r3}
 801f5e0:	f7ee f88a 	bl	800d6f8 <0fa1209e048698b86219960838c5b2bdc21151fc>
 801f5e4:	62b8      	str	r0, [r7, #40]	; 0x28
 801f5e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801f5e8:	2b00      	cmp	r3, #0
 801f5ea:	d066      	beq.n	801f6ba <sendKA+0x136>
 801f5ec:	2302      	movs	r3, #2
 801f5ee:	723b      	strb	r3, [r7, #8]
 801f5f0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 801f5f2:	f107 0309 	add.w	r3, r7, #9
 801f5f6:	6811      	ldr	r1, [r2, #0]
 801f5f8:	6852      	ldr	r2, [r2, #4]
 801f5fa:	6019      	str	r1, [r3, #0]
 801f5fc:	605a      	str	r2, [r3, #4]
 801f5fe:	f107 0308 	add.w	r3, r7, #8
 801f602:	4618      	mov	r0, r3
 801f604:	f7fd fe40 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 801f608:	4603      	mov	r3, r0
 801f60a:	2b00      	cmp	r3, #0
 801f60c:	d109      	bne.n	801f622 <sendKA+0x9e>
 801f60e:	2050      	movs	r0, #80	; 0x50
 801f610:	f7f0 fa00 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 801f614:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f616:	2200      	movs	r2, #0
 801f618:	705a      	strb	r2, [r3, #1]
 801f61a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f61c:	2200      	movs	r2, #0
 801f61e:	701a      	strb	r2, [r3, #0]
 801f620:	e04c      	b.n	801f6bc <sendKA+0x138>
 801f622:	2050      	movs	r0, #80	; 0x50
 801f624:	f7f0 f886 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 801f628:	6278      	str	r0, [r7, #36]	; 0x24
 801f62a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f62c:	2b00      	cmp	r3, #0
 801f62e:	d10c      	bne.n	801f64a <sendKA+0xc6>
 801f630:	4a25      	ldr	r2, [pc, #148]	; (801f6c8 <sendKA+0x144>)
 801f632:	463b      	mov	r3, r7
 801f634:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f638:	e883 0003 	stmia.w	r3, {r0, r1}
 801f63c:	4a23      	ldr	r2, [pc, #140]	; (801f6cc <sendKA+0x148>)
 801f63e:	463b      	mov	r3, r7
 801f640:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f644:	f7f5 fde0 	bl	8015208 <LOGGER_PrintLine>
 801f648:	e038      	b.n	801f6bc <sendKA+0x138>
 801f64a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f64c:	2250      	movs	r2, #80	; 0x50
 801f64e:	701a      	strb	r2, [r3, #0]
 801f650:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f652:	2250      	movs	r2, #80	; 0x50
 801f654:	705a      	strb	r2, [r3, #1]
 801f656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f658:	2201      	movs	r2, #1
 801f65a:	f883 2052 	strb.w	r2, [r3, #82]	; 0x52
 801f65e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f660:	3341      	adds	r3, #65	; 0x41
 801f662:	461d      	mov	r5, r3
 801f664:	f107 0408 	add.w	r4, r7, #8
 801f668:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801f66a:	6028      	str	r0, [r5, #0]
 801f66c:	6069      	str	r1, [r5, #4]
 801f66e:	60aa      	str	r2, [r5, #8]
 801f670:	60eb      	str	r3, [r5, #12]
 801f672:	7823      	ldrb	r3, [r4, #0]
 801f674:	742b      	strb	r3, [r5, #16]
 801f676:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f678:	2205      	movs	r2, #5
 801f67a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 801f67e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f680:	2200      	movs	r2, #0
 801f682:	f883 20a2 	strb.w	r2, [r3, #162]	; 0xa2
 801f686:	f7f7 f857 	bl	8016738 <6339f3934eecab924c4cd30c35957a539872f6f3>
 801f68a:	4603      	mov	r3, r0
 801f68c:	461a      	mov	r2, r3
 801f68e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801f690:	f883 20a3 	strb.w	r2, [r3, #163]	; 0xa3
 801f694:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801f696:	f7ff fdb5 	bl	801f204 <send_internal>
 801f69a:	4603      	mov	r3, r0
 801f69c:	f083 0301 	eor.w	r3, r3, #1
 801f6a0:	b2db      	uxtb	r3, r3
 801f6a2:	2b00      	cmp	r3, #0
 801f6a4:	d003      	beq.n	801f6ae <sendKA+0x12a>
 801f6a6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801f6a8:	f7f0 f950 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f6ac:	e006      	b.n	801f6bc <sendKA+0x138>
 801f6ae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801f6b0:	2201      	movs	r2, #1
 801f6b2:	701a      	strb	r2, [r3, #0]
 801f6b4:	e002      	b.n	801f6bc <sendKA+0x138>
 801f6b6:	bf00      	nop
 801f6b8:	e000      	b.n	801f6bc <sendKA+0x138>
 801f6ba:	bf00      	nop
 801f6bc:	3730      	adds	r7, #48	; 0x30
 801f6be:	46bd      	mov	sp, r7
 801f6c0:	bdb0      	pop	{r4, r5, r7, pc}
 801f6c2:	bf00      	nop
 801f6c4:	20000040 	.word	0x20000040
 801f6c8:	0803043c 	.word	0x0803043c
 801f6cc:	08030338 	.word	0x08030338

0801f6d0 <2c5aa1cbb5cbaefbc2f62010f757fa213ae59f57>:
 801f6d0:	b580      	push	{r7, lr}
 801f6d2:	b086      	sub	sp, #24
 801f6d4:	af00      	add	r7, sp, #0
 801f6d6:	6078      	str	r0, [r7, #4]
 801f6d8:	687b      	ldr	r3, [r7, #4]
 801f6da:	617b      	str	r3, [r7, #20]
 801f6dc:	697b      	ldr	r3, [r7, #20]
 801f6de:	7adb      	ldrb	r3, [r3, #11]
 801f6e0:	2b0c      	cmp	r3, #12
 801f6e2:	d110      	bne.n	801f706 <2c5aa1cbb5cbaefbc2f62010f757fa213ae59f57+0x36>
 801f6e4:	697b      	ldr	r3, [r7, #20]
 801f6e6:	330c      	adds	r3, #12
 801f6e8:	4618      	mov	r0, r3
 801f6ea:	f7fd fe87 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 801f6ee:	697b      	ldr	r3, [r7, #20]
 801f6f0:	330d      	adds	r3, #13
 801f6f2:	4618      	mov	r0, r3
 801f6f4:	f7ee fb8c 	bl	800de10 <cbc0e88a681a951e559d988b61bbaa7895224382>
 801f6f8:	697b      	ldr	r3, [r7, #20]
 801f6fa:	330c      	adds	r3, #12
 801f6fc:	2211      	movs	r2, #17
 801f6fe:	2100      	movs	r1, #0
 801f700:	4618      	mov	r0, r3
 801f702:	f00b fcf9 	bl	802b0f8 <memset>
 801f706:	697b      	ldr	r3, [r7, #20]
 801f708:	2200      	movs	r2, #0
 801f70a:	72da      	strb	r2, [r3, #11]
 801f70c:	697b      	ldr	r3, [r7, #20]
 801f70e:	795b      	ldrb	r3, [r3, #5]
 801f710:	4618      	mov	r0, r3
 801f712:	f7f2 f9d7 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 801f716:	4a09      	ldr	r2, [pc, #36]	; (801f73c <2c5aa1cbb5cbaefbc2f62010f757fa213ae59f57+0x6c>)
 801f718:	f107 030c 	add.w	r3, r7, #12
 801f71c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f720:	e883 0003 	stmia.w	r3, {r0, r1}
 801f724:	4a06      	ldr	r2, [pc, #24]	; (801f740 <2c5aa1cbb5cbaefbc2f62010f757fa213ae59f57+0x70>)
 801f726:	f107 030c 	add.w	r3, r7, #12
 801f72a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f72e:	f7f5 fd6b 	bl	8015208 <LOGGER_PrintLine>
 801f732:	bf00      	nop
 801f734:	3718      	adds	r7, #24
 801f736:	46bd      	mov	sp, r7
 801f738:	bd80      	pop	{r7, pc}
 801f73a:	bf00      	nop
 801f73c:	080304a8 	.word	0x080304a8
 801f740:	0803056c 	.word	0x0803056c

0801f744 <six2six_sendDone>:
 801f744:	b580      	push	{r7, lr}
 801f746:	b09c      	sub	sp, #112	; 0x70
 801f748:	af02      	add	r7, sp, #8
 801f74a:	6078      	str	r0, [r7, #4]
 801f74c:	460b      	mov	r3, r1
 801f74e:	70fb      	strb	r3, [r7, #3]
 801f750:	4b9f      	ldr	r3, [pc, #636]	; (801f9d0 <six2six_sendDone+0x28c>)
 801f752:	681b      	ldr	r3, [r3, #0]
 801f754:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801f758:	667b      	str	r3, [r7, #100]	; 0x64
 801f75a:	687b      	ldr	r3, [r7, #4]
 801f75c:	2253      	movs	r2, #83	; 0x53
 801f75e:	705a      	strb	r2, [r3, #1]
 801f760:	687b      	ldr	r3, [r7, #4]
 801f762:	f103 0142 	add.w	r1, r3, #66	; 0x42
 801f766:	f107 0358 	add.w	r3, r7, #88	; 0x58
 801f76a:	2208      	movs	r2, #8
 801f76c:	4618      	mov	r0, r3
 801f76e:	f7fe fd35 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801f772:	687b      	ldr	r3, [r7, #4]
 801f774:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 801f778:	2b00      	cmp	r3, #0
 801f77a:	d16f      	bne.n	801f85c <six2six_sendDone+0x118>
 801f77c:	78fb      	ldrb	r3, [r7, #3]
 801f77e:	f083 0301 	eor.w	r3, r3, #1
 801f782:	b2db      	uxtb	r3, r3
 801f784:	2b00      	cmp	r3, #0
 801f786:	d01c      	beq.n	801f7c2 <six2six_sendDone+0x7e>
 801f788:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f78a:	2200      	movs	r2, #0
 801f78c:	72da      	strb	r2, [r3, #11]
 801f78e:	4a91      	ldr	r2, [pc, #580]	; (801f9d4 <six2six_sendDone+0x290>)
 801f790:	f107 0350 	add.w	r3, r7, #80	; 0x50
 801f794:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f798:	e883 0003 	stmia.w	r3, {r0, r1}
 801f79c:	687b      	ldr	r3, [r7, #4]
 801f79e:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f7a2:	461a      	mov	r2, r3
 801f7a4:	4b8c      	ldr	r3, [pc, #560]	; (801f9d8 <six2six_sendDone+0x294>)
 801f7a6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f7aa:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 801f7ae:	e9cd 2300 	strd	r2, r3, [sp]
 801f7b2:	460b      	mov	r3, r1
 801f7b4:	4a89      	ldr	r2, [pc, #548]	; (801f9dc <six2six_sendDone+0x298>)
 801f7b6:	f107 0150 	add.w	r1, r7, #80	; 0x50
 801f7ba:	c903      	ldmia	r1, {r0, r1}
 801f7bc:	f7f5 fd24 	bl	8015208 <LOGGER_PrintLine>
 801f7c0:	e0fe      	b.n	801f9c0 <six2six_sendDone+0x27c>
 801f7c2:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f7c4:	7adb      	ldrb	r3, [r3, #11]
 801f7c6:	2b06      	cmp	r3, #6
 801f7c8:	d828      	bhi.n	801f81c <six2six_sendDone+0xd8>
 801f7ca:	a201      	add	r2, pc, #4	; (adr r2, 801f7d0 <six2six_sendDone+0x8c>)
 801f7cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801f7d0:	0801f83b 	.word	0x0801f83b
 801f7d4:	0801f7ed 	.word	0x0801f7ed
 801f7d8:	0801f7f5 	.word	0x0801f7f5
 801f7dc:	0801f7fd 	.word	0x0801f7fd
 801f7e0:	0801f80d 	.word	0x0801f80d
 801f7e4:	0801f805 	.word	0x0801f805
 801f7e8:	0801f815 	.word	0x0801f815
 801f7ec:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f7ee:	2207      	movs	r2, #7
 801f7f0:	72da      	strb	r2, [r3, #11]
 801f7f2:	e023      	b.n	801f83c <six2six_sendDone+0xf8>
 801f7f4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f7f6:	2208      	movs	r2, #8
 801f7f8:	72da      	strb	r2, [r3, #11]
 801f7fa:	e01f      	b.n	801f83c <six2six_sendDone+0xf8>
 801f7fc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f7fe:	2209      	movs	r2, #9
 801f800:	72da      	strb	r2, [r3, #11]
 801f802:	e01b      	b.n	801f83c <six2six_sendDone+0xf8>
 801f804:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f806:	220b      	movs	r2, #11
 801f808:	72da      	strb	r2, [r3, #11]
 801f80a:	e017      	b.n	801f83c <six2six_sendDone+0xf8>
 801f80c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f80e:	220a      	movs	r2, #10
 801f810:	72da      	strb	r2, [r3, #11]
 801f812:	e013      	b.n	801f83c <six2six_sendDone+0xf8>
 801f814:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f816:	220c      	movs	r2, #12
 801f818:	72da      	strb	r2, [r3, #11]
 801f81a:	e00f      	b.n	801f83c <six2six_sendDone+0xf8>
 801f81c:	4a70      	ldr	r2, [pc, #448]	; (801f9e0 <six2six_sendDone+0x29c>)
 801f81e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801f822:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f826:	e883 0003 	stmia.w	r3, {r0, r1}
 801f82a:	4a6e      	ldr	r2, [pc, #440]	; (801f9e4 <six2six_sendDone+0x2a0>)
 801f82c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801f830:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f834:	f7f5 fce8 	bl	8015208 <LOGGER_PrintLine>
 801f838:	e000      	b.n	801f83c <six2six_sendDone+0xf8>
 801f83a:	bf00      	nop
 801f83c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f83e:	7958      	ldrb	r0, [r3, #5]
 801f840:	4b69      	ldr	r3, [pc, #420]	; (801f9e8 <six2six_sendDone+0x2a4>)
 801f842:	691a      	ldr	r2, [r3, #16]
 801f844:	4613      	mov	r3, r2
 801f846:	00db      	lsls	r3, r3, #3
 801f848:	1a9b      	subs	r3, r3, r2
 801f84a:	019a      	lsls	r2, r3, #6
 801f84c:	441a      	add	r2, r3
 801f84e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 801f850:	9300      	str	r3, [sp, #0]
 801f852:	4b66      	ldr	r3, [pc, #408]	; (801f9ec <six2six_sendDone+0x2a8>)
 801f854:	2101      	movs	r1, #1
 801f856:	f7f2 f82f 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 801f85a:	e0b1      	b.n	801f9c0 <six2six_sendDone+0x27c>
 801f85c:	687b      	ldr	r3, [r7, #4]
 801f85e:	f893 3093 	ldrb.w	r3, [r3, #147]	; 0x93
 801f862:	2b01      	cmp	r3, #1
 801f864:	f040 80ac 	bne.w	801f9c0 <six2six_sendDone+0x27c>
 801f868:	78fb      	ldrb	r3, [r7, #3]
 801f86a:	2b00      	cmp	r3, #0
 801f86c:	f000 8099 	beq.w	801f9a2 <six2six_sendDone+0x25e>
 801f870:	687b      	ldr	r3, [r7, #4]
 801f872:	f103 0142 	add.w	r1, r3, #66	; 0x42
 801f876:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801f87a:	2208      	movs	r2, #8
 801f87c:	4618      	mov	r0, r3
 801f87e:	f7fe fcad 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801f882:	687b      	ldr	r3, [r7, #4]
 801f884:	3342      	adds	r3, #66	; 0x42
 801f886:	4618      	mov	r0, r3
 801f888:	f7ee fa66 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 801f88c:	687b      	ldr	r3, [r7, #4]
 801f88e:	f893 3096 	ldrb.w	r3, [r3, #150]	; 0x96
 801f892:	2b00      	cmp	r3, #0
 801f894:	f040 8094 	bne.w	801f9c0 <six2six_sendDone+0x27c>
 801f898:	687b      	ldr	r3, [r7, #4]
 801f89a:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f89e:	2b01      	cmp	r3, #1
 801f8a0:	d10d      	bne.n	801f8be <six2six_sendDone+0x17a>
 801f8a2:	687b      	ldr	r3, [r7, #4]
 801f8a4:	f893 0092 	ldrb.w	r0, [r3, #146]	; 0x92
 801f8a8:	687b      	ldr	r3, [r7, #4]
 801f8aa:	f103 0160 	add.w	r1, r3, #96	; 0x60
 801f8ae:	687b      	ldr	r3, [r7, #4]
 801f8b0:	f103 0241 	add.w	r2, r3, #65	; 0x41
 801f8b4:	687b      	ldr	r3, [r7, #4]
 801f8b6:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 801f8ba:	f001 ff1d 	bl	80216f8 <addCells>
 801f8be:	687b      	ldr	r3, [r7, #4]
 801f8c0:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f8c4:	2b02      	cmp	r3, #2
 801f8c6:	d10d      	bne.n	801f8e4 <six2six_sendDone+0x1a0>
 801f8c8:	687b      	ldr	r3, [r7, #4]
 801f8ca:	f893 0092 	ldrb.w	r0, [r3, #146]	; 0x92
 801f8ce:	687b      	ldr	r3, [r7, #4]
 801f8d0:	f103 0179 	add.w	r1, r3, #121	; 0x79
 801f8d4:	687b      	ldr	r3, [r7, #4]
 801f8d6:	f103 0241 	add.w	r2, r3, #65	; 0x41
 801f8da:	687b      	ldr	r3, [r7, #4]
 801f8dc:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 801f8e0:	f001 ff92 	bl	8021808 <removeCells>
 801f8e4:	687b      	ldr	r3, [r7, #4]
 801f8e6:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f8ea:	2b03      	cmp	r3, #3
 801f8ec:	d137      	bne.n	801f95e <six2six_sendDone+0x21a>
 801f8ee:	4a40      	ldr	r2, [pc, #256]	; (801f9f0 <six2six_sendDone+0x2ac>)
 801f8f0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f8f4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f8f8:	e883 0003 	stmia.w	r3, {r0, r1}
 801f8fc:	4a3d      	ldr	r2, [pc, #244]	; (801f9f4 <six2six_sendDone+0x2b0>)
 801f8fe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801f902:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f906:	f7f5 fc7f 	bl	8015208 <LOGGER_PrintLine>
 801f90a:	687b      	ldr	r3, [r7, #4]
 801f90c:	f893 0092 	ldrb.w	r0, [r3, #146]	; 0x92
 801f910:	687b      	ldr	r3, [r7, #4]
 801f912:	f103 0179 	add.w	r1, r3, #121	; 0x79
 801f916:	687b      	ldr	r3, [r7, #4]
 801f918:	f103 0241 	add.w	r2, r3, #65	; 0x41
 801f91c:	687b      	ldr	r3, [r7, #4]
 801f91e:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 801f922:	f001 ff71 	bl	8021808 <removeCells>
 801f926:	4a32      	ldr	r2, [pc, #200]	; (801f9f0 <six2six_sendDone+0x2ac>)
 801f928:	f107 0320 	add.w	r3, r7, #32
 801f92c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f930:	e883 0003 	stmia.w	r3, {r0, r1}
 801f934:	4a30      	ldr	r2, [pc, #192]	; (801f9f8 <six2six_sendDone+0x2b4>)
 801f936:	f107 0320 	add.w	r3, r7, #32
 801f93a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f93e:	f7f5 fc63 	bl	8015208 <LOGGER_PrintLine>
 801f942:	687b      	ldr	r3, [r7, #4]
 801f944:	f893 0092 	ldrb.w	r0, [r3, #146]	; 0x92
 801f948:	687b      	ldr	r3, [r7, #4]
 801f94a:	f103 0160 	add.w	r1, r3, #96	; 0x60
 801f94e:	687b      	ldr	r3, [r7, #4]
 801f950:	f103 0241 	add.w	r2, r3, #65	; 0x41
 801f954:	687b      	ldr	r3, [r7, #4]
 801f956:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 801f95a:	f001 fecd 	bl	80216f8 <addCells>
 801f95e:	687b      	ldr	r3, [r7, #4]
 801f960:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f964:	2b07      	cmp	r3, #7
 801f966:	d12b      	bne.n	801f9c0 <six2six_sendDone+0x27c>
 801f968:	687b      	ldr	r3, [r7, #4]
 801f96a:	3341      	adds	r3, #65	; 0x41
 801f96c:	4618      	mov	r0, r3
 801f96e:	f7fd fd45 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 801f972:	687b      	ldr	r3, [r7, #4]
 801f974:	3342      	adds	r3, #66	; 0x42
 801f976:	4618      	mov	r0, r3
 801f978:	f7ee fa4a 	bl	800de10 <cbc0e88a681a951e559d988b61bbaa7895224382>
 801f97c:	4a1c      	ldr	r2, [pc, #112]	; (801f9f0 <six2six_sendDone+0x2ac>)
 801f97e:	f107 0318 	add.w	r3, r7, #24
 801f982:	e892 0003 	ldmia.w	r2, {r0, r1}
 801f986:	e883 0003 	stmia.w	r3, {r0, r1}
 801f98a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 801f98e:	e9cd 2300 	strd	r2, r3, [sp]
 801f992:	4a1a      	ldr	r2, [pc, #104]	; (801f9fc <six2six_sendDone+0x2b8>)
 801f994:	f107 0318 	add.w	r3, r7, #24
 801f998:	e893 0003 	ldmia.w	r3, {r0, r1}
 801f99c:	f7f5 fc34 	bl	8015208 <LOGGER_PrintLine>
 801f9a0:	e00e      	b.n	801f9c0 <six2six_sendDone+0x27c>
 801f9a2:	687b      	ldr	r3, [r7, #4]
 801f9a4:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 801f9a8:	2b07      	cmp	r3, #7
 801f9aa:	d109      	bne.n	801f9c0 <six2six_sendDone+0x27c>
 801f9ac:	687b      	ldr	r3, [r7, #4]
 801f9ae:	3341      	adds	r3, #65	; 0x41
 801f9b0:	4618      	mov	r0, r3
 801f9b2:	f7fd fd23 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 801f9b6:	687b      	ldr	r3, [r7, #4]
 801f9b8:	3342      	adds	r3, #66	; 0x42
 801f9ba:	4618      	mov	r0, r3
 801f9bc:	f7ee fa28 	bl	800de10 <cbc0e88a681a951e559d988b61bbaa7895224382>
 801f9c0:	6878      	ldr	r0, [r7, #4]
 801f9c2:	f7ef ffc3 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 801f9c6:	bf00      	nop
 801f9c8:	3768      	adds	r7, #104	; 0x68
 801f9ca:	46bd      	mov	sp, r7
 801f9cc:	bd80      	pop	{r7, pc}
 801f9ce:	bf00      	nop
 801f9d0:	20000040 	.word	0x20000040
 801f9d4:	0803043c 	.word	0x0803043c
 801f9d8:	20000278 	.word	0x20000278
 801f9dc:	08030588 	.word	0x08030588
 801f9e0:	08030618 	.word	0x08030618
 801f9e4:	080305b4 	.word	0x080305b4
 801f9e8:	080318ac 	.word	0x080318ac
 801f9ec:	0801f6d1 	.word	0x0801f6d1
 801f9f0:	08030444 	.word	0x08030444
 801f9f4:	080305e0 	.word	0x080305e0
 801f9f8:	080305f0 	.word	0x080305f0
 801f9fc:	08030600 	.word	0x08030600

0801fa00 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb>:
 801fa00:	b5b0      	push	{r4, r5, r7, lr}
 801fa02:	b094      	sub	sp, #80	; 0x50
 801fa04:	af06      	add	r7, sp, #24
 801fa06:	60f8      	str	r0, [r7, #12]
 801fa08:	460b      	mov	r3, r1
 801fa0a:	607a      	str	r2, [r7, #4]
 801fa0c:	72fb      	strb	r3, [r7, #11]
 801fa0e:	2300      	movs	r3, #0
 801fa10:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fa14:	68fb      	ldr	r3, [r7, #12]
 801fa16:	685a      	ldr	r2, [r3, #4]
 801fa18:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fa1c:	4413      	add	r3, r2
 801fa1e:	781b      	ldrb	r3, [r3, #0]
 801fa20:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 801fa24:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fa28:	3301      	adds	r3, #1
 801fa2a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fa2e:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 801fa32:	b29a      	uxth	r2, r3
 801fa34:	68fb      	ldr	r3, [r7, #12]
 801fa36:	6859      	ldr	r1, [r3, #4]
 801fa38:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fa3c:	440b      	add	r3, r1
 801fa3e:	781b      	ldrb	r3, [r3, #0]
 801fa40:	021b      	lsls	r3, r3, #8
 801fa42:	b29b      	uxth	r3, r3
 801fa44:	4413      	add	r3, r2
 801fa46:	86bb      	strh	r3, [r7, #52]	; 0x34
 801fa48:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fa4c:	3301      	adds	r3, #1
 801fa4e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fa52:	687b      	ldr	r3, [r7, #4]
 801fa54:	881b      	ldrh	r3, [r3, #0]
 801fa56:	3301      	adds	r3, #1
 801fa58:	b29a      	uxth	r2, r3
 801fa5a:	687b      	ldr	r3, [r7, #4]
 801fa5c:	801a      	strh	r2, [r3, #0]
 801fa5e:	687b      	ldr	r3, [r7, #4]
 801fa60:	881b      	ldrh	r3, [r3, #0]
 801fa62:	3301      	adds	r3, #1
 801fa64:	b29a      	uxth	r2, r3
 801fa66:	687b      	ldr	r3, [r7, #4]
 801fa68:	801a      	strh	r2, [r3, #0]
 801fa6a:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801fa6c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801fa70:	f5b3 4f28 	cmp.w	r3, #43008	; 0xa800
 801fa74:	d00f      	beq.n	801fa96 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x96>
 801fa76:	4a63      	ldr	r2, [pc, #396]	; (801fc04 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x204>)
 801fa78:	f107 0320 	add.w	r3, r7, #32
 801fa7c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fa80:	e883 0003 	stmia.w	r3, {r0, r1}
 801fa84:	4a60      	ldr	r2, [pc, #384]	; (801fc08 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x208>)
 801fa86:	f107 0320 	add.w	r3, r7, #32
 801fa8a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fa8e:	f7f5 fbbb 	bl	8015208 <LOGGER_PrintLine>
 801fa92:	2300      	movs	r3, #0
 801fa94:	e0b1      	b.n	801fbfa <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x1fa>
 801fa96:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 801fa98:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801fa9c:	867b      	strh	r3, [r7, #50]	; 0x32
 801fa9e:	687b      	ldr	r3, [r7, #4]
 801faa0:	881a      	ldrh	r2, [r3, #0]
 801faa2:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 801faa4:	4413      	add	r3, r2
 801faa6:	b29a      	uxth	r2, r3
 801faa8:	687b      	ldr	r3, [r7, #4]
 801faaa:	801a      	strh	r2, [r3, #0]
 801faac:	68fb      	ldr	r3, [r7, #12]
 801faae:	685a      	ldr	r2, [r3, #4]
 801fab0:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fab4:	4413      	add	r3, r2
 801fab6:	781b      	ldrb	r3, [r3, #0]
 801fab8:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
 801fabc:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fac0:	3301      	adds	r3, #1
 801fac2:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fac6:	f897 3031 	ldrb.w	r3, [r7, #49]	; 0x31
 801faca:	2bc9      	cmp	r3, #201	; 0xc9
 801facc:	d00f      	beq.n	801faee <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0xee>
 801face:	4a4d      	ldr	r2, [pc, #308]	; (801fc04 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x204>)
 801fad0:	f107 0318 	add.w	r3, r7, #24
 801fad4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fad8:	e883 0003 	stmia.w	r3, {r0, r1}
 801fadc:	4a4a      	ldr	r2, [pc, #296]	; (801fc08 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x208>)
 801fade:	f107 0318 	add.w	r3, r7, #24
 801fae2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fae6:	f7f5 fb8f 	bl	8015208 <LOGGER_PrintLine>
 801faea:	2300      	movs	r3, #0
 801faec:	e085      	b.n	801fbfa <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x1fa>
 801faee:	2301      	movs	r3, #1
 801faf0:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801faf2:	68fb      	ldr	r3, [r7, #12]
 801faf4:	685a      	ldr	r2, [r3, #4]
 801faf6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fafa:	4413      	add	r3, r2
 801fafc:	781b      	ldrb	r3, [r3, #0]
 801fafe:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 801fb02:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb06:	3301      	adds	r3, #1
 801fb08:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fb0c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 801fb10:	091b      	lsrs	r3, r3, #4
 801fb12:	b2db      	uxtb	r3, r3
 801fb14:	2b03      	cmp	r3, #3
 801fb16:	d10f      	bne.n	801fb38 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x138>
 801fb18:	4a3a      	ldr	r2, [pc, #232]	; (801fc04 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x204>)
 801fb1a:	f107 0310 	add.w	r3, r7, #16
 801fb1e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fb22:	e883 0003 	stmia.w	r3, {r0, r1}
 801fb26:	4a38      	ldr	r2, [pc, #224]	; (801fc08 <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x208>)
 801fb28:	f107 0310 	add.w	r3, r7, #16
 801fb2c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fb30:	f7f5 fb6a 	bl	8015208 <LOGGER_PrintLine>
 801fb34:	2300      	movs	r3, #0
 801fb36:	e060      	b.n	801fbfa <d83dd96794ccade75eabb291ff5f2fbc926c0ffb+0x1fa>
 801fb38:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 801fb3c:	f003 030f 	and.w	r3, r3, #15
 801fb40:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 801fb44:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 801fb48:	091b      	lsrs	r3, r3, #4
 801fb4a:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 801fb4e:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801fb50:	3301      	adds	r3, #1
 801fb52:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801fb54:	68fb      	ldr	r3, [r7, #12]
 801fb56:	685a      	ldr	r2, [r3, #4]
 801fb58:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb5c:	4413      	add	r3, r2
 801fb5e:	781b      	ldrb	r3, [r3, #0]
 801fb60:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 801fb64:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb68:	3301      	adds	r3, #1
 801fb6a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fb6e:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801fb70:	3301      	adds	r3, #1
 801fb72:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801fb74:	68fb      	ldr	r3, [r7, #12]
 801fb76:	685a      	ldr	r2, [r3, #4]
 801fb78:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb7c:	4413      	add	r3, r2
 801fb7e:	781b      	ldrb	r3, [r3, #0]
 801fb80:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 801fb84:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb88:	3301      	adds	r3, #1
 801fb8a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fb8e:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801fb90:	3301      	adds	r3, #1
 801fb92:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801fb94:	68fb      	ldr	r3, [r7, #12]
 801fb96:	685a      	ldr	r2, [r3, #4]
 801fb98:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fb9c:	4413      	add	r3, r2
 801fb9e:	781b      	ldrb	r3, [r3, #0]
 801fba0:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 801fba4:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fba8:	3301      	adds	r3, #1
 801fbaa:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 801fbae:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801fbb0:	3301      	adds	r3, #1
 801fbb2:	85fb      	strh	r3, [r7, #46]	; 0x2e
 801fbb4:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 801fbb6:	b2da      	uxtb	r2, r3
 801fbb8:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 801fbba:	b2db      	uxtb	r3, r3
 801fbbc:	1ad3      	subs	r3, r2, r3
 801fbbe:	b2db      	uxtb	r3, r3
 801fbc0:	f897 502a 	ldrb.w	r5, [r7, #42]	; 0x2a
 801fbc4:	f897 402b 	ldrb.w	r4, [r7, #43]	; 0x2b
 801fbc8:	f897 102c 	ldrb.w	r1, [r7, #44]	; 0x2c
 801fbcc:	f897 002d 	ldrb.w	r0, [r7, #45]	; 0x2d
 801fbd0:	68fa      	ldr	r2, [r7, #12]
 801fbd2:	9204      	str	r2, [sp, #16]
 801fbd4:	9303      	str	r3, [sp, #12]
 801fbd6:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 801fbda:	9302      	str	r3, [sp, #8]
 801fbdc:	7afb      	ldrb	r3, [r7, #11]
 801fbde:	9301      	str	r3, [sp, #4]
 801fbe0:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 801fbe4:	9300      	str	r3, [sp, #0]
 801fbe6:	462b      	mov	r3, r5
 801fbe8:	4622      	mov	r2, r4
 801fbea:	f000 f80f 	bl	801fc0c <six2six_notifyReceive>
 801fbee:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 801fbf0:	3302      	adds	r3, #2
 801fbf2:	b29a      	uxth	r2, r3
 801fbf4:	687b      	ldr	r3, [r7, #4]
 801fbf6:	801a      	strh	r2, [r3, #0]
 801fbf8:	2301      	movs	r3, #1
 801fbfa:	4618      	mov	r0, r3
 801fbfc:	3738      	adds	r7, #56	; 0x38
 801fbfe:	46bd      	mov	sp, r7
 801fc00:	bdb0      	pop	{r4, r5, r7, pc}
 801fc02:	bf00      	nop
 801fc04:	0803043c 	.word	0x0803043c
 801fc08:	08030620 	.word	0x08030620

0801fc0c <six2six_notifyReceive>:
 801fc0c:	b5b0      	push	{r4, r5, r7, lr}
 801fc0e:	b0cc      	sub	sp, #304	; 0x130
 801fc10:	af02      	add	r7, sp, #8
 801fc12:	4605      	mov	r5, r0
 801fc14:	460c      	mov	r4, r1
 801fc16:	4610      	mov	r0, r2
 801fc18:	4619      	mov	r1, r3
 801fc1a:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fc1e:	f2a3 1321 	subw	r3, r3, #289	; 0x121
 801fc22:	462a      	mov	r2, r5
 801fc24:	701a      	strb	r2, [r3, #0]
 801fc26:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fc2a:	f5a3 7391 	sub.w	r3, r3, #290	; 0x122
 801fc2e:	4622      	mov	r2, r4
 801fc30:	701a      	strb	r2, [r3, #0]
 801fc32:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fc36:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 801fc3a:	4602      	mov	r2, r0
 801fc3c:	701a      	strb	r2, [r3, #0]
 801fc3e:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fc42:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 801fc46:	460a      	mov	r2, r1
 801fc48:	701a      	strb	r2, [r3, #0]
 801fc4a:	4bc1      	ldr	r3, [pc, #772]	; (801ff50 <six2six_notifyReceive+0x344>)
 801fc4c:	681b      	ldr	r3, [r3, #0]
 801fc4e:	f203 5324 	addw	r3, r3, #1316	; 0x524
 801fc52:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 801fc56:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fc5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fc5c:	2b00      	cmp	r3, #0
 801fc5e:	d00e      	beq.n	801fc7e <six2six_notifyReceive+0x72>
 801fc60:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fc64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801fc66:	2b00      	cmp	r3, #0
 801fc68:	d009      	beq.n	801fc7e <six2six_notifyReceive+0x72>
 801fc6a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fc6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801fc70:	2b00      	cmp	r3, #0
 801fc72:	d004      	beq.n	801fc7e <six2six_notifyReceive+0x72>
 801fc74:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fc78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801fc7a:	2b00      	cmp	r3, #0
 801fc7c:	d105      	bne.n	801fc8a <six2six_notifyReceive+0x7e>
 801fc7e:	f240 424d 	movw	r2, #1101	; 0x44d
 801fc82:	49b4      	ldr	r1, [pc, #720]	; (801ff54 <six2six_notifyReceive+0x348>)
 801fc84:	48b4      	ldr	r0, [pc, #720]	; (801ff58 <six2six_notifyReceive+0x34c>)
 801fc86:	f7e1 fd3f 	bl	8001708 <EXPECT_OnAbortHandler>
 801fc8a:	2302      	movs	r3, #2
 801fc8c:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fc90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801fc94:	f8a7 3124 	strh.w	r3, [r7, #292]	; 0x124
 801fc98:	23ff      	movs	r3, #255	; 0xff
 801fc9a:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 801fc9e:	f897 3144 	ldrb.w	r3, [r7, #324]	; 0x144
 801fca2:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 801fca6:	2300      	movs	r3, #0
 801fca8:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 801fcac:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fcb0:	f5a3 7391 	sub.w	r3, r3, #290	; 0x122
 801fcb4:	781b      	ldrb	r3, [r3, #0]
 801fcb6:	2b00      	cmp	r3, #0
 801fcb8:	f041 803b 	bne.w	8020d32 <six2six_notifyReceive+0x1126>
 801fcbc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801fcc0:	f103 0142 	add.w	r1, r3, #66	; 0x42
 801fcc4:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 801fcc8:	2208      	movs	r2, #8
 801fcca:	4618      	mov	r0, r3
 801fccc:	f7fe fa86 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 801fcd0:	4aa2      	ldr	r2, [pc, #648]	; (801ff5c <six2six_notifyReceive+0x350>)
 801fcd2:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 801fcd6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fcda:	e883 0003 	stmia.w	r3, {r0, r1}
 801fcde:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fce2:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 801fce6:	781b      	ldrb	r3, [r3, #0]
 801fce8:	4a9d      	ldr	r2, [pc, #628]	; (801ff60 <six2six_notifyReceive+0x354>)
 801fcea:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 801fcee:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 801fcf2:	e9cd 2300 	strd	r2, r3, [sp]
 801fcf6:	460b      	mov	r3, r1
 801fcf8:	4a9a      	ldr	r2, [pc, #616]	; (801ff64 <six2six_notifyReceive+0x358>)
 801fcfa:	f107 01d8 	add.w	r1, r7, #216	; 0xd8
 801fcfe:	c903      	ldmia	r1, {r0, r1}
 801fd00:	f7f5 fa82 	bl	8015208 <LOGGER_PrintLine>
 801fd04:	f7f0 f89a 	bl	800fe3c <794cbfdf72fe426231c38719436bf778a99748c2>
 801fd08:	4603      	mov	r3, r0
 801fd0a:	2b05      	cmp	r3, #5
 801fd0c:	f201 84e0 	bhi.w	80216d0 <six2six_notifyReceive+0x1ac4>
 801fd10:	2053      	movs	r0, #83	; 0x53
 801fd12:	f7ef fd0f 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 801fd16:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
 801fd1a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd1e:	2b00      	cmp	r3, #0
 801fd20:	d10f      	bne.n	801fd42 <six2six_notifyReceive+0x136>
 801fd22:	4a91      	ldr	r2, [pc, #580]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fd24:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801fd28:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fd2c:	e883 0003 	stmia.w	r3, {r0, r1}
 801fd30:	4a8e      	ldr	r2, [pc, #568]	; (801ff6c <six2six_notifyReceive+0x360>)
 801fd32:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801fd36:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fd3a:	f7f5 fa65 	bl	8015208 <LOGGER_PrintLine>
 801fd3e:	f001 bcca 	b.w	80216d6 <six2six_notifyReceive+0x1aca>
 801fd42:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd46:	3379      	adds	r3, #121	; 0x79
 801fd48:	2219      	movs	r2, #25
 801fd4a:	2100      	movs	r1, #0
 801fd4c:	4618      	mov	r0, r3
 801fd4e:	f00b f9d3 	bl	802b0f8 <memset>
 801fd52:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd56:	3360      	adds	r3, #96	; 0x60
 801fd58:	2219      	movs	r2, #25
 801fd5a:	2100      	movs	r1, #0
 801fd5c:	4618      	mov	r0, r3
 801fd5e:	f00b f9cb 	bl	802b0f8 <memset>
 801fd62:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd66:	2253      	movs	r2, #83	; 0x53
 801fd68:	701a      	strb	r2, [r3, #0]
 801fd6a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd6e:	2253      	movs	r2, #83	; 0x53
 801fd70:	705a      	strb	r2, [r3, #1]
 801fd72:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 801fd76:	f103 0041 	add.w	r0, r3, #65	; 0x41
 801fd7a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801fd7e:	3341      	adds	r3, #65	; 0x41
 801fd80:	2211      	movs	r2, #17
 801fd82:	4619      	mov	r1, r3
 801fd84:	f00b fa57 	bl	802b236 <memcpy>
 801fd88:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fd8c:	f2a3 1321 	subw	r3, r3, #289	; 0x121
 801fd90:	781b      	ldrb	r3, [r3, #0]
 801fd92:	2b00      	cmp	r3, #0
 801fd94:	d012      	beq.n	801fdbc <six2six_notifyReceive+0x1b0>
 801fd96:	4a74      	ldr	r2, [pc, #464]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fd98:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 801fd9c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fda0:	e883 0003 	stmia.w	r3, {r0, r1}
 801fda4:	4a72      	ldr	r2, [pc, #456]	; (801ff70 <six2six_notifyReceive+0x364>)
 801fda6:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 801fdaa:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fdae:	f7f5 fa2b 	bl	8015208 <LOGGER_PrintLine>
 801fdb2:	2304      	movs	r3, #4
 801fdb4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fdb8:	f000 bf07 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fdbc:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fdc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fdc2:	4798      	blx	r3
 801fdc4:	4603      	mov	r3, r0
 801fdc6:	461a      	mov	r2, r3
 801fdc8:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fdcc:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 801fdd0:	781b      	ldrb	r3, [r3, #0]
 801fdd2:	4293      	cmp	r3, r2
 801fdd4:	d012      	beq.n	801fdfc <six2six_notifyReceive+0x1f0>
 801fdd6:	4a64      	ldr	r2, [pc, #400]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fdd8:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801fddc:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fde0:	e883 0003 	stmia.w	r3, {r0, r1}
 801fde4:	4a63      	ldr	r2, [pc, #396]	; (801ff74 <six2six_notifyReceive+0x368>)
 801fde6:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 801fdea:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fdee:	f7f5 fa0b 	bl	8015208 <LOGGER_PrintLine>
 801fdf2:	2305      	movs	r3, #5
 801fdf4:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fdf8:	f000 bee7 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fdfc:	f897 313c 	ldrb.w	r3, [r7, #316]	; 0x13c
 801fe00:	f083 0301 	eor.w	r3, r3, #1
 801fe04:	b2db      	uxtb	r3, r3
 801fe06:	2b00      	cmp	r3, #0
 801fe08:	d012      	beq.n	801fe30 <six2six_notifyReceive+0x224>
 801fe0a:	4a57      	ldr	r2, [pc, #348]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fe0c:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 801fe10:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fe14:	e883 0003 	stmia.w	r3, {r0, r1}
 801fe18:	4a57      	ldr	r2, [pc, #348]	; (801ff78 <six2six_notifyReceive+0x36c>)
 801fe1a:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 801fe1e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fe22:	f7f5 f9f1 	bl	8015208 <LOGGER_PrintLine>
 801fe26:	2302      	movs	r3, #2
 801fe28:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fe2c:	f000 becd 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fe30:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801fe34:	3342      	adds	r3, #66	; 0x42
 801fe36:	4618      	mov	r0, r3
 801fe38:	f7ed fdb8 	bl	800d9ac <0a8a8543f799df9767389ce496f81ab8433a71f4>
 801fe3c:	4603      	mov	r3, r0
 801fe3e:	461a      	mov	r2, r3
 801fe40:	f897 3138 	ldrb.w	r3, [r7, #312]	; 0x138
 801fe44:	4293      	cmp	r3, r2
 801fe46:	d023      	beq.n	801fe90 <six2six_notifyReceive+0x284>
 801fe48:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801fe4c:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 801fe50:	781b      	ldrb	r3, [r3, #0]
 801fe52:	2b07      	cmp	r3, #7
 801fe54:	d01c      	beq.n	801fe90 <six2six_notifyReceive+0x284>
 801fe56:	4a44      	ldr	r2, [pc, #272]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fe58:	f107 03b0 	add.w	r3, r7, #176	; 0xb0
 801fe5c:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fe60:	e883 0003 	stmia.w	r3, {r0, r1}
 801fe64:	f897 4138 	ldrb.w	r4, [r7, #312]	; 0x138
 801fe68:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801fe6c:	3342      	adds	r3, #66	; 0x42
 801fe6e:	4618      	mov	r0, r3
 801fe70:	f7ed fd9c 	bl	800d9ac <0a8a8543f799df9767389ce496f81ab8433a71f4>
 801fe74:	4603      	mov	r3, r0
 801fe76:	9300      	str	r3, [sp, #0]
 801fe78:	4623      	mov	r3, r4
 801fe7a:	4a40      	ldr	r2, [pc, #256]	; (801ff7c <six2six_notifyReceive+0x370>)
 801fe7c:	f107 01b0 	add.w	r1, r7, #176	; 0xb0
 801fe80:	c903      	ldmia	r1, {r0, r1}
 801fe82:	f7f5 f9c1 	bl	8015208 <LOGGER_PrintLine>
 801fe86:	2306      	movs	r3, #6
 801fe88:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fe8c:	f000 be9d 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fe90:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fe94:	7adb      	ldrb	r3, [r3, #11]
 801fe96:	2b00      	cmp	r3, #0
 801fe98:	d012      	beq.n	801fec0 <six2six_notifyReceive+0x2b4>
 801fe9a:	4a33      	ldr	r2, [pc, #204]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fe9c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801fea0:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fea4:	e883 0003 	stmia.w	r3, {r0, r1}
 801fea8:	4a35      	ldr	r2, [pc, #212]	; (801ff80 <six2six_notifyReceive+0x374>)
 801feaa:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801feae:	e893 0003 	ldmia.w	r3, {r0, r1}
 801feb2:	f7f5 f9a9 	bl	8015208 <LOGGER_PrintLine>
 801feb6:	2308      	movs	r3, #8
 801feb8:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801febc:	f000 be85 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fec0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 801fec4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801fec6:	4798      	blx	r3
 801fec8:	4603      	mov	r3, r0
 801feca:	2b00      	cmp	r3, #0
 801fecc:	d012      	beq.n	801fef4 <six2six_notifyReceive+0x2e8>
 801fece:	4a26      	ldr	r2, [pc, #152]	; (801ff68 <six2six_notifyReceive+0x35c>)
 801fed0:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801fed4:	e892 0003 	ldmia.w	r2, {r0, r1}
 801fed8:	e883 0003 	stmia.w	r3, {r0, r1}
 801fedc:	4a29      	ldr	r2, [pc, #164]	; (801ff84 <six2six_notifyReceive+0x378>)
 801fede:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801fee2:	e893 0003 	ldmia.w	r3, {r0, r1}
 801fee6:	f7f5 f98f 	bl	8015208 <LOGGER_PrintLine>
 801feea:	2302      	movs	r3, #2
 801feec:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801fef0:	f000 be6b 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801fef4:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801fef8:	685a      	ldr	r2, [r3, #4]
 801fefa:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801fefe:	4413      	add	r3, r2
 801ff00:	781b      	ldrb	r3, [r3, #0]
 801ff02:	f8a7 3124 	strh.w	r3, [r7, #292]	; 0x124
 801ff06:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801ff0a:	685a      	ldr	r2, [r3, #4]
 801ff0c:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ff10:	3301      	adds	r3, #1
 801ff12:	4413      	add	r3, r2
 801ff14:	781b      	ldrb	r3, [r3, #0]
 801ff16:	021b      	lsls	r3, r3, #8
 801ff18:	b29a      	uxth	r2, r3
 801ff1a:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 801ff1e:	4313      	orrs	r3, r2
 801ff20:	f8a7 3124 	strh.w	r3, [r7, #292]	; 0x124
 801ff24:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ff28:	3302      	adds	r3, #2
 801ff2a:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 801ff2e:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 801ff32:	3b02      	subs	r3, #2
 801ff34:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 801ff38:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801ff3c:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 801ff40:	781b      	ldrb	r3, [r3, #0]
 801ff42:	2b07      	cmp	r3, #7
 801ff44:	d120      	bne.n	801ff88 <six2six_notifyReceive+0x37c>
 801ff46:	2300      	movs	r3, #0
 801ff48:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 801ff4c:	f000 be3d 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 801ff50:	20000040 	.word	0x20000040
 801ff54:	08030224 	.word	0x08030224
 801ff58:	08030634 	.word	0x08030634
 801ff5c:	08030444 	.word	0x08030444
 801ff60:	20000278 	.word	0x20000278
 801ff64:	08030648 	.word	0x08030648
 801ff68:	0803043c 	.word	0x0803043c
 801ff6c:	08030338 	.word	0x08030338
 801ff70:	08030668 	.word	0x08030668
 801ff74:	0803067c 	.word	0x0803067c
 801ff78:	08030690 	.word	0x08030690
 801ff7c:	080306ac 	.word	0x080306ac
 801ff80:	080306d8 	.word	0x080306d8
 801ff84:	08030700 	.word	0x08030700
 801ff88:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801ff8c:	685a      	ldr	r2, [r3, #4]
 801ff8e:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ff92:	4413      	add	r3, r2
 801ff94:	781b      	ldrb	r3, [r3, #0]
 801ff96:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 801ff9a:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ff9e:	3301      	adds	r3, #1
 801ffa0:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 801ffa4:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 801ffa8:	3b01      	subs	r3, #1
 801ffaa:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 801ffae:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801ffb2:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 801ffb6:	781b      	ldrb	r3, [r3, #0]
 801ffb8:	2b05      	cmp	r3, #5
 801ffba:	f040 80e1 	bne.w	8020180 <six2six_notifyReceive+0x574>
 801ffbe:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ffc2:	3301      	adds	r3, #1
 801ffc4:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 801ffc8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801ffcc:	685a      	ldr	r2, [r3, #4]
 801ffce:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ffd2:	4413      	add	r3, r2
 801ffd4:	781b      	ldrb	r3, [r3, #0]
 801ffd6:	f8a7 310a 	strh.w	r3, [r7, #266]	; 0x10a
 801ffda:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 801ffde:	685a      	ldr	r2, [r3, #4]
 801ffe0:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801ffe4:	3301      	adds	r3, #1
 801ffe6:	4413      	add	r3, r2
 801ffe8:	781b      	ldrb	r3, [r3, #0]
 801ffea:	021b      	lsls	r3, r3, #8
 801ffec:	b29a      	uxth	r2, r3
 801ffee:	f8b7 310a 	ldrh.w	r3, [r7, #266]	; 0x10a
 801fff2:	4313      	orrs	r3, r2
 801fff4:	f8a7 310a 	strh.w	r3, [r7, #266]	; 0x10a
 801fff8:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 801fffc:	3302      	adds	r3, #2
 801fffe:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020002:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020006:	685a      	ldr	r2, [r3, #4]
 8020008:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802000c:	4413      	add	r3, r2
 802000e:	781b      	ldrb	r3, [r3, #0]
 8020010:	f8a7 3108 	strh.w	r3, [r7, #264]	; 0x108
 8020014:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020018:	685a      	ldr	r2, [r3, #4]
 802001a:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802001e:	3301      	adds	r3, #1
 8020020:	4413      	add	r3, r2
 8020022:	781b      	ldrb	r3, [r3, #0]
 8020024:	021b      	lsls	r3, r3, #8
 8020026:	b29a      	uxth	r2, r3
 8020028:	f8b7 3108 	ldrh.w	r3, [r7, #264]	; 0x108
 802002c:	4313      	orrs	r3, r2
 802002e:	f8a7 3108 	strh.w	r3, [r7, #264]	; 0x108
 8020032:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020036:	3302      	adds	r3, #2
 8020038:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 802003c:	2300      	movs	r3, #0
 802003e:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8020042:	f8b7 310a 	ldrh.w	r3, [r7, #266]	; 0x10a
 8020046:	f8a7 3120 	strh.w	r3, [r7, #288]	; 0x120
 802004a:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 802004e:	f003 0303 	and.w	r3, r3, #3
 8020052:	2b03      	cmp	r3, #3
 8020054:	d006      	beq.n	8020064 <six2six_notifyReceive+0x458>
 8020056:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 802005a:	f083 0303 	eor.w	r3, r3, #3
 802005e:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 8020062:	e003      	b.n	802006c <six2six_notifyReceive+0x460>
 8020064:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020068:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 802006c:	2300      	movs	r3, #0
 802006e:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020072:	e057      	b.n	8020124 <six2six_notifyReceive+0x518>
 8020074:	f507 7482 	add.w	r4, r7, #260	; 0x104
 8020078:	f897 2122 	ldrb.w	r2, [r7, #290]	; 0x122
 802007c:	f8b7 1120 	ldrh.w	r1, [r7, #288]	; 0x120
 8020080:	f8b7 0124 	ldrh.w	r0, [r7, #292]	; 0x124
 8020084:	f207 1303 	addw	r3, r7, #259	; 0x103
 8020088:	9300      	str	r3, [sp, #0]
 802008a:	4623      	mov	r3, r4
 802008c:	f7fe f844 	bl	801e118 <1f2424ac27c2cb6c4102eeae83b319f761410057>
 8020090:	4603      	mov	r3, r0
 8020092:	2b00      	cmp	r3, #0
 8020094:	d02d      	beq.n	80200f2 <six2six_notifyReceive+0x4e6>
 8020096:	2104      	movs	r1, #4
 8020098:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 802009c:	f009 f9fa 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80200a0:	f8b7 2104 	ldrh.w	r2, [r7, #260]	; 0x104
 80200a4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80200a8:	685b      	ldr	r3, [r3, #4]
 80200aa:	b2d2      	uxtb	r2, r2
 80200ac:	701a      	strb	r2, [r3, #0]
 80200ae:	f8b7 3104 	ldrh.w	r3, [r7, #260]	; 0x104
 80200b2:	0a1b      	lsrs	r3, r3, #8
 80200b4:	b29a      	uxth	r2, r3
 80200b6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80200ba:	685b      	ldr	r3, [r3, #4]
 80200bc:	3301      	adds	r3, #1
 80200be:	b2d2      	uxtb	r2, r2
 80200c0:	701a      	strb	r2, [r3, #0]
 80200c2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80200c6:	685b      	ldr	r3, [r3, #4]
 80200c8:	3302      	adds	r3, #2
 80200ca:	f897 2103 	ldrb.w	r2, [r7, #259]	; 0x103
 80200ce:	701a      	strb	r2, [r3, #0]
 80200d0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80200d4:	685b      	ldr	r3, [r3, #4]
 80200d6:	3303      	adds	r3, #3
 80200d8:	2200      	movs	r2, #0
 80200da:	701a      	strb	r2, [r3, #0]
 80200dc:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 80200e0:	3304      	adds	r3, #4
 80200e2:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 80200e6:	f8b7 3104 	ldrh.w	r3, [r7, #260]	; 0x104
 80200ea:	3301      	adds	r3, #1
 80200ec:	f8a7 3120 	strh.w	r3, [r7, #288]	; 0x120
 80200f0:	e011      	b.n	8020116 <six2six_notifyReceive+0x50a>
 80200f2:	4ad5      	ldr	r2, [pc, #852]	; (8020448 <six2six_notifyReceive+0x83c>)
 80200f4:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80200f8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80200fc:	e883 0003 	stmia.w	r3, {r0, r1}
 8020100:	4ad2      	ldr	r2, [pc, #840]	; (802044c <six2six_notifyReceive+0x840>)
 8020102:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8020106:	e893 0003 	ldmia.w	r3, {r0, r1}
 802010a:	f7f5 f87d 	bl	8015208 <LOGGER_PrintLine>
 802010e:	2301      	movs	r3, #1
 8020110:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8020114:	e00c      	b.n	8020130 <six2six_notifyReceive+0x524>
 8020116:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802011a:	b29b      	uxth	r3, r3
 802011c:	3301      	adds	r3, #1
 802011e:	b29b      	uxth	r3, r3
 8020120:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020124:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020128:	f8b7 3108 	ldrh.w	r3, [r7, #264]	; 0x108
 802012c:	429a      	cmp	r2, r3
 802012e:	dba1      	blt.n	8020074 <six2six_notifyReceive+0x468>
 8020130:	f507 7482 	add.w	r4, r7, #260	; 0x104
 8020134:	f897 2122 	ldrb.w	r2, [r7, #290]	; 0x122
 8020138:	f8b7 1120 	ldrh.w	r1, [r7, #288]	; 0x120
 802013c:	f8b7 0124 	ldrh.w	r0, [r7, #292]	; 0x124
 8020140:	f207 1303 	addw	r3, r7, #259	; 0x103
 8020144:	9300      	str	r3, [sp, #0]
 8020146:	4623      	mov	r3, r4
 8020148:	f7fd ffe6 	bl	801e118 <1f2424ac27c2cb6c4102eeae83b319f761410057>
 802014c:	4603      	mov	r3, r0
 802014e:	f083 0301 	eor.w	r3, r3, #1
 8020152:	b2db      	uxtb	r3, r3
 8020154:	2b00      	cmp	r3, #0
 8020156:	f000 8537 	beq.w	8020bc8 <six2six_notifyReceive+0xfbc>
 802015a:	4abb      	ldr	r2, [pc, #748]	; (8020448 <six2six_notifyReceive+0x83c>)
 802015c:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8020160:	e892 0003 	ldmia.w	r2, {r0, r1}
 8020164:	e883 0003 	stmia.w	r3, {r0, r1}
 8020168:	4ab8      	ldr	r2, [pc, #736]	; (802044c <six2six_notifyReceive+0x840>)
 802016a:	f107 0390 	add.w	r3, r7, #144	; 0x90
 802016e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020172:	f7f5 f849 	bl	8015208 <LOGGER_PrintLine>
 8020176:	2301      	movs	r3, #1
 8020178:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 802017c:	f000 bd24 	b.w	8020bc8 <six2six_notifyReceive+0xfbc>
 8020180:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020184:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8020188:	781b      	ldrb	r3, [r3, #0]
 802018a:	2b04      	cmp	r3, #4
 802018c:	d163      	bne.n	8020256 <six2six_notifyReceive+0x64a>
 802018e:	2300      	movs	r3, #0
 8020190:	f8a7 311c 	strh.w	r3, [r7, #284]	; 0x11c
 8020194:	2300      	movs	r3, #0
 8020196:	f8a7 3120 	strh.w	r3, [r7, #288]	; 0x120
 802019a:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 802019e:	f003 0303 	and.w	r3, r3, #3
 80201a2:	2b03      	cmp	r3, #3
 80201a4:	d006      	beq.n	80201b4 <six2six_notifyReceive+0x5a8>
 80201a6:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 80201aa:	f083 0303 	eor.w	r3, r3, #3
 80201ae:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 80201b2:	e003      	b.n	80201bc <six2six_notifyReceive+0x5b0>
 80201b4:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 80201b8:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 80201bc:	2300      	movs	r3, #0
 80201be:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80201c2:	e021      	b.n	8020208 <six2six_notifyReceive+0x5fc>
 80201c4:	f507 7482 	add.w	r4, r7, #260	; 0x104
 80201c8:	f897 2122 	ldrb.w	r2, [r7, #290]	; 0x122
 80201cc:	f8b7 1120 	ldrh.w	r1, [r7, #288]	; 0x120
 80201d0:	f8b7 0124 	ldrh.w	r0, [r7, #292]	; 0x124
 80201d4:	f207 1303 	addw	r3, r7, #259	; 0x103
 80201d8:	9300      	str	r3, [sp, #0]
 80201da:	4623      	mov	r3, r4
 80201dc:	f7fd ff9c 	bl	801e118 <1f2424ac27c2cb6c4102eeae83b319f761410057>
 80201e0:	4603      	mov	r3, r0
 80201e2:	2b00      	cmp	r3, #0
 80201e4:	d009      	beq.n	80201fa <six2six_notifyReceive+0x5ee>
 80201e6:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 80201ea:	3301      	adds	r3, #1
 80201ec:	f8a7 311c 	strh.w	r3, [r7, #284]	; 0x11c
 80201f0:	f8b7 3104 	ldrh.w	r3, [r7, #260]	; 0x104
 80201f4:	3301      	adds	r3, #1
 80201f6:	f8a7 3120 	strh.w	r3, [r7, #288]	; 0x120
 80201fa:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 80201fe:	b29b      	uxth	r3, r3
 8020200:	3301      	adds	r3, #1
 8020202:	b29b      	uxth	r3, r3
 8020204:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020208:	f9b7 411e 	ldrsh.w	r4, [r7, #286]	; 0x11e
 802020c:	f7fc fbd8 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8020210:	4603      	mov	r3, r0
 8020212:	429c      	cmp	r4, r3
 8020214:	dbd6      	blt.n	80201c4 <six2six_notifyReceive+0x5b8>
 8020216:	2300      	movs	r3, #0
 8020218:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 802021c:	2102      	movs	r1, #2
 802021e:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020222:	f009 f937 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020226:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 802022a:	685b      	ldr	r3, [r3, #4]
 802022c:	f8b7 211c 	ldrh.w	r2, [r7, #284]	; 0x11c
 8020230:	b2d2      	uxtb	r2, r2
 8020232:	701a      	strb	r2, [r3, #0]
 8020234:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 8020238:	0a1b      	lsrs	r3, r3, #8
 802023a:	b29a      	uxth	r2, r3
 802023c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020240:	685b      	ldr	r3, [r3, #4]
 8020242:	3301      	adds	r3, #1
 8020244:	b2d2      	uxtb	r2, r2
 8020246:	701a      	strb	r2, [r3, #0]
 8020248:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 802024c:	3302      	adds	r3, #2
 802024e:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020252:	f000 bcba 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 8020256:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802025a:	685a      	ldr	r2, [r3, #4]
 802025c:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020260:	4413      	add	r3, r2
 8020262:	781b      	ldrb	r3, [r3, #0]
 8020264:	f8a7 311c 	strh.w	r3, [r7, #284]	; 0x11c
 8020268:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802026c:	3301      	adds	r3, #1
 802026e:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020272:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020276:	3b01      	subs	r3, #1
 8020278:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 802027c:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020280:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8020284:	781b      	ldrb	r3, [r3, #0]
 8020286:	2b01      	cmp	r3, #1
 8020288:	f040 8165 	bne.w	8020556 <six2six_notifyReceive+0x94a>
 802028c:	f7fc ffcc 	bl	801d228 <a332c320f50553856ddcee95ff765027b8f3e118>
 8020290:	4603      	mov	r3, r0
 8020292:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 8020296:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802029a:	3341      	adds	r3, #65	; 0x41
 802029c:	4618      	mov	r0, r3
 802029e:	f7fd f83d 	bl	801d31c <ee504f8deafedb03386eec1c989207132bd15110>
 80202a2:	4603      	mov	r3, r0
 80202a4:	2b00      	cmp	r3, #0
 80202a6:	d10c      	bne.n	80202c2 <six2six_notifyReceive+0x6b6>
 80202a8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80202ac:	2b01      	cmp	r3, #1
 80202ae:	d905      	bls.n	80202bc <six2six_notifyReceive+0x6b0>
 80202b0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80202b4:	3b02      	subs	r3, #2
 80202b6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 80202ba:	e002      	b.n	80202c2 <six2six_notifyReceive+0x6b6>
 80202bc:	2300      	movs	r3, #0
 80202be:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 80202c2:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 80202c6:	b29b      	uxth	r3, r3
 80202c8:	f8b7 211c 	ldrh.w	r2, [r7, #284]	; 0x11c
 80202cc:	429a      	cmp	r2, r3
 80202ce:	d912      	bls.n	80202f6 <six2six_notifyReceive+0x6ea>
 80202d0:	4a5f      	ldr	r2, [pc, #380]	; (8020450 <six2six_notifyReceive+0x844>)
 80202d2:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80202d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80202da:	e883 0003 	stmia.w	r3, {r0, r1}
 80202de:	4a5d      	ldr	r2, [pc, #372]	; (8020454 <six2six_notifyReceive+0x848>)
 80202e0:	f107 0388 	add.w	r3, r7, #136	; 0x88
 80202e4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80202e8:	f7f4 ff8e 	bl	8015208 <LOGGER_PrintLine>
 80202ec:	2300      	movs	r3, #0
 80202ee:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80202f2:	f000 bc6a 	b.w	8020bca <six2six_notifyReceive+0xfbe>
 80202f6:	2300      	movs	r3, #0
 80202f8:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80202fc:	e08c      	b.n	8020418 <six2six_notifyReceive+0x80c>
 80202fe:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020302:	685a      	ldr	r2, [r3, #4]
 8020304:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020308:	4413      	add	r3, r2
 802030a:	781b      	ldrb	r3, [r3, #0]
 802030c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020310:	4618      	mov	r0, r3
 8020312:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020316:	4613      	mov	r3, r2
 8020318:	009b      	lsls	r3, r3, #2
 802031a:	4413      	add	r3, r2
 802031c:	440b      	add	r3, r1
 802031e:	3360      	adds	r3, #96	; 0x60
 8020320:	4602      	mov	r2, r0
 8020322:	f8a3 2001 	strh.w	r2, [r3, #1]
 8020326:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802032a:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802032e:	4613      	mov	r3, r2
 8020330:	009b      	lsls	r3, r3, #2
 8020332:	4413      	add	r3, r2
 8020334:	440b      	add	r3, r1
 8020336:	3360      	adds	r3, #96	; 0x60
 8020338:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 802033c:	b299      	uxth	r1, r3
 802033e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020342:	685a      	ldr	r2, [r3, #4]
 8020344:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020348:	3301      	adds	r3, #1
 802034a:	4413      	add	r3, r2
 802034c:	781b      	ldrb	r3, [r3, #0]
 802034e:	021b      	lsls	r3, r3, #8
 8020350:	b29b      	uxth	r3, r3
 8020352:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020356:	430b      	orrs	r3, r1
 8020358:	b298      	uxth	r0, r3
 802035a:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802035e:	4613      	mov	r3, r2
 8020360:	009b      	lsls	r3, r3, #2
 8020362:	4413      	add	r3, r2
 8020364:	440b      	add	r3, r1
 8020366:	3360      	adds	r3, #96	; 0x60
 8020368:	4602      	mov	r2, r0
 802036a:	f8a3 2001 	strh.w	r2, [r3, #1]
 802036e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020372:	685a      	ldr	r2, [r3, #4]
 8020374:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020378:	3302      	adds	r3, #2
 802037a:	4413      	add	r3, r2
 802037c:	781b      	ldrb	r3, [r3, #0]
 802037e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020382:	4618      	mov	r0, r3
 8020384:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020388:	4613      	mov	r3, r2
 802038a:	009b      	lsls	r3, r3, #2
 802038c:	4413      	add	r3, r2
 802038e:	440b      	add	r3, r1
 8020390:	3360      	adds	r3, #96	; 0x60
 8020392:	4602      	mov	r2, r0
 8020394:	f8a3 2003 	strh.w	r2, [r3, #3]
 8020398:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802039c:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80203a0:	4613      	mov	r3, r2
 80203a2:	009b      	lsls	r3, r3, #2
 80203a4:	4413      	add	r3, r2
 80203a6:	440b      	add	r3, r1
 80203a8:	3360      	adds	r3, #96	; 0x60
 80203aa:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80203ae:	b299      	uxth	r1, r3
 80203b0:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80203b4:	685a      	ldr	r2, [r3, #4]
 80203b6:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80203ba:	3303      	adds	r3, #3
 80203bc:	4413      	add	r3, r2
 80203be:	781b      	ldrb	r3, [r3, #0]
 80203c0:	021b      	lsls	r3, r3, #8
 80203c2:	b29b      	uxth	r3, r3
 80203c4:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80203c8:	430b      	orrs	r3, r1
 80203ca:	b298      	uxth	r0, r3
 80203cc:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80203d0:	4613      	mov	r3, r2
 80203d2:	009b      	lsls	r3, r3, #2
 80203d4:	4413      	add	r3, r2
 80203d6:	440b      	add	r3, r1
 80203d8:	3360      	adds	r3, #96	; 0x60
 80203da:	4602      	mov	r2, r0
 80203dc:	f8a3 2003 	strh.w	r2, [r3, #3]
 80203e0:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80203e4:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80203e8:	4613      	mov	r3, r2
 80203ea:	009b      	lsls	r3, r3, #2
 80203ec:	4413      	add	r3, r2
 80203ee:	440b      	add	r3, r1
 80203f0:	3360      	adds	r3, #96	; 0x60
 80203f2:	2201      	movs	r2, #1
 80203f4:	701a      	strb	r2, [r3, #0]
 80203f6:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80203fa:	3304      	adds	r3, #4
 80203fc:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020400:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020404:	3b04      	subs	r3, #4
 8020406:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 802040a:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802040e:	b29b      	uxth	r3, r3
 8020410:	3301      	adds	r3, #1
 8020412:	b29b      	uxth	r3, r3
 8020414:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020418:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 802041c:	2b00      	cmp	r3, #0
 802041e:	f47f af6e 	bne.w	80202fe <six2six_notifyReceive+0x6f2>
 8020422:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 8020426:	b2d8      	uxtb	r0, r3
 8020428:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 802042c:	b2d9      	uxtb	r1, r3
 802042e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020432:	3360      	adds	r3, #96	; 0x60
 8020434:	461a      	mov	r2, r3
 8020436:	f001 fa19 	bl	802186c <areAvailableCellsToBeScheduled>
 802043a:	4603      	mov	r3, r0
 802043c:	2b00      	cmp	r3, #0
 802043e:	d078      	beq.n	8020532 <six2six_notifyReceive+0x926>
 8020440:	2304      	movs	r3, #4
 8020442:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020446:	e06f      	b.n	8020528 <six2six_notifyReceive+0x91c>
 8020448:	0803043c 	.word	0x0803043c
 802044c:	08030718 	.word	0x08030718
 8020450:	080304a8 	.word	0x080304a8
 8020454:	08030728 	.word	0x08030728
 8020458:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802045c:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020460:	4613      	mov	r3, r2
 8020462:	009b      	lsls	r3, r3, #2
 8020464:	4413      	add	r3, r2
 8020466:	440b      	add	r3, r1
 8020468:	3360      	adds	r3, #96	; 0x60
 802046a:	781b      	ldrb	r3, [r3, #0]
 802046c:	2b00      	cmp	r3, #0
 802046e:	d054      	beq.n	802051a <six2six_notifyReceive+0x90e>
 8020470:	2104      	movs	r1, #4
 8020472:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020476:	f009 f80d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802047a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802047e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020482:	4613      	mov	r3, r2
 8020484:	009b      	lsls	r3, r3, #2
 8020486:	4413      	add	r3, r2
 8020488:	440b      	add	r3, r1
 802048a:	3360      	adds	r3, #96	; 0x60
 802048c:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8020490:	b29a      	uxth	r2, r3
 8020492:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020496:	685b      	ldr	r3, [r3, #4]
 8020498:	b2d2      	uxtb	r2, r2
 802049a:	701a      	strb	r2, [r3, #0]
 802049c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80204a0:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80204a4:	4613      	mov	r3, r2
 80204a6:	009b      	lsls	r3, r3, #2
 80204a8:	4413      	add	r3, r2
 80204aa:	440b      	add	r3, r1
 80204ac:	3360      	adds	r3, #96	; 0x60
 80204ae:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80204b2:	b29b      	uxth	r3, r3
 80204b4:	0a1b      	lsrs	r3, r3, #8
 80204b6:	b29a      	uxth	r2, r3
 80204b8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80204bc:	685b      	ldr	r3, [r3, #4]
 80204be:	3301      	adds	r3, #1
 80204c0:	b2d2      	uxtb	r2, r2
 80204c2:	701a      	strb	r2, [r3, #0]
 80204c4:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80204c8:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80204cc:	4613      	mov	r3, r2
 80204ce:	009b      	lsls	r3, r3, #2
 80204d0:	4413      	add	r3, r2
 80204d2:	440b      	add	r3, r1
 80204d4:	3360      	adds	r3, #96	; 0x60
 80204d6:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80204da:	b29a      	uxth	r2, r3
 80204dc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80204e0:	685b      	ldr	r3, [r3, #4]
 80204e2:	3302      	adds	r3, #2
 80204e4:	b2d2      	uxtb	r2, r2
 80204e6:	701a      	strb	r2, [r3, #0]
 80204e8:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80204ec:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80204f0:	4613      	mov	r3, r2
 80204f2:	009b      	lsls	r3, r3, #2
 80204f4:	4413      	add	r3, r2
 80204f6:	440b      	add	r3, r1
 80204f8:	3360      	adds	r3, #96	; 0x60
 80204fa:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80204fe:	b29b      	uxth	r3, r3
 8020500:	0a1b      	lsrs	r3, r3, #8
 8020502:	b29a      	uxth	r2, r3
 8020504:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020508:	685b      	ldr	r3, [r3, #4]
 802050a:	3303      	adds	r3, #3
 802050c:	b2d2      	uxtb	r2, r2
 802050e:	701a      	strb	r2, [r3, #0]
 8020510:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020514:	3304      	adds	r3, #4
 8020516:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 802051a:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802051e:	b29b      	uxth	r3, r3
 8020520:	3b01      	subs	r3, #1
 8020522:	b29b      	uxth	r3, r3
 8020524:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020528:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802052c:	2b00      	cmp	r3, #0
 802052e:	da93      	bge.n	8020458 <six2six_notifyReceive+0x84c>
 8020530:	e00d      	b.n	802054e <six2six_notifyReceive+0x942>
 8020532:	4aaf      	ldr	r2, [pc, #700]	; (80207f0 <six2six_notifyReceive+0xbe4>)
 8020534:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8020538:	e892 0003 	ldmia.w	r2, {r0, r1}
 802053c:	e883 0003 	stmia.w	r3, {r0, r1}
 8020540:	4aac      	ldr	r2, [pc, #688]	; (80207f4 <six2six_notifyReceive+0xbe8>)
 8020542:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8020546:	e893 0003 	ldmia.w	r3, {r0, r1}
 802054a:	f7f4 fe5d 	bl	8015208 <LOGGER_PrintLine>
 802054e:	2300      	movs	r3, #0
 8020550:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8020554:	e339      	b.n	8020bca <six2six_notifyReceive+0xfbe>
 8020556:	f507 7394 	add.w	r3, r7, #296	; 0x128
 802055a:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 802055e:	781b      	ldrb	r3, [r3, #0]
 8020560:	2b02      	cmp	r3, #2
 8020562:	f040 8134 	bne.w	80207ce <six2six_notifyReceive+0xbc2>
 8020566:	2300      	movs	r3, #0
 8020568:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 802056c:	e086      	b.n	802067c <six2six_notifyReceive+0xa70>
 802056e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020572:	685a      	ldr	r2, [r3, #4]
 8020574:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020578:	4413      	add	r3, r2
 802057a:	781b      	ldrb	r3, [r3, #0]
 802057c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020580:	4618      	mov	r0, r3
 8020582:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020586:	4613      	mov	r3, r2
 8020588:	009b      	lsls	r3, r3, #2
 802058a:	4413      	add	r3, r2
 802058c:	440b      	add	r3, r1
 802058e:	337a      	adds	r3, #122	; 0x7a
 8020590:	4602      	mov	r2, r0
 8020592:	801a      	strh	r2, [r3, #0]
 8020594:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020598:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802059c:	4613      	mov	r3, r2
 802059e:	009b      	lsls	r3, r3, #2
 80205a0:	4413      	add	r3, r2
 80205a2:	440b      	add	r3, r1
 80205a4:	337a      	adds	r3, #122	; 0x7a
 80205a6:	881b      	ldrh	r3, [r3, #0]
 80205a8:	b299      	uxth	r1, r3
 80205aa:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80205ae:	685a      	ldr	r2, [r3, #4]
 80205b0:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80205b4:	3301      	adds	r3, #1
 80205b6:	4413      	add	r3, r2
 80205b8:	781b      	ldrb	r3, [r3, #0]
 80205ba:	021b      	lsls	r3, r3, #8
 80205bc:	b29b      	uxth	r3, r3
 80205be:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80205c2:	430b      	orrs	r3, r1
 80205c4:	b298      	uxth	r0, r3
 80205c6:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80205ca:	4613      	mov	r3, r2
 80205cc:	009b      	lsls	r3, r3, #2
 80205ce:	4413      	add	r3, r2
 80205d0:	440b      	add	r3, r1
 80205d2:	337a      	adds	r3, #122	; 0x7a
 80205d4:	4602      	mov	r2, r0
 80205d6:	801a      	strh	r2, [r3, #0]
 80205d8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80205dc:	685a      	ldr	r2, [r3, #4]
 80205de:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80205e2:	3302      	adds	r3, #2
 80205e4:	4413      	add	r3, r2
 80205e6:	781b      	ldrb	r3, [r3, #0]
 80205e8:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80205ec:	4618      	mov	r0, r3
 80205ee:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80205f2:	4613      	mov	r3, r2
 80205f4:	009b      	lsls	r3, r3, #2
 80205f6:	4413      	add	r3, r2
 80205f8:	440b      	add	r3, r1
 80205fa:	337c      	adds	r3, #124	; 0x7c
 80205fc:	4602      	mov	r2, r0
 80205fe:	801a      	strh	r2, [r3, #0]
 8020600:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020604:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020608:	4613      	mov	r3, r2
 802060a:	009b      	lsls	r3, r3, #2
 802060c:	4413      	add	r3, r2
 802060e:	440b      	add	r3, r1
 8020610:	337c      	adds	r3, #124	; 0x7c
 8020612:	881b      	ldrh	r3, [r3, #0]
 8020614:	b299      	uxth	r1, r3
 8020616:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802061a:	685a      	ldr	r2, [r3, #4]
 802061c:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020620:	3303      	adds	r3, #3
 8020622:	4413      	add	r3, r2
 8020624:	781b      	ldrb	r3, [r3, #0]
 8020626:	021b      	lsls	r3, r3, #8
 8020628:	b29b      	uxth	r3, r3
 802062a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802062e:	430b      	orrs	r3, r1
 8020630:	b298      	uxth	r0, r3
 8020632:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020636:	4613      	mov	r3, r2
 8020638:	009b      	lsls	r3, r3, #2
 802063a:	4413      	add	r3, r2
 802063c:	440b      	add	r3, r1
 802063e:	337c      	adds	r3, #124	; 0x7c
 8020640:	4602      	mov	r2, r0
 8020642:	801a      	strh	r2, [r3, #0]
 8020644:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020648:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802064c:	4613      	mov	r3, r2
 802064e:	009b      	lsls	r3, r3, #2
 8020650:	4413      	add	r3, r2
 8020652:	440b      	add	r3, r1
 8020654:	3379      	adds	r3, #121	; 0x79
 8020656:	2201      	movs	r2, #1
 8020658:	701a      	strb	r2, [r3, #0]
 802065a:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802065e:	3304      	adds	r3, #4
 8020660:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020664:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020668:	3b04      	subs	r3, #4
 802066a:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 802066e:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020672:	b29b      	uxth	r3, r3
 8020674:	3301      	adds	r3, #1
 8020676:	b29b      	uxth	r3, r3
 8020678:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 802067c:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020680:	2b00      	cmp	r3, #0
 8020682:	f47f af74 	bne.w	802056e <six2six_notifyReceive+0x962>
 8020686:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 802068a:	f003 0303 	and.w	r3, r3, #3
 802068e:	2b03      	cmp	r3, #3
 8020690:	d006      	beq.n	80206a0 <six2six_notifyReceive+0xa94>
 8020692:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020696:	f083 0303 	eor.w	r3, r3, #3
 802069a:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 802069e:	e003      	b.n	80206a8 <six2six_notifyReceive+0xa9c>
 80206a0:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 80206a4:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 80206a8:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 80206ac:	b2d8      	uxtb	r0, r3
 80206ae:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 80206b2:	b2d9      	uxtb	r1, r3
 80206b4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80206b8:	f103 0279 	add.w	r2, r3, #121	; 0x79
 80206bc:	f897 3122 	ldrb.w	r3, [r7, #290]	; 0x122
 80206c0:	f001 f9c6 	bl	8021a50 <areAvailableCellsToBeRemoved>
 80206c4:	4603      	mov	r3, r0
 80206c6:	2b00      	cmp	r3, #0
 80206c8:	d06f      	beq.n	80207aa <six2six_notifyReceive+0xb9e>
 80206ca:	2300      	movs	r3, #0
 80206cc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80206d0:	2304      	movs	r3, #4
 80206d2:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80206d6:	e063      	b.n	80207a0 <six2six_notifyReceive+0xb94>
 80206d8:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80206dc:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80206e0:	4613      	mov	r3, r2
 80206e2:	009b      	lsls	r3, r3, #2
 80206e4:	4413      	add	r3, r2
 80206e6:	440b      	add	r3, r1
 80206e8:	3379      	adds	r3, #121	; 0x79
 80206ea:	781b      	ldrb	r3, [r3, #0]
 80206ec:	2b00      	cmp	r3, #0
 80206ee:	d050      	beq.n	8020792 <six2six_notifyReceive+0xb86>
 80206f0:	2104      	movs	r1, #4
 80206f2:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 80206f6:	f008 fecd 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80206fa:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80206fe:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020702:	4613      	mov	r3, r2
 8020704:	009b      	lsls	r3, r3, #2
 8020706:	4413      	add	r3, r2
 8020708:	440b      	add	r3, r1
 802070a:	337a      	adds	r3, #122	; 0x7a
 802070c:	881b      	ldrh	r3, [r3, #0]
 802070e:	b29a      	uxth	r2, r3
 8020710:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020714:	685b      	ldr	r3, [r3, #4]
 8020716:	b2d2      	uxtb	r2, r2
 8020718:	701a      	strb	r2, [r3, #0]
 802071a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802071e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020722:	4613      	mov	r3, r2
 8020724:	009b      	lsls	r3, r3, #2
 8020726:	4413      	add	r3, r2
 8020728:	440b      	add	r3, r1
 802072a:	337a      	adds	r3, #122	; 0x7a
 802072c:	881b      	ldrh	r3, [r3, #0]
 802072e:	b29b      	uxth	r3, r3
 8020730:	0a1b      	lsrs	r3, r3, #8
 8020732:	b29a      	uxth	r2, r3
 8020734:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020738:	685b      	ldr	r3, [r3, #4]
 802073a:	3301      	adds	r3, #1
 802073c:	b2d2      	uxtb	r2, r2
 802073e:	701a      	strb	r2, [r3, #0]
 8020740:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020744:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020748:	4613      	mov	r3, r2
 802074a:	009b      	lsls	r3, r3, #2
 802074c:	4413      	add	r3, r2
 802074e:	440b      	add	r3, r1
 8020750:	337c      	adds	r3, #124	; 0x7c
 8020752:	881b      	ldrh	r3, [r3, #0]
 8020754:	b29a      	uxth	r2, r3
 8020756:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 802075a:	685b      	ldr	r3, [r3, #4]
 802075c:	3302      	adds	r3, #2
 802075e:	b2d2      	uxtb	r2, r2
 8020760:	701a      	strb	r2, [r3, #0]
 8020762:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020766:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802076a:	4613      	mov	r3, r2
 802076c:	009b      	lsls	r3, r3, #2
 802076e:	4413      	add	r3, r2
 8020770:	440b      	add	r3, r1
 8020772:	337c      	adds	r3, #124	; 0x7c
 8020774:	881b      	ldrh	r3, [r3, #0]
 8020776:	b29b      	uxth	r3, r3
 8020778:	0a1b      	lsrs	r3, r3, #8
 802077a:	b29a      	uxth	r2, r3
 802077c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020780:	685b      	ldr	r3, [r3, #4]
 8020782:	3303      	adds	r3, #3
 8020784:	b2d2      	uxtb	r2, r2
 8020786:	701a      	strb	r2, [r3, #0]
 8020788:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 802078c:	3304      	adds	r3, #4
 802078e:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020792:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020796:	b29b      	uxth	r3, r3
 8020798:	3b01      	subs	r3, #1
 802079a:	b29b      	uxth	r3, r3
 802079c:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80207a0:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 80207a4:	2b00      	cmp	r3, #0
 80207a6:	da97      	bge.n	80206d8 <six2six_notifyReceive+0xacc>
 80207a8:	e20f      	b.n	8020bca <six2six_notifyReceive+0xfbe>
 80207aa:	4a13      	ldr	r2, [pc, #76]	; (80207f8 <six2six_notifyReceive+0xbec>)
 80207ac:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80207b0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80207b4:	e883 0003 	stmia.w	r3, {r0, r1}
 80207b8:	4a10      	ldr	r2, [pc, #64]	; (80207fc <six2six_notifyReceive+0xbf0>)
 80207ba:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80207be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80207c2:	f7f4 fd21 	bl	8015208 <LOGGER_PrintLine>
 80207c6:	2307      	movs	r3, #7
 80207c8:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 80207cc:	e1fd      	b.n	8020bca <six2six_notifyReceive+0xfbe>
 80207ce:	f507 7394 	add.w	r3, r7, #296	; 0x128
 80207d2:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 80207d6:	781b      	ldrb	r3, [r3, #0]
 80207d8:	2b03      	cmp	r3, #3
 80207da:	f040 81f6 	bne.w	8020bca <six2six_notifyReceive+0xfbe>
 80207de:	2300      	movs	r3, #0
 80207e0:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80207e4:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 80207e8:	f8a7 311a 	strh.w	r3, [r7, #282]	; 0x11a
 80207ec:	e094      	b.n	8020918 <six2six_notifyReceive+0xd0c>
 80207ee:	bf00      	nop
 80207f0:	080304a8 	.word	0x080304a8
 80207f4:	08030740 	.word	0x08030740
 80207f8:	0803043c 	.word	0x0803043c
 80207fc:	08030764 	.word	0x08030764
 8020800:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020804:	685a      	ldr	r2, [r3, #4]
 8020806:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802080a:	4413      	add	r3, r2
 802080c:	781b      	ldrb	r3, [r3, #0]
 802080e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020812:	4618      	mov	r0, r3
 8020814:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020818:	4613      	mov	r3, r2
 802081a:	009b      	lsls	r3, r3, #2
 802081c:	4413      	add	r3, r2
 802081e:	440b      	add	r3, r1
 8020820:	337a      	adds	r3, #122	; 0x7a
 8020822:	4602      	mov	r2, r0
 8020824:	801a      	strh	r2, [r3, #0]
 8020826:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802082a:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802082e:	4613      	mov	r3, r2
 8020830:	009b      	lsls	r3, r3, #2
 8020832:	4413      	add	r3, r2
 8020834:	440b      	add	r3, r1
 8020836:	337a      	adds	r3, #122	; 0x7a
 8020838:	881b      	ldrh	r3, [r3, #0]
 802083a:	b299      	uxth	r1, r3
 802083c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020840:	685a      	ldr	r2, [r3, #4]
 8020842:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020846:	3301      	adds	r3, #1
 8020848:	4413      	add	r3, r2
 802084a:	781b      	ldrb	r3, [r3, #0]
 802084c:	021b      	lsls	r3, r3, #8
 802084e:	b29b      	uxth	r3, r3
 8020850:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020854:	430b      	orrs	r3, r1
 8020856:	b298      	uxth	r0, r3
 8020858:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802085c:	4613      	mov	r3, r2
 802085e:	009b      	lsls	r3, r3, #2
 8020860:	4413      	add	r3, r2
 8020862:	440b      	add	r3, r1
 8020864:	337a      	adds	r3, #122	; 0x7a
 8020866:	4602      	mov	r2, r0
 8020868:	801a      	strh	r2, [r3, #0]
 802086a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802086e:	685a      	ldr	r2, [r3, #4]
 8020870:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020874:	3302      	adds	r3, #2
 8020876:	4413      	add	r3, r2
 8020878:	781b      	ldrb	r3, [r3, #0]
 802087a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802087e:	4618      	mov	r0, r3
 8020880:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020884:	4613      	mov	r3, r2
 8020886:	009b      	lsls	r3, r3, #2
 8020888:	4413      	add	r3, r2
 802088a:	440b      	add	r3, r1
 802088c:	337c      	adds	r3, #124	; 0x7c
 802088e:	4602      	mov	r2, r0
 8020890:	801a      	strh	r2, [r3, #0]
 8020892:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020896:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 802089a:	4613      	mov	r3, r2
 802089c:	009b      	lsls	r3, r3, #2
 802089e:	4413      	add	r3, r2
 80208a0:	440b      	add	r3, r1
 80208a2:	337c      	adds	r3, #124	; 0x7c
 80208a4:	881b      	ldrh	r3, [r3, #0]
 80208a6:	b299      	uxth	r1, r3
 80208a8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80208ac:	685a      	ldr	r2, [r3, #4]
 80208ae:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80208b2:	3303      	adds	r3, #3
 80208b4:	4413      	add	r3, r2
 80208b6:	781b      	ldrb	r3, [r3, #0]
 80208b8:	021b      	lsls	r3, r3, #8
 80208ba:	b29b      	uxth	r3, r3
 80208bc:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80208c0:	430b      	orrs	r3, r1
 80208c2:	b298      	uxth	r0, r3
 80208c4:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80208c8:	4613      	mov	r3, r2
 80208ca:	009b      	lsls	r3, r3, #2
 80208cc:	4413      	add	r3, r2
 80208ce:	440b      	add	r3, r1
 80208d0:	337c      	adds	r3, #124	; 0x7c
 80208d2:	4602      	mov	r2, r0
 80208d4:	801a      	strh	r2, [r3, #0]
 80208d6:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80208da:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80208de:	4613      	mov	r3, r2
 80208e0:	009b      	lsls	r3, r3, #2
 80208e2:	4413      	add	r3, r2
 80208e4:	440b      	add	r3, r1
 80208e6:	3379      	adds	r3, #121	; 0x79
 80208e8:	2201      	movs	r2, #1
 80208ea:	701a      	strb	r2, [r3, #0]
 80208ec:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80208f0:	3304      	adds	r3, #4
 80208f2:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 80208f6:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 80208fa:	3b04      	subs	r3, #4
 80208fc:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8020900:	f8b7 311a 	ldrh.w	r3, [r7, #282]	; 0x11a
 8020904:	3b01      	subs	r3, #1
 8020906:	f8a7 311a 	strh.w	r3, [r7, #282]	; 0x11a
 802090a:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802090e:	b29b      	uxth	r3, r3
 8020910:	3301      	adds	r3, #1
 8020912:	b29b      	uxth	r3, r3
 8020914:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020918:	f8b7 311a 	ldrh.w	r3, [r7, #282]	; 0x11a
 802091c:	2b00      	cmp	r3, #0
 802091e:	f47f af6f 	bne.w	8020800 <six2six_notifyReceive+0xbf4>
 8020922:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020926:	f003 0303 	and.w	r3, r3, #3
 802092a:	2b03      	cmp	r3, #3
 802092c:	d006      	beq.n	802093c <six2six_notifyReceive+0xd30>
 802092e:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020932:	f083 0303 	eor.w	r3, r3, #3
 8020936:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 802093a:	e003      	b.n	8020944 <six2six_notifyReceive+0xd38>
 802093c:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020940:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 8020944:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 8020948:	b2d8      	uxtb	r0, r3
 802094a:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 802094e:	b2d9      	uxtb	r1, r3
 8020950:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020954:	f103 0279 	add.w	r2, r3, #121	; 0x79
 8020958:	f897 3122 	ldrb.w	r3, [r7, #290]	; 0x122
 802095c:	f001 f878 	bl	8021a50 <areAvailableCellsToBeRemoved>
 8020960:	4603      	mov	r3, r0
 8020962:	f083 0301 	eor.w	r3, r3, #1
 8020966:	b2db      	uxtb	r3, r3
 8020968:	2b00      	cmp	r3, #0
 802096a:	d011      	beq.n	8020990 <six2six_notifyReceive+0xd84>
 802096c:	4aaa      	ldr	r2, [pc, #680]	; (8020c18 <six2six_notifyReceive+0x100c>)
 802096e:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8020972:	e892 0003 	ldmia.w	r2, {r0, r1}
 8020976:	e883 0003 	stmia.w	r3, {r0, r1}
 802097a:	4aa8      	ldr	r2, [pc, #672]	; (8020c1c <six2six_notifyReceive+0x1010>)
 802097c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8020980:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020984:	f7f4 fc40 	bl	8015208 <LOGGER_PrintLine>
 8020988:	2307      	movs	r3, #7
 802098a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 802098e:	e11c      	b.n	8020bca <six2six_notifyReceive+0xfbe>
 8020990:	2300      	movs	r3, #0
 8020992:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020996:	e08c      	b.n	8020ab2 <six2six_notifyReceive+0xea6>
 8020998:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802099c:	685a      	ldr	r2, [r3, #4]
 802099e:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80209a2:	4413      	add	r3, r2
 80209a4:	781b      	ldrb	r3, [r3, #0]
 80209a6:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80209aa:	4618      	mov	r0, r3
 80209ac:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80209b0:	4613      	mov	r3, r2
 80209b2:	009b      	lsls	r3, r3, #2
 80209b4:	4413      	add	r3, r2
 80209b6:	440b      	add	r3, r1
 80209b8:	3360      	adds	r3, #96	; 0x60
 80209ba:	4602      	mov	r2, r0
 80209bc:	f8a3 2001 	strh.w	r2, [r3, #1]
 80209c0:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80209c4:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80209c8:	4613      	mov	r3, r2
 80209ca:	009b      	lsls	r3, r3, #2
 80209cc:	4413      	add	r3, r2
 80209ce:	440b      	add	r3, r1
 80209d0:	3360      	adds	r3, #96	; 0x60
 80209d2:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80209d6:	b299      	uxth	r1, r3
 80209d8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80209dc:	685a      	ldr	r2, [r3, #4]
 80209de:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80209e2:	3301      	adds	r3, #1
 80209e4:	4413      	add	r3, r2
 80209e6:	781b      	ldrb	r3, [r3, #0]
 80209e8:	021b      	lsls	r3, r3, #8
 80209ea:	b29b      	uxth	r3, r3
 80209ec:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80209f0:	430b      	orrs	r3, r1
 80209f2:	b298      	uxth	r0, r3
 80209f4:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 80209f8:	4613      	mov	r3, r2
 80209fa:	009b      	lsls	r3, r3, #2
 80209fc:	4413      	add	r3, r2
 80209fe:	440b      	add	r3, r1
 8020a00:	3360      	adds	r3, #96	; 0x60
 8020a02:	4602      	mov	r2, r0
 8020a04:	f8a3 2001 	strh.w	r2, [r3, #1]
 8020a08:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020a0c:	685a      	ldr	r2, [r3, #4]
 8020a0e:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020a12:	3302      	adds	r3, #2
 8020a14:	4413      	add	r3, r2
 8020a16:	781b      	ldrb	r3, [r3, #0]
 8020a18:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020a1c:	4618      	mov	r0, r3
 8020a1e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020a22:	4613      	mov	r3, r2
 8020a24:	009b      	lsls	r3, r3, #2
 8020a26:	4413      	add	r3, r2
 8020a28:	440b      	add	r3, r1
 8020a2a:	3360      	adds	r3, #96	; 0x60
 8020a2c:	4602      	mov	r2, r0
 8020a2e:	f8a3 2003 	strh.w	r2, [r3, #3]
 8020a32:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020a36:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020a3a:	4613      	mov	r3, r2
 8020a3c:	009b      	lsls	r3, r3, #2
 8020a3e:	4413      	add	r3, r2
 8020a40:	440b      	add	r3, r1
 8020a42:	3360      	adds	r3, #96	; 0x60
 8020a44:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 8020a48:	b299      	uxth	r1, r3
 8020a4a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020a4e:	685a      	ldr	r2, [r3, #4]
 8020a50:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020a54:	3303      	adds	r3, #3
 8020a56:	4413      	add	r3, r2
 8020a58:	781b      	ldrb	r3, [r3, #0]
 8020a5a:	021b      	lsls	r3, r3, #8
 8020a5c:	b29b      	uxth	r3, r3
 8020a5e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020a62:	430b      	orrs	r3, r1
 8020a64:	b298      	uxth	r0, r3
 8020a66:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020a6a:	4613      	mov	r3, r2
 8020a6c:	009b      	lsls	r3, r3, #2
 8020a6e:	4413      	add	r3, r2
 8020a70:	440b      	add	r3, r1
 8020a72:	3360      	adds	r3, #96	; 0x60
 8020a74:	4602      	mov	r2, r0
 8020a76:	f8a3 2003 	strh.w	r2, [r3, #3]
 8020a7a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020a7e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020a82:	4613      	mov	r3, r2
 8020a84:	009b      	lsls	r3, r3, #2
 8020a86:	4413      	add	r3, r2
 8020a88:	440b      	add	r3, r1
 8020a8a:	3360      	adds	r3, #96	; 0x60
 8020a8c:	2201      	movs	r2, #1
 8020a8e:	701a      	strb	r2, [r3, #0]
 8020a90:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020a94:	3304      	adds	r3, #4
 8020a96:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020a9a:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020a9e:	3b04      	subs	r3, #4
 8020aa0:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8020aa4:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020aa8:	b29b      	uxth	r3, r3
 8020aaa:	3301      	adds	r3, #1
 8020aac:	b29b      	uxth	r3, r3
 8020aae:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020ab2:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020ab6:	2b00      	cmp	r3, #0
 8020ab8:	f47f af6e 	bne.w	8020998 <six2six_notifyReceive+0xd8c>
 8020abc:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 8020ac0:	b2d8      	uxtb	r0, r3
 8020ac2:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 8020ac6:	b2d9      	uxtb	r1, r3
 8020ac8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020acc:	f103 0279 	add.w	r2, r3, #121	; 0x79
 8020ad0:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020ad4:	3360      	adds	r3, #96	; 0x60
 8020ad6:	f000 ff1e 	bl	8021916 <cellsToBeRelocated>
 8020ada:	4603      	mov	r3, r0
 8020adc:	2b00      	cmp	r3, #0
 8020ade:	d06f      	beq.n	8020bc0 <six2six_notifyReceive+0xfb4>
 8020ae0:	2304      	movs	r3, #4
 8020ae2:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020ae6:	e067      	b.n	8020bb8 <six2six_notifyReceive+0xfac>
 8020ae8:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020aec:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020af0:	4613      	mov	r3, r2
 8020af2:	009b      	lsls	r3, r3, #2
 8020af4:	4413      	add	r3, r2
 8020af6:	440b      	add	r3, r1
 8020af8:	3360      	adds	r3, #96	; 0x60
 8020afa:	781b      	ldrb	r3, [r3, #0]
 8020afc:	2b00      	cmp	r3, #0
 8020afe:	d054      	beq.n	8020baa <six2six_notifyReceive+0xf9e>
 8020b00:	2104      	movs	r1, #4
 8020b02:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020b06:	f008 fcc5 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020b0a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020b0e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020b12:	4613      	mov	r3, r2
 8020b14:	009b      	lsls	r3, r3, #2
 8020b16:	4413      	add	r3, r2
 8020b18:	440b      	add	r3, r1
 8020b1a:	3360      	adds	r3, #96	; 0x60
 8020b1c:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8020b20:	b29a      	uxth	r2, r3
 8020b22:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020b26:	685b      	ldr	r3, [r3, #4]
 8020b28:	b2d2      	uxtb	r2, r2
 8020b2a:	701a      	strb	r2, [r3, #0]
 8020b2c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020b30:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020b34:	4613      	mov	r3, r2
 8020b36:	009b      	lsls	r3, r3, #2
 8020b38:	4413      	add	r3, r2
 8020b3a:	440b      	add	r3, r1
 8020b3c:	3360      	adds	r3, #96	; 0x60
 8020b3e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8020b42:	b29b      	uxth	r3, r3
 8020b44:	0a1b      	lsrs	r3, r3, #8
 8020b46:	b29a      	uxth	r2, r3
 8020b48:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020b4c:	685b      	ldr	r3, [r3, #4]
 8020b4e:	3301      	adds	r3, #1
 8020b50:	b2d2      	uxtb	r2, r2
 8020b52:	701a      	strb	r2, [r3, #0]
 8020b54:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020b58:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020b5c:	4613      	mov	r3, r2
 8020b5e:	009b      	lsls	r3, r3, #2
 8020b60:	4413      	add	r3, r2
 8020b62:	440b      	add	r3, r1
 8020b64:	3360      	adds	r3, #96	; 0x60
 8020b66:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 8020b6a:	b29a      	uxth	r2, r3
 8020b6c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020b70:	685b      	ldr	r3, [r3, #4]
 8020b72:	3302      	adds	r3, #2
 8020b74:	b2d2      	uxtb	r2, r2
 8020b76:	701a      	strb	r2, [r3, #0]
 8020b78:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020b7c:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8020b80:	4613      	mov	r3, r2
 8020b82:	009b      	lsls	r3, r3, #2
 8020b84:	4413      	add	r3, r2
 8020b86:	440b      	add	r3, r1
 8020b88:	3360      	adds	r3, #96	; 0x60
 8020b8a:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 8020b8e:	b29b      	uxth	r3, r3
 8020b90:	0a1b      	lsrs	r3, r3, #8
 8020b92:	b29a      	uxth	r2, r3
 8020b94:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020b98:	685b      	ldr	r3, [r3, #4]
 8020b9a:	3303      	adds	r3, #3
 8020b9c:	b2d2      	uxtb	r2, r2
 8020b9e:	701a      	strb	r2, [r3, #0]
 8020ba0:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020ba4:	3304      	adds	r3, #4
 8020ba6:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020baa:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020bae:	b29b      	uxth	r3, r3
 8020bb0:	3b01      	subs	r3, #1
 8020bb2:	b29b      	uxth	r3, r3
 8020bb4:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020bb8:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020bbc:	2b00      	cmp	r3, #0
 8020bbe:	da93      	bge.n	8020ae8 <six2six_notifyReceive+0xedc>
 8020bc0:	2300      	movs	r3, #0
 8020bc2:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8020bc6:	e000      	b.n	8020bca <six2six_notifyReceive+0xfbe>
 8020bc8:	bf00      	nop
 8020bca:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020bce:	f507 7294 	add.w	r2, r7, #296	; 0x128
 8020bd2:	f2a2 1223 	subw	r2, r2, #291	; 0x123
 8020bd6:	7812      	ldrb	r2, [r2, #0]
 8020bd8:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 8020bdc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020be0:	f897 2127 	ldrb.w	r2, [r7, #295]	; 0x127
 8020be4:	f883 2096 	strb.w	r2, [r3, #150]	; 0x96
 8020be8:	f8b7 3124 	ldrh.w	r3, [r7, #292]	; 0x124
 8020bec:	b2da      	uxtb	r2, r3
 8020bee:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020bf2:	f883 2092 	strb.w	r2, [r3, #146]	; 0x92
 8020bf6:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020bfa:	f003 0303 	and.w	r3, r3, #3
 8020bfe:	2b03      	cmp	r3, #3
 8020c00:	d00e      	beq.n	8020c20 <six2six_notifyReceive+0x1014>
 8020c02:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8020c06:	f083 0303 	eor.w	r3, r3, #3
 8020c0a:	b2da      	uxtb	r2, r3
 8020c0c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020c10:	f883 2095 	strb.w	r2, [r3, #149]	; 0x95
 8020c14:	e00a      	b.n	8020c2c <six2six_notifyReceive+0x1020>
 8020c16:	bf00      	nop
 8020c18:	0803043c 	.word	0x0803043c
 8020c1c:	08030764 	.word	0x08030764
 8020c20:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020c24:	f897 2123 	ldrb.w	r2, [r7, #291]	; 0x123
 8020c28:	f883 2095 	strb.w	r2, [r3, #149]	; 0x95
 8020c2c:	2101      	movs	r1, #1
 8020c2e:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020c32:	f008 fc2f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020c36:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020c3a:	685b      	ldr	r3, [r3, #4]
 8020c3c:	f897 2138 	ldrb.w	r2, [r7, #312]	; 0x138
 8020c40:	701a      	strb	r2, [r3, #0]
 8020c42:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020c46:	3301      	adds	r3, #1
 8020c48:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020c4c:	2101      	movs	r1, #1
 8020c4e:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020c52:	f008 fc1f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020c56:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020c5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020c5c:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 8020c60:	6854      	ldr	r4, [r2, #4]
 8020c62:	4798      	blx	r3
 8020c64:	4603      	mov	r3, r0
 8020c66:	7023      	strb	r3, [r4, #0]
 8020c68:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020c6c:	3301      	adds	r3, #1
 8020c6e:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020c72:	2101      	movs	r1, #1
 8020c74:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020c78:	f008 fc0c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020c7c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020c80:	685b      	ldr	r3, [r3, #4]
 8020c82:	f897 2127 	ldrb.w	r2, [r7, #295]	; 0x127
 8020c86:	701a      	strb	r2, [r3, #0]
 8020c88:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020c8c:	3301      	adds	r3, #1
 8020c8e:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020c92:	2101      	movs	r1, #1
 8020c94:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020c98:	f008 fbfc 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020c9c:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020ca0:	685b      	ldr	r3, [r3, #4]
 8020ca2:	2210      	movs	r2, #16
 8020ca4:	701a      	strb	r2, [r3, #0]
 8020ca6:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020caa:	3301      	adds	r3, #1
 8020cac:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020cb0:	2101      	movs	r1, #1
 8020cb2:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020cb6:	f008 fbed 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020cba:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020cbe:	685b      	ldr	r3, [r3, #4]
 8020cc0:	22c9      	movs	r2, #201	; 0xc9
 8020cc2:	701a      	strb	r2, [r3, #0]
 8020cc4:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020cc8:	3301      	adds	r3, #1
 8020cca:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8020cce:	2102      	movs	r1, #2
 8020cd0:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020cd4:	f008 fbde 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8020cd8:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8020cdc:	f8a7 3106 	strh.w	r3, [r7, #262]	; 0x106
 8020ce0:	f8b7 3106 	ldrh.w	r3, [r7, #262]	; 0x106
 8020ce4:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8020ce8:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8020cec:	f443 4328 	orr.w	r3, r3, #43008	; 0xa800
 8020cf0:	f8a7 3106 	strh.w	r3, [r7, #262]	; 0x106
 8020cf4:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020cf8:	685b      	ldr	r3, [r3, #4]
 8020cfa:	f8b7 2106 	ldrh.w	r2, [r7, #262]	; 0x106
 8020cfe:	b2d2      	uxtb	r2, r2
 8020d00:	701a      	strb	r2, [r3, #0]
 8020d02:	f8b7 3106 	ldrh.w	r3, [r7, #262]	; 0x106
 8020d06:	0a1b      	lsrs	r3, r3, #8
 8020d08:	b29a      	uxth	r2, r3
 8020d0a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020d0e:	685b      	ldr	r3, [r3, #4]
 8020d10:	3301      	adds	r3, #1
 8020d12:	b2d2      	uxtb	r2, r2
 8020d14:	701a      	strb	r2, [r3, #0]
 8020d16:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020d1a:	2201      	movs	r2, #1
 8020d1c:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 8020d20:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8020d24:	2201      	movs	r2, #1
 8020d26:	f883 2093 	strb.w	r2, [r3, #147]	; 0x93
 8020d2a:	f8d7 010c 	ldr.w	r0, [r7, #268]	; 0x10c
 8020d2e:	f7fe f81f 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 8020d32:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020d36:	f5a3 7391 	sub.w	r3, r3, #290	; 0x122
 8020d3a:	781b      	ldrb	r3, [r3, #0]
 8020d3c:	2b01      	cmp	r3, #1
 8020d3e:	f040 84ca 	bne.w	80216d6 <six2six_notifyReceive+0x1aca>
 8020d42:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020d46:	f103 0142 	add.w	r1, r3, #66	; 0x42
 8020d4a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8020d4e:	2208      	movs	r2, #8
 8020d50:	4618      	mov	r0, r3
 8020d52:	f7fd fa43 	bl	801e1dc <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8020d56:	4abe      	ldr	r2, [pc, #760]	; (8021050 <six2six_notifyReceive+0x1444>)
 8020d58:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8020d5c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8020d60:	e883 0003 	stmia.w	r3, {r0, r1}
 8020d64:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020d68:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8020d6c:	781b      	ldrb	r3, [r3, #0]
 8020d6e:	4ab9      	ldr	r2, [pc, #740]	; (8021054 <six2six_notifyReceive+0x1448>)
 8020d70:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8020d74:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8020d78:	e9cd 2300 	strd	r2, r3, [sp]
 8020d7c:	460b      	mov	r3, r1
 8020d7e:	4ab6      	ldr	r2, [pc, #728]	; (8021058 <six2six_notifyReceive+0x144c>)
 8020d80:	f107 0160 	add.w	r1, r7, #96	; 0x60
 8020d84:	c903      	ldmia	r1, {r0, r1}
 8020d86:	f7f4 fa3f 	bl	8015208 <LOGGER_PrintLine>
 8020d8a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020d8e:	7adb      	ldrb	r3, [r3, #11]
 8020d90:	2b00      	cmp	r3, #0
 8020d92:	d038      	beq.n	8020e06 <six2six_notifyReceive+0x11fa>
 8020d94:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020d98:	f103 020c 	add.w	r2, r3, #12
 8020d9c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020da0:	3341      	adds	r3, #65	; 0x41
 8020da2:	4619      	mov	r1, r3
 8020da4:	4610      	mov	r0, r2
 8020da6:	f7ee fac1 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8020daa:	4603      	mov	r3, r0
 8020dac:	f083 0301 	eor.w	r3, r3, #1
 8020db0:	b2db      	uxtb	r3, r3
 8020db2:	2b00      	cmp	r3, #0
 8020db4:	d027      	beq.n	8020e06 <six2six_notifyReceive+0x11fa>
 8020db6:	f7f4 fa71 	bl	801529c <LOGGER_StartSection>
 8020dba:	4603      	mov	r3, r0
 8020dbc:	2b00      	cmp	r3, #0
 8020dbe:	f000 8489 	beq.w	80216d4 <six2six_notifyReceive+0x1ac8>
 8020dc2:	4aa6      	ldr	r2, [pc, #664]	; (802105c <six2six_notifyReceive+0x1450>)
 8020dc4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8020dc8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8020dcc:	e883 0003 	stmia.w	r3, {r0, r1}
 8020dd0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8020dd4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020dd8:	f7f4 fa7c 	bl	80152d4 <LOGGER_PrintHeader>
 8020ddc:	48a0      	ldr	r0, [pc, #640]	; (8021060 <six2six_notifyReceive+0x1454>)
 8020dde:	f7f4 fa45 	bl	801526c <LOGGER_Print>
 8020de2:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020de6:	330c      	adds	r3, #12
 8020de8:	4618      	mov	r0, r3
 8020dea:	f7ee fac3 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 8020dee:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020df2:	3341      	adds	r3, #65	; 0x41
 8020df4:	4618      	mov	r0, r3
 8020df6:	f7ee fabd 	bl	800f374 <706a956218859121b399480423d2fbe6bb70cd71>
 8020dfa:	f7f4 f9f7 	bl	80151ec <LOGGER_PrintNL>
 8020dfe:	f7f4 fa60 	bl	80152c2 <LOGGER_EndSection>
 8020e02:	f000 bc68 	b.w	80216d6 <six2six_notifyReceive+0x1aca>
 8020e06:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020e0a:	330c      	adds	r3, #12
 8020e0c:	2211      	movs	r2, #17
 8020e0e:	2100      	movs	r1, #0
 8020e10:	4618      	mov	r0, r3
 8020e12:	f00a f971 	bl	802b0f8 <memset>
 8020e16:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020e1a:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8020e1e:	781b      	ldrb	r3, [r3, #0]
 8020e20:	2b00      	cmp	r3, #0
 8020e22:	d007      	beq.n	8020e34 <six2six_notifyReceive+0x1228>
 8020e24:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8020e28:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8020e2c:	781b      	ldrb	r3, [r3, #0]
 8020e2e:	2b01      	cmp	r3, #1
 8020e30:	f040 8408 	bne.w	8021644 <six2six_notifyReceive+0x1a38>
 8020e34:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020e38:	7adb      	ldrb	r3, [r3, #11]
 8020e3a:	3b01      	subs	r3, #1
 8020e3c:	2b0b      	cmp	r3, #11
 8020e3e:	f200 83e3 	bhi.w	8021608 <six2six_notifyReceive+0x19fc>
 8020e42:	a201      	add	r2, pc, #4	; (adr r2, 8020e48 <six2six_notifyReceive+0x123c>)
 8020e44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8020e48:	08020e79 	.word	0x08020e79
 8020e4c:	08021011 	.word	0x08021011
 8020e50:	080211bd 	.word	0x080211bd
 8020e54:	080213b3 	.word	0x080213b3
 8020e58:	0802142b 	.word	0x0802142b
 8020e5c:	080215bf 	.word	0x080215bf
 8020e60:	08020ea1 	.word	0x08020ea1
 8020e64:	08021039 	.word	0x08021039
 8020e68:	080211e5 	.word	0x080211e5
 8020e6c:	080213e3 	.word	0x080213e3
 8020e70:	0802145b 	.word	0x0802145b
 8020e74:	080215ef 	.word	0x080215ef
 8020e78:	4a7a      	ldr	r2, [pc, #488]	; (8021064 <six2six_notifyReceive+0x1458>)
 8020e7a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8020e7e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8020e82:	e883 0003 	stmia.w	r3, {r0, r1}
 8020e86:	4a78      	ldr	r2, [pc, #480]	; (8021068 <six2six_notifyReceive+0x145c>)
 8020e88:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8020e8c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8020e90:	f7f4 f9ba 	bl	8015208 <LOGGER_PrintLine>
 8020e94:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020e98:	3341      	adds	r3, #65	; 0x41
 8020e9a:	4618      	mov	r0, r3
 8020e9c:	f7ef f804 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 8020ea0:	2300      	movs	r3, #0
 8020ea2:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020ea6:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020eaa:	3360      	adds	r3, #96	; 0x60
 8020eac:	2219      	movs	r2, #25
 8020eae:	2100      	movs	r1, #0
 8020eb0:	4618      	mov	r0, r3
 8020eb2:	f00a f921 	bl	802b0f8 <memset>
 8020eb6:	e08c      	b.n	8020fd2 <six2six_notifyReceive+0x13c6>
 8020eb8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020ebc:	685a      	ldr	r2, [r3, #4]
 8020ebe:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020ec2:	4413      	add	r3, r2
 8020ec4:	781b      	ldrb	r3, [r3, #0]
 8020ec6:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020eca:	4618      	mov	r0, r3
 8020ecc:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020ed0:	4613      	mov	r3, r2
 8020ed2:	009b      	lsls	r3, r3, #2
 8020ed4:	4413      	add	r3, r2
 8020ed6:	440b      	add	r3, r1
 8020ed8:	3360      	adds	r3, #96	; 0x60
 8020eda:	4602      	mov	r2, r0
 8020edc:	f8a3 2001 	strh.w	r2, [r3, #1]
 8020ee0:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020ee4:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020ee8:	4613      	mov	r3, r2
 8020eea:	009b      	lsls	r3, r3, #2
 8020eec:	4413      	add	r3, r2
 8020eee:	440b      	add	r3, r1
 8020ef0:	3360      	adds	r3, #96	; 0x60
 8020ef2:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8020ef6:	b299      	uxth	r1, r3
 8020ef8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020efc:	685a      	ldr	r2, [r3, #4]
 8020efe:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020f02:	3301      	adds	r3, #1
 8020f04:	4413      	add	r3, r2
 8020f06:	781b      	ldrb	r3, [r3, #0]
 8020f08:	021b      	lsls	r3, r3, #8
 8020f0a:	b29b      	uxth	r3, r3
 8020f0c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020f10:	430b      	orrs	r3, r1
 8020f12:	b298      	uxth	r0, r3
 8020f14:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020f18:	4613      	mov	r3, r2
 8020f1a:	009b      	lsls	r3, r3, #2
 8020f1c:	4413      	add	r3, r2
 8020f1e:	440b      	add	r3, r1
 8020f20:	3360      	adds	r3, #96	; 0x60
 8020f22:	4602      	mov	r2, r0
 8020f24:	f8a3 2001 	strh.w	r2, [r3, #1]
 8020f28:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020f2c:	685a      	ldr	r2, [r3, #4]
 8020f2e:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020f32:	3302      	adds	r3, #2
 8020f34:	4413      	add	r3, r2
 8020f36:	781b      	ldrb	r3, [r3, #0]
 8020f38:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020f3c:	4618      	mov	r0, r3
 8020f3e:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020f42:	4613      	mov	r3, r2
 8020f44:	009b      	lsls	r3, r3, #2
 8020f46:	4413      	add	r3, r2
 8020f48:	440b      	add	r3, r1
 8020f4a:	3360      	adds	r3, #96	; 0x60
 8020f4c:	4602      	mov	r2, r0
 8020f4e:	f8a3 2003 	strh.w	r2, [r3, #3]
 8020f52:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020f56:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020f5a:	4613      	mov	r3, r2
 8020f5c:	009b      	lsls	r3, r3, #2
 8020f5e:	4413      	add	r3, r2
 8020f60:	440b      	add	r3, r1
 8020f62:	3360      	adds	r3, #96	; 0x60
 8020f64:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 8020f68:	b299      	uxth	r1, r3
 8020f6a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020f6e:	685a      	ldr	r2, [r3, #4]
 8020f70:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020f74:	3303      	adds	r3, #3
 8020f76:	4413      	add	r3, r2
 8020f78:	781b      	ldrb	r3, [r3, #0]
 8020f7a:	021b      	lsls	r3, r3, #8
 8020f7c:	b29b      	uxth	r3, r3
 8020f7e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020f82:	430b      	orrs	r3, r1
 8020f84:	b298      	uxth	r0, r3
 8020f86:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020f8a:	4613      	mov	r3, r2
 8020f8c:	009b      	lsls	r3, r3, #2
 8020f8e:	4413      	add	r3, r2
 8020f90:	440b      	add	r3, r1
 8020f92:	3360      	adds	r3, #96	; 0x60
 8020f94:	4602      	mov	r2, r0
 8020f96:	f8a3 2003 	strh.w	r2, [r3, #3]
 8020f9a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8020f9e:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8020fa2:	4613      	mov	r3, r2
 8020fa4:	009b      	lsls	r3, r3, #2
 8020fa6:	4413      	add	r3, r2
 8020fa8:	440b      	add	r3, r1
 8020faa:	3360      	adds	r3, #96	; 0x60
 8020fac:	2201      	movs	r2, #1
 8020fae:	701a      	strb	r2, [r3, #0]
 8020fb0:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8020fb4:	3304      	adds	r3, #4
 8020fb6:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8020fba:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020fbe:	3b04      	subs	r3, #4
 8020fc0:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8020fc4:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8020fc8:	b29b      	uxth	r3, r3
 8020fca:	3301      	adds	r3, #1
 8020fcc:	b29b      	uxth	r3, r3
 8020fce:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8020fd2:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8020fd6:	2b00      	cmp	r3, #0
 8020fd8:	f47f af6e 	bne.w	8020eb8 <six2six_notifyReceive+0x12ac>
 8020fdc:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020fe0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8020fe2:	4798      	blx	r3
 8020fe4:	4603      	mov	r3, r0
 8020fe6:	b2d8      	uxtb	r0, r3
 8020fe8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020fec:	f103 0160 	add.w	r1, r3, #96	; 0x60
 8020ff0:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8020ff4:	f103 0241 	add.w	r2, r3, #65	; 0x41
 8020ff8:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8020ffc:	7f5b      	ldrb	r3, [r3, #29]
 8020ffe:	f000 fb7b 	bl	80216f8 <addCells>
 8021002:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021006:	3342      	adds	r3, #66	; 0x42
 8021008:	4618      	mov	r0, r3
 802100a:	f7ec fea5 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 802100e:	e318      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 8021010:	4a14      	ldr	r2, [pc, #80]	; (8021064 <six2six_notifyReceive+0x1458>)
 8021012:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8021016:	e892 0003 	ldmia.w	r2, {r0, r1}
 802101a:	e883 0003 	stmia.w	r3, {r0, r1}
 802101e:	4a13      	ldr	r2, [pc, #76]	; (802106c <six2six_notifyReceive+0x1460>)
 8021020:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8021024:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021028:	f7f4 f8ee 	bl	8015208 <LOGGER_PrintLine>
 802102c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021030:	3341      	adds	r3, #65	; 0x41
 8021032:	4618      	mov	r0, r3
 8021034:	f7ee ff38 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 8021038:	2300      	movs	r3, #0
 802103a:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 802103e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021042:	3379      	adds	r3, #121	; 0x79
 8021044:	2219      	movs	r2, #25
 8021046:	2100      	movs	r1, #0
 8021048:	4618      	mov	r0, r3
 802104a:	f00a f855 	bl	802b0f8 <memset>
 802104e:	e096      	b.n	802117e <six2six_notifyReceive+0x1572>
 8021050:	08030444 	.word	0x08030444
 8021054:	20000298 	.word	0x20000298
 8021058:	08030774 	.word	0x08030774
 802105c:	080304a8 	.word	0x080304a8
 8021060:	08030794 	.word	0x08030794
 8021064:	0803043c 	.word	0x0803043c
 8021068:	080307c0 	.word	0x080307c0
 802106c:	08030808 	.word	0x08030808
 8021070:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021074:	685a      	ldr	r2, [r3, #4]
 8021076:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 802107a:	4413      	add	r3, r2
 802107c:	781b      	ldrb	r3, [r3, #0]
 802107e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021082:	4618      	mov	r0, r3
 8021084:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8021088:	4613      	mov	r3, r2
 802108a:	009b      	lsls	r3, r3, #2
 802108c:	4413      	add	r3, r2
 802108e:	440b      	add	r3, r1
 8021090:	337a      	adds	r3, #122	; 0x7a
 8021092:	4602      	mov	r2, r0
 8021094:	801a      	strh	r2, [r3, #0]
 8021096:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802109a:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802109e:	4613      	mov	r3, r2
 80210a0:	009b      	lsls	r3, r3, #2
 80210a2:	4413      	add	r3, r2
 80210a4:	440b      	add	r3, r1
 80210a6:	337a      	adds	r3, #122	; 0x7a
 80210a8:	881b      	ldrh	r3, [r3, #0]
 80210aa:	b299      	uxth	r1, r3
 80210ac:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80210b0:	685a      	ldr	r2, [r3, #4]
 80210b2:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80210b6:	3301      	adds	r3, #1
 80210b8:	4413      	add	r3, r2
 80210ba:	781b      	ldrb	r3, [r3, #0]
 80210bc:	021b      	lsls	r3, r3, #8
 80210be:	b29b      	uxth	r3, r3
 80210c0:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80210c4:	430b      	orrs	r3, r1
 80210c6:	b298      	uxth	r0, r3
 80210c8:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 80210cc:	4613      	mov	r3, r2
 80210ce:	009b      	lsls	r3, r3, #2
 80210d0:	4413      	add	r3, r2
 80210d2:	440b      	add	r3, r1
 80210d4:	337a      	adds	r3, #122	; 0x7a
 80210d6:	4602      	mov	r2, r0
 80210d8:	801a      	strh	r2, [r3, #0]
 80210da:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80210de:	685a      	ldr	r2, [r3, #4]
 80210e0:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80210e4:	3302      	adds	r3, #2
 80210e6:	4413      	add	r3, r2
 80210e8:	781b      	ldrb	r3, [r3, #0]
 80210ea:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80210ee:	4618      	mov	r0, r3
 80210f0:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 80210f4:	4613      	mov	r3, r2
 80210f6:	009b      	lsls	r3, r3, #2
 80210f8:	4413      	add	r3, r2
 80210fa:	440b      	add	r3, r1
 80210fc:	337c      	adds	r3, #124	; 0x7c
 80210fe:	4602      	mov	r2, r0
 8021100:	801a      	strh	r2, [r3, #0]
 8021102:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021106:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802110a:	4613      	mov	r3, r2
 802110c:	009b      	lsls	r3, r3, #2
 802110e:	4413      	add	r3, r2
 8021110:	440b      	add	r3, r1
 8021112:	337c      	adds	r3, #124	; 0x7c
 8021114:	881b      	ldrh	r3, [r3, #0]
 8021116:	b299      	uxth	r1, r3
 8021118:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802111c:	685a      	ldr	r2, [r3, #4]
 802111e:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021122:	3303      	adds	r3, #3
 8021124:	4413      	add	r3, r2
 8021126:	781b      	ldrb	r3, [r3, #0]
 8021128:	021b      	lsls	r3, r3, #8
 802112a:	b29b      	uxth	r3, r3
 802112c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021130:	430b      	orrs	r3, r1
 8021132:	b298      	uxth	r0, r3
 8021134:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8021138:	4613      	mov	r3, r2
 802113a:	009b      	lsls	r3, r3, #2
 802113c:	4413      	add	r3, r2
 802113e:	440b      	add	r3, r1
 8021140:	337c      	adds	r3, #124	; 0x7c
 8021142:	4602      	mov	r2, r0
 8021144:	801a      	strh	r2, [r3, #0]
 8021146:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802114a:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802114e:	4613      	mov	r3, r2
 8021150:	009b      	lsls	r3, r3, #2
 8021152:	4413      	add	r3, r2
 8021154:	440b      	add	r3, r1
 8021156:	3379      	adds	r3, #121	; 0x79
 8021158:	2201      	movs	r2, #1
 802115a:	701a      	strb	r2, [r3, #0]
 802115c:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021160:	3304      	adds	r3, #4
 8021162:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 8021166:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 802116a:	3b04      	subs	r3, #4
 802116c:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8021170:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 8021174:	b29b      	uxth	r3, r3
 8021176:	3301      	adds	r3, #1
 8021178:	b29b      	uxth	r3, r3
 802117a:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 802117e:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8021182:	2b00      	cmp	r3, #0
 8021184:	f47f af74 	bne.w	8021070 <six2six_notifyReceive+0x1464>
 8021188:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802118c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 802118e:	4798      	blx	r3
 8021190:	4603      	mov	r3, r0
 8021192:	b2d8      	uxtb	r0, r3
 8021194:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021198:	f103 0179 	add.w	r1, r3, #121	; 0x79
 802119c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80211a0:	f103 0241 	add.w	r2, r3, #65	; 0x41
 80211a4:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80211a8:	7f5b      	ldrb	r3, [r3, #29]
 80211aa:	f000 fb2d 	bl	8021808 <removeCells>
 80211ae:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80211b2:	3342      	adds	r3, #66	; 0x42
 80211b4:	4618      	mov	r0, r3
 80211b6:	f7ec fdcf 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 80211ba:	e242      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 80211bc:	4aac      	ldr	r2, [pc, #688]	; (8021470 <six2six_notifyReceive+0x1864>)
 80211be:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80211c2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80211c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80211ca:	4aaa      	ldr	r2, [pc, #680]	; (8021474 <six2six_notifyReceive+0x1868>)
 80211cc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80211d0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80211d4:	f7f4 f818 	bl	8015208 <LOGGER_PrintLine>
 80211d8:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80211dc:	3341      	adds	r3, #65	; 0x41
 80211de:	4618      	mov	r0, r3
 80211e0:	f7ee fe62 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 80211e4:	2300      	movs	r3, #0
 80211e6:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80211ea:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80211ee:	3360      	adds	r3, #96	; 0x60
 80211f0:	2219      	movs	r2, #25
 80211f2:	2100      	movs	r1, #0
 80211f4:	4618      	mov	r0, r3
 80211f6:	f009 ff7f 	bl	802b0f8 <memset>
 80211fa:	e08c      	b.n	8021316 <six2six_notifyReceive+0x170a>
 80211fc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021200:	685a      	ldr	r2, [r3, #4]
 8021202:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021206:	4413      	add	r3, r2
 8021208:	781b      	ldrb	r3, [r3, #0]
 802120a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802120e:	4618      	mov	r0, r3
 8021210:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8021214:	4613      	mov	r3, r2
 8021216:	009b      	lsls	r3, r3, #2
 8021218:	4413      	add	r3, r2
 802121a:	440b      	add	r3, r1
 802121c:	3360      	adds	r3, #96	; 0x60
 802121e:	4602      	mov	r2, r0
 8021220:	f8a3 2001 	strh.w	r2, [r3, #1]
 8021224:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021228:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802122c:	4613      	mov	r3, r2
 802122e:	009b      	lsls	r3, r3, #2
 8021230:	4413      	add	r3, r2
 8021232:	440b      	add	r3, r1
 8021234:	3360      	adds	r3, #96	; 0x60
 8021236:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 802123a:	b299      	uxth	r1, r3
 802123c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021240:	685a      	ldr	r2, [r3, #4]
 8021242:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021246:	3301      	adds	r3, #1
 8021248:	4413      	add	r3, r2
 802124a:	781b      	ldrb	r3, [r3, #0]
 802124c:	021b      	lsls	r3, r3, #8
 802124e:	b29b      	uxth	r3, r3
 8021250:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021254:	430b      	orrs	r3, r1
 8021256:	b298      	uxth	r0, r3
 8021258:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802125c:	4613      	mov	r3, r2
 802125e:	009b      	lsls	r3, r3, #2
 8021260:	4413      	add	r3, r2
 8021262:	440b      	add	r3, r1
 8021264:	3360      	adds	r3, #96	; 0x60
 8021266:	4602      	mov	r2, r0
 8021268:	f8a3 2001 	strh.w	r2, [r3, #1]
 802126c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021270:	685a      	ldr	r2, [r3, #4]
 8021272:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021276:	3302      	adds	r3, #2
 8021278:	4413      	add	r3, r2
 802127a:	781b      	ldrb	r3, [r3, #0]
 802127c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021280:	4618      	mov	r0, r3
 8021282:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 8021286:	4613      	mov	r3, r2
 8021288:	009b      	lsls	r3, r3, #2
 802128a:	4413      	add	r3, r2
 802128c:	440b      	add	r3, r1
 802128e:	3360      	adds	r3, #96	; 0x60
 8021290:	4602      	mov	r2, r0
 8021292:	f8a3 2003 	strh.w	r2, [r3, #3]
 8021296:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802129a:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 802129e:	4613      	mov	r3, r2
 80212a0:	009b      	lsls	r3, r3, #2
 80212a2:	4413      	add	r3, r2
 80212a4:	440b      	add	r3, r1
 80212a6:	3360      	adds	r3, #96	; 0x60
 80212a8:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80212ac:	b299      	uxth	r1, r3
 80212ae:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80212b2:	685a      	ldr	r2, [r3, #4]
 80212b4:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80212b8:	3303      	adds	r3, #3
 80212ba:	4413      	add	r3, r2
 80212bc:	781b      	ldrb	r3, [r3, #0]
 80212be:	021b      	lsls	r3, r3, #8
 80212c0:	b29b      	uxth	r3, r3
 80212c2:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80212c6:	430b      	orrs	r3, r1
 80212c8:	b298      	uxth	r0, r3
 80212ca:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 80212ce:	4613      	mov	r3, r2
 80212d0:	009b      	lsls	r3, r3, #2
 80212d2:	4413      	add	r3, r2
 80212d4:	440b      	add	r3, r1
 80212d6:	3360      	adds	r3, #96	; 0x60
 80212d8:	4602      	mov	r2, r0
 80212da:	f8a3 2003 	strh.w	r2, [r3, #3]
 80212de:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80212e2:	f8d7 1148 	ldr.w	r1, [r7, #328]	; 0x148
 80212e6:	4613      	mov	r3, r2
 80212e8:	009b      	lsls	r3, r3, #2
 80212ea:	4413      	add	r3, r2
 80212ec:	440b      	add	r3, r1
 80212ee:	3360      	adds	r3, #96	; 0x60
 80212f0:	2201      	movs	r2, #1
 80212f2:	701a      	strb	r2, [r3, #0]
 80212f4:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80212f8:	3304      	adds	r3, #4
 80212fa:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 80212fe:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8021302:	3b04      	subs	r3, #4
 8021304:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8021308:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802130c:	b29b      	uxth	r3, r3
 802130e:	3301      	adds	r3, #1
 8021310:	b29b      	uxth	r3, r3
 8021312:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8021316:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 802131a:	2b00      	cmp	r3, #0
 802131c:	f47f af6e 	bne.w	80211fc <six2six_notifyReceive+0x15f0>
 8021320:	4a55      	ldr	r2, [pc, #340]	; (8021478 <six2six_notifyReceive+0x186c>)
 8021322:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8021326:	e892 0003 	ldmia.w	r2, {r0, r1}
 802132a:	e883 0003 	stmia.w	r3, {r0, r1}
 802132e:	4a53      	ldr	r2, [pc, #332]	; (802147c <six2six_notifyReceive+0x1870>)
 8021330:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8021334:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021338:	f7f3 ff66 	bl	8015208 <LOGGER_PrintLine>
 802133c:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8021340:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021342:	4798      	blx	r3
 8021344:	4603      	mov	r3, r0
 8021346:	b2d8      	uxtb	r0, r3
 8021348:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802134c:	f103 011e 	add.w	r1, r3, #30
 8021350:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021354:	f103 0241 	add.w	r2, r3, #65	; 0x41
 8021358:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802135c:	7f5b      	ldrb	r3, [r3, #29]
 802135e:	f000 fa53 	bl	8021808 <removeCells>
 8021362:	4a45      	ldr	r2, [pc, #276]	; (8021478 <six2six_notifyReceive+0x186c>)
 8021364:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8021368:	e892 0003 	ldmia.w	r2, {r0, r1}
 802136c:	e883 0003 	stmia.w	r3, {r0, r1}
 8021370:	4a43      	ldr	r2, [pc, #268]	; (8021480 <six2six_notifyReceive+0x1874>)
 8021372:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8021376:	e893 0003 	ldmia.w	r3, {r0, r1}
 802137a:	f7f3 ff45 	bl	8015208 <LOGGER_PrintLine>
 802137e:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8021382:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021384:	4798      	blx	r3
 8021386:	4603      	mov	r3, r0
 8021388:	b2d8      	uxtb	r0, r3
 802138a:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 802138e:	f103 0160 	add.w	r1, r3, #96	; 0x60
 8021392:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021396:	f103 0241 	add.w	r2, r3, #65	; 0x41
 802139a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802139e:	7f5b      	ldrb	r3, [r3, #29]
 80213a0:	f000 f9aa 	bl	80216f8 <addCells>
 80213a4:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80213a8:	3342      	adds	r3, #66	; 0x42
 80213aa:	4618      	mov	r0, r3
 80213ac:	f7ec fcd4 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 80213b0:	e147      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 80213b2:	f507 7394 	add.w	r3, r7, #296	; 0x128
 80213b6:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 80213ba:	4a2d      	ldr	r2, [pc, #180]	; (8021470 <six2six_notifyReceive+0x1864>)
 80213bc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80213c0:	e883 0003 	stmia.w	r3, {r0, r1}
 80213c4:	f507 7394 	add.w	r3, r7, #296	; 0x128
 80213c8:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 80213cc:	4a2d      	ldr	r2, [pc, #180]	; (8021484 <six2six_notifyReceive+0x1878>)
 80213ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 80213d2:	f7f3 ff19 	bl	8015208 <LOGGER_PrintLine>
 80213d6:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80213da:	3341      	adds	r3, #65	; 0x41
 80213dc:	4618      	mov	r0, r3
 80213de:	f7ee fd63 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 80213e2:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80213e6:	685a      	ldr	r2, [r3, #4]
 80213e8:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80213ec:	4413      	add	r3, r2
 80213ee:	781b      	ldrb	r3, [r3, #0]
 80213f0:	f8a7 311c 	strh.w	r3, [r7, #284]	; 0x11c
 80213f4:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80213f8:	685a      	ldr	r2, [r3, #4]
 80213fa:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80213fe:	3301      	adds	r3, #1
 8021400:	4413      	add	r3, r2
 8021402:	781b      	ldrb	r3, [r3, #0]
 8021404:	021b      	lsls	r3, r3, #8
 8021406:	b29a      	uxth	r2, r3
 8021408:	f8b7 311c 	ldrh.w	r3, [r7, #284]	; 0x11c
 802140c:	4313      	orrs	r3, r2
 802140e:	f8a7 311c 	strh.w	r3, [r7, #284]	; 0x11c
 8021412:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021416:	3302      	adds	r3, #2
 8021418:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 802141c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021420:	3342      	adds	r3, #66	; 0x42
 8021422:	4618      	mov	r0, r3
 8021424:	f7ec fc98 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 8021428:	e10b      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 802142a:	f507 7394 	add.w	r3, r7, #296	; 0x128
 802142e:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8021432:	4a0f      	ldr	r2, [pc, #60]	; (8021470 <six2six_notifyReceive+0x1864>)
 8021434:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021438:	e883 0003 	stmia.w	r3, {r0, r1}
 802143c:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8021440:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8021444:	4a10      	ldr	r2, [pc, #64]	; (8021488 <six2six_notifyReceive+0x187c>)
 8021446:	e893 0003 	ldmia.w	r3, {r0, r1}
 802144a:	f7f3 fedd 	bl	8015208 <LOGGER_PrintLine>
 802144e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021452:	3341      	adds	r3, #65	; 0x41
 8021454:	4618      	mov	r0, r3
 8021456:	f7ee fd27 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 802145a:	2300      	movs	r3, #0
 802145c:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 8021460:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8021464:	2219      	movs	r2, #25
 8021466:	2100      	movs	r1, #0
 8021468:	4618      	mov	r0, r3
 802146a:	f009 fe45 	bl	802b0f8 <memset>
 802146e:	e09a      	b.n	80215a6 <six2six_notifyReceive+0x199a>
 8021470:	0803043c 	.word	0x0803043c
 8021474:	08030850 	.word	0x08030850
 8021478:	08030444 	.word	0x08030444
 802147c:	080305e0 	.word	0x080305e0
 8021480:	080305f0 	.word	0x080305f0
 8021484:	0803089c 	.word	0x0803089c
 8021488:	080308e4 	.word	0x080308e4
 802148c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021490:	685a      	ldr	r2, [r3, #4]
 8021492:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021496:	4413      	add	r3, r2
 8021498:	781b      	ldrb	r3, [r3, #0]
 802149a:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802149e:	4619      	mov	r1, r3
 80214a0:	4613      	mov	r3, r2
 80214a2:	009b      	lsls	r3, r3, #2
 80214a4:	4413      	add	r3, r2
 80214a6:	f503 7394 	add.w	r3, r3, #296	; 0x128
 80214aa:	443b      	add	r3, r7
 80214ac:	3b40      	subs	r3, #64	; 0x40
 80214ae:	460a      	mov	r2, r1
 80214b0:	f8a3 2001 	strh.w	r2, [r3, #1]
 80214b4:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80214b8:	4613      	mov	r3, r2
 80214ba:	009b      	lsls	r3, r3, #2
 80214bc:	4413      	add	r3, r2
 80214be:	f503 7394 	add.w	r3, r3, #296	; 0x128
 80214c2:	443b      	add	r3, r7
 80214c4:	3b40      	subs	r3, #64	; 0x40
 80214c6:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80214ca:	b299      	uxth	r1, r3
 80214cc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80214d0:	685a      	ldr	r2, [r3, #4]
 80214d2:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 80214d6:	3301      	adds	r3, #1
 80214d8:	4413      	add	r3, r2
 80214da:	781b      	ldrb	r3, [r3, #0]
 80214dc:	021b      	lsls	r3, r3, #8
 80214de:	b29b      	uxth	r3, r3
 80214e0:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 80214e4:	430b      	orrs	r3, r1
 80214e6:	b299      	uxth	r1, r3
 80214e8:	4613      	mov	r3, r2
 80214ea:	009b      	lsls	r3, r3, #2
 80214ec:	4413      	add	r3, r2
 80214ee:	f503 7394 	add.w	r3, r3, #296	; 0x128
 80214f2:	443b      	add	r3, r7
 80214f4:	3b40      	subs	r3, #64	; 0x40
 80214f6:	460a      	mov	r2, r1
 80214f8:	f8a3 2001 	strh.w	r2, [r3, #1]
 80214fc:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021500:	685a      	ldr	r2, [r3, #4]
 8021502:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021506:	3302      	adds	r3, #2
 8021508:	4413      	add	r3, r2
 802150a:	781b      	ldrb	r3, [r3, #0]
 802150c:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021510:	4619      	mov	r1, r3
 8021512:	4613      	mov	r3, r2
 8021514:	009b      	lsls	r3, r3, #2
 8021516:	4413      	add	r3, r2
 8021518:	f503 7394 	add.w	r3, r3, #296	; 0x128
 802151c:	443b      	add	r3, r7
 802151e:	3b40      	subs	r3, #64	; 0x40
 8021520:	460a      	mov	r2, r1
 8021522:	f8a3 2003 	strh.w	r2, [r3, #3]
 8021526:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 802152a:	4613      	mov	r3, r2
 802152c:	009b      	lsls	r3, r3, #2
 802152e:	4413      	add	r3, r2
 8021530:	f503 7394 	add.w	r3, r3, #296	; 0x128
 8021534:	443b      	add	r3, r7
 8021536:	3b40      	subs	r3, #64	; 0x40
 8021538:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 802153c:	b299      	uxth	r1, r3
 802153e:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021542:	685a      	ldr	r2, [r3, #4]
 8021544:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021548:	3303      	adds	r3, #3
 802154a:	4413      	add	r3, r2
 802154c:	781b      	ldrb	r3, [r3, #0]
 802154e:	021b      	lsls	r3, r3, #8
 8021550:	b29b      	uxth	r3, r3
 8021552:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021556:	430b      	orrs	r3, r1
 8021558:	b299      	uxth	r1, r3
 802155a:	4613      	mov	r3, r2
 802155c:	009b      	lsls	r3, r3, #2
 802155e:	4413      	add	r3, r2
 8021560:	f503 7394 	add.w	r3, r3, #296	; 0x128
 8021564:	443b      	add	r3, r7
 8021566:	3b40      	subs	r3, #64	; 0x40
 8021568:	460a      	mov	r2, r1
 802156a:	f8a3 2003 	strh.w	r2, [r3, #3]
 802156e:	f9b7 211e 	ldrsh.w	r2, [r7, #286]	; 0x11e
 8021572:	4613      	mov	r3, r2
 8021574:	009b      	lsls	r3, r3, #2
 8021576:	4413      	add	r3, r2
 8021578:	f503 7394 	add.w	r3, r3, #296	; 0x128
 802157c:	443b      	add	r3, r7
 802157e:	3b40      	subs	r3, #64	; 0x40
 8021580:	2201      	movs	r2, #1
 8021582:	701a      	strb	r2, [r3, #0]
 8021584:	f897 3140 	ldrb.w	r3, [r7, #320]	; 0x140
 8021588:	3304      	adds	r3, #4
 802158a:	f887 3140 	strb.w	r3, [r7, #320]	; 0x140
 802158e:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8021592:	3b04      	subs	r3, #4
 8021594:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8021598:	f9b7 311e 	ldrsh.w	r3, [r7, #286]	; 0x11e
 802159c:	b29b      	uxth	r3, r3
 802159e:	3301      	adds	r3, #1
 80215a0:	b29b      	uxth	r3, r3
 80215a2:	f8a7 311e 	strh.w	r3, [r7, #286]	; 0x11e
 80215a6:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 80215aa:	2b00      	cmp	r3, #0
 80215ac:	f47f af6e 	bne.w	802148c <six2six_notifyReceive+0x1880>
 80215b0:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80215b4:	3342      	adds	r3, #66	; 0x42
 80215b6:	4618      	mov	r0, r3
 80215b8:	f7ec fbce 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 80215bc:	e041      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 80215be:	f507 7394 	add.w	r3, r7, #296	; 0x128
 80215c2:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 80215c6:	4a46      	ldr	r2, [pc, #280]	; (80216e0 <six2six_notifyReceive+0x1ad4>)
 80215c8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80215cc:	e883 0003 	stmia.w	r3, {r0, r1}
 80215d0:	f507 7394 	add.w	r3, r7, #296	; 0x128
 80215d4:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 80215d8:	4a42      	ldr	r2, [pc, #264]	; (80216e4 <six2six_notifyReceive+0x1ad8>)
 80215da:	e893 0003 	ldmia.w	r3, {r0, r1}
 80215de:	f7f3 fe13 	bl	8015208 <LOGGER_PrintLine>
 80215e2:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80215e6:	3341      	adds	r3, #65	; 0x41
 80215e8:	4618      	mov	r0, r3
 80215ea:	f7ee fc5d 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 80215ee:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80215f2:	3341      	adds	r3, #65	; 0x41
 80215f4:	4618      	mov	r0, r3
 80215f6:	f7fb ff01 	bl	801d3fc <b3b14ea0535ea7766b14c305344e9dd58438abce>
 80215fa:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 80215fe:	3342      	adds	r3, #66	; 0x42
 8021600:	4618      	mov	r0, r3
 8021602:	f7ec fc05 	bl	800de10 <cbc0e88a681a951e559d988b61bbaa7895224382>
 8021606:	e01c      	b.n	8021642 <six2six_notifyReceive+0x1a36>
 8021608:	f507 7394 	add.w	r3, r7, #296	; 0x128
 802160c:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 8021610:	4a33      	ldr	r2, [pc, #204]	; (80216e0 <six2six_notifyReceive+0x1ad4>)
 8021612:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021616:	e883 0003 	stmia.w	r3, {r0, r1}
 802161a:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802161e:	7adb      	ldrb	r3, [r3, #11]
 8021620:	461a      	mov	r2, r3
 8021622:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8021626:	f5a3 718c 	sub.w	r1, r3, #280	; 0x118
 802162a:	4613      	mov	r3, r2
 802162c:	4a2e      	ldr	r2, [pc, #184]	; (80216e8 <six2six_notifyReceive+0x1adc>)
 802162e:	c903      	ldmia	r1, {r0, r1}
 8021630:	f7f3 fdea 	bl	8015208 <LOGGER_PrintLine>
 8021634:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021638:	3341      	adds	r3, #65	; 0x41
 802163a:	4618      	mov	r0, r3
 802163c:	f7ee fc34 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 8021640:	bf00      	nop
 8021642:	e029      	b.n	8021698 <six2six_notifyReceive+0x1a8c>
 8021644:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8021648:	7adb      	ldrb	r3, [r3, #11]
 802164a:	2b00      	cmp	r3, #0
 802164c:	d024      	beq.n	8021698 <six2six_notifyReceive+0x1a8c>
 802164e:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8021652:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 8021656:	4a25      	ldr	r2, [pc, #148]	; (80216ec <six2six_notifyReceive+0x1ae0>)
 8021658:	e892 0003 	ldmia.w	r2, {r0, r1}
 802165c:	e883 0003 	stmia.w	r3, {r0, r1}
 8021660:	f507 7394 	add.w	r3, r7, #296	; 0x128
 8021664:	f2a3 1323 	subw	r3, r3, #291	; 0x123
 8021668:	781b      	ldrb	r3, [r3, #0]
 802166a:	4a21      	ldr	r2, [pc, #132]	; (80216f0 <six2six_notifyReceive+0x1ae4>)
 802166c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8021670:	f507 7294 	add.w	r2, r7, #296	; 0x128
 8021674:	f5a2 7190 	sub.w	r1, r2, #288	; 0x120
 8021678:	4a1e      	ldr	r2, [pc, #120]	; (80216f4 <six2six_notifyReceive+0x1ae8>)
 802167a:	c903      	ldmia	r1, {r0, r1}
 802167c:	f7f3 fdc4 	bl	8015208 <LOGGER_PrintLine>
 8021680:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021684:	3341      	adds	r3, #65	; 0x41
 8021686:	4618      	mov	r0, r3
 8021688:	f7ee fc0e 	bl	800fea8 <9384e57fa8b386170558ee17f590b88f318c4273>
 802168c:	f8d7 3148 	ldr.w	r3, [r7, #328]	; 0x148
 8021690:	3342      	adds	r3, #66	; 0x42
 8021692:	4618      	mov	r0, r3
 8021694:	f7ec fb60 	bl	800dd58 <cf0ffb3730b01ad23c777b55262f1b704e362e5b>
 8021698:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 802169c:	2200      	movs	r2, #0
 802169e:	72da      	strb	r2, [r3, #11]
 80216a0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80216a4:	795b      	ldrb	r3, [r3, #5]
 80216a6:	4618      	mov	r0, r3
 80216a8:	f7f0 fa0c 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 80216ac:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80216b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80216b2:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 80216b6:	6c90      	ldr	r0, [r2, #72]	; 0x48
 80216b8:	f8d7 2148 	ldr.w	r2, [r7, #328]	; 0x148
 80216bc:	f102 0441 	add.w	r4, r2, #65	; 0x41
 80216c0:	f507 7294 	add.w	r2, r7, #296	; 0x128
 80216c4:	f2a2 1223 	subw	r2, r2, #291	; 0x123
 80216c8:	7811      	ldrb	r1, [r2, #0]
 80216ca:	4622      	mov	r2, r4
 80216cc:	4798      	blx	r3
 80216ce:	e002      	b.n	80216d6 <six2six_notifyReceive+0x1aca>
 80216d0:	bf00      	nop
 80216d2:	e000      	b.n	80216d6 <six2six_notifyReceive+0x1aca>
 80216d4:	bf00      	nop
 80216d6:	f507 7794 	add.w	r7, r7, #296	; 0x128
 80216da:	46bd      	mov	sp, r7
 80216dc:	bdb0      	pop	{r4, r5, r7, pc}
 80216de:	bf00      	nop
 80216e0:	0803043c 	.word	0x0803043c
 80216e4:	0803092c 	.word	0x0803092c
 80216e8:	08030974 	.word	0x08030974
 80216ec:	080304a8 	.word	0x080304a8
 80216f0:	20000298 	.word	0x20000298
 80216f4:	08030998 	.word	0x08030998

080216f8 <addCells>:
 80216f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80216fa:	b08f      	sub	sp, #60	; 0x3c
 80216fc:	af04      	add	r7, sp, #16
 80216fe:	60b9      	str	r1, [r7, #8]
 8021700:	607a      	str	r2, [r7, #4]
 8021702:	461a      	mov	r2, r3
 8021704:	4603      	mov	r3, r0
 8021706:	73fb      	strb	r3, [r7, #15]
 8021708:	4613      	mov	r3, r2
 802170a:	73bb      	strb	r3, [r7, #14]
 802170c:	2300      	movs	r3, #0
 802170e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8021712:	2300      	movs	r3, #0
 8021714:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8021718:	7bbb      	ldrb	r3, [r7, #14]
 802171a:	2b07      	cmp	r3, #7
 802171c:	d00e      	beq.n	802173c <addCells+0x44>
 802171e:	2b07      	cmp	r3, #7
 8021720:	dc13      	bgt.n	802174a <addCells+0x52>
 8021722:	2b01      	cmp	r3, #1
 8021724:	d002      	beq.n	802172c <addCells+0x34>
 8021726:	2b02      	cmp	r3, #2
 8021728:	d004      	beq.n	8021734 <addCells+0x3c>
 802172a:	e00e      	b.n	802174a <addCells+0x52>
 802172c:	2301      	movs	r3, #1
 802172e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8021732:	e01a      	b.n	802176a <addCells+0x72>
 8021734:	2302      	movs	r3, #2
 8021736:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802173a:	e016      	b.n	802176a <addCells+0x72>
 802173c:	2303      	movs	r3, #3
 802173e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8021742:	2301      	movs	r3, #1
 8021744:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8021748:	e00f      	b.n	802176a <addCells+0x72>
 802174a:	4a2d      	ldr	r2, [pc, #180]	; (8021800 <addCells+0x108>)
 802174c:	f107 0310 	add.w	r3, r7, #16
 8021750:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021754:	e883 0003 	stmia.w	r3, {r0, r1}
 8021758:	4a2a      	ldr	r2, [pc, #168]	; (8021804 <addCells+0x10c>)
 802175a:	f107 0310 	add.w	r3, r7, #16
 802175e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021762:	f7f3 fd51 	bl	8015208 <LOGGER_PrintLine>
 8021766:	2300      	movs	r3, #0
 8021768:	e046      	b.n	80217f8 <addCells+0x100>
 802176a:	2300      	movs	r3, #0
 802176c:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8021770:	2300      	movs	r3, #0
 8021772:	623b      	str	r3, [r7, #32]
 8021774:	e03b      	b.n	80217ee <addCells+0xf6>
 8021776:	6a3a      	ldr	r2, [r7, #32]
 8021778:	4613      	mov	r3, r2
 802177a:	009b      	lsls	r3, r3, #2
 802177c:	4413      	add	r3, r2
 802177e:	68ba      	ldr	r2, [r7, #8]
 8021780:	4413      	add	r3, r2
 8021782:	781b      	ldrb	r3, [r3, #0]
 8021784:	2b00      	cmp	r3, #0
 8021786:	d02f      	beq.n	80217e8 <addCells+0xf0>
 8021788:	2301      	movs	r3, #1
 802178a:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 802178e:	6a3a      	ldr	r2, [r7, #32]
 8021790:	4613      	mov	r3, r2
 8021792:	009b      	lsls	r3, r3, #2
 8021794:	4413      	add	r3, r2
 8021796:	68ba      	ldr	r2, [r7, #8]
 8021798:	4413      	add	r3, r2
 802179a:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 802179e:	b29d      	uxth	r5, r3
 80217a0:	6a3a      	ldr	r2, [r7, #32]
 80217a2:	4613      	mov	r3, r2
 80217a4:	009b      	lsls	r3, r3, #2
 80217a6:	4413      	add	r3, r2
 80217a8:	68ba      	ldr	r2, [r7, #8]
 80217aa:	4413      	add	r3, r2
 80217ac:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80217b0:	b29b      	uxth	r3, r3
 80217b2:	b2dc      	uxtb	r4, r3
 80217b4:	f107 0318 	add.w	r3, r7, #24
 80217b8:	4618      	mov	r0, r3
 80217ba:	f7f8 f8fd 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 80217be:	f897 c027 	ldrb.w	ip, [r7, #39]	; 0x27
 80217c2:	f897 6026 	ldrb.w	r6, [r7, #38]	; 0x26
 80217c6:	ab02      	add	r3, sp, #8
 80217c8:	f107 0218 	add.w	r2, r7, #24
 80217cc:	e892 0003 	ldmia.w	r2, {r0, r1}
 80217d0:	6018      	str	r0, [r3, #0]
 80217d2:	3304      	adds	r3, #4
 80217d4:	7019      	strb	r1, [r3, #0]
 80217d6:	687b      	ldr	r3, [r7, #4]
 80217d8:	9301      	str	r3, [sp, #4]
 80217da:	9400      	str	r4, [sp, #0]
 80217dc:	4663      	mov	r3, ip
 80217de:	2205      	movs	r2, #5
 80217e0:	4631      	mov	r1, r6
 80217e2:	4628      	mov	r0, r5
 80217e4:	f7fb f90c 	bl	801ca00 <d34d9cc57da987921722d6f0e44d498b73ec396e>
 80217e8:	6a3b      	ldr	r3, [r7, #32]
 80217ea:	3301      	adds	r3, #1
 80217ec:	623b      	str	r3, [r7, #32]
 80217ee:	6a3b      	ldr	r3, [r7, #32]
 80217f0:	2b04      	cmp	r3, #4
 80217f2:	d9c0      	bls.n	8021776 <addCells+0x7e>
 80217f4:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80217f8:	4618      	mov	r0, r3
 80217fa:	372c      	adds	r7, #44	; 0x2c
 80217fc:	46bd      	mov	sp, r7
 80217fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021800:	0803043c 	.word	0x0803043c
 8021804:	080309ac 	.word	0x080309ac

08021808 <removeCells>:
 8021808:	b580      	push	{r7, lr}
 802180a:	b086      	sub	sp, #24
 802180c:	af00      	add	r7, sp, #0
 802180e:	60b9      	str	r1, [r7, #8]
 8021810:	607a      	str	r2, [r7, #4]
 8021812:	461a      	mov	r2, r3
 8021814:	4603      	mov	r3, r0
 8021816:	73fb      	strb	r3, [r7, #15]
 8021818:	4613      	mov	r3, r2
 802181a:	73bb      	strb	r3, [r7, #14]
 802181c:	2300      	movs	r3, #0
 802181e:	75bb      	strb	r3, [r7, #22]
 8021820:	2300      	movs	r3, #0
 8021822:	75fb      	strb	r3, [r7, #23]
 8021824:	e01a      	b.n	802185c <removeCells+0x54>
 8021826:	7dfa      	ldrb	r2, [r7, #23]
 8021828:	4613      	mov	r3, r2
 802182a:	009b      	lsls	r3, r3, #2
 802182c:	4413      	add	r3, r2
 802182e:	68ba      	ldr	r2, [r7, #8]
 8021830:	4413      	add	r3, r2
 8021832:	781b      	ldrb	r3, [r3, #0]
 8021834:	2b00      	cmp	r3, #0
 8021836:	d00e      	beq.n	8021856 <removeCells+0x4e>
 8021838:	2301      	movs	r3, #1
 802183a:	75bb      	strb	r3, [r7, #22]
 802183c:	7dfa      	ldrb	r2, [r7, #23]
 802183e:	4613      	mov	r3, r2
 8021840:	009b      	lsls	r3, r3, #2
 8021842:	4413      	add	r3, r2
 8021844:	68ba      	ldr	r2, [r7, #8]
 8021846:	4413      	add	r3, r2
 8021848:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 802184c:	b29b      	uxth	r3, r3
 802184e:	6879      	ldr	r1, [r7, #4]
 8021850:	4618      	mov	r0, r3
 8021852:	f7fb fac7 	bl	801cde4 <77238aa43a8b504c643ddf656419f5fe633c06fa>
 8021856:	7dfb      	ldrb	r3, [r7, #23]
 8021858:	3301      	adds	r3, #1
 802185a:	75fb      	strb	r3, [r7, #23]
 802185c:	7dfb      	ldrb	r3, [r7, #23]
 802185e:	2b04      	cmp	r3, #4
 8021860:	d9e1      	bls.n	8021826 <removeCells+0x1e>
 8021862:	7dbb      	ldrb	r3, [r7, #22]
 8021864:	4618      	mov	r0, r3
 8021866:	3718      	adds	r7, #24
 8021868:	46bd      	mov	sp, r7
 802186a:	bd80      	pop	{r7, pc}

0802186c <areAvailableCellsToBeScheduled>:
 802186c:	b580      	push	{r7, lr}
 802186e:	b084      	sub	sp, #16
 8021870:	af00      	add	r7, sp, #0
 8021872:	4603      	mov	r3, r0
 8021874:	603a      	str	r2, [r7, #0]
 8021876:	71fb      	strb	r3, [r7, #7]
 8021878:	460b      	mov	r3, r1
 802187a:	71bb      	strb	r3, [r7, #6]
 802187c:	2300      	movs	r3, #0
 802187e:	73fb      	strb	r3, [r7, #15]
 8021880:	79bb      	ldrb	r3, [r7, #6]
 8021882:	2b00      	cmp	r3, #0
 8021884:	d002      	beq.n	802188c <areAvailableCellsToBeScheduled+0x20>
 8021886:	79bb      	ldrb	r3, [r7, #6]
 8021888:	2b05      	cmp	r3, #5
 802188a:	d901      	bls.n	8021890 <areAvailableCellsToBeScheduled+0x24>
 802188c:	2300      	movs	r3, #0
 802188e:	e03e      	b.n	802190e <areAvailableCellsToBeScheduled+0xa2>
 8021890:	2300      	movs	r3, #0
 8021892:	73bb      	strb	r3, [r7, #14]
 8021894:	e032      	b.n	80218fc <areAvailableCellsToBeScheduled+0x90>
 8021896:	7bba      	ldrb	r2, [r7, #14]
 8021898:	4613      	mov	r3, r2
 802189a:	009b      	lsls	r3, r3, #2
 802189c:	4413      	add	r3, r2
 802189e:	683a      	ldr	r2, [r7, #0]
 80218a0:	4413      	add	r3, r2
 80218a2:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80218a6:	b29b      	uxth	r3, r3
 80218a8:	4618      	mov	r0, r3
 80218aa:	f7fb fc7d 	bl	801d1a8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34>
 80218ae:	4603      	mov	r3, r0
 80218b0:	2b00      	cmp	r3, #0
 80218b2:	d018      	beq.n	80218e6 <areAvailableCellsToBeScheduled+0x7a>
 80218b4:	7bfa      	ldrb	r2, [r7, #15]
 80218b6:	79bb      	ldrb	r3, [r7, #6]
 80218b8:	429a      	cmp	r2, r3
 80218ba:	d20b      	bcs.n	80218d4 <areAvailableCellsToBeScheduled+0x68>
 80218bc:	7bba      	ldrb	r2, [r7, #14]
 80218be:	4613      	mov	r3, r2
 80218c0:	009b      	lsls	r3, r3, #2
 80218c2:	4413      	add	r3, r2
 80218c4:	683a      	ldr	r2, [r7, #0]
 80218c6:	4413      	add	r3, r2
 80218c8:	2201      	movs	r2, #1
 80218ca:	701a      	strb	r2, [r3, #0]
 80218cc:	7bfb      	ldrb	r3, [r7, #15]
 80218ce:	3301      	adds	r3, #1
 80218d0:	73fb      	strb	r3, [r7, #15]
 80218d2:	e010      	b.n	80218f6 <areAvailableCellsToBeScheduled+0x8a>
 80218d4:	7bba      	ldrb	r2, [r7, #14]
 80218d6:	4613      	mov	r3, r2
 80218d8:	009b      	lsls	r3, r3, #2
 80218da:	4413      	add	r3, r2
 80218dc:	683a      	ldr	r2, [r7, #0]
 80218de:	4413      	add	r3, r2
 80218e0:	2200      	movs	r2, #0
 80218e2:	701a      	strb	r2, [r3, #0]
 80218e4:	e007      	b.n	80218f6 <areAvailableCellsToBeScheduled+0x8a>
 80218e6:	7bba      	ldrb	r2, [r7, #14]
 80218e8:	4613      	mov	r3, r2
 80218ea:	009b      	lsls	r3, r3, #2
 80218ec:	4413      	add	r3, r2
 80218ee:	683a      	ldr	r2, [r7, #0]
 80218f0:	4413      	add	r3, r2
 80218f2:	2200      	movs	r2, #0
 80218f4:	701a      	strb	r2, [r3, #0]
 80218f6:	7bbb      	ldrb	r3, [r7, #14]
 80218f8:	3301      	adds	r3, #1
 80218fa:	73bb      	strb	r3, [r7, #14]
 80218fc:	7bbb      	ldrb	r3, [r7, #14]
 80218fe:	2b04      	cmp	r3, #4
 8021900:	d9c9      	bls.n	8021896 <areAvailableCellsToBeScheduled+0x2a>
 8021902:	7bfb      	ldrb	r3, [r7, #15]
 8021904:	2b00      	cmp	r3, #0
 8021906:	bf14      	ite	ne
 8021908:	2301      	movne	r3, #1
 802190a:	2300      	moveq	r3, #0
 802190c:	b2db      	uxtb	r3, r3
 802190e:	4618      	mov	r0, r3
 8021910:	3710      	adds	r7, #16
 8021912:	46bd      	mov	sp, r7
 8021914:	bd80      	pop	{r7, pc}

08021916 <cellsToBeRelocated>:
 8021916:	b580      	push	{r7, lr}
 8021918:	b086      	sub	sp, #24
 802191a:	af00      	add	r7, sp, #0
 802191c:	60ba      	str	r2, [r7, #8]
 802191e:	607b      	str	r3, [r7, #4]
 8021920:	4603      	mov	r3, r0
 8021922:	73fb      	strb	r3, [r7, #15]
 8021924:	460b      	mov	r3, r1
 8021926:	73bb      	strb	r3, [r7, #14]
 8021928:	2300      	movs	r3, #0
 802192a:	75fb      	strb	r3, [r7, #23]
 802192c:	7bbb      	ldrb	r3, [r7, #14]
 802192e:	2b00      	cmp	r3, #0
 8021930:	d002      	beq.n	8021938 <cellsToBeRelocated+0x22>
 8021932:	7bbb      	ldrb	r3, [r7, #14]
 8021934:	2b05      	cmp	r3, #5
 8021936:	d901      	bls.n	802193c <cellsToBeRelocated+0x26>
 8021938:	2300      	movs	r3, #0
 802193a:	e085      	b.n	8021a48 <cellsToBeRelocated+0x132>
 802193c:	2300      	movs	r3, #0
 802193e:	75bb      	strb	r3, [r7, #22]
 8021940:	e077      	b.n	8021a32 <cellsToBeRelocated+0x11c>
 8021942:	7dba      	ldrb	r2, [r7, #22]
 8021944:	4613      	mov	r3, r2
 8021946:	009b      	lsls	r3, r3, #2
 8021948:	4413      	add	r3, r2
 802194a:	687a      	ldr	r2, [r7, #4]
 802194c:	4413      	add	r3, r2
 802194e:	781b      	ldrb	r3, [r3, #0]
 8021950:	2b00      	cmp	r3, #0
 8021952:	d072      	beq.n	8021a3a <cellsToBeRelocated+0x124>
 8021954:	7dfa      	ldrb	r2, [r7, #23]
 8021956:	7bbb      	ldrb	r3, [r7, #14]
 8021958:	429a      	cmp	r2, r3
 802195a:	d25f      	bcs.n	8021a1c <cellsToBeRelocated+0x106>
 802195c:	7dba      	ldrb	r2, [r7, #22]
 802195e:	4613      	mov	r3, r2
 8021960:	009b      	lsls	r3, r3, #2
 8021962:	4413      	add	r3, r2
 8021964:	687a      	ldr	r2, [r7, #4]
 8021966:	4413      	add	r3, r2
 8021968:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 802196c:	b29b      	uxth	r3, r3
 802196e:	4618      	mov	r0, r3
 8021970:	f7fb fc1a 	bl	801d1a8 <b38708bb53cf1fbf63b374e0cd07b43c485a3c34>
 8021974:	4603      	mov	r3, r0
 8021976:	2b00      	cmp	r3, #0
 8021978:	d00b      	beq.n	8021992 <cellsToBeRelocated+0x7c>
 802197a:	7dba      	ldrb	r2, [r7, #22]
 802197c:	4613      	mov	r3, r2
 802197e:	009b      	lsls	r3, r3, #2
 8021980:	4413      	add	r3, r2
 8021982:	687a      	ldr	r2, [r7, #4]
 8021984:	4413      	add	r3, r2
 8021986:	2201      	movs	r2, #1
 8021988:	701a      	strb	r2, [r3, #0]
 802198a:	7dfb      	ldrb	r3, [r7, #23]
 802198c:	3301      	adds	r3, #1
 802198e:	75fb      	strb	r3, [r7, #23]
 8021990:	e04c      	b.n	8021a2c <cellsToBeRelocated+0x116>
 8021992:	2300      	movs	r3, #0
 8021994:	757b      	strb	r3, [r7, #21]
 8021996:	2300      	movs	r3, #0
 8021998:	613b      	str	r3, [r7, #16]
 802199a:	e02d      	b.n	80219f8 <cellsToBeRelocated+0xe2>
 802199c:	693a      	ldr	r2, [r7, #16]
 802199e:	4613      	mov	r3, r2
 80219a0:	009b      	lsls	r3, r3, #2
 80219a2:	4413      	add	r3, r2
 80219a4:	68ba      	ldr	r2, [r7, #8]
 80219a6:	4413      	add	r3, r2
 80219a8:	781b      	ldrb	r3, [r3, #0]
 80219aa:	2b00      	cmp	r3, #0
 80219ac:	d021      	beq.n	80219f2 <cellsToBeRelocated+0xdc>
 80219ae:	693a      	ldr	r2, [r7, #16]
 80219b0:	4613      	mov	r3, r2
 80219b2:	009b      	lsls	r3, r3, #2
 80219b4:	4413      	add	r3, r2
 80219b6:	68ba      	ldr	r2, [r7, #8]
 80219b8:	4413      	add	r3, r2
 80219ba:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80219be:	b299      	uxth	r1, r3
 80219c0:	7dba      	ldrb	r2, [r7, #22]
 80219c2:	4613      	mov	r3, r2
 80219c4:	009b      	lsls	r3, r3, #2
 80219c6:	4413      	add	r3, r2
 80219c8:	687a      	ldr	r2, [r7, #4]
 80219ca:	4413      	add	r3, r2
 80219cc:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80219d0:	b29b      	uxth	r3, r3
 80219d2:	4299      	cmp	r1, r3
 80219d4:	d10d      	bne.n	80219f2 <cellsToBeRelocated+0xdc>
 80219d6:	7dba      	ldrb	r2, [r7, #22]
 80219d8:	4613      	mov	r3, r2
 80219da:	009b      	lsls	r3, r3, #2
 80219dc:	4413      	add	r3, r2
 80219de:	687a      	ldr	r2, [r7, #4]
 80219e0:	4413      	add	r3, r2
 80219e2:	2201      	movs	r2, #1
 80219e4:	701a      	strb	r2, [r3, #0]
 80219e6:	7dfb      	ldrb	r3, [r7, #23]
 80219e8:	3301      	adds	r3, #1
 80219ea:	75fb      	strb	r3, [r7, #23]
 80219ec:	2301      	movs	r3, #1
 80219ee:	757b      	strb	r3, [r7, #21]
 80219f0:	e005      	b.n	80219fe <cellsToBeRelocated+0xe8>
 80219f2:	693b      	ldr	r3, [r7, #16]
 80219f4:	3301      	adds	r3, #1
 80219f6:	613b      	str	r3, [r7, #16]
 80219f8:	693b      	ldr	r3, [r7, #16]
 80219fa:	2b04      	cmp	r3, #4
 80219fc:	ddce      	ble.n	802199c <cellsToBeRelocated+0x86>
 80219fe:	7d7b      	ldrb	r3, [r7, #21]
 8021a00:	f083 0301 	eor.w	r3, r3, #1
 8021a04:	b2db      	uxtb	r3, r3
 8021a06:	2b00      	cmp	r3, #0
 8021a08:	d010      	beq.n	8021a2c <cellsToBeRelocated+0x116>
 8021a0a:	7dba      	ldrb	r2, [r7, #22]
 8021a0c:	4613      	mov	r3, r2
 8021a0e:	009b      	lsls	r3, r3, #2
 8021a10:	4413      	add	r3, r2
 8021a12:	687a      	ldr	r2, [r7, #4]
 8021a14:	4413      	add	r3, r2
 8021a16:	2200      	movs	r2, #0
 8021a18:	701a      	strb	r2, [r3, #0]
 8021a1a:	e007      	b.n	8021a2c <cellsToBeRelocated+0x116>
 8021a1c:	7dba      	ldrb	r2, [r7, #22]
 8021a1e:	4613      	mov	r3, r2
 8021a20:	009b      	lsls	r3, r3, #2
 8021a22:	4413      	add	r3, r2
 8021a24:	687a      	ldr	r2, [r7, #4]
 8021a26:	4413      	add	r3, r2
 8021a28:	2200      	movs	r2, #0
 8021a2a:	701a      	strb	r2, [r3, #0]
 8021a2c:	7dbb      	ldrb	r3, [r7, #22]
 8021a2e:	3301      	adds	r3, #1
 8021a30:	75bb      	strb	r3, [r7, #22]
 8021a32:	7dbb      	ldrb	r3, [r7, #22]
 8021a34:	2b04      	cmp	r3, #4
 8021a36:	d984      	bls.n	8021942 <cellsToBeRelocated+0x2c>
 8021a38:	e000      	b.n	8021a3c <cellsToBeRelocated+0x126>
 8021a3a:	bf00      	nop
 8021a3c:	7dfb      	ldrb	r3, [r7, #23]
 8021a3e:	2b00      	cmp	r3, #0
 8021a40:	bf14      	ite	ne
 8021a42:	2301      	movne	r3, #1
 8021a44:	2300      	moveq	r3, #0
 8021a46:	b2db      	uxtb	r3, r3
 8021a48:	4618      	mov	r0, r3
 8021a4a:	3718      	adds	r7, #24
 8021a4c:	46bd      	mov	sp, r7
 8021a4e:	bd80      	pop	{r7, pc}

08021a50 <areAvailableCellsToBeRemoved>:
 8021a50:	b5b0      	push	{r4, r5, r7, lr}
 8021a52:	b09a      	sub	sp, #104	; 0x68
 8021a54:	af00      	add	r7, sp, #0
 8021a56:	623a      	str	r2, [r7, #32]
 8021a58:	461a      	mov	r2, r3
 8021a5a:	4603      	mov	r3, r0
 8021a5c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8021a60:	460b      	mov	r3, r1
 8021a62:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8021a66:	4613      	mov	r3, r2
 8021a68:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8021a6c:	2300      	movs	r3, #0
 8021a6e:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 8021a72:	2300      	movs	r3, #0
 8021a74:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 8021a78:	2301      	movs	r3, #1
 8021a7a:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 8021a7e:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8021a82:	2b01      	cmp	r3, #1
 8021a84:	d102      	bne.n	8021a8c <areAvailableCellsToBeRemoved+0x3c>
 8021a86:	2301      	movs	r3, #1
 8021a88:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 8021a8c:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8021a90:	2b02      	cmp	r3, #2
 8021a92:	d102      	bne.n	8021a9a <areAvailableCellsToBeRemoved+0x4a>
 8021a94:	2302      	movs	r3, #2
 8021a96:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 8021a9a:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8021a9e:	2b07      	cmp	r3, #7
 8021aa0:	d10c      	bne.n	8021abc <areAvailableCellsToBeRemoved+0x6c>
 8021aa2:	2303      	movs	r3, #3
 8021aa4:	f887 3064 	strb.w	r3, [r7, #100]	; 0x64
 8021aa8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8021aac:	2211      	movs	r2, #17
 8021aae:	2100      	movs	r1, #0
 8021ab0:	4618      	mov	r0, r3
 8021ab2:	f009 fb21 	bl	802b0f8 <memset>
 8021ab6:	2306      	movs	r3, #6
 8021ab8:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
 8021abc:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8021ac0:	2b00      	cmp	r3, #0
 8021ac2:	d003      	beq.n	8021acc <areAvailableCellsToBeRemoved+0x7c>
 8021ac4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8021ac8:	2b05      	cmp	r3, #5
 8021aca:	d911      	bls.n	8021af0 <areAvailableCellsToBeRemoved+0xa0>
 8021acc:	4a44      	ldr	r2, [pc, #272]	; (8021be0 <areAvailableCellsToBeRemoved+0x190>)
 8021ace:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8021ad2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021ad6:	e883 0003 	stmia.w	r3, {r0, r1}
 8021ada:	4a42      	ldr	r2, [pc, #264]	; (8021be4 <areAvailableCellsToBeRemoved+0x194>)
 8021adc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8021ae0:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021ae4:	f7f3 fb90 	bl	8015208 <LOGGER_PrintLine>
 8021ae8:	2300      	movs	r3, #0
 8021aea:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 8021aee:	e070      	b.n	8021bd2 <areAvailableCellsToBeRemoved+0x182>
 8021af0:	f997 2067 	ldrsb.w	r2, [r7, #103]	; 0x67
 8021af4:	4613      	mov	r3, r2
 8021af6:	009b      	lsls	r3, r3, #2
 8021af8:	4413      	add	r3, r2
 8021afa:	6a3a      	ldr	r2, [r7, #32]
 8021afc:	4413      	add	r3, r2
 8021afe:	781b      	ldrb	r3, [r3, #0]
 8021b00:	2b00      	cmp	r3, #0
 8021b02:	d032      	beq.n	8021b6a <areAvailableCellsToBeRemoved+0x11a>
 8021b04:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8021b08:	221e      	movs	r2, #30
 8021b0a:	2100      	movs	r1, #0
 8021b0c:	4618      	mov	r0, r3
 8021b0e:	f009 faf3 	bl	802b0f8 <memset>
 8021b12:	f997 2067 	ldrsb.w	r2, [r7, #103]	; 0x67
 8021b16:	4613      	mov	r3, r2
 8021b18:	009b      	lsls	r3, r3, #2
 8021b1a:	4413      	add	r3, r2
 8021b1c:	6a3a      	ldr	r2, [r7, #32]
 8021b1e:	4413      	add	r3, r2
 8021b20:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8021b24:	b29a      	uxth	r2, r3
 8021b26:	463b      	mov	r3, r7
 8021b28:	4611      	mov	r1, r2
 8021b2a:	4618      	mov	r0, r3
 8021b2c:	f7fb fa94 	bl	801d058 <SCHEDULE_GetCellInfo>
 8021b30:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8021b34:	463d      	mov	r5, r7
 8021b36:	6828      	ldr	r0, [r5, #0]
 8021b38:	6869      	ldr	r1, [r5, #4]
 8021b3a:	68aa      	ldr	r2, [r5, #8]
 8021b3c:	68eb      	ldr	r3, [r5, #12]
 8021b3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8021b40:	6928      	ldr	r0, [r5, #16]
 8021b42:	6969      	ldr	r1, [r5, #20]
 8021b44:	69aa      	ldr	r2, [r5, #24]
 8021b46:	c407      	stmia	r4!, {r0, r1, r2}
 8021b48:	8bab      	ldrh	r3, [r5, #28]
 8021b4a:	8023      	strh	r3, [r4, #0]
 8021b4c:	f897 3055 	ldrb.w	r3, [r7, #85]	; 0x55
 8021b50:	f897 2064 	ldrb.w	r2, [r7, #100]	; 0x64
 8021b54:	429a      	cmp	r2, r3
 8021b56:	d003      	beq.n	8021b60 <areAvailableCellsToBeRemoved+0x110>
 8021b58:	2300      	movs	r3, #0
 8021b5a:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 8021b5e:	e015      	b.n	8021b8c <areAvailableCellsToBeRemoved+0x13c>
 8021b60:	f897 3066 	ldrb.w	r3, [r7, #102]	; 0x66
 8021b64:	3301      	adds	r3, #1
 8021b66:	f887 3066 	strb.w	r3, [r7, #102]	; 0x66
 8021b6a:	f997 3067 	ldrsb.w	r3, [r7, #103]	; 0x67
 8021b6e:	b2db      	uxtb	r3, r3
 8021b70:	3301      	adds	r3, #1
 8021b72:	b2db      	uxtb	r3, r3
 8021b74:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 8021b78:	f997 3067 	ldrsb.w	r3, [r7, #103]	; 0x67
 8021b7c:	2b04      	cmp	r3, #4
 8021b7e:	dc05      	bgt.n	8021b8c <areAvailableCellsToBeRemoved+0x13c>
 8021b80:	f897 2066 	ldrb.w	r2, [r7, #102]	; 0x66
 8021b84:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8021b88:	429a      	cmp	r2, r3
 8021b8a:	d3b1      	bcc.n	8021af0 <areAvailableCellsToBeRemoved+0xa0>
 8021b8c:	f897 2066 	ldrb.w	r2, [r7, #102]	; 0x66
 8021b90:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8021b94:	429a      	cmp	r2, r3
 8021b96:	d119      	bne.n	8021bcc <areAvailableCellsToBeRemoved+0x17c>
 8021b98:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 8021b9c:	2b00      	cmp	r3, #0
 8021b9e:	d015      	beq.n	8021bcc <areAvailableCellsToBeRemoved+0x17c>
 8021ba0:	e00f      	b.n	8021bc2 <areAvailableCellsToBeRemoved+0x172>
 8021ba2:	f997 2067 	ldrsb.w	r2, [r7, #103]	; 0x67
 8021ba6:	4613      	mov	r3, r2
 8021ba8:	009b      	lsls	r3, r3, #2
 8021baa:	4413      	add	r3, r2
 8021bac:	6a3a      	ldr	r2, [r7, #32]
 8021bae:	4413      	add	r3, r2
 8021bb0:	2200      	movs	r2, #0
 8021bb2:	701a      	strb	r2, [r3, #0]
 8021bb4:	f997 3067 	ldrsb.w	r3, [r7, #103]	; 0x67
 8021bb8:	b2db      	uxtb	r3, r3
 8021bba:	3301      	adds	r3, #1
 8021bbc:	b2db      	uxtb	r3, r3
 8021bbe:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 8021bc2:	f997 3067 	ldrsb.w	r3, [r7, #103]	; 0x67
 8021bc6:	2b04      	cmp	r3, #4
 8021bc8:	ddeb      	ble.n	8021ba2 <areAvailableCellsToBeRemoved+0x152>
 8021bca:	e002      	b.n	8021bd2 <areAvailableCellsToBeRemoved+0x182>
 8021bcc:	2300      	movs	r3, #0
 8021bce:	f887 3065 	strb.w	r3, [r7, #101]	; 0x65
 8021bd2:	f897 3065 	ldrb.w	r3, [r7, #101]	; 0x65
 8021bd6:	4618      	mov	r0, r3
 8021bd8:	3768      	adds	r7, #104	; 0x68
 8021bda:	46bd      	mov	sp, r7
 8021bdc:	bdb0      	pop	{r4, r5, r7, pc}
 8021bde:	bf00      	nop
 8021be0:	0803043c 	.word	0x0803043c
 8021be4:	080309c4 	.word	0x080309c4

08021be8 <13ccdc5f94324d1909629c7f21aeb736294bb0ba>:
 8021be8:	b590      	push	{r4, r7, lr}
 8021bea:	b09f      	sub	sp, #124	; 0x7c
 8021bec:	af00      	add	r7, sp, #0
 8021bee:	6178      	str	r0, [r7, #20]
 8021bf0:	6139      	str	r1, [r7, #16]
 8021bf2:	60fa      	str	r2, [r7, #12]
 8021bf4:	60bb      	str	r3, [r7, #8]
 8021bf6:	697b      	ldr	r3, [r7, #20]
 8021bf8:	2261      	movs	r2, #97	; 0x61
 8021bfa:	705a      	strb	r2, [r3, #1]
 8021bfc:	693b      	ldr	r3, [r7, #16]
 8021bfe:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8021c02:	2b00      	cmp	r3, #0
 8021c04:	d01d      	beq.n	8021c42 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x5a>
 8021c06:	693b      	ldr	r3, [r7, #16]
 8021c08:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8021c0c:	2b00      	cmp	r3, #0
 8021c0e:	d10f      	bne.n	8021c30 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x48>
 8021c10:	4ab6      	ldr	r2, [pc, #728]	; (8021eec <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x304>)
 8021c12:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8021c16:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021c1a:	e883 0003 	stmia.w	r3, {r0, r1}
 8021c1e:	4ab4      	ldr	r2, [pc, #720]	; (8021ef0 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x308>)
 8021c20:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8021c24:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021c28:	f7f3 faee 	bl	8015208 <LOGGER_PrintLine>
 8021c2c:	2300      	movs	r3, #0
 8021c2e:	e158      	b.n	8021ee2 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2fa>
 8021c30:	693b      	ldr	r3, [r7, #16]
 8021c32:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8021c36:	3b01      	subs	r3, #1
 8021c38:	b2da      	uxtb	r2, r3
 8021c3a:	693b      	ldr	r3, [r7, #16]
 8021c3c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8021c40:	e01c      	b.n	8021c7c <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x94>
 8021c42:	68fb      	ldr	r3, [r7, #12]
 8021c44:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8021c48:	2b00      	cmp	r3, #0
 8021c4a:	d10f      	bne.n	8021c6c <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x84>
 8021c4c:	4aa7      	ldr	r2, [pc, #668]	; (8021eec <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x304>)
 8021c4e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8021c52:	e892 0003 	ldmia.w	r2, {r0, r1}
 8021c56:	e883 0003 	stmia.w	r3, {r0, r1}
 8021c5a:	4aa5      	ldr	r2, [pc, #660]	; (8021ef0 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x308>)
 8021c5c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8021c60:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021c64:	f7f3 fad0 	bl	8015208 <LOGGER_PrintLine>
 8021c68:	2300      	movs	r3, #0
 8021c6a:	e13a      	b.n	8021ee2 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2fa>
 8021c6c:	68fb      	ldr	r3, [r7, #12]
 8021c6e:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8021c72:	3b01      	subs	r3, #1
 8021c74:	b2da      	uxtb	r2, r3
 8021c76:	68fb      	ldr	r3, [r7, #12]
 8021c78:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8021c7c:	697b      	ldr	r3, [r7, #20]
 8021c7e:	f103 021d 	add.w	r2, r3, #29
 8021c82:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8021c86:	4611      	mov	r1, r2
 8021c88:	4618      	mov	r0, r3
 8021c8a:	f7ec ffc5 	bl	800ec18 <2af6233fa7118fd11caf81b4f86d81e84f105465>
 8021c8e:	697b      	ldr	r3, [r7, #20]
 8021c90:	f103 022e 	add.w	r2, r3, #46	; 0x2e
 8021c94:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8021c98:	4611      	mov	r1, r2
 8021c9a:	4618      	mov	r0, r3
 8021c9c:	f7ec ffbc 	bl	800ec18 <2af6233fa7118fd11caf81b4f86d81e84f105465>
 8021ca0:	697b      	ldr	r3, [r7, #20]
 8021ca2:	331d      	adds	r3, #29
 8021ca4:	4618      	mov	r0, r3
 8021ca6:	f7ed fa3b 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8021caa:	4603      	mov	r3, r0
 8021cac:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 8021cb0:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8021cb4:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8021cb8:	4611      	mov	r1, r2
 8021cba:	4618      	mov	r0, r3
 8021cbc:	f7ed fb36 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8021cc0:	4603      	mov	r3, r0
 8021cc2:	f887 3076 	strb.w	r3, [r7, #118]	; 0x76
 8021cc6:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8021cca:	2b00      	cmp	r3, #0
 8021ccc:	d001      	beq.n	8021cd2 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0xea>
 8021cce:	2301      	movs	r3, #1
 8021cd0:	e006      	b.n	8021ce0 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0xf8>
 8021cd2:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8021cd6:	2b00      	cmp	r3, #0
 8021cd8:	d001      	beq.n	8021cde <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0xf6>
 8021cda:	2303      	movs	r3, #3
 8021cdc:	e000      	b.n	8021ce0 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0xf8>
 8021cde:	2300      	movs	r3, #0
 8021ce0:	f887 3075 	strb.w	r3, [r7, #117]	; 0x75
 8021ce4:	f897 3076 	ldrb.w	r3, [r7, #118]	; 0x76
 8021ce8:	2b00      	cmp	r3, #0
 8021cea:	d170      	bne.n	8021dce <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x1e6>
 8021cec:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8021cf0:	f083 0301 	eor.w	r3, r3, #1
 8021cf4:	b2db      	uxtb	r3, r3
 8021cf6:	2b00      	cmp	r3, #0
 8021cf8:	d069      	beq.n	8021dce <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x1e6>
 8021cfa:	2005      	movs	r0, #5
 8021cfc:	f7eb f97e 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8021d00:	4601      	mov	r1, r0
 8021d02:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8021d06:	4a7b      	ldr	r2, [pc, #492]	; (8021ef4 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x30c>)
 8021d08:	4618      	mov	r0, r3
 8021d0a:	f7ec ffe1 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8021d0e:	693b      	ldr	r3, [r7, #16]
 8021d10:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8021d14:	2b00      	cmp	r3, #0
 8021d16:	d10a      	bne.n	8021d2e <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x146>
 8021d18:	697b      	ldr	r3, [r7, #20]
 8021d1a:	332e      	adds	r3, #46	; 0x2e
 8021d1c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8021d20:	4611      	mov	r1, r2
 8021d22:	4618      	mov	r0, r3
 8021d24:	f7ed fb02 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8021d28:	4603      	mov	r3, r0
 8021d2a:	2b00      	cmp	r3, #0
 8021d2c:	d10f      	bne.n	8021d4e <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x166>
 8021d2e:	693b      	ldr	r3, [r7, #16]
 8021d30:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8021d34:	2b00      	cmp	r3, #0
 8021d36:	d025      	beq.n	8021d84 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x19c>
 8021d38:	693b      	ldr	r3, [r7, #16]
 8021d3a:	3326      	adds	r3, #38	; 0x26
 8021d3c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8021d40:	4611      	mov	r1, r2
 8021d42:	4618      	mov	r0, r3
 8021d44:	f7ed faf2 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8021d48:	4603      	mov	r3, r0
 8021d4a:	2b00      	cmp	r3, #0
 8021d4c:	d01a      	beq.n	8021d84 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x19c>
 8021d4e:	2101      	movs	r1, #1
 8021d50:	6978      	ldr	r0, [r7, #20]
 8021d52:	f007 fb9f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021d56:	697b      	ldr	r3, [r7, #20]
 8021d58:	685b      	ldr	r3, [r3, #4]
 8021d5a:	693a      	ldr	r2, [r7, #16]
 8021d5c:	f892 2024 	ldrb.w	r2, [r2, #36]	; 0x24
 8021d60:	701a      	strb	r2, [r3, #0]
 8021d62:	2101      	movs	r1, #1
 8021d64:	6978      	ldr	r0, [r7, #20]
 8021d66:	f007 fb95 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021d6a:	697b      	ldr	r3, [r7, #20]
 8021d6c:	685b      	ldr	r3, [r3, #4]
 8021d6e:	2206      	movs	r2, #6
 8021d70:	701a      	strb	r2, [r3, #0]
 8021d72:	2101      	movs	r1, #1
 8021d74:	6978      	ldr	r0, [r7, #20]
 8021d76:	f007 fb8d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021d7a:	697b      	ldr	r3, [r7, #20]
 8021d7c:	685b      	ldr	r3, [r3, #4]
 8021d7e:	22a1      	movs	r2, #161	; 0xa1
 8021d80:	701a      	strb	r2, [r3, #0]
 8021d82:	e024      	b.n	8021dce <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x1e6>
 8021d84:	f897 3075 	ldrb.w	r3, [r7, #117]	; 0x75
 8021d88:	2b00      	cmp	r3, #0
 8021d8a:	d120      	bne.n	8021dce <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x1e6>
 8021d8c:	697b      	ldr	r3, [r7, #20]
 8021d8e:	332e      	adds	r3, #46	; 0x2e
 8021d90:	2200      	movs	r2, #0
 8021d92:	4619      	mov	r1, r3
 8021d94:	6978      	ldr	r0, [r7, #20]
 8021d96:	f007 fb45 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8021d9a:	2101      	movs	r1, #1
 8021d9c:	6978      	ldr	r0, [r7, #20]
 8021d9e:	f007 fb79 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021da2:	697b      	ldr	r3, [r7, #20]
 8021da4:	685b      	ldr	r3, [r3, #4]
 8021da6:	693a      	ldr	r2, [r7, #16]
 8021da8:	f892 2024 	ldrb.w	r2, [r2, #36]	; 0x24
 8021dac:	701a      	strb	r2, [r3, #0]
 8021dae:	2101      	movs	r1, #1
 8021db0:	6978      	ldr	r0, [r7, #20]
 8021db2:	f007 fb6f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021db6:	697b      	ldr	r3, [r7, #20]
 8021db8:	685b      	ldr	r3, [r3, #4]
 8021dba:	2206      	movs	r2, #6
 8021dbc:	701a      	strb	r2, [r3, #0]
 8021dbe:	2101      	movs	r1, #1
 8021dc0:	6978      	ldr	r0, [r7, #20]
 8021dc2:	f007 fb67 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021dc6:	697b      	ldr	r3, [r7, #20]
 8021dc8:	685b      	ldr	r3, [r3, #4]
 8021dca:	22b1      	movs	r2, #177	; 0xb1
 8021dcc:	701a      	strb	r2, [r3, #0]
 8021dce:	68bb      	ldr	r3, [r7, #8]
 8021dd0:	781b      	ldrb	r3, [r3, #0]
 8021dd2:	2b63      	cmp	r3, #99	; 0x63
 8021dd4:	d10e      	bne.n	8021df4 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x20c>
 8021dd6:	697b      	ldr	r3, [r7, #20]
 8021dd8:	331d      	adds	r3, #29
 8021dda:	4618      	mov	r0, r3
 8021ddc:	f7ed f9a0 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8021de0:	4603      	mov	r3, r0
 8021de2:	f083 0301 	eor.w	r3, r3, #1
 8021de6:	b2db      	uxtb	r3, r3
 8021de8:	2b00      	cmp	r3, #0
 8021dea:	d003      	beq.n	8021df4 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x20c>
 8021dec:	68b9      	ldr	r1, [r7, #8]
 8021dee:	6978      	ldr	r0, [r7, #20]
 8021df0:	f001 fd38 	bl	8023864 <prependIPv6HopByHopHeader>
 8021df4:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8021df8:	2b00      	cmp	r3, #0
 8021dfa:	d00e      	beq.n	8021e1a <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x232>
 8021dfc:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8021e00:	4619      	mov	r1, r3
 8021e02:	6978      	ldr	r0, [r7, #20]
 8021e04:	f007 fb46 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021e08:	697b      	ldr	r3, [r7, #20]
 8021e0a:	685b      	ldr	r3, [r3, #4]
 8021e0c:	f897 2090 	ldrb.w	r2, [r7, #144]	; 0x90
 8021e10:	f8d7 108c 	ldr.w	r1, [r7, #140]	; 0x8c
 8021e14:	4618      	mov	r0, r3
 8021e16:	f009 fa0e 	bl	802b236 <memcpy>
 8021e1a:	697b      	ldr	r3, [r7, #20]
 8021e1c:	685b      	ldr	r3, [r3, #4]
 8021e1e:	781b      	ldrb	r3, [r3, #0]
 8021e20:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8021e24:	2b80      	cmp	r3, #128	; 0x80
 8021e26:	d006      	beq.n	8021e36 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x24e>
 8021e28:	697b      	ldr	r3, [r7, #20]
 8021e2a:	685b      	ldr	r3, [r3, #4]
 8021e2c:	781b      	ldrb	r3, [r3, #0]
 8021e2e:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8021e32:	2ba0      	cmp	r3, #160	; 0xa0
 8021e34:	d107      	bne.n	8021e46 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x25e>
 8021e36:	2101      	movs	r1, #1
 8021e38:	6978      	ldr	r0, [r7, #20]
 8021e3a:	f007 fb2b 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8021e3e:	697b      	ldr	r3, [r7, #20]
 8021e40:	685b      	ldr	r3, [r3, #4]
 8021e42:	22f1      	movs	r2, #241	; 0xf1
 8021e44:	701a      	strb	r2, [r3, #0]
 8021e46:	f7eb f895 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8021e4a:	4603      	mov	r3, r0
 8021e4c:	2b00      	cmp	r3, #0
 8021e4e:	d044      	beq.n	8021eda <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2f2>
 8021e50:	697b      	ldr	r3, [r7, #20]
 8021e52:	331d      	adds	r3, #29
 8021e54:	4618      	mov	r0, r3
 8021e56:	f7ed f9ab 	bl	800f1b0 <271b2dbe31e411eac579adb987eb6de74d66e6b2>
 8021e5a:	4603      	mov	r3, r0
 8021e5c:	f083 0301 	eor.w	r3, r3, #1
 8021e60:	b2db      	uxtb	r3, r3
 8021e62:	2b00      	cmp	r3, #0
 8021e64:	d039      	beq.n	8021eda <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2f2>
 8021e66:	2005      	movs	r0, #5
 8021e68:	f7eb f8c8 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8021e6c:	4604      	mov	r4, r0
 8021e6e:	2002      	movs	r0, #2
 8021e70:	f7eb f8c4 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8021e74:	4602      	mov	r2, r0
 8021e76:	f107 0318 	add.w	r3, r7, #24
 8021e7a:	4621      	mov	r1, r4
 8021e7c:	4618      	mov	r0, r3
 8021e7e:	f7ec ff27 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8021e82:	697b      	ldr	r3, [r7, #20]
 8021e84:	f103 022e 	add.w	r2, r3, #46	; 0x2e
 8021e88:	f107 0318 	add.w	r3, r7, #24
 8021e8c:	4611      	mov	r1, r2
 8021e8e:	4618      	mov	r0, r3
 8021e90:	f7ed fa4c 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8021e94:	4603      	mov	r3, r0
 8021e96:	2b00      	cmp	r3, #0
 8021e98:	d00b      	beq.n	8021eb2 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2ca>
 8021e9a:	697b      	ldr	r3, [r7, #20]
 8021e9c:	f103 0441 	add.w	r4, r3, #65	; 0x41
 8021ea0:	2002      	movs	r0, #2
 8021ea2:	f7eb f8ab 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8021ea6:	4603      	mov	r3, r0
 8021ea8:	2211      	movs	r2, #17
 8021eaa:	4619      	mov	r1, r3
 8021eac:	4620      	mov	r0, r4
 8021eae:	f009 f9c2 	bl	802b236 <memcpy>
 8021eb2:	697c      	ldr	r4, [r7, #20]
 8021eb4:	463b      	mov	r3, r7
 8021eb6:	4618      	mov	r0, r3
 8021eb8:	f7f7 fd7e 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 8021ebc:	f104 0356 	add.w	r3, r4, #86	; 0x56
 8021ec0:	463a      	mov	r2, r7
 8021ec2:	6811      	ldr	r1, [r2, #0]
 8021ec4:	6019      	str	r1, [r3, #0]
 8021ec6:	7912      	ldrb	r2, [r2, #4]
 8021ec8:	711a      	strb	r2, [r3, #4]
 8021eca:	6978      	ldr	r0, [r7, #20]
 8021ecc:	f7ef fc3c 	bl	8011748 <db78e4d9b28d7c42d16d219c1384c29b20a49150>
 8021ed0:	6978      	ldr	r0, [r7, #20]
 8021ed2:	f7ed fd3b 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8021ed6:	2301      	movs	r3, #1
 8021ed8:	e003      	b.n	8021ee2 <13ccdc5f94324d1909629c7f21aeb736294bb0ba+0x2fa>
 8021eda:	6978      	ldr	r0, [r7, #20]
 8021edc:	f7fc ff48 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 8021ee0:	4603      	mov	r3, r0
 8021ee2:	4618      	mov	r0, r3
 8021ee4:	377c      	adds	r7, #124	; 0x7c
 8021ee6:	46bd      	mov	sp, r7
 8021ee8:	bd90      	pop	{r4, r7, pc}
 8021eea:	bf00      	nop
 8021eec:	080309fc 	.word	0x080309fc
 8021ef0:	080309d8 	.word	0x080309d8
 8021ef4:	08031aa4 	.word	0x08031aa4

08021ef8 <3e6bcf4afb14bf9f609f14ef4ad27a2385bb5ae5>:
 8021ef8:	b580      	push	{r7, lr}
 8021efa:	b082      	sub	sp, #8
 8021efc:	af00      	add	r7, sp, #0
 8021efe:	6078      	str	r0, [r7, #4]
 8021f00:	687b      	ldr	r3, [r7, #4]
 8021f02:	2261      	movs	r2, #97	; 0x61
 8021f04:	705a      	strb	r2, [r3, #1]
 8021f06:	6878      	ldr	r0, [r7, #4]
 8021f08:	f7fc ff32 	bl	801ed70 <84a9c9a6c63997e804410fedf3e4beedf650a414>
 8021f0c:	4603      	mov	r3, r0
 8021f0e:	4618      	mov	r0, r3
 8021f10:	3708      	adds	r7, #8
 8021f12:	46bd      	mov	sp, r7
 8021f14:	bd80      	pop	{r7, pc}

08021f16 <c4cc1e8c684869221cde02c1ffd97d6034352506>:
 8021f16:	b580      	push	{r7, lr}
 8021f18:	b082      	sub	sp, #8
 8021f1a:	af00      	add	r7, sp, #0
 8021f1c:	6078      	str	r0, [r7, #4]
 8021f1e:	460b      	mov	r3, r1
 8021f20:	70fb      	strb	r3, [r7, #3]
 8021f22:	687b      	ldr	r3, [r7, #4]
 8021f24:	2261      	movs	r2, #97	; 0x61
 8021f26:	705a      	strb	r2, [r3, #1]
 8021f28:	687b      	ldr	r3, [r7, #4]
 8021f2a:	781b      	ldrb	r3, [r3, #0]
 8021f2c:	2b60      	cmp	r3, #96	; 0x60
 8021f2e:	d105      	bne.n	8021f3c <c4cc1e8c684869221cde02c1ffd97d6034352506+0x26>
 8021f30:	78fb      	ldrb	r3, [r7, #3]
 8021f32:	4619      	mov	r1, r3
 8021f34:	6878      	ldr	r0, [r7, #4]
 8021f36:	f7ef fbe1 	bl	80116fc <c122f50a74e97b0b971f059f93cac9f52ab85af9>
 8021f3a:	e004      	b.n	8021f46 <c4cc1e8c684869221cde02c1ffd97d6034352506+0x30>
 8021f3c:	78fb      	ldrb	r3, [r7, #3]
 8021f3e:	4619      	mov	r1, r3
 8021f40:	6878      	ldr	r0, [r7, #4]
 8021f42:	f001 ff8b 	bl	8023e5c <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2>
 8021f46:	bf00      	nop
 8021f48:	3708      	adds	r7, #8
 8021f4a:	46bd      	mov	sp, r7
 8021f4c:	bd80      	pop	{r7, pc}

08021f4e <a16adbb478478495de36bd15141fbb4e05032f0d>:
 8021f4e:	b580      	push	{r7, lr}
 8021f50:	b0ac      	sub	sp, #176	; 0xb0
 8021f52:	af00      	add	r7, sp, #0
 8021f54:	6078      	str	r0, [r7, #4]
 8021f56:	687b      	ldr	r3, [r7, #4]
 8021f58:	2261      	movs	r2, #97	; 0x61
 8021f5a:	705a      	strb	r2, [r3, #1]
 8021f5c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8021f60:	224c      	movs	r2, #76	; 0x4c
 8021f62:	2100      	movs	r1, #0
 8021f64:	4618      	mov	r0, r3
 8021f66:	f009 f8c7 	bl	802b0f8 <memset>
 8021f6a:	f107 0314 	add.w	r3, r7, #20
 8021f6e:	224c      	movs	r2, #76	; 0x4c
 8021f70:	2100      	movs	r1, #0
 8021f72:	4618      	mov	r0, r3
 8021f74:	f009 f8c0 	bl	802b0f8 <memset>
 8021f78:	f107 030c 	add.w	r3, r7, #12
 8021f7c:	2205      	movs	r2, #5
 8021f7e:	2100      	movs	r1, #0
 8021f80:	4618      	mov	r0, r3
 8021f82:	f009 f8b9 	bl	802b0f8 <memset>
 8021f86:	f107 0313 	add.w	r3, r7, #19
 8021f8a:	f107 0214 	add.w	r2, r7, #20
 8021f8e:	f107 0160 	add.w	r1, r7, #96	; 0x60
 8021f92:	6878      	ldr	r0, [r7, #4]
 8021f94:	f000 fb1a 	bl	80225cc <fdb5ac47f2c02ab26c1329e13b6119b2272b663d>
 8021f98:	f897 3069 	ldrb.w	r3, [r7, #105]	; 0x69
 8021f9c:	2b00      	cmp	r3, #0
 8021f9e:	d112      	bne.n	8021fc6 <a16adbb478478495de36bd15141fbb4e05032f0d+0x78>
 8021fa0:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8021fa4:	2b00      	cmp	r3, #0
 8021fa6:	d00e      	beq.n	8021fc6 <a16adbb478478495de36bd15141fbb4e05032f0d+0x78>
 8021fa8:	f107 030c 	add.w	r3, r7, #12
 8021fac:	4619      	mov	r1, r3
 8021fae:	6878      	ldr	r0, [r7, #4]
 8021fb0:	f001 fcb2 	bl	8023918 <6fdc701aa2cd71dee737cd6193e5dab778619cb9>
 8021fb4:	4603      	mov	r3, r0
 8021fb6:	f887 30af 	strb.w	r3, [r7, #175]	; 0xaf
 8021fba:	f897 30af 	ldrb.w	r3, [r7, #175]	; 0xaf
 8021fbe:	4619      	mov	r1, r3
 8021fc0:	6878      	ldr	r0, [r7, #4]
 8021fc2:	f007 fa9f 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8021fc6:	f107 030c 	add.w	r3, r7, #12
 8021fca:	f107 0214 	add.w	r2, r7, #20
 8021fce:	f107 0160 	add.w	r1, r7, #96	; 0x60
 8021fd2:	6878      	ldr	r0, [r7, #4]
 8021fd4:	f002 f822 	bl	802401c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb>
 8021fd8:	bf00      	nop
 8021fda:	37b0      	adds	r7, #176	; 0xb0
 8021fdc:	46bd      	mov	sp, r7
 8021fde:	bd80      	pop	{r7, pc}

08021fe0 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69>:
 8021fe0:	b580      	push	{r7, lr}
 8021fe2:	b0b0      	sub	sp, #192	; 0xc0
 8021fe4:	af00      	add	r7, sp, #0
 8021fe6:	6078      	str	r0, [r7, #4]
 8021fe8:	687b      	ldr	r3, [r7, #4]
 8021fea:	2261      	movs	r2, #97	; 0x61
 8021fec:	705a      	strb	r2, [r3, #1]
 8021fee:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8021ff2:	224c      	movs	r2, #76	; 0x4c
 8021ff4:	2100      	movs	r1, #0
 8021ff6:	4618      	mov	r0, r3
 8021ff8:	f009 f87e 	bl	802b0f8 <memset>
 8021ffc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8022000:	224c      	movs	r2, #76	; 0x4c
 8022002:	2100      	movs	r1, #0
 8022004:	4618      	mov	r0, r3
 8022006:	f009 f877 	bl	802b0f8 <memset>
 802200a:	f107 031c 	add.w	r3, r7, #28
 802200e:	2205      	movs	r2, #5
 8022010:	2100      	movs	r1, #0
 8022012:	4618      	mov	r0, r3
 8022014:	f009 f870 	bl	802b0f8 <memset>
 8022018:	f107 0323 	add.w	r3, r7, #35	; 0x23
 802201c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8022020:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8022024:	6878      	ldr	r0, [r7, #4]
 8022026:	f000 fad1 	bl	80225cc <fdb5ac47f2c02ab26c1329e13b6119b2272b663d>
 802202a:	f7ea ffa3 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 802202e:	4603      	mov	r3, r0
 8022030:	2b00      	cmp	r3, #0
 8022032:	d00e      	beq.n	8022052 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0x72>
 8022034:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8022038:	3337      	adds	r3, #55	; 0x37
 802203a:	4618      	mov	r0, r3
 802203c:	f7ed f8b8 	bl	800f1b0 <271b2dbe31e411eac579adb987eb6de74d66e6b2>
 8022040:	4603      	mov	r3, r0
 8022042:	f083 0301 	eor.w	r3, r3, #1
 8022046:	b2db      	uxtb	r3, r3
 8022048:	2b00      	cmp	r3, #0
 802204a:	d002      	beq.n	8022052 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0x72>
 802204c:	6878      	ldr	r0, [r7, #4]
 802204e:	f7ef fb7b 	bl	8011748 <db78e4d9b28d7c42d16d219c1384c29b20a49150>
 8022052:	f7ea ff8f 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8022056:	4603      	mov	r3, r0
 8022058:	f083 0301 	eor.w	r3, r3, #1
 802205c:	b2db      	uxtb	r3, r3
 802205e:	2b00      	cmp	r3, #0
 8022060:	d116      	bne.n	8022090 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xb0>
 8022062:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8022066:	3337      	adds	r3, #55	; 0x37
 8022068:	4618      	mov	r0, r3
 802206a:	f7ed f859 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 802206e:	4603      	mov	r3, r0
 8022070:	2b00      	cmp	r3, #0
 8022072:	d10d      	bne.n	8022090 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xb0>
 8022074:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8022078:	3337      	adds	r3, #55	; 0x37
 802207a:	4618      	mov	r0, r3
 802207c:	f7eb f846 	bl	800d10c <ef42a56931e541b0c8c1f2660a00aa81f857110a>
 8022080:	4603      	mov	r3, r0
 8022082:	2b00      	cmp	r3, #0
 8022084:	d02b      	beq.n	80220de <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xfe>
 8022086:	687b      	ldr	r3, [r7, #4]
 8022088:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 802208c:	2b00      	cmp	r3, #0
 802208e:	d026      	beq.n	80220de <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xfe>
 8022090:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8022094:	4619      	mov	r1, r3
 8022096:	6878      	ldr	r0, [r7, #4]
 8022098:	f007 fa34 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 802209c:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 80220a0:	2b00      	cmp	r3, #0
 80220a2:	d112      	bne.n	80220ca <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xea>
 80220a4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80220a8:	2b00      	cmp	r3, #0
 80220aa:	d00e      	beq.n	80220ca <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0xea>
 80220ac:	f107 031c 	add.w	r3, r7, #28
 80220b0:	4619      	mov	r1, r3
 80220b2:	6878      	ldr	r0, [r7, #4]
 80220b4:	f001 fc30 	bl	8023918 <6fdc701aa2cd71dee737cd6193e5dab778619cb9>
 80220b8:	4603      	mov	r3, r0
 80220ba:	f887 30bf 	strb.w	r3, [r7, #191]	; 0xbf
 80220be:	f897 30bf 	ldrb.w	r3, [r7, #191]	; 0xbf
 80220c2:	4619      	mov	r1, r3
 80220c4:	6878      	ldr	r0, [r7, #4]
 80220c6:	f007 fa1d 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80220ca:	f107 031c 	add.w	r3, r7, #28
 80220ce:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80220d2:	f107 0170 	add.w	r1, r7, #112	; 0x70
 80220d6:	6878      	ldr	r0, [r7, #4]
 80220d8:	f001 ffa0 	bl	802401c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb>
 80220dc:	e003      	b.n	80220e6 <b7c086b3aad6c9d4ffcf59c72879e5ab5daa7b69+0x106>
 80220de:	6878      	ldr	r0, [r7, #4]
 80220e0:	f7ed fc34 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80220e4:	bf00      	nop
 80220e6:	bf00      	nop
 80220e8:	37c0      	adds	r7, #192	; 0xc0
 80220ea:	46bd      	mov	sp, r7
 80220ec:	bd80      	pop	{r7, pc}
	...

080220f0 <2058bb475204def8ad39a4c1db4c087e75b9f860>:
 80220f0:	b580      	push	{r7, lr}
 80220f2:	b09e      	sub	sp, #120	; 0x78
 80220f4:	af02      	add	r7, sp, #8
 80220f6:	60f8      	str	r0, [r7, #12]
 80220f8:	607a      	str	r2, [r7, #4]
 80220fa:	461a      	mov	r2, r3
 80220fc:	460b      	mov	r3, r1
 80220fe:	72fb      	strb	r3, [r7, #11]
 8022100:	4613      	mov	r3, r2
 8022102:	72bb      	strb	r3, [r7, #10]
 8022104:	f897 3098 	ldrb.w	r3, [r7, #152]	; 0x98
 8022108:	2b03      	cmp	r3, #3
 802210a:	d87a      	bhi.n	8022202 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x112>
 802210c:	a201      	add	r2, pc, #4	; (adr r2, 8022114 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x24>)
 802210e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022112:	bf00      	nop
 8022114:	080221c3 	.word	0x080221c3
 8022118:	08022183 	.word	0x08022183
 802211c:	08022143 	.word	0x08022143
 8022120:	08022125 	.word	0x08022125
 8022124:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022128:	2b00      	cmp	r3, #0
 802212a:	d07f      	beq.n	802222c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x13c>
 802212c:	2101      	movs	r1, #1
 802212e:	68f8      	ldr	r0, [r7, #12]
 8022130:	f007 f9b0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8022134:	68fb      	ldr	r3, [r7, #12]
 8022136:	685b      	ldr	r3, [r3, #4]
 8022138:	f8d7 209c 	ldr.w	r2, [r7, #156]	; 0x9c
 802213c:	7c12      	ldrb	r2, [r2, #16]
 802213e:	701a      	strb	r2, [r3, #0]
 8022140:	e074      	b.n	802222c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x13c>
 8022142:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022146:	2b00      	cmp	r3, #0
 8022148:	d172      	bne.n	8022230 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x140>
 802214a:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 802214e:	781b      	ldrb	r3, [r3, #0]
 8022150:	2b01      	cmp	r3, #1
 8022152:	d00f      	beq.n	8022174 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x84>
 8022154:	4ac1      	ldr	r2, [pc, #772]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 8022156:	f107 0364 	add.w	r3, r7, #100	; 0x64
 802215a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802215e:	e883 0003 	stmia.w	r3, {r0, r1}
 8022162:	4abf      	ldr	r2, [pc, #764]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 8022164:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8022168:	e893 0003 	ldmia.w	r3, {r0, r1}
 802216c:	f7f3 f84c 	bl	8015208 <LOGGER_PrintLine>
 8022170:	2300      	movs	r3, #0
 8022172:	e223      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 8022174:	2200      	movs	r2, #0
 8022176:	f8d7 109c 	ldr.w	r1, [r7, #156]	; 0x9c
 802217a:	68f8      	ldr	r0, [r7, #12]
 802217c:	f007 f952 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8022180:	e056      	b.n	8022230 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x140>
 8022182:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022186:	2b00      	cmp	r3, #0
 8022188:	d154      	bne.n	8022234 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x144>
 802218a:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 802218e:	781b      	ldrb	r3, [r3, #0]
 8022190:	2b02      	cmp	r3, #2
 8022192:	d00f      	beq.n	80221b4 <2058bb475204def8ad39a4c1db4c087e75b9f860+0xc4>
 8022194:	4ab1      	ldr	r2, [pc, #708]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 8022196:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 802219a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802219e:	e883 0003 	stmia.w	r3, {r0, r1}
 80221a2:	4aaf      	ldr	r2, [pc, #700]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 80221a4:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 80221a8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80221ac:	f7f3 f82c 	bl	8015208 <LOGGER_PrintLine>
 80221b0:	2300      	movs	r3, #0
 80221b2:	e203      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 80221b4:	2200      	movs	r2, #0
 80221b6:	f8d7 109c 	ldr.w	r1, [r7, #156]	; 0x9c
 80221ba:	68f8      	ldr	r0, [r7, #12]
 80221bc:	f007 f932 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 80221c0:	e038      	b.n	8022234 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x144>
 80221c2:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 80221c6:	2b00      	cmp	r3, #0
 80221c8:	d136      	bne.n	8022238 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x148>
 80221ca:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80221ce:	781b      	ldrb	r3, [r3, #0]
 80221d0:	2b03      	cmp	r3, #3
 80221d2:	d00f      	beq.n	80221f4 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x104>
 80221d4:	4aa1      	ldr	r2, [pc, #644]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 80221d6:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80221da:	e892 0003 	ldmia.w	r2, {r0, r1}
 80221de:	e883 0003 	stmia.w	r3, {r0, r1}
 80221e2:	4a9f      	ldr	r2, [pc, #636]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 80221e4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80221e8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80221ec:	f7f3 f80c 	bl	8015208 <LOGGER_PrintLine>
 80221f0:	2300      	movs	r3, #0
 80221f2:	e1e3      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 80221f4:	2200      	movs	r2, #0
 80221f6:	f8d7 109c 	ldr.w	r1, [r7, #156]	; 0x9c
 80221fa:	68f8      	ldr	r0, [r7, #12]
 80221fc:	f007 f912 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8022200:	e01a      	b.n	8022238 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x148>
 8022202:	4a98      	ldr	r2, [pc, #608]	; (8022464 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x374>)
 8022204:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8022208:	e892 0003 	ldmia.w	r2, {r0, r1}
 802220c:	e883 0003 	stmia.w	r3, {r0, r1}
 8022210:	f897 2098 	ldrb.w	r2, [r7, #152]	; 0x98
 8022214:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022218:	9300      	str	r3, [sp, #0]
 802221a:	4613      	mov	r3, r2
 802221c:	4a92      	ldr	r2, [pc, #584]	; (8022468 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x378>)
 802221e:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 8022222:	c903      	ldmia	r1, {r0, r1}
 8022224:	f7f2 fff0 	bl	8015208 <LOGGER_PrintLine>
 8022228:	2300      	movs	r3, #0
 802222a:	e1c7      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 802222c:	bf00      	nop
 802222e:	e004      	b.n	802223a <2058bb475204def8ad39a4c1db4c087e75b9f860+0x14a>
 8022230:	bf00      	nop
 8022232:	e002      	b.n	802223a <2058bb475204def8ad39a4c1db4c087e75b9f860+0x14a>
 8022234:	bf00      	nop
 8022236:	e000      	b.n	802223a <2058bb475204def8ad39a4c1db4c087e75b9f860+0x14a>
 8022238:	bf00      	nop
 802223a:	f897 308c 	ldrb.w	r3, [r7, #140]	; 0x8c
 802223e:	2b03      	cmp	r3, #3
 8022240:	f200 809d 	bhi.w	802237e <2058bb475204def8ad39a4c1db4c087e75b9f860+0x28e>
 8022244:	a201      	add	r2, pc, #4	; (adr r2, 802224c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x15c>)
 8022246:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802224a:	bf00      	nop
 802224c:	08022313 	.word	0x08022313
 8022250:	080222b9 	.word	0x080222b9
 8022254:	0802225d 	.word	0x0802225d
 8022258:	080223a9 	.word	0x080223a9
 802225c:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 8022260:	2b02      	cmp	r3, #2
 8022262:	d108      	bne.n	8022276 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x186>
 8022264:	2001      	movs	r0, #1
 8022266:	f7ea fec9 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802226a:	4603      	mov	r3, r0
 802226c:	2200      	movs	r2, #0
 802226e:	4619      	mov	r1, r3
 8022270:	68f8      	ldr	r0, [r7, #12]
 8022272:	f007 f8d7 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8022276:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 802227a:	2b01      	cmp	r3, #1
 802227c:	f040 8096 	bne.w	80223ac <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2bc>
 8022280:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8022284:	781b      	ldrb	r3, [r3, #0]
 8022286:	2b01      	cmp	r3, #1
 8022288:	d00f      	beq.n	80222aa <2058bb475204def8ad39a4c1db4c087e75b9f860+0x1ba>
 802228a:	4a74      	ldr	r2, [pc, #464]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 802228c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8022290:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022294:	e883 0003 	stmia.w	r3, {r0, r1}
 8022298:	4a71      	ldr	r2, [pc, #452]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 802229a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 802229e:	e893 0003 	ldmia.w	r3, {r0, r1}
 80222a2:	f7f2 ffb1 	bl	8015208 <LOGGER_PrintLine>
 80222a6:	2300      	movs	r3, #0
 80222a8:	e188      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 80222aa:	2200      	movs	r2, #0
 80222ac:	f8d7 10a0 	ldr.w	r1, [r7, #160]	; 0xa0
 80222b0:	68f8      	ldr	r0, [r7, #12]
 80222b2:	f007 f8b7 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 80222b6:	e079      	b.n	80223ac <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2bc>
 80222b8:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 80222bc:	2b02      	cmp	r3, #2
 80222be:	d108      	bne.n	80222d2 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x1e2>
 80222c0:	2002      	movs	r0, #2
 80222c2:	f7ea fe9b 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80222c6:	4603      	mov	r3, r0
 80222c8:	2200      	movs	r2, #0
 80222ca:	4619      	mov	r1, r3
 80222cc:	68f8      	ldr	r0, [r7, #12]
 80222ce:	f007 f8a9 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 80222d2:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 80222d6:	2b01      	cmp	r3, #1
 80222d8:	d16a      	bne.n	80223b0 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c0>
 80222da:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80222de:	781b      	ldrb	r3, [r3, #0]
 80222e0:	2b02      	cmp	r3, #2
 80222e2:	d00f      	beq.n	8022304 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x214>
 80222e4:	4a5d      	ldr	r2, [pc, #372]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 80222e6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80222ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 80222ee:	e883 0003 	stmia.w	r3, {r0, r1}
 80222f2:	4a5b      	ldr	r2, [pc, #364]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 80222f4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80222f8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80222fc:	f7f2 ff84 	bl	8015208 <LOGGER_PrintLine>
 8022300:	2300      	movs	r3, #0
 8022302:	e15b      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 8022304:	2200      	movs	r2, #0
 8022306:	f8d7 10a0 	ldr.w	r1, [r7, #160]	; 0xa0
 802230a:	68f8      	ldr	r0, [r7, #12]
 802230c:	f007 f88a 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8022310:	e04e      	b.n	80223b0 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c0>
 8022312:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 8022316:	2b02      	cmp	r3, #2
 8022318:	d111      	bne.n	802233e <2058bb475204def8ad39a4c1db4c087e75b9f860+0x24e>
 802231a:	2002      	movs	r0, #2
 802231c:	f7ea fe6e 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8022320:	4603      	mov	r3, r0
 8022322:	2200      	movs	r2, #0
 8022324:	4619      	mov	r1, r3
 8022326:	68f8      	ldr	r0, [r7, #12]
 8022328:	f007 f87c 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802232c:	2005      	movs	r0, #5
 802232e:	f7ea fe65 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8022332:	4603      	mov	r3, r0
 8022334:	2200      	movs	r2, #0
 8022336:	4619      	mov	r1, r3
 8022338:	68f8      	ldr	r0, [r7, #12]
 802233a:	f007 f873 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802233e:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 8022342:	2b01      	cmp	r3, #1
 8022344:	d136      	bne.n	80223b4 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c4>
 8022346:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 802234a:	781b      	ldrb	r3, [r3, #0]
 802234c:	2b03      	cmp	r3, #3
 802234e:	d00f      	beq.n	8022370 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x280>
 8022350:	4a42      	ldr	r2, [pc, #264]	; (802245c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x36c>)
 8022352:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8022356:	e892 0003 	ldmia.w	r2, {r0, r1}
 802235a:	e883 0003 	stmia.w	r3, {r0, r1}
 802235e:	4a40      	ldr	r2, [pc, #256]	; (8022460 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x370>)
 8022360:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8022364:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022368:	f7f2 ff4e 	bl	8015208 <LOGGER_PrintLine>
 802236c:	2300      	movs	r3, #0
 802236e:	e125      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 8022370:	2200      	movs	r2, #0
 8022372:	f8d7 10a0 	ldr.w	r1, [r7, #160]	; 0xa0
 8022376:	68f8      	ldr	r0, [r7, #12]
 8022378:	f007 f854 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802237c:	e01a      	b.n	80223b4 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c4>
 802237e:	4a39      	ldr	r2, [pc, #228]	; (8022464 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x374>)
 8022380:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8022384:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022388:	e883 0003 	stmia.w	r3, {r0, r1}
 802238c:	f897 2098 	ldrb.w	r2, [r7, #152]	; 0x98
 8022390:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022394:	9300      	str	r3, [sp, #0]
 8022396:	4613      	mov	r3, r2
 8022398:	4a34      	ldr	r2, [pc, #208]	; (802246c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x37c>)
 802239a:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 802239e:	c903      	ldmia	r1, {r0, r1}
 80223a0:	f7f2 ff32 	bl	8015208 <LOGGER_PrintLine>
 80223a4:	2300      	movs	r3, #0
 80223a6:	e109      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 80223a8:	bf00      	nop
 80223aa:	e004      	b.n	80223b6 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c6>
 80223ac:	bf00      	nop
 80223ae:	e002      	b.n	80223b6 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c6>
 80223b0:	bf00      	nop
 80223b2:	e000      	b.n	80223b6 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2c6>
 80223b4:	bf00      	nop
 80223b6:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 80223ba:	2b00      	cmp	r3, #0
 80223bc:	d005      	beq.n	80223ca <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2da>
 80223be:	2b00      	cmp	r3, #0
 80223c0:	db0d      	blt.n	80223de <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2ee>
 80223c2:	3b01      	subs	r3, #1
 80223c4:	2b02      	cmp	r3, #2
 80223c6:	d80a      	bhi.n	80223de <2058bb475204def8ad39a4c1db4c087e75b9f860+0x2ee>
 80223c8:	e019      	b.n	80223fe <2058bb475204def8ad39a4c1db4c087e75b9f860+0x30e>
 80223ca:	2101      	movs	r1, #1
 80223cc:	68f8      	ldr	r0, [r7, #12]
 80223ce:	f007 f861 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80223d2:	68fb      	ldr	r3, [r7, #12]
 80223d4:	685b      	ldr	r3, [r3, #4]
 80223d6:	f897 2080 	ldrb.w	r2, [r7, #128]	; 0x80
 80223da:	701a      	strb	r2, [r3, #0]
 80223dc:	e00f      	b.n	80223fe <2058bb475204def8ad39a4c1db4c087e75b9f860+0x30e>
 80223de:	4a21      	ldr	r2, [pc, #132]	; (8022464 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x374>)
 80223e0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80223e4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80223e8:	e883 0003 	stmia.w	r3, {r0, r1}
 80223ec:	4a20      	ldr	r2, [pc, #128]	; (8022470 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x380>)
 80223ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80223f2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80223f6:	f7f2 ff07 	bl	8015208 <LOGGER_PrintLine>
 80223fa:	2300      	movs	r3, #0
 80223fc:	e0de      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 80223fe:	7abb      	ldrb	r3, [r7, #10]
 8022400:	2b00      	cmp	r3, #0
 8022402:	d002      	beq.n	802240a <2058bb475204def8ad39a4c1db4c087e75b9f860+0x31a>
 8022404:	2b01      	cmp	r3, #1
 8022406:	d01a      	beq.n	802243e <2058bb475204def8ad39a4c1db4c087e75b9f860+0x34e>
 8022408:	e009      	b.n	802241e <2058bb475204def8ad39a4c1db4c087e75b9f860+0x32e>
 802240a:	2101      	movs	r1, #1
 802240c:	68f8      	ldr	r0, [r7, #12]
 802240e:	f007 f841 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8022412:	68fb      	ldr	r3, [r7, #12]
 8022414:	685b      	ldr	r3, [r3, #4]
 8022416:	f897 2078 	ldrb.w	r2, [r7, #120]	; 0x78
 802241a:	701a      	strb	r2, [r3, #0]
 802241c:	e010      	b.n	8022440 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x350>
 802241e:	4a11      	ldr	r2, [pc, #68]	; (8022464 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x374>)
 8022420:	f107 031c 	add.w	r3, r7, #28
 8022424:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022428:	e883 0003 	stmia.w	r3, {r0, r1}
 802242c:	4a11      	ldr	r2, [pc, #68]	; (8022474 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x384>)
 802242e:	f107 031c 	add.w	r3, r7, #28
 8022432:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022436:	f7f2 fee7 	bl	8015208 <LOGGER_PrintLine>
 802243a:	2300      	movs	r3, #0
 802243c:	e0be      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 802243e:	bf00      	nop
 8022440:	7afb      	ldrb	r3, [r7, #11]
 8022442:	2b03      	cmp	r3, #3
 8022444:	d865      	bhi.n	8022512 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x422>
 8022446:	a201      	add	r2, pc, #4	; (adr r2, 802244c <2058bb475204def8ad39a4c1db4c087e75b9f860+0x35c>)
 8022448:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802244c:	080224c7 	.word	0x080224c7
 8022450:	0802248b 	.word	0x0802248b
 8022454:	08022479 	.word	0x08022479
 8022458:	08022533 	.word	0x08022533
 802245c:	080309fc 	.word	0x080309fc
 8022460:	08030a04 	.word	0x08030a04
 8022464:	08030a80 	.word	0x08030a80
 8022468:	08030a18 	.word	0x08030a18
 802246c:	08030a34 	.word	0x08030a34
 8022470:	08030a50 	.word	0x08030a50
 8022474:	08030a60 	.word	0x08030a60
 8022478:	2101      	movs	r1, #1
 802247a:	68f8      	ldr	r0, [r7, #12]
 802247c:	f007 f80a 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8022480:	68fb      	ldr	r3, [r7, #12]
 8022482:	685b      	ldr	r3, [r3, #4]
 8022484:	2200      	movs	r2, #0
 8022486:	701a      	strb	r2, [r3, #0]
 8022488:	e054      	b.n	8022534 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x444>
 802248a:	2101      	movs	r1, #1
 802248c:	68f8      	ldr	r0, [r7, #12]
 802248e:	f007 f801 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8022492:	68fb      	ldr	r3, [r7, #12]
 8022494:	685b      	ldr	r3, [r3, #4]
 8022496:	687a      	ldr	r2, [r7, #4]
 8022498:	b2d2      	uxtb	r2, r2
 802249a:	701a      	strb	r2, [r3, #0]
 802249c:	2101      	movs	r1, #1
 802249e:	68f8      	ldr	r0, [r7, #12]
 80224a0:	f006 fff8 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80224a4:	687b      	ldr	r3, [r7, #4]
 80224a6:	0a1a      	lsrs	r2, r3, #8
 80224a8:	68fb      	ldr	r3, [r7, #12]
 80224aa:	685b      	ldr	r3, [r3, #4]
 80224ac:	b2d2      	uxtb	r2, r2
 80224ae:	701a      	strb	r2, [r3, #0]
 80224b0:	2101      	movs	r1, #1
 80224b2:	68f8      	ldr	r0, [r7, #12]
 80224b4:	f006 ffee 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80224b8:	687b      	ldr	r3, [r7, #4]
 80224ba:	0c1a      	lsrs	r2, r3, #16
 80224bc:	68fb      	ldr	r3, [r7, #12]
 80224be:	685b      	ldr	r3, [r3, #4]
 80224c0:	b2d2      	uxtb	r2, r2
 80224c2:	701a      	strb	r2, [r3, #0]
 80224c4:	e036      	b.n	8022534 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x444>
 80224c6:	2101      	movs	r1, #1
 80224c8:	68f8      	ldr	r0, [r7, #12]
 80224ca:	f006 ffe3 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80224ce:	68fb      	ldr	r3, [r7, #12]
 80224d0:	685b      	ldr	r3, [r3, #4]
 80224d2:	687a      	ldr	r2, [r7, #4]
 80224d4:	b2d2      	uxtb	r2, r2
 80224d6:	701a      	strb	r2, [r3, #0]
 80224d8:	2101      	movs	r1, #1
 80224da:	68f8      	ldr	r0, [r7, #12]
 80224dc:	f006 ffda 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80224e0:	687b      	ldr	r3, [r7, #4]
 80224e2:	0a1a      	lsrs	r2, r3, #8
 80224e4:	68fb      	ldr	r3, [r7, #12]
 80224e6:	685b      	ldr	r3, [r3, #4]
 80224e8:	b2d2      	uxtb	r2, r2
 80224ea:	701a      	strb	r2, [r3, #0]
 80224ec:	2101      	movs	r1, #1
 80224ee:	68f8      	ldr	r0, [r7, #12]
 80224f0:	f006 ffd0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80224f4:	687b      	ldr	r3, [r7, #4]
 80224f6:	0c1a      	lsrs	r2, r3, #16
 80224f8:	68fb      	ldr	r3, [r7, #12]
 80224fa:	685b      	ldr	r3, [r3, #4]
 80224fc:	b2d2      	uxtb	r2, r2
 80224fe:	701a      	strb	r2, [r3, #0]
 8022500:	2101      	movs	r1, #1
 8022502:	68f8      	ldr	r0, [r7, #12]
 8022504:	f006 ffc6 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8022508:	68fb      	ldr	r3, [r7, #12]
 802250a:	685b      	ldr	r3, [r3, #4]
 802250c:	2200      	movs	r2, #0
 802250e:	701a      	strb	r2, [r3, #0]
 8022510:	e010      	b.n	8022534 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x444>
 8022512:	4a2c      	ldr	r2, [pc, #176]	; (80225c4 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4d4>)
 8022514:	f107 0314 	add.w	r3, r7, #20
 8022518:	e892 0003 	ldmia.w	r2, {r0, r1}
 802251c:	e883 0003 	stmia.w	r3, {r0, r1}
 8022520:	4a29      	ldr	r2, [pc, #164]	; (80225c8 <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4d8>)
 8022522:	f107 0314 	add.w	r3, r7, #20
 8022526:	e893 0003 	ldmia.w	r3, {r0, r1}
 802252a:	f7f2 fe6d 	bl	8015208 <LOGGER_PrintLine>
 802252e:	2300      	movs	r3, #0
 8022530:	e044      	b.n	80225bc <2058bb475204def8ad39a4c1db4c087e75b9f860+0x4cc>
 8022532:	bf00      	nop
 8022534:	f897 3084 	ldrb.w	r3, [r7, #132]	; 0x84
 8022538:	01db      	lsls	r3, r3, #7
 802253a:	b2da      	uxtb	r2, r3
 802253c:	f897 3088 	ldrb.w	r3, [r7, #136]	; 0x88
 8022540:	019b      	lsls	r3, r3, #6
 8022542:	b2db      	uxtb	r3, r3
 8022544:	4313      	orrs	r3, r2
 8022546:	b2da      	uxtb	r2, r3
 8022548:	f897 308c 	ldrb.w	r3, [r7, #140]	; 0x8c
 802254c:	011b      	lsls	r3, r3, #4
 802254e:	b2db      	uxtb	r3, r3
 8022550:	4313      	orrs	r3, r2
 8022552:	b2da      	uxtb	r2, r3
 8022554:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8022558:	00db      	lsls	r3, r3, #3
 802255a:	b2db      	uxtb	r3, r3
 802255c:	4313      	orrs	r3, r2
 802255e:	b2da      	uxtb	r2, r3
 8022560:	f897 3094 	ldrb.w	r3, [r7, #148]	; 0x94
 8022564:	009b      	lsls	r3, r3, #2
 8022566:	b2db      	uxtb	r3, r3
 8022568:	4313      	orrs	r3, r2
 802256a:	b2da      	uxtb	r2, r3
 802256c:	f897 3098 	ldrb.w	r3, [r7, #152]	; 0x98
 8022570:	4313      	orrs	r3, r2
 8022572:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8022576:	2101      	movs	r1, #1
 8022578:	68f8      	ldr	r0, [r7, #12]
 802257a:	f006 ff8b 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802257e:	68fb      	ldr	r3, [r7, #12]
 8022580:	685b      	ldr	r3, [r3, #4]
 8022582:	f897 206f 	ldrb.w	r2, [r7, #111]	; 0x6f
 8022586:	701a      	strb	r2, [r3, #0]
 8022588:	7afb      	ldrb	r3, [r7, #11]
 802258a:	00db      	lsls	r3, r3, #3
 802258c:	b2da      	uxtb	r2, r3
 802258e:	7abb      	ldrb	r3, [r7, #10]
 8022590:	009b      	lsls	r3, r3, #2
 8022592:	b2db      	uxtb	r3, r3
 8022594:	4313      	orrs	r3, r2
 8022596:	b2da      	uxtb	r2, r3
 8022598:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 802259c:	4313      	orrs	r3, r2
 802259e:	b2db      	uxtb	r3, r3
 80225a0:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80225a4:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 80225a8:	2101      	movs	r1, #1
 80225aa:	68f8      	ldr	r0, [r7, #12]
 80225ac:	f006 ff72 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80225b0:	68fb      	ldr	r3, [r7, #12]
 80225b2:	685b      	ldr	r3, [r3, #4]
 80225b4:	f897 206e 	ldrb.w	r2, [r7, #110]	; 0x6e
 80225b8:	701a      	strb	r2, [r3, #0]
 80225ba:	2301      	movs	r3, #1
 80225bc:	4618      	mov	r0, r3
 80225be:	3770      	adds	r7, #112	; 0x70
 80225c0:	46bd      	mov	sp, r7
 80225c2:	bd80      	pop	{r7, pc}
 80225c4:	08030a80 	.word	0x08030a80
 80225c8:	08030a70 	.word	0x08030a70

080225cc <fdb5ac47f2c02ab26c1329e13b6119b2272b663d>:
 80225cc:	b5b0      	push	{r4, r5, r7, lr}
 80225ce:	b0a8      	sub	sp, #160	; 0xa0
 80225d0:	af08      	add	r7, sp, #32
 80225d2:	6278      	str	r0, [r7, #36]	; 0x24
 80225d4:	6239      	str	r1, [r7, #32]
 80225d6:	61fa      	str	r2, [r7, #28]
 80225d8:	61bb      	str	r3, [r7, #24]
 80225da:	2300      	movs	r3, #0
 80225dc:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d
 80225e0:	69bb      	ldr	r3, [r7, #24]
 80225e2:	2200      	movs	r2, #0
 80225e4:	701a      	strb	r2, [r3, #0]
 80225e6:	2300      	movs	r3, #0
 80225e8:	f887 307c 	strb.w	r3, [r7, #124]	; 0x7c
 80225ec:	6a3b      	ldr	r3, [r7, #32]
 80225ee:	2200      	movs	r2, #0
 80225f0:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80225f4:	69fb      	ldr	r3, [r7, #28]
 80225f6:	2200      	movs	r2, #0
 80225f8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80225fc:	6a3b      	ldr	r3, [r7, #32]
 80225fe:	2200      	movs	r2, #0
 8022600:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8022604:	2300      	movs	r3, #0
 8022606:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 802260a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802260c:	685b      	ldr	r3, [r3, #4]
 802260e:	6a3a      	ldr	r2, [r7, #32]
 8022610:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8022614:	4413      	add	r3, r2
 8022616:	781b      	ldrb	r3, [r3, #0]
 8022618:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 802261c:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8022620:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8022624:	2bf0      	cmp	r3, #240	; 0xf0
 8022626:	d10c      	bne.n	8022642 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x76>
 8022628:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 802262c:	f003 030f 	and.w	r3, r3, #15
 8022630:	f887 307e 	strb.w	r3, [r7, #126]	; 0x7e
 8022634:	2301      	movs	r3, #1
 8022636:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d
 802263a:	69bb      	ldr	r3, [r7, #24]
 802263c:	2201      	movs	r2, #1
 802263e:	701a      	strb	r2, [r3, #0]
 8022640:	e002      	b.n	8022648 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x7c>
 8022642:	2300      	movs	r3, #0
 8022644:	f887 307e 	strb.w	r3, [r7, #126]	; 0x7e
 8022648:	f897 307e 	ldrb.w	r3, [r7, #126]	; 0x7e
 802264c:	2b01      	cmp	r3, #1
 802264e:	f040 8288 	bne.w	8022b62 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x596>
 8022652:	2300      	movs	r3, #0
 8022654:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 8022658:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802265a:	685a      	ldr	r2, [r3, #4]
 802265c:	69bb      	ldr	r3, [r7, #24]
 802265e:	781b      	ldrb	r3, [r3, #0]
 8022660:	4619      	mov	r1, r3
 8022662:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022666:	440b      	add	r3, r1
 8022668:	4413      	add	r3, r2
 802266a:	781b      	ldrb	r3, [r3, #0]
 802266c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 8022670:	e269      	b.n	8022b46 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x57a>
 8022672:	2300      	movs	r3, #0
 8022674:	f887 307d 	strb.w	r3, [r7, #125]	; 0x7d
 8022678:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 802267c:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8022680:	2b80      	cmp	r3, #128	; 0x80
 8022682:	d003      	beq.n	802268c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xc0>
 8022684:	2ba0      	cmp	r3, #160	; 0xa0
 8022686:	f000 812e 	beq.w	80228e6 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x31a>
 802268a:	e247      	b.n	8022b1c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x550>
 802268c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802268e:	685a      	ldr	r2, [r3, #4]
 8022690:	69bb      	ldr	r3, [r7, #24]
 8022692:	781b      	ldrb	r3, [r3, #0]
 8022694:	4619      	mov	r1, r3
 8022696:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 802269a:	440b      	add	r3, r1
 802269c:	3301      	adds	r3, #1
 802269e:	4413      	add	r3, r2
 80226a0:	781b      	ldrb	r3, [r3, #0]
 80226a2:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 80226a6:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 80226aa:	2b04      	cmp	r3, #4
 80226ac:	d90c      	bls.n	80226c8 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xfc>
 80226ae:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 80226b2:	2bfd      	cmp	r3, #253	; 0xfd
 80226b4:	d008      	beq.n	80226c8 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xfc>
 80226b6:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 80226ba:	2bfe      	cmp	r3, #254	; 0xfe
 80226bc:	d004      	beq.n	80226c8 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xfc>
 80226be:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 80226c2:	2bff      	cmp	r3, #255	; 0xff
 80226c4:	f040 80c3 	bne.w	802284e <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x282>
 80226c8:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 80226cc:	2b05      	cmp	r3, #5
 80226ce:	d10e      	bne.n	80226ee <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x122>
 80226d0:	4abe      	ldr	r2, [pc, #760]	; (80229cc <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x400>)
 80226d2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80226d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80226da:	e883 0003 	stmia.w	r3, {r0, r1}
 80226de:	4abc      	ldr	r2, [pc, #752]	; (80229d0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x404>)
 80226e0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80226e4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80226e8:	f7f2 fd8e 	bl	8015208 <LOGGER_PrintLine>
 80226ec:	e26d      	b.n	8022bca <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x5fe>
 80226ee:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 80226f2:	2b00      	cmp	r3, #0
 80226f4:	d106      	bne.n	8022704 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x138>
 80226f6:	6a3b      	ldr	r3, [r7, #32]
 80226f8:	6a1b      	ldr	r3, [r3, #32]
 80226fa:	2b00      	cmp	r3, #0
 80226fc:	d102      	bne.n	8022704 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x138>
 80226fe:	6a3b      	ldr	r3, [r7, #32]
 8022700:	222b      	movs	r2, #43	; 0x2b
 8022702:	725a      	strb	r2, [r3, #9]
 8022704:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022706:	6859      	ldr	r1, [r3, #4]
 8022708:	69bb      	ldr	r3, [r7, #24]
 802270a:	781b      	ldrb	r3, [r3, #0]
 802270c:	461a      	mov	r2, r3
 802270e:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022712:	441a      	add	r2, r3
 8022714:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 8022718:	440a      	add	r2, r1
 802271a:	6a39      	ldr	r1, [r7, #32]
 802271c:	3302      	adds	r3, #2
 802271e:	009b      	lsls	r3, r3, #2
 8022720:	440b      	add	r3, r1
 8022722:	605a      	str	r2, [r3, #4]
 8022724:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8022728:	f003 031f 	and.w	r3, r3, #31
 802272c:	f887 3078 	strb.w	r3, [r7, #120]	; 0x78
 8022730:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 8022734:	3301      	adds	r3, #1
 8022736:	f887 3078 	strb.w	r3, [r7, #120]	; 0x78
 802273a:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 802273e:	2bff      	cmp	r3, #255	; 0xff
 8022740:	d076      	beq.n	8022830 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x264>
 8022742:	2bff      	cmp	r3, #255	; 0xff
 8022744:	f300 80cd 	bgt.w	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 8022748:	2bfe      	cmp	r3, #254	; 0xfe
 802274a:	d062      	beq.n	8022812 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x246>
 802274c:	2bfe      	cmp	r3, #254	; 0xfe
 802274e:	f300 80c8 	bgt.w	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 8022752:	2b04      	cmp	r3, #4
 8022754:	dc12      	bgt.n	802277c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x1b0>
 8022756:	2b00      	cmp	r3, #0
 8022758:	f2c0 80c3 	blt.w	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 802275c:	2b04      	cmp	r3, #4
 802275e:	f200 80c0 	bhi.w	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 8022762:	a201      	add	r2, pc, #4	; (adr r2, 8022768 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x19c>)
 8022764:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022768:	08022783 	.word	0x08022783
 802276c:	08022797 	.word	0x08022797
 8022770:	080227af 	.word	0x080227af
 8022774:	080227c7 	.word	0x080227c7
 8022778:	080227df 	.word	0x080227df
 802277c:	2bfd      	cmp	r3, #253	; 0xfd
 802277e:	d03a      	beq.n	80227f6 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x22a>
 8022780:	e0af      	b.n	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 8022782:	f897 207b 	ldrb.w	r2, [r7, #123]	; 0x7b
 8022786:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 802278a:	4413      	add	r3, r2
 802278c:	b2db      	uxtb	r3, r3
 802278e:	3302      	adds	r3, #2
 8022790:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 8022794:	e05a      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 8022796:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 802279a:	005b      	lsls	r3, r3, #1
 802279c:	b2da      	uxtb	r2, r3
 802279e:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80227a2:	4413      	add	r3, r2
 80227a4:	b2db      	uxtb	r3, r3
 80227a6:	3302      	adds	r3, #2
 80227a8:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80227ac:	e04e      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 80227ae:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 80227b2:	009b      	lsls	r3, r3, #2
 80227b4:	b2da      	uxtb	r2, r3
 80227b6:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80227ba:	4413      	add	r3, r2
 80227bc:	b2db      	uxtb	r3, r3
 80227be:	3302      	adds	r3, #2
 80227c0:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80227c4:	e042      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 80227c6:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 80227ca:	00db      	lsls	r3, r3, #3
 80227cc:	b2da      	uxtb	r2, r3
 80227ce:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80227d2:	4413      	add	r3, r2
 80227d4:	b2db      	uxtb	r3, r3
 80227d6:	3302      	adds	r3, #2
 80227d8:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80227dc:	e036      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 80227de:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 80227e2:	011b      	lsls	r3, r3, #4
 80227e4:	b2da      	uxtb	r2, r3
 80227e6:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80227ea:	4413      	add	r3, r2
 80227ec:	b2db      	uxtb	r3, r3
 80227ee:	3302      	adds	r3, #2
 80227f0:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80227f4:	e02a      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 80227f6:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 80227fa:	461a      	mov	r2, r3
 80227fc:	0092      	lsls	r2, r2, #2
 80227fe:	4413      	add	r3, r2
 8022800:	b2da      	uxtb	r2, r3
 8022802:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022806:	4413      	add	r3, r2
 8022808:	b2db      	uxtb	r3, r3
 802280a:	3302      	adds	r3, #2
 802280c:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 8022810:	e01c      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 8022812:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 8022816:	461a      	mov	r2, r3
 8022818:	0052      	lsls	r2, r2, #1
 802281a:	4413      	add	r3, r2
 802281c:	005b      	lsls	r3, r3, #1
 802281e:	b2da      	uxtb	r2, r3
 8022820:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022824:	4413      	add	r3, r2
 8022826:	b2db      	uxtb	r3, r3
 8022828:	3302      	adds	r3, #2
 802282a:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 802282e:	e00d      	b.n	802284c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x280>
 8022830:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 8022834:	461a      	mov	r2, r3
 8022836:	00d2      	lsls	r2, r2, #3
 8022838:	1ad3      	subs	r3, r2, r3
 802283a:	b2da      	uxtb	r2, r3
 802283c:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022840:	4413      	add	r3, r2
 8022842:	b2db      	uxtb	r3, r3
 8022844:	3302      	adds	r3, #2
 8022846:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 802284a:	bf00      	nop
 802284c:	e049      	b.n	80228e2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x316>
 802284e:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 8022852:	2b05      	cmp	r3, #5
 8022854:	d136      	bne.n	80228c4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x2f8>
 8022856:	6a3b      	ldr	r3, [r7, #32]
 8022858:	68db      	ldr	r3, [r3, #12]
 802285a:	2b00      	cmp	r3, #0
 802285c:	d102      	bne.n	8022864 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x298>
 802285e:	6a3b      	ldr	r3, [r7, #32]
 8022860:	2200      	movs	r2, #0
 8022862:	725a      	strb	r2, [r3, #9]
 8022864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022866:	685a      	ldr	r2, [r3, #4]
 8022868:	69bb      	ldr	r3, [r7, #24]
 802286a:	781b      	ldrb	r3, [r3, #0]
 802286c:	4619      	mov	r1, r3
 802286e:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022872:	440b      	add	r3, r1
 8022874:	441a      	add	r2, r3
 8022876:	6a3b      	ldr	r3, [r7, #32]
 8022878:	621a      	str	r2, [r3, #32]
 802287a:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 802287e:	f003 0303 	and.w	r3, r3, #3
 8022882:	2b03      	cmp	r3, #3
 8022884:	d018      	beq.n	80228b8 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x2ec>
 8022886:	2b03      	cmp	r3, #3
 8022888:	f300 8147 	bgt.w	8022b1a <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54e>
 802288c:	2b00      	cmp	r3, #0
 802288e:	d007      	beq.n	80228a0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x2d4>
 8022890:	2b00      	cmp	r3, #0
 8022892:	f2c0 8142 	blt.w	8022b1a <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54e>
 8022896:	3b01      	subs	r3, #1
 8022898:	2b01      	cmp	r3, #1
 802289a:	f200 813e 	bhi.w	8022b1a <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54e>
 802289e:	e005      	b.n	80228ac <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x2e0>
 80228a0:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80228a4:	3305      	adds	r3, #5
 80228a6:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80228aa:	e01b      	b.n	80228e4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x318>
 80228ac:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80228b0:	3304      	adds	r3, #4
 80228b2:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80228b6:	e015      	b.n	80228e4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x318>
 80228b8:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80228bc:	3303      	adds	r3, #3
 80228be:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 80228c2:	e00f      	b.n	80228e4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x318>
 80228c4:	4a41      	ldr	r2, [pc, #260]	; (80229cc <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x400>)
 80228c6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80228ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 80228ce:	e883 0003 	stmia.w	r3, {r0, r1}
 80228d2:	4a3f      	ldr	r2, [pc, #252]	; (80229d0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x404>)
 80228d4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80228d8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80228dc:	f7f2 fc94 	bl	8015208 <LOGGER_PrintLine>
 80228e0:	e11b      	b.n	8022b1a <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54e>
 80228e2:	bf00      	nop
 80228e4:	e119      	b.n	8022b1a <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54e>
 80228e6:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 80228ea:	f003 031f 	and.w	r3, r3, #31
 80228ee:	f887 307a 	strb.w	r3, [r7, #122]	; 0x7a
 80228f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80228f4:	685a      	ldr	r2, [r3, #4]
 80228f6:	6a3b      	ldr	r3, [r7, #32]
 80228f8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80228fc:	4619      	mov	r1, r3
 80228fe:	69bb      	ldr	r3, [r7, #24]
 8022900:	781b      	ldrb	r3, [r3, #0]
 8022902:	4419      	add	r1, r3
 8022904:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022908:	440b      	add	r3, r1
 802290a:	3301      	adds	r3, #1
 802290c:	4413      	add	r3, r2
 802290e:	781b      	ldrb	r3, [r3, #0]
 8022910:	f887 3079 	strb.w	r3, [r7, #121]	; 0x79
 8022914:	f897 3079 	ldrb.w	r3, [r7, #121]	; 0x79
 8022918:	2b06      	cmp	r3, #6
 802291a:	f040 80d9 	bne.w	8022ad0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x504>
 802291e:	6a3b      	ldr	r3, [r7, #32]
 8022920:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022924:	3301      	adds	r3, #1
 8022926:	b2da      	uxtb	r2, r3
 8022928:	6a3b      	ldr	r3, [r7, #32]
 802292a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802292e:	6a3b      	ldr	r3, [r7, #32]
 8022930:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022934:	3301      	adds	r3, #1
 8022936:	b2da      	uxtb	r2, r3
 8022938:	6a3b      	ldr	r3, [r7, #32]
 802293a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802293e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022940:	685a      	ldr	r2, [r3, #4]
 8022942:	6a3b      	ldr	r3, [r7, #32]
 8022944:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022948:	4619      	mov	r1, r3
 802294a:	69bb      	ldr	r3, [r7, #24]
 802294c:	781b      	ldrb	r3, [r3, #0]
 802294e:	4419      	add	r1, r3
 8022950:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022954:	440b      	add	r3, r1
 8022956:	4413      	add	r3, r2
 8022958:	781a      	ldrb	r2, [r3, #0]
 802295a:	6a3b      	ldr	r3, [r7, #32]
 802295c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8022960:	6a3b      	ldr	r3, [r7, #32]
 8022962:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022966:	3301      	adds	r3, #1
 8022968:	b2da      	uxtb	r2, r3
 802296a:	6a3b      	ldr	r3, [r7, #32]
 802296c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022970:	6a3b      	ldr	r3, [r7, #32]
 8022972:	2200      	movs	r2, #0
 8022974:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8022978:	6a3b      	ldr	r3, [r7, #32]
 802297a:	3338      	adds	r3, #56	; 0x38
 802297c:	2210      	movs	r2, #16
 802297e:	2100      	movs	r1, #0
 8022980:	4618      	mov	r0, r3
 8022982:	f008 fbb9 	bl	802b0f8 <memset>
 8022986:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 802298a:	2b01      	cmp	r3, #1
 802298c:	d124      	bne.n	80229d8 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x40c>
 802298e:	6a3b      	ldr	r3, [r7, #32]
 8022990:	3326      	adds	r3, #38	; 0x26
 8022992:	2211      	movs	r2, #17
 8022994:	2100      	movs	r1, #0
 8022996:	4618      	mov	r0, r3
 8022998:	f008 fbae 	bl	802b0f8 <memset>
 802299c:	2005      	movs	r0, #5
 802299e:	f7ea fb2d 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80229a2:	4601      	mov	r1, r0
 80229a4:	6a3c      	ldr	r4, [r7, #32]
 80229a6:	463b      	mov	r3, r7
 80229a8:	4a0a      	ldr	r2, [pc, #40]	; (80229d4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x408>)
 80229aa:	4618      	mov	r0, r3
 80229ac:	f7ec f990 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 80229b0:	f104 0326 	add.w	r3, r4, #38	; 0x26
 80229b4:	463a      	mov	r2, r7
 80229b6:	6815      	ldr	r5, [r2, #0]
 80229b8:	6854      	ldr	r4, [r2, #4]
 80229ba:	6890      	ldr	r0, [r2, #8]
 80229bc:	68d1      	ldr	r1, [r2, #12]
 80229be:	601d      	str	r5, [r3, #0]
 80229c0:	605c      	str	r4, [r3, #4]
 80229c2:	6098      	str	r0, [r3, #8]
 80229c4:	60d9      	str	r1, [r3, #12]
 80229c6:	7c12      	ldrb	r2, [r2, #16]
 80229c8:	741a      	strb	r2, [r3, #16]
 80229ca:	e0a7      	b.n	8022b1c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x550>
 80229cc:	080309fc 	.word	0x080309fc
 80229d0:	08030a88 	.word	0x08030a88
 80229d4:	08031aa4 	.word	0x08031aa4
 80229d8:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 80229dc:	3b01      	subs	r3, #1
 80229de:	2b08      	cmp	r3, #8
 80229e0:	d02a      	beq.n	8022a38 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x46c>
 80229e2:	2b10      	cmp	r3, #16
 80229e4:	d165      	bne.n	8022ab2 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x4e6>
 80229e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80229e8:	685a      	ldr	r2, [r3, #4]
 80229ea:	6a3b      	ldr	r3, [r7, #32]
 80229ec:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80229f0:	4619      	mov	r1, r3
 80229f2:	69bb      	ldr	r3, [r7, #24]
 80229f4:	781b      	ldrb	r3, [r3, #0]
 80229f6:	4419      	add	r1, r3
 80229f8:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 80229fc:	440b      	add	r3, r1
 80229fe:	18d1      	adds	r1, r2, r3
 8022a00:	6a3c      	ldr	r4, [r7, #32]
 8022a02:	4638      	mov	r0, r7
 8022a04:	2300      	movs	r3, #0
 8022a06:	2203      	movs	r2, #3
 8022a08:	f006 fcbe 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8022a0c:	f104 0326 	add.w	r3, r4, #38	; 0x26
 8022a10:	463a      	mov	r2, r7
 8022a12:	6815      	ldr	r5, [r2, #0]
 8022a14:	6854      	ldr	r4, [r2, #4]
 8022a16:	6890      	ldr	r0, [r2, #8]
 8022a18:	68d1      	ldr	r1, [r2, #12]
 8022a1a:	601d      	str	r5, [r3, #0]
 8022a1c:	605c      	str	r4, [r3, #4]
 8022a1e:	6098      	str	r0, [r3, #8]
 8022a20:	60d9      	str	r1, [r3, #12]
 8022a22:	7c12      	ldrb	r2, [r2, #16]
 8022a24:	741a      	strb	r2, [r3, #16]
 8022a26:	6a3b      	ldr	r3, [r7, #32]
 8022a28:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022a2c:	3310      	adds	r3, #16
 8022a2e:	b2da      	uxtb	r2, r3
 8022a30:	6a3b      	ldr	r3, [r7, #32]
 8022a32:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022a36:	e06f      	b.n	8022b18 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54c>
 8022a38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022a3a:	685a      	ldr	r2, [r3, #4]
 8022a3c:	6a3b      	ldr	r3, [r7, #32]
 8022a3e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022a42:	4619      	mov	r1, r3
 8022a44:	69bb      	ldr	r3, [r7, #24]
 8022a46:	781b      	ldrb	r3, [r3, #0]
 8022a48:	4419      	add	r1, r3
 8022a4a:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022a4e:	440b      	add	r3, r1
 8022a50:	18d1      	adds	r1, r2, r3
 8022a52:	4638      	mov	r0, r7
 8022a54:	2300      	movs	r3, #0
 8022a56:	2202      	movs	r2, #2
 8022a58:	f006 fc96 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8022a5c:	f107 0450 	add.w	r4, r7, #80	; 0x50
 8022a60:	463d      	mov	r5, r7
 8022a62:	6828      	ldr	r0, [r5, #0]
 8022a64:	6869      	ldr	r1, [r5, #4]
 8022a66:	68aa      	ldr	r2, [r5, #8]
 8022a68:	68eb      	ldr	r3, [r5, #12]
 8022a6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8022a6c:	7c2b      	ldrb	r3, [r5, #16]
 8022a6e:	7023      	strb	r3, [r4, #0]
 8022a70:	6a3b      	ldr	r3, [r7, #32]
 8022a72:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022a76:	3308      	adds	r3, #8
 8022a78:	b2da      	uxtb	r2, r3
 8022a7a:	6a3b      	ldr	r3, [r7, #32]
 8022a7c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022a80:	2005      	movs	r0, #5
 8022a82:	f7ea fabb 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8022a86:	4601      	mov	r1, r0
 8022a88:	6a3c      	ldr	r4, [r7, #32]
 8022a8a:	463b      	mov	r3, r7
 8022a8c:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8022a90:	4618      	mov	r0, r3
 8022a92:	f7ec f91d 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8022a96:	f104 0326 	add.w	r3, r4, #38	; 0x26
 8022a9a:	463a      	mov	r2, r7
 8022a9c:	6815      	ldr	r5, [r2, #0]
 8022a9e:	6854      	ldr	r4, [r2, #4]
 8022aa0:	6890      	ldr	r0, [r2, #8]
 8022aa2:	68d1      	ldr	r1, [r2, #12]
 8022aa4:	601d      	str	r5, [r3, #0]
 8022aa6:	605c      	str	r4, [r3, #4]
 8022aa8:	6098      	str	r0, [r3, #8]
 8022aaa:	60d9      	str	r1, [r3, #12]
 8022aac:	7c12      	ldrb	r2, [r2, #16]
 8022aae:	741a      	strb	r2, [r3, #16]
 8022ab0:	e032      	b.n	8022b18 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x54c>
 8022ab2:	4a47      	ldr	r2, [pc, #284]	; (8022bd0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x604>)
 8022ab4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8022ab8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022abc:	e883 0003 	stmia.w	r3, {r0, r1}
 8022ac0:	4a44      	ldr	r2, [pc, #272]	; (8022bd4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x608>)
 8022ac2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8022ac6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022aca:	f7f2 fb9d 	bl	8015208 <LOGGER_PrintLine>
 8022ace:	e025      	b.n	8022b1c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x550>
 8022ad0:	4a3f      	ldr	r2, [pc, #252]	; (8022bd0 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x604>)
 8022ad2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8022ad6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022ada:	e883 0003 	stmia.w	r3, {r0, r1}
 8022ade:	4a3d      	ldr	r2, [pc, #244]	; (8022bd4 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x608>)
 8022ae0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8022ae4:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022ae8:	f7f2 fb8e 	bl	8015208 <LOGGER_PrintLine>
 8022aec:	f897 207b 	ldrb.w	r2, [r7, #123]	; 0x7b
 8022af0:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 8022af4:	4413      	add	r3, r2
 8022af6:	b2db      	uxtb	r3, r3
 8022af8:	3302      	adds	r3, #2
 8022afa:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
 8022afe:	6a3b      	ldr	r3, [r7, #32]
 8022b00:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 8022b04:	f897 307a 	ldrb.w	r3, [r7, #122]	; 0x7a
 8022b08:	4413      	add	r3, r2
 8022b0a:	b2db      	uxtb	r3, r3
 8022b0c:	3302      	adds	r3, #2
 8022b0e:	b2da      	uxtb	r2, r3
 8022b10:	6a3b      	ldr	r3, [r7, #32]
 8022b12:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8022b16:	e001      	b.n	8022b1c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x550>
 8022b18:	e000      	b.n	8022b1c <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x550>
 8022b1a:	bf00      	nop
 8022b1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022b1e:	685a      	ldr	r2, [r3, #4]
 8022b20:	69bb      	ldr	r3, [r7, #24]
 8022b22:	781b      	ldrb	r3, [r3, #0]
 8022b24:	4619      	mov	r1, r3
 8022b26:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022b2a:	440b      	add	r3, r1
 8022b2c:	6a39      	ldr	r1, [r7, #32]
 8022b2e:	f891 1048 	ldrb.w	r1, [r1, #72]	; 0x48
 8022b32:	440b      	add	r3, r1
 8022b34:	4413      	add	r3, r2
 8022b36:	781b      	ldrb	r3, [r3, #0]
 8022b38:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 8022b3c:	f897 307c 	ldrb.w	r3, [r7, #124]	; 0x7c
 8022b40:	3301      	adds	r3, #1
 8022b42:	f887 307c 	strb.w	r3, [r7, #124]	; 0x7c
 8022b46:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8022b4a:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8022b4e:	2b80      	cmp	r3, #128	; 0x80
 8022b50:	f43f ad8f 	beq.w	8022672 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xa6>
 8022b54:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
 8022b58:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8022b5c:	2ba0      	cmp	r3, #160	; 0xa0
 8022b5e:	f43f ad88 	beq.w	8022672 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0xa6>
 8022b62:	f897 307d 	ldrb.w	r3, [r7, #125]	; 0x7d
 8022b66:	2b00      	cmp	r3, #0
 8022b68:	d005      	beq.n	8022b76 <fdb5ac47f2c02ab26c1329e13b6119b2272b663d+0x5aa>
 8022b6a:	69bb      	ldr	r3, [r7, #24]
 8022b6c:	781b      	ldrb	r3, [r3, #0]
 8022b6e:	3b01      	subs	r3, #1
 8022b70:	b2da      	uxtb	r2, r3
 8022b72:	69bb      	ldr	r3, [r7, #24]
 8022b74:	701a      	strb	r2, [r3, #0]
 8022b76:	6a3b      	ldr	r3, [r7, #32]
 8022b78:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 8022b7c:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 8022b80:	4413      	add	r3, r2
 8022b82:	b2da      	uxtb	r2, r3
 8022b84:	69bb      	ldr	r3, [r7, #24]
 8022b86:	781b      	ldrb	r3, [r3, #0]
 8022b88:	4413      	add	r3, r2
 8022b8a:	b2db      	uxtb	r3, r3
 8022b8c:	f107 044e 	add.w	r4, r7, #78	; 0x4e
 8022b90:	f107 024f 	add.w	r2, r7, #79	; 0x4f
 8022b94:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8022b98:	f107 0064 	add.w	r0, r7, #100	; 0x64
 8022b9c:	9307      	str	r3, [sp, #28]
 8022b9e:	69fb      	ldr	r3, [r7, #28]
 8022ba0:	9306      	str	r3, [sp, #24]
 8022ba2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8022ba4:	9305      	str	r3, [sp, #20]
 8022ba6:	f107 0349 	add.w	r3, r7, #73	; 0x49
 8022baa:	9304      	str	r3, [sp, #16]
 8022bac:	f107 034a 	add.w	r3, r7, #74	; 0x4a
 8022bb0:	9303      	str	r3, [sp, #12]
 8022bb2:	f107 034b 	add.w	r3, r7, #75	; 0x4b
 8022bb6:	9302      	str	r3, [sp, #8]
 8022bb8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8022bbc:	9301      	str	r3, [sp, #4]
 8022bbe:	f107 034d 	add.w	r3, r7, #77	; 0x4d
 8022bc2:	9300      	str	r3, [sp, #0]
 8022bc4:	4623      	mov	r3, r4
 8022bc6:	f000 f807 	bl	8022bd8 <retrieveIphcHeader>
 8022bca:	3780      	adds	r7, #128	; 0x80
 8022bcc:	46bd      	mov	sp, r7
 8022bce:	bdb0      	pop	{r4, r5, r7, pc}
 8022bd0:	080309fc 	.word	0x080309fc
 8022bd4:	08030a88 	.word	0x08030a88

08022bd8 <retrieveIphcHeader>:
 8022bd8:	b5b0      	push	{r4, r5, r7, lr}
 8022bda:	b09c      	sub	sp, #112	; 0x70
 8022bdc:	af00      	add	r7, sp, #0
 8022bde:	6278      	str	r0, [r7, #36]	; 0x24
 8022be0:	6239      	str	r1, [r7, #32]
 8022be2:	61fa      	str	r2, [r7, #28]
 8022be4:	61bb      	str	r3, [r7, #24]
 8022be6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022bea:	685a      	ldr	r2, [r3, #4]
 8022bec:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022bf0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022bf4:	4619      	mov	r1, r3
 8022bf6:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022bfa:	440b      	add	r3, r1
 8022bfc:	4413      	add	r3, r2
 8022bfe:	781b      	ldrb	r3, [r3, #0]
 8022c00:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8022c04:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022c08:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8022c0c:	2bf0      	cmp	r3, #240	; 0xf0
 8022c0e:	d110      	bne.n	8022c32 <retrieveIphcHeader+0x5a>
 8022c10:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022c14:	f003 030f 	and.w	r3, r3, #15
 8022c18:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8022c1c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022c20:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022c24:	3301      	adds	r3, #1
 8022c26:	b2da      	uxtb	r2, r3
 8022c28:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022c2c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022c30:	e002      	b.n	8022c38 <retrieveIphcHeader+0x60>
 8022c32:	2300      	movs	r3, #0
 8022c34:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8022c38:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8022c3c:	2b00      	cmp	r3, #0
 8022c3e:	d016      	beq.n	8022c6e <retrieveIphcHeader+0x96>
 8022c40:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8022c44:	2b01      	cmp	r3, #1
 8022c46:	f040 84e5 	bne.w	8023614 <retrieveIphcHeader+0xa3c>
 8022c4a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022c4e:	685a      	ldr	r2, [r3, #4]
 8022c50:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022c54:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022c58:	4619      	mov	r1, r3
 8022c5a:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022c5e:	440b      	add	r3, r1
 8022c60:	4413      	add	r3, r2
 8022c62:	781b      	ldrb	r3, [r3, #0]
 8022c64:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8022c68:	2b80      	cmp	r3, #128	; 0x80
 8022c6a:	f000 84d3 	beq.w	8023614 <retrieveIphcHeader+0xa3c>
 8022c6e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022c72:	685a      	ldr	r2, [r3, #4]
 8022c74:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022c78:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022c7c:	4619      	mov	r1, r3
 8022c7e:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022c82:	440b      	add	r3, r1
 8022c84:	4413      	add	r3, r2
 8022c86:	781b      	ldrb	r3, [r3, #0]
 8022c88:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8022c8c:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022c90:	095b      	lsrs	r3, r3, #5
 8022c92:	b2da      	uxtb	r2, r3
 8022c94:	69fb      	ldr	r3, [r7, #28]
 8022c96:	701a      	strb	r2, [r3, #0]
 8022c98:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022c9c:	08db      	lsrs	r3, r3, #3
 8022c9e:	b2db      	uxtb	r3, r3
 8022ca0:	f003 0303 	and.w	r3, r3, #3
 8022ca4:	b2da      	uxtb	r2, r3
 8022ca6:	69bb      	ldr	r3, [r7, #24]
 8022ca8:	701a      	strb	r2, [r3, #0]
 8022caa:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022cae:	089b      	lsrs	r3, r3, #2
 8022cb0:	b2db      	uxtb	r3, r3
 8022cb2:	f003 0301 	and.w	r3, r3, #1
 8022cb6:	b2da      	uxtb	r2, r3
 8022cb8:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8022cbc:	701a      	strb	r2, [r3, #0]
 8022cbe:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022cc2:	f003 0303 	and.w	r3, r3, #3
 8022cc6:	b2da      	uxtb	r2, r3
 8022cc8:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8022ccc:	701a      	strb	r2, [r3, #0]
 8022cce:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022cd2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022cd6:	3301      	adds	r3, #1
 8022cd8:	b2da      	uxtb	r2, r3
 8022cda:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022cde:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022ce2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022ce6:	685a      	ldr	r2, [r3, #4]
 8022ce8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022cec:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022cf0:	4619      	mov	r1, r3
 8022cf2:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022cf6:	440b      	add	r3, r1
 8022cf8:	4413      	add	r3, r2
 8022cfa:	781b      	ldrb	r3, [r3, #0]
 8022cfc:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8022d00:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022d04:	091b      	lsrs	r3, r3, #4
 8022d06:	b2db      	uxtb	r3, r3
 8022d08:	f003 0303 	and.w	r3, r3, #3
 8022d0c:	b2da      	uxtb	r2, r3
 8022d0e:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8022d12:	701a      	strb	r2, [r3, #0]
 8022d14:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022d18:	08db      	lsrs	r3, r3, #3
 8022d1a:	b2db      	uxtb	r3, r3
 8022d1c:	f003 0301 	and.w	r3, r3, #1
 8022d20:	b2da      	uxtb	r2, r3
 8022d22:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8022d26:	701a      	strb	r2, [r3, #0]
 8022d28:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8022d2c:	f003 0303 	and.w	r3, r3, #3
 8022d30:	b2da      	uxtb	r2, r3
 8022d32:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8022d36:	701a      	strb	r2, [r3, #0]
 8022d38:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022d3c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022d40:	3301      	adds	r3, #1
 8022d42:	b2da      	uxtb	r2, r3
 8022d44:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022d48:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022d4c:	69fb      	ldr	r3, [r7, #28]
 8022d4e:	781b      	ldrb	r3, [r3, #0]
 8022d50:	2b03      	cmp	r3, #3
 8022d52:	d00e      	beq.n	8022d72 <retrieveIphcHeader+0x19a>
 8022d54:	4ac5      	ldr	r2, [pc, #788]	; (802306c <retrieveIphcHeader+0x494>)
 8022d56:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8022d5a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022d5e:	e883 0003 	stmia.w	r3, {r0, r1}
 8022d62:	4ac3      	ldr	r2, [pc, #780]	; (8023070 <retrieveIphcHeader+0x498>)
 8022d64:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8022d68:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022d6c:	f7f2 fa4c 	bl	8015208 <LOGGER_PrintLine>
 8022d70:	e000      	b.n	8022d74 <retrieveIphcHeader+0x19c>
 8022d72:	bf00      	nop
 8022d74:	69bb      	ldr	r3, [r7, #24]
 8022d76:	781b      	ldrb	r3, [r3, #0]
 8022d78:	2b03      	cmp	r3, #3
 8022d7a:	f200 80ef 	bhi.w	8022f5c <retrieveIphcHeader+0x384>
 8022d7e:	a201      	add	r2, pc, #4	; (adr r2, 8022d84 <retrieveIphcHeader+0x1ac>)
 8022d80:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022d84:	08022e65 	.word	0x08022e65
 8022d88:	08022d95 	.word	0x08022d95
 8022d8c:	08022f3f 	.word	0x08022f3f
 8022d90:	08022e5b 	.word	0x08022e5b
 8022d94:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022d98:	2200      	movs	r2, #0
 8022d9a:	605a      	str	r2, [r3, #4]
 8022d9c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022da0:	685a      	ldr	r2, [r3, #4]
 8022da2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022da6:	685b      	ldr	r3, [r3, #4]
 8022da8:	781b      	ldrb	r3, [r3, #0]
 8022daa:	4619      	mov	r1, r3
 8022dac:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022db0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022db4:	4419      	add	r1, r3
 8022db6:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022dba:	440b      	add	r3, r1
 8022dbc:	041b      	lsls	r3, r3, #16
 8022dbe:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 8022dc2:	431a      	orrs	r2, r3
 8022dc4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022dc8:	605a      	str	r2, [r3, #4]
 8022dca:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022dce:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022dd2:	3301      	adds	r3, #1
 8022dd4:	b2da      	uxtb	r2, r3
 8022dd6:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022dda:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022dde:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022de2:	685a      	ldr	r2, [r3, #4]
 8022de4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022de8:	685b      	ldr	r3, [r3, #4]
 8022dea:	781b      	ldrb	r3, [r3, #0]
 8022dec:	4619      	mov	r1, r3
 8022dee:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022df2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022df6:	4419      	add	r1, r3
 8022df8:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022dfc:	440b      	add	r3, r1
 8022dfe:	021b      	lsls	r3, r3, #8
 8022e00:	431a      	orrs	r2, r3
 8022e02:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e06:	605a      	str	r2, [r3, #4]
 8022e08:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e0c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022e10:	3301      	adds	r3, #1
 8022e12:	b2da      	uxtb	r2, r3
 8022e14:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e18:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022e1c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e20:	685b      	ldr	r3, [r3, #4]
 8022e22:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8022e26:	6852      	ldr	r2, [r2, #4]
 8022e28:	7812      	ldrb	r2, [r2, #0]
 8022e2a:	4611      	mov	r1, r2
 8022e2c:	f8d7 2098 	ldr.w	r2, [r7, #152]	; 0x98
 8022e30:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8022e34:	4411      	add	r1, r2
 8022e36:	f897 209c 	ldrb.w	r2, [r7, #156]	; 0x9c
 8022e3a:	440a      	add	r2, r1
 8022e3c:	431a      	orrs	r2, r3
 8022e3e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e42:	605a      	str	r2, [r3, #4]
 8022e44:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e48:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022e4c:	3301      	adds	r3, #1
 8022e4e:	b2da      	uxtb	r2, r3
 8022e50:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e54:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022e58:	e08f      	b.n	8022f7a <retrieveIphcHeader+0x3a2>
 8022e5a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e5e:	2200      	movs	r2, #0
 8022e60:	605a      	str	r2, [r3, #4]
 8022e62:	e08a      	b.n	8022f7a <retrieveIphcHeader+0x3a2>
 8022e64:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e68:	2200      	movs	r2, #0
 8022e6a:	605a      	str	r2, [r3, #4]
 8022e6c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e70:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022e74:	3301      	adds	r3, #1
 8022e76:	b2da      	uxtb	r2, r3
 8022e78:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e7c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022e80:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e84:	685a      	ldr	r2, [r3, #4]
 8022e86:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022e8a:	685b      	ldr	r3, [r3, #4]
 8022e8c:	781b      	ldrb	r3, [r3, #0]
 8022e8e:	4619      	mov	r1, r3
 8022e90:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022e94:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022e98:	4419      	add	r1, r3
 8022e9a:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022e9e:	440b      	add	r3, r1
 8022ea0:	041b      	lsls	r3, r3, #16
 8022ea2:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
 8022ea6:	431a      	orrs	r2, r3
 8022ea8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022eac:	605a      	str	r2, [r3, #4]
 8022eae:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022eb2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022eb6:	3301      	adds	r3, #1
 8022eb8:	b2da      	uxtb	r2, r3
 8022eba:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022ebe:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022ec2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022ec6:	685a      	ldr	r2, [r3, #4]
 8022ec8:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022ecc:	685b      	ldr	r3, [r3, #4]
 8022ece:	781b      	ldrb	r3, [r3, #0]
 8022ed0:	4619      	mov	r1, r3
 8022ed2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022ed6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022eda:	4419      	add	r1, r3
 8022edc:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022ee0:	440b      	add	r3, r1
 8022ee2:	021b      	lsls	r3, r3, #8
 8022ee4:	431a      	orrs	r2, r3
 8022ee6:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022eea:	605a      	str	r2, [r3, #4]
 8022eec:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022ef0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022ef4:	3301      	adds	r3, #1
 8022ef6:	b2da      	uxtb	r2, r3
 8022ef8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022efc:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022f00:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f04:	685b      	ldr	r3, [r3, #4]
 8022f06:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8022f0a:	6852      	ldr	r2, [r2, #4]
 8022f0c:	7812      	ldrb	r2, [r2, #0]
 8022f0e:	4611      	mov	r1, r2
 8022f10:	f8d7 2098 	ldr.w	r2, [r7, #152]	; 0x98
 8022f14:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8022f18:	4411      	add	r1, r2
 8022f1a:	f897 209c 	ldrb.w	r2, [r7, #156]	; 0x9c
 8022f1e:	440a      	add	r2, r1
 8022f20:	431a      	orrs	r2, r3
 8022f22:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f26:	605a      	str	r2, [r3, #4]
 8022f28:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f2c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022f30:	3301      	adds	r3, #1
 8022f32:	b2da      	uxtb	r2, r3
 8022f34:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f38:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022f3c:	e01d      	b.n	8022f7a <retrieveIphcHeader+0x3a2>
 8022f3e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f42:	2200      	movs	r2, #0
 8022f44:	605a      	str	r2, [r3, #4]
 8022f46:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f4a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022f4e:	3301      	adds	r3, #1
 8022f50:	b2da      	uxtb	r2, r3
 8022f52:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f56:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022f5a:	e00e      	b.n	8022f7a <retrieveIphcHeader+0x3a2>
 8022f5c:	4a43      	ldr	r2, [pc, #268]	; (802306c <retrieveIphcHeader+0x494>)
 8022f5e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8022f62:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022f66:	e883 0003 	stmia.w	r3, {r0, r1}
 8022f6a:	4a42      	ldr	r2, [pc, #264]	; (8023074 <retrieveIphcHeader+0x49c>)
 8022f6c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8022f70:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022f74:	f7f2 f948 	bl	8015208 <LOGGER_PrintLine>
 8022f78:	bf00      	nop
 8022f7a:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8022f7e:	781b      	ldrb	r3, [r3, #0]
 8022f80:	2b00      	cmp	r3, #0
 8022f82:	d002      	beq.n	8022f8a <retrieveIphcHeader+0x3b2>
 8022f84:	2b01      	cmp	r3, #1
 8022f86:	d01f      	beq.n	8022fc8 <retrieveIphcHeader+0x3f0>
 8022f88:	e023      	b.n	8022fd2 <retrieveIphcHeader+0x3fa>
 8022f8a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f8e:	2200      	movs	r2, #0
 8022f90:	721a      	strb	r2, [r3, #8]
 8022f92:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8022f96:	685a      	ldr	r2, [r3, #4]
 8022f98:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022f9c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022fa0:	4619      	mov	r1, r3
 8022fa2:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8022fa6:	440b      	add	r3, r1
 8022fa8:	4413      	add	r3, r2
 8022faa:	781a      	ldrb	r2, [r3, #0]
 8022fac:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022fb0:	725a      	strb	r2, [r3, #9]
 8022fb2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022fb6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8022fba:	3301      	adds	r3, #1
 8022fbc:	b2da      	uxtb	r2, r3
 8022fbe:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022fc2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8022fc6:	e013      	b.n	8022ff0 <retrieveIphcHeader+0x418>
 8022fc8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8022fcc:	2201      	movs	r2, #1
 8022fce:	721a      	strb	r2, [r3, #8]
 8022fd0:	e00e      	b.n	8022ff0 <retrieveIphcHeader+0x418>
 8022fd2:	4a26      	ldr	r2, [pc, #152]	; (802306c <retrieveIphcHeader+0x494>)
 8022fd4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8022fd8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8022fdc:	e883 0003 	stmia.w	r3, {r0, r1}
 8022fe0:	4a25      	ldr	r2, [pc, #148]	; (8023078 <retrieveIphcHeader+0x4a0>)
 8022fe2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8022fe6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8022fea:	f7f2 f90d 	bl	8015208 <LOGGER_PrintLine>
 8022fee:	bf00      	nop
 8022ff0:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8022ff4:	781b      	ldrb	r3, [r3, #0]
 8022ff6:	2b03      	cmp	r3, #3
 8022ff8:	d840      	bhi.n	802307c <retrieveIphcHeader+0x4a4>
 8022ffa:	a201      	add	r2, pc, #4	; (adr r2, 8023000 <retrieveIphcHeader+0x428>)
 8022ffc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8023000:	08023011 	.word	0x08023011
 8023004:	08023049 	.word	0x08023049
 8023008:	08023055 	.word	0x08023055
 802300c:	08023061 	.word	0x08023061
 8023010:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023014:	685a      	ldr	r2, [r3, #4]
 8023016:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802301a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802301e:	4619      	mov	r1, r3
 8023020:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023024:	440b      	add	r3, r1
 8023026:	4413      	add	r3, r2
 8023028:	781a      	ldrb	r2, [r3, #0]
 802302a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802302e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8023032:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023036:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802303a:	3301      	adds	r3, #1
 802303c:	b2da      	uxtb	r2, r3
 802303e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023042:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8023046:	e028      	b.n	802309a <retrieveIphcHeader+0x4c2>
 8023048:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802304c:	2201      	movs	r2, #1
 802304e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8023052:	e022      	b.n	802309a <retrieveIphcHeader+0x4c2>
 8023054:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023058:	2240      	movs	r2, #64	; 0x40
 802305a:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 802305e:	e01c      	b.n	802309a <retrieveIphcHeader+0x4c2>
 8023060:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023064:	22ff      	movs	r2, #255	; 0xff
 8023066:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 802306a:	e016      	b.n	802309a <retrieveIphcHeader+0x4c2>
 802306c:	080309fc 	.word	0x080309fc
 8023070:	08030a9c 	.word	0x08030a9c
 8023074:	08030abc 	.word	0x08030abc
 8023078:	08030acc 	.word	0x08030acc
 802307c:	4ada      	ldr	r2, [pc, #872]	; (80233e8 <retrieveIphcHeader+0x810>)
 802307e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8023082:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023086:	e883 0003 	stmia.w	r3, {r0, r1}
 802308a:	4ad8      	ldr	r2, [pc, #864]	; (80233ec <retrieveIphcHeader+0x814>)
 802308c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8023090:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023094:	f7f2 f8b8 	bl	8015208 <LOGGER_PrintLine>
 8023098:	bf00      	nop
 802309a:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 802309e:	781b      	ldrb	r3, [r3, #0]
 80230a0:	2b03      	cmp	r3, #3
 80230a2:	f200 80f2 	bhi.w	802328a <retrieveIphcHeader+0x6b2>
 80230a6:	a201      	add	r2, pc, #4	; (adr r2, 80230ac <retrieveIphcHeader+0x4d4>)
 80230a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80230ac:	08023235 	.word	0x08023235
 80230b0:	080231b3 	.word	0x080231b3
 80230b4:	0802310d 	.word	0x0802310d
 80230b8:	080230bd 	.word	0x080230bd
 80230bc:	2005      	movs	r0, #5
 80230be:	f7e9 ff9d 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80230c2:	4601      	mov	r1, r0
 80230c4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80230c8:	f103 0241 	add.w	r2, r3, #65	; 0x41
 80230cc:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 80230d0:	463b      	mov	r3, r7
 80230d2:	4618      	mov	r0, r3
 80230d4:	f7eb fdfc 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 80230d8:	f104 0326 	add.w	r3, r4, #38	; 0x26
 80230dc:	463a      	mov	r2, r7
 80230de:	6815      	ldr	r5, [r2, #0]
 80230e0:	6854      	ldr	r4, [r2, #4]
 80230e2:	6890      	ldr	r0, [r2, #8]
 80230e4:	68d1      	ldr	r1, [r2, #12]
 80230e6:	601d      	str	r5, [r3, #0]
 80230e8:	605c      	str	r4, [r3, #4]
 80230ea:	6098      	str	r0, [r3, #8]
 80230ec:	60d9      	str	r1, [r3, #12]
 80230ee:	7c12      	ldrb	r2, [r2, #16]
 80230f0:	741a      	strb	r2, [r3, #16]
 80230f2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80230f6:	f103 0427 	add.w	r4, r3, #39	; 0x27
 80230fa:	f7ec f9c7 	bl	800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>
 80230fe:	4603      	mov	r3, r0
 8023100:	2208      	movs	r2, #8
 8023102:	4619      	mov	r1, r3
 8023104:	4620      	mov	r0, r4
 8023106:	f008 f896 	bl	802b236 <memcpy>
 802310a:	e0cd      	b.n	80232a8 <retrieveIphcHeader+0x6d0>
 802310c:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023110:	685a      	ldr	r2, [r3, #4]
 8023112:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023116:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802311a:	4619      	mov	r1, r3
 802311c:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023120:	440b      	add	r3, r1
 8023122:	18d1      	adds	r1, r2, r3
 8023124:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8023126:	4638      	mov	r0, r7
 8023128:	2300      	movs	r3, #0
 802312a:	2201      	movs	r2, #1
 802312c:	f006 f92c 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8023130:	4622      	mov	r2, r4
 8023132:	463b      	mov	r3, r7
 8023134:	681d      	ldr	r5, [r3, #0]
 8023136:	685c      	ldr	r4, [r3, #4]
 8023138:	6898      	ldr	r0, [r3, #8]
 802313a:	68d9      	ldr	r1, [r3, #12]
 802313c:	6015      	str	r5, [r2, #0]
 802313e:	6054      	str	r4, [r2, #4]
 8023140:	6090      	str	r0, [r2, #8]
 8023142:	60d1      	str	r1, [r2, #12]
 8023144:	7c1b      	ldrb	r3, [r3, #16]
 8023146:	7413      	strb	r3, [r2, #16]
 8023148:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802314c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023150:	3302      	adds	r3, #2
 8023152:	b2da      	uxtb	r2, r3
 8023154:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023158:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802315c:	6a3c      	ldr	r4, [r7, #32]
 802315e:	463b      	mov	r3, r7
 8023160:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8023162:	4618      	mov	r0, r3
 8023164:	f7eb fe64 	bl	800ee30 <9730579196d24a2a06a66ac441c59b7f99b57834>
 8023168:	4622      	mov	r2, r4
 802316a:	463b      	mov	r3, r7
 802316c:	681d      	ldr	r5, [r3, #0]
 802316e:	685c      	ldr	r4, [r3, #4]
 8023170:	6898      	ldr	r0, [r3, #8]
 8023172:	68d9      	ldr	r1, [r3, #12]
 8023174:	6015      	str	r5, [r2, #0]
 8023176:	6054      	str	r4, [r2, #4]
 8023178:	6090      	str	r0, [r2, #8]
 802317a:	60d1      	str	r1, [r2, #12]
 802317c:	7c1b      	ldrb	r3, [r3, #16]
 802317e:	7413      	strb	r3, [r2, #16]
 8023180:	2005      	movs	r0, #5
 8023182:	f7e9 ff3b 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023186:	4601      	mov	r1, r0
 8023188:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 802318c:	463b      	mov	r3, r7
 802318e:	6a3a      	ldr	r2, [r7, #32]
 8023190:	4618      	mov	r0, r3
 8023192:	f7eb fd9d 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8023196:	f104 0326 	add.w	r3, r4, #38	; 0x26
 802319a:	463a      	mov	r2, r7
 802319c:	6815      	ldr	r5, [r2, #0]
 802319e:	6854      	ldr	r4, [r2, #4]
 80231a0:	6890      	ldr	r0, [r2, #8]
 80231a2:	68d1      	ldr	r1, [r2, #12]
 80231a4:	601d      	str	r5, [r3, #0]
 80231a6:	605c      	str	r4, [r3, #4]
 80231a8:	6098      	str	r0, [r3, #8]
 80231aa:	60d9      	str	r1, [r3, #12]
 80231ac:	7c12      	ldrb	r2, [r2, #16]
 80231ae:	741a      	strb	r2, [r3, #16]
 80231b0:	e07a      	b.n	80232a8 <retrieveIphcHeader+0x6d0>
 80231b2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80231b6:	685a      	ldr	r2, [r3, #4]
 80231b8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80231bc:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80231c0:	4619      	mov	r1, r3
 80231c2:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80231c6:	440b      	add	r3, r1
 80231c8:	18d1      	adds	r1, r2, r3
 80231ca:	6a3c      	ldr	r4, [r7, #32]
 80231cc:	4638      	mov	r0, r7
 80231ce:	2300      	movs	r3, #0
 80231d0:	2202      	movs	r2, #2
 80231d2:	f006 f8d9 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 80231d6:	4622      	mov	r2, r4
 80231d8:	463b      	mov	r3, r7
 80231da:	681d      	ldr	r5, [r3, #0]
 80231dc:	685c      	ldr	r4, [r3, #4]
 80231de:	6898      	ldr	r0, [r3, #8]
 80231e0:	68d9      	ldr	r1, [r3, #12]
 80231e2:	6015      	str	r5, [r2, #0]
 80231e4:	6054      	str	r4, [r2, #4]
 80231e6:	6090      	str	r0, [r2, #8]
 80231e8:	60d1      	str	r1, [r2, #12]
 80231ea:	7c1b      	ldrb	r3, [r3, #16]
 80231ec:	7413      	strb	r3, [r2, #16]
 80231ee:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80231f2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80231f6:	3308      	adds	r3, #8
 80231f8:	b2da      	uxtb	r2, r3
 80231fa:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80231fe:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8023202:	2005      	movs	r0, #5
 8023204:	f7e9 fefa 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023208:	4601      	mov	r1, r0
 802320a:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 802320e:	463b      	mov	r3, r7
 8023210:	6a3a      	ldr	r2, [r7, #32]
 8023212:	4618      	mov	r0, r3
 8023214:	f7eb fd5c 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8023218:	f104 0326 	add.w	r3, r4, #38	; 0x26
 802321c:	463a      	mov	r2, r7
 802321e:	6815      	ldr	r5, [r2, #0]
 8023220:	6854      	ldr	r4, [r2, #4]
 8023222:	6890      	ldr	r0, [r2, #8]
 8023224:	68d1      	ldr	r1, [r2, #12]
 8023226:	601d      	str	r5, [r3, #0]
 8023228:	605c      	str	r4, [r3, #4]
 802322a:	6098      	str	r0, [r3, #8]
 802322c:	60d9      	str	r1, [r3, #12]
 802322e:	7c12      	ldrb	r2, [r2, #16]
 8023230:	741a      	strb	r2, [r3, #16]
 8023232:	e039      	b.n	80232a8 <retrieveIphcHeader+0x6d0>
 8023234:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023238:	685a      	ldr	r2, [r3, #4]
 802323a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802323e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023242:	4619      	mov	r1, r3
 8023244:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023248:	440b      	add	r3, r1
 802324a:	18d1      	adds	r1, r2, r3
 802324c:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 8023250:	4638      	mov	r0, r7
 8023252:	2300      	movs	r3, #0
 8023254:	2203      	movs	r2, #3
 8023256:	f006 f897 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802325a:	f104 0326 	add.w	r3, r4, #38	; 0x26
 802325e:	463a      	mov	r2, r7
 8023260:	6815      	ldr	r5, [r2, #0]
 8023262:	6854      	ldr	r4, [r2, #4]
 8023264:	6890      	ldr	r0, [r2, #8]
 8023266:	68d1      	ldr	r1, [r2, #12]
 8023268:	601d      	str	r5, [r3, #0]
 802326a:	605c      	str	r4, [r3, #4]
 802326c:	6098      	str	r0, [r3, #8]
 802326e:	60d9      	str	r1, [r3, #12]
 8023270:	7c12      	ldrb	r2, [r2, #16]
 8023272:	741a      	strb	r2, [r3, #16]
 8023274:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023278:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802327c:	3310      	adds	r3, #16
 802327e:	b2da      	uxtb	r2, r3
 8023280:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023284:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8023288:	e00e      	b.n	80232a8 <retrieveIphcHeader+0x6d0>
 802328a:	4a57      	ldr	r2, [pc, #348]	; (80233e8 <retrieveIphcHeader+0x810>)
 802328c:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8023290:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023294:	e883 0003 	stmia.w	r3, {r0, r1}
 8023298:	4a55      	ldr	r2, [pc, #340]	; (80233f0 <retrieveIphcHeader+0x818>)
 802329a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 802329e:	e893 0003 	ldmia.w	r3, {r0, r1}
 80232a2:	f7f1 ffb1 	bl	8015208 <LOGGER_PrintLine>
 80232a6:	bf00      	nop
 80232a8:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80232ac:	781b      	ldrb	r3, [r3, #0]
 80232ae:	2b01      	cmp	r3, #1
 80232b0:	f040 8088 	bne.w	80233c4 <retrieveIphcHeader+0x7ec>
 80232b4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80232b8:	781b      	ldrb	r3, [r3, #0]
 80232ba:	2b02      	cmp	r3, #2
 80232bc:	d02d      	beq.n	802331a <retrieveIphcHeader+0x742>
 80232be:	2b03      	cmp	r3, #3
 80232c0:	d171      	bne.n	80233a6 <retrieveIphcHeader+0x7ce>
 80232c2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80232c6:	2203      	movs	r2, #3
 80232c8:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 80232cc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80232d0:	3338      	adds	r3, #56	; 0x38
 80232d2:	4a48      	ldr	r2, [pc, #288]	; (80233f4 <retrieveIphcHeader+0x81c>)
 80232d4:	461c      	mov	r4, r3
 80232d6:	4615      	mov	r5, r2
 80232d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80232da:	6020      	str	r0, [r4, #0]
 80232dc:	6061      	str	r1, [r4, #4]
 80232de:	60a2      	str	r2, [r4, #8]
 80232e0:	60e3      	str	r3, [r4, #12]
 80232e2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80232e6:	685a      	ldr	r2, [r3, #4]
 80232e8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80232ec:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80232f0:	4619      	mov	r1, r3
 80232f2:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80232f6:	440b      	add	r3, r1
 80232f8:	4413      	add	r3, r2
 80232fa:	781a      	ldrb	r2, [r3, #0]
 80232fc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023300:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8023304:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023308:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802330c:	3301      	adds	r3, #1
 802330e:	b2da      	uxtb	r2, r3
 8023310:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023314:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8023318:	e15b      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 802331a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 802331e:	685a      	ldr	r2, [r3, #4]
 8023320:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023324:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023328:	4619      	mov	r1, r3
 802332a:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 802332e:	440b      	add	r3, r1
 8023330:	18d1      	adds	r1, r2, r3
 8023332:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8023334:	4638      	mov	r0, r7
 8023336:	2300      	movs	r3, #0
 8023338:	2201      	movs	r2, #1
 802333a:	f006 f825 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802333e:	4622      	mov	r2, r4
 8023340:	463b      	mov	r3, r7
 8023342:	681d      	ldr	r5, [r3, #0]
 8023344:	685c      	ldr	r4, [r3, #4]
 8023346:	6898      	ldr	r0, [r3, #8]
 8023348:	68d9      	ldr	r1, [r3, #12]
 802334a:	6015      	str	r5, [r2, #0]
 802334c:	6054      	str	r4, [r2, #4]
 802334e:	6090      	str	r0, [r2, #8]
 8023350:	60d1      	str	r1, [r2, #12]
 8023352:	7c1b      	ldrb	r3, [r3, #16]
 8023354:	7413      	strb	r3, [r2, #16]
 8023356:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802335a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802335e:	3302      	adds	r3, #2
 8023360:	b2da      	uxtb	r2, r3
 8023362:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023366:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802336a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802336e:	2203      	movs	r2, #3
 8023370:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 8023374:	2005      	movs	r0, #5
 8023376:	f7e9 fe41 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802337a:	4601      	mov	r1, r0
 802337c:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 8023380:	463b      	mov	r3, r7
 8023382:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8023384:	4618      	mov	r0, r3
 8023386:	f7eb fda5 	bl	800eed4 <144ed7de545b4a42832ce04a16bf065a50d4ff30>
 802338a:	f104 0337 	add.w	r3, r4, #55	; 0x37
 802338e:	463a      	mov	r2, r7
 8023390:	6815      	ldr	r5, [r2, #0]
 8023392:	6854      	ldr	r4, [r2, #4]
 8023394:	6890      	ldr	r0, [r2, #8]
 8023396:	68d1      	ldr	r1, [r2, #12]
 8023398:	601d      	str	r5, [r3, #0]
 802339a:	605c      	str	r4, [r3, #4]
 802339c:	6098      	str	r0, [r3, #8]
 802339e:	60d9      	str	r1, [r3, #12]
 80233a0:	7c12      	ldrb	r2, [r2, #16]
 80233a2:	741a      	strb	r2, [r3, #16]
 80233a4:	e115      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 80233a6:	4a10      	ldr	r2, [pc, #64]	; (80233e8 <retrieveIphcHeader+0x810>)
 80233a8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80233ac:	e892 0003 	ldmia.w	r2, {r0, r1}
 80233b0:	e883 0003 	stmia.w	r3, {r0, r1}
 80233b4:	4a10      	ldr	r2, [pc, #64]	; (80233f8 <retrieveIphcHeader+0x820>)
 80233b6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80233ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80233be:	f7f1 ff23 	bl	8015208 <LOGGER_PrintLine>
 80233c2:	e106      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 80233c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80233c8:	781b      	ldrb	r3, [r3, #0]
 80233ca:	2b03      	cmp	r3, #3
 80233cc:	f200 80f2 	bhi.w	80235b4 <retrieveIphcHeader+0x9dc>
 80233d0:	a201      	add	r2, pc, #4	; (adr r2, 80233d8 <retrieveIphcHeader+0x800>)
 80233d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80233d6:	bf00      	nop
 80233d8:	0802355f 	.word	0x0802355f
 80233dc:	080234dd 	.word	0x080234dd
 80233e0:	08023437 	.word	0x08023437
 80233e4:	080233fd 	.word	0x080233fd
 80233e8:	080309fc 	.word	0x080309fc
 80233ec:	08030adc 	.word	0x08030adc
 80233f0:	08030af0 	.word	0x08030af0
 80233f4:	08031a94 	.word	0x08031a94
 80233f8:	08030b00 	.word	0x08030b00
 80233fc:	2005      	movs	r0, #5
 80233fe:	f7e9 fdfd 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023402:	4605      	mov	r5, r0
 8023404:	2002      	movs	r0, #2
 8023406:	f7e9 fdf9 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802340a:	4602      	mov	r2, r0
 802340c:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 8023410:	463b      	mov	r3, r7
 8023412:	4629      	mov	r1, r5
 8023414:	4618      	mov	r0, r3
 8023416:	f7eb fc5b 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 802341a:	f104 0337 	add.w	r3, r4, #55	; 0x37
 802341e:	463a      	mov	r2, r7
 8023420:	6815      	ldr	r5, [r2, #0]
 8023422:	6854      	ldr	r4, [r2, #4]
 8023424:	6890      	ldr	r0, [r2, #8]
 8023426:	68d1      	ldr	r1, [r2, #12]
 8023428:	601d      	str	r5, [r3, #0]
 802342a:	605c      	str	r4, [r3, #4]
 802342c:	6098      	str	r0, [r3, #8]
 802342e:	60d9      	str	r1, [r3, #12]
 8023430:	7c12      	ldrb	r2, [r2, #16]
 8023432:	741a      	strb	r2, [r3, #16]
 8023434:	e0cd      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 8023436:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 802343a:	685a      	ldr	r2, [r3, #4]
 802343c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023440:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023444:	4619      	mov	r1, r3
 8023446:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 802344a:	440b      	add	r3, r1
 802344c:	18d1      	adds	r1, r2, r3
 802344e:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8023450:	4638      	mov	r0, r7
 8023452:	2300      	movs	r3, #0
 8023454:	2201      	movs	r2, #1
 8023456:	f005 ff97 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802345a:	4622      	mov	r2, r4
 802345c:	463b      	mov	r3, r7
 802345e:	681d      	ldr	r5, [r3, #0]
 8023460:	685c      	ldr	r4, [r3, #4]
 8023462:	6898      	ldr	r0, [r3, #8]
 8023464:	68d9      	ldr	r1, [r3, #12]
 8023466:	6015      	str	r5, [r2, #0]
 8023468:	6054      	str	r4, [r2, #4]
 802346a:	6090      	str	r0, [r2, #8]
 802346c:	60d1      	str	r1, [r2, #12]
 802346e:	7c1b      	ldrb	r3, [r3, #16]
 8023470:	7413      	strb	r3, [r2, #16]
 8023472:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023476:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802347a:	3302      	adds	r3, #2
 802347c:	b2da      	uxtb	r2, r3
 802347e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023482:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8023486:	6a3c      	ldr	r4, [r7, #32]
 8023488:	463b      	mov	r3, r7
 802348a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 802348c:	4618      	mov	r0, r3
 802348e:	f7eb fccf 	bl	800ee30 <9730579196d24a2a06a66ac441c59b7f99b57834>
 8023492:	4622      	mov	r2, r4
 8023494:	463b      	mov	r3, r7
 8023496:	681d      	ldr	r5, [r3, #0]
 8023498:	685c      	ldr	r4, [r3, #4]
 802349a:	6898      	ldr	r0, [r3, #8]
 802349c:	68d9      	ldr	r1, [r3, #12]
 802349e:	6015      	str	r5, [r2, #0]
 80234a0:	6054      	str	r4, [r2, #4]
 80234a2:	6090      	str	r0, [r2, #8]
 80234a4:	60d1      	str	r1, [r2, #12]
 80234a6:	7c1b      	ldrb	r3, [r3, #16]
 80234a8:	7413      	strb	r3, [r2, #16]
 80234aa:	2005      	movs	r0, #5
 80234ac:	f7e9 fda6 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80234b0:	4601      	mov	r1, r0
 80234b2:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 80234b6:	463b      	mov	r3, r7
 80234b8:	6a3a      	ldr	r2, [r7, #32]
 80234ba:	4618      	mov	r0, r3
 80234bc:	f7eb fc08 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 80234c0:	f104 0337 	add.w	r3, r4, #55	; 0x37
 80234c4:	463a      	mov	r2, r7
 80234c6:	6815      	ldr	r5, [r2, #0]
 80234c8:	6854      	ldr	r4, [r2, #4]
 80234ca:	6890      	ldr	r0, [r2, #8]
 80234cc:	68d1      	ldr	r1, [r2, #12]
 80234ce:	601d      	str	r5, [r3, #0]
 80234d0:	605c      	str	r4, [r3, #4]
 80234d2:	6098      	str	r0, [r3, #8]
 80234d4:	60d9      	str	r1, [r3, #12]
 80234d6:	7c12      	ldrb	r2, [r2, #16]
 80234d8:	741a      	strb	r2, [r3, #16]
 80234da:	e07a      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 80234dc:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80234e0:	685a      	ldr	r2, [r3, #4]
 80234e2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80234e6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80234ea:	4619      	mov	r1, r3
 80234ec:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80234f0:	440b      	add	r3, r1
 80234f2:	18d1      	adds	r1, r2, r3
 80234f4:	6a3c      	ldr	r4, [r7, #32]
 80234f6:	4638      	mov	r0, r7
 80234f8:	2300      	movs	r3, #0
 80234fa:	2202      	movs	r2, #2
 80234fc:	f005 ff44 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8023500:	4622      	mov	r2, r4
 8023502:	463b      	mov	r3, r7
 8023504:	681d      	ldr	r5, [r3, #0]
 8023506:	685c      	ldr	r4, [r3, #4]
 8023508:	6898      	ldr	r0, [r3, #8]
 802350a:	68d9      	ldr	r1, [r3, #12]
 802350c:	6015      	str	r5, [r2, #0]
 802350e:	6054      	str	r4, [r2, #4]
 8023510:	6090      	str	r0, [r2, #8]
 8023512:	60d1      	str	r1, [r2, #12]
 8023514:	7c1b      	ldrb	r3, [r3, #16]
 8023516:	7413      	strb	r3, [r2, #16]
 8023518:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802351c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023520:	3308      	adds	r3, #8
 8023522:	b2da      	uxtb	r2, r3
 8023524:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023528:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802352c:	2005      	movs	r0, #5
 802352e:	f7e9 fd65 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023532:	4601      	mov	r1, r0
 8023534:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 8023538:	463b      	mov	r3, r7
 802353a:	6a3a      	ldr	r2, [r7, #32]
 802353c:	4618      	mov	r0, r3
 802353e:	f7eb fbc7 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8023542:	f104 0337 	add.w	r3, r4, #55	; 0x37
 8023546:	463a      	mov	r2, r7
 8023548:	6815      	ldr	r5, [r2, #0]
 802354a:	6854      	ldr	r4, [r2, #4]
 802354c:	6890      	ldr	r0, [r2, #8]
 802354e:	68d1      	ldr	r1, [r2, #12]
 8023550:	601d      	str	r5, [r3, #0]
 8023552:	605c      	str	r4, [r3, #4]
 8023554:	6098      	str	r0, [r3, #8]
 8023556:	60d9      	str	r1, [r3, #12]
 8023558:	7c12      	ldrb	r2, [r2, #16]
 802355a:	741a      	strb	r2, [r3, #16]
 802355c:	e039      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 802355e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023562:	685a      	ldr	r2, [r3, #4]
 8023564:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023568:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802356c:	4619      	mov	r1, r3
 802356e:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023572:	440b      	add	r3, r1
 8023574:	18d1      	adds	r1, r2, r3
 8023576:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 802357a:	4638      	mov	r0, r7
 802357c:	2300      	movs	r3, #0
 802357e:	2203      	movs	r2, #3
 8023580:	f005 ff02 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8023584:	f104 0337 	add.w	r3, r4, #55	; 0x37
 8023588:	463a      	mov	r2, r7
 802358a:	6815      	ldr	r5, [r2, #0]
 802358c:	6854      	ldr	r4, [r2, #4]
 802358e:	6890      	ldr	r0, [r2, #8]
 8023590:	68d1      	ldr	r1, [r2, #12]
 8023592:	601d      	str	r5, [r3, #0]
 8023594:	605c      	str	r4, [r3, #4]
 8023596:	6098      	str	r0, [r3, #8]
 8023598:	60d9      	str	r1, [r3, #12]
 802359a:	7c12      	ldrb	r2, [r2, #16]
 802359c:	741a      	strb	r2, [r3, #16]
 802359e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80235a2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80235a6:	3310      	adds	r3, #16
 80235a8:	b2da      	uxtb	r2, r3
 80235aa:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80235ae:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80235b2:	e00e      	b.n	80235d2 <retrieveIphcHeader+0x9fa>
 80235b4:	4aa7      	ldr	r2, [pc, #668]	; (8023854 <retrieveIphcHeader+0xc7c>)
 80235b6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80235ba:	e892 0003 	ldmia.w	r2, {r0, r1}
 80235be:	e883 0003 	stmia.w	r3, {r0, r1}
 80235c2:	4aa5      	ldr	r2, [pc, #660]	; (8023858 <retrieveIphcHeader+0xc80>)
 80235c4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80235c8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80235cc:	f7f1 fe1c 	bl	8015208 <LOGGER_PrintLine>
 80235d0:	bf00      	nop
 80235d2:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80235d6:	7a1b      	ldrb	r3, [r3, #8]
 80235d8:	2b00      	cmp	r3, #0
 80235da:	f000 8133 	beq.w	8023844 <retrieveIphcHeader+0xc6c>
 80235de:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80235e2:	685a      	ldr	r2, [r3, #4]
 80235e4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80235e8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80235ec:	4619      	mov	r1, r3
 80235ee:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80235f2:	440b      	add	r3, r1
 80235f4:	4413      	add	r3, r2
 80235f6:	781b      	ldrb	r3, [r3, #0]
 80235f8:	f887 306c 	strb.w	r3, [r7, #108]	; 0x6c
 80235fc:	f897 306c 	ldrb.w	r3, [r7, #108]	; 0x6c
 8023600:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023604:	2bf0      	cmp	r3, #240	; 0xf0
 8023606:	f040 811d 	bne.w	8023844 <retrieveIphcHeader+0xc6c>
 802360a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802360e:	2211      	movs	r2, #17
 8023610:	725a      	strb	r2, [r3, #9]
 8023612:	e117      	b.n	8023844 <retrieveIphcHeader+0xc6c>
 8023614:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8023618:	2b01      	cmp	r3, #1
 802361a:	f040 8114 	bne.w	8023846 <retrieveIphcHeader+0xc6e>
 802361e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023622:	685a      	ldr	r2, [r3, #4]
 8023624:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023628:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802362c:	4619      	mov	r1, r3
 802362e:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023632:	440b      	add	r3, r1
 8023634:	4413      	add	r3, r2
 8023636:	781b      	ldrb	r3, [r3, #0]
 8023638:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 802363c:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8023640:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8023644:	2ba0      	cmp	r3, #160	; 0xa0
 8023646:	f040 80fe 	bne.w	8023846 <retrieveIphcHeader+0xc6e>
 802364a:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 802364e:	f003 031f 	and.w	r3, r3, #31
 8023652:	f887 306d 	strb.w	r3, [r7, #109]	; 0x6d
 8023656:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802365a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802365e:	3301      	adds	r3, #1
 8023660:	b2da      	uxtb	r2, r3
 8023662:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023666:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 802366a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 802366e:	685a      	ldr	r2, [r3, #4]
 8023670:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023674:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023678:	4619      	mov	r1, r3
 802367a:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 802367e:	440b      	add	r3, r1
 8023680:	4413      	add	r3, r2
 8023682:	781b      	ldrb	r3, [r3, #0]
 8023684:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8023688:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 802368c:	2b06      	cmp	r3, #6
 802368e:	f040 80da 	bne.w	8023846 <retrieveIphcHeader+0xc6e>
 8023692:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023696:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802369a:	3301      	adds	r3, #1
 802369c:	b2da      	uxtb	r2, r3
 802369e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236a2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80236a6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80236aa:	685a      	ldr	r2, [r3, #4]
 80236ac:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236b0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80236b4:	4619      	mov	r1, r3
 80236b6:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80236ba:	440b      	add	r3, r1
 80236bc:	4413      	add	r3, r2
 80236be:	781a      	ldrb	r2, [r3, #0]
 80236c0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236c4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80236c8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236cc:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80236d0:	3301      	adds	r3, #1
 80236d2:	b2da      	uxtb	r2, r3
 80236d4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236d8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80236dc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236e0:	2200      	movs	r2, #0
 80236e2:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 80236e6:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80236ea:	3338      	adds	r3, #56	; 0x38
 80236ec:	2210      	movs	r2, #16
 80236ee:	2100      	movs	r1, #0
 80236f0:	4618      	mov	r0, r3
 80236f2:	f007 fd01 	bl	802b0f8 <memset>
 80236f6:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 80236fa:	2b01      	cmp	r3, #1
 80236fc:	d120      	bne.n	8023740 <retrieveIphcHeader+0xb68>
 80236fe:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023702:	3326      	adds	r3, #38	; 0x26
 8023704:	2211      	movs	r2, #17
 8023706:	2100      	movs	r1, #0
 8023708:	4618      	mov	r0, r3
 802370a:	f007 fcf5 	bl	802b0f8 <memset>
 802370e:	2005      	movs	r0, #5
 8023710:	f7e9 fc74 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023714:	4601      	mov	r1, r0
 8023716:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 802371a:	463b      	mov	r3, r7
 802371c:	4a4f      	ldr	r2, [pc, #316]	; (802385c <retrieveIphcHeader+0xc84>)
 802371e:	4618      	mov	r0, r3
 8023720:	f7eb fad6 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 8023724:	f104 0326 	add.w	r3, r4, #38	; 0x26
 8023728:	463a      	mov	r2, r7
 802372a:	6815      	ldr	r5, [r2, #0]
 802372c:	6854      	ldr	r4, [r2, #4]
 802372e:	6890      	ldr	r0, [r2, #8]
 8023730:	68d1      	ldr	r1, [r2, #12]
 8023732:	601d      	str	r5, [r3, #0]
 8023734:	605c      	str	r4, [r3, #4]
 8023736:	6098      	str	r0, [r3, #8]
 8023738:	60d9      	str	r1, [r3, #12]
 802373a:	7c12      	ldrb	r2, [r2, #16]
 802373c:	741a      	strb	r2, [r3, #16]
 802373e:	e082      	b.n	8023846 <retrieveIphcHeader+0xc6e>
 8023740:	f897 306d 	ldrb.w	r3, [r7, #109]	; 0x6d
 8023744:	3b01      	subs	r3, #1
 8023746:	2b08      	cmp	r3, #8
 8023748:	d02c      	beq.n	80237a4 <retrieveIphcHeader+0xbcc>
 802374a:	2b10      	cmp	r3, #16
 802374c:	d16b      	bne.n	8023826 <retrieveIphcHeader+0xc4e>
 802374e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8023752:	685a      	ldr	r2, [r3, #4]
 8023754:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023758:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 802375c:	4619      	mov	r1, r3
 802375e:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 8023762:	440b      	add	r3, r1
 8023764:	18d1      	adds	r1, r2, r3
 8023766:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 802376a:	4638      	mov	r0, r7
 802376c:	2300      	movs	r3, #0
 802376e:	2203      	movs	r2, #3
 8023770:	f005 fe0a 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 8023774:	f104 0326 	add.w	r3, r4, #38	; 0x26
 8023778:	463a      	mov	r2, r7
 802377a:	6815      	ldr	r5, [r2, #0]
 802377c:	6854      	ldr	r4, [r2, #4]
 802377e:	6890      	ldr	r0, [r2, #8]
 8023780:	68d1      	ldr	r1, [r2, #12]
 8023782:	601d      	str	r5, [r3, #0]
 8023784:	605c      	str	r4, [r3, #4]
 8023786:	6098      	str	r0, [r3, #8]
 8023788:	60d9      	str	r1, [r3, #12]
 802378a:	7c12      	ldrb	r2, [r2, #16]
 802378c:	741a      	strb	r2, [r3, #16]
 802378e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8023792:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8023796:	3310      	adds	r3, #16
 8023798:	b2da      	uxtb	r2, r3
 802379a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 802379e:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80237a2:	e050      	b.n	8023846 <retrieveIphcHeader+0xc6e>
 80237a4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80237a8:	685a      	ldr	r2, [r3, #4]
 80237aa:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80237ae:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80237b2:	4619      	mov	r1, r3
 80237b4:	f897 309c 	ldrb.w	r3, [r7, #156]	; 0x9c
 80237b8:	440b      	add	r3, r1
 80237ba:	18d1      	adds	r1, r2, r3
 80237bc:	6a3c      	ldr	r4, [r7, #32]
 80237be:	4638      	mov	r0, r7
 80237c0:	2300      	movs	r3, #0
 80237c2:	2202      	movs	r2, #2
 80237c4:	f005 fde0 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 80237c8:	4622      	mov	r2, r4
 80237ca:	463b      	mov	r3, r7
 80237cc:	681d      	ldr	r5, [r3, #0]
 80237ce:	685c      	ldr	r4, [r3, #4]
 80237d0:	6898      	ldr	r0, [r3, #8]
 80237d2:	68d9      	ldr	r1, [r3, #12]
 80237d4:	6015      	str	r5, [r2, #0]
 80237d6:	6054      	str	r4, [r2, #4]
 80237d8:	6090      	str	r0, [r2, #8]
 80237da:	60d1      	str	r1, [r2, #12]
 80237dc:	7c1b      	ldrb	r3, [r3, #16]
 80237de:	7413      	strb	r3, [r2, #16]
 80237e0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80237e4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80237e8:	3308      	adds	r3, #8
 80237ea:	b2da      	uxtb	r2, r3
 80237ec:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80237f0:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80237f4:	2005      	movs	r0, #5
 80237f6:	f7e9 fc01 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80237fa:	4601      	mov	r1, r0
 80237fc:	f8d7 4098 	ldr.w	r4, [r7, #152]	; 0x98
 8023800:	463b      	mov	r3, r7
 8023802:	6a3a      	ldr	r2, [r7, #32]
 8023804:	4618      	mov	r0, r3
 8023806:	f7eb fa63 	bl	800ecd0 <e1f09b154ce8c1c840a8dd2e4c2e0aa8149bfcd4>
 802380a:	f104 0326 	add.w	r3, r4, #38	; 0x26
 802380e:	463a      	mov	r2, r7
 8023810:	6815      	ldr	r5, [r2, #0]
 8023812:	6854      	ldr	r4, [r2, #4]
 8023814:	6890      	ldr	r0, [r2, #8]
 8023816:	68d1      	ldr	r1, [r2, #12]
 8023818:	601d      	str	r5, [r3, #0]
 802381a:	605c      	str	r4, [r3, #4]
 802381c:	6098      	str	r0, [r3, #8]
 802381e:	60d9      	str	r1, [r3, #12]
 8023820:	7c12      	ldrb	r2, [r2, #16]
 8023822:	741a      	strb	r2, [r3, #16]
 8023824:	e00f      	b.n	8023846 <retrieveIphcHeader+0xc6e>
 8023826:	4a0b      	ldr	r2, [pc, #44]	; (8023854 <retrieveIphcHeader+0xc7c>)
 8023828:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802382c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023830:	e883 0003 	stmia.w	r3, {r0, r1}
 8023834:	4a0a      	ldr	r2, [pc, #40]	; (8023860 <retrieveIphcHeader+0xc88>)
 8023836:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802383a:	e893 0003 	ldmia.w	r3, {r0, r1}
 802383e:	f7f1 fce3 	bl	8015208 <LOGGER_PrintLine>
 8023842:	e000      	b.n	8023846 <retrieveIphcHeader+0xc6e>
 8023844:	bf00      	nop
 8023846:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 802384a:	4618      	mov	r0, r3
 802384c:	3770      	adds	r7, #112	; 0x70
 802384e:	46bd      	mov	sp, r7
 8023850:	bdb0      	pop	{r4, r5, r7, pc}
 8023852:	bf00      	nop
 8023854:	080309fc 	.word	0x080309fc
 8023858:	08030b00 	.word	0x08030b00
 802385c:	08031aa4 	.word	0x08031aa4
 8023860:	08030b10 	.word	0x08030b10

08023864 <prependIPv6HopByHopHeader>:
 8023864:	b580      	push	{r7, lr}
 8023866:	b084      	sub	sp, #16
 8023868:	af00      	add	r7, sp, #0
 802386a:	6078      	str	r0, [r7, #4]
 802386c:	6039      	str	r1, [r7, #0]
 802386e:	683b      	ldr	r3, [r7, #0]
 8023870:	785b      	ldrb	r3, [r3, #1]
 8023872:	f003 0301 	and.w	r3, r3, #1
 8023876:	2b00      	cmp	r3, #0
 8023878:	d117      	bne.n	80238aa <prependIPv6HopByHopHeader+0x46>
 802387a:	2102      	movs	r1, #2
 802387c:	6878      	ldr	r0, [r7, #4]
 802387e:	f005 fe09 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8023882:	683b      	ldr	r3, [r7, #0]
 8023884:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 8023888:	b29b      	uxth	r3, r3
 802388a:	0a1b      	lsrs	r3, r3, #8
 802388c:	b29a      	uxth	r2, r3
 802388e:	687b      	ldr	r3, [r7, #4]
 8023890:	685b      	ldr	r3, [r3, #4]
 8023892:	b2d2      	uxtb	r2, r2
 8023894:	701a      	strb	r2, [r3, #0]
 8023896:	683b      	ldr	r3, [r7, #0]
 8023898:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 802389c:	b29a      	uxth	r2, r3
 802389e:	687b      	ldr	r3, [r7, #4]
 80238a0:	685b      	ldr	r3, [r3, #4]
 80238a2:	3301      	adds	r3, #1
 80238a4:	b2d2      	uxtb	r2, r2
 80238a6:	701a      	strb	r2, [r3, #0]
 80238a8:	e00d      	b.n	80238c6 <prependIPv6HopByHopHeader+0x62>
 80238aa:	2101      	movs	r1, #1
 80238ac:	6878      	ldr	r0, [r7, #4]
 80238ae:	f005 fdf1 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80238b2:	683b      	ldr	r3, [r7, #0]
 80238b4:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80238b8:	b29b      	uxth	r3, r3
 80238ba:	0a1b      	lsrs	r3, r3, #8
 80238bc:	b29a      	uxth	r2, r3
 80238be:	687b      	ldr	r3, [r7, #4]
 80238c0:	685b      	ldr	r3, [r3, #4]
 80238c2:	b2d2      	uxtb	r2, r2
 80238c4:	701a      	strb	r2, [r3, #0]
 80238c6:	683b      	ldr	r3, [r7, #0]
 80238c8:	785b      	ldrb	r3, [r3, #1]
 80238ca:	f003 0302 	and.w	r3, r3, #2
 80238ce:	2b00      	cmp	r3, #0
 80238d0:	d108      	bne.n	80238e4 <prependIPv6HopByHopHeader+0x80>
 80238d2:	2101      	movs	r1, #1
 80238d4:	6878      	ldr	r0, [r7, #4]
 80238d6:	f005 fddd 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80238da:	687b      	ldr	r3, [r7, #4]
 80238dc:	685b      	ldr	r3, [r3, #4]
 80238de:	683a      	ldr	r2, [r7, #0]
 80238e0:	7892      	ldrb	r2, [r2, #2]
 80238e2:	701a      	strb	r2, [r3, #0]
 80238e4:	2101      	movs	r1, #1
 80238e6:	6878      	ldr	r0, [r7, #4]
 80238e8:	f005 fdd4 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80238ec:	687b      	ldr	r3, [r7, #4]
 80238ee:	685b      	ldr	r3, [r3, #4]
 80238f0:	2205      	movs	r2, #5
 80238f2:	701a      	strb	r2, [r3, #0]
 80238f4:	683b      	ldr	r3, [r7, #0]
 80238f6:	785b      	ldrb	r3, [r3, #1]
 80238f8:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80238fc:	73fb      	strb	r3, [r7, #15]
 80238fe:	2101      	movs	r1, #1
 8023900:	6878      	ldr	r0, [r7, #4]
 8023902:	f005 fdc7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8023906:	687b      	ldr	r3, [r7, #4]
 8023908:	685b      	ldr	r3, [r3, #4]
 802390a:	7bfa      	ldrb	r2, [r7, #15]
 802390c:	701a      	strb	r2, [r3, #0]
 802390e:	bf00      	nop
 8023910:	3710      	adds	r7, #16
 8023912:	46bd      	mov	sp, r7
 8023914:	bd80      	pop	{r7, pc}
	...

08023918 <6fdc701aa2cd71dee737cd6193e5dab778619cb9>:
 8023918:	b580      	push	{r7, lr}
 802391a:	b086      	sub	sp, #24
 802391c:	af00      	add	r7, sp, #0
 802391e:	6078      	str	r0, [r7, #4]
 8023920:	6039      	str	r1, [r7, #0]
 8023922:	2300      	movs	r3, #0
 8023924:	75fb      	strb	r3, [r7, #23]
 8023926:	687b      	ldr	r3, [r7, #4]
 8023928:	685a      	ldr	r2, [r3, #4]
 802392a:	7dfb      	ldrb	r3, [r7, #23]
 802392c:	4413      	add	r3, r2
 802392e:	781b      	ldrb	r3, [r3, #0]
 8023930:	75bb      	strb	r3, [r7, #22]
 8023932:	687b      	ldr	r3, [r7, #4]
 8023934:	685a      	ldr	r2, [r3, #4]
 8023936:	7dfb      	ldrb	r3, [r7, #23]
 8023938:	3301      	adds	r3, #1
 802393a:	4413      	add	r3, r2
 802393c:	781b      	ldrb	r3, [r3, #0]
 802393e:	757b      	strb	r3, [r7, #21]
 8023940:	7dbb      	ldrb	r3, [r7, #22]
 8023942:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8023946:	2b80      	cmp	r3, #128	; 0x80
 8023948:	d157      	bne.n	80239fa <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0xe2>
 802394a:	7d7b      	ldrb	r3, [r7, #21]
 802394c:	2b05      	cmp	r3, #5
 802394e:	d154      	bne.n	80239fa <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0xe2>
 8023950:	7dfb      	ldrb	r3, [r7, #23]
 8023952:	3302      	adds	r3, #2
 8023954:	75fb      	strb	r3, [r7, #23]
 8023956:	7dbb      	ldrb	r3, [r7, #22]
 8023958:	f003 031f 	and.w	r3, r3, #31
 802395c:	b2da      	uxtb	r2, r3
 802395e:	683b      	ldr	r3, [r7, #0]
 8023960:	705a      	strb	r2, [r3, #1]
 8023962:	7dbb      	ldrb	r3, [r7, #22]
 8023964:	f003 0302 	and.w	r3, r3, #2
 8023968:	2b00      	cmp	r3, #0
 802396a:	d10a      	bne.n	8023982 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0x6a>
 802396c:	687b      	ldr	r3, [r7, #4]
 802396e:	685a      	ldr	r2, [r3, #4]
 8023970:	7dfb      	ldrb	r3, [r7, #23]
 8023972:	4413      	add	r3, r2
 8023974:	781a      	ldrb	r2, [r3, #0]
 8023976:	683b      	ldr	r3, [r7, #0]
 8023978:	709a      	strb	r2, [r3, #2]
 802397a:	7dfb      	ldrb	r3, [r7, #23]
 802397c:	3301      	adds	r3, #1
 802397e:	75fb      	strb	r3, [r7, #23]
 8023980:	e002      	b.n	8023988 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0x70>
 8023982:	683b      	ldr	r3, [r7, #0]
 8023984:	2200      	movs	r2, #0
 8023986:	709a      	strb	r2, [r3, #2]
 8023988:	7dbb      	ldrb	r3, [r7, #22]
 802398a:	f003 0301 	and.w	r3, r3, #1
 802398e:	2b00      	cmp	r3, #0
 8023990:	d11d      	bne.n	80239ce <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0xb6>
 8023992:	687b      	ldr	r3, [r7, #4]
 8023994:	685a      	ldr	r2, [r3, #4]
 8023996:	7dfb      	ldrb	r3, [r7, #23]
 8023998:	4413      	add	r3, r2
 802399a:	781b      	ldrb	r3, [r3, #0]
 802399c:	461a      	mov	r2, r3
 802399e:	683b      	ldr	r3, [r7, #0]
 80239a0:	f8a3 2003 	strh.w	r2, [r3, #3]
 80239a4:	683b      	ldr	r3, [r7, #0]
 80239a6:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80239aa:	b29b      	uxth	r3, r3
 80239ac:	021b      	lsls	r3, r3, #8
 80239ae:	b29b      	uxth	r3, r3
 80239b0:	687a      	ldr	r2, [r7, #4]
 80239b2:	6851      	ldr	r1, [r2, #4]
 80239b4:	7dfa      	ldrb	r2, [r7, #23]
 80239b6:	3201      	adds	r2, #1
 80239b8:	440a      	add	r2, r1
 80239ba:	7812      	ldrb	r2, [r2, #0]
 80239bc:	4413      	add	r3, r2
 80239be:	b29a      	uxth	r2, r3
 80239c0:	683b      	ldr	r3, [r7, #0]
 80239c2:	f8a3 2003 	strh.w	r2, [r3, #3]
 80239c6:	7dfb      	ldrb	r3, [r7, #23]
 80239c8:	3302      	adds	r3, #2
 80239ca:	75fb      	strb	r3, [r7, #23]
 80239cc:	e023      	b.n	8023a16 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0xfe>
 80239ce:	687b      	ldr	r3, [r7, #4]
 80239d0:	685a      	ldr	r2, [r3, #4]
 80239d2:	7dfb      	ldrb	r3, [r7, #23]
 80239d4:	4413      	add	r3, r2
 80239d6:	781b      	ldrb	r3, [r3, #0]
 80239d8:	461a      	mov	r2, r3
 80239da:	683b      	ldr	r3, [r7, #0]
 80239dc:	f8a3 2003 	strh.w	r2, [r3, #3]
 80239e0:	683b      	ldr	r3, [r7, #0]
 80239e2:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80239e6:	b29b      	uxth	r3, r3
 80239e8:	021b      	lsls	r3, r3, #8
 80239ea:	b29a      	uxth	r2, r3
 80239ec:	683b      	ldr	r3, [r7, #0]
 80239ee:	f8a3 2003 	strh.w	r2, [r3, #3]
 80239f2:	7dfb      	ldrb	r3, [r7, #23]
 80239f4:	3301      	adds	r3, #1
 80239f6:	75fb      	strb	r3, [r7, #23]
 80239f8:	e00d      	b.n	8023a16 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0xfe>
 80239fa:	4a09      	ldr	r2, [pc, #36]	; (8023a20 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0x108>)
 80239fc:	f107 030c 	add.w	r3, r7, #12
 8023a00:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023a04:	e883 0003 	stmia.w	r3, {r0, r1}
 8023a08:	4a06      	ldr	r2, [pc, #24]	; (8023a24 <6fdc701aa2cd71dee737cd6193e5dab778619cb9+0x10c>)
 8023a0a:	f107 030c 	add.w	r3, r7, #12
 8023a0e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023a12:	f7f1 fbf9 	bl	8015208 <LOGGER_PrintLine>
 8023a16:	7dfb      	ldrb	r3, [r7, #23]
 8023a18:	4618      	mov	r0, r3
 8023a1a:	3718      	adds	r7, #24
 8023a1c:	46bd      	mov	sp, r7
 8023a1e:	bd80      	pop	{r7, pc}
 8023a20:	080309fc 	.word	0x080309fc
 8023a24:	08030b24 	.word	0x08030b24

08023a28 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8023a28:	b480      	push	{r7}
 8023a2a:	b089      	sub	sp, #36	; 0x24
 8023a2c:	af00      	add	r7, sp, #0
 8023a2e:	60f8      	str	r0, [r7, #12]
 8023a30:	60b9      	str	r1, [r7, #8]
 8023a32:	607a      	str	r2, [r7, #4]
 8023a34:	68fb      	ldr	r3, [r7, #12]
 8023a36:	61fb      	str	r3, [r7, #28]
 8023a38:	68bb      	ldr	r3, [r7, #8]
 8023a3a:	61bb      	str	r3, [r7, #24]
 8023a3c:	687b      	ldr	r3, [r7, #4]
 8023a3e:	617b      	str	r3, [r7, #20]
 8023a40:	2300      	movs	r3, #0
 8023a42:	613b      	str	r3, [r7, #16]
 8023a44:	e00d      	b.n	8023a62 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8023a46:	69ba      	ldr	r2, [r7, #24]
 8023a48:	693b      	ldr	r3, [r7, #16]
 8023a4a:	441a      	add	r2, r3
 8023a4c:	6979      	ldr	r1, [r7, #20]
 8023a4e:	693b      	ldr	r3, [r7, #16]
 8023a50:	1acb      	subs	r3, r1, r3
 8023a52:	3b01      	subs	r3, #1
 8023a54:	69f9      	ldr	r1, [r7, #28]
 8023a56:	440b      	add	r3, r1
 8023a58:	7812      	ldrb	r2, [r2, #0]
 8023a5a:	701a      	strb	r2, [r3, #0]
 8023a5c:	693b      	ldr	r3, [r7, #16]
 8023a5e:	3301      	adds	r3, #1
 8023a60:	613b      	str	r3, [r7, #16]
 8023a62:	697a      	ldr	r2, [r7, #20]
 8023a64:	693b      	ldr	r3, [r7, #16]
 8023a66:	429a      	cmp	r2, r3
 8023a68:	d8ed      	bhi.n	8023a46 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8023a6a:	bf00      	nop
 8023a6c:	bf00      	nop
 8023a6e:	3724      	adds	r7, #36	; 0x24
 8023a70:	46bd      	mov	sp, r7
 8023a72:	bc80      	pop	{r7}
 8023a74:	4770      	bx	lr

08023a76 <294ac47dbf0553b0bc1a0d13a73dce6f2c303667>:
 8023a76:	b480      	push	{r7}
 8023a78:	af00      	add	r7, sp, #0
 8023a7a:	bf00      	nop
 8023a7c:	46bd      	mov	sp, r7
 8023a7e:	bc80      	pop	{r7}
 8023a80:	4770      	bx	lr

08023a82 <7642e1952f3dfa50bc246e452b3db5bce6f65fea>:
 8023a82:	b480      	push	{r7}
 8023a84:	af00      	add	r7, sp, #0
 8023a86:	bf00      	nop
 8023a88:	46bd      	mov	sp, r7
 8023a8a:	bc80      	pop	{r7}
 8023a8c:	4770      	bx	lr

08023a8e <329b6edcbe2eed1a451d1df4c9584a68c1390127>:
 8023a8e:	b480      	push	{r7}
 8023a90:	af00      	add	r7, sp, #0
 8023a92:	bf00      	nop
 8023a94:	46bd      	mov	sp, r7
 8023a96:	bc80      	pop	{r7}
 8023a98:	4770      	bx	lr

08023a9a <00af7f89235fe04a2b2b59d942644988487fcbf4>:
 8023a9a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023a9c:	b0d9      	sub	sp, #356	; 0x164
 8023a9e:	af0c      	add	r7, sp, #48	; 0x30
 8023aa0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023aa4:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023aa8:	6018      	str	r0, [r3, #0]
 8023aaa:	2300      	movs	r3, #0
 8023aac:	677b      	str	r3, [r7, #116]	; 0x74
 8023aae:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023ab2:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023ab6:	681b      	ldr	r3, [r3, #0]
 8023ab8:	2274      	movs	r2, #116	; 0x74
 8023aba:	705a      	strb	r2, [r3, #1]
 8023abc:	2300      	movs	r3, #0
 8023abe:	f887 3125 	strb.w	r3, [r7, #293]	; 0x125
 8023ac2:	2002      	movs	r0, #2
 8023ac4:	f7e9 fa9a 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023ac8:	f8c7 0118 	str.w	r0, [r7, #280]	; 0x118
 8023acc:	2300      	movs	r3, #0
 8023ace:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8023ad2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023ad6:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023ada:	681b      	ldr	r3, [r3, #0]
 8023adc:	2203      	movs	r2, #3
 8023ade:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 8023ae2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023ae6:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023aea:	681b      	ldr	r3, [r3, #0]
 8023aec:	f103 021d 	add.w	r2, r3, #29
 8023af0:	463b      	mov	r3, r7
 8023af2:	4611      	mov	r1, r2
 8023af4:	4618      	mov	r0, r3
 8023af6:	f7eb f835 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 8023afa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023afe:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8023b02:	f107 044c 	add.w	r4, r7, #76	; 0x4c
 8023b06:	461d      	mov	r5, r3
 8023b08:	6828      	ldr	r0, [r5, #0]
 8023b0a:	6869      	ldr	r1, [r5, #4]
 8023b0c:	68aa      	ldr	r2, [r5, #8]
 8023b0e:	68eb      	ldr	r3, [r5, #12]
 8023b10:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8023b12:	7c2b      	ldrb	r3, [r5, #16]
 8023b14:	7023      	strb	r3, [r4, #0]
 8023b16:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023b1a:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023b1e:	681b      	ldr	r3, [r3, #0]
 8023b20:	f103 021d 	add.w	r2, r3, #29
 8023b24:	463b      	mov	r3, r7
 8023b26:	4611      	mov	r1, r2
 8023b28:	4618      	mov	r0, r3
 8023b2a:	f7eb f875 	bl	800ec18 <2af6233fa7118fd11caf81b4f86d81e84f105465>
 8023b2e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023b32:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8023b36:	f107 0460 	add.w	r4, r7, #96	; 0x60
 8023b3a:	461d      	mov	r5, r3
 8023b3c:	6828      	ldr	r0, [r5, #0]
 8023b3e:	6869      	ldr	r1, [r5, #4]
 8023b40:	68aa      	ldr	r2, [r5, #8]
 8023b42:	68eb      	ldr	r3, [r5, #12]
 8023b44:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8023b46:	7c2b      	ldrb	r3, [r5, #16]
 8023b48:	7023      	strb	r3, [r4, #0]
 8023b4a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023b4e:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023b52:	681b      	ldr	r3, [r3, #0]
 8023b54:	331d      	adds	r3, #29
 8023b56:	4618      	mov	r0, r3
 8023b58:	f7eb fbca 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 8023b5c:	4603      	mov	r3, r0
 8023b5e:	2b00      	cmp	r3, #0
 8023b60:	d117      	bne.n	8023b92 <00af7f89235fe04a2b2b59d942644988487fcbf4+0xf8>
 8023b62:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023b66:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023b6a:	681b      	ldr	r3, [r3, #0]
 8023b6c:	331d      	adds	r3, #29
 8023b6e:	4618      	mov	r0, r3
 8023b70:	f7eb fb1e 	bl	800f1b0 <271b2dbe31e411eac579adb987eb6de74d66e6b2>
 8023b74:	4603      	mov	r3, r0
 8023b76:	2b00      	cmp	r3, #0
 8023b78:	d10b      	bne.n	8023b92 <00af7f89235fe04a2b2b59d942644988487fcbf4+0xf8>
 8023b7a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023b7e:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023b82:	681b      	ldr	r3, [r3, #0]
 8023b84:	331d      	adds	r3, #29
 8023b86:	4618      	mov	r0, r3
 8023b88:	f7eb fb62 	bl	800f250 <2ab4f7466be7c52a3baa6ff62574d1f49ba464e7>
 8023b8c:	4603      	mov	r3, r0
 8023b8e:	2b00      	cmp	r3, #0
 8023b90:	d01a      	beq.n	8023bc8 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x12e>
 8023b92:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8023b96:	2211      	movs	r2, #17
 8023b98:	2100      	movs	r1, #0
 8023b9a:	4618      	mov	r0, r3
 8023b9c:	f007 faac 	bl	802b0f8 <memset>
 8023ba0:	2305      	movs	r3, #5
 8023ba2:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8023ba6:	23fe      	movs	r3, #254	; 0xfe
 8023ba8:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
 8023bac:	2380      	movs	r3, #128	; 0x80
 8023bae:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8023bb2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8023bb6:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8023bba:	2300      	movs	r3, #0
 8023bbc:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8023bc0:	2300      	movs	r3, #0
 8023bc2:	f887 3124 	strb.w	r3, [r7, #292]	; 0x124
 8023bc6:	e035      	b.n	8023c34 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x19a>
 8023bc8:	2005      	movs	r0, #5
 8023bca:	f7e9 fa17 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023bce:	4602      	mov	r2, r0
 8023bd0:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8023bd4:	4611      	mov	r1, r2
 8023bd6:	4618      	mov	r0, r3
 8023bd8:	f7eb fba8 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8023bdc:	4603      	mov	r3, r0
 8023bde:	f083 0301 	eor.w	r3, r3, #1
 8023be2:	b2db      	uxtb	r3, r3
 8023be4:	2b00      	cmp	r3, #0
 8023be6:	d01a      	beq.n	8023c1e <00af7f89235fe04a2b2b59d942644988487fcbf4+0x184>
 8023be8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023bec:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023bf0:	681b      	ldr	r3, [r3, #0]
 8023bf2:	331d      	adds	r3, #29
 8023bf4:	4618      	mov	r0, r3
 8023bf6:	f7eb fa93 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8023bfa:	4603      	mov	r3, r0
 8023bfc:	f083 0301 	eor.w	r3, r3, #1
 8023c00:	b2db      	uxtb	r3, r3
 8023c02:	2b00      	cmp	r3, #0
 8023c04:	d00b      	beq.n	8023c1e <00af7f89235fe04a2b2b59d942644988487fcbf4+0x184>
 8023c06:	2005      	movs	r0, #5
 8023c08:	f7e9 f9f8 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023c0c:	f8c7 011c 	str.w	r0, [r7, #284]	; 0x11c
 8023c10:	2300      	movs	r3, #0
 8023c12:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8023c16:	2300      	movs	r3, #0
 8023c18:	f887 3124 	strb.w	r3, [r7, #292]	; 0x124
 8023c1c:	e00a      	b.n	8023c34 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x19a>
 8023c1e:	2005      	movs	r0, #5
 8023c20:	f7e9 f9ec 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8023c24:	f8c7 011c 	str.w	r0, [r7, #284]	; 0x11c
 8023c28:	2301      	movs	r3, #1
 8023c2a:	f887 3127 	strb.w	r3, [r7, #295]	; 0x127
 8023c2e:	2301      	movs	r3, #1
 8023c30:	f887 3124 	strb.w	r3, [r7, #292]	; 0x124
 8023c34:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023c38:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023c3c:	681b      	ldr	r3, [r3, #0]
 8023c3e:	f103 002f 	add.w	r0, r3, #47	; 0x2f
 8023c42:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8023c46:	3301      	adds	r3, #1
 8023c48:	2208      	movs	r2, #8
 8023c4a:	4619      	mov	r1, r3
 8023c4c:	f007 faf3 	bl	802b236 <memcpy>
 8023c50:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023c54:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023c58:	681b      	ldr	r3, [r3, #0]
 8023c5a:	f103 0037 	add.w	r0, r3, #55	; 0x37
 8023c5e:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 8023c62:	3301      	adds	r3, #1
 8023c64:	2208      	movs	r2, #8
 8023c66:	4619      	mov	r1, r3
 8023c68:	f007 fae5 	bl	802b236 <memcpy>
 8023c6c:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8023c70:	224c      	movs	r2, #76	; 0x4c
 8023c72:	2100      	movs	r1, #0
 8023c74:	4618      	mov	r0, r3
 8023c76:	f007 fa3f 	bl	802b0f8 <memset>
 8023c7a:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8023c7e:	224c      	movs	r2, #76	; 0x4c
 8023c80:	2100      	movs	r1, #0
 8023c82:	4618      	mov	r0, r3
 8023c84:	f007 fa38 	bl	802b0f8 <memset>
 8023c88:	2341      	movs	r3, #65	; 0x41
 8023c8a:	f887 30a4 	strb.w	r3, [r7, #164]	; 0xa4
 8023c8e:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8023c92:	2100      	movs	r1, #0
 8023c94:	4618      	mov	r0, r3
 8023c96:	f001 f9e5 	bl	8025064 <ff79dcb9f0638f1ac99659a38f02861c009c540c>
 8023c9a:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8023c9e:	f8d7 111c 	ldr.w	r1, [r7, #284]	; 0x11c
 8023ca2:	4618      	mov	r0, r3
 8023ca4:	f7eb fb42 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8023ca8:	4603      	mov	r3, r0
 8023caa:	2b00      	cmp	r3, #0
 8023cac:	d020      	beq.n	8023cf0 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x256>
 8023cae:	2301      	movs	r3, #1
 8023cb0:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8023cb4:	2301      	movs	r3, #1
 8023cb6:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8023cba:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8023cbe:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8023cc2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8023cc6:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8023cca:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023cce:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023cd2:	681b      	ldr	r3, [r3, #0]
 8023cd4:	331d      	adds	r3, #29
 8023cd6:	4618      	mov	r0, r3
 8023cd8:	f7eb fb0a 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 8023cdc:	4603      	mov	r3, r0
 8023cde:	2b00      	cmp	r3, #0
 8023ce0:	d059      	beq.n	8023d96 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x2fc>
 8023ce2:	2303      	movs	r3, #3
 8023ce4:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8023ce8:	2303      	movs	r3, #3
 8023cea:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8023cee:	e052      	b.n	8023d96 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x2fc>
 8023cf0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023cf4:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023cf8:	681b      	ldr	r3, [r3, #0]
 8023cfa:	331d      	adds	r3, #29
 8023cfc:	4618      	mov	r0, r3
 8023cfe:	f7eb fa0f 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8023d02:	4603      	mov	r3, r0
 8023d04:	f083 0301 	eor.w	r3, r3, #1
 8023d08:	b2db      	uxtb	r3, r3
 8023d0a:	2b00      	cmp	r3, #0
 8023d0c:	d02a      	beq.n	8023d64 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x2ca>
 8023d0e:	2300      	movs	r3, #0
 8023d10:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8023d14:	2300      	movs	r3, #0
 8023d16:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8023d1a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023d1e:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023d22:	681b      	ldr	r3, [r3, #0]
 8023d24:	331d      	adds	r3, #29
 8023d26:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8023d2a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023d2e:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023d32:	681b      	ldr	r3, [r3, #0]
 8023d34:	332e      	adds	r3, #46	; 0x2e
 8023d36:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8023d3a:	2303      	movs	r3, #3
 8023d3c:	f887 30f2 	strb.w	r3, [r7, #242]	; 0xf2
 8023d40:	f8d7 2128 	ldr.w	r2, [r7, #296]	; 0x128
 8023d44:	f107 03f2 	add.w	r3, r7, #242	; 0xf2
 8023d48:	6815      	ldr	r5, [r2, #0]
 8023d4a:	6854      	ldr	r4, [r2, #4]
 8023d4c:	6890      	ldr	r0, [r2, #8]
 8023d4e:	68d1      	ldr	r1, [r2, #12]
 8023d50:	601d      	str	r5, [r3, #0]
 8023d52:	605c      	str	r4, [r3, #4]
 8023d54:	6098      	str	r0, [r3, #8]
 8023d56:	60d9      	str	r1, [r3, #12]
 8023d58:	7c12      	ldrb	r2, [r2, #16]
 8023d5a:	741a      	strb	r2, [r3, #16]
 8023d5c:	2341      	movs	r3, #65	; 0x41
 8023d5e:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 8023d62:	e018      	b.n	8023d96 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x2fc>
 8023d64:	2303      	movs	r3, #3
 8023d66:	f887 3126 	strb.w	r3, [r7, #294]	; 0x126
 8023d6a:	2301      	movs	r3, #1
 8023d6c:	f887 3125 	strb.w	r3, [r7, #293]	; 0x125
 8023d70:	2303      	movs	r3, #3
 8023d72:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8023d76:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023d7a:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023d7e:	681b      	ldr	r3, [r3, #0]
 8023d80:	331d      	adds	r3, #29
 8023d82:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8023d86:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023d8a:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023d8e:	681b      	ldr	r3, [r3, #0]
 8023d90:	332e      	adds	r3, #46	; 0x2e
 8023d92:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8023d96:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023d9a:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023d9e:	681b      	ldr	r3, [r3, #0]
 8023da0:	7c5b      	ldrb	r3, [r3, #17]
 8023da2:	2b00      	cmp	r3, #0
 8023da4:	d003      	beq.n	8023dae <00af7f89235fe04a2b2b59d942644988487fcbf4+0x314>
 8023da6:	2301      	movs	r3, #1
 8023da8:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 8023dac:	e002      	b.n	8023db4 <00af7f89235fe04a2b2b59d942644988487fcbf4+0x31a>
 8023dae:	2300      	movs	r3, #0
 8023db0:	f887 3122 	strb.w	r3, [r7, #290]	; 0x122
 8023db4:	6f7d      	ldr	r5, [r7, #116]	; 0x74
 8023db6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023dba:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8023dbe:	681b      	ldr	r3, [r3, #0]
 8023dc0:	7c1b      	ldrb	r3, [r3, #16]
 8023dc2:	f897 20f0 	ldrb.w	r2, [r7, #240]	; 0xf0
 8023dc6:	f897 1125 	ldrb.w	r1, [r7, #293]	; 0x125
 8023dca:	2900      	cmp	r1, #0
 8023dcc:	bf14      	ite	ne
 8023dce:	2101      	movne	r1, #1
 8023dd0:	2100      	moveq	r1, #0
 8023dd2:	b2c9      	uxtb	r1, r1
 8023dd4:	f897 6122 	ldrb.w	r6, [r7, #290]	; 0x122
 8023dd8:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8023ddc:	f5a0 708a 	sub.w	r0, r0, #276	; 0x114
 8023de0:	2402      	movs	r4, #2
 8023de2:	940b      	str	r4, [sp, #44]	; 0x2c
 8023de4:	f8d7 4128 	ldr.w	r4, [r7, #296]	; 0x128
 8023de8:	940a      	str	r4, [sp, #40]	; 0x28
 8023dea:	f8d7 412c 	ldr.w	r4, [r7, #300]	; 0x12c
 8023dee:	9409      	str	r4, [sp, #36]	; 0x24
 8023df0:	f897 4123 	ldrb.w	r4, [r7, #291]	; 0x123
 8023df4:	9408      	str	r4, [sp, #32]
 8023df6:	f897 4124 	ldrb.w	r4, [r7, #292]	; 0x124
 8023dfa:	9407      	str	r4, [sp, #28]
 8023dfc:	9106      	str	r1, [sp, #24]
 8023dfe:	f897 1126 	ldrb.w	r1, [r7, #294]	; 0x126
 8023e02:	9105      	str	r1, [sp, #20]
 8023e04:	f897 1127 	ldrb.w	r1, [r7, #295]	; 0x127
 8023e08:	9104      	str	r1, [sp, #16]
 8023e0a:	2100      	movs	r1, #0
 8023e0c:	9103      	str	r1, [sp, #12]
 8023e0e:	9202      	str	r2, [sp, #8]
 8023e10:	2202      	movs	r2, #2
 8023e12:	9201      	str	r2, [sp, #4]
 8023e14:	9300      	str	r3, [sp, #0]
 8023e16:	4633      	mov	r3, r6
 8023e18:	462a      	mov	r2, r5
 8023e1a:	2103      	movs	r1, #3
 8023e1c:	6800      	ldr	r0, [r0, #0]
 8023e1e:	f7fe f967 	bl	80220f0 <2058bb475204def8ad39a4c1db4c087e75b9f860>
 8023e22:	2301      	movs	r3, #1
 8023e24:	f887 30d4 	strb.w	r3, [r7, #212]	; 0xd4
 8023e28:	f107 0478 	add.w	r4, r7, #120	; 0x78
 8023e2c:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8023e30:	f107 01cc 	add.w	r1, r7, #204	; 0xcc
 8023e34:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8023e38:	f5a3 708a 	sub.w	r0, r3, #276	; 0x114
 8023e3c:	2302      	movs	r3, #2
 8023e3e:	9301      	str	r3, [sp, #4]
 8023e40:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8023e44:	9300      	str	r3, [sp, #0]
 8023e46:	4623      	mov	r3, r4
 8023e48:	6800      	ldr	r0, [r0, #0]
 8023e4a:	f000 fb01 	bl	8024450 <1b70dd809fc4873e9266aad98968a88e80b5bf06>
 8023e4e:	4603      	mov	r3, r0
 8023e50:	4618      	mov	r0, r3
 8023e52:	f507 779a 	add.w	r7, r7, #308	; 0x134
 8023e56:	46bd      	mov	sp, r7
 8023e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08023e5c <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2>:
 8023e5c:	b580      	push	{r7, lr}
 8023e5e:	b094      	sub	sp, #80	; 0x50
 8023e60:	af00      	add	r7, sp, #0
 8023e62:	6078      	str	r0, [r7, #4]
 8023e64:	460b      	mov	r3, r1
 8023e66:	70fb      	strb	r3, [r7, #3]
 8023e68:	687b      	ldr	r3, [r7, #4]
 8023e6a:	2274      	movs	r2, #116	; 0x74
 8023e6c:	705a      	strb	r2, [r3, #1]
 8023e6e:	687b      	ldr	r3, [r7, #4]
 8023e70:	781b      	ldrb	r3, [r3, #0]
 8023e72:	2b74      	cmp	r3, #116	; 0x74
 8023e74:	f040 8098 	bne.w	8023fa8 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x14c>
 8023e78:	78fb      	ldrb	r3, [r7, #3]
 8023e7a:	f083 0301 	eor.w	r3, r3, #1
 8023e7e:	b2db      	uxtb	r3, r3
 8023e80:	2b00      	cmp	r3, #0
 8023e82:	f000 808d 	beq.w	8023fa0 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x144>
 8023e86:	f7f1 fa09 	bl	801529c <LOGGER_StartSection>
 8023e8a:	4603      	mov	r3, r0
 8023e8c:	2b00      	cmp	r3, #0
 8023e8e:	d03a      	beq.n	8023f06 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0xaa>
 8023e90:	4a5a      	ldr	r2, [pc, #360]	; (8023ffc <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a0>)
 8023e92:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8023e96:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023e9a:	e883 0003 	stmia.w	r3, {r0, r1}
 8023e9e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8023ea2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023ea6:	f7f1 fa15 	bl	80152d4 <LOGGER_PrintHeader>
 8023eaa:	687b      	ldr	r3, [r7, #4]
 8023eac:	f103 0126 	add.w	r1, r3, #38	; 0x26
 8023eb0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8023eb4:	2208      	movs	r2, #8
 8023eb6:	4618      	mov	r0, r3
 8023eb8:	f7ff fdb6 	bl	8023a28 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8023ebc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8023ec0:	484f      	ldr	r0, [pc, #316]	; (8024000 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a4>)
 8023ec2:	f7f1 f9d3 	bl	801526c <LOGGER_Print>
 8023ec6:	687b      	ldr	r3, [r7, #4]
 8023ec8:	f103 0137 	add.w	r1, r3, #55	; 0x37
 8023ecc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8023ed0:	2208      	movs	r2, #8
 8023ed2:	4618      	mov	r0, r3
 8023ed4:	f7ff fda8 	bl	8023a28 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8023ed8:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8023edc:	4849      	ldr	r0, [pc, #292]	; (8024004 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a8>)
 8023ede:	f7f1 f9c5 	bl	801526c <LOGGER_Print>
 8023ee2:	687b      	ldr	r3, [r7, #4]
 8023ee4:	f103 0142 	add.w	r1, r3, #66	; 0x42
 8023ee8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8023eec:	2208      	movs	r2, #8
 8023eee:	4618      	mov	r0, r3
 8023ef0:	f7ff fd9a 	bl	8023a28 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8023ef4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8023ef8:	4843      	ldr	r0, [pc, #268]	; (8024008 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1ac>)
 8023efa:	f7f1 f9b7 	bl	801526c <LOGGER_Print>
 8023efe:	f7f1 f975 	bl	80151ec <LOGGER_PrintNL>
 8023f02:	f7f1 f9de 	bl	80152c2 <LOGGER_EndSection>
 8023f06:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8023f0a:	2200      	movs	r2, #0
 8023f0c:	601a      	str	r2, [r3, #0]
 8023f0e:	605a      	str	r2, [r3, #4]
 8023f10:	609a      	str	r2, [r3, #8]
 8023f12:	60da      	str	r2, [r3, #12]
 8023f14:	741a      	strb	r2, [r3, #16]
 8023f16:	2302      	movs	r3, #2
 8023f18:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8023f1c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8023f20:	3301      	adds	r3, #1
 8023f22:	4619      	mov	r1, r3
 8023f24:	2000      	movs	r0, #0
 8023f26:	f7ea f923 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8023f2a:	4603      	mov	r3, r0
 8023f2c:	2b00      	cmp	r3, #0
 8023f2e:	d029      	beq.n	8023f84 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x128>
 8023f30:	687b      	ldr	r3, [r7, #4]
 8023f32:	f103 0241 	add.w	r2, r3, #65	; 0x41
 8023f36:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8023f3a:	4611      	mov	r1, r2
 8023f3c:	4618      	mov	r0, r3
 8023f3e:	f7eb f9f5 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8023f42:	4603      	mov	r3, r0
 8023f44:	2b00      	cmp	r3, #0
 8023f46:	d00e      	beq.n	8023f66 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x10a>
 8023f48:	4a2c      	ldr	r2, [pc, #176]	; (8023ffc <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a0>)
 8023f4a:	f107 0320 	add.w	r3, r7, #32
 8023f4e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023f52:	e883 0003 	stmia.w	r3, {r0, r1}
 8023f56:	4a2d      	ldr	r2, [pc, #180]	; (802400c <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1b0>)
 8023f58:	f107 0320 	add.w	r3, r7, #32
 8023f5c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023f60:	f7f1 f952 	bl	8015208 <LOGGER_PrintLine>
 8023f64:	e01c      	b.n	8023fa0 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x144>
 8023f66:	4a25      	ldr	r2, [pc, #148]	; (8023ffc <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a0>)
 8023f68:	f107 0318 	add.w	r3, r7, #24
 8023f6c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023f70:	e883 0003 	stmia.w	r3, {r0, r1}
 8023f74:	4a26      	ldr	r2, [pc, #152]	; (8024010 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1b4>)
 8023f76:	f107 0318 	add.w	r3, r7, #24
 8023f7a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023f7e:	f7f1 f943 	bl	8015208 <LOGGER_PrintLine>
 8023f82:	e00d      	b.n	8023fa0 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x144>
 8023f84:	4a1d      	ldr	r2, [pc, #116]	; (8023ffc <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a0>)
 8023f86:	f107 0310 	add.w	r3, r7, #16
 8023f8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023f8e:	e883 0003 	stmia.w	r3, {r0, r1}
 8023f92:	4a20      	ldr	r2, [pc, #128]	; (8024014 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1b8>)
 8023f94:	f107 0310 	add.w	r3, r7, #16
 8023f98:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023f9c:	f7f1 f934 	bl	8015208 <LOGGER_PrintLine>
 8023fa0:	6878      	ldr	r0, [r7, #4]
 8023fa2:	f7eb fcd3 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8023fa6:	e024      	b.n	8023ff2 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x196>
 8023fa8:	687b      	ldr	r3, [r7, #4]
 8023faa:	7c1b      	ldrb	r3, [r3, #16]
 8023fac:	2b11      	cmp	r3, #17
 8023fae:	d002      	beq.n	8023fb6 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x15a>
 8023fb0:	2b3a      	cmp	r3, #58	; 0x3a
 8023fb2:	d006      	beq.n	8023fc2 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x166>
 8023fb4:	e00b      	b.n	8023fce <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x172>
 8023fb6:	78fb      	ldrb	r3, [r7, #3]
 8023fb8:	4619      	mov	r1, r3
 8023fba:	6878      	ldr	r0, [r7, #4]
 8023fbc:	f004 fa5c 	bl	8028478 <32c59f113e62a8491f5b52f96af26c008a4f227e>
 8023fc0:	e017      	b.n	8023ff2 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x196>
 8023fc2:	78fb      	ldrb	r3, [r7, #3]
 8023fc4:	4619      	mov	r1, r3
 8023fc6:	6878      	ldr	r0, [r7, #4]
 8023fc8:	f001 f8b0 	bl	802512c <a4e54615be274afd6b4d40b38f5ecc85b5402247>
 8023fcc:	e011      	b.n	8023ff2 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x196>
 8023fce:	4a0b      	ldr	r2, [pc, #44]	; (8023ffc <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1a0>)
 8023fd0:	f107 0308 	add.w	r3, r7, #8
 8023fd4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8023fd8:	e883 0003 	stmia.w	r3, {r0, r1}
 8023fdc:	4a0e      	ldr	r2, [pc, #56]	; (8024018 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x1bc>)
 8023fde:	f107 0308 	add.w	r3, r7, #8
 8023fe2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8023fe6:	f7f1 f90f 	bl	8015208 <LOGGER_PrintLine>
 8023fea:	6878      	ldr	r0, [r7, #4]
 8023fec:	f7eb fcae 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8023ff0:	e7ff      	b.n	8023ff2 <25552cd4f6e470d41f2f57e7e131e0cd5542d6e2+0x196>
 8023ff2:	bf00      	nop
 8023ff4:	3750      	adds	r7, #80	; 0x50
 8023ff6:	46bd      	mov	sp, r7
 8023ff8:	bd80      	pop	{r7, pc}
 8023ffa:	bf00      	nop
 8023ffc:	08030bfc 	.word	0x08030bfc
 8024000:	08030b40 	.word	0x08030b40
 8024004:	08030b54 	.word	0x08030b54
 8024008:	08030b60 	.word	0x08030b60
 802400c:	08030b74 	.word	0x08030b74
 8024010:	08030b90 	.word	0x08030b90
 8024014:	08030bac 	.word	0x08030bac
 8024018:	08030bd4 	.word	0x08030bd4

0802401c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb>:
 802401c:	b580      	push	{r7, lr}
 802401e:	b09a      	sub	sp, #104	; 0x68
 8024020:	af02      	add	r7, sp, #8
 8024022:	60f8      	str	r0, [r7, #12]
 8024024:	60b9      	str	r1, [r7, #8]
 8024026:	607a      	str	r2, [r7, #4]
 8024028:	603b      	str	r3, [r7, #0]
 802402a:	68fb      	ldr	r3, [r7, #12]
 802402c:	2274      	movs	r2, #116	; 0x74
 802402e:	705a      	strb	r2, [r3, #1]
 8024030:	687b      	ldr	r3, [r7, #4]
 8024032:	7a5a      	ldrb	r2, [r3, #9]
 8024034:	68fb      	ldr	r3, [r7, #12]
 8024036:	741a      	strb	r2, [r3, #16]
 8024038:	687b      	ldr	r3, [r7, #4]
 802403a:	7a1a      	ldrb	r2, [r3, #8]
 802403c:	68fb      	ldr	r3, [r7, #12]
 802403e:	745a      	strb	r2, [r3, #17]
 8024040:	68fb      	ldr	r3, [r7, #12]
 8024042:	f103 001d 	add.w	r0, r3, #29
 8024046:	687b      	ldr	r3, [r7, #4]
 8024048:	3337      	adds	r3, #55	; 0x37
 802404a:	2211      	movs	r2, #17
 802404c:	4619      	mov	r1, r3
 802404e:	f007 f8f2 	bl	802b236 <memcpy>
 8024052:	68fb      	ldr	r3, [r7, #12]
 8024054:	f103 002e 	add.w	r0, r3, #46	; 0x2e
 8024058:	687b      	ldr	r3, [r7, #4]
 802405a:	3326      	adds	r3, #38	; 0x26
 802405c:	2211      	movs	r2, #17
 802405e:	4619      	mov	r1, r3
 8024060:	f007 f8e9 	bl	802b236 <memcpy>
 8024064:	2300      	movs	r3, #0
 8024066:	f8a7 3050 	strh.w	r3, [r7, #80]	; 0x50
 802406a:	68fb      	ldr	r3, [r7, #12]
 802406c:	331d      	adds	r3, #29
 802406e:	4618      	mov	r0, r3
 8024070:	f7eb f856 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8024074:	4603      	mov	r3, r0
 8024076:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 802407a:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 802407e:	2b00      	cmp	r3, #0
 8024080:	d009      	beq.n	8024096 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x7a>
 8024082:	68fb      	ldr	r3, [r7, #12]
 8024084:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8024088:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 802408c:	68fb      	ldr	r3, [r7, #12]
 802408e:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 8024092:	f887 3051 	strb.w	r3, [r7, #81]	; 0x51
 8024096:	68fb      	ldr	r3, [r7, #12]
 8024098:	331d      	adds	r3, #29
 802409a:	4618      	mov	r0, r3
 802409c:	f7e9 f836 	bl	800d10c <ef42a56931e541b0c8c1f2660a00aa81f857110a>
 80240a0:	4603      	mov	r3, r0
 80240a2:	2b00      	cmp	r3, #0
 80240a4:	d103      	bne.n	80240ae <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x92>
 80240a6:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 80240aa:	2b00      	cmp	r3, #0
 80240ac:	d005      	beq.n	80240ba <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x9e>
 80240ae:	68bb      	ldr	r3, [r7, #8]
 80240b0:	7a5b      	ldrb	r3, [r3, #9]
 80240b2:	2b2b      	cmp	r3, #43	; 0x2b
 80240b4:	d001      	beq.n	80240ba <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x9e>
 80240b6:	2301      	movs	r3, #1
 80240b8:	e000      	b.n	80240bc <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xa0>
 80240ba:	2300      	movs	r3, #0
 80240bc:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 80240c0:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 80240c4:	f003 0301 	and.w	r3, r3, #1
 80240c8:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 80240cc:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 80240d0:	2b00      	cmp	r3, #0
 80240d2:	d00f      	beq.n	80240f4 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xd8>
 80240d4:	68fb      	ldr	r3, [r7, #12]
 80240d6:	7c1b      	ldrb	r3, [r3, #16]
 80240d8:	2b11      	cmp	r3, #17
 80240da:	d106      	bne.n	80240ea <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xce>
 80240dc:	f7ea fbf0 	bl	800e8c0 <963d67651eaddeb307ab0b02134cee28199d533d>
 80240e0:	4603      	mov	r3, r0
 80240e2:	2b00      	cmp	r3, #0
 80240e4:	d001      	beq.n	80240ea <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xce>
 80240e6:	2301      	movs	r3, #1
 80240e8:	e000      	b.n	80240ec <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xd0>
 80240ea:	2300      	movs	r3, #0
 80240ec:	f003 0301 	and.w	r3, r3, #1
 80240f0:	b2db      	uxtb	r3, r3
 80240f2:	e00c      	b.n	802410e <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0xf2>
 80240f4:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 80240f8:	2b00      	cmp	r3, #0
 80240fa:	bf14      	ite	ne
 80240fc:	2301      	movne	r3, #1
 80240fe:	2300      	moveq	r3, #0
 8024100:	b2db      	uxtb	r3, r3
 8024102:	f083 0301 	eor.w	r3, r3, #1
 8024106:	b2db      	uxtb	r3, r3
 8024108:	f003 0301 	and.w	r3, r3, #1
 802410c:	b2db      	uxtb	r3, r3
 802410e:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
 8024112:	f897 305d 	ldrb.w	r3, [r7, #93]	; 0x5d
 8024116:	2b00      	cmp	r3, #0
 8024118:	f000 80dd 	beq.w	80242d6 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ba>
 802411c:	f7eb fa20 	bl	800f560 <4b9793db96fa05ad63a954fae76e17c90da5d34d>
 8024120:	65b8      	str	r0, [r7, #88]	; 0x58
 8024122:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8024124:	2b00      	cmp	r3, #0
 8024126:	f000 80c8 	beq.w	80242ba <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x29e>
 802412a:	68f9      	ldr	r1, [r7, #12]
 802412c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 802412e:	f005 fa7f 	bl	8029630 <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5>
 8024132:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8024134:	2274      	movs	r2, #116	; 0x74
 8024136:	701a      	strb	r2, [r3, #0]
 8024138:	68bb      	ldr	r3, [r7, #8]
 802413a:	7a5b      	ldrb	r3, [r3, #9]
 802413c:	2b2b      	cmp	r3, #43	; 0x2b
 802413e:	f000 80a1 	beq.w	8024284 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x268>
 8024142:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8024146:	f083 0301 	eor.w	r3, r3, #1
 802414a:	b2db      	uxtb	r3, r3
 802414c:	2b00      	cmp	r3, #0
 802414e:	d06d      	beq.n	802422c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x210>
 8024150:	683b      	ldr	r3, [r7, #0]
 8024152:	785b      	ldrb	r3, [r3, #1]
 8024154:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
 8024158:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 802415c:	f003 0310 	and.w	r3, r3, #16
 8024160:	2b00      	cmp	r3, #0
 8024162:	d00d      	beq.n	8024180 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x164>
 8024164:	4a8b      	ldr	r2, [pc, #556]	; (8024394 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x378>)
 8024166:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802416a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802416e:	e883 0003 	stmia.w	r3, {r0, r1}
 8024172:	4a89      	ldr	r2, [pc, #548]	; (8024398 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x37c>)
 8024174:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8024178:	e893 0003 	ldmia.w	r3, {r0, r1}
 802417c:	f7f1 f844 	bl	8015208 <LOGGER_PrintLine>
 8024180:	683b      	ldr	r3, [r7, #0]
 8024182:	78da      	ldrb	r2, [r3, #3]
 8024184:	791b      	ldrb	r3, [r3, #4]
 8024186:	021b      	lsls	r3, r3, #8
 8024188:	4313      	orrs	r3, r2
 802418a:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 802418e:	f001 fc21 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8024192:	4603      	mov	r3, r0
 8024194:	f8a7 3052 	strh.w	r3, [r7, #82]	; 0x52
 8024198:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
 802419c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80241a0:	4293      	cmp	r3, r2
 80241a2:	d03c      	beq.n	802421e <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x202>
 80241a4:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 80241a8:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
 80241ac:	429a      	cmp	r2, r3
 80241ae:	d236      	bcs.n	802421e <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x202>
 80241b0:	683b      	ldr	r3, [r7, #0]
 80241b2:	785b      	ldrb	r3, [r3, #1]
 80241b4:	f043 0308 	orr.w	r3, r3, #8
 80241b8:	b2da      	uxtb	r2, r3
 80241ba:	683b      	ldr	r3, [r7, #0]
 80241bc:	705a      	strb	r2, [r3, #1]
 80241be:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80241c0:	3342      	adds	r3, #66	; 0x42
 80241c2:	f107 0247 	add.w	r2, r7, #71	; 0x47
 80241c6:	4611      	mov	r1, r2
 80241c8:	4618      	mov	r0, r3
 80241ca:	f7ea fad3 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 80241ce:	4603      	mov	r3, r0
 80241d0:	2b00      	cmp	r3, #0
 80241d2:	d016      	beq.n	8024202 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x1e6>
 80241d4:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80241d8:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 80241dc:	4611      	mov	r1, r2
 80241de:	4618      	mov	r0, r3
 80241e0:	f7e9 f918 	bl	800d414 <231ee13350ba09f13191bc6eb894c2ea8bf59b41>
 80241e4:	4a6b      	ldr	r2, [pc, #428]	; (8024394 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x378>)
 80241e6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80241ea:	e892 0003 	ldmia.w	r2, {r0, r1}
 80241ee:	e883 0003 	stmia.w	r3, {r0, r1}
 80241f2:	4a6a      	ldr	r2, [pc, #424]	; (802439c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x380>)
 80241f4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80241f8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80241fc:	f7f1 f804 	bl	8015208 <LOGGER_PrintLine>
 8024200:	e00d      	b.n	802421e <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x202>
 8024202:	4a64      	ldr	r2, [pc, #400]	; (8024394 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x378>)
 8024204:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8024208:	e892 0003 	ldmia.w	r2, {r0, r1}
 802420c:	e883 0003 	stmia.w	r3, {r0, r1}
 8024210:	4a63      	ldr	r2, [pc, #396]	; (80243a0 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x384>)
 8024212:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8024216:	e893 0003 	ldmia.w	r3, {r0, r1}
 802421a:	f7f0 fff5 	bl	8015208 <LOGGER_PrintLine>
 802421e:	683b      	ldr	r3, [r7, #0]
 8024220:	785b      	ldrb	r3, [r3, #1]
 8024222:	4619      	mov	r1, r3
 8024224:	6838      	ldr	r0, [r7, #0]
 8024226:	f000 ff1d 	bl	8025064 <ff79dcb9f0638f1ac99659a38f02861c009c540c>
 802422a:	e016      	b.n	802425a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x23e>
 802422c:	4a5d      	ldr	r2, [pc, #372]	; (80243a4 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x388>)
 802422e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8024232:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024236:	e883 0003 	stmia.w	r3, {r0, r1}
 802423a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 802423c:	3341      	adds	r3, #65	; 0x41
 802423e:	4618      	mov	r0, r3
 8024240:	f7ea fee0 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8024244:	4602      	mov	r2, r0
 8024246:	460b      	mov	r3, r1
 8024248:	e9cd 2300 	strd	r2, r3, [sp]
 802424c:	4a56      	ldr	r2, [pc, #344]	; (80243a8 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x38c>)
 802424e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8024252:	e893 0003 	ldmia.w	r3, {r0, r1}
 8024256:	f7f0 ffd7 	bl	8015208 <LOGGER_PrintLine>
 802425a:	68bb      	ldr	r3, [r7, #8]
 802425c:	3304      	adds	r3, #4
 802425e:	2201      	movs	r2, #1
 8024260:	9201      	str	r2, [sp, #4]
 8024262:	9300      	str	r3, [sp, #0]
 8024264:	683b      	ldr	r3, [r7, #0]
 8024266:	687a      	ldr	r2, [r7, #4]
 8024268:	68b9      	ldr	r1, [r7, #8]
 802426a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 802426c:	f000 f8f0 	bl	8024450 <1b70dd809fc4873e9266aad98968a88e80b5bf06>
 8024270:	4603      	mov	r3, r0
 8024272:	f083 0301 	eor.w	r3, r3, #1
 8024276:	b2db      	uxtb	r3, r3
 8024278:	2b00      	cmp	r3, #0
 802427a:	d02c      	beq.n	80242d6 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ba>
 802427c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 802427e:	f7eb fb65 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8024282:	e028      	b.n	80242d6 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ba>
 8024284:	683b      	ldr	r3, [r7, #0]
 8024286:	687a      	ldr	r2, [r7, #4]
 8024288:	68b9      	ldr	r1, [r7, #8]
 802428a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 802428c:	f000 f93c 	bl	8024508 <send_internal_SourceRouting>
 8024290:	4603      	mov	r3, r0
 8024292:	f083 0301 	eor.w	r3, r3, #1
 8024296:	b2db      	uxtb	r3, r3
 8024298:	2b00      	cmp	r3, #0
 802429a:	d01c      	beq.n	80242d6 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ba>
 802429c:	4a3d      	ldr	r2, [pc, #244]	; (8024394 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x378>)
 802429e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80242a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80242a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80242aa:	4a40      	ldr	r2, [pc, #256]	; (80243ac <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x390>)
 80242ac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80242b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80242b4:	f7f0 ffa8 	bl	8015208 <LOGGER_PrintLine>
 80242b8:	e00d      	b.n	80242d6 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ba>
 80242ba:	4a3d      	ldr	r2, [pc, #244]	; (80243b0 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x394>)
 80242bc:	f107 031c 	add.w	r3, r7, #28
 80242c0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80242c4:	e883 0003 	stmia.w	r3, {r0, r1}
 80242c8:	4a3a      	ldr	r2, [pc, #232]	; (80243b4 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x398>)
 80242ca:	f107 031c 	add.w	r3, r7, #28
 80242ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 80242d2:	f7f0 ff99 	bl	8015208 <LOGGER_PrintLine>
 80242d6:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 80242da:	2b00      	cmp	r3, #0
 80242dc:	d051      	beq.n	8024382 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x366>
 80242de:	68bb      	ldr	r3, [r7, #8]
 80242e0:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 80242e4:	2b00      	cmp	r3, #0
 80242e6:	d104      	bne.n	80242f2 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2d6>
 80242e8:	68bb      	ldr	r3, [r7, #8]
 80242ea:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80242ee:	2b00      	cmp	r3, #0
 80242f0:	d00b      	beq.n	802430a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x2ee>
 80242f2:	68bb      	ldr	r3, [r7, #8]
 80242f4:	f893 2048 	ldrb.w	r2, [r3, #72]	; 0x48
 80242f8:	68bb      	ldr	r3, [r7, #8]
 80242fa:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80242fe:	4413      	add	r3, r2
 8024300:	b2db      	uxtb	r3, r3
 8024302:	4619      	mov	r1, r3
 8024304:	68f8      	ldr	r0, [r7, #12]
 8024306:	f005 f8fd 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 802430a:	687b      	ldr	r3, [r7, #4]
 802430c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8024310:	4619      	mov	r1, r3
 8024312:	68f8      	ldr	r0, [r7, #12]
 8024314:	f005 f8f6 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024318:	68fb      	ldr	r3, [r7, #12]
 802431a:	7c1b      	ldrb	r3, [r3, #16]
 802431c:	2b11      	cmp	r3, #17
 802431e:	d002      	beq.n	8024326 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x30a>
 8024320:	2b3a      	cmp	r3, #58	; 0x3a
 8024322:	d017      	beq.n	8024354 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x338>
 8024324:	e01a      	b.n	802435c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x340>
 8024326:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 802432a:	f083 0301 	eor.w	r3, r3, #1
 802432e:	b2db      	uxtb	r3, r3
 8024330:	2b00      	cmp	r3, #0
 8024332:	d107      	bne.n	8024344 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x328>
 8024334:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8024338:	4618      	mov	r0, r3
 802433a:	f003 fb6f 	bl	8027a1c <29fa8ed2960e61836c5411711158d1cb9cd67052>
 802433e:	4603      	mov	r3, r0
 8024340:	2b00      	cmp	r3, #0
 8024342:	d003      	beq.n	802434c <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x330>
 8024344:	68f8      	ldr	r0, [r7, #12]
 8024346:	f004 f8bd 	bl	80284c4 <078582282b526a1ec1227869e1581c8a1811b440>
 802434a:	e01e      	b.n	802438a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x36e>
 802434c:	68f8      	ldr	r0, [r7, #12]
 802434e:	f7eb fafd 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8024352:	e01a      	b.n	802438a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x36e>
 8024354:	68f8      	ldr	r0, [r7, #12]
 8024356:	f000 ff23 	bl	80251a0 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2>
 802435a:	e016      	b.n	802438a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x36e>
 802435c:	4a0d      	ldr	r2, [pc, #52]	; (8024394 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x378>)
 802435e:	f107 0314 	add.w	r3, r7, #20
 8024362:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024366:	e883 0003 	stmia.w	r3, {r0, r1}
 802436a:	68fb      	ldr	r3, [r7, #12]
 802436c:	7c1b      	ldrb	r3, [r3, #16]
 802436e:	4a12      	ldr	r2, [pc, #72]	; (80243b8 <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x39c>)
 8024370:	f107 0114 	add.w	r1, r7, #20
 8024374:	c903      	ldmia	r1, {r0, r1}
 8024376:	f7f0 ff47 	bl	8015208 <LOGGER_PrintLine>
 802437a:	68f8      	ldr	r0, [r7, #12]
 802437c:	f7eb fae6 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8024380:	e003      	b.n	802438a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x36e>
 8024382:	68f8      	ldr	r0, [r7, #12]
 8024384:	f7eb fae2 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8024388:	e7ff      	b.n	802438a <fbb5d9264f687a3d3875788e4c96e7f3a0b73ecb+0x36e>
 802438a:	bf00      	nop
 802438c:	3760      	adds	r7, #96	; 0x60
 802438e:	46bd      	mov	sp, r7
 8024390:	bd80      	pop	{r7, pc}
 8024392:	bf00      	nop
 8024394:	08030ce0 	.word	0x08030ce0
 8024398:	08030c04 	.word	0x08030c04
 802439c:	08030c14 	.word	0x08030c14
 80243a0:	08030c34 	.word	0x08030c34
 80243a4:	08030ce8 	.word	0x08030ce8
 80243a8:	08030c44 	.word	0x08030c44
 80243ac:	08030c74 	.word	0x08030c74
 80243b0:	08030bfc 	.word	0x08030bfc
 80243b4:	08030c8c 	.word	0x08030c8c
 80243b8:	08030cc0 	.word	0x08030cc0

080243bc <getNextHop>:
 80243bc:	b580      	push	{r7, lr}
 80243be:	b084      	sub	sp, #16
 80243c0:	af00      	add	r7, sp, #0
 80243c2:	6078      	str	r0, [r7, #4]
 80243c4:	6039      	str	r1, [r7, #0]
 80243c6:	6878      	ldr	r0, [r7, #4]
 80243c8:	f7ea feaa 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80243cc:	4603      	mov	r3, r0
 80243ce:	2b00      	cmp	r3, #0
 80243d0:	d013      	beq.n	80243fa <getNextHop+0x3e>
 80243d2:	683b      	ldr	r3, [r7, #0]
 80243d4:	2202      	movs	r2, #2
 80243d6:	701a      	strb	r2, [r3, #0]
 80243d8:	2300      	movs	r3, #0
 80243da:	73fb      	strb	r3, [r7, #15]
 80243dc:	e009      	b.n	80243f2 <getNextHop+0x36>
 80243de:	7bfb      	ldrb	r3, [r7, #15]
 80243e0:	461a      	mov	r2, r3
 80243e2:	683b      	ldr	r3, [r7, #0]
 80243e4:	4413      	add	r3, r2
 80243e6:	22ff      	movs	r2, #255	; 0xff
 80243e8:	705a      	strb	r2, [r3, #1]
 80243ea:	7bfb      	ldrb	r3, [r7, #15]
 80243ec:	3301      	adds	r3, #1
 80243ee:	b2db      	uxtb	r3, r3
 80243f0:	73fb      	strb	r3, [r7, #15]
 80243f2:	7bfb      	ldrb	r3, [r7, #15]
 80243f4:	2b07      	cmp	r3, #7
 80243f6:	d9f2      	bls.n	80243de <getNextHop+0x22>
 80243f8:	e026      	b.n	8024448 <getNextHop+0x8c>
 80243fa:	687b      	ldr	r3, [r7, #4]
 80243fc:	3309      	adds	r3, #9
 80243fe:	f107 020f 	add.w	r2, r7, #15
 8024402:	4611      	mov	r1, r2
 8024404:	4618      	mov	r0, r3
 8024406:	f7ea f9b5 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 802440a:	4603      	mov	r3, r0
 802440c:	2b00      	cmp	r3, #0
 802440e:	d012      	beq.n	8024436 <getNextHop+0x7a>
 8024410:	7bfb      	ldrb	r3, [r7, #15]
 8024412:	4618      	mov	r0, r3
 8024414:	f7ea f9e8 	bl	800e7e8 <5cf48605db24e77c7dc4310895ecb68238b276e7>
 8024418:	4603      	mov	r3, r0
 802441a:	2b00      	cmp	r3, #0
 802441c:	d00b      	beq.n	8024436 <getNextHop+0x7a>
 802441e:	683b      	ldr	r3, [r7, #0]
 8024420:	2202      	movs	r2, #2
 8024422:	701a      	strb	r2, [r3, #0]
 8024424:	683b      	ldr	r3, [r7, #0]
 8024426:	1c58      	adds	r0, r3, #1
 8024428:	687b      	ldr	r3, [r7, #4]
 802442a:	3309      	adds	r3, #9
 802442c:	2208      	movs	r2, #8
 802442e:	4619      	mov	r1, r3
 8024430:	f006 ff01 	bl	802b236 <memcpy>
 8024434:	e008      	b.n	8024448 <getNextHop+0x8c>
 8024436:	683b      	ldr	r3, [r7, #0]
 8024438:	2202      	movs	r2, #2
 802443a:	701a      	strb	r2, [r3, #0]
 802443c:	683b      	ldr	r3, [r7, #0]
 802443e:	3301      	adds	r3, #1
 8024440:	4619      	mov	r1, r3
 8024442:	2000      	movs	r0, #0
 8024444:	f7e9 fe94 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8024448:	bf00      	nop
 802444a:	3710      	adds	r7, #16
 802444c:	46bd      	mov	sp, r7
 802444e:	bd80      	pop	{r7, pc}

08024450 <1b70dd809fc4873e9266aad98968a88e80b5bf06>:
 8024450:	b580      	push	{r7, lr}
 8024452:	b08a      	sub	sp, #40	; 0x28
 8024454:	af04      	add	r7, sp, #16
 8024456:	60f8      	str	r0, [r7, #12]
 8024458:	60b9      	str	r1, [r7, #8]
 802445a:	607a      	str	r2, [r7, #4]
 802445c:	603b      	str	r3, [r7, #0]
 802445e:	68fb      	ldr	r3, [r7, #12]
 8024460:	f103 021d 	add.w	r2, r3, #29
 8024464:	68fb      	ldr	r3, [r7, #12]
 8024466:	3341      	adds	r3, #65	; 0x41
 8024468:	4619      	mov	r1, r3
 802446a:	4610      	mov	r0, r2
 802446c:	f7ff ffa6 	bl	80243bc <getNextHop>
 8024470:	68fb      	ldr	r3, [r7, #12]
 8024472:	331d      	adds	r3, #29
 8024474:	4618      	mov	r0, r3
 8024476:	f7ea ff3b 	bl	800f2f0 <4568fced62f20053a59091f5ee26eed63ee62b0d>
 802447a:	4603      	mov	r3, r0
 802447c:	2b00      	cmp	r3, #0
 802447e:	68fb      	ldr	r3, [r7, #12]
 8024480:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8024484:	2b00      	cmp	r3, #0
 8024486:	d10f      	bne.n	80244a8 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0x58>
 8024488:	4a1d      	ldr	r2, [pc, #116]	; (8024500 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0xb0>)
 802448a:	f107 0310 	add.w	r3, r7, #16
 802448e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024492:	e883 0003 	stmia.w	r3, {r0, r1}
 8024496:	4a1b      	ldr	r2, [pc, #108]	; (8024504 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0xb4>)
 8024498:	f107 0310 	add.w	r3, r7, #16
 802449c:	e893 0003 	ldmia.w	r3, {r0, r1}
 80244a0:	f7f0 feb2 	bl	8015208 <LOGGER_PrintLine>
 80244a4:	2300      	movs	r3, #0
 80244a6:	e026      	b.n	80244f6 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0xa6>
 80244a8:	68bb      	ldr	r3, [r7, #8]
 80244aa:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 80244ae:	2b00      	cmp	r3, #0
 80244b0:	d011      	beq.n	80244d6 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0x86>
 80244b2:	68fb      	ldr	r3, [r7, #12]
 80244b4:	331d      	adds	r3, #29
 80244b6:	4618      	mov	r0, r3
 80244b8:	f7ea fe32 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80244bc:	4603      	mov	r3, r0
 80244be:	f083 0301 	eor.w	r3, r3, #1
 80244c2:	b2db      	uxtb	r3, r3
 80244c4:	2b00      	cmp	r3, #0
 80244c6:	d006      	beq.n	80244d6 <1b70dd809fc4873e9266aad98968a88e80b5bf06+0x86>
 80244c8:	68bb      	ldr	r3, [r7, #8]
 80244ca:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80244ce:	4619      	mov	r1, r3
 80244d0:	68f8      	ldr	r0, [r7, #12]
 80244d2:	f005 f817 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80244d6:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80244da:	9303      	str	r3, [sp, #12]
 80244dc:	2300      	movs	r3, #0
 80244de:	9302      	str	r3, [sp, #8]
 80244e0:	2300      	movs	r3, #0
 80244e2:	9301      	str	r3, [sp, #4]
 80244e4:	6a3b      	ldr	r3, [r7, #32]
 80244e6:	9300      	str	r3, [sp, #0]
 80244e8:	683b      	ldr	r3, [r7, #0]
 80244ea:	687a      	ldr	r2, [r7, #4]
 80244ec:	68b9      	ldr	r1, [r7, #8]
 80244ee:	68f8      	ldr	r0, [r7, #12]
 80244f0:	f7fd fb7a 	bl	8021be8 <13ccdc5f94324d1909629c7f21aeb736294bb0ba>
 80244f4:	4603      	mov	r3, r0
 80244f6:	4618      	mov	r0, r3
 80244f8:	3718      	adds	r7, #24
 80244fa:	46bd      	mov	sp, r7
 80244fc:	bd80      	pop	{r7, pc}
 80244fe:	bf00      	nop
 8024500:	08030bfc 	.word	0x08030bfc
 8024504:	08030cf0 	.word	0x08030cf0

08024508 <send_internal_SourceRouting>:
 8024508:	b5b0      	push	{r4, r5, r7, lr}
 802450a:	b0cc      	sub	sp, #304	; 0x130
 802450c:	af04      	add	r7, sp, #16
 802450e:	6278      	str	r0, [r7, #36]	; 0x24
 8024510:	f507 7090 	add.w	r0, r7, #288	; 0x120
 8024514:	f5a0 7080 	sub.w	r0, r0, #256	; 0x100
 8024518:	6001      	str	r1, [r0, #0]
 802451a:	f507 7190 	add.w	r1, r7, #288	; 0x120
 802451e:	f5a1 7182 	sub.w	r1, r1, #260	; 0x104
 8024522:	600a      	str	r2, [r1, #0]
 8024524:	f507 7290 	add.w	r2, r7, #288	; 0x120
 8024528:	f5a2 7284 	sub.w	r2, r2, #264	; 0x108
 802452c:	6013      	str	r3, [r2, #0]
 802452e:	2300      	movs	r3, #0
 8024530:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 8024534:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8024538:	227f      	movs	r2, #127	; 0x7f
 802453a:	2100      	movs	r1, #0
 802453c:	4618      	mov	r0, r3
 802453e:	f006 fddb 	bl	802b0f8 <memset>
 8024542:	2300      	movs	r3, #0
 8024544:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 8024548:	2300      	movs	r3, #0
 802454a:	f887 311d 	strb.w	r3, [r7, #285]	; 0x11d
 802454e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024550:	f103 001d 	add.w	r0, r3, #29
 8024554:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024558:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 802455c:	681b      	ldr	r3, [r3, #0]
 802455e:	3337      	adds	r3, #55	; 0x37
 8024560:	2211      	movs	r2, #17
 8024562:	4619      	mov	r1, r3
 8024564:	f006 fe67 	bl	802b236 <memcpy>
 8024568:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802456a:	f103 002e 	add.w	r0, r3, #46	; 0x2e
 802456e:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024572:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8024576:	681b      	ldr	r3, [r3, #0]
 8024578:	3326      	adds	r3, #38	; 0x26
 802457a:	2211      	movs	r2, #17
 802457c:	4619      	mov	r1, r3
 802457e:	f006 fe5a 	bl	802b236 <memcpy>
 8024582:	2303      	movs	r3, #3
 8024584:	f887 3100 	strb.w	r3, [r7, #256]	; 0x100
 8024588:	f507 7390 	add.w	r3, r7, #288	; 0x120
 802458c:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8024590:	681b      	ldr	r3, [r3, #0]
 8024592:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8024596:	2b00      	cmp	r3, #0
 8024598:	d00e      	beq.n	80245b8 <send_internal_SourceRouting+0xb0>
 802459a:	f507 7390 	add.w	r3, r7, #288	; 0x120
 802459e:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 80245a2:	681b      	ldr	r3, [r3, #0]
 80245a4:	789b      	ldrb	r3, [r3, #2]
 80245a6:	2b00      	cmp	r3, #0
 80245a8:	d116      	bne.n	80245d8 <send_internal_SourceRouting+0xd0>
 80245aa:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80245ae:	3301      	adds	r3, #1
 80245b0:	4618      	mov	r0, r3
 80245b2:	f001 f8d3 	bl	802575c <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0>
 80245b6:	e00f      	b.n	80245d8 <send_internal_SourceRouting+0xd0>
 80245b8:	f507 7390 	add.w	r3, r7, #288	; 0x120
 80245bc:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 80245c0:	681b      	ldr	r3, [r3, #0]
 80245c2:	3326      	adds	r3, #38	; 0x26
 80245c4:	f507 7480 	add.w	r4, r7, #256	; 0x100
 80245c8:	461d      	mov	r5, r3
 80245ca:	6828      	ldr	r0, [r5, #0]
 80245cc:	6869      	ldr	r1, [r5, #4]
 80245ce:	68aa      	ldr	r2, [r5, #8]
 80245d0:	68eb      	ldr	r3, [r5, #12]
 80245d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80245d4:	7c2b      	ldrb	r3, [r5, #16]
 80245d6:	7023      	strb	r3, [r4, #0]
 80245d8:	2300      	movs	r3, #0
 80245da:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 80245de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80245e0:	685a      	ldr	r2, [r3, #4]
 80245e2:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80245e6:	4413      	add	r3, r2
 80245e8:	781b      	ldrb	r3, [r3, #0]
 80245ea:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 80245ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80245f0:	685a      	ldr	r2, [r3, #4]
 80245f2:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80245f6:	3301      	adds	r3, #1
 80245f8:	4413      	add	r3, r2
 80245fa:	781b      	ldrb	r3, [r3, #0]
 80245fc:	f887 311e 	strb.w	r3, [r7, #286]	; 0x11e
 8024600:	e034      	b.n	802466c <send_internal_SourceRouting+0x164>
 8024602:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8024606:	f003 031f 	and.w	r3, r3, #31
 802460a:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 802460e:	f897 311d 	ldrb.w	r3, [r7, #285]	; 0x11d
 8024612:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8024616:	18d0      	adds	r0, r2, r3
 8024618:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802461a:	6859      	ldr	r1, [r3, #4]
 802461c:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 8024620:	3302      	adds	r3, #2
 8024622:	461a      	mov	r2, r3
 8024624:	f006 fe07 	bl	802b236 <memcpy>
 8024628:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 802462c:	3302      	adds	r3, #2
 802462e:	b2db      	uxtb	r3, r3
 8024630:	4619      	mov	r1, r3
 8024632:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024634:	f004 ff66 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024638:	f897 211b 	ldrb.w	r2, [r7, #283]	; 0x11b
 802463c:	f897 311d 	ldrb.w	r3, [r7, #285]	; 0x11d
 8024640:	4413      	add	r3, r2
 8024642:	b2db      	uxtb	r3, r3
 8024644:	3302      	adds	r3, #2
 8024646:	f887 311d 	strb.w	r3, [r7, #285]	; 0x11d
 802464a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802464c:	685a      	ldr	r2, [r3, #4]
 802464e:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024652:	4413      	add	r3, r2
 8024654:	781b      	ldrb	r3, [r3, #0]
 8024656:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 802465a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802465c:	685a      	ldr	r2, [r3, #4]
 802465e:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024662:	3301      	adds	r3, #1
 8024664:	4413      	add	r3, r2
 8024666:	781b      	ldrb	r3, [r3, #0]
 8024668:	f887 311e 	strb.w	r3, [r7, #286]	; 0x11e
 802466c:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8024670:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8024674:	2ba0      	cmp	r3, #160	; 0xa0
 8024676:	d0c4      	beq.n	8024602 <send_internal_SourceRouting+0xfa>
 8024678:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 802467c:	3302      	adds	r3, #2
 802467e:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024682:	f897 311e 	ldrb.w	r3, [r7, #286]	; 0x11e
 8024686:	2bff      	cmp	r3, #255	; 0xff
 8024688:	f000 8094 	beq.w	80247b4 <send_internal_SourceRouting+0x2ac>
 802468c:	2bff      	cmp	r3, #255	; 0xff
 802468e:	f300 80a3 	bgt.w	80247d8 <send_internal_SourceRouting+0x2d0>
 8024692:	2bfe      	cmp	r3, #254	; 0xfe
 8024694:	d07c      	beq.n	8024790 <send_internal_SourceRouting+0x288>
 8024696:	2bfe      	cmp	r3, #254	; 0xfe
 8024698:	f300 809e 	bgt.w	80247d8 <send_internal_SourceRouting+0x2d0>
 802469c:	2b04      	cmp	r3, #4
 802469e:	dc13      	bgt.n	80246c8 <send_internal_SourceRouting+0x1c0>
 80246a0:	2b00      	cmp	r3, #0
 80246a2:	f2c0 8099 	blt.w	80247d8 <send_internal_SourceRouting+0x2d0>
 80246a6:	2b04      	cmp	r3, #4
 80246a8:	f200 8096 	bhi.w	80247d8 <send_internal_SourceRouting+0x2d0>
 80246ac:	a201      	add	r2, pc, #4	; (adr r2, 80246b4 <send_internal_SourceRouting+0x1ac>)
 80246ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80246b2:	bf00      	nop
 80246b4:	080246cf 	.word	0x080246cf
 80246b8:	080246eb 	.word	0x080246eb
 80246bc:	08024709 	.word	0x08024709
 80246c0:	08024725 	.word	0x08024725
 80246c4:	08024749 	.word	0x08024749
 80246c8:	2bfd      	cmp	r3, #253	; 0xfd
 80246ca:	d04f      	beq.n	802476c <send_internal_SourceRouting+0x264>
 80246cc:	e084      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 80246ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80246d0:	685a      	ldr	r2, [r3, #4]
 80246d2:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80246d6:	4413      	add	r3, r2
 80246d8:	781b      	ldrb	r3, [r3, #0]
 80246da:	f887 3110 	strb.w	r3, [r7, #272]	; 0x110
 80246de:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80246e2:	3301      	adds	r3, #1
 80246e4:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 80246e8:	e076      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 80246ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80246ec:	685a      	ldr	r2, [r3, #4]
 80246ee:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80246f2:	4413      	add	r3, r2
 80246f4:	881b      	ldrh	r3, [r3, #0]
 80246f6:	b29b      	uxth	r3, r3
 80246f8:	f8a7 310f 	strh.w	r3, [r7, #271]	; 0x10f
 80246fc:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024700:	3302      	adds	r3, #2
 8024702:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024706:	e067      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 8024708:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802470a:	685a      	ldr	r2, [r3, #4]
 802470c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024710:	4413      	add	r3, r2
 8024712:	681b      	ldr	r3, [r3, #0]
 8024714:	f8c7 310d 	str.w	r3, [r7, #269]	; 0x10d
 8024718:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 802471c:	3304      	adds	r3, #4
 802471e:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024722:	e059      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 8024724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024726:	685a      	ldr	r2, [r3, #4]
 8024728:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 802472c:	18d1      	adds	r1, r2, r3
 802472e:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024732:	3309      	adds	r3, #9
 8024734:	2208      	movs	r2, #8
 8024736:	4618      	mov	r0, r3
 8024738:	f006 fd7d 	bl	802b236 <memcpy>
 802473c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024740:	3308      	adds	r3, #8
 8024742:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024746:	e047      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 8024748:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802474a:	685a      	ldr	r2, [r3, #4]
 802474c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024750:	18d1      	adds	r1, r2, r3
 8024752:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024756:	3301      	adds	r3, #1
 8024758:	2210      	movs	r2, #16
 802475a:	4618      	mov	r0, r3
 802475c:	f006 fd6b 	bl	802b236 <memcpy>
 8024760:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024764:	3310      	adds	r3, #16
 8024766:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 802476a:	e035      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 802476c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802476e:	685a      	ldr	r2, [r3, #4]
 8024770:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024774:	18d1      	adds	r1, r2, r3
 8024776:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802477a:	330c      	adds	r3, #12
 802477c:	2205      	movs	r2, #5
 802477e:	4618      	mov	r0, r3
 8024780:	f006 fd59 	bl	802b236 <memcpy>
 8024784:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024788:	3305      	adds	r3, #5
 802478a:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 802478e:	e023      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 8024790:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024792:	685a      	ldr	r2, [r3, #4]
 8024794:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024798:	18d1      	adds	r1, r2, r3
 802479a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802479e:	330b      	adds	r3, #11
 80247a0:	2206      	movs	r2, #6
 80247a2:	4618      	mov	r0, r3
 80247a4:	f006 fd47 	bl	802b236 <memcpy>
 80247a8:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80247ac:	3306      	adds	r3, #6
 80247ae:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 80247b2:	e011      	b.n	80247d8 <send_internal_SourceRouting+0x2d0>
 80247b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80247b6:	685a      	ldr	r2, [r3, #4]
 80247b8:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80247bc:	18d1      	adds	r1, r2, r3
 80247be:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80247c2:	330a      	adds	r3, #10
 80247c4:	2207      	movs	r2, #7
 80247c6:	4618      	mov	r0, r3
 80247c8:	f006 fd35 	bl	802b236 <memcpy>
 80247cc:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80247d0:	3307      	adds	r3, #7
 80247d2:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 80247d6:	bf00      	nop
 80247d8:	463b      	mov	r3, r7
 80247da:	f507 7280 	add.w	r2, r7, #256	; 0x100
 80247de:	4611      	mov	r1, r2
 80247e0:	4618      	mov	r0, r3
 80247e2:	f7ea f9bf 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 80247e6:	f507 7390 	add.w	r3, r7, #288	; 0x120
 80247ea:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 80247ee:	f107 04c4 	add.w	r4, r7, #196	; 0xc4
 80247f2:	461d      	mov	r5, r3
 80247f4:	6828      	ldr	r0, [r5, #0]
 80247f6:	6869      	ldr	r1, [r5, #4]
 80247f8:	68aa      	ldr	r2, [r5, #8]
 80247fa:	68eb      	ldr	r3, [r5, #12]
 80247fc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80247fe:	7c2b      	ldrb	r3, [r5, #16]
 8024800:	7023      	strb	r3, [r4, #0]
 8024802:	463b      	mov	r3, r7
 8024804:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8024808:	4611      	mov	r1, r2
 802480a:	4618      	mov	r0, r3
 802480c:	f7ea fa04 	bl	800ec18 <2af6233fa7118fd11caf81b4f86d81e84f105465>
 8024810:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024814:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 8024818:	f107 04d8 	add.w	r4, r7, #216	; 0xd8
 802481c:	461d      	mov	r5, r3
 802481e:	6828      	ldr	r0, [r5, #0]
 8024820:	6869      	ldr	r1, [r5, #4]
 8024822:	68aa      	ldr	r2, [r5, #8]
 8024824:	68eb      	ldr	r3, [r5, #12]
 8024826:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8024828:	7c2b      	ldrb	r3, [r5, #16]
 802482a:	7023      	strb	r3, [r4, #0]
 802482c:	2005      	movs	r0, #5
 802482e:	f7e8 fbe5 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8024832:	4602      	mov	r2, r0
 8024834:	f107 03d8 	add.w	r3, r7, #216	; 0xd8
 8024838:	4611      	mov	r1, r2
 802483a:	4618      	mov	r0, r3
 802483c:	f7ea fd76 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8024840:	4603      	mov	r3, r0
 8024842:	2b00      	cmp	r3, #0
 8024844:	d00c      	beq.n	8024860 <send_internal_SourceRouting+0x358>
 8024846:	2002      	movs	r0, #2
 8024848:	f7e8 fbd8 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802484c:	4602      	mov	r2, r0
 802484e:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8024852:	4611      	mov	r1, r2
 8024854:	4618      	mov	r0, r3
 8024856:	f7ea fd69 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 802485a:	4603      	mov	r3, r0
 802485c:	2b00      	cmp	r3, #0
 802485e:	d10d      	bne.n	802487c <send_internal_SourceRouting+0x374>
 8024860:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024862:	331d      	adds	r3, #29
 8024864:	4618      	mov	r0, r3
 8024866:	f7ea fc5b 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 802486a:	4603      	mov	r3, r0
 802486c:	2b00      	cmp	r3, #0
 802486e:	f000 8303 	beq.w	8024e78 <send_internal_SourceRouting+0x970>
 8024872:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024874:	7c1b      	ldrb	r3, [r3, #16]
 8024876:	2b11      	cmp	r3, #17
 8024878:	f040 82fe 	bne.w	8024e78 <send_internal_SourceRouting+0x970>
 802487c:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8024880:	f003 031f 	and.w	r3, r3, #31
 8024884:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 8024888:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 802488c:	2b00      	cmp	r3, #0
 802488e:	f000 80ac 	beq.w	80249ea <send_internal_SourceRouting+0x4e2>
 8024892:	f897 3119 	ldrb.w	r3, [r7, #281]	; 0x119
 8024896:	3b01      	subs	r3, #1
 8024898:	f887 3119 	strb.w	r3, [r7, #281]	; 0x119
 802489c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80248a0:	4619      	mov	r1, r3
 80248a2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80248a4:	f004 fe2e 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80248a8:	2102      	movs	r1, #2
 80248aa:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80248ac:	f004 fdf2 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80248b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80248b2:	685b      	ldr	r3, [r3, #4]
 80248b4:	f897 2119 	ldrb.w	r2, [r7, #281]	; 0x119
 80248b8:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80248bc:	b2d2      	uxtb	r2, r2
 80248be:	701a      	strb	r2, [r3, #0]
 80248c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80248c2:	685b      	ldr	r3, [r3, #4]
 80248c4:	3301      	adds	r3, #1
 80248c6:	f897 211e 	ldrb.w	r2, [r7, #286]	; 0x11e
 80248ca:	701a      	strb	r2, [r3, #0]
 80248cc:	f107 04ec 	add.w	r4, r7, #236	; 0xec
 80248d0:	f507 7580 	add.w	r5, r7, #256	; 0x100
 80248d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80248d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80248d8:	682b      	ldr	r3, [r5, #0]
 80248da:	7023      	strb	r3, [r4, #0]
 80248dc:	f897 311e 	ldrb.w	r3, [r7, #286]	; 0x11e
 80248e0:	2bff      	cmp	r3, #255	; 0xff
 80248e2:	d05e      	beq.n	80249a2 <send_internal_SourceRouting+0x49a>
 80248e4:	2bff      	cmp	r3, #255	; 0xff
 80248e6:	dc67      	bgt.n	80249b8 <send_internal_SourceRouting+0x4b0>
 80248e8:	2bfe      	cmp	r3, #254	; 0xfe
 80248ea:	d04f      	beq.n	802498c <send_internal_SourceRouting+0x484>
 80248ec:	2bfe      	cmp	r3, #254	; 0xfe
 80248ee:	dc63      	bgt.n	80249b8 <send_internal_SourceRouting+0x4b0>
 80248f0:	2b04      	cmp	r3, #4
 80248f2:	dc11      	bgt.n	8024918 <send_internal_SourceRouting+0x410>
 80248f4:	2b00      	cmp	r3, #0
 80248f6:	db5f      	blt.n	80249b8 <send_internal_SourceRouting+0x4b0>
 80248f8:	2b04      	cmp	r3, #4
 80248fa:	d85d      	bhi.n	80249b8 <send_internal_SourceRouting+0x4b0>
 80248fc:	a201      	add	r2, pc, #4	; (adr r2, 8024904 <send_internal_SourceRouting+0x3fc>)
 80248fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8024902:	bf00      	nop
 8024904:	0802491f 	.word	0x0802491f
 8024908:	0802492d 	.word	0x0802492d
 802490c:	0802493d 	.word	0x0802493d
 8024910:	0802494b 	.word	0x0802494b
 8024914:	08024961 	.word	0x08024961
 8024918:	2bfd      	cmp	r3, #253	; 0xfd
 802491a:	d02c      	beq.n	8024976 <send_internal_SourceRouting+0x46e>
 802491c:	e04c      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 802491e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024920:	685b      	ldr	r3, [r3, #4]
 8024922:	3302      	adds	r3, #2
 8024924:	781b      	ldrb	r3, [r3, #0]
 8024926:	f887 30fc 	strb.w	r3, [r7, #252]	; 0xfc
 802492a:	e045      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 802492c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802492e:	685b      	ldr	r3, [r3, #4]
 8024930:	3302      	adds	r3, #2
 8024932:	881b      	ldrh	r3, [r3, #0]
 8024934:	b29b      	uxth	r3, r3
 8024936:	f8a7 30fb 	strh.w	r3, [r7, #251]	; 0xfb
 802493a:	e03d      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 802493c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802493e:	685b      	ldr	r3, [r3, #4]
 8024940:	3302      	adds	r3, #2
 8024942:	681b      	ldr	r3, [r3, #0]
 8024944:	f8c7 30f9 	str.w	r3, [r7, #249]	; 0xf9
 8024948:	e036      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 802494a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802494c:	685b      	ldr	r3, [r3, #4]
 802494e:	1c99      	adds	r1, r3, #2
 8024950:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024954:	3309      	adds	r3, #9
 8024956:	2208      	movs	r2, #8
 8024958:	4618      	mov	r0, r3
 802495a:	f006 fc6c 	bl	802b236 <memcpy>
 802495e:	e02b      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 8024960:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024962:	685b      	ldr	r3, [r3, #4]
 8024964:	1c99      	adds	r1, r3, #2
 8024966:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 802496a:	3301      	adds	r3, #1
 802496c:	2210      	movs	r2, #16
 802496e:	4618      	mov	r0, r3
 8024970:	f006 fc61 	bl	802b236 <memcpy>
 8024974:	e020      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 8024976:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024978:	685b      	ldr	r3, [r3, #4]
 802497a:	1c99      	adds	r1, r3, #2
 802497c:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024980:	330c      	adds	r3, #12
 8024982:	2205      	movs	r2, #5
 8024984:	4618      	mov	r0, r3
 8024986:	f006 fc56 	bl	802b236 <memcpy>
 802498a:	e015      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 802498c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 802498e:	685b      	ldr	r3, [r3, #4]
 8024990:	1c99      	adds	r1, r3, #2
 8024992:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024996:	330b      	adds	r3, #11
 8024998:	2206      	movs	r2, #6
 802499a:	4618      	mov	r0, r3
 802499c:	f006 fc4b 	bl	802b236 <memcpy>
 80249a0:	e00a      	b.n	80249b8 <send_internal_SourceRouting+0x4b0>
 80249a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80249a4:	685b      	ldr	r3, [r3, #4]
 80249a6:	1c99      	adds	r1, r3, #2
 80249a8:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 80249ac:	330a      	adds	r3, #10
 80249ae:	2207      	movs	r2, #7
 80249b0:	4618      	mov	r0, r3
 80249b2:	f006 fc40 	bl	802b236 <memcpy>
 80249b6:	bf00      	nop
 80249b8:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80249ba:	463b      	mov	r3, r7
 80249bc:	f107 02ec 	add.w	r2, r7, #236	; 0xec
 80249c0:	4611      	mov	r1, r2
 80249c2:	4618      	mov	r0, r3
 80249c4:	f7ea f8ce 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 80249c8:	f507 7390 	add.w	r3, r7, #288	; 0x120
 80249cc:	f5a3 7290 	sub.w	r2, r3, #288	; 0x120
 80249d0:	f104 0341 	add.w	r3, r4, #65	; 0x41
 80249d4:	6815      	ldr	r5, [r2, #0]
 80249d6:	6854      	ldr	r4, [r2, #4]
 80249d8:	6890      	ldr	r0, [r2, #8]
 80249da:	68d1      	ldr	r1, [r2, #12]
 80249dc:	601d      	str	r5, [r3, #0]
 80249de:	605c      	str	r4, [r3, #4]
 80249e0:	6098      	str	r0, [r3, #8]
 80249e2:	60d9      	str	r1, [r3, #12]
 80249e4:	7c12      	ldrb	r2, [r2, #16]
 80249e6:	741a      	strb	r2, [r3, #16]
 80249e8:	e254      	b.n	8024e94 <send_internal_SourceRouting+0x98c>
 80249ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80249ec:	685a      	ldr	r2, [r3, #4]
 80249ee:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 80249f2:	4413      	add	r3, r2
 80249f4:	781b      	ldrb	r3, [r3, #0]
 80249f6:	f887 311f 	strb.w	r3, [r7, #287]	; 0x11f
 80249fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80249fc:	685a      	ldr	r2, [r3, #4]
 80249fe:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024a02:	3301      	adds	r3, #1
 8024a04:	4413      	add	r3, r2
 8024a06:	781b      	ldrb	r3, [r3, #0]
 8024a08:	f887 3118 	strb.w	r3, [r7, #280]	; 0x118
 8024a0c:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8024a10:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
 8024a14:	2b80      	cmp	r3, #128	; 0x80
 8024a16:	f040 820e 	bne.w	8024e36 <send_internal_SourceRouting+0x92e>
 8024a1a:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8024a1e:	2b04      	cmp	r3, #4
 8024a20:	f200 8209 	bhi.w	8024e36 <send_internal_SourceRouting+0x92e>
 8024a24:	f897 2118 	ldrb.w	r2, [r7, #280]	; 0x118
 8024a28:	f897 311e 	ldrb.w	r3, [r7, #286]	; 0x11e
 8024a2c:	429a      	cmp	r2, r3
 8024a2e:	f0c0 8094 	bcc.w	8024b5a <send_internal_SourceRouting+0x652>
 8024a32:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024a36:	4619      	mov	r1, r3
 8024a38:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024a3a:	f004 fd63 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024a3e:	f107 04ec 	add.w	r4, r7, #236	; 0xec
 8024a42:	f507 7580 	add.w	r5, r7, #256	; 0x100
 8024a46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8024a48:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8024a4a:	682b      	ldr	r3, [r5, #0]
 8024a4c:	7023      	strb	r3, [r4, #0]
 8024a4e:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8024a52:	2bff      	cmp	r3, #255	; 0xff
 8024a54:	d05d      	beq.n	8024b12 <send_internal_SourceRouting+0x60a>
 8024a56:	2bff      	cmp	r3, #255	; 0xff
 8024a58:	dc66      	bgt.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a5a:	2bfe      	cmp	r3, #254	; 0xfe
 8024a5c:	d04e      	beq.n	8024afc <send_internal_SourceRouting+0x5f4>
 8024a5e:	2bfe      	cmp	r3, #254	; 0xfe
 8024a60:	dc62      	bgt.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a62:	2b04      	cmp	r3, #4
 8024a64:	dc10      	bgt.n	8024a88 <send_internal_SourceRouting+0x580>
 8024a66:	2b00      	cmp	r3, #0
 8024a68:	db5e      	blt.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a6a:	2b04      	cmp	r3, #4
 8024a6c:	d85c      	bhi.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a6e:	a201      	add	r2, pc, #4	; (adr r2, 8024a74 <send_internal_SourceRouting+0x56c>)
 8024a70:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8024a74:	08024a8f 	.word	0x08024a8f
 8024a78:	08024a9d 	.word	0x08024a9d
 8024a7c:	08024aad 	.word	0x08024aad
 8024a80:	08024abb 	.word	0x08024abb
 8024a84:	08024ad1 	.word	0x08024ad1
 8024a88:	2bfd      	cmp	r3, #253	; 0xfd
 8024a8a:	d02c      	beq.n	8024ae6 <send_internal_SourceRouting+0x5de>
 8024a8c:	e04c      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024a90:	685b      	ldr	r3, [r3, #4]
 8024a92:	3302      	adds	r3, #2
 8024a94:	781b      	ldrb	r3, [r3, #0]
 8024a96:	f887 30fc 	strb.w	r3, [r7, #252]	; 0xfc
 8024a9a:	e045      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024a9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024a9e:	685b      	ldr	r3, [r3, #4]
 8024aa0:	3302      	adds	r3, #2
 8024aa2:	881b      	ldrh	r3, [r3, #0]
 8024aa4:	b29b      	uxth	r3, r3
 8024aa6:	f8a7 30fb 	strh.w	r3, [r7, #251]	; 0xfb
 8024aaa:	e03d      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024aac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024aae:	685b      	ldr	r3, [r3, #4]
 8024ab0:	3302      	adds	r3, #2
 8024ab2:	681b      	ldr	r3, [r3, #0]
 8024ab4:	f8c7 30f9 	str.w	r3, [r7, #249]	; 0xf9
 8024ab8:	e036      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024aba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024abc:	685b      	ldr	r3, [r3, #4]
 8024abe:	1c99      	adds	r1, r3, #2
 8024ac0:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024ac4:	3309      	adds	r3, #9
 8024ac6:	2208      	movs	r2, #8
 8024ac8:	4618      	mov	r0, r3
 8024aca:	f006 fbb4 	bl	802b236 <memcpy>
 8024ace:	e02b      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024ad0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024ad2:	685b      	ldr	r3, [r3, #4]
 8024ad4:	1c99      	adds	r1, r3, #2
 8024ad6:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024ada:	3301      	adds	r3, #1
 8024adc:	2210      	movs	r2, #16
 8024ade:	4618      	mov	r0, r3
 8024ae0:	f006 fba9 	bl	802b236 <memcpy>
 8024ae4:	e020      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024ae6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024ae8:	685b      	ldr	r3, [r3, #4]
 8024aea:	1c99      	adds	r1, r3, #2
 8024aec:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024af0:	330c      	adds	r3, #12
 8024af2:	2205      	movs	r2, #5
 8024af4:	4618      	mov	r0, r3
 8024af6:	f006 fb9e 	bl	802b236 <memcpy>
 8024afa:	e015      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024afc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024afe:	685b      	ldr	r3, [r3, #4]
 8024b00:	1c99      	adds	r1, r3, #2
 8024b02:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024b06:	330b      	adds	r3, #11
 8024b08:	2206      	movs	r2, #6
 8024b0a:	4618      	mov	r0, r3
 8024b0c:	f006 fb93 	bl	802b236 <memcpy>
 8024b10:	e00a      	b.n	8024b28 <send_internal_SourceRouting+0x620>
 8024b12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024b14:	685b      	ldr	r3, [r3, #4]
 8024b16:	1c99      	adds	r1, r3, #2
 8024b18:	f107 03ec 	add.w	r3, r7, #236	; 0xec
 8024b1c:	330a      	adds	r3, #10
 8024b1e:	2207      	movs	r2, #7
 8024b20:	4618      	mov	r0, r3
 8024b22:	f006 fb88 	bl	802b236 <memcpy>
 8024b26:	bf00      	nop
 8024b28:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8024b2a:	463b      	mov	r3, r7
 8024b2c:	f107 02ec 	add.w	r2, r7, #236	; 0xec
 8024b30:	4611      	mov	r1, r2
 8024b32:	4618      	mov	r0, r3
 8024b34:	f7ea f816 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 8024b38:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024b3c:	f5a3 7290 	sub.w	r2, r3, #288	; 0x120
 8024b40:	f104 0341 	add.w	r3, r4, #65	; 0x41
 8024b44:	6815      	ldr	r5, [r2, #0]
 8024b46:	6854      	ldr	r4, [r2, #4]
 8024b48:	6890      	ldr	r0, [r2, #8]
 8024b4a:	68d1      	ldr	r1, [r2, #12]
 8024b4c:	601d      	str	r5, [r3, #0]
 8024b4e:	605c      	str	r4, [r3, #4]
 8024b50:	6098      	str	r0, [r3, #8]
 8024b52:	60d9      	str	r1, [r3, #12]
 8024b54:	7c12      	ldrb	r2, [r2, #16]
 8024b56:	741a      	strb	r2, [r3, #16]
 8024b58:	e18d      	b.n	8024e76 <send_internal_SourceRouting+0x96e>
 8024b5a:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024b5e:	3302      	adds	r3, #2
 8024b60:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024b64:	f897 3118 	ldrb.w	r3, [r7, #280]	; 0x118
 8024b68:	2bff      	cmp	r3, #255	; 0xff
 8024b6a:	d07f      	beq.n	8024c6c <send_internal_SourceRouting+0x764>
 8024b6c:	2bff      	cmp	r3, #255	; 0xff
 8024b6e:	f300 808f 	bgt.w	8024c90 <send_internal_SourceRouting+0x788>
 8024b72:	2bfe      	cmp	r3, #254	; 0xfe
 8024b74:	d068      	beq.n	8024c48 <send_internal_SourceRouting+0x740>
 8024b76:	2bfe      	cmp	r3, #254	; 0xfe
 8024b78:	f300 808a 	bgt.w	8024c90 <send_internal_SourceRouting+0x788>
 8024b7c:	2b03      	cmp	r3, #3
 8024b7e:	dc11      	bgt.n	8024ba4 <send_internal_SourceRouting+0x69c>
 8024b80:	2b00      	cmp	r3, #0
 8024b82:	f2c0 8085 	blt.w	8024c90 <send_internal_SourceRouting+0x788>
 8024b86:	2b03      	cmp	r3, #3
 8024b88:	f200 8082 	bhi.w	8024c90 <send_internal_SourceRouting+0x788>
 8024b8c:	a201      	add	r2, pc, #4	; (adr r2, 8024b94 <send_internal_SourceRouting+0x68c>)
 8024b8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8024b92:	bf00      	nop
 8024b94:	08024bab 	.word	0x08024bab
 8024b98:	08024bc7 	.word	0x08024bc7
 8024b9c:	08024be5 	.word	0x08024be5
 8024ba0:	08024c01 	.word	0x08024c01
 8024ba4:	2bfd      	cmp	r3, #253	; 0xfd
 8024ba6:	d03d      	beq.n	8024c24 <send_internal_SourceRouting+0x71c>
 8024ba8:	e072      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024baa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024bac:	685a      	ldr	r2, [r3, #4]
 8024bae:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bb2:	4413      	add	r3, r2
 8024bb4:	781b      	ldrb	r3, [r3, #0]
 8024bb6:	f887 3110 	strb.w	r3, [r7, #272]	; 0x110
 8024bba:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bbe:	3301      	adds	r3, #1
 8024bc0:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024bc4:	e064      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024bc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024bc8:	685a      	ldr	r2, [r3, #4]
 8024bca:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bce:	4413      	add	r3, r2
 8024bd0:	881b      	ldrh	r3, [r3, #0]
 8024bd2:	b29b      	uxth	r3, r3
 8024bd4:	f8a7 310f 	strh.w	r3, [r7, #271]	; 0x10f
 8024bd8:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bdc:	3302      	adds	r3, #2
 8024bde:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024be2:	e055      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024be4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024be6:	685a      	ldr	r2, [r3, #4]
 8024be8:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bec:	4413      	add	r3, r2
 8024bee:	681b      	ldr	r3, [r3, #0]
 8024bf0:	f8c7 310d 	str.w	r3, [r7, #269]	; 0x10d
 8024bf4:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024bf8:	3304      	adds	r3, #4
 8024bfa:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024bfe:	e047      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024c00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024c02:	685a      	ldr	r2, [r3, #4]
 8024c04:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c08:	18d1      	adds	r1, r2, r3
 8024c0a:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024c0e:	3309      	adds	r3, #9
 8024c10:	2208      	movs	r2, #8
 8024c12:	4618      	mov	r0, r3
 8024c14:	f006 fb0f 	bl	802b236 <memcpy>
 8024c18:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c1c:	3308      	adds	r3, #8
 8024c1e:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024c22:	e035      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024c24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024c26:	685a      	ldr	r2, [r3, #4]
 8024c28:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c2c:	18d1      	adds	r1, r2, r3
 8024c2e:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024c32:	330c      	adds	r3, #12
 8024c34:	2205      	movs	r2, #5
 8024c36:	4618      	mov	r0, r3
 8024c38:	f006 fafd 	bl	802b236 <memcpy>
 8024c3c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c40:	3305      	adds	r3, #5
 8024c42:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024c46:	e023      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024c48:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024c4a:	685a      	ldr	r2, [r3, #4]
 8024c4c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c50:	18d1      	adds	r1, r2, r3
 8024c52:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024c56:	330b      	adds	r3, #11
 8024c58:	2206      	movs	r2, #6
 8024c5a:	4618      	mov	r0, r3
 8024c5c:	f006 faeb 	bl	802b236 <memcpy>
 8024c60:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c64:	3306      	adds	r3, #6
 8024c66:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024c6a:	e011      	b.n	8024c90 <send_internal_SourceRouting+0x788>
 8024c6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024c6e:	685a      	ldr	r2, [r3, #4]
 8024c70:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c74:	18d1      	adds	r1, r2, r3
 8024c76:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024c7a:	330a      	adds	r3, #10
 8024c7c:	2207      	movs	r2, #7
 8024c7e:	4618      	mov	r0, r3
 8024c80:	f006 fad9 	bl	802b236 <memcpy>
 8024c84:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024c88:	3307      	adds	r3, #7
 8024c8a:	f887 311c 	strb.w	r3, [r7, #284]	; 0x11c
 8024c8e:	bf00      	nop
 8024c90:	f897 311f 	ldrb.w	r3, [r7, #287]	; 0x11f
 8024c94:	f003 031f 	and.w	r3, r3, #31
 8024c98:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 8024c9c:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024ca0:	4619      	mov	r1, r3
 8024ca2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024ca4:	f004 fc2e 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024ca8:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8024cac:	2b00      	cmp	r3, #0
 8024cae:	d016      	beq.n	8024cde <send_internal_SourceRouting+0x7d6>
 8024cb0:	f897 3117 	ldrb.w	r3, [r7, #279]	; 0x117
 8024cb4:	3b01      	subs	r3, #1
 8024cb6:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
 8024cba:	2102      	movs	r1, #2
 8024cbc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024cbe:	f004 fbe9 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024cc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024cc4:	685b      	ldr	r3, [r3, #4]
 8024cc6:	f897 2117 	ldrb.w	r2, [r7, #279]	; 0x117
 8024cca:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8024cce:	b2d2      	uxtb	r2, r2
 8024cd0:	701a      	strb	r2, [r3, #0]
 8024cd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024cd4:	685b      	ldr	r3, [r3, #4]
 8024cd6:	3301      	adds	r3, #1
 8024cd8:	f897 2118 	ldrb.w	r2, [r7, #280]	; 0x118
 8024cdc:	701a      	strb	r2, [r3, #0]
 8024cde:	f897 311e 	ldrb.w	r3, [r7, #286]	; 0x11e
 8024ce2:	2bff      	cmp	r3, #255	; 0xff
 8024ce4:	d072      	beq.n	8024dcc <send_internal_SourceRouting+0x8c4>
 8024ce6:	2bff      	cmp	r3, #255	; 0xff
 8024ce8:	dc7e      	bgt.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024cea:	2bfe      	cmp	r3, #254	; 0xfe
 8024cec:	d060      	beq.n	8024db0 <send_internal_SourceRouting+0x8a8>
 8024cee:	2bfe      	cmp	r3, #254	; 0xfe
 8024cf0:	dc7a      	bgt.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024cf2:	2b04      	cmp	r3, #4
 8024cf4:	dc10      	bgt.n	8024d18 <send_internal_SourceRouting+0x810>
 8024cf6:	2b00      	cmp	r3, #0
 8024cf8:	db76      	blt.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024cfa:	2b04      	cmp	r3, #4
 8024cfc:	d874      	bhi.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024cfe:	a201      	add	r2, pc, #4	; (adr r2, 8024d04 <send_internal_SourceRouting+0x7fc>)
 8024d00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8024d04:	08024d1f 	.word	0x08024d1f
 8024d08:	08024d33 	.word	0x08024d33
 8024d0c:	08024d49 	.word	0x08024d49
 8024d10:	08024d5d 	.word	0x08024d5d
 8024d14:	08024d79 	.word	0x08024d79
 8024d18:	2bfd      	cmp	r3, #253	; 0xfd
 8024d1a:	d03b      	beq.n	8024d94 <send_internal_SourceRouting+0x88c>
 8024d1c:	e064      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d1e:	2101      	movs	r1, #1
 8024d20:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d22:	f004 fbb7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d28:	685b      	ldr	r3, [r3, #4]
 8024d2a:	f897 2110 	ldrb.w	r2, [r7, #272]	; 0x110
 8024d2e:	701a      	strb	r2, [r3, #0]
 8024d30:	e05a      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d32:	2102      	movs	r1, #2
 8024d34:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d36:	f004 fbad 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d3c:	685b      	ldr	r3, [r3, #4]
 8024d3e:	f8b7 210f 	ldrh.w	r2, [r7, #271]	; 0x10f
 8024d42:	b292      	uxth	r2, r2
 8024d44:	801a      	strh	r2, [r3, #0]
 8024d46:	e04f      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d48:	2104      	movs	r1, #4
 8024d4a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d4c:	f004 fba2 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d52:	685b      	ldr	r3, [r3, #4]
 8024d54:	f8d7 210d 	ldr.w	r2, [r7, #269]	; 0x10d
 8024d58:	601a      	str	r2, [r3, #0]
 8024d5a:	e045      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d5c:	2108      	movs	r1, #8
 8024d5e:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d60:	f004 fb98 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d66:	6858      	ldr	r0, [r3, #4]
 8024d68:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024d6c:	3309      	adds	r3, #9
 8024d6e:	2208      	movs	r2, #8
 8024d70:	4619      	mov	r1, r3
 8024d72:	f006 fa60 	bl	802b236 <memcpy>
 8024d76:	e037      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d78:	2110      	movs	r1, #16
 8024d7a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d7c:	f004 fb8a 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d82:	6858      	ldr	r0, [r3, #4]
 8024d84:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024d88:	3301      	adds	r3, #1
 8024d8a:	2210      	movs	r2, #16
 8024d8c:	4619      	mov	r1, r3
 8024d8e:	f006 fa52 	bl	802b236 <memcpy>
 8024d92:	e029      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024d94:	2105      	movs	r1, #5
 8024d96:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024d98:	f004 fb7c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024d9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024d9e:	6858      	ldr	r0, [r3, #4]
 8024da0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024da4:	330c      	adds	r3, #12
 8024da6:	2205      	movs	r2, #5
 8024da8:	4619      	mov	r1, r3
 8024daa:	f006 fa44 	bl	802b236 <memcpy>
 8024dae:	e01b      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024db0:	2106      	movs	r1, #6
 8024db2:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024db4:	f004 fb6e 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024db8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024dba:	6858      	ldr	r0, [r3, #4]
 8024dbc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024dc0:	330b      	adds	r3, #11
 8024dc2:	2206      	movs	r2, #6
 8024dc4:	4619      	mov	r1, r3
 8024dc6:	f006 fa36 	bl	802b236 <memcpy>
 8024dca:	e00d      	b.n	8024de8 <send_internal_SourceRouting+0x8e0>
 8024dcc:	2107      	movs	r1, #7
 8024dce:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024dd0:	f004 fb60 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024dd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024dd6:	6858      	ldr	r0, [r3, #4]
 8024dd8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8024ddc:	330a      	adds	r3, #10
 8024dde:	2207      	movs	r2, #7
 8024de0:	4619      	mov	r1, r3
 8024de2:	f006 fa28 	bl	802b236 <memcpy>
 8024de6:	bf00      	nop
 8024de8:	2102      	movs	r1, #2
 8024dea:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024dec:	f004 fb52 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8024df0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024df2:	685b      	ldr	r3, [r3, #4]
 8024df4:	2280      	movs	r2, #128	; 0x80
 8024df6:	701a      	strb	r2, [r3, #0]
 8024df8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024dfa:	685b      	ldr	r3, [r3, #4]
 8024dfc:	3301      	adds	r3, #1
 8024dfe:	f897 211e 	ldrb.w	r2, [r7, #286]	; 0x11e
 8024e02:	701a      	strb	r2, [r3, #0]
 8024e04:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8024e06:	463b      	mov	r3, r7
 8024e08:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8024e0c:	4611      	mov	r1, r2
 8024e0e:	4618      	mov	r0, r3
 8024e10:	f7e9 fea8 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 8024e14:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024e18:	f5a3 7290 	sub.w	r2, r3, #288	; 0x120
 8024e1c:	f104 0341 	add.w	r3, r4, #65	; 0x41
 8024e20:	6815      	ldr	r5, [r2, #0]
 8024e22:	6854      	ldr	r4, [r2, #4]
 8024e24:	6890      	ldr	r0, [r2, #8]
 8024e26:	68d1      	ldr	r1, [r2, #12]
 8024e28:	601d      	str	r5, [r3, #0]
 8024e2a:	605c      	str	r4, [r3, #4]
 8024e2c:	6098      	str	r0, [r3, #8]
 8024e2e:	60d9      	str	r1, [r3, #12]
 8024e30:	7c12      	ldrb	r2, [r2, #16]
 8024e32:	741a      	strb	r2, [r3, #16]
 8024e34:	e01f      	b.n	8024e76 <send_internal_SourceRouting+0x96e>
 8024e36:	f897 311c 	ldrb.w	r3, [r7, #284]	; 0x11c
 8024e3a:	4619      	mov	r1, r3
 8024e3c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024e3e:	f004 fb61 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024e42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024e44:	f103 021d 	add.w	r2, r3, #29
 8024e48:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8024e4a:	463b      	mov	r3, r7
 8024e4c:	4611      	mov	r1, r2
 8024e4e:	4618      	mov	r0, r3
 8024e50:	f7e9 fe88 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 8024e54:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024e58:	f5a3 7290 	sub.w	r2, r3, #288	; 0x120
 8024e5c:	f104 0341 	add.w	r3, r4, #65	; 0x41
 8024e60:	6815      	ldr	r5, [r2, #0]
 8024e62:	6854      	ldr	r4, [r2, #4]
 8024e64:	6890      	ldr	r0, [r2, #8]
 8024e66:	68d1      	ldr	r1, [r2, #12]
 8024e68:	601d      	str	r5, [r3, #0]
 8024e6a:	605c      	str	r4, [r3, #4]
 8024e6c:	6098      	str	r0, [r3, #8]
 8024e6e:	60d9      	str	r1, [r3, #12]
 8024e70:	7c12      	ldrb	r2, [r2, #16]
 8024e72:	741a      	strb	r2, [r3, #16]
 8024e74:	e00e      	b.n	8024e94 <send_internal_SourceRouting+0x98c>
 8024e76:	e00d      	b.n	8024e94 <send_internal_SourceRouting+0x98c>
 8024e78:	4a76      	ldr	r2, [pc, #472]	; (8025054 <send_internal_SourceRouting+0xb4c>)
 8024e7a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8024e7e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024e82:	e883 0003 	stmia.w	r3, {r0, r1}
 8024e86:	4a74      	ldr	r2, [pc, #464]	; (8025058 <send_internal_SourceRouting+0xb50>)
 8024e88:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8024e8c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8024e90:	f7f0 f9ba 	bl	8015208 <LOGGER_PrintLine>
 8024e94:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024e98:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8024e9c:	681b      	ldr	r3, [r3, #0]
 8024e9e:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 8024ea2:	2b00      	cmp	r3, #0
 8024ea4:	f000 80a8 	beq.w	8024ff8 <send_internal_SourceRouting+0xaf0>
 8024ea8:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024eac:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8024eb0:	681b      	ldr	r3, [r3, #0]
 8024eb2:	6a1b      	ldr	r3, [r3, #32]
 8024eb4:	2b00      	cmp	r3, #0
 8024eb6:	f000 809f 	beq.w	8024ff8 <send_internal_SourceRouting+0xaf0>
 8024eba:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024ebe:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8024ec2:	681b      	ldr	r3, [r3, #0]
 8024ec4:	6a1a      	ldr	r2, [r3, #32]
 8024ec6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024ec8:	685b      	ldr	r3, [r3, #4]
 8024eca:	1ad3      	subs	r3, r2, r3
 8024ecc:	b2da      	uxtb	r2, r3
 8024ece:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 8024ed2:	4413      	add	r3, r2
 8024ed4:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 8024ed8:	f897 311d 	ldrb.w	r3, [r7, #285]	; 0x11d
 8024edc:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8024ee0:	18d0      	adds	r0, r2, r3
 8024ee2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8024ee4:	685b      	ldr	r3, [r3, #4]
 8024ee6:	f897 211a 	ldrb.w	r2, [r7, #282]	; 0x11a
 8024eea:	4619      	mov	r1, r3
 8024eec:	f006 f9a3 	bl	802b236 <memcpy>
 8024ef0:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 8024ef4:	4619      	mov	r1, r3
 8024ef6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024ef8:	f004 fb04 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024efc:	f897 211d 	ldrb.w	r2, [r7, #285]	; 0x11d
 8024f00:	f897 311a 	ldrb.w	r3, [r7, #282]	; 0x11a
 8024f04:	4413      	add	r3, r2
 8024f06:	f887 311d 	strb.w	r3, [r7, #285]	; 0x11d
 8024f0a:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024f0e:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024f12:	6819      	ldr	r1, [r3, #0]
 8024f14:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024f16:	f7fe fcff 	bl	8023918 <6fdc701aa2cd71dee737cd6193e5dab778619cb9>
 8024f1a:	4603      	mov	r3, r0
 8024f1c:	f887 3116 	strb.w	r3, [r7, #278]	; 0x116
 8024f20:	f897 3116 	ldrb.w	r3, [r7, #278]	; 0x116
 8024f24:	4619      	mov	r1, r3
 8024f26:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024f28:	f004 faec 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024f2c:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024f30:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024f34:	681b      	ldr	r3, [r3, #0]
 8024f36:	785b      	ldrb	r3, [r3, #1]
 8024f38:	f887 3115 	strb.w	r3, [r7, #277]	; 0x115
 8024f3c:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024f40:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024f44:	681b      	ldr	r3, [r3, #0]
 8024f46:	78da      	ldrb	r2, [r3, #3]
 8024f48:	791b      	ldrb	r3, [r3, #4]
 8024f4a:	021b      	lsls	r3, r3, #8
 8024f4c:	4313      	orrs	r3, r2
 8024f4e:	f8a7 3112 	strh.w	r3, [r7, #274]	; 0x112
 8024f52:	f897 3115 	ldrb.w	r3, [r7, #277]	; 0x115
 8024f56:	f003 0310 	and.w	r3, r3, #16
 8024f5a:	2b00      	cmp	r3, #0
 8024f5c:	d10d      	bne.n	8024f7a <send_internal_SourceRouting+0xa72>
 8024f5e:	4a3d      	ldr	r2, [pc, #244]	; (8025054 <send_internal_SourceRouting+0xb4c>)
 8024f60:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8024f64:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024f68:	e883 0003 	stmia.w	r3, {r0, r1}
 8024f6c:	4a3b      	ldr	r2, [pc, #236]	; (802505c <send_internal_SourceRouting+0xb54>)
 8024f6e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8024f72:	e893 0003 	ldmia.w	r3, {r0, r1}
 8024f76:	f7f0 f947 	bl	8015208 <LOGGER_PrintLine>
 8024f7a:	f000 fd2b 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8024f7e:	4603      	mov	r3, r0
 8024f80:	461a      	mov	r2, r3
 8024f82:	f8b7 3112 	ldrh.w	r3, [r7, #274]	; 0x112
 8024f86:	4293      	cmp	r3, r2
 8024f88:	d91c      	bls.n	8024fc4 <send_internal_SourceRouting+0xabc>
 8024f8a:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024f8e:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024f92:	681b      	ldr	r3, [r3, #0]
 8024f94:	785b      	ldrb	r3, [r3, #1]
 8024f96:	f043 0308 	orr.w	r3, r3, #8
 8024f9a:	b2da      	uxtb	r2, r3
 8024f9c:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024fa0:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024fa4:	681b      	ldr	r3, [r3, #0]
 8024fa6:	705a      	strb	r2, [r3, #1]
 8024fa8:	4a2a      	ldr	r2, [pc, #168]	; (8025054 <send_internal_SourceRouting+0xb4c>)
 8024faa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8024fae:	e892 0003 	ldmia.w	r2, {r0, r1}
 8024fb2:	e883 0003 	stmia.w	r3, {r0, r1}
 8024fb6:	4a2a      	ldr	r2, [pc, #168]	; (8025060 <send_internal_SourceRouting+0xb58>)
 8024fb8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8024fbc:	e893 0003 	ldmia.w	r3, {r0, r1}
 8024fc0:	f7f0 f922 	bl	8015208 <LOGGER_PrintLine>
 8024fc4:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024fc8:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024fcc:	681b      	ldr	r3, [r3, #0]
 8024fce:	785a      	ldrb	r2, [r3, #1]
 8024fd0:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024fd4:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8024fd8:	4611      	mov	r1, r2
 8024fda:	6818      	ldr	r0, [r3, #0]
 8024fdc:	f000 f842 	bl	8025064 <ff79dcb9f0638f1ac99659a38f02861c009c540c>
 8024fe0:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8024fe4:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8024fe8:	681b      	ldr	r3, [r3, #0]
 8024fea:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8024fee:	4619      	mov	r1, r3
 8024ff0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8024ff2:	f004 fa87 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8024ff6:	e002      	b.n	8024ffe <send_internal_SourceRouting+0xaf6>
 8024ff8:	2300      	movs	r3, #0
 8024ffa:	f887 311a 	strb.w	r3, [r7, #282]	; 0x11a
 8024ffe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8025000:	2201      	movs	r2, #1
 8025002:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8025006:	f507 7390 	add.w	r3, r7, #288	; 0x120
 802500a:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 802500e:	681b      	ldr	r3, [r3, #0]
 8025010:	1d18      	adds	r0, r3, #4
 8025012:	f507 7390 	add.w	r3, r7, #288	; 0x120
 8025016:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 802501a:	f507 7290 	add.w	r2, r7, #288	; 0x120
 802501e:	f5a2 7282 	sub.w	r2, r2, #260	; 0x104
 8025022:	f507 7190 	add.w	r1, r7, #288	; 0x120
 8025026:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
 802502a:	2401      	movs	r4, #1
 802502c:	9403      	str	r4, [sp, #12]
 802502e:	f897 411d 	ldrb.w	r4, [r7, #285]	; 0x11d
 8025032:	9402      	str	r4, [sp, #8]
 8025034:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8025038:	9401      	str	r4, [sp, #4]
 802503a:	9000      	str	r0, [sp, #0]
 802503c:	681b      	ldr	r3, [r3, #0]
 802503e:	6812      	ldr	r2, [r2, #0]
 8025040:	6809      	ldr	r1, [r1, #0]
 8025042:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8025044:	f7fc fdd0 	bl	8021be8 <13ccdc5f94324d1909629c7f21aeb736294bb0ba>
 8025048:	4603      	mov	r3, r0
 802504a:	4618      	mov	r0, r3
 802504c:	f507 7790 	add.w	r7, r7, #288	; 0x120
 8025050:	46bd      	mov	sp, r7
 8025052:	bdb0      	pop	{r4, r5, r7, pc}
 8025054:	08030bfc 	.word	0x08030bfc
 8025058:	08030cfc 	.word	0x08030cfc
 802505c:	08030c04 	.word	0x08030c04
 8025060:	08030c34 	.word	0x08030c34

08025064 <ff79dcb9f0638f1ac99659a38f02861c009c540c>:
 8025064:	b580      	push	{r7, lr}
 8025066:	b084      	sub	sp, #16
 8025068:	af00      	add	r7, sp, #0
 802506a:	6078      	str	r0, [r7, #4]
 802506c:	460b      	mov	r3, r1
 802506e:	70fb      	strb	r3, [r7, #3]
 8025070:	687b      	ldr	r3, [r7, #4]
 8025072:	2263      	movs	r2, #99	; 0x63
 8025074:	701a      	strb	r2, [r3, #0]
 8025076:	f000 fb65 	bl	8025744 <bc7077241f0f6c26eafbf9350b96f546688ad609>
 802507a:	4603      	mov	r3, r0
 802507c:	461a      	mov	r2, r3
 802507e:	687b      	ldr	r3, [r7, #4]
 8025080:	709a      	strb	r2, [r3, #2]
 8025082:	f000 fca7 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8025086:	4603      	mov	r3, r0
 8025088:	461a      	mov	r2, r3
 802508a:	687b      	ldr	r3, [r7, #4]
 802508c:	f8a3 2003 	strh.w	r2, [r3, #3]
 8025090:	687b      	ldr	r3, [r7, #4]
 8025092:	789b      	ldrb	r3, [r3, #2]
 8025094:	2b00      	cmp	r3, #0
 8025096:	d102      	bne.n	802509e <ff79dcb9f0638f1ac99659a38f02861c009c540c+0x3a>
 8025098:	2301      	movs	r3, #1
 802509a:	73fb      	strb	r3, [r7, #15]
 802509c:	e001      	b.n	80250a2 <ff79dcb9f0638f1ac99659a38f02861c009c540c+0x3e>
 802509e:	2300      	movs	r3, #0
 80250a0:	73fb      	strb	r3, [r7, #15]
 80250a2:	687b      	ldr	r3, [r7, #4]
 80250a4:	f8b3 3003 	ldrh.w	r3, [r3, #3]
 80250a8:	b29b      	uxth	r3, r3
 80250aa:	b2db      	uxtb	r3, r3
 80250ac:	2b00      	cmp	r3, #0
 80250ae:	d102      	bne.n	80250b6 <ff79dcb9f0638f1ac99659a38f02861c009c540c+0x52>
 80250b0:	2301      	movs	r3, #1
 80250b2:	73bb      	strb	r3, [r7, #14]
 80250b4:	e001      	b.n	80250ba <ff79dcb9f0638f1ac99659a38f02861c009c540c+0x56>
 80250b6:	2300      	movs	r3, #0
 80250b8:	73bb      	strb	r3, [r7, #14]
 80250ba:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80250be:	f023 0303 	bic.w	r3, r3, #3
 80250c2:	b25a      	sxtb	r2, r3
 80250c4:	7bfb      	ldrb	r3, [r7, #15]
 80250c6:	005b      	lsls	r3, r3, #1
 80250c8:	b25b      	sxtb	r3, r3
 80250ca:	4313      	orrs	r3, r2
 80250cc:	b25a      	sxtb	r2, r3
 80250ce:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80250d2:	4313      	orrs	r3, r2
 80250d4:	b25b      	sxtb	r3, r3
 80250d6:	b2da      	uxtb	r2, r3
 80250d8:	687b      	ldr	r3, [r7, #4]
 80250da:	705a      	strb	r2, [r3, #1]
 80250dc:	bf00      	nop
 80250de:	3710      	adds	r7, #16
 80250e0:	46bd      	mov	sp, r7
 80250e2:	bd80      	pop	{r7, pc}

080250e4 <1d524c1b514218a64c10ce09ef25ee3b26d5aac8>:
 80250e4:	b480      	push	{r7}
 80250e6:	af00      	add	r7, sp, #0
 80250e8:	bf00      	nop
 80250ea:	46bd      	mov	sp, r7
 80250ec:	bc80      	pop	{r7}
 80250ee:	4770      	bx	lr

080250f0 <443e8a131efc1d3c180cec49dabd3d3f1c58eeac>:
 80250f0:	b480      	push	{r7}
 80250f2:	af00      	add	r7, sp, #0
 80250f4:	bf00      	nop
 80250f6:	46bd      	mov	sp, r7
 80250f8:	bc80      	pop	{r7}
 80250fa:	4770      	bx	lr

080250fc <cb5093c001ef61253a4d1da1a0188ff7663f0307>:
 80250fc:	b480      	push	{r7}
 80250fe:	af00      	add	r7, sp, #0
 8025100:	bf00      	nop
 8025102:	46bd      	mov	sp, r7
 8025104:	bc80      	pop	{r7}
 8025106:	4770      	bx	lr

08025108 <966a9fb75e08bd6bd3b3054de298215c3cbec82e>:
 8025108:	b580      	push	{r7, lr}
 802510a:	b082      	sub	sp, #8
 802510c:	af00      	add	r7, sp, #0
 802510e:	6078      	str	r0, [r7, #4]
 8025110:	687b      	ldr	r3, [r7, #4]
 8025112:	2270      	movs	r2, #112	; 0x70
 8025114:	705a      	strb	r2, [r3, #1]
 8025116:	687b      	ldr	r3, [r7, #4]
 8025118:	223a      	movs	r2, #58	; 0x3a
 802511a:	741a      	strb	r2, [r3, #16]
 802511c:	6878      	ldr	r0, [r7, #4]
 802511e:	f7fe fcbc 	bl	8023a9a <00af7f89235fe04a2b2b59d942644988487fcbf4>
 8025122:	4603      	mov	r3, r0
 8025124:	4618      	mov	r0, r3
 8025126:	3708      	adds	r7, #8
 8025128:	46bd      	mov	sp, r7
 802512a:	bd80      	pop	{r7, pc}

0802512c <a4e54615be274afd6b4d40b38f5ecc85b5402247>:
 802512c:	b580      	push	{r7, lr}
 802512e:	b084      	sub	sp, #16
 8025130:	af00      	add	r7, sp, #0
 8025132:	6078      	str	r0, [r7, #4]
 8025134:	460b      	mov	r3, r1
 8025136:	70fb      	strb	r3, [r7, #3]
 8025138:	687b      	ldr	r3, [r7, #4]
 802513a:	2270      	movs	r2, #112	; 0x70
 802513c:	705a      	strb	r2, [r3, #1]
 802513e:	687b      	ldr	r3, [r7, #4]
 8025140:	8a5b      	ldrh	r3, [r3, #18]
 8025142:	2b81      	cmp	r3, #129	; 0x81
 8025144:	dc02      	bgt.n	802514c <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x20>
 8025146:	2b80      	cmp	r3, #128	; 0x80
 8025148:	da03      	bge.n	8025152 <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x26>
 802514a:	e00e      	b.n	802516a <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x3e>
 802514c:	2b9b      	cmp	r3, #155	; 0x9b
 802514e:	d006      	beq.n	802515e <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x32>
 8025150:	e00b      	b.n	802516a <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x3e>
 8025152:	78fb      	ldrb	r3, [r7, #3]
 8025154:	4619      	mov	r1, r3
 8025156:	6878      	ldr	r0, [r7, #4]
 8025158:	f000 f886 	bl	8025268 <623bedcd6d024f4b6fd8797e4e7a6121693618c5>
 802515c:	e017      	b.n	802518e <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x62>
 802515e:	78fb      	ldrb	r3, [r7, #3]
 8025160:	4619      	mov	r1, r3
 8025162:	6878      	ldr	r0, [r7, #4]
 8025164:	f000 fb18 	bl	8025798 <c56d874196d9f33fea409aab4115507f6cab3a7f>
 8025168:	e011      	b.n	802518e <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x62>
 802516a:	4a0b      	ldr	r2, [pc, #44]	; (8025198 <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x6c>)
 802516c:	f107 0308 	add.w	r3, r7, #8
 8025170:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025174:	e883 0003 	stmia.w	r3, {r0, r1}
 8025178:	4a08      	ldr	r2, [pc, #32]	; (802519c <a4e54615be274afd6b4d40b38f5ecc85b5402247+0x70>)
 802517a:	f107 0308 	add.w	r3, r7, #8
 802517e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025182:	f7f0 f841 	bl	8015208 <LOGGER_PrintLine>
 8025186:	6878      	ldr	r0, [r7, #4]
 8025188:	f7ea fbe0 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 802518c:	bf00      	nop
 802518e:	bf00      	nop
 8025190:	3710      	adds	r7, #16
 8025192:	46bd      	mov	sp, r7
 8025194:	bd80      	pop	{r7, pc}
 8025196:	bf00      	nop
 8025198:	08030d30 	.word	0x08030d30
 802519c:	08030d10 	.word	0x08030d10

080251a0 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2>:
 80251a0:	b580      	push	{r7, lr}
 80251a2:	b084      	sub	sp, #16
 80251a4:	af00      	add	r7, sp, #0
 80251a6:	6078      	str	r0, [r7, #4]
 80251a8:	687b      	ldr	r3, [r7, #4]
 80251aa:	2270      	movs	r2, #112	; 0x70
 80251ac:	705a      	strb	r2, [r3, #1]
 80251ae:	687b      	ldr	r3, [r7, #4]
 80251b0:	685b      	ldr	r3, [r3, #4]
 80251b2:	781b      	ldrb	r3, [r3, #0]
 80251b4:	461a      	mov	r2, r3
 80251b6:	687b      	ldr	r3, [r7, #4]
 80251b8:	825a      	strh	r2, [r3, #18]
 80251ba:	687b      	ldr	r3, [r7, #4]
 80251bc:	8a5b      	ldrh	r3, [r3, #18]
 80251be:	2b81      	cmp	r3, #129	; 0x81
 80251c0:	dc02      	bgt.n	80251c8 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x28>
 80251c2:	2b80      	cmp	r3, #128	; 0x80
 80251c4:	da03      	bge.n	80251ce <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x2e>
 80251c6:	e00a      	b.n	80251de <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x3e>
 80251c8:	2b9b      	cmp	r3, #155	; 0x9b
 80251ca:	d004      	beq.n	80251d6 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x36>
 80251cc:	e007      	b.n	80251de <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x3e>
 80251ce:	6878      	ldr	r0, [r7, #4]
 80251d0:	f000 f87a 	bl	80252c8 <1d79bc66ce5e0a5814d212e24315240b99f665c4>
 80251d4:	e015      	b.n	8025202 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x62>
 80251d6:	6878      	ldr	r0, [r7, #4]
 80251d8:	f000 fb9c 	bl	8025914 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68>
 80251dc:	e011      	b.n	8025202 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x62>
 80251de:	4a0b      	ldr	r2, [pc, #44]	; (802520c <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x6c>)
 80251e0:	f107 0308 	add.w	r3, r7, #8
 80251e4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80251e8:	e883 0003 	stmia.w	r3, {r0, r1}
 80251ec:	4a08      	ldr	r2, [pc, #32]	; (8025210 <0f2b82323c2b2a010fa19b971d87ff5fc3a714e2+0x70>)
 80251ee:	f107 0308 	add.w	r3, r7, #8
 80251f2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80251f6:	f7f0 f807 	bl	8015208 <LOGGER_PrintLine>
 80251fa:	6878      	ldr	r0, [r7, #4]
 80251fc:	f7ea fba6 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8025200:	bf00      	nop
 8025202:	bf00      	nop
 8025204:	3710      	adds	r7, #16
 8025206:	46bd      	mov	sp, r7
 8025208:	bd80      	pop	{r7, pc}
 802520a:	bf00      	nop
 802520c:	08030d30 	.word	0x08030d30
 8025210:	08030d10 	.word	0x08030d10

08025214 <df2f78a5f231f323fc241372a3a00cee3087c107>:
 8025214:	b480      	push	{r7}
 8025216:	b083      	sub	sp, #12
 8025218:	af00      	add	r7, sp, #0
 802521a:	4b09      	ldr	r3, [pc, #36]	; (8025240 <df2f78a5f231f323fc241372a3a00cee3087c107+0x2c>)
 802521c:	681b      	ldr	r3, [r3, #0]
 802521e:	f203 231a 	addw	r3, r3, #538	; 0x21a
 8025222:	607b      	str	r3, [r7, #4]
 8025224:	687b      	ldr	r3, [r7, #4]
 8025226:	2200      	movs	r2, #0
 8025228:	701a      	strb	r2, [r3, #0]
 802522a:	687b      	ldr	r3, [r7, #4]
 802522c:	2200      	movs	r2, #0
 802522e:	825a      	strh	r2, [r3, #18]
 8025230:	687b      	ldr	r3, [r7, #4]
 8025232:	2201      	movs	r2, #1
 8025234:	751a      	strb	r2, [r3, #20]
 8025236:	bf00      	nop
 8025238:	370c      	adds	r7, #12
 802523a:	46bd      	mov	sp, r7
 802523c:	bc80      	pop	{r7}
 802523e:	4770      	bx	lr
 8025240:	20000040 	.word	0x20000040

08025244 <80b9218102010b739652963fa2fb0c366b6f860e>:
 8025244:	b480      	push	{r7}
 8025246:	b083      	sub	sp, #12
 8025248:	af00      	add	r7, sp, #0
 802524a:	4b06      	ldr	r3, [pc, #24]	; (8025264 <80b9218102010b739652963fa2fb0c366b6f860e+0x20>)
 802524c:	681b      	ldr	r3, [r3, #0]
 802524e:	f203 231a 	addw	r3, r3, #538	; 0x21a
 8025252:	607b      	str	r3, [r7, #4]
 8025254:	687b      	ldr	r3, [r7, #4]
 8025256:	2200      	movs	r2, #0
 8025258:	751a      	strb	r2, [r3, #20]
 802525a:	bf00      	nop
 802525c:	370c      	adds	r7, #12
 802525e:	46bd      	mov	sp, r7
 8025260:	bc80      	pop	{r7}
 8025262:	4770      	bx	lr
 8025264:	20000040 	.word	0x20000040

08025268 <623bedcd6d024f4b6fd8797e4e7a6121693618c5>:
 8025268:	b580      	push	{r7, lr}
 802526a:	b086      	sub	sp, #24
 802526c:	af00      	add	r7, sp, #0
 802526e:	6078      	str	r0, [r7, #4]
 8025270:	460b      	mov	r3, r1
 8025272:	70fb      	strb	r3, [r7, #3]
 8025274:	4b11      	ldr	r3, [pc, #68]	; (80252bc <623bedcd6d024f4b6fd8797e4e7a6121693618c5+0x54>)
 8025276:	681b      	ldr	r3, [r3, #0]
 8025278:	f203 231a 	addw	r3, r3, #538	; 0x21a
 802527c:	617b      	str	r3, [r7, #20]
 802527e:	687b      	ldr	r3, [r7, #4]
 8025280:	2271      	movs	r2, #113	; 0x71
 8025282:	705a      	strb	r2, [r3, #1]
 8025284:	687b      	ldr	r3, [r7, #4]
 8025286:	781b      	ldrb	r3, [r3, #0]
 8025288:	2b71      	cmp	r3, #113	; 0x71
 802528a:	d00d      	beq.n	80252a8 <623bedcd6d024f4b6fd8797e4e7a6121693618c5+0x40>
 802528c:	4a0c      	ldr	r2, [pc, #48]	; (80252c0 <623bedcd6d024f4b6fd8797e4e7a6121693618c5+0x58>)
 802528e:	f107 030c 	add.w	r3, r7, #12
 8025292:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025296:	e883 0003 	stmia.w	r3, {r0, r1}
 802529a:	4a0a      	ldr	r2, [pc, #40]	; (80252c4 <623bedcd6d024f4b6fd8797e4e7a6121693618c5+0x5c>)
 802529c:	f107 030c 	add.w	r3, r7, #12
 80252a0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80252a4:	f7ef ffb0 	bl	8015208 <LOGGER_PrintLine>
 80252a8:	6878      	ldr	r0, [r7, #4]
 80252aa:	f7ea fb4f 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80252ae:	697b      	ldr	r3, [r7, #20]
 80252b0:	2200      	movs	r2, #0
 80252b2:	701a      	strb	r2, [r3, #0]
 80252b4:	bf00      	nop
 80252b6:	3718      	adds	r7, #24
 80252b8:	46bd      	mov	sp, r7
 80252ba:	bd80      	pop	{r7, pc}
 80252bc:	20000040 	.word	0x20000040
 80252c0:	08030d6c 	.word	0x08030d6c
 80252c4:	08030d74 	.word	0x08030d74

080252c8 <1d79bc66ce5e0a5814d212e24315240b99f665c4>:
 80252c8:	b5b0      	push	{r4, r5, r7, lr}
 80252ca:	b090      	sub	sp, #64	; 0x40
 80252cc:	af00      	add	r7, sp, #0
 80252ce:	6078      	str	r0, [r7, #4]
 80252d0:	4b56      	ldr	r3, [pc, #344]	; (802542c <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x164>)
 80252d2:	681b      	ldr	r3, [r3, #0]
 80252d4:	f203 231a 	addw	r3, r3, #538	; 0x21a
 80252d8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80252da:	687b      	ldr	r3, [r7, #4]
 80252dc:	2271      	movs	r2, #113	; 0x71
 80252de:	705a      	strb	r2, [r3, #1]
 80252e0:	687b      	ldr	r3, [r7, #4]
 80252e2:	8a5b      	ldrh	r3, [r3, #18]
 80252e4:	2b80      	cmp	r3, #128	; 0x80
 80252e6:	d003      	beq.n	80252f0 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x28>
 80252e8:	2b81      	cmp	r3, #129	; 0x81
 80252ea:	f000 8091 	beq.w	8025410 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x148>
 80252ee:	e07f      	b.n	80253f0 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x128>
 80252f0:	4a4f      	ldr	r2, [pc, #316]	; (8025430 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x168>)
 80252f2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80252f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80252fa:	e883 0003 	stmia.w	r3, {r0, r1}
 80252fe:	4a4d      	ldr	r2, [pc, #308]	; (8025434 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x16c>)
 8025300:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8025304:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025308:	f7ef ff7e 	bl	8015208 <LOGGER_PrintLine>
 802530c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 802530e:	7d1b      	ldrb	r3, [r3, #20]
 8025310:	f083 0301 	eor.w	r3, r3, #1
 8025314:	b2db      	uxtb	r3, r3
 8025316:	2b00      	cmp	r3, #0
 8025318:	d17c      	bne.n	8025414 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x14c>
 802531a:	687b      	ldr	r3, [r7, #4]
 802531c:	331d      	adds	r3, #29
 802531e:	4618      	mov	r0, r3
 8025320:	f7e9 fefe 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 8025324:	4603      	mov	r3, r0
 8025326:	2b00      	cmp	r3, #0
 8025328:	d176      	bne.n	8025418 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x150>
 802532a:	2071      	movs	r0, #113	; 0x71
 802532c:	f7ea fa02 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8025330:	63b8      	str	r0, [r7, #56]	; 0x38
 8025332:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8025334:	2b00      	cmp	r3, #0
 8025336:	d10e      	bne.n	8025356 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x8e>
 8025338:	4a3f      	ldr	r2, [pc, #252]	; (8025438 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x170>)
 802533a:	f107 0314 	add.w	r3, r7, #20
 802533e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025342:	e883 0003 	stmia.w	r3, {r0, r1}
 8025346:	4a3d      	ldr	r2, [pc, #244]	; (802543c <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x174>)
 8025348:	f107 0314 	add.w	r3, r7, #20
 802534c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025350:	f7ef ff5a 	bl	8015208 <LOGGER_PrintLine>
 8025354:	e063      	b.n	802541e <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x156>
 8025356:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8025358:	2271      	movs	r2, #113	; 0x71
 802535a:	701a      	strb	r2, [r3, #0]
 802535c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802535e:	2271      	movs	r2, #113	; 0x71
 8025360:	705a      	strb	r2, [r3, #1]
 8025362:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8025364:	223a      	movs	r2, #58	; 0x3a
 8025366:	741a      	strb	r2, [r3, #16]
 8025368:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802536a:	2281      	movs	r2, #129	; 0x81
 802536c:	825a      	strh	r2, [r3, #18]
 802536e:	687b      	ldr	r3, [r7, #4]
 8025370:	7a1b      	ldrb	r3, [r3, #8]
 8025372:	4619      	mov	r1, r3
 8025374:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8025376:	f004 f88d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802537a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802537c:	685b      	ldr	r3, [r3, #4]
 802537e:	637b      	str	r3, [r7, #52]	; 0x34
 8025380:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8025382:	6858      	ldr	r0, [r3, #4]
 8025384:	687b      	ldr	r3, [r7, #4]
 8025386:	6859      	ldr	r1, [r3, #4]
 8025388:	687b      	ldr	r3, [r7, #4]
 802538a:	7a1b      	ldrb	r3, [r3, #8]
 802538c:	461a      	mov	r2, r3
 802538e:	f005 ff52 	bl	802b236 <memcpy>
 8025392:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8025394:	f103 001d 	add.w	r0, r3, #29
 8025398:	687b      	ldr	r3, [r7, #4]
 802539a:	332e      	adds	r3, #46	; 0x2e
 802539c:	2211      	movs	r2, #17
 802539e:	4619      	mov	r1, r3
 80253a0:	f005 ff49 	bl	802b236 <memcpy>
 80253a4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80253a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80253a8:	3212      	adds	r2, #18
 80253aa:	7812      	ldrb	r2, [r2, #0]
 80253ac:	701a      	strb	r2, [r3, #0]
 80253ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80253b0:	1c9c      	adds	r4, r3, #2
 80253b2:	2005      	movs	r0, #5
 80253b4:	f7e7 fe22 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80253b8:	4603      	mov	r3, r0
 80253ba:	1c5d      	adds	r5, r3, #1
 80253bc:	2002      	movs	r0, #2
 80253be:	f7e7 fe1d 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80253c2:	4603      	mov	r3, r0
 80253c4:	3301      	adds	r3, #1
 80253c6:	462a      	mov	r2, r5
 80253c8:	4621      	mov	r1, r4
 80253ca:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80253cc:	f004 f985 	bl	80296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>
 80253d0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80253d2:	2201      	movs	r2, #1
 80253d4:	701a      	strb	r2, [r3, #0]
 80253d6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80253d8:	f7ff fe96 	bl	8025108 <966a9fb75e08bd6bd3b3054de298215c3cbec82e>
 80253dc:	4603      	mov	r3, r0
 80253de:	f083 0301 	eor.w	r3, r3, #1
 80253e2:	b2db      	uxtb	r3, r3
 80253e4:	2b00      	cmp	r3, #0
 80253e6:	d019      	beq.n	802541c <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x154>
 80253e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80253ea:	2200      	movs	r2, #0
 80253ec:	701a      	strb	r2, [r3, #0]
 80253ee:	e015      	b.n	802541c <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x154>
 80253f0:	4a11      	ldr	r2, [pc, #68]	; (8025438 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x170>)
 80253f2:	f107 030c 	add.w	r3, r7, #12
 80253f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80253fa:	e883 0003 	stmia.w	r3, {r0, r1}
 80253fe:	687b      	ldr	r3, [r7, #4]
 8025400:	8a5b      	ldrh	r3, [r3, #18]
 8025402:	4a0f      	ldr	r2, [pc, #60]	; (8025440 <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x178>)
 8025404:	f107 010c 	add.w	r1, r7, #12
 8025408:	c903      	ldmia	r1, {r0, r1}
 802540a:	f7ef fefd 	bl	8015208 <LOGGER_PrintLine>
 802540e:	e006      	b.n	802541e <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x156>
 8025410:	bf00      	nop
 8025412:	e004      	b.n	802541e <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x156>
 8025414:	bf00      	nop
 8025416:	e002      	b.n	802541e <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x156>
 8025418:	bf00      	nop
 802541a:	e000      	b.n	802541e <1d79bc66ce5e0a5814d212e24315240b99f665c4+0x156>
 802541c:	bf00      	nop
 802541e:	6878      	ldr	r0, [r7, #4]
 8025420:	f7ea fa94 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8025424:	bf00      	nop
 8025426:	3740      	adds	r7, #64	; 0x40
 8025428:	46bd      	mov	sp, r7
 802542a:	bdb0      	pop	{r4, r5, r7, pc}
 802542c:	20000040 	.word	0x20000040
 8025430:	08030ddc 	.word	0x08030ddc
 8025434:	08030d8c 	.word	0x08030d8c
 8025438:	08030d6c 	.word	0x08030d6c
 802543c:	08030d48 	.word	0x08030d48
 8025440:	08030da4 	.word	0x08030da4

08025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8025444:	b480      	push	{r7}
 8025446:	b089      	sub	sp, #36	; 0x24
 8025448:	af00      	add	r7, sp, #0
 802544a:	60f8      	str	r0, [r7, #12]
 802544c:	60b9      	str	r1, [r7, #8]
 802544e:	607a      	str	r2, [r7, #4]
 8025450:	68fb      	ldr	r3, [r7, #12]
 8025452:	61fb      	str	r3, [r7, #28]
 8025454:	68bb      	ldr	r3, [r7, #8]
 8025456:	61bb      	str	r3, [r7, #24]
 8025458:	687b      	ldr	r3, [r7, #4]
 802545a:	617b      	str	r3, [r7, #20]
 802545c:	2300      	movs	r3, #0
 802545e:	613b      	str	r3, [r7, #16]
 8025460:	e00d      	b.n	802547e <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8025462:	69ba      	ldr	r2, [r7, #24]
 8025464:	693b      	ldr	r3, [r7, #16]
 8025466:	441a      	add	r2, r3
 8025468:	6979      	ldr	r1, [r7, #20]
 802546a:	693b      	ldr	r3, [r7, #16]
 802546c:	1acb      	subs	r3, r1, r3
 802546e:	3b01      	subs	r3, #1
 8025470:	69f9      	ldr	r1, [r7, #28]
 8025472:	440b      	add	r3, r1
 8025474:	7812      	ldrb	r2, [r2, #0]
 8025476:	701a      	strb	r2, [r3, #0]
 8025478:	693b      	ldr	r3, [r7, #16]
 802547a:	3301      	adds	r3, #1
 802547c:	613b      	str	r3, [r7, #16]
 802547e:	697a      	ldr	r2, [r7, #20]
 8025480:	693b      	ldr	r3, [r7, #16]
 8025482:	429a      	cmp	r2, r3
 8025484:	d8ed      	bhi.n	8025462 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8025486:	bf00      	nop
 8025488:	bf00      	nop
 802548a:	3724      	adds	r7, #36	; 0x24
 802548c:	46bd      	mov	sp, r7
 802548e:	bc80      	pop	{r7}
 8025490:	4770      	bx	lr
	...

08025494 <cb684a375f86ba40b2b36632ce4bd2a58554e76c>:
 8025494:	b5b0      	push	{r4, r5, r7, lr}
 8025496:	b082      	sub	sp, #8
 8025498:	af00      	add	r7, sp, #0
 802549a:	4b71      	ldr	r3, [pc, #452]	; (8025660 <cb684a375f86ba40b2b36632ce4bd2a58554e76c+0x1cc>)
 802549c:	681b      	ldr	r3, [r3, #0]
 802549e:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80254a2:	607b      	str	r3, [r7, #4]
 80254a4:	2001      	movs	r0, #1
 80254a6:	f7ec f9bd 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 80254aa:	4603      	mov	r3, r0
 80254ac:	461a      	mov	r2, r3
 80254ae:	687b      	ldr	r3, [r7, #4]
 80254b0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80254b4:	687b      	ldr	r3, [r7, #4]
 80254b6:	2200      	movs	r2, #0
 80254b8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80254bc:	687b      	ldr	r3, [r7, #4]
 80254be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80254c2:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e
 80254c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80254ca:	f002 f9cb 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 80254ce:	f001 f85d 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 80254d2:	f001 fa3d 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 80254d6:	687b      	ldr	r3, [r7, #4]
 80254d8:	2200      	movs	r2, #0
 80254da:	701a      	strb	r2, [r3, #0]
 80254dc:	687b      	ldr	r3, [r7, #4]
 80254de:	2200      	movs	r2, #0
 80254e0:	705a      	strb	r2, [r3, #1]
 80254e2:	687b      	ldr	r3, [r7, #4]
 80254e4:	2288      	movs	r2, #136	; 0x88
 80254e6:	711a      	strb	r2, [r3, #4]
 80254e8:	687b      	ldr	r3, [r7, #4]
 80254ea:	2233      	movs	r2, #51	; 0x33
 80254ec:	715a      	strb	r2, [r3, #5]
 80254ee:	687b      	ldr	r3, [r7, #4]
 80254f0:	2200      	movs	r2, #0
 80254f2:	719a      	strb	r2, [r3, #6]
 80254f4:	687b      	ldr	r3, [r7, #4]
 80254f6:	2200      	movs	r2, #0
 80254f8:	71da      	strb	r2, [r3, #7]
 80254fa:	687b      	ldr	r3, [r7, #4]
 80254fc:	3308      	adds	r3, #8
 80254fe:	2210      	movs	r2, #16
 8025500:	2100      	movs	r1, #0
 8025502:	4618      	mov	r0, r3
 8025504:	f005 fdf8 	bl	802b0f8 <memset>
 8025508:	687b      	ldr	r3, [r7, #4]
 802550a:	2203      	movs	r2, #3
 802550c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8025510:	687b      	ldr	r3, [r7, #4]
 8025512:	3349      	adds	r3, #73	; 0x49
 8025514:	4a53      	ldr	r2, [pc, #332]	; (8025664 <cb684a375f86ba40b2b36632ce4bd2a58554e76c+0x1d0>)
 8025516:	461c      	mov	r4, r3
 8025518:	4615      	mov	r5, r2
 802551a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802551c:	6020      	str	r0, [r4, #0]
 802551e:	6061      	str	r1, [r4, #4]
 8025520:	60a2      	str	r2, [r4, #8]
 8025522:	60e3      	str	r3, [r4, #12]
 8025524:	2001      	movs	r0, #1
 8025526:	f7ec f97d 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 802552a:	4603      	mov	r3, r0
 802552c:	461a      	mov	r2, r3
 802552e:	687b      	ldr	r3, [r7, #4]
 8025530:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
 8025534:	687b      	ldr	r3, [r7, #4]
 8025536:	2208      	movs	r2, #8
 8025538:	761a      	strb	r2, [r3, #24]
 802553a:	687b      	ldr	r3, [r7, #4]
 802553c:	221e      	movs	r2, #30
 802553e:	765a      	strb	r2, [r3, #25]
 8025540:	687b      	ldr	r3, [r7, #4]
 8025542:	2240      	movs	r2, #64	; 0x40
 8025544:	769a      	strb	r2, [r3, #26]
 8025546:	687b      	ldr	r3, [r7, #4]
 8025548:	2260      	movs	r2, #96	; 0x60
 802554a:	76da      	strb	r2, [r3, #27]
 802554c:	687b      	ldr	r3, [r7, #4]
 802554e:	f04f 32ff 	mov.w	r2, #4294967295
 8025552:	621a      	str	r2, [r3, #32]
 8025554:	687b      	ldr	r3, [r7, #4]
 8025556:	f04f 32ff 	mov.w	r2, #4294967295
 802555a:	61da      	str	r2, [r3, #28]
 802555c:	687b      	ldr	r3, [r7, #4]
 802555e:	2204      	movs	r2, #4
 8025560:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8025564:	687b      	ldr	r3, [r7, #4]
 8025566:	220e      	movs	r2, #14
 8025568:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 802556c:	687b      	ldr	r3, [r7, #4]
 802556e:	2200      	movs	r2, #0
 8025570:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8025574:	687b      	ldr	r3, [r7, #4]
 8025576:	2208      	movs	r2, #8
 8025578:	f883 203b 	strb.w	r2, [r3, #59]	; 0x3b
 802557c:	687b      	ldr	r3, [r7, #4]
 802557e:	220c      	movs	r2, #12
 8025580:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8025584:	687b      	ldr	r3, [r7, #4]
 8025586:	2200      	movs	r2, #0
 8025588:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 802558c:	687b      	ldr	r3, [r7, #4]
 802558e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8025592:	87da      	strh	r2, [r3, #62]	; 0x3e
 8025594:	687b      	ldr	r3, [r7, #4]
 8025596:	f44f 7280 	mov.w	r2, #256	; 0x100
 802559a:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 802559e:	687b      	ldr	r3, [r7, #4]
 80255a0:	2200      	movs	r2, #0
 80255a2:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
 80255a6:	687b      	ldr	r3, [r7, #4]
 80255a8:	2200      	movs	r2, #0
 80255aa:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80255ae:	687b      	ldr	r3, [r7, #4]
 80255b0:	22ff      	movs	r2, #255	; 0xff
 80255b2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80255b6:	687b      	ldr	r3, [r7, #4]
 80255b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80255bc:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
 80255c0:	687b      	ldr	r3, [r7, #4]
 80255c2:	2200      	movs	r2, #0
 80255c4:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
 80255c8:	687b      	ldr	r3, [r7, #4]
 80255ca:	22c0      	movs	r2, #192	; 0xc0
 80255cc:	f883 2062 	strb.w	r2, [r3, #98]	; 0x62
 80255d0:	687b      	ldr	r3, [r7, #4]
 80255d2:	2200      	movs	r2, #0
 80255d4:	f883 2063 	strb.w	r2, [r3, #99]	; 0x63
 80255d8:	687b      	ldr	r3, [r7, #4]
 80255da:	2200      	movs	r2, #0
 80255dc:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 80255e0:	687b      	ldr	r3, [r7, #4]
 80255e2:	3365      	adds	r3, #101	; 0x65
 80255e4:	2210      	movs	r2, #16
 80255e6:	2100      	movs	r1, #0
 80255e8:	4618      	mov	r0, r3
 80255ea:	f005 fd85 	bl	802b0f8 <memset>
 80255ee:	687b      	ldr	r3, [r7, #4]
 80255f0:	2206      	movs	r2, #6
 80255f2:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 80255f6:	687b      	ldr	r3, [r7, #4]
 80255f8:	2200      	movs	r2, #0
 80255fa:	f883 2077 	strb.w	r2, [r3, #119]	; 0x77
 80255fe:	687b      	ldr	r3, [r7, #4]
 8025600:	2240      	movs	r2, #64	; 0x40
 8025602:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8025606:	687b      	ldr	r3, [r7, #4]
 8025608:	2200      	movs	r2, #0
 802560a:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
 802560e:	687b      	ldr	r3, [r7, #4]
 8025610:	22aa      	movs	r2, #170	; 0xaa
 8025612:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 8025616:	687b      	ldr	r3, [r7, #4]
 8025618:	2205      	movs	r2, #5
 802561a:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
 802561e:	687b      	ldr	r3, [r7, #4]
 8025620:	2200      	movs	r2, #0
 8025622:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8025626:	687b      	ldr	r3, [r7, #4]
 8025628:	2200      	movs	r2, #0
 802562a:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
 802562e:	687b      	ldr	r3, [r7, #4]
 8025630:	2200      	movs	r2, #0
 8025632:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
 8025636:	2001      	movs	r0, #1
 8025638:	f7ec f8f4 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 802563c:	4603      	mov	r3, r0
 802563e:	461a      	mov	r2, r3
 8025640:	687b      	ldr	r3, [r7, #4]
 8025642:	f883 208c 	strb.w	r2, [r3, #140]	; 0x8c
 8025646:	2001      	movs	r0, #1
 8025648:	f7ec f8ec 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 802564c:	4603      	mov	r3, r0
 802564e:	461a      	mov	r2, r3
 8025650:	687b      	ldr	r3, [r7, #4]
 8025652:	f883 2095 	strb.w	r2, [r3, #149]	; 0x95
 8025656:	bf00      	nop
 8025658:	3708      	adds	r7, #8
 802565a:	46bd      	mov	sp, r7
 802565c:	bdb0      	pop	{r4, r5, r7, pc}
 802565e:	bf00      	nop
 8025660:	20000040 	.word	0x20000040
 8025664:	08031ab0 	.word	0x08031ab0

08025668 <a60e70bd13e8775612e7fe5ae94a36c965317289>:
 8025668:	b580      	push	{r7, lr}
 802566a:	b084      	sub	sp, #16
 802566c:	af02      	add	r7, sp, #8
 802566e:	4b0c      	ldr	r3, [pc, #48]	; (80256a0 <a60e70bd13e8775612e7fe5ae94a36c965317289+0x38>)
 8025670:	681b      	ldr	r3, [r3, #0]
 8025672:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025676:	607b      	str	r3, [r7, #4]
 8025678:	687b      	ldr	r3, [r7, #4]
 802567a:	f893 0060 	ldrb.w	r0, [r3, #96]	; 0x60
 802567e:	4b09      	ldr	r3, [pc, #36]	; (80256a4 <a60e70bd13e8775612e7fe5ae94a36c965317289+0x3c>)
 8025680:	691a      	ldr	r2, [r3, #16]
 8025682:	4613      	mov	r3, r2
 8025684:	005b      	lsls	r3, r3, #1
 8025686:	4413      	add	r3, r2
 8025688:	009b      	lsls	r3, r3, #2
 802568a:	441a      	add	r2, r3
 802568c:	687b      	ldr	r3, [r7, #4]
 802568e:	9300      	str	r3, [sp, #0]
 8025690:	4b05      	ldr	r3, [pc, #20]	; (80256a8 <a60e70bd13e8775612e7fe5ae94a36c965317289+0x40>)
 8025692:	2100      	movs	r1, #0
 8025694:	f7ec f910 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8025698:	bf00      	nop
 802569a:	3708      	adds	r7, #8
 802569c:	46bd      	mov	sp, r7
 802569e:	bd80      	pop	{r7, pc}
 80256a0:	20000040 	.word	0x20000040
 80256a4:	080318ac 	.word	0x080318ac
 80256a8:	08026ee1 	.word	0x08026ee1

080256ac <14e0e80443fa04d4f8b6b44eccb243ea385eea36>:
 80256ac:	b580      	push	{r7, lr}
 80256ae:	b082      	sub	sp, #8
 80256b0:	af00      	add	r7, sp, #0
 80256b2:	4b07      	ldr	r3, [pc, #28]	; (80256d0 <14e0e80443fa04d4f8b6b44eccb243ea385eea36+0x24>)
 80256b4:	681b      	ldr	r3, [r3, #0]
 80256b6:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80256ba:	607b      	str	r3, [r7, #4]
 80256bc:	687b      	ldr	r3, [r7, #4]
 80256be:	f893 3060 	ldrb.w	r3, [r3, #96]	; 0x60
 80256c2:	4618      	mov	r0, r3
 80256c4:	f7ec f9fe 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 80256c8:	bf00      	nop
 80256ca:	3708      	adds	r7, #8
 80256cc:	46bd      	mov	sp, r7
 80256ce:	bd80      	pop	{r7, pc}
 80256d0:	20000040 	.word	0x20000040

080256d4 <f5d01873bc96944b472aa031c0b65a87221c5869>:
 80256d4:	b590      	push	{r4, r7, lr}
 80256d6:	b085      	sub	sp, #20
 80256d8:	af00      	add	r7, sp, #0
 80256da:	6078      	str	r0, [r7, #4]
 80256dc:	4b18      	ldr	r3, [pc, #96]	; (8025740 <f5d01873bc96944b472aa031c0b65a87221c5869+0x6c>)
 80256de:	681b      	ldr	r3, [r3, #0]
 80256e0:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80256e4:	60fb      	str	r3, [r7, #12]
 80256e6:	6878      	ldr	r0, [r7, #4]
 80256e8:	f000 fa98 	bl	8025c1c <515d4494213ab78813ec2d283c3e06e54664cad2>
 80256ec:	68fb      	ldr	r3, [r7, #12]
 80256ee:	f103 0428 	add.w	r4, r3, #40	; 0x28
 80256f2:	2005      	movs	r0, #5
 80256f4:	f7e7 fc82 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80256f8:	4603      	mov	r3, r0
 80256fa:	3301      	adds	r3, #1
 80256fc:	2208      	movs	r2, #8
 80256fe:	4619      	mov	r1, r3
 8025700:	4620      	mov	r0, r4
 8025702:	f005 fd98 	bl	802b236 <memcpy>
 8025706:	68fb      	ldr	r3, [r7, #12]
 8025708:	f103 0430 	add.w	r4, r3, #48	; 0x30
 802570c:	2002      	movs	r0, #2
 802570e:	f7e7 fc75 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8025712:	4603      	mov	r3, r0
 8025714:	3301      	adds	r3, #1
 8025716:	2208      	movs	r2, #8
 8025718:	4619      	mov	r1, r3
 802571a:	4620      	mov	r0, r4
 802571c:	f005 fd8b 	bl	802b236 <memcpy>
 8025720:	68fb      	ldr	r3, [r7, #12]
 8025722:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8025726:	4618      	mov	r0, r3
 8025728:	f7ec f9cc 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 802572c:	f002 fb68 	bl	8027e00 <0a971023c987bf5f21422714f0ff94b4a7c15529>
 8025730:	4603      	mov	r3, r0
 8025732:	4618      	mov	r0, r3
 8025734:	f002 f896 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025738:	bf00      	nop
 802573a:	3714      	adds	r7, #20
 802573c:	46bd      	mov	sp, r7
 802573e:	bd90      	pop	{r4, r7, pc}
 8025740:	20000040 	.word	0x20000040

08025744 <bc7077241f0f6c26eafbf9350b96f546688ad609>:
 8025744:	b480      	push	{r7}
 8025746:	af00      	add	r7, sp, #0
 8025748:	4b03      	ldr	r3, [pc, #12]	; (8025758 <bc7077241f0f6c26eafbf9350b96f546688ad609+0x14>)
 802574a:	681b      	ldr	r3, [r3, #0]
 802574c:	f893 3291 	ldrb.w	r3, [r3, #657]	; 0x291
 8025750:	4618      	mov	r0, r3
 8025752:	46bd      	mov	sp, r7
 8025754:	bc80      	pop	{r7}
 8025756:	4770      	bx	lr
 8025758:	20000040 	.word	0x20000040

0802575c <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0>:
 802575c:	b580      	push	{r7, lr}
 802575e:	b084      	sub	sp, #16
 8025760:	af00      	add	r7, sp, #0
 8025762:	6078      	str	r0, [r7, #4]
 8025764:	4b0b      	ldr	r3, [pc, #44]	; (8025794 <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0+0x38>)
 8025766:	681b      	ldr	r3, [r3, #0]
 8025768:	f503 730c 	add.w	r3, r3, #560	; 0x230
 802576c:	60fb      	str	r3, [r7, #12]
 802576e:	68fb      	ldr	r3, [r7, #12]
 8025770:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8025774:	2b00      	cmp	r3, #0
 8025776:	d008      	beq.n	802578a <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0+0x2e>
 8025778:	68fb      	ldr	r3, [r7, #12]
 802577a:	3365      	adds	r3, #101	; 0x65
 802577c:	2210      	movs	r2, #16
 802577e:	4619      	mov	r1, r3
 8025780:	6878      	ldr	r0, [r7, #4]
 8025782:	f005 fd58 	bl	802b236 <memcpy>
 8025786:	2301      	movs	r3, #1
 8025788:	e000      	b.n	802578c <b748bf3c91f2eb5a7566fa1180a59e6ff18326d0+0x30>
 802578a:	2300      	movs	r3, #0
 802578c:	4618      	mov	r0, r3
 802578e:	3710      	adds	r7, #16
 8025790:	46bd      	mov	sp, r7
 8025792:	bd80      	pop	{r7, pc}
 8025794:	20000040 	.word	0x20000040

08025798 <c56d874196d9f33fea409aab4115507f6cab3a7f>:
 8025798:	b580      	push	{r7, lr}
 802579a:	b098      	sub	sp, #96	; 0x60
 802579c:	af02      	add	r7, sp, #8
 802579e:	6078      	str	r0, [r7, #4]
 80257a0:	460b      	mov	r3, r1
 80257a2:	70fb      	strb	r3, [r7, #3]
 80257a4:	4b51      	ldr	r3, [pc, #324]	; (80258ec <c56d874196d9f33fea409aab4115507f6cab3a7f+0x154>)
 80257a6:	681b      	ldr	r3, [r3, #0]
 80257a8:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80257ac:	657b      	str	r3, [r7, #84]	; 0x54
 80257ae:	687b      	ldr	r3, [r7, #4]
 80257b0:	2273      	movs	r2, #115	; 0x73
 80257b2:	705a      	strb	r2, [r3, #1]
 80257b4:	687b      	ldr	r3, [r7, #4]
 80257b6:	781b      	ldrb	r3, [r3, #0]
 80257b8:	2b73      	cmp	r3, #115	; 0x73
 80257ba:	d00d      	beq.n	80257d8 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x40>
 80257bc:	4a4c      	ldr	r2, [pc, #304]	; (80258f0 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x158>)
 80257be:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80257c2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80257c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80257ca:	4a4a      	ldr	r2, [pc, #296]	; (80258f4 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x15c>)
 80257cc:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80257d0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80257d4:	f7ef fd18 	bl	8015208 <LOGGER_PrintLine>
 80257d8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80257da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80257dc:	687a      	ldr	r2, [r7, #4]
 80257de:	429a      	cmp	r2, r3
 80257e0:	d103      	bne.n	80257ea <c56d874196d9f33fea409aab4115507f6cab3a7f+0x52>
 80257e2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80257e4:	2200      	movs	r2, #0
 80257e6:	65da      	str	r2, [r3, #92]	; 0x5c
 80257e8:	e079      	b.n	80258de <c56d874196d9f33fea409aab4115507f6cab3a7f+0x146>
 80257ea:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80257ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80257f0:	687a      	ldr	r2, [r7, #4]
 80257f2:	429a      	cmp	r2, r3
 80257f4:	d124      	bne.n	8025840 <c56d874196d9f33fea409aab4115507f6cab3a7f+0xa8>
 80257f6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80257f8:	2200      	movs	r2, #0
 80257fa:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80257fe:	78fb      	ldrb	r3, [r7, #3]
 8025800:	2b00      	cmp	r3, #0
 8025802:	d00e      	beq.n	8025822 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x8a>
 8025804:	4a3c      	ldr	r2, [pc, #240]	; (80258f8 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x160>)
 8025806:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 802580a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802580e:	e883 0003 	stmia.w	r3, {r0, r1}
 8025812:	4a3a      	ldr	r2, [pc, #232]	; (80258fc <c56d874196d9f33fea409aab4115507f6cab3a7f+0x164>)
 8025814:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8025818:	e893 0003 	ldmia.w	r3, {r0, r1}
 802581c:	f7ef fcf4 	bl	8015208 <LOGGER_PrintLine>
 8025820:	e05d      	b.n	80258de <c56d874196d9f33fea409aab4115507f6cab3a7f+0x146>
 8025822:	4a33      	ldr	r2, [pc, #204]	; (80258f0 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x158>)
 8025824:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8025828:	e892 0003 	ldmia.w	r2, {r0, r1}
 802582c:	e883 0003 	stmia.w	r3, {r0, r1}
 8025830:	4a33      	ldr	r2, [pc, #204]	; (8025900 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x168>)
 8025832:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8025836:	e893 0003 	ldmia.w	r3, {r0, r1}
 802583a:	f7ef fce5 	bl	8015208 <LOGGER_PrintLine>
 802583e:	e04e      	b.n	80258de <c56d874196d9f33fea409aab4115507f6cab3a7f+0x146>
 8025840:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8025842:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8025846:	687a      	ldr	r2, [r7, #4]
 8025848:	429a      	cmp	r2, r3
 802584a:	d13a      	bne.n	80258c2 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x12a>
 802584c:	2300      	movs	r3, #0
 802584e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8025850:	2300      	movs	r3, #0
 8025852:	633b      	str	r3, [r7, #48]	; 0x30
 8025854:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8025858:	4619      	mov	r1, r3
 802585a:	2000      	movs	r0, #0
 802585c:	f7e8 fc88 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8025860:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 8025864:	f107 0320 	add.w	r3, r7, #32
 8025868:	2208      	movs	r2, #8
 802586a:	4618      	mov	r0, r3
 802586c:	f7ff fdea 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8025870:	78fb      	ldrb	r3, [r7, #3]
 8025872:	2b00      	cmp	r3, #0
 8025874:	d012      	beq.n	802589c <c56d874196d9f33fea409aab4115507f6cab3a7f+0x104>
 8025876:	4a20      	ldr	r2, [pc, #128]	; (80258f8 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x160>)
 8025878:	f107 0318 	add.w	r3, r7, #24
 802587c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025880:	e883 0003 	stmia.w	r3, {r0, r1}
 8025884:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8025888:	e9cd 2300 	strd	r2, r3, [sp]
 802588c:	4a1d      	ldr	r2, [pc, #116]	; (8025904 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x16c>)
 802588e:	f107 0318 	add.w	r3, r7, #24
 8025892:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025896:	f7ef fcb7 	bl	8015208 <LOGGER_PrintLine>
 802589a:	e020      	b.n	80258de <c56d874196d9f33fea409aab4115507f6cab3a7f+0x146>
 802589c:	4a1a      	ldr	r2, [pc, #104]	; (8025908 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x170>)
 802589e:	f107 0310 	add.w	r3, r7, #16
 80258a2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80258a6:	e883 0003 	stmia.w	r3, {r0, r1}
 80258aa:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80258ae:	e9cd 2300 	strd	r2, r3, [sp]
 80258b2:	4a16      	ldr	r2, [pc, #88]	; (802590c <c56d874196d9f33fea409aab4115507f6cab3a7f+0x174>)
 80258b4:	f107 0310 	add.w	r3, r7, #16
 80258b8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80258bc:	f7ef fca4 	bl	8015208 <LOGGER_PrintLine>
 80258c0:	e00d      	b.n	80258de <c56d874196d9f33fea409aab4115507f6cab3a7f+0x146>
 80258c2:	4a0d      	ldr	r2, [pc, #52]	; (80258f8 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x160>)
 80258c4:	f107 0308 	add.w	r3, r7, #8
 80258c8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80258cc:	e883 0003 	stmia.w	r3, {r0, r1}
 80258d0:	4a0f      	ldr	r2, [pc, #60]	; (8025910 <c56d874196d9f33fea409aab4115507f6cab3a7f+0x178>)
 80258d2:	f107 0308 	add.w	r3, r7, #8
 80258d6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80258da:	f7ef fc95 	bl	8015208 <LOGGER_PrintLine>
 80258de:	6878      	ldr	r0, [r7, #4]
 80258e0:	f7ea f834 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80258e4:	bf00      	nop
 80258e6:	3758      	adds	r7, #88	; 0x58
 80258e8:	46bd      	mov	sp, r7
 80258ea:	bd80      	pop	{r7, pc}
 80258ec:	20000040 	.word	0x20000040
 80258f0:	08030e9c 	.word	0x08030e9c
 80258f4:	08030de4 	.word	0x08030de4
 80258f8:	08030ea4 	.word	0x08030ea4
 80258fc:	08030dfc 	.word	0x08030dfc
 8025900:	08030e18 	.word	0x08030e18
 8025904:	08030e30 	.word	0x08030e30
 8025908:	08030eac 	.word	0x08030eac
 802590c:	08030e58 	.word	0x08030e58
 8025910:	08030e7c 	.word	0x08030e7c

08025914 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68>:
 8025914:	b580      	push	{r7, lr}
 8025916:	b086      	sub	sp, #24
 8025918:	af00      	add	r7, sp, #0
 802591a:	6078      	str	r0, [r7, #4]
 802591c:	4b24      	ldr	r3, [pc, #144]	; (80259b0 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x9c>)
 802591e:	681b      	ldr	r3, [r3, #0]
 8025920:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025924:	617b      	str	r3, [r7, #20]
 8025926:	687b      	ldr	r3, [r7, #4]
 8025928:	2273      	movs	r2, #115	; 0x73
 802592a:	705a      	strb	r2, [r3, #1]
 802592c:	687b      	ldr	r3, [r7, #4]
 802592e:	685b      	ldr	r3, [r3, #4]
 8025930:	785b      	ldrb	r3, [r3, #1]
 8025932:	74fb      	strb	r3, [r7, #19]
 8025934:	2104      	movs	r1, #4
 8025936:	6878      	ldr	r0, [r7, #4]
 8025938:	f003 fde4 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 802593c:	7cfb      	ldrb	r3, [r7, #19]
 802593e:	2b03      	cmp	r3, #3
 8025940:	d81f      	bhi.n	8025982 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x6e>
 8025942:	a201      	add	r2, pc, #4	; (adr r2, 8025948 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x34>)
 8025944:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8025948:	08025959 	.word	0x08025959
 802594c:	08025961 	.word	0x08025961
 8025950:	08025973 	.word	0x08025973
 8025954:	0802597b 	.word	0x0802597b
 8025958:	6978      	ldr	r0, [r7, #20]
 802595a:	f000 fcfd 	bl	8026358 <cef630f5a74a35314667ebee3f885b52bc89b138>
 802595e:	e020      	b.n	80259a2 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8e>
 8025960:	f7e7 fb08 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8025964:	4603      	mov	r3, r0
 8025966:	2b00      	cmp	r3, #0
 8025968:	d11a      	bne.n	80259a0 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8c>
 802596a:	6878      	ldr	r0, [r7, #4]
 802596c:	f000 fa6c 	bl	8025e48 <indicateRxDIO>
 8025970:	e017      	b.n	80259a2 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8e>
 8025972:	6878      	ldr	r0, [r7, #4]
 8025974:	f000 fbde 	bl	8026134 <indicateRxDao>
 8025978:	e013      	b.n	80259a2 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8e>
 802597a:	6878      	ldr	r0, [r7, #4]
 802597c:	f000 f970 	bl	8025c60 <indicateRxDaoAck>
 8025980:	e00f      	b.n	80259a2 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8e>
 8025982:	4a0c      	ldr	r2, [pc, #48]	; (80259b4 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0xa0>)
 8025984:	f107 0308 	add.w	r3, r7, #8
 8025988:	e892 0003 	ldmia.w	r2, {r0, r1}
 802598c:	e883 0003 	stmia.w	r3, {r0, r1}
 8025990:	4a09      	ldr	r2, [pc, #36]	; (80259b8 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0xa4>)
 8025992:	f107 0308 	add.w	r3, r7, #8
 8025996:	e893 0003 	ldmia.w	r3, {r0, r1}
 802599a:	f7ef fc35 	bl	8015208 <LOGGER_PrintLine>
 802599e:	e000      	b.n	80259a2 <21f9d235812fd7009c72aa387ad7cecd1ecb2e68+0x8e>
 80259a0:	bf00      	nop
 80259a2:	6878      	ldr	r0, [r7, #4]
 80259a4:	f7e9 ffd2 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80259a8:	bf00      	nop
 80259aa:	3718      	adds	r7, #24
 80259ac:	46bd      	mov	sp, r7
 80259ae:	bd80      	pop	{r7, pc}
 80259b0:	20000040 	.word	0x20000040
 80259b4:	08030e9c 	.word	0x08030e9c
 80259b8:	08030eb4 	.word	0x08030eb4

080259bc <93f4deb1287f872116dccf0c4dae004ac9b29b84>:
 80259bc:	b580      	push	{r7, lr}
 80259be:	af00      	add	r7, sp, #0
 80259c0:	f000 f808 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80259c4:	4603      	mov	r3, r0
 80259c6:	4618      	mov	r0, r3
 80259c8:	f002 fa22 	bl	8027e10 <7a609a09e67535970a8503dff96b9de207d8fd88>
 80259cc:	4603      	mov	r3, r0
 80259ce:	4618      	mov	r0, r3
 80259d0:	bd80      	pop	{r7, pc}
	...

080259d4 <eada7656be7f8681f934187ead57a12001632399>:
 80259d4:	b480      	push	{r7}
 80259d6:	b083      	sub	sp, #12
 80259d8:	af00      	add	r7, sp, #0
 80259da:	4b06      	ldr	r3, [pc, #24]	; (80259f4 <eada7656be7f8681f934187ead57a12001632399+0x20>)
 80259dc:	681b      	ldr	r3, [r3, #0]
 80259de:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80259e2:	607b      	str	r3, [r7, #4]
 80259e4:	687b      	ldr	r3, [r7, #4]
 80259e6:	f8b3 309c 	ldrh.w	r3, [r3, #156]	; 0x9c
 80259ea:	4618      	mov	r0, r3
 80259ec:	370c      	adds	r7, #12
 80259ee:	46bd      	mov	sp, r7
 80259f0:	bc80      	pop	{r7}
 80259f2:	4770      	bx	lr
 80259f4:	20000040 	.word	0x20000040

080259f8 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b>:
 80259f8:	b580      	push	{r7, lr}
 80259fa:	b088      	sub	sp, #32
 80259fc:	af00      	add	r7, sp, #0
 80259fe:	4b2f      	ldr	r3, [pc, #188]	; (8025abc <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0xc4>)
 8025a00:	681b      	ldr	r3, [r3, #0]
 8025a02:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025a06:	61fb      	str	r3, [r7, #28]
 8025a08:	f7e7 fab4 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8025a0c:	4603      	mov	r3, r0
 8025a0e:	2b00      	cmp	r3, #0
 8025a10:	d006      	beq.n	8025a20 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0x28>
 8025a12:	f002 f9f5 	bl	8027e00 <0a971023c987bf5f21422714f0ff94b4a7c15529>
 8025a16:	4603      	mov	r3, r0
 8025a18:	4618      	mov	r0, r3
 8025a1a:	f001 ff23 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025a1e:	e003      	b.n	8025a28 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0x30>
 8025a20:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8025a24:	f001 ff1e 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025a28:	2073      	movs	r0, #115	; 0x73
 8025a2a:	f7e9 fff3 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8025a2e:	f000 fdad 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8025a32:	f000 ff8d 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8025a36:	f107 0308 	add.w	r3, r7, #8
 8025a3a:	2200      	movs	r2, #0
 8025a3c:	601a      	str	r2, [r3, #0]
 8025a3e:	605a      	str	r2, [r3, #4]
 8025a40:	609a      	str	r2, [r3, #8]
 8025a42:	60da      	str	r2, [r3, #12]
 8025a44:	741a      	strb	r2, [r3, #16]
 8025a46:	2302      	movs	r3, #2
 8025a48:	723b      	strb	r3, [r7, #8]
 8025a4a:	69fb      	ldr	r3, [r7, #28]
 8025a4c:	f893 307f 	ldrb.w	r3, [r3, #127]	; 0x7f
 8025a50:	2b00      	cmp	r3, #0
 8025a52:	d005      	beq.n	8025a60 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0x68>
 8025a54:	69fb      	ldr	r3, [r7, #28]
 8025a56:	2200      	movs	r2, #0
 8025a58:	f883 207f 	strb.w	r2, [r3, #127]	; 0x7f
 8025a5c:	f002 ffba 	bl	80289d4 <1bd2056f29f59fc1ff168b80d42a49dbb9ec73dc>
 8025a60:	f107 0308 	add.w	r3, r7, #8
 8025a64:	1c5a      	adds	r2, r3, #1
 8025a66:	f107 031b 	add.w	r3, r7, #27
 8025a6a:	4611      	mov	r1, r2
 8025a6c:	4618      	mov	r0, r3
 8025a6e:	f7e8 fb7f 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8025a72:	4603      	mov	r3, r0
 8025a74:	2b00      	cmp	r3, #0
 8025a76:	d018      	beq.n	8025aaa <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0xb2>
 8025a78:	4a11      	ldr	r2, [pc, #68]	; (8025ac0 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0xc8>)
 8025a7a:	463b      	mov	r3, r7
 8025a7c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025a80:	e883 0003 	stmia.w	r3, {r0, r1}
 8025a84:	4a0f      	ldr	r2, [pc, #60]	; (8025ac4 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b+0xcc>)
 8025a86:	463b      	mov	r3, r7
 8025a88:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025a8c:	f7ef fbbc 	bl	8015208 <LOGGER_PrintLine>
 8025a90:	f7e8 fb20 	bl	800e0d4 <a1f453367df5fb7326959ac01438704c8522c5f4>
 8025a94:	7efb      	ldrb	r3, [r7, #27]
 8025a96:	4618      	mov	r0, r3
 8025a98:	f7e8 fe16 	bl	800e6c8 <fe38e6e5657dc5f9f46adbfbc4370c9f738626b5>
 8025a9c:	f107 0308 	add.w	r3, r7, #8
 8025aa0:	461a      	mov	r2, r3
 8025aa2:	2100      	movs	r1, #0
 8025aa4:	2000      	movs	r0, #0
 8025aa6:	f7f5 fd73 	bl	801b590 <4d4d07b4e30904d5f2361bdbdd317c9b751af65f>
 8025aaa:	69fb      	ldr	r3, [r7, #28]
 8025aac:	2200      	movs	r2, #0
 8025aae:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8025ab2:	bf00      	nop
 8025ab4:	3720      	adds	r7, #32
 8025ab6:	46bd      	mov	sp, r7
 8025ab8:	bd80      	pop	{r7, pc}
 8025aba:	bf00      	nop
 8025abc:	20000040 	.word	0x20000040
 8025ac0:	08030eac 	.word	0x08030eac
 8025ac4:	08030ecc 	.word	0x08030ecc

08025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>:
 8025ac8:	b580      	push	{r7, lr}
 8025aca:	af00      	add	r7, sp, #0
 8025acc:	f7e7 fa52 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8025ad0:	4603      	mov	r3, r0
 8025ad2:	2b00      	cmp	r3, #0
 8025ad4:	d001      	beq.n	8025ada <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2+0x12>
 8025ad6:	2301      	movs	r3, #1
 8025ad8:	e003      	b.n	8025ae2 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2+0x1a>
 8025ada:	4b03      	ldr	r3, [pc, #12]	; (8025ae8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2+0x20>)
 8025adc:	681b      	ldr	r3, [r3, #0]
 8025ade:	f893 32b1 	ldrb.w	r3, [r3, #689]	; 0x2b1
 8025ae2:	4618      	mov	r0, r3
 8025ae4:	bd80      	pop	{r7, pc}
 8025ae6:	bf00      	nop
 8025ae8:	20000040 	.word	0x20000040

08025aec <85bee7284ee25f7a29b50481cf48923ac2abd69d>:
 8025aec:	b580      	push	{r7, lr}
 8025aee:	af00      	add	r7, sp, #0
 8025af0:	f000 fd4c 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8025af4:	f000 ff2c 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8025af8:	f000 fd22 	bl	8026540 <ddcc96d14128f39f258a026a92cbd4c2383286b1>
 8025afc:	f000 fef4 	bl	80268e8 <e1f51aec36766790a9d7657a41d61426b11f2b8a>
 8025b00:	bf00      	nop
 8025b02:	bd80      	pop	{r7, pc}

08025b04 <d02fb859d9a803dd5217bd4aa72d833a1cfd2c1e>:
 8025b04:	b580      	push	{r7, lr}
 8025b06:	af00      	add	r7, sp, #0
 8025b08:	f7ff ffde 	bl	8025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>
 8025b0c:	4603      	mov	r3, r0
 8025b0e:	2b00      	cmp	r3, #0
 8025b10:	d003      	beq.n	8025b1a <d02fb859d9a803dd5217bd4aa72d833a1cfd2c1e+0x16>
 8025b12:	f000 fd15 	bl	8026540 <ddcc96d14128f39f258a026a92cbd4c2383286b1>
 8025b16:	f000 fee7 	bl	80268e8 <e1f51aec36766790a9d7657a41d61426b11f2b8a>
 8025b1a:	bf00      	nop
 8025b1c:	bd80      	pop	{r7, pc}
	...

08025b20 <5150c16bb7c98e5d77d974241410b468172cd080>:
 8025b20:	b590      	push	{r4, r7, lr}
 8025b22:	b087      	sub	sp, #28
 8025b24:	af00      	add	r7, sp, #0
 8025b26:	4603      	mov	r3, r0
 8025b28:	6039      	str	r1, [r7, #0]
 8025b2a:	71fb      	strb	r3, [r7, #7]
 8025b2c:	4b23      	ldr	r3, [pc, #140]	; (8025bbc <5150c16bb7c98e5d77d974241410b468172cd080+0x9c>)
 8025b2e:	681b      	ldr	r3, [r3, #0]
 8025b30:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025b34:	617b      	str	r3, [r7, #20]
 8025b36:	f7e7 fa1d 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8025b3a:	4603      	mov	r3, r0
 8025b3c:	2b00      	cmp	r3, #0
 8025b3e:	d006      	beq.n	8025b4e <5150c16bb7c98e5d77d974241410b468172cd080+0x2e>
 8025b40:	f002 f95e 	bl	8027e00 <0a971023c987bf5f21422714f0ff94b4a7c15529>
 8025b44:	4603      	mov	r3, r0
 8025b46:	4618      	mov	r0, r3
 8025b48:	f001 fe8c 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025b4c:	e016      	b.n	8025b7c <5150c16bb7c98e5d77d974241410b468172cd080+0x5c>
 8025b4e:	697b      	ldr	r3, [r7, #20]
 8025b50:	f8b3 309e 	ldrh.w	r3, [r3, #158]	; 0x9e
 8025b54:	461c      	mov	r4, r3
 8025b56:	f002 fa2d 	bl	8027fb4 <cbd7b6f62340cadc4c9d6b85c02582c6f55ce23d>
 8025b5a:	4603      	mov	r3, r0
 8025b5c:	4423      	add	r3, r4
 8025b5e:	613b      	str	r3, [r7, #16]
 8025b60:	693b      	ldr	r3, [r7, #16]
 8025b62:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8025b66:	d304      	bcc.n	8025b72 <5150c16bb7c98e5d77d974241410b468172cd080+0x52>
 8025b68:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8025b6c:	f001 fe7a 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025b70:	e004      	b.n	8025b7c <5150c16bb7c98e5d77d974241410b468172cd080+0x5c>
 8025b72:	693b      	ldr	r3, [r7, #16]
 8025b74:	b29b      	uxth	r3, r3
 8025b76:	4618      	mov	r0, r3
 8025b78:	f001 fe74 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 8025b7c:	79fb      	ldrb	r3, [r7, #7]
 8025b7e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8025b82:	4618      	mov	r0, r3
 8025b84:	f7e7 fc46 	bl	800d414 <231ee13350ba09f13191bc6eb894c2ea8bf59b41>
 8025b88:	f7e8 faa4 	bl	800e0d4 <a1f453367df5fb7326959ac01438704c8522c5f4>
 8025b8c:	f000 fcfe 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8025b90:	f000 fede 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8025b94:	2073      	movs	r0, #115	; 0x73
 8025b96:	f7e9 ff3d 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8025b9a:	f107 0308 	add.w	r3, r7, #8
 8025b9e:	2208      	movs	r2, #8
 8025ba0:	6839      	ldr	r1, [r7, #0]
 8025ba2:	4618      	mov	r0, r3
 8025ba4:	f7ff fc4e 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8025ba8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8025bac:	4610      	mov	r0, r2
 8025bae:	4619      	mov	r1, r3
 8025bb0:	f003 f8aa 	bl	8028d08 <92a2aa0d77d83c323d033422c3070d3730d69fc2>
 8025bb4:	bf00      	nop
 8025bb6:	371c      	adds	r7, #28
 8025bb8:	46bd      	mov	sp, r7
 8025bba:	bd90      	pop	{r4, r7, pc}
 8025bbc:	20000040 	.word	0x20000040

08025bc0 <15dfb4a8f71a3c92937ea9475d964fb266f362bf>:
 8025bc0:	b580      	push	{r7, lr}
 8025bc2:	b084      	sub	sp, #16
 8025bc4:	af00      	add	r7, sp, #0
 8025bc6:	4b14      	ldr	r3, [pc, #80]	; (8025c18 <15dfb4a8f71a3c92937ea9475d964fb266f362bf+0x58>)
 8025bc8:	681b      	ldr	r3, [r3, #0]
 8025bca:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025bce:	60fb      	str	r3, [r7, #12]
 8025bd0:	f107 030b 	add.w	r3, r7, #11
 8025bd4:	2100      	movs	r1, #0
 8025bd6:	4618      	mov	r0, r3
 8025bd8:	f7e8 faca 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8025bdc:	4603      	mov	r3, r0
 8025bde:	2b00      	cmp	r3, #0
 8025be0:	d009      	beq.n	8025bf6 <15dfb4a8f71a3c92937ea9475d964fb266f362bf+0x36>
 8025be2:	1d3b      	adds	r3, r7, #4
 8025be4:	4618      	mov	r0, r3
 8025be6:	f7f3 fee7 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 8025bea:	7afb      	ldrb	r3, [r7, #11]
 8025bec:	1d3a      	adds	r2, r7, #4
 8025bee:	4611      	mov	r1, r2
 8025bf0:	4618      	mov	r0, r3
 8025bf2:	f7e7 fe91 	bl	800d918 <027deecf67887395ef5db16208d3312ee727e45e>
 8025bf6:	68fb      	ldr	r3, [r7, #12]
 8025bf8:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8025bfc:	4618      	mov	r0, r3
 8025bfe:	f7eb ff61 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 8025c02:	68fb      	ldr	r3, [r7, #12]
 8025c04:	2201      	movs	r2, #1
 8025c06:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8025c0a:	68f8      	ldr	r0, [r7, #12]
 8025c0c:	f001 f9e8 	bl	8026fe0 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0>
 8025c10:	bf00      	nop
 8025c12:	3710      	adds	r7, #16
 8025c14:	46bd      	mov	sp, r7
 8025c16:	bd80      	pop	{r7, pc}
 8025c18:	20000040 	.word	0x20000040

08025c1c <515d4494213ab78813ec2d283c3e06e54664cad2>:
 8025c1c:	b580      	push	{r7, lr}
 8025c1e:	b084      	sub	sp, #16
 8025c20:	af00      	add	r7, sp, #0
 8025c22:	6078      	str	r0, [r7, #4]
 8025c24:	4b0d      	ldr	r3, [pc, #52]	; (8025c5c <515d4494213ab78813ec2d283c3e06e54664cad2+0x40>)
 8025c26:	681b      	ldr	r3, [r3, #0]
 8025c28:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025c2c:	60fb      	str	r3, [r7, #12]
 8025c2e:	68fb      	ldr	r3, [r7, #12]
 8025c30:	3308      	adds	r3, #8
 8025c32:	2210      	movs	r2, #16
 8025c34:	6879      	ldr	r1, [r7, #4]
 8025c36:	4618      	mov	r0, r3
 8025c38:	f005 fafd 	bl	802b236 <memcpy>
 8025c3c:	68fb      	ldr	r3, [r7, #12]
 8025c3e:	3365      	adds	r3, #101	; 0x65
 8025c40:	2210      	movs	r2, #16
 8025c42:	6879      	ldr	r1, [r7, #4]
 8025c44:	4618      	mov	r0, r3
 8025c46:	f005 faf6 	bl	802b236 <memcpy>
 8025c4a:	68fb      	ldr	r3, [r7, #12]
 8025c4c:	2201      	movs	r2, #1
 8025c4e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8025c52:	bf00      	nop
 8025c54:	3710      	adds	r7, #16
 8025c56:	46bd      	mov	sp, r7
 8025c58:	bd80      	pop	{r7, pc}
 8025c5a:	bf00      	nop
 8025c5c:	20000040 	.word	0x20000040

08025c60 <indicateRxDaoAck>:
 8025c60:	b580      	push	{r7, lr}
 8025c62:	b092      	sub	sp, #72	; 0x48
 8025c64:	af02      	add	r7, sp, #8
 8025c66:	6078      	str	r0, [r7, #4]
 8025c68:	4b6f      	ldr	r3, [pc, #444]	; (8025e28 <indicateRxDaoAck+0x1c8>)
 8025c6a:	681b      	ldr	r3, [r3, #0]
 8025c6c:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025c70:	63fb      	str	r3, [r7, #60]	; 0x3c
 8025c72:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8025c76:	4619      	mov	r1, r3
 8025c78:	2000      	movs	r0, #0
 8025c7a:	f7e8 fa79 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8025c7e:	4603      	mov	r3, r0
 8025c80:	f083 0301 	eor.w	r3, r3, #1
 8025c84:	b2db      	uxtb	r3, r3
 8025c86:	2b00      	cmp	r3, #0
 8025c88:	f040 80ca 	bne.w	8025e20 <indicateRxDaoAck+0x1c0>
 8025c8c:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8025c90:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8025c94:	2208      	movs	r2, #8
 8025c96:	4618      	mov	r0, r3
 8025c98:	f7ff fbd4 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8025c9c:	687b      	ldr	r3, [r7, #4]
 8025c9e:	2273      	movs	r2, #115	; 0x73
 8025ca0:	705a      	strb	r2, [r3, #1]
 8025ca2:	687b      	ldr	r3, [r7, #4]
 8025ca4:	685b      	ldr	r3, [r3, #4]
 8025ca6:	781a      	ldrb	r2, [r3, #0]
 8025ca8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025caa:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
 8025cae:	429a      	cmp	r2, r3
 8025cb0:	d00e      	beq.n	8025cd0 <indicateRxDaoAck+0x70>
 8025cb2:	4a5e      	ldr	r2, [pc, #376]	; (8025e2c <indicateRxDaoAck+0x1cc>)
 8025cb4:	f107 0320 	add.w	r3, r7, #32
 8025cb8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025cbc:	e883 0003 	stmia.w	r3, {r0, r1}
 8025cc0:	4a5b      	ldr	r2, [pc, #364]	; (8025e30 <indicateRxDaoAck+0x1d0>)
 8025cc2:	f107 0320 	add.w	r3, r7, #32
 8025cc6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025cca:	f7ef fa9d 	bl	8015208 <LOGGER_PrintLine>
 8025cce:	e0a8      	b.n	8025e22 <indicateRxDaoAck+0x1c2>
 8025cd0:	687b      	ldr	r3, [r7, #4]
 8025cd2:	685b      	ldr	r3, [r3, #4]
 8025cd4:	1c5a      	adds	r2, r3, #1
 8025cd6:	687b      	ldr	r3, [r7, #4]
 8025cd8:	605a      	str	r2, [r3, #4]
 8025cda:	687b      	ldr	r3, [r7, #4]
 8025cdc:	7a1b      	ldrb	r3, [r3, #8]
 8025cde:	3b01      	subs	r3, #1
 8025ce0:	b2da      	uxtb	r2, r3
 8025ce2:	687b      	ldr	r3, [r7, #4]
 8025ce4:	721a      	strb	r2, [r3, #8]
 8025ce6:	687b      	ldr	r3, [r7, #4]
 8025ce8:	685b      	ldr	r3, [r3, #4]
 8025cea:	1c5a      	adds	r2, r3, #1
 8025cec:	687b      	ldr	r3, [r7, #4]
 8025cee:	605a      	str	r2, [r3, #4]
 8025cf0:	687b      	ldr	r3, [r7, #4]
 8025cf2:	7a1b      	ldrb	r3, [r3, #8]
 8025cf4:	3b01      	subs	r3, #1
 8025cf6:	b2da      	uxtb	r2, r3
 8025cf8:	687b      	ldr	r3, [r7, #4]
 8025cfa:	721a      	strb	r2, [r3, #8]
 8025cfc:	687b      	ldr	r3, [r7, #4]
 8025cfe:	685b      	ldr	r3, [r3, #4]
 8025d00:	781b      	ldrb	r3, [r3, #0]
 8025d02:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8025d06:	687b      	ldr	r3, [r7, #4]
 8025d08:	685b      	ldr	r3, [r3, #4]
 8025d0a:	1c5a      	adds	r2, r3, #1
 8025d0c:	687b      	ldr	r3, [r7, #4]
 8025d0e:	605a      	str	r2, [r3, #4]
 8025d10:	687b      	ldr	r3, [r7, #4]
 8025d12:	7a1b      	ldrb	r3, [r3, #8]
 8025d14:	3b01      	subs	r3, #1
 8025d16:	b2da      	uxtb	r2, r3
 8025d18:	687b      	ldr	r3, [r7, #4]
 8025d1a:	721a      	strb	r2, [r3, #8]
 8025d1c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025d1e:	f893 2064 	ldrb.w	r2, [r3, #100]	; 0x64
 8025d22:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 8025d26:	1ad3      	subs	r3, r2, r3
 8025d28:	b2db      	uxtb	r3, r3
 8025d2a:	2b02      	cmp	r3, #2
 8025d2c:	d90e      	bls.n	8025d4c <indicateRxDaoAck+0xec>
 8025d2e:	4a41      	ldr	r2, [pc, #260]	; (8025e34 <indicateRxDaoAck+0x1d4>)
 8025d30:	f107 0318 	add.w	r3, r7, #24
 8025d34:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025d38:	e883 0003 	stmia.w	r3, {r0, r1}
 8025d3c:	4a3e      	ldr	r2, [pc, #248]	; (8025e38 <indicateRxDaoAck+0x1d8>)
 8025d3e:	f107 0318 	add.w	r3, r7, #24
 8025d42:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025d46:	f7ef fa5f 	bl	8015208 <LOGGER_PrintLine>
 8025d4a:	e06a      	b.n	8025e22 <indicateRxDaoAck+0x1c2>
 8025d4c:	687b      	ldr	r3, [r7, #4]
 8025d4e:	685b      	ldr	r3, [r3, #4]
 8025d50:	781b      	ldrb	r3, [r3, #0]
 8025d52:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
 8025d56:	687b      	ldr	r3, [r7, #4]
 8025d58:	685b      	ldr	r3, [r3, #4]
 8025d5a:	1c5a      	adds	r2, r3, #1
 8025d5c:	687b      	ldr	r3, [r7, #4]
 8025d5e:	605a      	str	r2, [r3, #4]
 8025d60:	687b      	ldr	r3, [r7, #4]
 8025d62:	7a1b      	ldrb	r3, [r3, #8]
 8025d64:	3b01      	subs	r3, #1
 8025d66:	b2da      	uxtb	r2, r3
 8025d68:	687b      	ldr	r3, [r7, #4]
 8025d6a:	721a      	strb	r2, [r3, #8]
 8025d6c:	f897 303a 	ldrb.w	r3, [r7, #58]	; 0x3a
 8025d70:	2b00      	cmp	r3, #0
 8025d72:	d00e      	beq.n	8025d92 <indicateRxDaoAck+0x132>
 8025d74:	4a2f      	ldr	r2, [pc, #188]	; (8025e34 <indicateRxDaoAck+0x1d4>)
 8025d76:	f107 0310 	add.w	r3, r7, #16
 8025d7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025d7e:	e883 0003 	stmia.w	r3, {r0, r1}
 8025d82:	4a2e      	ldr	r2, [pc, #184]	; (8025e3c <indicateRxDaoAck+0x1dc>)
 8025d84:	f107 0310 	add.w	r3, r7, #16
 8025d88:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025d8c:	f7ef fa3c 	bl	8015208 <LOGGER_PrintLine>
 8025d90:	e047      	b.n	8025e22 <indicateRxDaoAck+0x1c2>
 8025d92:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025d94:	f893 3083 	ldrb.w	r3, [r3, #131]	; 0x83
 8025d98:	2b00      	cmp	r3, #0
 8025d9a:	d042      	beq.n	8025e22 <indicateRxDaoAck+0x1c2>
 8025d9c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025d9e:	2200      	movs	r2, #0
 8025da0:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8025da4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025da6:	f893 307f 	ldrb.w	r3, [r3, #127]	; 0x7f
 8025daa:	f083 0301 	eor.w	r3, r3, #1
 8025dae:	b2db      	uxtb	r3, r3
 8025db0:	2b00      	cmp	r3, #0
 8025db2:	d00b      	beq.n	8025dcc <indicateRxDaoAck+0x16c>
 8025db4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025db6:	2201      	movs	r2, #1
 8025db8:	f883 207f 	strb.w	r2, [r3, #127]	; 0x7f
 8025dbc:	f002 fdbe 	bl	802893c <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653>
 8025dc0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8025dc4:	4610      	mov	r0, r2
 8025dc6:	4619      	mov	r1, r3
 8025dc8:	f002 ff62 	bl	8028c90 <b374fd28973c520694c78fab59b4df07772e0870>
 8025dcc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025dce:	2202      	movs	r2, #2
 8025dd0:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8025dd4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025dd6:	f893 3081 	ldrb.w	r3, [r3, #129]	; 0x81
 8025dda:	f083 0301 	eor.w	r3, r3, #1
 8025dde:	b2db      	uxtb	r3, r3
 8025de0:	2b00      	cmp	r3, #0
 8025de2:	d008      	beq.n	8025df6 <indicateRxDaoAck+0x196>
 8025de4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8025de6:	2201      	movs	r2, #1
 8025de8:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8025dec:	2204      	movs	r2, #4
 8025dee:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8025df0:	4813      	ldr	r0, [pc, #76]	; (8025e40 <indicateRxDaoAck+0x1e0>)
 8025df2:	f7ed fb91 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8025df6:	f000 fdd7 	bl	80269a8 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5>
 8025dfa:	4a0c      	ldr	r2, [pc, #48]	; (8025e2c <indicateRxDaoAck+0x1cc>)
 8025dfc:	f107 0308 	add.w	r3, r7, #8
 8025e00:	e892 0003 	ldmia.w	r2, {r0, r1}
 8025e04:	e883 0003 	stmia.w	r3, {r0, r1}
 8025e08:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 8025e0c:	e9cd 2300 	strd	r2, r3, [sp]
 8025e10:	4a0c      	ldr	r2, [pc, #48]	; (8025e44 <indicateRxDaoAck+0x1e4>)
 8025e12:	f107 0308 	add.w	r3, r7, #8
 8025e16:	e893 0003 	ldmia.w	r3, {r0, r1}
 8025e1a:	f7ef f9f5 	bl	8015208 <LOGGER_PrintLine>
 8025e1e:	e000      	b.n	8025e22 <indicateRxDaoAck+0x1c2>
 8025e20:	bf00      	nop
 8025e22:	3740      	adds	r7, #64	; 0x40
 8025e24:	46bd      	mov	sp, r7
 8025e26:	bd80      	pop	{r7, pc}
 8025e28:	20000040 	.word	0x20000040
 8025e2c:	08030ea4 	.word	0x08030ea4
 8025e30:	08030ee8 	.word	0x08030ee8
 8025e34:	08030e9c 	.word	0x08030e9c
 8025e38:	08030f00 	.word	0x08030f00
 8025e3c:	08030f1c 	.word	0x08030f1c
 8025e40:	08026359 	.word	0x08026359
 8025e44:	08030f38 	.word	0x08030f38

08025e48 <indicateRxDIO>:
 8025e48:	b590      	push	{r4, r7, lr}
 8025e4a:	b09f      	sub	sp, #124	; 0x7c
 8025e4c:	af00      	add	r7, sp, #0
 8025e4e:	6078      	str	r0, [r7, #4]
 8025e50:	4ba7      	ldr	r3, [pc, #668]	; (80260f0 <indicateRxDIO+0x2a8>)
 8025e52:	681b      	ldr	r3, [r3, #0]
 8025e54:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8025e58:	66bb      	str	r3, [r7, #104]	; 0x68
 8025e5a:	687b      	ldr	r3, [r7, #4]
 8025e5c:	2251      	movs	r2, #81	; 0x51
 8025e5e:	705a      	strb	r2, [r3, #1]
 8025e60:	6eb8      	ldr	r0, [r7, #104]	; 0x68
 8025e62:	687b      	ldr	r3, [r7, #4]
 8025e64:	685b      	ldr	r3, [r3, #4]
 8025e66:	2218      	movs	r2, #24
 8025e68:	4619      	mov	r1, r3
 8025e6a:	f005 f9e4 	bl	802b236 <memcpy>
 8025e6e:	687b      	ldr	r3, [r7, #4]
 8025e70:	685b      	ldr	r3, [r3, #4]
 8025e72:	3308      	adds	r3, #8
 8025e74:	4618      	mov	r0, r3
 8025e76:	f7ff fed1 	bl	8025c1c <515d4494213ab78813ec2d283c3e06e54664cad2>
 8025e7a:	2300      	movs	r3, #0
 8025e7c:	667b      	str	r3, [r7, #100]	; 0x64
 8025e7e:	2300      	movs	r3, #0
 8025e80:	677b      	str	r3, [r7, #116]	; 0x74
 8025e82:	2300      	movs	r3, #0
 8025e84:	663b      	str	r3, [r7, #96]	; 0x60
 8025e86:	687b      	ldr	r3, [r7, #4]
 8025e88:	685b      	ldr	r3, [r3, #4]
 8025e8a:	667b      	str	r3, [r7, #100]	; 0x64
 8025e8c:	687b      	ldr	r3, [r7, #4]
 8025e8e:	685b      	ldr	r3, [r3, #4]
 8025e90:	3318      	adds	r3, #24
 8025e92:	673b      	str	r3, [r7, #112]	; 0x70
 8025e94:	687b      	ldr	r3, [r7, #4]
 8025e96:	7a1b      	ldrb	r3, [r3, #8]
 8025e98:	3b18      	subs	r3, #24
 8025e9a:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8025e9e:	e0a7      	b.n	8025ff0 <indicateRxDIO+0x1a8>
 8025ea0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025ea2:	781b      	ldrb	r3, [r3, #0]
 8025ea4:	2b04      	cmp	r3, #4
 8025ea6:	d002      	beq.n	8025eae <indicateRxDIO+0x66>
 8025ea8:	2b08      	cmp	r3, #8
 8025eaa:	d05b      	beq.n	8025f64 <indicateRxDIO+0x11c>
 8025eac:	e08e      	b.n	8025fcc <indicateRxDIO+0x184>
 8025eae:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025eb0:	663b      	str	r3, [r7, #96]	; 0x60
 8025eb2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025eb4:	88db      	ldrh	r3, [r3, #6]
 8025eb6:	b29b      	uxth	r3, r3
 8025eb8:	021b      	lsls	r3, r3, #8
 8025eba:	b21a      	sxth	r2, r3
 8025ebc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ebe:	88db      	ldrh	r3, [r3, #6]
 8025ec0:	b29b      	uxth	r3, r3
 8025ec2:	0a1b      	lsrs	r3, r3, #8
 8025ec4:	b29b      	uxth	r3, r3
 8025ec6:	b21b      	sxth	r3, r3
 8025ec8:	4313      	orrs	r3, r2
 8025eca:	b21b      	sxth	r3, r3
 8025ecc:	b29a      	uxth	r2, r3
 8025ece:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ed0:	80da      	strh	r2, [r3, #6]
 8025ed2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ed4:	891b      	ldrh	r3, [r3, #8]
 8025ed6:	b29b      	uxth	r3, r3
 8025ed8:	021b      	lsls	r3, r3, #8
 8025eda:	b21a      	sxth	r2, r3
 8025edc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ede:	891b      	ldrh	r3, [r3, #8]
 8025ee0:	b29b      	uxth	r3, r3
 8025ee2:	0a1b      	lsrs	r3, r3, #8
 8025ee4:	b29b      	uxth	r3, r3
 8025ee6:	b21b      	sxth	r3, r3
 8025ee8:	4313      	orrs	r3, r2
 8025eea:	b21b      	sxth	r3, r3
 8025eec:	b29a      	uxth	r2, r3
 8025eee:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ef0:	811a      	strh	r2, [r3, #8]
 8025ef2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025ef4:	895b      	ldrh	r3, [r3, #10]
 8025ef6:	b29b      	uxth	r3, r3
 8025ef8:	021b      	lsls	r3, r3, #8
 8025efa:	b21a      	sxth	r2, r3
 8025efc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025efe:	895b      	ldrh	r3, [r3, #10]
 8025f00:	b29b      	uxth	r3, r3
 8025f02:	0a1b      	lsrs	r3, r3, #8
 8025f04:	b29b      	uxth	r3, r3
 8025f06:	b21b      	sxth	r3, r3
 8025f08:	4313      	orrs	r3, r2
 8025f0a:	b21b      	sxth	r3, r3
 8025f0c:	b29a      	uxth	r2, r3
 8025f0e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025f10:	815a      	strh	r2, [r3, #10]
 8025f12:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025f14:	89db      	ldrh	r3, [r3, #14]
 8025f16:	b29b      	uxth	r3, r3
 8025f18:	021b      	lsls	r3, r3, #8
 8025f1a:	b21a      	sxth	r2, r3
 8025f1c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025f1e:	89db      	ldrh	r3, [r3, #14]
 8025f20:	b29b      	uxth	r3, r3
 8025f22:	0a1b      	lsrs	r3, r3, #8
 8025f24:	b29b      	uxth	r3, r3
 8025f26:	b21b      	sxth	r3, r3
 8025f28:	4313      	orrs	r3, r2
 8025f2a:	b21b      	sxth	r3, r3
 8025f2c:	b29a      	uxth	r2, r3
 8025f2e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8025f30:	81da      	strh	r2, [r3, #14]
 8025f32:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8025f34:	3338      	adds	r3, #56	; 0x38
 8025f36:	2210      	movs	r2, #16
 8025f38:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8025f3a:	4618      	mov	r0, r3
 8025f3c:	f005 f97b 	bl	802b236 <memcpy>
 8025f40:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025f42:	3301      	adds	r3, #1
 8025f44:	781b      	ldrb	r3, [r3, #0]
 8025f46:	f897 206f 	ldrb.w	r2, [r7, #111]	; 0x6f
 8025f4a:	1ad3      	subs	r3, r2, r3
 8025f4c:	b2db      	uxtb	r3, r3
 8025f4e:	3b02      	subs	r3, #2
 8025f50:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8025f54:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025f56:	3301      	adds	r3, #1
 8025f58:	781b      	ldrb	r3, [r3, #0]
 8025f5a:	3302      	adds	r3, #2
 8025f5c:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8025f5e:	4413      	add	r3, r2
 8025f60:	673b      	str	r3, [r7, #112]	; 0x70
 8025f62:	e045      	b.n	8025ff0 <indicateRxDIO+0x1a8>
 8025f64:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025f66:	677b      	str	r3, [r7, #116]	; 0x74
 8025f68:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8025f6a:	3318      	adds	r3, #24
 8025f6c:	2220      	movs	r2, #32
 8025f6e:	6f79      	ldr	r1, [r7, #116]	; 0x74
 8025f70:	4618      	mov	r0, r3
 8025f72:	f005 f960 	bl	802b236 <memcpy>
 8025f76:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8025f7a:	2200      	movs	r2, #0
 8025f7c:	601a      	str	r2, [r3, #0]
 8025f7e:	605a      	str	r2, [r3, #4]
 8025f80:	609a      	str	r2, [r3, #8]
 8025f82:	60da      	str	r2, [r3, #12]
 8025f84:	741a      	strb	r2, [r3, #16]
 8025f86:	2305      	movs	r3, #5
 8025f88:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8025f8c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8025f8e:	f103 0210 	add.w	r2, r3, #16
 8025f92:	f107 0339 	add.w	r3, r7, #57	; 0x39
 8025f96:	6811      	ldr	r1, [r2, #0]
 8025f98:	6852      	ldr	r2, [r2, #4]
 8025f9a:	6019      	str	r1, [r3, #0]
 8025f9c:	605a      	str	r2, [r3, #4]
 8025f9e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8025fa2:	4618      	mov	r0, r3
 8025fa4:	f7e7 f862 	bl	800d06c <00481873317fdef387db1bb310377b408b8e47be>
 8025fa8:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025faa:	3301      	adds	r3, #1
 8025fac:	781b      	ldrb	r3, [r3, #0]
 8025fae:	f897 206f 	ldrb.w	r2, [r7, #111]	; 0x6f
 8025fb2:	1ad3      	subs	r3, r2, r3
 8025fb4:	b2db      	uxtb	r3, r3
 8025fb6:	3b02      	subs	r3, #2
 8025fb8:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8025fbc:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025fbe:	3301      	adds	r3, #1
 8025fc0:	781b      	ldrb	r3, [r3, #0]
 8025fc2:	3302      	adds	r3, #2
 8025fc4:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8025fc6:	4413      	add	r3, r2
 8025fc8:	673b      	str	r3, [r7, #112]	; 0x70
 8025fca:	e011      	b.n	8025ff0 <indicateRxDIO+0x1a8>
 8025fcc:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025fce:	3301      	adds	r3, #1
 8025fd0:	781b      	ldrb	r3, [r3, #0]
 8025fd2:	f897 206f 	ldrb.w	r2, [r7, #111]	; 0x6f
 8025fd6:	1ad3      	subs	r3, r2, r3
 8025fd8:	b2db      	uxtb	r3, r3
 8025fda:	3b02      	subs	r3, #2
 8025fdc:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8025fe0:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8025fe2:	3301      	adds	r3, #1
 8025fe4:	781b      	ldrb	r3, [r3, #0]
 8025fe6:	3302      	adds	r3, #2
 8025fe8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8025fea:	4413      	add	r3, r2
 8025fec:	673b      	str	r3, [r7, #112]	; 0x70
 8025fee:	bf00      	nop
 8025ff0:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8025ff4:	2b00      	cmp	r3, #0
 8025ff6:	f47f af53 	bne.w	8025ea0 <indicateRxDIO+0x58>
 8025ffa:	687b      	ldr	r3, [r7, #4]
 8025ffc:	685b      	ldr	r3, [r3, #4]
 8025ffe:	789b      	ldrb	r3, [r3, #2]
 8026000:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
 8026004:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8026008:	b29b      	uxth	r3, r3
 802600a:	021b      	lsls	r3, r3, #8
 802600c:	b29b      	uxth	r3, r3
 802600e:	687a      	ldr	r2, [r7, #4]
 8026010:	6852      	ldr	r2, [r2, #4]
 8026012:	3203      	adds	r2, #3
 8026014:	7812      	ldrb	r2, [r2, #0]
 8026016:	4413      	add	r3, r2
 8026018:	b29a      	uxth	r2, r3
 802601a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 802601c:	805a      	strh	r2, [r3, #2]
 802601e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026020:	885b      	ldrh	r3, [r3, #2]
 8026022:	b29a      	uxth	r2, r3
 8026024:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026026:	805a      	strh	r2, [r3, #2]
 8026028:	687b      	ldr	r3, [r7, #4]
 802602a:	f103 022e 	add.w	r2, r3, #46	; 0x2e
 802602e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8026032:	4611      	mov	r1, r2
 8026034:	4618      	mov	r0, r3
 8026036:	f7e8 fd95 	bl	800eb64 <c830e52416e40936b7f282734abfc3137eeaf4dc>
 802603a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 802603c:	2b00      	cmp	r3, #0
 802603e:	d072      	beq.n	8026126 <indicateRxDIO+0x2de>
 8026040:	687b      	ldr	r3, [r7, #4]
 8026042:	3342      	adds	r3, #66	; 0x42
 8026044:	f107 0227 	add.w	r2, r7, #39	; 0x27
 8026048:	4611      	mov	r1, r2
 802604a:	4618      	mov	r0, r3
 802604c:	f7e8 fb92 	bl	800e774 <52a2c697077f87280125159eda12d46a7578d4b9>
 8026050:	4603      	mov	r3, r0
 8026052:	2b00      	cmp	r3, #0
 8026054:	d067      	beq.n	8026126 <indicateRxDIO+0x2de>
 8026056:	f107 0314 	add.w	r3, r7, #20
 802605a:	2200      	movs	r2, #0
 802605c:	601a      	str	r2, [r3, #0]
 802605e:	605a      	str	r2, [r3, #4]
 8026060:	609a      	str	r2, [r3, #8]
 8026062:	60da      	str	r2, [r3, #12]
 8026064:	741a      	strb	r2, [r3, #16]
 8026066:	2302      	movs	r3, #2
 8026068:	753b      	strb	r3, [r7, #20]
 802606a:	f107 0314 	add.w	r3, r7, #20
 802606e:	3301      	adds	r3, #1
 8026070:	4619      	mov	r1, r3
 8026072:	2000      	movs	r0, #0
 8026074:	f7e8 f87c 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8026078:	f107 0214 	add.w	r2, r7, #20
 802607c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8026080:	4611      	mov	r1, r2
 8026082:	4618      	mov	r0, r3
 8026084:	f7e9 f952 	bl	800f32c <32ee1897f5dd097f851de45186212ed2e150a0c5>
 8026088:	4603      	mov	r3, r0
 802608a:	f887 305e 	strb.w	r3, [r7, #94]	; 0x5e
 802608e:	2300      	movs	r3, #0
 8026090:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8026094:	f897 305e 	ldrb.w	r3, [r7, #94]	; 0x5e
 8026098:	2b00      	cmp	r3, #0
 802609a:	d032      	beq.n	8026102 <indicateRxDIO+0x2ba>
 802609c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 802609e:	885b      	ldrh	r3, [r3, #2]
 80260a0:	b29c      	uxth	r4, r3
 80260a2:	f7ff fc97 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80260a6:	4603      	mov	r3, r0
 80260a8:	429c      	cmp	r4, r3
 80260aa:	d92a      	bls.n	8026102 <indicateRxDIO+0x2ba>
 80260ac:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80260ae:	885b      	ldrh	r3, [r3, #2]
 80260b0:	b29b      	uxth	r3, r3
 80260b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80260b6:	4293      	cmp	r3, r2
 80260b8:	d120      	bne.n	80260fc <indicateRxDIO+0x2b4>
 80260ba:	4a0e      	ldr	r2, [pc, #56]	; (80260f4 <indicateRxDIO+0x2ac>)
 80260bc:	f107 030c 	add.w	r3, r7, #12
 80260c0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80260c4:	e883 0003 	stmia.w	r3, {r0, r1}
 80260c8:	4a0b      	ldr	r2, [pc, #44]	; (80260f8 <indicateRxDIO+0x2b0>)
 80260ca:	f107 030c 	add.w	r3, r7, #12
 80260ce:	e893 0003 	ldmia.w	r3, {r0, r1}
 80260d2:	f7ef f899 	bl	8015208 <LOGGER_PrintLine>
 80260d6:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 80260da:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80260dc:	885b      	ldrh	r3, [r3, #2]
 80260de:	b29b      	uxth	r3, r3
 80260e0:	4619      	mov	r1, r3
 80260e2:	4610      	mov	r0, r2
 80260e4:	f7e7 f996 	bl	800d414 <231ee13350ba09f13191bc6eb894c2ea8bf59b41>
 80260e8:	f7ff fd6a 	bl	8025bc0 <15dfb4a8f71a3c92937ea9475d964fb266f362bf>
 80260ec:	e01d      	b.n	802612a <indicateRxDIO+0x2e2>
 80260ee:	bf00      	nop
 80260f0:	20000040 	.word	0x20000040
 80260f4:	08030eac 	.word	0x08030eac
 80260f8:	08030f6c 	.word	0x08030f6c
 80260fc:	2301      	movs	r3, #1
 80260fe:	f887 306e 	strb.w	r3, [r7, #110]	; 0x6e
 8026102:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8026106:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026108:	885b      	ldrh	r3, [r3, #2]
 802610a:	b29b      	uxth	r3, r3
 802610c:	4619      	mov	r1, r3
 802610e:	4610      	mov	r0, r2
 8026110:	f7e7 f980 	bl	800d414 <231ee13350ba09f13191bc6eb894c2ea8bf59b41>
 8026114:	f897 306e 	ldrb.w	r3, [r7, #110]	; 0x6e
 8026118:	2b00      	cmp	r3, #0
 802611a:	d004      	beq.n	8026126 <indicateRxDIO+0x2de>
 802611c:	2204      	movs	r2, #4
 802611e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8026120:	4803      	ldr	r0, [pc, #12]	; (8026130 <indicateRxDIO+0x2e8>)
 8026122:	f7ed f9f9 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8026126:	f001 fb53 	bl	80277d0 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437>
 802612a:	377c      	adds	r7, #124	; 0x7c
 802612c:	46bd      	mov	sp, r7
 802612e:	bd90      	pop	{r4, r7, pc}
 8026130:	08026359 	.word	0x08026359

08026134 <indicateRxDao>:
 8026134:	b580      	push	{r7, lr}
 8026136:	b092      	sub	sp, #72	; 0x48
 8026138:	af00      	add	r7, sp, #0
 802613a:	6078      	str	r0, [r7, #4]
 802613c:	4b80      	ldr	r3, [pc, #512]	; (8026340 <indicateRxDao+0x20c>)
 802613e:	681b      	ldr	r3, [r3, #0]
 8026140:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8026144:	643b      	str	r3, [r7, #64]	; 0x40
 8026146:	2300      	movs	r3, #0
 8026148:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 802614c:	687b      	ldr	r3, [r7, #4]
 802614e:	2273      	movs	r2, #115	; 0x73
 8026150:	705a      	strb	r2, [r3, #1]
 8026152:	687b      	ldr	r3, [r7, #4]
 8026154:	685b      	ldr	r3, [r3, #4]
 8026156:	781a      	ldrb	r2, [r3, #0]
 8026158:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 802615a:	f893 3061 	ldrb.w	r3, [r3, #97]	; 0x61
 802615e:	429a      	cmp	r2, r3
 8026160:	d00e      	beq.n	8026180 <indicateRxDao+0x4c>
 8026162:	4a78      	ldr	r2, [pc, #480]	; (8026344 <indicateRxDao+0x210>)
 8026164:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8026168:	e892 0003 	ldmia.w	r2, {r0, r1}
 802616c:	e883 0003 	stmia.w	r3, {r0, r1}
 8026170:	4a75      	ldr	r2, [pc, #468]	; (8026348 <indicateRxDao+0x214>)
 8026172:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8026176:	e893 0003 	ldmia.w	r3, {r0, r1}
 802617a:	f7ef f845 	bl	8015208 <LOGGER_PrintLine>
 802617e:	e0db      	b.n	8026338 <indicateRxDao+0x204>
 8026180:	687b      	ldr	r3, [r7, #4]
 8026182:	685b      	ldr	r3, [r3, #4]
 8026184:	1c5a      	adds	r2, r3, #1
 8026186:	687b      	ldr	r3, [r7, #4]
 8026188:	605a      	str	r2, [r3, #4]
 802618a:	687b      	ldr	r3, [r7, #4]
 802618c:	7a1b      	ldrb	r3, [r3, #8]
 802618e:	3b01      	subs	r3, #1
 8026190:	b2da      	uxtb	r2, r3
 8026192:	687b      	ldr	r3, [r7, #4]
 8026194:	721a      	strb	r2, [r3, #8]
 8026196:	687b      	ldr	r3, [r7, #4]
 8026198:	685b      	ldr	r3, [r3, #4]
 802619a:	781b      	ldrb	r3, [r3, #0]
 802619c:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 80261a0:	687b      	ldr	r3, [r7, #4]
 80261a2:	685b      	ldr	r3, [r3, #4]
 80261a4:	1c5a      	adds	r2, r3, #1
 80261a6:	687b      	ldr	r3, [r7, #4]
 80261a8:	605a      	str	r2, [r3, #4]
 80261aa:	687b      	ldr	r3, [r7, #4]
 80261ac:	7a1b      	ldrb	r3, [r3, #8]
 80261ae:	3b01      	subs	r3, #1
 80261b0:	b2da      	uxtb	r2, r3
 80261b2:	687b      	ldr	r3, [r7, #4]
 80261b4:	721a      	strb	r2, [r3, #8]
 80261b6:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 80261ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80261be:	2b00      	cmp	r3, #0
 80261c0:	bf14      	ite	ne
 80261c2:	2301      	movne	r3, #1
 80261c4:	2300      	moveq	r3, #0
 80261c6:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80261ca:	687b      	ldr	r3, [r7, #4]
 80261cc:	685b      	ldr	r3, [r3, #4]
 80261ce:	781b      	ldrb	r3, [r3, #0]
 80261d0:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 80261d4:	687b      	ldr	r3, [r7, #4]
 80261d6:	685b      	ldr	r3, [r3, #4]
 80261d8:	1c5a      	adds	r2, r3, #1
 80261da:	687b      	ldr	r3, [r7, #4]
 80261dc:	605a      	str	r2, [r3, #4]
 80261de:	687b      	ldr	r3, [r7, #4]
 80261e0:	7a1b      	ldrb	r3, [r3, #8]
 80261e2:	3b01      	subs	r3, #1
 80261e4:	b2da      	uxtb	r2, r3
 80261e6:	687b      	ldr	r3, [r7, #4]
 80261e8:	721a      	strb	r2, [r3, #8]
 80261ea:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 80261ee:	2b00      	cmp	r3, #0
 80261f0:	f040 809d 	bne.w	802632e <indicateRxDao+0x1fa>
 80261f4:	687b      	ldr	r3, [r7, #4]
 80261f6:	685b      	ldr	r3, [r3, #4]
 80261f8:	781b      	ldrb	r3, [r3, #0]
 80261fa:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 80261fe:	687b      	ldr	r3, [r7, #4]
 8026200:	685b      	ldr	r3, [r3, #4]
 8026202:	1c5a      	adds	r2, r3, #1
 8026204:	687b      	ldr	r3, [r7, #4]
 8026206:	605a      	str	r2, [r3, #4]
 8026208:	687b      	ldr	r3, [r7, #4]
 802620a:	7a1b      	ldrb	r3, [r3, #8]
 802620c:	3b01      	subs	r3, #1
 802620e:	b2da      	uxtb	r2, r3
 8026210:	687b      	ldr	r3, [r7, #4]
 8026212:	721a      	strb	r2, [r3, #8]
 8026214:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8026218:	2b00      	cmp	r3, #0
 802621a:	f040 808a 	bne.w	8026332 <indicateRxDao+0x1fe>
 802621e:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8026222:	2b00      	cmp	r3, #0
 8026224:	d00b      	beq.n	802623e <indicateRxDao+0x10a>
 8026226:	687b      	ldr	r3, [r7, #4]
 8026228:	685b      	ldr	r3, [r3, #4]
 802622a:	f103 0210 	add.w	r2, r3, #16
 802622e:	687b      	ldr	r3, [r7, #4]
 8026230:	605a      	str	r2, [r3, #4]
 8026232:	687b      	ldr	r3, [r7, #4]
 8026234:	7a1b      	ldrb	r3, [r3, #8]
 8026236:	3b10      	subs	r3, #16
 8026238:	b2da      	uxtb	r2, r3
 802623a:	687b      	ldr	r3, [r7, #4]
 802623c:	721a      	strb	r2, [r3, #8]
 802623e:	2300      	movs	r3, #0
 8026240:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 8026244:	e05a      	b.n	80262fc <indicateRxDao+0x1c8>
 8026246:	687b      	ldr	r3, [r7, #4]
 8026248:	685b      	ldr	r3, [r3, #4]
 802624a:	681b      	ldr	r3, [r3, #0]
 802624c:	637b      	str	r3, [r7, #52]	; 0x34
 802624e:	2104      	movs	r1, #4
 8026250:	6878      	ldr	r0, [r7, #4]
 8026252:	f003 f957 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8026256:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 802625a:	2b05      	cmp	r3, #5
 802625c:	d16b      	bne.n	8026336 <indicateRxDao+0x202>
 802625e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8026262:	08db      	lsrs	r3, r3, #3
 8026264:	f887 303b 	strb.w	r3, [r7, #59]	; 0x3b
 8026268:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 802626c:	2b02      	cmp	r3, #2
 802626e:	d136      	bne.n	80262de <indicateRxDao+0x1aa>
 8026270:	687b      	ldr	r3, [r7, #4]
 8026272:	685b      	ldr	r3, [r3, #4]
 8026274:	881b      	ldrh	r3, [r3, #0]
 8026276:	b29b      	uxth	r3, r3
 8026278:	863b      	strh	r3, [r7, #48]	; 0x30
 802627a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 802627e:	4618      	mov	r0, r3
 8026280:	f001 fc56 	bl	8027b30 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2>
 8026284:	4603      	mov	r3, r0
 8026286:	f083 0301 	eor.w	r3, r3, #1
 802628a:	b2db      	uxtb	r3, r3
 802628c:	2b00      	cmp	r3, #0
 802628e:	d00d      	beq.n	80262ac <indicateRxDao+0x178>
 8026290:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8026294:	4618      	mov	r0, r3
 8026296:	f001 fbc1 	bl	8027a1c <29fa8ed2960e61836c5411711158d1cb9cd67052>
 802629a:	4603      	mov	r3, r0
 802629c:	f083 0301 	eor.w	r3, r3, #1
 80262a0:	b2db      	uxtb	r3, r3
 80262a2:	2b00      	cmp	r3, #0
 80262a4:	d002      	beq.n	80262ac <indicateRxDao+0x178>
 80262a6:	2301      	movs	r3, #1
 80262a8:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
 80262ac:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80262b0:	4618      	mov	r0, r3
 80262b2:	f001 fbe3 	bl	8027a7c <725c72049a2e0b342530ba14f6642cfd9100dd16>
 80262b6:	4603      	mov	r3, r0
 80262b8:	f083 0301 	eor.w	r3, r3, #1
 80262bc:	b2db      	uxtb	r3, r3
 80262be:	2b00      	cmp	r3, #0
 80262c0:	d00d      	beq.n	80262de <indicateRxDao+0x1aa>
 80262c2:	4a22      	ldr	r2, [pc, #136]	; (802634c <indicateRxDao+0x218>)
 80262c4:	f107 0310 	add.w	r3, r7, #16
 80262c8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80262cc:	e883 0003 	stmia.w	r3, {r0, r1}
 80262d0:	4a1f      	ldr	r2, [pc, #124]	; (8026350 <indicateRxDao+0x21c>)
 80262d2:	f107 0310 	add.w	r3, r7, #16
 80262d6:	e893 0003 	ldmia.w	r3, {r0, r1}
 80262da:	f7ee ff95 	bl	8015208 <LOGGER_PrintLine>
 80262de:	687b      	ldr	r3, [r7, #4]
 80262e0:	685a      	ldr	r2, [r3, #4]
 80262e2:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80262e6:	441a      	add	r2, r3
 80262e8:	687b      	ldr	r3, [r7, #4]
 80262ea:	605a      	str	r2, [r3, #4]
 80262ec:	687b      	ldr	r3, [r7, #4]
 80262ee:	7a1a      	ldrb	r2, [r3, #8]
 80262f0:	f897 303b 	ldrb.w	r3, [r7, #59]	; 0x3b
 80262f4:	1ad3      	subs	r3, r2, r3
 80262f6:	b2da      	uxtb	r2, r3
 80262f8:	687b      	ldr	r3, [r7, #4]
 80262fa:	721a      	strb	r2, [r3, #8]
 80262fc:	687b      	ldr	r3, [r7, #4]
 80262fe:	7a1b      	ldrb	r3, [r3, #8]
 8026300:	2b00      	cmp	r3, #0
 8026302:	d1a0      	bne.n	8026246 <indicateRxDao+0x112>
 8026304:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8026308:	2b00      	cmp	r3, #0
 802630a:	d015      	beq.n	8026338 <indicateRxDao+0x204>
 802630c:	4a0d      	ldr	r2, [pc, #52]	; (8026344 <indicateRxDao+0x210>)
 802630e:	f107 0308 	add.w	r3, r7, #8
 8026312:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026316:	e883 0003 	stmia.w	r3, {r0, r1}
 802631a:	4a0e      	ldr	r2, [pc, #56]	; (8026354 <indicateRxDao+0x220>)
 802631c:	f107 0308 	add.w	r3, r7, #8
 8026320:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026324:	f7ee ff70 	bl	8015208 <LOGGER_PrintLine>
 8026328:	f7ff fbec 	bl	8025b04 <d02fb859d9a803dd5217bd4aa72d833a1cfd2c1e>
 802632c:	e004      	b.n	8026338 <indicateRxDao+0x204>
 802632e:	bf00      	nop
 8026330:	e002      	b.n	8026338 <indicateRxDao+0x204>
 8026332:	bf00      	nop
 8026334:	e000      	b.n	8026338 <indicateRxDao+0x204>
 8026336:	bf00      	nop
 8026338:	3748      	adds	r7, #72	; 0x48
 802633a:	46bd      	mov	sp, r7
 802633c:	bd80      	pop	{r7, pc}
 802633e:	bf00      	nop
 8026340:	20000040 	.word	0x20000040
 8026344:	08030ea4 	.word	0x08030ea4
 8026348:	08030ee8 	.word	0x08030ee8
 802634c:	08030e9c 	.word	0x08030e9c
 8026350:	08030f8c 	.word	0x08030f8c
 8026354:	08030fa8 	.word	0x08030fa8

08026358 <cef630f5a74a35314667ebee3f885b52bc89b138>:
 8026358:	b5b0      	push	{r4, r5, r7, lr}
 802635a:	b086      	sub	sp, #24
 802635c:	af00      	add	r7, sp, #0
 802635e:	6078      	str	r0, [r7, #4]
 8026360:	687b      	ldr	r3, [r7, #4]
 8026362:	617b      	str	r3, [r7, #20]
 8026364:	2073      	movs	r0, #115	; 0x73
 8026366:	f7e9 f9e5 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 802636a:	6138      	str	r0, [r7, #16]
 802636c:	693b      	ldr	r3, [r7, #16]
 802636e:	2b00      	cmp	r3, #0
 8026370:	d10e      	bne.n	8026390 <cef630f5a74a35314667ebee3f885b52bc89b138+0x38>
 8026372:	4a71      	ldr	r2, [pc, #452]	; (8026538 <cef630f5a74a35314667ebee3f885b52bc89b138+0x1e0>)
 8026374:	f107 0308 	add.w	r3, r7, #8
 8026378:	e892 0003 	ldmia.w	r2, {r0, r1}
 802637c:	e883 0003 	stmia.w	r3, {r0, r1}
 8026380:	4a6e      	ldr	r2, [pc, #440]	; (802653c <cef630f5a74a35314667ebee3f885b52bc89b138+0x1e4>)
 8026382:	f107 0308 	add.w	r3, r7, #8
 8026386:	e893 0003 	ldmia.w	r3, {r0, r1}
 802638a:	f7ee ff3d 	bl	8015208 <LOGGER_PrintLine>
 802638e:	e0cf      	b.n	8026530 <cef630f5a74a35314667ebee3f885b52bc89b138+0x1d8>
 8026390:	693b      	ldr	r3, [r7, #16]
 8026392:	2273      	movs	r2, #115	; 0x73
 8026394:	701a      	strb	r2, [r3, #0]
 8026396:	693b      	ldr	r3, [r7, #16]
 8026398:	2273      	movs	r2, #115	; 0x73
 802639a:	705a      	strb	r2, [r3, #1]
 802639c:	693b      	ldr	r3, [r7, #16]
 802639e:	223a      	movs	r2, #58	; 0x3a
 80263a0:	741a      	strb	r2, [r3, #16]
 80263a2:	693b      	ldr	r3, [r7, #16]
 80263a4:	2200      	movs	r2, #0
 80263a6:	745a      	strb	r2, [r3, #17]
 80263a8:	693b      	ldr	r3, [r7, #16]
 80263aa:	229b      	movs	r2, #155	; 0x9b
 80263ac:	825a      	strh	r2, [r3, #18]
 80263ae:	693b      	ldr	r3, [r7, #16]
 80263b0:	f103 001d 	add.w	r0, r3, #29
 80263b4:	697b      	ldr	r3, [r7, #20]
 80263b6:	3348      	adds	r3, #72	; 0x48
 80263b8:	2211      	movs	r2, #17
 80263ba:	4619      	mov	r1, r3
 80263bc:	f004 ff3b 	bl	802b236 <memcpy>
 80263c0:	2110      	movs	r1, #16
 80263c2:	6938      	ldr	r0, [r7, #16]
 80263c4:	f003 f866 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80263c8:	693b      	ldr	r3, [r7, #16]
 80263ca:	6858      	ldr	r0, [r3, #4]
 80263cc:	697b      	ldr	r3, [r7, #20]
 80263ce:	3338      	adds	r3, #56	; 0x38
 80263d0:	2210      	movs	r2, #16
 80263d2:	4619      	mov	r1, r3
 80263d4:	f004 ff2f 	bl	802b236 <memcpy>
 80263d8:	697b      	ldr	r3, [r7, #20]
 80263da:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80263dc:	021b      	lsls	r3, r3, #8
 80263de:	b21a      	sxth	r2, r3
 80263e0:	697b      	ldr	r3, [r7, #20]
 80263e2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80263e4:	0a1b      	lsrs	r3, r3, #8
 80263e6:	b29b      	uxth	r3, r3
 80263e8:	b21b      	sxth	r3, r3
 80263ea:	4313      	orrs	r3, r2
 80263ec:	b21a      	sxth	r2, r3
 80263ee:	693b      	ldr	r3, [r7, #16]
 80263f0:	685b      	ldr	r3, [r3, #4]
 80263f2:	b292      	uxth	r2, r2
 80263f4:	80da      	strh	r2, [r3, #6]
 80263f6:	697b      	ldr	r3, [r7, #20]
 80263f8:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 80263fc:	021b      	lsls	r3, r3, #8
 80263fe:	b21a      	sxth	r2, r3
 8026400:	697b      	ldr	r3, [r7, #20]
 8026402:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8026406:	0a1b      	lsrs	r3, r3, #8
 8026408:	b29b      	uxth	r3, r3
 802640a:	b21b      	sxth	r3, r3
 802640c:	4313      	orrs	r3, r2
 802640e:	b21a      	sxth	r2, r3
 8026410:	693b      	ldr	r3, [r7, #16]
 8026412:	685b      	ldr	r3, [r3, #4]
 8026414:	b292      	uxth	r2, r2
 8026416:	811a      	strh	r2, [r3, #8]
 8026418:	697b      	ldr	r3, [r7, #20]
 802641a:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 802641e:	021b      	lsls	r3, r3, #8
 8026420:	b21a      	sxth	r2, r3
 8026422:	697b      	ldr	r3, [r7, #20]
 8026424:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8026428:	0a1b      	lsrs	r3, r3, #8
 802642a:	b29b      	uxth	r3, r3
 802642c:	b21b      	sxth	r3, r3
 802642e:	4313      	orrs	r3, r2
 8026430:	b21a      	sxth	r2, r3
 8026432:	693b      	ldr	r3, [r7, #16]
 8026434:	685b      	ldr	r3, [r3, #4]
 8026436:	b292      	uxth	r2, r2
 8026438:	815a      	strh	r2, [r3, #10]
 802643a:	697b      	ldr	r3, [r7, #20]
 802643c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8026440:	021b      	lsls	r3, r3, #8
 8026442:	b21a      	sxth	r2, r3
 8026444:	697b      	ldr	r3, [r7, #20]
 8026446:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 802644a:	0a1b      	lsrs	r3, r3, #8
 802644c:	b29b      	uxth	r3, r3
 802644e:	b21b      	sxth	r3, r3
 8026450:	4313      	orrs	r3, r2
 8026452:	b21a      	sxth	r2, r3
 8026454:	693b      	ldr	r3, [r7, #16]
 8026456:	685b      	ldr	r3, [r3, #4]
 8026458:	b292      	uxth	r2, r2
 802645a:	81da      	strh	r2, [r3, #14]
 802645c:	2120      	movs	r1, #32
 802645e:	6938      	ldr	r0, [r7, #16]
 8026460:	f003 f818 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026464:	697b      	ldr	r3, [r7, #20]
 8026466:	f103 0428 	add.w	r4, r3, #40	; 0x28
 802646a:	2005      	movs	r0, #5
 802646c:	f7e6 fdc6 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026470:	4603      	mov	r3, r0
 8026472:	3301      	adds	r3, #1
 8026474:	2208      	movs	r2, #8
 8026476:	4619      	mov	r1, r3
 8026478:	4620      	mov	r0, r4
 802647a:	f004 fedc 	bl	802b236 <memcpy>
 802647e:	697b      	ldr	r3, [r7, #20]
 8026480:	2200      	movs	r2, #0
 8026482:	625a      	str	r2, [r3, #36]	; 0x24
 8026484:	693b      	ldr	r3, [r7, #16]
 8026486:	6858      	ldr	r0, [r3, #4]
 8026488:	697b      	ldr	r3, [r7, #20]
 802648a:	3318      	adds	r3, #24
 802648c:	2220      	movs	r2, #32
 802648e:	4619      	mov	r1, r3
 8026490:	f004 fed1 	bl	802b236 <memcpy>
 8026494:	f7ff fa9e 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8026498:	4603      	mov	r3, r0
 802649a:	461a      	mov	r2, r3
 802649c:	697b      	ldr	r3, [r7, #20]
 802649e:	805a      	strh	r2, [r3, #2]
 80264a0:	2118      	movs	r1, #24
 80264a2:	6938      	ldr	r0, [r7, #16]
 80264a4:	f002 fff6 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80264a8:	693b      	ldr	r3, [r7, #16]
 80264aa:	685b      	ldr	r3, [r3, #4]
 80264ac:	6979      	ldr	r1, [r7, #20]
 80264ae:	2218      	movs	r2, #24
 80264b0:	4618      	mov	r0, r3
 80264b2:	f004 fec0 	bl	802b236 <memcpy>
 80264b6:	697b      	ldr	r3, [r7, #20]
 80264b8:	885b      	ldrh	r3, [r3, #2]
 80264ba:	0a1b      	lsrs	r3, r3, #8
 80264bc:	b29a      	uxth	r2, r3
 80264be:	693b      	ldr	r3, [r7, #16]
 80264c0:	685b      	ldr	r3, [r3, #4]
 80264c2:	3302      	adds	r3, #2
 80264c4:	b2d2      	uxtb	r2, r2
 80264c6:	701a      	strb	r2, [r3, #0]
 80264c8:	697b      	ldr	r3, [r7, #20]
 80264ca:	885a      	ldrh	r2, [r3, #2]
 80264cc:	693b      	ldr	r3, [r7, #16]
 80264ce:	685b      	ldr	r3, [r3, #4]
 80264d0:	3303      	adds	r3, #3
 80264d2:	b2d2      	uxtb	r2, r2
 80264d4:	701a      	strb	r2, [r3, #0]
 80264d6:	2104      	movs	r1, #4
 80264d8:	6938      	ldr	r0, [r7, #16]
 80264da:	f002 ffdb 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80264de:	693b      	ldr	r3, [r7, #16]
 80264e0:	8a5a      	ldrh	r2, [r3, #18]
 80264e2:	693b      	ldr	r3, [r7, #16]
 80264e4:	685b      	ldr	r3, [r3, #4]
 80264e6:	b2d2      	uxtb	r2, r2
 80264e8:	701a      	strb	r2, [r3, #0]
 80264ea:	693b      	ldr	r3, [r7, #16]
 80264ec:	685b      	ldr	r3, [r3, #4]
 80264ee:	2201      	movs	r2, #1
 80264f0:	705a      	strb	r2, [r3, #1]
 80264f2:	693b      	ldr	r3, [r7, #16]
 80264f4:	685b      	ldr	r3, [r3, #4]
 80264f6:	1c9c      	adds	r4, r3, #2
 80264f8:	2005      	movs	r0, #5
 80264fa:	f7e6 fd7f 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80264fe:	4603      	mov	r3, r0
 8026500:	1c5d      	adds	r5, r3, #1
 8026502:	2002      	movs	r0, #2
 8026504:	f7e6 fd7a 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026508:	4603      	mov	r3, r0
 802650a:	3301      	adds	r3, #1
 802650c:	462a      	mov	r2, r5
 802650e:	4621      	mov	r1, r4
 8026510:	6938      	ldr	r0, [r7, #16]
 8026512:	f003 f8e2 	bl	80296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>
 8026516:	6938      	ldr	r0, [r7, #16]
 8026518:	f7fe fdf6 	bl	8025108 <966a9fb75e08bd6bd3b3054de298215c3cbec82e>
 802651c:	4603      	mov	r3, r0
 802651e:	2b00      	cmp	r3, #0
 8026520:	d003      	beq.n	802652a <cef630f5a74a35314667ebee3f885b52bc89b138+0x1d2>
 8026522:	697b      	ldr	r3, [r7, #20]
 8026524:	693a      	ldr	r2, [r7, #16]
 8026526:	65da      	str	r2, [r3, #92]	; 0x5c
 8026528:	e002      	b.n	8026530 <cef630f5a74a35314667ebee3f885b52bc89b138+0x1d8>
 802652a:	6938      	ldr	r0, [r7, #16]
 802652c:	f7e9 fa0e 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8026530:	3718      	adds	r7, #24
 8026532:	46bd      	mov	sp, r7
 8026534:	bdb0      	pop	{r4, r5, r7, pc}
 8026536:	bf00      	nop
 8026538:	08030e9c 	.word	0x08030e9c
 802653c:	08030fdc 	.word	0x08030fdc

08026540 <ddcc96d14128f39f258a026a92cbd4c2383286b1>:
 8026540:	b590      	push	{r4, r7, lr}
 8026542:	b087      	sub	sp, #28
 8026544:	af02      	add	r7, sp, #8
 8026546:	4b0d      	ldr	r3, [pc, #52]	; (802657c <ddcc96d14128f39f258a026a92cbd4c2383286b1+0x3c>)
 8026548:	681b      	ldr	r3, [r3, #0]
 802654a:	f503 730c 	add.w	r3, r3, #560	; 0x230
 802654e:	60fb      	str	r3, [r7, #12]
 8026550:	f000 f81c 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8026554:	68fb      	ldr	r3, [r7, #12]
 8026556:	f893 4095 	ldrb.w	r4, [r3, #149]	; 0x95
 802655a:	4909      	ldr	r1, [pc, #36]	; (8026580 <ddcc96d14128f39f258a026a92cbd4c2383286b1+0x40>)
 802655c:	4809      	ldr	r0, [pc, #36]	; (8026584 <ddcc96d14128f39f258a026a92cbd4c2383286b1+0x44>)
 802655e:	f7eb fcff 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 8026562:	4602      	mov	r2, r0
 8026564:	68fb      	ldr	r3, [r7, #12]
 8026566:	9300      	str	r3, [sp, #0]
 8026568:	4b07      	ldr	r3, [pc, #28]	; (8026588 <ddcc96d14128f39f258a026a92cbd4c2383286b1+0x48>)
 802656a:	2101      	movs	r1, #1
 802656c:	4620      	mov	r0, r4
 802656e:	f7eb f9a3 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8026572:	bf00      	nop
 8026574:	3714      	adds	r7, #20
 8026576:	46bd      	mov	sp, r7
 8026578:	bd90      	pop	{r4, r7, pc}
 802657a:	bf00      	nop
 802657c:	20000040 	.word	0x20000040
 8026580:	01312d00 	.word	0x01312d00
 8026584:	00989680 	.word	0x00989680
 8026588:	080265c5 	.word	0x080265c5

0802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>:
 802658c:	b580      	push	{r7, lr}
 802658e:	b082      	sub	sp, #8
 8026590:	af00      	add	r7, sp, #0
 8026592:	4b0b      	ldr	r3, [pc, #44]	; (80265c0 <5d52bdabf8ecd6c8d7198566d11b639ed660a013+0x34>)
 8026594:	681b      	ldr	r3, [r3, #0]
 8026596:	f503 730c 	add.w	r3, r3, #560	; 0x230
 802659a:	607b      	str	r3, [r7, #4]
 802659c:	687b      	ldr	r3, [r7, #4]
 802659e:	2200      	movs	r2, #0
 80265a0:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 80265a4:	687b      	ldr	r3, [r7, #4]
 80265a6:	2200      	movs	r2, #0
 80265a8:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80265ac:	687b      	ldr	r3, [r7, #4]
 80265ae:	f893 3095 	ldrb.w	r3, [r3, #149]	; 0x95
 80265b2:	4618      	mov	r0, r3
 80265b4:	f7eb fa86 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 80265b8:	bf00      	nop
 80265ba:	3708      	adds	r7, #8
 80265bc:	46bd      	mov	sp, r7
 80265be:	bd80      	pop	{r7, pc}
 80265c0:	20000040 	.word	0x20000040

080265c4 <2286051897e6bbb22857e9c9a8dc75ab84e05da9>:
 80265c4:	b5b0      	push	{r4, r5, r7, lr}
 80265c6:	b09a      	sub	sp, #104	; 0x68
 80265c8:	af02      	add	r7, sp, #8
 80265ca:	6078      	str	r0, [r7, #4]
 80265cc:	687b      	ldr	r3, [r7, #4]
 80265ce:	65bb      	str	r3, [r7, #88]	; 0x58
 80265d0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80265d2:	f893 4095 	ldrb.w	r4, [r3, #149]	; 0x95
 80265d6:	49ba      	ldr	r1, [pc, #744]	; (80268c0 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2fc>)
 80265d8:	48ba      	ldr	r0, [pc, #744]	; (80268c4 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x300>)
 80265da:	f7eb fcc1 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 80265de:	4602      	mov	r2, r0
 80265e0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80265e2:	9300      	str	r3, [sp, #0]
 80265e4:	4bb8      	ldr	r3, [pc, #736]	; (80268c8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x304>)
 80265e6:	2101      	movs	r1, #1
 80265e8:	4620      	mov	r0, r4
 80265ea:	f7eb f965 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 80265ee:	f7f4 fb35 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 80265f2:	4603      	mov	r3, r0
 80265f4:	f083 0301 	eor.w	r3, r3, #1
 80265f8:	b2db      	uxtb	r3, r3
 80265fa:	2b00      	cmp	r3, #0
 80265fc:	f040 8151 	bne.w	80268a2 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2de>
 8026600:	f7e6 fcb8 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8026604:	4603      	mov	r3, r0
 8026606:	2b00      	cmp	r3, #0
 8026608:	f040 814d 	bne.w	80268a6 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2e2>
 802660c:	f7ff f9e2 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8026610:	4603      	mov	r3, r0
 8026612:	461a      	mov	r2, r3
 8026614:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026618:	429a      	cmp	r2, r3
 802661a:	f000 8146 	beq.w	80268aa <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2e6>
 802661e:	f7ff fa53 	bl	8025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>
 8026622:	4603      	mov	r3, r0
 8026624:	f083 0301 	eor.w	r3, r3, #1
 8026628:	b2db      	uxtb	r3, r3
 802662a:	2b00      	cmp	r3, #0
 802662c:	f040 813f 	bne.w	80268ae <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2ea>
 8026630:	f001 fb0a 	bl	8027c48 <bdffef4226ee0110f60b8de23959aef3caa4ba4a>
 8026634:	6578      	str	r0, [r7, #84]	; 0x54
 8026636:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8026638:	2b00      	cmp	r3, #0
 802663a:	f000 813a 	beq.w	80268b2 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2ee>
 802663e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8026642:	2200      	movs	r2, #0
 8026644:	601a      	str	r2, [r3, #0]
 8026646:	605a      	str	r2, [r3, #4]
 8026648:	609a      	str	r2, [r3, #8]
 802664a:	60da      	str	r2, [r3, #12]
 802664c:	741a      	strb	r2, [r3, #16]
 802664e:	2302      	movs	r3, #2
 8026650:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8026654:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8026658:	3301      	adds	r3, #1
 802665a:	4619      	mov	r1, r3
 802665c:	2000      	movs	r0, #0
 802665e:	f7e7 fd87 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8026662:	4603      	mov	r3, r0
 8026664:	f083 0301 	eor.w	r3, r3, #1
 8026668:	b2db      	uxtb	r3, r3
 802666a:	2b00      	cmp	r3, #0
 802666c:	f040 8123 	bne.w	80268b6 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f2>
 8026670:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8026674:	4618      	mov	r0, r3
 8026676:	f7f6 fe07 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 802667a:	4603      	mov	r3, r0
 802667c:	2b00      	cmp	r3, #0
 802667e:	f000 811a 	beq.w	80268b6 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f2>
 8026682:	2073      	movs	r0, #115	; 0x73
 8026684:	f7e9 f856 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8026688:	6538      	str	r0, [r7, #80]	; 0x50
 802668a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 802668c:	2b00      	cmp	r3, #0
 802668e:	d10e      	bne.n	80266ae <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0xea>
 8026690:	4a8e      	ldr	r2, [pc, #568]	; (80268cc <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x308>)
 8026692:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8026696:	e892 0003 	ldmia.w	r2, {r0, r1}
 802669a:	e883 0003 	stmia.w	r3, {r0, r1}
 802669e:	4a8c      	ldr	r2, [pc, #560]	; (80268d0 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x30c>)
 80266a0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80266a4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80266a8:	f7ee fdae 	bl	8015208 <LOGGER_PrintLine>
 80266ac:	e104      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80266ae:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266b0:	2273      	movs	r2, #115	; 0x73
 80266b2:	701a      	strb	r2, [r3, #0]
 80266b4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266b6:	2273      	movs	r2, #115	; 0x73
 80266b8:	705a      	strb	r2, [r3, #1]
 80266ba:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266bc:	223a      	movs	r2, #58	; 0x3a
 80266be:	741a      	strb	r2, [r3, #16]
 80266c0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266c2:	229b      	movs	r2, #155	; 0x9b
 80266c4:	825a      	strh	r2, [r3, #18]
 80266c6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266c8:	2203      	movs	r2, #3
 80266ca:	775a      	strb	r2, [r3, #29]
 80266cc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266ce:	f103 041e 	add.w	r4, r3, #30
 80266d2:	f7e8 fedb 	bl	800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>
 80266d6:	4603      	mov	r3, r0
 80266d8:	2208      	movs	r2, #8
 80266da:	4619      	mov	r1, r3
 80266dc:	4620      	mov	r0, r4
 80266de:	f004 fdaa 	bl	802b236 <memcpy>
 80266e2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80266e4:	3326      	adds	r3, #38	; 0x26
 80266e6:	461a      	mov	r2, r3
 80266e8:	f107 033d 	add.w	r3, r7, #61	; 0x3d
 80266ec:	6819      	ldr	r1, [r3, #0]
 80266ee:	685b      	ldr	r3, [r3, #4]
 80266f0:	6011      	str	r1, [r2, #0]
 80266f2:	6053      	str	r3, [r2, #4]
 80266f4:	2300      	movs	r3, #0
 80266f6:	65fb      	str	r3, [r7, #92]	; 0x5c
 80266f8:	e035      	b.n	8026766 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x1a2>
 80266fa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80266fe:	4619      	mov	r1, r3
 8026700:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8026702:	f001 faef 	bl	8027ce4 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac>
 8026706:	4603      	mov	r3, r0
 8026708:	2b00      	cmp	r3, #0
 802670a:	d029      	beq.n	8026760 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x19c>
 802670c:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8026710:	f107 0326 	add.w	r3, r7, #38	; 0x26
 8026714:	2202      	movs	r2, #2
 8026716:	4618      	mov	r0, r3
 8026718:	f7fe fe94 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 802671c:	2102      	movs	r1, #2
 802671e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026720:	f002 feb8 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026724:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8026726:	685b      	ldr	r3, [r3, #4]
 8026728:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 802672a:	801a      	strh	r2, [r3, #0]
 802672c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 802672e:	2204      	movs	r2, #4
 8026730:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8026734:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026736:	2205      	movs	r2, #5
 8026738:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
 802673c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 802673e:	2200      	movs	r2, #0
 8026740:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
 8026744:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026746:	2210      	movs	r2, #16
 8026748:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
 802674c:	2104      	movs	r1, #4
 802674e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026750:	f002 fea0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026754:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8026756:	685b      	ldr	r3, [r3, #4]
 8026758:	6dba      	ldr	r2, [r7, #88]	; 0x58
 802675a:	327b      	adds	r2, #123	; 0x7b
 802675c:	6812      	ldr	r2, [r2, #0]
 802675e:	601a      	str	r2, [r3, #0]
 8026760:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8026762:	3301      	adds	r3, #1
 8026764:	65fb      	str	r3, [r7, #92]	; 0x5c
 8026766:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8026768:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 802676a:	429a      	cmp	r2, r3
 802676c:	d3c5      	bcc.n	80266fa <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x136>
 802676e:	2101      	movs	r1, #1
 8026770:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026772:	f002 fe8f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026776:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8026778:	685b      	ldr	r3, [r3, #4]
 802677a:	2200      	movs	r2, #0
 802677c:	701a      	strb	r2, [r3, #0]
 802677e:	2101      	movs	r1, #1
 8026780:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026782:	f002 fe87 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026786:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8026788:	685b      	ldr	r3, [r3, #4]
 802678a:	2200      	movs	r2, #0
 802678c:	701a      	strb	r2, [r3, #0]
 802678e:	2101      	movs	r1, #1
 8026790:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026792:	f002 fe7f 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026796:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8026798:	685b      	ldr	r3, [r3, #4]
 802679a:	2200      	movs	r2, #0
 802679c:	701a      	strb	r2, [r3, #0]
 802679e:	2101      	movs	r1, #1
 80267a0:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80267a2:	f002 fe77 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80267a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80267a8:	685b      	ldr	r3, [r3, #4]
 80267aa:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80267ac:	f892 2061 	ldrb.w	r2, [r2, #97]	; 0x61
 80267b0:	701a      	strb	r2, [r3, #0]
 80267b2:	2104      	movs	r1, #4
 80267b4:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80267b6:	f002 fe6d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80267ba:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80267bc:	8a5a      	ldrh	r2, [r3, #18]
 80267be:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80267c0:	685b      	ldr	r3, [r3, #4]
 80267c2:	b2d2      	uxtb	r2, r2
 80267c4:	701a      	strb	r2, [r3, #0]
 80267c6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80267c8:	685b      	ldr	r3, [r3, #4]
 80267ca:	2202      	movs	r2, #2
 80267cc:	705a      	strb	r2, [r3, #1]
 80267ce:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80267d0:	685b      	ldr	r3, [r3, #4]
 80267d2:	1c9c      	adds	r4, r3, #2
 80267d4:	2005      	movs	r0, #5
 80267d6:	f7e6 fc11 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80267da:	4603      	mov	r3, r0
 80267dc:	1c5d      	adds	r5, r3, #1
 80267de:	2002      	movs	r0, #2
 80267e0:	f7e6 fc0c 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 80267e4:	4603      	mov	r3, r0
 80267e6:	3301      	adds	r3, #1
 80267e8:	462a      	mov	r2, r5
 80267ea:	4621      	mov	r1, r4
 80267ec:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80267ee:	f002 ff74 	bl	80296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>
 80267f2:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80267f4:	f7fe fc88 	bl	8025108 <966a9fb75e08bd6bd3b3054de298215c3cbec82e>
 80267f8:	4603      	mov	r3, r0
 80267fa:	2b00      	cmp	r3, #0
 80267fc:	d03f      	beq.n	802687e <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2ba>
 80267fe:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026800:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8026802:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8026806:	4a33      	ldr	r2, [pc, #204]	; (80268d4 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x310>)
 8026808:	f107 0314 	add.w	r3, r7, #20
 802680c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026810:	e883 0003 	stmia.w	r3, {r0, r1}
 8026814:	4a30      	ldr	r2, [pc, #192]	; (80268d8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x314>)
 8026816:	f107 0314 	add.w	r3, r7, #20
 802681a:	e893 0003 	ldmia.w	r3, {r0, r1}
 802681e:	f7ee fcf3 	bl	8015208 <LOGGER_PrintLine>
 8026822:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026824:	f893 4095 	ldrb.w	r4, [r3, #149]	; 0x95
 8026828:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 802682a:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 802682e:	461a      	mov	r2, r3
 8026830:	4b2a      	ldr	r3, [pc, #168]	; (80268dc <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x318>)
 8026832:	fa03 f202 	lsl.w	r2, r3, r2
 8026836:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026838:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 802683c:	4619      	mov	r1, r3
 802683e:	4b27      	ldr	r3, [pc, #156]	; (80268dc <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x318>)
 8026840:	408b      	lsls	r3, r1
 8026842:	2b00      	cmp	r3, #0
 8026844:	da00      	bge.n	8026848 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x284>
 8026846:	3303      	adds	r3, #3
 8026848:	109b      	asrs	r3, r3, #2
 802684a:	4619      	mov	r1, r3
 802684c:	4610      	mov	r0, r2
 802684e:	f7eb fb87 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 8026852:	4602      	mov	r2, r0
 8026854:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026856:	9300      	str	r3, [sp, #0]
 8026858:	4b1b      	ldr	r3, [pc, #108]	; (80268c8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x304>)
 802685a:	2101      	movs	r1, #1
 802685c:	4620      	mov	r0, r4
 802685e:	f7eb f82b 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8026862:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026864:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8026868:	2b05      	cmp	r3, #5
 802686a:	d825      	bhi.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 802686c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 802686e:	f893 3094 	ldrb.w	r3, [r3, #148]	; 0x94
 8026872:	3301      	adds	r3, #1
 8026874:	b2da      	uxtb	r2, r3
 8026876:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8026878:	f883 2094 	strb.w	r2, [r3, #148]	; 0x94
 802687c:	e01c      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 802687e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8026880:	f7e9 f864 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 8026884:	4a16      	ldr	r2, [pc, #88]	; (80268e0 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x31c>)
 8026886:	f107 030c 	add.w	r3, r7, #12
 802688a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802688e:	e883 0003 	stmia.w	r3, {r0, r1}
 8026892:	4a14      	ldr	r2, [pc, #80]	; (80268e4 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x320>)
 8026894:	f107 030c 	add.w	r3, r7, #12
 8026898:	e893 0003 	ldmia.w	r3, {r0, r1}
 802689c:	f7ee fcb4 	bl	8015208 <LOGGER_PrintLine>
 80268a0:	e00a      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268a2:	bf00      	nop
 80268a4:	e008      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268a6:	bf00      	nop
 80268a8:	e006      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268aa:	bf00      	nop
 80268ac:	e004      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268ae:	bf00      	nop
 80268b0:	e002      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268b2:	bf00      	nop
 80268b4:	e000      	b.n	80268b8 <2286051897e6bbb22857e9c9a8dc75ab84e05da9+0x2f4>
 80268b6:	bf00      	nop
 80268b8:	3760      	adds	r7, #96	; 0x60
 80268ba:	46bd      	mov	sp, r7
 80268bc:	bdb0      	pop	{r4, r5, r7, pc}
 80268be:	bf00      	nop
 80268c0:	01312d00 	.word	0x01312d00
 80268c4:	00989680 	.word	0x00989680
 80268c8:	080265c5 	.word	0x080265c5
 80268cc:	08030e9c 	.word	0x08030e9c
 80268d0:	08030fdc 	.word	0x08030fdc
 80268d4:	08030ea4 	.word	0x08030ea4
 80268d8:	08030ff4 	.word	0x08030ff4
 80268dc:	01c9c380 	.word	0x01c9c380
 80268e0:	08030eac 	.word	0x08030eac
 80268e4:	08031008 	.word	0x08031008

080268e8 <e1f51aec36766790a9d7657a41d61426b11f2b8a>:
 80268e8:	b590      	push	{r4, r7, lr}
 80268ea:	b085      	sub	sp, #20
 80268ec:	af02      	add	r7, sp, #8
 80268ee:	4b14      	ldr	r3, [pc, #80]	; (8026940 <e1f51aec36766790a9d7657a41d61426b11f2b8a+0x58>)
 80268f0:	681b      	ldr	r3, [r3, #0]
 80268f2:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80268f6:	607b      	str	r3, [r7, #4]
 80268f8:	687b      	ldr	r3, [r7, #4]
 80268fa:	2200      	movs	r2, #0
 80268fc:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8026900:	687b      	ldr	r3, [r7, #4]
 8026902:	2200      	movs	r2, #0
 8026904:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026908:	687b      	ldr	r3, [r7, #4]
 802690a:	2200      	movs	r2, #0
 802690c:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8026910:	687b      	ldr	r3, [r7, #4]
 8026912:	2202      	movs	r2, #2
 8026914:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8026918:	687b      	ldr	r3, [r7, #4]
 802691a:	f893 408c 	ldrb.w	r4, [r3, #140]	; 0x8c
 802691e:	4909      	ldr	r1, [pc, #36]	; (8026944 <e1f51aec36766790a9d7657a41d61426b11f2b8a+0x5c>)
 8026920:	4809      	ldr	r0, [pc, #36]	; (8026948 <e1f51aec36766790a9d7657a41d61426b11f2b8a+0x60>)
 8026922:	f7eb fb1d 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 8026926:	4602      	mov	r2, r0
 8026928:	687b      	ldr	r3, [r7, #4]
 802692a:	9300      	str	r3, [sp, #0]
 802692c:	4b07      	ldr	r3, [pc, #28]	; (802694c <e1f51aec36766790a9d7657a41d61426b11f2b8a+0x64>)
 802692e:	2101      	movs	r1, #1
 8026930:	4620      	mov	r0, r4
 8026932:	f7ea ffc1 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8026936:	bf00      	nop
 8026938:	370c      	adds	r7, #12
 802693a:	46bd      	mov	sp, r7
 802693c:	bd90      	pop	{r4, r7, pc}
 802693e:	bf00      	nop
 8026940:	20000040 	.word	0x20000040
 8026944:	01312d00 	.word	0x01312d00
 8026948:	00989680 	.word	0x00989680
 802694c:	08026b4d 	.word	0x08026b4d

08026950 <43cc35f40acb52f42fa1199cee254d1023926eea>:
 8026950:	b580      	push	{r7, lr}
 8026952:	b082      	sub	sp, #8
 8026954:	af00      	add	r7, sp, #0
 8026956:	4b13      	ldr	r3, [pc, #76]	; (80269a4 <43cc35f40acb52f42fa1199cee254d1023926eea+0x54>)
 8026958:	681b      	ldr	r3, [r3, #0]
 802695a:	f503 730c 	add.w	r3, r3, #560	; 0x230
 802695e:	607b      	str	r3, [r7, #4]
 8026960:	687b      	ldr	r3, [r7, #4]
 8026962:	2200      	movs	r2, #0
 8026964:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8026968:	687b      	ldr	r3, [r7, #4]
 802696a:	2200      	movs	r2, #0
 802696c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026970:	687b      	ldr	r3, [r7, #4]
 8026972:	2200      	movs	r2, #0
 8026974:	f883 2081 	strb.w	r2, [r3, #129]	; 0x81
 8026978:	687b      	ldr	r3, [r7, #4]
 802697a:	2200      	movs	r2, #0
 802697c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8026980:	687b      	ldr	r3, [r7, #4]
 8026982:	f893 308c 	ldrb.w	r3, [r3, #140]	; 0x8c
 8026986:	4618      	mov	r0, r3
 8026988:	f7eb f89c 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 802698c:	687b      	ldr	r3, [r7, #4]
 802698e:	2200      	movs	r2, #0
 8026990:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8026994:	687b      	ldr	r3, [r7, #4]
 8026996:	2202      	movs	r2, #2
 8026998:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 802699c:	bf00      	nop
 802699e:	3708      	adds	r7, #8
 80269a0:	46bd      	mov	sp, r7
 80269a2:	bd80      	pop	{r7, pc}
 80269a4:	20000040 	.word	0x20000040

080269a8 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5>:
 80269a8:	b590      	push	{r4, r7, lr}
 80269aa:	b085      	sub	sp, #20
 80269ac:	af02      	add	r7, sp, #8
 80269ae:	4b0c      	ldr	r3, [pc, #48]	; (80269e0 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5+0x38>)
 80269b0:	681b      	ldr	r3, [r3, #0]
 80269b2:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80269b6:	607b      	str	r3, [r7, #4]
 80269b8:	687b      	ldr	r3, [r7, #4]
 80269ba:	f893 408c 	ldrb.w	r4, [r3, #140]	; 0x8c
 80269be:	4909      	ldr	r1, [pc, #36]	; (80269e4 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5+0x3c>)
 80269c0:	4809      	ldr	r0, [pc, #36]	; (80269e8 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5+0x40>)
 80269c2:	f7eb facd 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 80269c6:	4602      	mov	r2, r0
 80269c8:	687b      	ldr	r3, [r7, #4]
 80269ca:	9300      	str	r3, [sp, #0]
 80269cc:	4b07      	ldr	r3, [pc, #28]	; (80269ec <fe525efb3be16854cf2fbf621c3bc3a516eb40e5+0x44>)
 80269ce:	2101      	movs	r1, #1
 80269d0:	4620      	mov	r0, r4
 80269d2:	f7ea ff71 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 80269d6:	bf00      	nop
 80269d8:	370c      	adds	r7, #12
 80269da:	46bd      	mov	sp, r7
 80269dc:	bd90      	pop	{r4, r7, pc}
 80269de:	bf00      	nop
 80269e0:	20000040 	.word	0x20000040
 80269e4:	00e4e1c0 	.word	0x00e4e1c0
 80269e8:	03938700 	.word	0x03938700
 80269ec:	080269f1 	.word	0x080269f1

080269f0 <0e7260d9ec263799a3774447fe3c1a059b19a3b3>:
 80269f0:	b580      	push	{r7, lr}
 80269f2:	b084      	sub	sp, #16
 80269f4:	af00      	add	r7, sp, #0
 80269f6:	6078      	str	r0, [r7, #4]
 80269f8:	687b      	ldr	r3, [r7, #4]
 80269fa:	60fb      	str	r3, [r7, #12]
 80269fc:	68fb      	ldr	r3, [r7, #12]
 80269fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8026a02:	2b00      	cmp	r3, #0
 8026a04:	d009      	beq.n	8026a1a <0e7260d9ec263799a3774447fe3c1a059b19a3b3+0x2a>
 8026a06:	68fb      	ldr	r3, [r7, #12]
 8026a08:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8026a0c:	1e5a      	subs	r2, r3, #1
 8026a0e:	68fb      	ldr	r3, [r7, #12]
 8026a10:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026a14:	f7ff ffc8 	bl	80269a8 <fe525efb3be16854cf2fbf621c3bc3a516eb40e5>
 8026a18:	e01e      	b.n	8026a58 <0e7260d9ec263799a3774447fe3c1a059b19a3b3+0x68>
 8026a1a:	68fb      	ldr	r3, [r7, #12]
 8026a1c:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8026a20:	2b04      	cmp	r3, #4
 8026a22:	d807      	bhi.n	8026a34 <0e7260d9ec263799a3774447fe3c1a059b19a3b3+0x44>
 8026a24:	68fb      	ldr	r3, [r7, #12]
 8026a26:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8026a2a:	3301      	adds	r3, #1
 8026a2c:	b2da      	uxtb	r2, r3
 8026a2e:	68fb      	ldr	r3, [r7, #12]
 8026a30:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8026a34:	68fb      	ldr	r3, [r7, #12]
 8026a36:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 8026a3a:	3301      	adds	r3, #1
 8026a3c:	2201      	movs	r2, #1
 8026a3e:	fa02 f303 	lsl.w	r3, r2, r3
 8026a42:	4619      	mov	r1, r3
 8026a44:	2000      	movs	r0, #0
 8026a46:	f7eb fa49 	bl	8011edc <7694f58d16cb666949a4f0727c30967f32581954>
 8026a4a:	4602      	mov	r2, r0
 8026a4c:	68fb      	ldr	r3, [r7, #12]
 8026a4e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026a52:	6878      	ldr	r0, [r7, #4]
 8026a54:	f000 f87a 	bl	8026b4c <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897>
 8026a58:	bf00      	nop
 8026a5a:	3710      	adds	r7, #16
 8026a5c:	46bd      	mov	sp, r7
 8026a5e:	bd80      	pop	{r7, pc}

08026a60 <8495929e13f55eda4e8148e511dfd6898419e338>:
 8026a60:	b580      	push	{r7, lr}
 8026a62:	b08c      	sub	sp, #48	; 0x30
 8026a64:	af02      	add	r7, sp, #8
 8026a66:	6078      	str	r0, [r7, #4]
 8026a68:	687b      	ldr	r3, [r7, #4]
 8026a6a:	627b      	str	r3, [r7, #36]	; 0x24
 8026a6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026a6e:	f893 3083 	ldrb.w	r3, [r3, #131]	; 0x83
 8026a72:	2b00      	cmp	r3, #0
 8026a74:	d044      	beq.n	8026b00 <8495929e13f55eda4e8148e511dfd6898419e338+0xa0>
 8026a76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026a78:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8026a7c:	2b00      	cmp	r3, #0
 8026a7e:	d02e      	beq.n	8026ade <8495929e13f55eda4e8148e511dfd6898419e338+0x7e>
 8026a80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026a82:	f893 307f 	ldrb.w	r3, [r3, #127]	; 0x7f
 8026a86:	2b00      	cmp	r3, #0
 8026a88:	d029      	beq.n	8026ade <8495929e13f55eda4e8148e511dfd6898419e338+0x7e>
 8026a8a:	4a28      	ldr	r2, [pc, #160]	; (8026b2c <8495929e13f55eda4e8148e511dfd6898419e338+0xcc>)
 8026a8c:	f107 031c 	add.w	r3, r7, #28
 8026a90:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026a94:	e883 0003 	stmia.w	r3, {r0, r1}
 8026a98:	4a25      	ldr	r2, [pc, #148]	; (8026b30 <8495929e13f55eda4e8148e511dfd6898419e338+0xd0>)
 8026a9a:	f107 031c 	add.w	r3, r7, #28
 8026a9e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026aa2:	f7ee fbb1 	bl	8015208 <LOGGER_PrintLine>
 8026aa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026aa8:	f893 3082 	ldrb.w	r3, [r3, #130]	; 0x82
 8026aac:	3b01      	subs	r3, #1
 8026aae:	b2da      	uxtb	r2, r3
 8026ab0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026ab2:	f883 2082 	strb.w	r2, [r3, #130]	; 0x82
 8026ab6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026ab8:	2200      	movs	r2, #0
 8026aba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8026abe:	2212      	movs	r2, #18
 8026ac0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8026ac2:	481c      	ldr	r0, [pc, #112]	; (8026b34 <8495929e13f55eda4e8148e511dfd6898419e338+0xd4>)
 8026ac4:	f7ec fd28 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8026ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026aca:	f893 008c 	ldrb.w	r0, [r3, #140]	; 0x8c
 8026ace:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8026ad0:	9300      	str	r3, [sp, #0]
 8026ad2:	4b19      	ldr	r3, [pc, #100]	; (8026b38 <8495929e13f55eda4e8148e511dfd6898419e338+0xd8>)
 8026ad4:	4a19      	ldr	r2, [pc, #100]	; (8026b3c <8495929e13f55eda4e8148e511dfd6898419e338+0xdc>)
 8026ad6:	2101      	movs	r1, #1
 8026ad8:	f7ea feee 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8026adc:	e021      	b.n	8026b22 <8495929e13f55eda4e8148e511dfd6898419e338+0xc2>
 8026ade:	4a18      	ldr	r2, [pc, #96]	; (8026b40 <8495929e13f55eda4e8148e511dfd6898419e338+0xe0>)
 8026ae0:	f107 0314 	add.w	r3, r7, #20
 8026ae4:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026ae8:	e883 0003 	stmia.w	r3, {r0, r1}
 8026aec:	4a15      	ldr	r2, [pc, #84]	; (8026b44 <8495929e13f55eda4e8148e511dfd6898419e338+0xe4>)
 8026aee:	f107 0314 	add.w	r3, r7, #20
 8026af2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026af6:	f7ee fb87 	bl	8015208 <LOGGER_PrintLine>
 8026afa:	f7f4 f8bb 	bl	801ac74 <2fba4ddec868eb31998278adcb690f685bb9d2cf>
 8026afe:	e010      	b.n	8026b22 <8495929e13f55eda4e8148e511dfd6898419e338+0xc2>
 8026b00:	4a0a      	ldr	r2, [pc, #40]	; (8026b2c <8495929e13f55eda4e8148e511dfd6898419e338+0xcc>)
 8026b02:	f107 030c 	add.w	r3, r7, #12
 8026b06:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026b0a:	e883 0003 	stmia.w	r3, {r0, r1}
 8026b0e:	4a0e      	ldr	r2, [pc, #56]	; (8026b48 <8495929e13f55eda4e8148e511dfd6898419e338+0xe8>)
 8026b10:	f107 030c 	add.w	r3, r7, #12
 8026b14:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026b18:	f7ee fb76 	bl	8015208 <LOGGER_PrintLine>
 8026b1c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8026b1e:	f000 f815 	bl	8026b4c <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897>
 8026b22:	bf00      	nop
 8026b24:	3728      	adds	r7, #40	; 0x28
 8026b26:	46bd      	mov	sp, r7
 8026b28:	bd80      	pop	{r7, pc}
 8026b2a:	bf00      	nop
 8026b2c:	08030e9c 	.word	0x08030e9c
 8026b30:	08031028 	.word	0x08031028
 8026b34:	08026b4d 	.word	0x08026b4d
 8026b38:	08026a61 	.word	0x08026a61
 8026b3c:	01312d00 	.word	0x01312d00
 8026b40:	080310a0 	.word	0x080310a0
 8026b44:	08031048 	.word	0x08031048
 8026b48:	08031068 	.word	0x08031068

08026b4c <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897>:
 8026b4c:	b5b0      	push	{r4, r5, r7, lr}
 8026b4e:	b0a0      	sub	sp, #128	; 0x80
 8026b50:	af02      	add	r7, sp, #8
 8026b52:	6078      	str	r0, [r7, #4]
 8026b54:	687b      	ldr	r3, [r7, #4]
 8026b56:	66bb      	str	r3, [r7, #104]	; 0x68
 8026b58:	f7f4 f880 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 8026b5c:	4603      	mov	r3, r0
 8026b5e:	f083 0301 	eor.w	r3, r3, #1
 8026b62:	b2db      	uxtb	r3, r3
 8026b64:	2b00      	cmp	r3, #0
 8026b66:	f040 81a3 	bne.w	8026eb0 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x364>
 8026b6a:	f7e6 fa03 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8026b6e:	4603      	mov	r3, r0
 8026b70:	2b00      	cmp	r3, #0
 8026b72:	f040 819f 	bne.w	8026eb4 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x368>
 8026b76:	f7fe ff2d 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8026b7a:	4603      	mov	r3, r0
 8026b7c:	461a      	mov	r2, r3
 8026b7e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026b82:	429a      	cmp	r2, r3
 8026b84:	f000 8198 	beq.w	8026eb8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x36c>
 8026b88:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8026b8c:	2200      	movs	r2, #0
 8026b8e:	601a      	str	r2, [r3, #0]
 8026b90:	605a      	str	r2, [r3, #4]
 8026b92:	609a      	str	r2, [r3, #8]
 8026b94:	60da      	str	r2, [r3, #12]
 8026b96:	741a      	strb	r2, [r3, #16]
 8026b98:	2302      	movs	r3, #2
 8026b9a:	f887 3048 	strb.w	r3, [r7, #72]	; 0x48
 8026b9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8026ba2:	3301      	adds	r3, #1
 8026ba4:	4619      	mov	r1, r3
 8026ba6:	2000      	movs	r0, #0
 8026ba8:	f7e7 fae2 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8026bac:	4603      	mov	r3, r0
 8026bae:	f083 0301 	eor.w	r3, r3, #1
 8026bb2:	b2db      	uxtb	r3, r3
 8026bb4:	2b00      	cmp	r3, #0
 8026bb6:	d107      	bne.n	8026bc8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x7c>
 8026bb8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8026bbc:	4618      	mov	r0, r3
 8026bbe:	f7f6 fb63 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 8026bc2:	4603      	mov	r3, r0
 8026bc4:	2b00      	cmp	r3, #0
 8026bc6:	d107      	bne.n	8026bd8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x8c>
 8026bc8:	2073      	movs	r0, #115	; 0x73
 8026bca:	f7e8 ff23 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8026bce:	f7ff fcdd 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8026bd2:	f7ff febd 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8026bd6:	e170      	b.n	8026eba <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x36e>
 8026bd8:	2073      	movs	r0, #115	; 0x73
 8026bda:	f7e8 fdab 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8026bde:	6678      	str	r0, [r7, #100]	; 0x64
 8026be0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026be2:	2b00      	cmp	r3, #0
 8026be4:	d10e      	bne.n	8026c04 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0xb8>
 8026be6:	4ab6      	ldr	r2, [pc, #728]	; (8026ec0 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x374>)
 8026be8:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8026bec:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026bf0:	e883 0003 	stmia.w	r3, {r0, r1}
 8026bf4:	4ab3      	ldr	r2, [pc, #716]	; (8026ec4 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x378>)
 8026bf6:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8026bfa:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026bfe:	f7ee fb03 	bl	8015208 <LOGGER_PrintLine>
 8026c02:	e146      	b.n	8026e92 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x346>
 8026c04:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c06:	2273      	movs	r2, #115	; 0x73
 8026c08:	701a      	strb	r2, [r3, #0]
 8026c0a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c0c:	2273      	movs	r2, #115	; 0x73
 8026c0e:	705a      	strb	r2, [r3, #1]
 8026c10:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c12:	223a      	movs	r2, #58	; 0x3a
 8026c14:	741a      	strb	r2, [r3, #16]
 8026c16:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c18:	229b      	movs	r2, #155	; 0x9b
 8026c1a:	825a      	strh	r2, [r3, #18]
 8026c1c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c1e:	2203      	movs	r2, #3
 8026c20:	775a      	strb	r2, [r3, #29]
 8026c22:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c24:	f103 001e 	add.w	r0, r3, #30
 8026c28:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026c2a:	3308      	adds	r3, #8
 8026c2c:	2210      	movs	r2, #16
 8026c2e:	4619      	mov	r1, r3
 8026c30:	f004 fb01 	bl	802b236 <memcpy>
 8026c34:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8026c38:	2200      	movs	r2, #0
 8026c3a:	4619      	mov	r1, r3
 8026c3c:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026c3e:	f002 fbf1 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8026c42:	2005      	movs	r0, #5
 8026c44:	f7e6 f9da 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026c48:	6638      	str	r0, [r7, #96]	; 0x60
 8026c4a:	2200      	movs	r2, #0
 8026c4c:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8026c4e:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026c50:	f002 fbe8 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8026c54:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026c56:	2214      	movs	r2, #20
 8026c58:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8026c5c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026c5e:	2200      	movs	r2, #0
 8026c60:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
 8026c64:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026c66:	2206      	movs	r2, #6
 8026c68:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8026c6c:	2300      	movs	r3, #0
 8026c6e:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 8026c72:	2106      	movs	r1, #6
 8026c74:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026c76:	f002 fc0d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026c7a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026c7c:	6858      	ldr	r0, [r3, #4]
 8026c7e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026c80:	3375      	adds	r3, #117	; 0x75
 8026c82:	2206      	movs	r2, #6
 8026c84:	4619      	mov	r1, r3
 8026c86:	f004 fad6 	bl	802b236 <memcpy>
 8026c8a:	f000 ff81 	bl	8027b90 <84780c9f08e19cea1884da40f03f0c5650f281d0>
 8026c8e:	65f8      	str	r0, [r7, #92]	; 0x5c
 8026c90:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8026c92:	2b00      	cmp	r3, #0
 8026c94:	d035      	beq.n	8026d02 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x1b6>
 8026c96:	2300      	movs	r3, #0
 8026c98:	673b      	str	r3, [r7, #112]	; 0x70
 8026c9a:	e02d      	b.n	8026cf8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x1ac>
 8026c9c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8026ca0:	4619      	mov	r1, r3
 8026ca2:	6f38      	ldr	r0, [r7, #112]	; 0x70
 8026ca4:	f000 ff9a 	bl	8027bdc <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e>
 8026ca8:	4603      	mov	r3, r0
 8026caa:	2b00      	cmp	r3, #0
 8026cac:	d021      	beq.n	8026cf2 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x1a6>
 8026cae:	2102      	movs	r1, #2
 8026cb0:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026cb2:	f002 fbef 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026cb6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026cb8:	685b      	ldr	r3, [r3, #4]
 8026cba:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 8026cbc:	801a      	strh	r2, [r3, #0]
 8026cbe:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026cc0:	2204      	movs	r2, #4
 8026cc2:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8026cc6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026cc8:	2205      	movs	r2, #5
 8026cca:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
 8026cce:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026cd0:	2200      	movs	r2, #0
 8026cd2:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
 8026cd6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026cd8:	2210      	movs	r2, #16
 8026cda:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
 8026cde:	2104      	movs	r1, #4
 8026ce0:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026ce2:	f002 fbd7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026ce6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026ce8:	685b      	ldr	r3, [r3, #4]
 8026cea:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8026cec:	327b      	adds	r2, #123	; 0x7b
 8026cee:	6812      	ldr	r2, [r2, #0]
 8026cf0:	601a      	str	r2, [r3, #0]
 8026cf2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8026cf4:	3301      	adds	r3, #1
 8026cf6:	673b      	str	r3, [r7, #112]	; 0x70
 8026cf8:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8026cfa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8026cfc:	429a      	cmp	r2, r3
 8026cfe:	d3cd      	bcc.n	8026c9c <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x150>
 8026d00:	e064      	b.n	8026dcc <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x280>
 8026d02:	2300      	movs	r3, #0
 8026d04:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 8026d08:	2300      	movs	r3, #0
 8026d0a:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8026d0e:	e057      	b.n	8026dc0 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x274>
 8026d10:	f7fe fe60 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8026d14:	4603      	mov	r3, r0
 8026d16:	461a      	mov	r2, r3
 8026d18:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8026d1c:	4611      	mov	r1, r2
 8026d1e:	4618      	mov	r0, r3
 8026d20:	f7e6 fe8c 	bl	800da3c <91ad02464a5553c72b508f812e77f83c74a657ed>
 8026d24:	4603      	mov	r3, r0
 8026d26:	2b00      	cmp	r3, #0
 8026d28:	d041      	beq.n	8026dae <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x262>
 8026d2a:	f107 0318 	add.w	r3, r7, #24
 8026d2e:	2200      	movs	r2, #0
 8026d30:	601a      	str	r2, [r3, #0]
 8026d32:	605a      	str	r2, [r3, #4]
 8026d34:	609a      	str	r2, [r3, #8]
 8026d36:	60da      	str	r2, [r3, #12]
 8026d38:	741a      	strb	r2, [r3, #16]
 8026d3a:	2302      	movs	r3, #2
 8026d3c:	763b      	strb	r3, [r7, #24]
 8026d3e:	f107 0318 	add.w	r3, r7, #24
 8026d42:	1c5a      	adds	r2, r3, #1
 8026d44:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8026d48:	4611      	mov	r1, r2
 8026d4a:	4618      	mov	r0, r3
 8026d4c:	f7e7 f964 	bl	800e018 <b7be15738b198492e50cb8023d171fca112169af>
 8026d50:	f107 0318 	add.w	r3, r7, #24
 8026d54:	2200      	movs	r2, #0
 8026d56:	4619      	mov	r1, r3
 8026d58:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026d5a:	f002 fb63 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8026d5e:	2005      	movs	r0, #5
 8026d60:	f7e6 f94c 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026d64:	6638      	str	r0, [r7, #96]	; 0x60
 8026d66:	2200      	movs	r2, #0
 8026d68:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8026d6a:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026d6c:	f002 fb5a 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 8026d70:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026d72:	2212      	movs	r2, #18
 8026d74:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 8026d78:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026d7a:	2205      	movs	r2, #5
 8026d7c:	f883 207b 	strb.w	r2, [r3, #123]	; 0x7b
 8026d80:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026d82:	2200      	movs	r2, #0
 8026d84:	f883 207d 	strb.w	r2, [r3, #125]	; 0x7d
 8026d88:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026d8a:	2280      	movs	r2, #128	; 0x80
 8026d8c:	f883 207e 	strb.w	r2, [r3, #126]	; 0x7e
 8026d90:	2104      	movs	r1, #4
 8026d92:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026d94:	f002 fb7e 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026d98:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026d9a:	685b      	ldr	r3, [r3, #4]
 8026d9c:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8026d9e:	327b      	adds	r2, #123	; 0x7b
 8026da0:	6812      	ldr	r2, [r2, #0]
 8026da2:	601a      	str	r2, [r3, #0]
 8026da4:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8026da8:	3301      	adds	r3, #1
 8026daa:	f887 3077 	strb.w	r3, [r7, #119]	; 0x77
 8026dae:	f897 3077 	ldrb.w	r3, [r7, #119]	; 0x77
 8026db2:	2b00      	cmp	r3, #0
 8026db4:	d109      	bne.n	8026dca <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x27e>
 8026db6:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8026dba:	3301      	adds	r3, #1
 8026dbc:	f887 306f 	strb.w	r3, [r7, #111]	; 0x6f
 8026dc0:	f897 306f 	ldrb.w	r3, [r7, #111]	; 0x6f
 8026dc4:	2b09      	cmp	r3, #9
 8026dc6:	d9a3      	bls.n	8026d10 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x1c4>
 8026dc8:	e000      	b.n	8026dcc <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x280>
 8026dca:	bf00      	nop
 8026dcc:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026dce:	f893 3079 	ldrb.w	r3, [r3, #121]	; 0x79
 8026dd2:	3301      	adds	r3, #1
 8026dd4:	b2da      	uxtb	r2, r3
 8026dd6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026dd8:	f883 2079 	strb.w	r2, [r3, #121]	; 0x79
 8026ddc:	2114      	movs	r1, #20
 8026dde:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026de0:	f002 fb58 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026de4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026de6:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
 8026dea:	3301      	adds	r3, #1
 8026dec:	b2da      	uxtb	r2, r3
 8026dee:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026df0:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8026df4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026df6:	6858      	ldr	r0, [r3, #4]
 8026df8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026dfa:	3361      	adds	r3, #97	; 0x61
 8026dfc:	2214      	movs	r2, #20
 8026dfe:	4619      	mov	r1, r3
 8026e00:	f004 fa19 	bl	802b236 <memcpy>
 8026e04:	2104      	movs	r1, #4
 8026e06:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026e08:	f002 fb44 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8026e0c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026e0e:	8a5a      	ldrh	r2, [r3, #18]
 8026e10:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026e12:	685b      	ldr	r3, [r3, #4]
 8026e14:	b2d2      	uxtb	r2, r2
 8026e16:	701a      	strb	r2, [r3, #0]
 8026e18:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026e1a:	685b      	ldr	r3, [r3, #4]
 8026e1c:	2202      	movs	r2, #2
 8026e1e:	705a      	strb	r2, [r3, #1]
 8026e20:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8026e22:	685b      	ldr	r3, [r3, #4]
 8026e24:	1c9c      	adds	r4, r3, #2
 8026e26:	2005      	movs	r0, #5
 8026e28:	f7e6 f8e8 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026e2c:	4603      	mov	r3, r0
 8026e2e:	1c5d      	adds	r5, r3, #1
 8026e30:	2002      	movs	r0, #2
 8026e32:	f7e6 f8e3 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8026e36:	4603      	mov	r3, r0
 8026e38:	3301      	adds	r3, #1
 8026e3a:	462a      	mov	r2, r5
 8026e3c:	4621      	mov	r1, r4
 8026e3e:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026e40:	f002 fc4b 	bl	80296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>
 8026e44:	6e78      	ldr	r0, [r7, #100]	; 0x64
 8026e46:	f7fe f95f 	bl	8025108 <966a9fb75e08bd6bd3b3054de298215c3cbec82e>
 8026e4a:	4603      	mov	r3, r0
 8026e4c:	2b00      	cmp	r3, #0
 8026e4e:	d012      	beq.n	8026e76 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x32a>
 8026e50:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026e52:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8026e54:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8026e58:	4a1b      	ldr	r2, [pc, #108]	; (8026ec8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x37c>)
 8026e5a:	f107 0310 	add.w	r3, r7, #16
 8026e5e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026e62:	e883 0003 	stmia.w	r3, {r0, r1}
 8026e66:	4a19      	ldr	r2, [pc, #100]	; (8026ecc <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x380>)
 8026e68:	f107 0310 	add.w	r3, r7, #16
 8026e6c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026e70:	f7ee f9ca 	bl	8015208 <LOGGER_PrintLine>
 8026e74:	e00d      	b.n	8026e92 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x346>
 8026e76:	4a16      	ldr	r2, [pc, #88]	; (8026ed0 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x384>)
 8026e78:	f107 0308 	add.w	r3, r7, #8
 8026e7c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8026e80:	e883 0003 	stmia.w	r3, {r0, r1}
 8026e84:	4a13      	ldr	r2, [pc, #76]	; (8026ed4 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x388>)
 8026e86:	f107 0308 	add.w	r3, r7, #8
 8026e8a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8026e8e:	f7ee f9bb 	bl	8015208 <LOGGER_PrintLine>
 8026e92:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026e94:	2201      	movs	r2, #1
 8026e96:	f883 2083 	strb.w	r2, [r3, #131]	; 0x83
 8026e9a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026e9c:	f893 008c 	ldrb.w	r0, [r3, #140]	; 0x8c
 8026ea0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8026ea2:	9300      	str	r3, [sp, #0]
 8026ea4:	4b0c      	ldr	r3, [pc, #48]	; (8026ed8 <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x38c>)
 8026ea6:	4a0d      	ldr	r2, [pc, #52]	; (8026edc <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x390>)
 8026ea8:	2101      	movs	r1, #1
 8026eaa:	f7ea fd05 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 8026eae:	e004      	b.n	8026eba <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x36e>
 8026eb0:	bf00      	nop
 8026eb2:	e002      	b.n	8026eba <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x36e>
 8026eb4:	bf00      	nop
 8026eb6:	e000      	b.n	8026eba <4f4dc29a98d88a83f2cd0a43b93264ecdaee8897+0x36e>
 8026eb8:	bf00      	nop
 8026eba:	3778      	adds	r7, #120	; 0x78
 8026ebc:	46bd      	mov	sp, r7
 8026ebe:	bdb0      	pop	{r4, r5, r7, pc}
 8026ec0:	08030e9c 	.word	0x08030e9c
 8026ec4:	080310a8 	.word	0x080310a8
 8026ec8:	08030ea4 	.word	0x08030ea4
 8026ecc:	080310d4 	.word	0x080310d4
 8026ed0:	08030eac 	.word	0x08030eac
 8026ed4:	080310e8 	.word	0x080310e8
 8026ed8:	08026a61 	.word	0x08026a61
 8026edc:	01312d00 	.word	0x01312d00

08026ee0 <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27>:
 8026ee0:	b590      	push	{r4, r7, lr}
 8026ee2:	b08b      	sub	sp, #44	; 0x2c
 8026ee4:	af00      	add	r7, sp, #0
 8026ee6:	6078      	str	r0, [r7, #4]
 8026ee8:	687b      	ldr	r3, [r7, #4]
 8026eea:	627b      	str	r3, [r7, #36]	; 0x24
 8026eec:	f7e6 f842 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 8026ef0:	4603      	mov	r3, r0
 8026ef2:	f083 0301 	eor.w	r3, r3, #1
 8026ef6:	b2db      	uxtb	r3, r3
 8026ef8:	2b00      	cmp	r3, #0
 8026efa:	d053      	beq.n	8026fa4 <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xc4>
 8026efc:	f107 0310 	add.w	r3, r7, #16
 8026f00:	2200      	movs	r2, #0
 8026f02:	601a      	str	r2, [r3, #0]
 8026f04:	605a      	str	r2, [r3, #4]
 8026f06:	609a      	str	r2, [r3, #8]
 8026f08:	60da      	str	r2, [r3, #12]
 8026f0a:	741a      	strb	r2, [r3, #16]
 8026f0c:	2302      	movs	r3, #2
 8026f0e:	743b      	strb	r3, [r7, #16]
 8026f10:	f7f3 fea4 	bl	801ac5c <60f007314f15c808f67a076d33295282887c81e9>
 8026f14:	4603      	mov	r3, r0
 8026f16:	f083 0301 	eor.w	r3, r3, #1
 8026f1a:	b2db      	uxtb	r3, r3
 8026f1c:	2b00      	cmp	r3, #0
 8026f1e:	d11c      	bne.n	8026f5a <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0x7a>
 8026f20:	f7fe fd58 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8026f24:	4603      	mov	r3, r0
 8026f26:	461a      	mov	r2, r3
 8026f28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026f2c:	429a      	cmp	r2, r3
 8026f2e:	d014      	beq.n	8026f5a <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0x7a>
 8026f30:	f107 0310 	add.w	r3, r7, #16
 8026f34:	3301      	adds	r3, #1
 8026f36:	4619      	mov	r1, r3
 8026f38:	2000      	movs	r0, #0
 8026f3a:	f7e7 f919 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8026f3e:	4603      	mov	r3, r0
 8026f40:	f083 0301 	eor.w	r3, r3, #1
 8026f44:	b2db      	uxtb	r3, r3
 8026f46:	2b00      	cmp	r3, #0
 8026f48:	d107      	bne.n	8026f5a <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0x7a>
 8026f4a:	f107 0310 	add.w	r3, r7, #16
 8026f4e:	4618      	mov	r0, r3
 8026f50:	f7f6 f99a 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 8026f54:	4603      	mov	r3, r0
 8026f56:	2b00      	cmp	r3, #0
 8026f58:	d107      	bne.n	8026f6a <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0x8a>
 8026f5a:	2073      	movs	r0, #115	; 0x73
 8026f5c:	f7e8 fd5a 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8026f60:	f7ff fb14 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8026f64:	f7ff fcf4 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8026f68:	e037      	b.n	8026fda <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xfa>
 8026f6a:	f107 0310 	add.w	r3, r7, #16
 8026f6e:	3301      	adds	r3, #1
 8026f70:	4619      	mov	r1, r3
 8026f72:	2000      	movs	r0, #0
 8026f74:	f7e7 f8fc 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8026f78:	4603      	mov	r3, r0
 8026f7a:	f083 0301 	eor.w	r3, r3, #1
 8026f7e:	b2db      	uxtb	r3, r3
 8026f80:	2b00      	cmp	r3, #0
 8026f82:	d107      	bne.n	8026f94 <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xb4>
 8026f84:	f107 0310 	add.w	r3, r7, #16
 8026f88:	4618      	mov	r0, r3
 8026f8a:	f7f6 f97d 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 8026f8e:	4603      	mov	r3, r0
 8026f90:	2b00      	cmp	r3, #0
 8026f92:	d107      	bne.n	8026fa4 <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xc4>
 8026f94:	2073      	movs	r0, #115	; 0x73
 8026f96:	f7e8 fd3d 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8026f9a:	f7ff faf7 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 8026f9e:	f7ff fcd7 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 8026fa2:	e01a      	b.n	8026fda <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xfa>
 8026fa4:	f7ea ff58 	bl	8011e58 <570d8a765a6a38e2a02d25f1ad3297e0c6b6f6e8>
 8026fa8:	4603      	mov	r3, r0
 8026faa:	461c      	mov	r4, r3
 8026fac:	f7e6 f964 	bl	800d278 <5dd6fb766eeca12f408d546c8d4a40a272e3f785>
 8026fb0:	4603      	mov	r3, r0
 8026fb2:	1c5a      	adds	r2, r3, #1
 8026fb4:	4613      	mov	r3, r2
 8026fb6:	005b      	lsls	r3, r3, #1
 8026fb8:	4413      	add	r3, r2
 8026fba:	005b      	lsls	r3, r3, #1
 8026fbc:	461a      	mov	r2, r3
 8026fbe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026fc2:	fb93 f3f2 	sdiv	r3, r3, r2
 8026fc6:	429c      	cmp	r4, r3
 8026fc8:	da07      	bge.n	8026fda <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xfa>
 8026fca:	f7fe fd7d 	bl	8025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>
 8026fce:	4603      	mov	r3, r0
 8026fd0:	2b00      	cmp	r3, #0
 8026fd2:	d002      	beq.n	8026fda <47b62e5fa1fbf3d47dc80074ea2b6314e74a7a27+0xfa>
 8026fd4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8026fd6:	f7ff f9bf 	bl	8026358 <cef630f5a74a35314667ebee3f885b52bc89b138>
 8026fda:	372c      	adds	r7, #44	; 0x2c
 8026fdc:	46bd      	mov	sp, r7
 8026fde:	bd90      	pop	{r4, r7, pc}

08026fe0 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0>:
 8026fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026fe4:	b0c9      	sub	sp, #292	; 0x124
 8026fe6:	af08      	add	r7, sp, #32
 8026fe8:	61f8      	str	r0, [r7, #28]
 8026fea:	69fb      	ldr	r3, [r7, #28]
 8026fec:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8026ff0:	f7f5 fce6 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 8026ff4:	4603      	mov	r3, r0
 8026ff6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8026ffa:	f7f6 f915 	bl	801d228 <a332c320f50553856ddcee95ff765027b8f3e118>
 8026ffe:	4603      	mov	r3, r0
 8027000:	461a      	mov	r2, r3
 8027002:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8027006:	1a9b      	subs	r3, r3, r2
 8027008:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 802700c:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8027010:	3302      	adds	r3, #2
 8027012:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8027016:	f8d7 20f8 	ldr.w	r2, [r7, #248]	; 0xf8
 802701a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 802701e:	429a      	cmp	r2, r3
 8027020:	d903      	bls.n	802702a <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4a>
 8027022:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8027026:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 802702a:	f7e5 ffa3 	bl	800cf74 <cb03b4776ba370511f18aa83227a6716bbc89321>
 802702e:	4603      	mov	r3, r0
 8027030:	2b00      	cmp	r3, #0
 8027032:	d014      	beq.n	802705e <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7e>
 8027034:	4a7c      	ldr	r2, [pc, #496]	; (8027228 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x248>)
 8027036:	f107 0390 	add.w	r3, r7, #144	; 0x90
 802703a:	e892 0003 	ldmia.w	r2, {r0, r1}
 802703e:	e883 0003 	stmia.w	r3, {r0, r1}
 8027042:	4a7a      	ldr	r2, [pc, #488]	; (802722c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x24c>)
 8027044:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8027048:	e893 0003 	ldmia.w	r3, {r0, r1}
 802704c:	f7ee f8dc 	bl	8015208 <LOGGER_PrintLine>
 8027050:	f000 fed6 	bl	8027e00 <0a971023c987bf5f21422714f0ff94b4a7c15529>
 8027054:	4603      	mov	r3, r0
 8027056:	4618      	mov	r0, r3
 8027058:	f000 fc04 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 802705c:	e3a1      	b.n	80277a2 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7c2>
 802705e:	230a      	movs	r3, #10
 8027060:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8027064:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8027068:	2200      	movs	r2, #0
 802706a:	601a      	str	r2, [r3, #0]
 802706c:	605a      	str	r2, [r3, #4]
 802706e:	609a      	str	r2, [r3, #8]
 8027070:	60da      	str	r2, [r3, #12]
 8027072:	741a      	strb	r2, [r3, #16]
 8027074:	2302      	movs	r3, #2
 8027076:	f887 30b4 	strb.w	r3, [r7, #180]	; 0xb4
 802707a:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 802707e:	1c5a      	adds	r2, r3, #1
 8027080:	f107 03c7 	add.w	r3, r7, #199	; 0xc7
 8027084:	4611      	mov	r1, r2
 8027086:	4618      	mov	r0, r3
 8027088:	f7e7 f872 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 802708c:	4603      	mov	r3, r0
 802708e:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 8027092:	2301      	movs	r3, #1
 8027094:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 8027098:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 802709c:	2b00      	cmp	r3, #0
 802709e:	d008      	beq.n	80270b2 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0xd2>
 80270a0:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 80270a4:	3301      	adds	r3, #1
 80270a6:	4618      	mov	r0, r3
 80270a8:	f7f4 fab2 	bl	801b610 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a>
 80270ac:	4603      	mov	r3, r0
 80270ae:	f887 30f6 	strb.w	r3, [r7, #246]	; 0xf6
 80270b2:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 80270b6:	4618      	mov	r0, r3
 80270b8:	f7f2 fc7e 	bl	80199b8 <21f13ea89246a8f3ee5116c9b445be3be24e58a5>
 80270bc:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 80270c0:	2b00      	cmp	r3, #0
 80270c2:	f000 80a0 	beq.w	8027206 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x226>
 80270c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80270ca:	60bb      	str	r3, [r7, #8]
 80270cc:	f897 30b0 	ldrb.w	r3, [r7, #176]	; 0xb0
 80270d0:	60fb      	str	r3, [r7, #12]
 80270d2:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 80270d6:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 80270da:	4611      	mov	r1, r2
 80270dc:	4618      	mov	r0, r3
 80270de:	f7e6 fa93 	bl	800d608 <7df3ba357f7f62320ead08135508bf101de27d80>
 80270e2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80270e6:	f897 10d4 	ldrb.w	r1, [r7, #212]	; 0xd4
 80270ea:	460b      	mov	r3, r1
 80270ec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80270f0:	4606      	mov	r6, r0
 80270f2:	1ab4      	subs	r4, r6, r2
 80270f4:	eb61 0503 	sbc.w	r5, r1, r3
 80270f8:	603c      	str	r4, [r7, #0]
 80270fa:	f005 03ff 	and.w	r3, r5, #255	; 0xff
 80270fe:	607b      	str	r3, [r7, #4]
 8027100:	e9d7 4500 	ldrd	r4, r5, [r7]
 8027104:	4b4a      	ldr	r3, [pc, #296]	; (8027230 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x250>)
 8027106:	691b      	ldr	r3, [r3, #16]
 8027108:	4a4a      	ldr	r2, [pc, #296]	; (8027234 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x254>)
 802710a:	fbb2 f3f3 	udiv	r3, r2, r3
 802710e:	2200      	movs	r2, #0
 8027110:	4698      	mov	r8, r3
 8027112:	4691      	mov	r9, r2
 8027114:	46c2      	mov	sl, r8
 8027116:	f009 0bff 	and.w	fp, r9, #255	; 0xff
 802711a:	46d0      	mov	r8, sl
 802711c:	46d9      	mov	r9, fp
 802711e:	45a0      	cmp	r8, r4
 8027120:	eb79 0305 	sbcs.w	r3, r9, r5
 8027124:	d21f      	bcs.n	8027166 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x186>
 8027126:	4a40      	ldr	r2, [pc, #256]	; (8027228 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x248>)
 8027128:	f107 0388 	add.w	r3, r7, #136	; 0x88
 802712c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8027130:	e883 0003 	stmia.w	r3, {r0, r1}
 8027134:	4a40      	ldr	r2, [pc, #256]	; (8027238 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x258>)
 8027136:	f107 0388 	add.w	r3, r7, #136	; 0x88
 802713a:	e893 0003 	ldmia.w	r3, {r0, r1}
 802713e:	f7ee f863 	bl	8015208 <LOGGER_PrintLine>
 8027142:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 8027146:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 802714a:	3301      	adds	r3, #1
 802714c:	4619      	mov	r1, r3
 802714e:	4610      	mov	r0, r2
 8027150:	f7fe fce6 	bl	8025b20 <5150c16bb7c98e5d77d974241410b468172cd080>
 8027154:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027158:	2201      	movs	r2, #1
 802715a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 802715e:	2300      	movs	r3, #0
 8027160:	f887 30f7 	strb.w	r3, [r7, #247]	; 0xf7
 8027164:	e04f      	b.n	8027206 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x226>
 8027166:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 802716a:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 802716e:	4611      	mov	r1, r2
 8027170:	4618      	mov	r0, r3
 8027172:	f7e6 f985 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 8027176:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 802717a:	4618      	mov	r0, r3
 802717c:	f7e6 f918 	bl	800d3b0 <8cfb94024ca5b6140fb568011b57a078749e2ff0>
 8027180:	4603      	mov	r3, r0
 8027182:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8027186:	f997 30cc 	ldrsb.w	r3, [r7, #204]	; 0xcc
 802718a:	461c      	mov	r4, r3
 802718c:	f8b7 30c8 	ldrh.w	r3, [r7, #200]	; 0xc8
 8027190:	461d      	mov	r5, r3
 8027192:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 8027196:	461e      	mov	r6, r3
 8027198:	f7f3 fa58 	bl	801a64c <430fd23aeea8952b7b416b6590815371f1106b85>
 802719c:	4603      	mov	r3, r0
 802719e:	9301      	str	r3, [sp, #4]
 80271a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80271a4:	9300      	str	r3, [sp, #0]
 80271a6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80271aa:	4632      	mov	r2, r6
 80271ac:	4629      	mov	r1, r5
 80271ae:	4620      	mov	r0, r4
 80271b0:	f000 fe3c 	bl	8027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>
 80271b4:	4603      	mov	r3, r0
 80271b6:	461a      	mov	r2, r3
 80271b8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80271bc:	4413      	add	r3, r2
 80271be:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80271c2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80271c6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80271ca:	d304      	bcc.n	80271d6 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x1f6>
 80271cc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80271d0:	f000 fb48 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 80271d4:	e017      	b.n	8027206 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x226>
 80271d6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80271da:	b29b      	uxth	r3, r3
 80271dc:	4618      	mov	r0, r3
 80271de:	f000 fb41 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 80271e2:	f7fe fbf7 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80271e6:	4603      	mov	r3, r0
 80271e8:	461a      	mov	r2, r3
 80271ea:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80271ee:	f8b3 309e 	ldrh.w	r3, [r3, #158]	; 0x9e
 80271f2:	429a      	cmp	r2, r3
 80271f4:	d207      	bcs.n	8027206 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x226>
 80271f6:	f7fe fbed 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80271fa:	4603      	mov	r3, r0
 80271fc:	461a      	mov	r2, r3
 80271fe:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027202:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e
 8027206:	2300      	movs	r3, #0
 8027208:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 802720c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027210:	f8a7 30f2 	strh.w	r3, [r7, #242]	; 0xf2
 8027214:	2300      	movs	r3, #0
 8027216:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 802721a:	2301      	movs	r3, #1
 802721c:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 8027220:	2300      	movs	r3, #0
 8027222:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 8027226:	e136      	b.n	8027496 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4b6>
 8027228:	08030e9c 	.word	0x08030e9c
 802722c:	08031104 	.word	0x08031104
 8027230:	080318ac 	.word	0x080318ac
 8027234:	02aea540 	.word	0x02aea540
 8027238:	08031110 	.word	0x08031110
 802723c:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 8027240:	4618      	mov	r0, r3
 8027242:	f7e6 ff21 	bl	800e088 <f978182667c580e22e6ae7bda9ab6a3b6ebffcb1>
 8027246:	4603      	mov	r3, r0
 8027248:	2b00      	cmp	r3, #0
 802724a:	f000 811f 	beq.w	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802724e:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8027252:	f897 20ef 	ldrb.w	r2, [r7, #239]	; 0xef
 8027256:	429a      	cmp	r2, r3
 8027258:	f000 8118 	beq.w	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802725c:	f107 02ac 	add.w	r2, r7, #172	; 0xac
 8027260:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 8027264:	4611      	mov	r1, r2
 8027266:	4618      	mov	r0, r3
 8027268:	f7e6 faee 	bl	800d848 <4f011439265b330ba2d9f164eb1f6389866b01df>
 802726c:	4603      	mov	r3, r0
 802726e:	f083 0301 	eor.w	r3, r3, #1
 8027272:	b2db      	uxtb	r3, r3
 8027274:	2b00      	cmp	r3, #0
 8027276:	f000 8109 	beq.w	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802727a:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 802727e:	4618      	mov	r0, r3
 8027280:	f7e7 fab2 	bl	800e7e8 <5cf48605db24e77c7dc4310895ecb68238b276e7>
 8027284:	4603      	mov	r3, r0
 8027286:	f083 0301 	eor.w	r3, r3, #1
 802728a:	b2db      	uxtb	r3, r3
 802728c:	2b00      	cmp	r3, #0
 802728e:	f000 80fd 	beq.w	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 8027292:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 8027296:	4618      	mov	r0, r3
 8027298:	f7e6 f88a 	bl	800d3b0 <8cfb94024ca5b6140fb568011b57a078749e2ff0>
 802729c:	4603      	mov	r3, r0
 802729e:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 80272a2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80272a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80272aa:	4293      	cmp	r3, r2
 80272ac:	f000 80e3 	beq.w	8027476 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x496>
 80272b0:	f107 0310 	add.w	r3, r7, #16
 80272b4:	f897 20ef 	ldrb.w	r2, [r7, #239]	; 0xef
 80272b8:	4611      	mov	r1, r2
 80272ba:	4618      	mov	r0, r3
 80272bc:	f7e6 f8e0 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 80272c0:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 80272c4:	f107 0210 	add.w	r2, r7, #16
 80272c8:	6810      	ldr	r0, [r2, #0]
 80272ca:	6018      	str	r0, [r3, #0]
 80272cc:	8892      	ldrh	r2, [r2, #4]
 80272ce:	809a      	strh	r2, [r3, #4]
 80272d0:	f7df f99a 	bl	8006608 <EMBENET_RADIO_GetCapabilities>
 80272d4:	f8c7 00d8 	str.w	r0, [r7, #216]	; 0xd8
 80272d8:	f997 20cc 	ldrsb.w	r2, [r7, #204]	; 0xcc
 80272dc:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80272e0:	f993 301c 	ldrsb.w	r3, [r3, #28]
 80272e4:	429a      	cmp	r2, r3
 80272e6:	f2c0 80c8 	blt.w	802747a <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x49a>
 80272ea:	f997 30cc 	ldrsb.w	r3, [r7, #204]	; 0xcc
 80272ee:	461c      	mov	r4, r3
 80272f0:	f8b7 30c8 	ldrh.w	r3, [r7, #200]	; 0xc8
 80272f4:	461d      	mov	r5, r3
 80272f6:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 80272fa:	461e      	mov	r6, r3
 80272fc:	f7f3 f9a6 	bl	801a64c <430fd23aeea8952b7b416b6590815371f1106b85>
 8027300:	4603      	mov	r3, r0
 8027302:	9301      	str	r3, [sp, #4]
 8027304:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8027308:	9300      	str	r3, [sp, #0]
 802730a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 802730e:	4632      	mov	r2, r6
 8027310:	4629      	mov	r1, r5
 8027312:	4620      	mov	r0, r4
 8027314:	f000 fd8a 	bl	8027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>
 8027318:	4603      	mov	r3, r0
 802731a:	461a      	mov	r2, r3
 802731c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8027320:	4413      	add	r3, r2
 8027322:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8027326:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 802732a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 802732e:	d303      	bcc.n	8027338 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x358>
 8027330:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027334:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8027338:	2300      	movs	r3, #0
 802733a:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 802733e:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8027342:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 8027346:	4611      	mov	r1, r2
 8027348:	4618      	mov	r0, r3
 802734a:	f7e6 fe65 	bl	800e018 <b7be15738b198492e50cb8023d171fca112169af>
 802734e:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8027352:	4618      	mov	r0, r3
 8027354:	f7f4 f95c 	bl	801b610 <43b9c1e675e1227dd4f7f3a802ed56f913e7161a>
 8027358:	4603      	mov	r3, r0
 802735a:	2b00      	cmp	r3, #0
 802735c:	d00e      	beq.n	802737c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x39c>
 802735e:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 8027362:	2b00      	cmp	r3, #0
 8027364:	d007      	beq.n	8027376 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x396>
 8027366:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 802736a:	f083 0301 	eor.w	r3, r3, #1
 802736e:	b2db      	uxtb	r3, r3
 8027370:	2b00      	cmp	r3, #0
 8027372:	f040 8084 	bne.w	802747e <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x49e>
 8027376:	2301      	movs	r3, #1
 8027378:	f887 30ee 	strb.w	r3, [r7, #238]	; 0xee
 802737c:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 8027380:	2b00      	cmp	r3, #0
 8027382:	d010      	beq.n	80273a6 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x3c6>
 8027384:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027388:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 802738c:	f083 0301 	eor.w	r3, r3, #1
 8027390:	b2db      	uxtb	r3, r3
 8027392:	2b00      	cmp	r3, #0
 8027394:	d007      	beq.n	80273a6 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x3c6>
 8027396:	f7fe fb1d 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 802739a:	4603      	mov	r3, r0
 802739c:	461a      	mov	r2, r3
 802739e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80273a2:	4293      	cmp	r3, r2
 80273a4:	d26d      	bcs.n	8027482 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4a2>
 80273a6:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 80273aa:	2b00      	cmp	r3, #0
 80273ac:	d032      	beq.n	8027414 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x434>
 80273ae:	f897 30f6 	ldrb.w	r3, [r7, #246]	; 0xf6
 80273b2:	f083 0301 	eor.w	r3, r3, #1
 80273b6:	b2db      	uxtb	r3, r3
 80273b8:	2b00      	cmp	r3, #0
 80273ba:	d02b      	beq.n	8027414 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x434>
 80273bc:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80273c0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80273c4:	f083 0301 	eor.w	r3, r3, #1
 80273c8:	b2db      	uxtb	r3, r3
 80273ca:	2b00      	cmp	r3, #0
 80273cc:	d022      	beq.n	8027414 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x434>
 80273ce:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 80273d2:	f107 0310 	add.w	r3, r7, #16
 80273d6:	4611      	mov	r1, r2
 80273d8:	4618      	mov	r0, r3
 80273da:	f7e6 f851 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 80273de:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 80273e2:	f107 0210 	add.w	r2, r7, #16
 80273e6:	6810      	ldr	r0, [r2, #0]
 80273e8:	6018      	str	r0, [r3, #0]
 80273ea:	8892      	ldrh	r2, [r2, #4]
 80273ec:	809a      	strh	r2, [r3, #4]
 80273ee:	f7fe faf1 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80273f2:	4603      	mov	r3, r0
 80273f4:	461a      	mov	r2, r3
 80273f6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80273fa:	1ad4      	subs	r4, r2, r3
 80273fc:	f8b7 30c8 	ldrh.w	r3, [r7, #200]	; 0xc8
 8027400:	461a      	mov	r2, r3
 8027402:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 8027406:	4619      	mov	r1, r3
 8027408:	4610      	mov	r0, r2
 802740a:	f000 fdeb 	bl	8027fe4 <dc0ee848a3d94ab51a590cd57f74390ab215fb95>
 802740e:	4603      	mov	r3, r0
 8027410:	429c      	cmp	r4, r3
 8027412:	d338      	bcc.n	8027486 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4a6>
 8027414:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 8027418:	f083 0301 	eor.w	r3, r3, #1
 802741c:	b2db      	uxtb	r3, r3
 802741e:	2b00      	cmp	r3, #0
 8027420:	d107      	bne.n	8027432 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x452>
 8027422:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 8027426:	2b00      	cmp	r3, #0
 8027428:	d030      	beq.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802742a:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 802742e:	2b00      	cmp	r3, #0
 8027430:	d02c      	beq.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 8027432:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8027436:	b29b      	uxth	r3, r3
 8027438:	f8b7 20f2 	ldrh.w	r2, [r7, #242]	; 0xf2
 802743c:	429a      	cmp	r2, r3
 802743e:	d80a      	bhi.n	8027456 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x476>
 8027440:	f897 30f0 	ldrb.w	r3, [r7, #240]	; 0xf0
 8027444:	2b00      	cmp	r3, #0
 8027446:	d020      	beq.n	802748a <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4aa>
 8027448:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 802744c:	f083 0301 	eor.w	r3, r3, #1
 8027450:	b2db      	uxtb	r3, r3
 8027452:	2b00      	cmp	r3, #0
 8027454:	d019      	beq.n	802748a <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4aa>
 8027456:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 802745a:	f887 30f1 	strb.w	r3, [r7, #241]	; 0xf1
 802745e:	2301      	movs	r3, #1
 8027460:	f887 30f5 	strb.w	r3, [r7, #245]	; 0xf5
 8027464:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8027468:	f8a7 30f2 	strh.w	r3, [r7, #242]	; 0xf2
 802746c:	f897 30ee 	ldrb.w	r3, [r7, #238]	; 0xee
 8027470:	f887 30f0 	strb.w	r3, [r7, #240]	; 0xf0
 8027474:	e009      	b.n	802748a <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4aa>
 8027476:	bf00      	nop
 8027478:	e008      	b.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802747a:	bf00      	nop
 802747c:	e006      	b.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802747e:	bf00      	nop
 8027480:	e004      	b.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 8027482:	bf00      	nop
 8027484:	e002      	b.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 8027486:	bf00      	nop
 8027488:	e000      	b.n	802748c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x4ac>
 802748a:	bf00      	nop
 802748c:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 8027490:	3301      	adds	r3, #1
 8027492:	f887 30ef 	strb.w	r3, [r7, #239]	; 0xef
 8027496:	f897 30ef 	ldrb.w	r3, [r7, #239]	; 0xef
 802749a:	2b09      	cmp	r3, #9
 802749c:	f67f aece 	bls.w	802723c <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x25c>
 80274a0:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80274a4:	2200      	movs	r2, #0
 80274a6:	601a      	str	r2, [r3, #0]
 80274a8:	605a      	str	r2, [r3, #4]
 80274aa:	609a      	str	r2, [r3, #8]
 80274ac:	60da      	str	r2, [r3, #12]
 80274ae:	741a      	strb	r2, [r3, #16]
 80274b0:	2302      	movs	r3, #2
 80274b2:	f887 3098 	strb.w	r3, [r7, #152]	; 0x98
 80274b6:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 80274ba:	2b00      	cmp	r3, #0
 80274bc:	f000 80f6 	beq.w	80276ac <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x6cc>
 80274c0:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80274c4:	1c5a      	adds	r2, r3, #1
 80274c6:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 80274ca:	4611      	mov	r1, r2
 80274cc:	4618      	mov	r0, r3
 80274ce:	f7e6 fda3 	bl	800e018 <b7be15738b198492e50cb8023d171fca112169af>
 80274d2:	f8b7 30f2 	ldrh.w	r3, [r7, #242]	; 0xf2
 80274d6:	4618      	mov	r0, r3
 80274d8:	f000 f9c4 	bl	8027864 <047450545e88a7e0b1f703be227cb1455be57bcf>
 80274dc:	f7ff f856 	bl	802658c <5d52bdabf8ecd6c8d7198566d11b639ed660a013>
 80274e0:	f7ff fa36 	bl	8026950 <43cc35f40acb52f42fa1199cee254d1023926eea>
 80274e4:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80274e8:	f8b7 20f2 	ldrh.w	r2, [r7, #242]	; 0xf2
 80274ec:	f8a3 209e 	strh.w	r2, [r3, #158]	; 0x9e
 80274f0:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 80274f4:	4618      	mov	r0, r3
 80274f6:	f7e6 fe03 	bl	800e100 <bc730516ff4e3e92f0649500c5c053783837fa16>
 80274fa:	2073      	movs	r0, #115	; 0x73
 80274fc:	f7e8 fa8a 	bl	800fa14 <f9d7d5c68ea55258d57b5d3bc3540348dc13b74e>
 8027500:	f107 0298 	add.w	r2, r7, #152	; 0x98
 8027504:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8027508:	4611      	mov	r1, r2
 802750a:	4618      	mov	r0, r3
 802750c:	f7e8 fd36 	bl	800ff7c <4c857b78cdc7cd5cc9a39e6ca4ea27a1fc7cf725>
 8027510:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8027514:	1c59      	adds	r1, r3, #1
 8027516:	f107 0360 	add.w	r3, r7, #96	; 0x60
 802751a:	2208      	movs	r2, #8
 802751c:	4618      	mov	r0, r3
 802751e:	f7fd ff91 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8027522:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8027526:	4610      	mov	r0, r2
 8027528:	4619      	mov	r1, r3
 802752a:	f001 fbcf 	bl	8028ccc <174d137b644ccd4ef57a02826061d132a3dec310>
 802752e:	f897 10f1 	ldrb.w	r1, [r7, #241]	; 0xf1
 8027532:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8027536:	cb0c      	ldmia	r3, {r2, r3}
 8027538:	4608      	mov	r0, r1
 802753a:	f7e6 f89f 	bl	800d67c <5004528a8ffa5581bbd161cf1057e8d5d3867843>
 802753e:	f7ed fead 	bl	801529c <LOGGER_StartSection>
 8027542:	4603      	mov	r3, r0
 8027544:	2b00      	cmp	r3, #0
 8027546:	f000 80b1 	beq.w	80276ac <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x6cc>
 802754a:	4a98      	ldr	r2, [pc, #608]	; (80277ac <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7cc>)
 802754c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8027550:	e892 0003 	ldmia.w	r2, {r0, r1}
 8027554:	e883 0003 	stmia.w	r3, {r0, r1}
 8027558:	f107 0350 	add.w	r3, r7, #80	; 0x50
 802755c:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027560:	f7ed feb8 	bl	80152d4 <LOGGER_PrintHeader>
 8027564:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 8027568:	f083 0301 	eor.w	r3, r3, #1
 802756c:	b2db      	uxtb	r3, r3
 802756e:	2b00      	cmp	r3, #0
 8027570:	d00e      	beq.n	8027590 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x5b0>
 8027572:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027576:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 802757a:	f083 0301 	eor.w	r3, r3, #1
 802757e:	b2db      	uxtb	r3, r3
 8027580:	2b00      	cmp	r3, #0
 8027582:	d005      	beq.n	8027590 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x5b0>
 8027584:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8027588:	4889      	ldr	r0, [pc, #548]	; (80277b0 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7d0>)
 802758a:	f7ed fe6f 	bl	801526c <LOGGER_Print>
 802758e:	e089      	b.n	80276a4 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x6c4>
 8027590:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8027594:	1c59      	adds	r1, r3, #1
 8027596:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802759a:	2208      	movs	r2, #8
 802759c:	4618      	mov	r0, r3
 802759e:	f7fd ff51 	bl	8025444 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 80275a2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 80275a6:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 80275aa:	e9cd 2300 	strd	r2, r3, [sp]
 80275ae:	4602      	mov	r2, r0
 80275b0:	460b      	mov	r3, r1
 80275b2:	4880      	ldr	r0, [pc, #512]	; (80277b4 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7d4>)
 80275b4:	f7ed fe5a 	bl	801526c <LOGGER_Print>
 80275b8:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 80275bc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80275c0:	4611      	mov	r1, r2
 80275c2:	4618      	mov	r0, r3
 80275c4:	f7e5 ff5c 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 80275c8:	f997 3044 	ldrsb.w	r3, [r7, #68]	; 0x44
 80275cc:	461c      	mov	r4, r3
 80275ce:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80275d2:	461d      	mov	r5, r3
 80275d4:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 80275d8:	461e      	mov	r6, r3
 80275da:	f7f3 f837 	bl	801a64c <430fd23aeea8952b7b416b6590815371f1106b85>
 80275de:	4603      	mov	r3, r0
 80275e0:	9301      	str	r3, [sp, #4]
 80275e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80275e6:	9300      	str	r3, [sp, #0]
 80275e8:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80275ec:	4632      	mov	r2, r6
 80275ee:	4629      	mov	r1, r5
 80275f0:	4620      	mov	r0, r4
 80275f2:	f000 fc1b 	bl	8027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>
 80275f6:	4603      	mov	r3, r0
 80275f8:	f8a7 30e2 	strh.w	r3, [r7, #226]	; 0xe2
 80275fc:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8027600:	f897 20f1 	ldrb.w	r2, [r7, #241]	; 0xf1
 8027604:	4611      	mov	r1, r2
 8027606:	4618      	mov	r0, r3
 8027608:	f7e5 ff3a 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 802760c:	f997 303c 	ldrsb.w	r3, [r7, #60]	; 0x3c
 8027610:	461c      	mov	r4, r3
 8027612:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 8027614:	461d      	mov	r5, r3
 8027616:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8027618:	461e      	mov	r6, r3
 802761a:	f7f3 f817 	bl	801a64c <430fd23aeea8952b7b416b6590815371f1106b85>
 802761e:	4603      	mov	r3, r0
 8027620:	9301      	str	r3, [sp, #4]
 8027622:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8027626:	9300      	str	r3, [sp, #0]
 8027628:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 802762c:	4632      	mov	r2, r6
 802762e:	4629      	mov	r1, r5
 8027630:	4620      	mov	r0, r4
 8027632:	f000 fbfb 	bl	8027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>
 8027636:	4603      	mov	r3, r0
 8027638:	f8a7 30e0 	strh.w	r3, [r7, #224]	; 0xe0
 802763c:	f7fe f9ca 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 8027640:	4603      	mov	r3, r0
 8027642:	4698      	mov	r8, r3
 8027644:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8027648:	4618      	mov	r0, r3
 802764a:	f7e5 feb1 	bl	800d3b0 <8cfb94024ca5b6140fb568011b57a078749e2ff0>
 802764e:	4603      	mov	r3, r0
 8027650:	4699      	mov	r9, r3
 8027652:	f8b7 40e2 	ldrh.w	r4, [r7, #226]	; 0xe2
 8027656:	f997 3044 	ldrsb.w	r3, [r7, #68]	; 0x44
 802765a:	461d      	mov	r5, r3
 802765c:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 8027660:	461e      	mov	r6, r3
 8027662:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8027666:	60bb      	str	r3, [r7, #8]
 8027668:	f897 30f1 	ldrb.w	r3, [r7, #241]	; 0xf1
 802766c:	4618      	mov	r0, r3
 802766e:	f7e5 fe9f 	bl	800d3b0 <8cfb94024ca5b6140fb568011b57a078749e2ff0>
 8027672:	4603      	mov	r3, r0
 8027674:	461a      	mov	r2, r3
 8027676:	f8b7 30e0 	ldrh.w	r3, [r7, #224]	; 0xe0
 802767a:	f997 103c 	ldrsb.w	r1, [r7, #60]	; 0x3c
 802767e:	8f38      	ldrh	r0, [r7, #56]	; 0x38
 8027680:	f8b7 c03a 	ldrh.w	ip, [r7, #58]	; 0x3a
 8027684:	f8cd c01c 	str.w	ip, [sp, #28]
 8027688:	9006      	str	r0, [sp, #24]
 802768a:	9105      	str	r1, [sp, #20]
 802768c:	9304      	str	r3, [sp, #16]
 802768e:	9203      	str	r2, [sp, #12]
 8027690:	68bb      	ldr	r3, [r7, #8]
 8027692:	9302      	str	r3, [sp, #8]
 8027694:	9601      	str	r6, [sp, #4]
 8027696:	9500      	str	r5, [sp, #0]
 8027698:	4623      	mov	r3, r4
 802769a:	464a      	mov	r2, r9
 802769c:	4641      	mov	r1, r8
 802769e:	4846      	ldr	r0, [pc, #280]	; (80277b8 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7d8>)
 80276a0:	f7ed fde4 	bl	801526c <LOGGER_Print>
 80276a4:	f7ed fda2 	bl	80151ec <LOGGER_PrintNL>
 80276a8:	f7ed fe0b 	bl	80152c2 <LOGGER_EndSection>
 80276ac:	f897 30f5 	ldrb.w	r3, [r7, #245]	; 0xf5
 80276b0:	2b00      	cmp	r3, #0
 80276b2:	d029      	beq.n	8027708 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x728>
 80276b4:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80276b8:	2200      	movs	r2, #0
 80276ba:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80276be:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 80276c2:	f083 0301 	eor.w	r3, r3, #1
 80276c6:	b2db      	uxtb	r3, r3
 80276c8:	2b00      	cmp	r3, #0
 80276ca:	d00a      	beq.n	80276e2 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x702>
 80276cc:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80276d0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80276d4:	f083 0301 	eor.w	r3, r3, #1
 80276d8:	b2db      	uxtb	r3, r3
 80276da:	2b00      	cmp	r3, #0
 80276dc:	d001      	beq.n	80276e2 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x702>
 80276de:	2301      	movs	r3, #1
 80276e0:	e000      	b.n	80276e4 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x704>
 80276e2:	2300      	movs	r3, #0
 80276e4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80276e8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80276ec:	f003 0301 	and.w	r3, r3, #1
 80276f0:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80276f4:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 80276f8:	f897 10f7 	ldrb.w	r1, [r7, #247]	; 0xf7
 80276fc:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8027700:	4618      	mov	r0, r3
 8027702:	f7f3 ff45 	bl	801b590 <4d4d07b4e30904d5f2361bdbdd317c9b751af65f>
 8027706:	e04a      	b.n	802779e <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7be>
 8027708:	f897 30f7 	ldrb.w	r3, [r7, #247]	; 0xf7
 802770c:	f083 0301 	eor.w	r3, r3, #1
 8027710:	b2db      	uxtb	r3, r3
 8027712:	2b00      	cmp	r3, #0
 8027714:	d028      	beq.n	8027768 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x788>
 8027716:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 802771a:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 802771e:	2b00      	cmp	r3, #0
 8027720:	d022      	beq.n	8027768 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x788>
 8027722:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027726:	2200      	movs	r2, #0
 8027728:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 802772c:	4a23      	ldr	r2, [pc, #140]	; (80277bc <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7dc>)
 802772e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8027732:	e892 0003 	ldmia.w	r2, {r0, r1}
 8027736:	e883 0003 	stmia.w	r3, {r0, r1}
 802773a:	4a21      	ldr	r2, [pc, #132]	; (80277c0 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7e0>)
 802773c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8027740:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027744:	f7ed fd60 	bl	8015208 <LOGGER_PrintLine>
 8027748:	2204      	movs	r2, #4
 802774a:	f8d7 10e8 	ldr.w	r1, [r7, #232]	; 0xe8
 802774e:	481d      	ldr	r0, [pc, #116]	; (80277c4 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7e4>)
 8027750:	f7eb fee2 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8027754:	f7fe f950 	bl	80259f8 <6aa680b4ccb16282c0a541f7e0888d19c84c3a6b>
 8027758:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 802775c:	461a      	mov	r2, r3
 802775e:	2100      	movs	r1, #0
 8027760:	2000      	movs	r0, #0
 8027762:	f7f3 ff15 	bl	801b590 <4d4d07b4e30904d5f2361bdbdd317c9b751af65f>
 8027766:	e01a      	b.n	802779e <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7be>
 8027768:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 802776c:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8027770:	2b00      	cmp	r3, #0
 8027772:	d014      	beq.n	802779e <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7be>
 8027774:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8027778:	2200      	movs	r2, #0
 802777a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 802777e:	4a12      	ldr	r2, [pc, #72]	; (80277c8 <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7e8>)
 8027780:	f107 0320 	add.w	r3, r7, #32
 8027784:	e892 0003 	ldmia.w	r2, {r0, r1}
 8027788:	e883 0003 	stmia.w	r3, {r0, r1}
 802778c:	4a0f      	ldr	r2, [pc, #60]	; (80277cc <6773c6fdd8d1f676d1a2ac33c560f77f2ded24f0+0x7ec>)
 802778e:	f107 0320 	add.w	r3, r7, #32
 8027792:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027796:	f7ed fd37 	bl	8015208 <LOGGER_PrintLine>
 802779a:	f7f3 fa6b 	bl	801ac74 <2fba4ddec868eb31998278adcb690f685bb9d2cf>
 802779e:	f000 f817 	bl	80277d0 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437>
 80277a2:	f507 7782 	add.w	r7, r7, #260	; 0x104
 80277a6:	46bd      	mov	sp, r7
 80277a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277ac:	08030ea4 	.word	0x08030ea4
 80277b0:	0803112c 	.word	0x0803112c
 80277b4:	08031148 	.word	0x08031148
 80277b8:	0803116c 	.word	0x0803116c
 80277bc:	08030e9c 	.word	0x08030e9c
 80277c0:	08031200 	.word	0x08031200
 80277c4:	08026359 	.word	0x08026359
 80277c8:	080310a0 	.word	0x080310a0
 80277cc:	0803121c 	.word	0x0803121c

080277d0 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437>:
 80277d0:	b580      	push	{r7, lr}
 80277d2:	b084      	sub	sp, #16
 80277d4:	af02      	add	r7, sp, #8
 80277d6:	4b1f      	ldr	r3, [pc, #124]	; (8027854 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x84>)
 80277d8:	681b      	ldr	r3, [r3, #0]
 80277da:	f503 730c 	add.w	r3, r3, #560	; 0x230
 80277de:	603b      	str	r3, [r7, #0]
 80277e0:	683b      	ldr	r3, [r7, #0]
 80277e2:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80277e6:	4618      	mov	r0, r3
 80277e8:	f7ea f9ce 	bl	8011b88 <56445be374e93738432324b7e0ececbd8047647a>
 80277ec:	4603      	mov	r3, r0
 80277ee:	f083 0301 	eor.w	r3, r3, #1
 80277f2:	b2db      	uxtb	r3, r3
 80277f4:	2b00      	cmp	r3, #0
 80277f6:	d028      	beq.n	802784a <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x7a>
 80277f8:	2300      	movs	r3, #0
 80277fa:	607b      	str	r3, [r7, #4]
 80277fc:	2100      	movs	r1, #0
 80277fe:	2000      	movs	r0, #0
 8027800:	f7e6 fcb6 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8027804:	4603      	mov	r3, r0
 8027806:	f083 0301 	eor.w	r3, r3, #1
 802780a:	b2db      	uxtb	r3, r3
 802780c:	2b00      	cmp	r3, #0
 802780e:	d00d      	beq.n	802782c <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x5c>
 8027810:	f7fe f95a 	bl	8025ac8 <71fc6a01fbd1c77ffbfd7cfdab3a822a00183bc2>
 8027814:	4603      	mov	r3, r0
 8027816:	f083 0301 	eor.w	r3, r3, #1
 802781a:	b2db      	uxtb	r3, r3
 802781c:	2b00      	cmp	r3, #0
 802781e:	d005      	beq.n	802782c <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x5c>
 8027820:	490d      	ldr	r1, [pc, #52]	; (8027858 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x88>)
 8027822:	480d      	ldr	r0, [pc, #52]	; (8027858 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x88>)
 8027824:	f7ea fb9c 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 8027828:	6078      	str	r0, [r7, #4]
 802782a:	e004      	b.n	8027836 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x66>
 802782c:	490b      	ldr	r1, [pc, #44]	; (802785c <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x8c>)
 802782e:	480b      	ldr	r0, [pc, #44]	; (802785c <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x8c>)
 8027830:	f7ea fb96 	bl	8011f60 <23673502809f5a9646d21283e7a04e0764f4d11d>
 8027834:	6078      	str	r0, [r7, #4]
 8027836:	683b      	ldr	r3, [r7, #0]
 8027838:	f893 00a0 	ldrb.w	r0, [r3, #160]	; 0xa0
 802783c:	683b      	ldr	r3, [r7, #0]
 802783e:	9300      	str	r3, [sp, #0]
 8027840:	4b07      	ldr	r3, [pc, #28]	; (8027860 <b9ad13487f540c7a6a8fb22e7ad3e32092d0d437+0x90>)
 8027842:	687a      	ldr	r2, [r7, #4]
 8027844:	2101      	movs	r1, #1
 8027846:	f7ea f837 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 802784a:	bf00      	nop
 802784c:	3708      	adds	r7, #8
 802784e:	46bd      	mov	sp, r7
 8027850:	bd80      	pop	{r7, pc}
 8027852:	bf00      	nop
 8027854:	20000040 	.word	0x20000040
 8027858:	00a7d8c0 	.word	0x00a7d8c0
 802785c:	00989680 	.word	0x00989680
 8027860:	08026fe1 	.word	0x08026fe1

08027864 <047450545e88a7e0b1f703be227cb1455be57bcf>:
 8027864:	b580      	push	{r7, lr}
 8027866:	b084      	sub	sp, #16
 8027868:	af00      	add	r7, sp, #0
 802786a:	4603      	mov	r3, r0
 802786c:	80fb      	strh	r3, [r7, #6]
 802786e:	4b09      	ldr	r3, [pc, #36]	; (8027894 <047450545e88a7e0b1f703be227cb1455be57bcf+0x30>)
 8027870:	681b      	ldr	r3, [r3, #0]
 8027872:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8027876:	60fb      	str	r3, [r7, #12]
 8027878:	68fb      	ldr	r3, [r7, #12]
 802787a:	88fa      	ldrh	r2, [r7, #6]
 802787c:	f8a3 209c 	strh.w	r2, [r3, #156]	; 0x9c
 8027880:	68fb      	ldr	r3, [r7, #12]
 8027882:	f8b3 309c 	ldrh.w	r3, [r3, #156]	; 0x9c
 8027886:	4618      	mov	r0, r3
 8027888:	f001 fa9c 	bl	8028dc4 <6362cea72da2b827a19bfabd8f796b6337cbd199>
 802788c:	bf00      	nop
 802788e:	3710      	adds	r7, #16
 8027890:	46bd      	mov	sp, r7
 8027892:	bd80      	pop	{r7, pc}
 8027894:	20000040 	.word	0x20000040

08027898 <c5868198428dfaffddb0900c3d01452778b19d11>:
 8027898:	b480      	push	{r7}
 802789a:	b089      	sub	sp, #36	; 0x24
 802789c:	af00      	add	r7, sp, #0
 802789e:	60f8      	str	r0, [r7, #12]
 80278a0:	60b9      	str	r1, [r7, #8]
 80278a2:	607a      	str	r2, [r7, #4]
 80278a4:	68fb      	ldr	r3, [r7, #12]
 80278a6:	61fb      	str	r3, [r7, #28]
 80278a8:	68bb      	ldr	r3, [r7, #8]
 80278aa:	61bb      	str	r3, [r7, #24]
 80278ac:	687b      	ldr	r3, [r7, #4]
 80278ae:	617b      	str	r3, [r7, #20]
 80278b0:	2300      	movs	r3, #0
 80278b2:	613b      	str	r3, [r7, #16]
 80278b4:	e00d      	b.n	80278d2 <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 80278b6:	69ba      	ldr	r2, [r7, #24]
 80278b8:	693b      	ldr	r3, [r7, #16]
 80278ba:	441a      	add	r2, r3
 80278bc:	6979      	ldr	r1, [r7, #20]
 80278be:	693b      	ldr	r3, [r7, #16]
 80278c0:	1acb      	subs	r3, r1, r3
 80278c2:	3b01      	subs	r3, #1
 80278c4:	69f9      	ldr	r1, [r7, #28]
 80278c6:	440b      	add	r3, r1
 80278c8:	7812      	ldrb	r2, [r2, #0]
 80278ca:	701a      	strb	r2, [r3, #0]
 80278cc:	693b      	ldr	r3, [r7, #16]
 80278ce:	3301      	adds	r3, #1
 80278d0:	613b      	str	r3, [r7, #16]
 80278d2:	697a      	ldr	r2, [r7, #20]
 80278d4:	693b      	ldr	r3, [r7, #16]
 80278d6:	429a      	cmp	r2, r3
 80278d8:	d8ed      	bhi.n	80278b6 <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 80278da:	bf00      	nop
 80278dc:	bf00      	nop
 80278de:	3724      	adds	r7, #36	; 0x24
 80278e0:	46bd      	mov	sp, r7
 80278e2:	bc80      	pop	{r7}
 80278e4:	4770      	bx	lr

080278e6 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 80278e6:	b480      	push	{r7}
 80278e8:	b089      	sub	sp, #36	; 0x24
 80278ea:	af00      	add	r7, sp, #0
 80278ec:	60f8      	str	r0, [r7, #12]
 80278ee:	60b9      	str	r1, [r7, #8]
 80278f0:	607a      	str	r2, [r7, #4]
 80278f2:	68fb      	ldr	r3, [r7, #12]
 80278f4:	61fb      	str	r3, [r7, #28]
 80278f6:	68bb      	ldr	r3, [r7, #8]
 80278f8:	61bb      	str	r3, [r7, #24]
 80278fa:	687b      	ldr	r3, [r7, #4]
 80278fc:	617b      	str	r3, [r7, #20]
 80278fe:	2300      	movs	r3, #0
 8027900:	613b      	str	r3, [r7, #16]
 8027902:	e00d      	b.n	8027920 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8027904:	69ba      	ldr	r2, [r7, #24]
 8027906:	693b      	ldr	r3, [r7, #16]
 8027908:	441a      	add	r2, r3
 802790a:	6979      	ldr	r1, [r7, #20]
 802790c:	693b      	ldr	r3, [r7, #16]
 802790e:	1acb      	subs	r3, r1, r3
 8027910:	3b01      	subs	r3, #1
 8027912:	69f9      	ldr	r1, [r7, #28]
 8027914:	440b      	add	r3, r1
 8027916:	7812      	ldrb	r2, [r2, #0]
 8027918:	701a      	strb	r2, [r3, #0]
 802791a:	693b      	ldr	r3, [r7, #16]
 802791c:	3301      	adds	r3, #1
 802791e:	613b      	str	r3, [r7, #16]
 8027920:	697a      	ldr	r2, [r7, #20]
 8027922:	693b      	ldr	r3, [r7, #16]
 8027924:	429a      	cmp	r2, r3
 8027926:	d8ed      	bhi.n	8027904 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8027928:	bf00      	nop
 802792a:	bf00      	nop
 802792c:	3724      	adds	r7, #36	; 0x24
 802792e:	46bd      	mov	sp, r7
 8027930:	bc80      	pop	{r7}
 8027932:	4770      	bx	lr

08027934 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d>:
 8027934:	b480      	push	{r7}
 8027936:	b085      	sub	sp, #20
 8027938:	af00      	add	r7, sp, #0
 802793a:	6078      	str	r0, [r7, #4]
 802793c:	687b      	ldr	r3, [r7, #4]
 802793e:	60bb      	str	r3, [r7, #8]
 8027940:	2300      	movs	r3, #0
 8027942:	60fb      	str	r3, [r7, #12]
 8027944:	e029      	b.n	802799a <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x66>
 8027946:	68ba      	ldr	r2, [r7, #8]
 8027948:	68fb      	ldr	r3, [r7, #12]
 802794a:	3302      	adds	r3, #2
 802794c:	009b      	lsls	r3, r3, #2
 802794e:	4413      	add	r3, r2
 8027950:	88db      	ldrh	r3, [r3, #6]
 8027952:	2b00      	cmp	r3, #0
 8027954:	d01e      	beq.n	8027994 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x60>
 8027956:	68ba      	ldr	r2, [r7, #8]
 8027958:	68fb      	ldr	r3, [r7, #12]
 802795a:	3302      	adds	r3, #2
 802795c:	009b      	lsls	r3, r3, #2
 802795e:	4413      	add	r3, r2
 8027960:	7a1b      	ldrb	r3, [r3, #8]
 8027962:	2b00      	cmp	r3, #0
 8027964:	d107      	bne.n	8027976 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x42>
 8027966:	68ba      	ldr	r2, [r7, #8]
 8027968:	68fb      	ldr	r3, [r7, #12]
 802796a:	3302      	adds	r3, #2
 802796c:	009b      	lsls	r3, r3, #2
 802796e:	4413      	add	r3, r2
 8027970:	2200      	movs	r2, #0
 8027972:	80da      	strh	r2, [r3, #6]
 8027974:	e00e      	b.n	8027994 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x60>
 8027976:	68ba      	ldr	r2, [r7, #8]
 8027978:	68fb      	ldr	r3, [r7, #12]
 802797a:	3302      	adds	r3, #2
 802797c:	009b      	lsls	r3, r3, #2
 802797e:	4413      	add	r3, r2
 8027980:	7a1b      	ldrb	r3, [r3, #8]
 8027982:	3b01      	subs	r3, #1
 8027984:	b2d9      	uxtb	r1, r3
 8027986:	68ba      	ldr	r2, [r7, #8]
 8027988:	68fb      	ldr	r3, [r7, #12]
 802798a:	3302      	adds	r3, #2
 802798c:	009b      	lsls	r3, r3, #2
 802798e:	4413      	add	r3, r2
 8027990:	460a      	mov	r2, r1
 8027992:	721a      	strb	r2, [r3, #8]
 8027994:	68fb      	ldr	r3, [r7, #12]
 8027996:	3301      	adds	r3, #1
 8027998:	60fb      	str	r3, [r7, #12]
 802799a:	68fb      	ldr	r3, [r7, #12]
 802799c:	2b09      	cmp	r3, #9
 802799e:	d9d2      	bls.n	8027946 <451af4d13f3981311b6c1d9d343aec3dcaf22e3d+0x12>
 80279a0:	bf00      	nop
 80279a2:	bf00      	nop
 80279a4:	3714      	adds	r7, #20
 80279a6:	46bd      	mov	sp, r7
 80279a8:	bc80      	pop	{r7}
 80279aa:	4770      	bx	lr

080279ac <082eefb804d1e0ed7226bf17620f026c0888c274>:
 80279ac:	b598      	push	{r3, r4, r7, lr}
 80279ae:	af00      	add	r7, sp, #0
 80279b0:	4b04      	ldr	r3, [pc, #16]	; (80279c4 <082eefb804d1e0ed7226bf17620f026c0888c274+0x18>)
 80279b2:	681c      	ldr	r4, [r3, #0]
 80279b4:	2001      	movs	r0, #1
 80279b6:	f7e9 ff35 	bl	8011824 <a8a69b6dc0b44dcd4c796ffc71424a9aa5615acc>
 80279ba:	4603      	mov	r3, r0
 80279bc:	f884 3a92 	strb.w	r3, [r4, #2706]	; 0xa92
 80279c0:	bf00      	nop
 80279c2:	bd98      	pop	{r3, r4, r7, pc}
 80279c4:	20000040 	.word	0x20000040

080279c8 <c38d52ce980d1bffca8abbe7f4a5a8384c48b95c>:
 80279c8:	b580      	push	{r7, lr}
 80279ca:	b084      	sub	sp, #16
 80279cc:	af02      	add	r7, sp, #8
 80279ce:	4b09      	ldr	r3, [pc, #36]	; (80279f4 <c38d52ce980d1bffca8abbe7f4a5a8384c48b95c+0x2c>)
 80279d0:	681b      	ldr	r3, [r3, #0]
 80279d2:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 80279d6:	607b      	str	r3, [r7, #4]
 80279d8:	687b      	ldr	r3, [r7, #4]
 80279da:	7818      	ldrb	r0, [r3, #0]
 80279dc:	687b      	ldr	r3, [r7, #4]
 80279de:	9300      	str	r3, [sp, #0]
 80279e0:	4b05      	ldr	r3, [pc, #20]	; (80279f8 <c38d52ce980d1bffca8abbe7f4a5a8384c48b95c+0x30>)
 80279e2:	4a06      	ldr	r2, [pc, #24]	; (80279fc <c38d52ce980d1bffca8abbe7f4a5a8384c48b95c+0x34>)
 80279e4:	2100      	movs	r1, #0
 80279e6:	f7e9 ff67 	bl	80118b8 <a146aa5c27211710221f7063067066079d66a071>
 80279ea:	bf00      	nop
 80279ec:	3708      	adds	r7, #8
 80279ee:	46bd      	mov	sp, r7
 80279f0:	bd80      	pop	{r7, pc}
 80279f2:	bf00      	nop
 80279f4:	20000040 	.word	0x20000040
 80279f8:	08027935 	.word	0x08027935
 80279fc:	d693a400 	.word	0xd693a400

08027a00 <7c27c3f80cc08068333c14ac1b724ab469f4969f>:
 8027a00:	b580      	push	{r7, lr}
 8027a02:	af00      	add	r7, sp, #0
 8027a04:	4b04      	ldr	r3, [pc, #16]	; (8027a18 <7c27c3f80cc08068333c14ac1b724ab469f4969f+0x18>)
 8027a06:	681b      	ldr	r3, [r3, #0]
 8027a08:	f893 3a92 	ldrb.w	r3, [r3, #2706]	; 0xa92
 8027a0c:	4618      	mov	r0, r3
 8027a0e:	f7ea f859 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 8027a12:	bf00      	nop
 8027a14:	bd80      	pop	{r7, pc}
 8027a16:	bf00      	nop
 8027a18:	20000040 	.word	0x20000040

08027a1c <29fa8ed2960e61836c5411711158d1cb9cd67052>:
 8027a1c:	b580      	push	{r7, lr}
 8027a1e:	b086      	sub	sp, #24
 8027a20:	af00      	add	r7, sp, #0
 8027a22:	6078      	str	r0, [r7, #4]
 8027a24:	4b14      	ldr	r3, [pc, #80]	; (8027a78 <29fa8ed2960e61836c5411711158d1cb9cd67052+0x5c>)
 8027a26:	681b      	ldr	r3, [r3, #0]
 8027a28:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027a2c:	613b      	str	r3, [r7, #16]
 8027a2e:	f107 030e 	add.w	r3, r7, #14
 8027a32:	2202      	movs	r2, #2
 8027a34:	6879      	ldr	r1, [r7, #4]
 8027a36:	4618      	mov	r0, r3
 8027a38:	f7ff ff55 	bl	80278e6 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8027a3c:	89fb      	ldrh	r3, [r7, #14]
 8027a3e:	2b00      	cmp	r3, #0
 8027a40:	d101      	bne.n	8027a46 <29fa8ed2960e61836c5411711158d1cb9cd67052+0x2a>
 8027a42:	2300      	movs	r3, #0
 8027a44:	e013      	b.n	8027a6e <29fa8ed2960e61836c5411711158d1cb9cd67052+0x52>
 8027a46:	2300      	movs	r3, #0
 8027a48:	617b      	str	r3, [r7, #20]
 8027a4a:	e00c      	b.n	8027a66 <29fa8ed2960e61836c5411711158d1cb9cd67052+0x4a>
 8027a4c:	693a      	ldr	r2, [r7, #16]
 8027a4e:	697b      	ldr	r3, [r7, #20]
 8027a50:	005b      	lsls	r3, r3, #1
 8027a52:	4413      	add	r3, r2
 8027a54:	885a      	ldrh	r2, [r3, #2]
 8027a56:	89fb      	ldrh	r3, [r7, #14]
 8027a58:	429a      	cmp	r2, r3
 8027a5a:	d101      	bne.n	8027a60 <29fa8ed2960e61836c5411711158d1cb9cd67052+0x44>
 8027a5c:	2301      	movs	r3, #1
 8027a5e:	e006      	b.n	8027a6e <29fa8ed2960e61836c5411711158d1cb9cd67052+0x52>
 8027a60:	697b      	ldr	r3, [r7, #20]
 8027a62:	3301      	adds	r3, #1
 8027a64:	617b      	str	r3, [r7, #20]
 8027a66:	697b      	ldr	r3, [r7, #20]
 8027a68:	2b05      	cmp	r3, #5
 8027a6a:	d9ef      	bls.n	8027a4c <29fa8ed2960e61836c5411711158d1cb9cd67052+0x30>
 8027a6c:	2300      	movs	r3, #0
 8027a6e:	4618      	mov	r0, r3
 8027a70:	3718      	adds	r7, #24
 8027a72:	46bd      	mov	sp, r7
 8027a74:	bd80      	pop	{r7, pc}
 8027a76:	bf00      	nop
 8027a78:	20000040 	.word	0x20000040

08027a7c <725c72049a2e0b342530ba14f6642cfd9100dd16>:
 8027a7c:	b580      	push	{r7, lr}
 8027a7e:	b086      	sub	sp, #24
 8027a80:	af00      	add	r7, sp, #0
 8027a82:	6078      	str	r0, [r7, #4]
 8027a84:	4b29      	ldr	r3, [pc, #164]	; (8027b2c <725c72049a2e0b342530ba14f6642cfd9100dd16+0xb0>)
 8027a86:	681b      	ldr	r3, [r3, #0]
 8027a88:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027a8c:	60fb      	str	r3, [r7, #12]
 8027a8e:	f107 030a 	add.w	r3, r7, #10
 8027a92:	2202      	movs	r2, #2
 8027a94:	6879      	ldr	r1, [r7, #4]
 8027a96:	4618      	mov	r0, r3
 8027a98:	f7ff ff25 	bl	80278e6 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8027a9c:	897b      	ldrh	r3, [r7, #10]
 8027a9e:	2b00      	cmp	r3, #0
 8027aa0:	d101      	bne.n	8027aa6 <725c72049a2e0b342530ba14f6642cfd9100dd16+0x2a>
 8027aa2:	2300      	movs	r3, #0
 8027aa4:	e03d      	b.n	8027b22 <725c72049a2e0b342530ba14f6642cfd9100dd16+0xa6>
 8027aa6:	2300      	movs	r3, #0
 8027aa8:	617b      	str	r3, [r7, #20]
 8027aaa:	e014      	b.n	8027ad6 <725c72049a2e0b342530ba14f6642cfd9100dd16+0x5a>
 8027aac:	68fa      	ldr	r2, [r7, #12]
 8027aae:	697b      	ldr	r3, [r7, #20]
 8027ab0:	3302      	adds	r3, #2
 8027ab2:	009b      	lsls	r3, r3, #2
 8027ab4:	4413      	add	r3, r2
 8027ab6:	88da      	ldrh	r2, [r3, #6]
 8027ab8:	897b      	ldrh	r3, [r7, #10]
 8027aba:	429a      	cmp	r2, r3
 8027abc:	d108      	bne.n	8027ad0 <725c72049a2e0b342530ba14f6642cfd9100dd16+0x54>
 8027abe:	68fa      	ldr	r2, [r7, #12]
 8027ac0:	697b      	ldr	r3, [r7, #20]
 8027ac2:	3302      	adds	r3, #2
 8027ac4:	009b      	lsls	r3, r3, #2
 8027ac6:	4413      	add	r3, r2
 8027ac8:	2205      	movs	r2, #5
 8027aca:	721a      	strb	r2, [r3, #8]
 8027acc:	2301      	movs	r3, #1
 8027ace:	e028      	b.n	8027b22 <725c72049a2e0b342530ba14f6642cfd9100dd16+0xa6>
 8027ad0:	697b      	ldr	r3, [r7, #20]
 8027ad2:	3301      	adds	r3, #1
 8027ad4:	617b      	str	r3, [r7, #20]
 8027ad6:	697b      	ldr	r3, [r7, #20]
 8027ad8:	2b09      	cmp	r3, #9
 8027ada:	d9e7      	bls.n	8027aac <725c72049a2e0b342530ba14f6642cfd9100dd16+0x30>
 8027adc:	2300      	movs	r3, #0
 8027ade:	613b      	str	r3, [r7, #16]
 8027ae0:	e01b      	b.n	8027b1a <725c72049a2e0b342530ba14f6642cfd9100dd16+0x9e>
 8027ae2:	68fa      	ldr	r2, [r7, #12]
 8027ae4:	693b      	ldr	r3, [r7, #16]
 8027ae6:	3302      	adds	r3, #2
 8027ae8:	009b      	lsls	r3, r3, #2
 8027aea:	4413      	add	r3, r2
 8027aec:	88db      	ldrh	r3, [r3, #6]
 8027aee:	2b00      	cmp	r3, #0
 8027af0:	d110      	bne.n	8027b14 <725c72049a2e0b342530ba14f6642cfd9100dd16+0x98>
 8027af2:	68fa      	ldr	r2, [r7, #12]
 8027af4:	693b      	ldr	r3, [r7, #16]
 8027af6:	3302      	adds	r3, #2
 8027af8:	009b      	lsls	r3, r3, #2
 8027afa:	4413      	add	r3, r2
 8027afc:	2205      	movs	r2, #5
 8027afe:	721a      	strb	r2, [r3, #8]
 8027b00:	8979      	ldrh	r1, [r7, #10]
 8027b02:	68fa      	ldr	r2, [r7, #12]
 8027b04:	693b      	ldr	r3, [r7, #16]
 8027b06:	3302      	adds	r3, #2
 8027b08:	009b      	lsls	r3, r3, #2
 8027b0a:	4413      	add	r3, r2
 8027b0c:	460a      	mov	r2, r1
 8027b0e:	80da      	strh	r2, [r3, #6]
 8027b10:	2301      	movs	r3, #1
 8027b12:	e006      	b.n	8027b22 <725c72049a2e0b342530ba14f6642cfd9100dd16+0xa6>
 8027b14:	693b      	ldr	r3, [r7, #16]
 8027b16:	3301      	adds	r3, #1
 8027b18:	613b      	str	r3, [r7, #16]
 8027b1a:	693b      	ldr	r3, [r7, #16]
 8027b1c:	2b09      	cmp	r3, #9
 8027b1e:	d9e0      	bls.n	8027ae2 <725c72049a2e0b342530ba14f6642cfd9100dd16+0x66>
 8027b20:	2300      	movs	r3, #0
 8027b22:	4618      	mov	r0, r3
 8027b24:	3718      	adds	r7, #24
 8027b26:	46bd      	mov	sp, r7
 8027b28:	bd80      	pop	{r7, pc}
 8027b2a:	bf00      	nop
 8027b2c:	20000040 	.word	0x20000040

08027b30 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2>:
 8027b30:	b580      	push	{r7, lr}
 8027b32:	b086      	sub	sp, #24
 8027b34:	af00      	add	r7, sp, #0
 8027b36:	6078      	str	r0, [r7, #4]
 8027b38:	4b14      	ldr	r3, [pc, #80]	; (8027b8c <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x5c>)
 8027b3a:	681b      	ldr	r3, [r3, #0]
 8027b3c:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027b40:	613b      	str	r3, [r7, #16]
 8027b42:	f107 030e 	add.w	r3, r7, #14
 8027b46:	2202      	movs	r2, #2
 8027b48:	6879      	ldr	r1, [r7, #4]
 8027b4a:	4618      	mov	r0, r3
 8027b4c:	f7ff fecb 	bl	80278e6 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8027b50:	89fb      	ldrh	r3, [r7, #14]
 8027b52:	2b00      	cmp	r3, #0
 8027b54:	d101      	bne.n	8027b5a <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x2a>
 8027b56:	2300      	movs	r3, #0
 8027b58:	e014      	b.n	8027b84 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x54>
 8027b5a:	2300      	movs	r3, #0
 8027b5c:	617b      	str	r3, [r7, #20]
 8027b5e:	e00d      	b.n	8027b7c <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x4c>
 8027b60:	693a      	ldr	r2, [r7, #16]
 8027b62:	697b      	ldr	r3, [r7, #20]
 8027b64:	3302      	adds	r3, #2
 8027b66:	009b      	lsls	r3, r3, #2
 8027b68:	4413      	add	r3, r2
 8027b6a:	88da      	ldrh	r2, [r3, #6]
 8027b6c:	89fb      	ldrh	r3, [r7, #14]
 8027b6e:	429a      	cmp	r2, r3
 8027b70:	d101      	bne.n	8027b76 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x46>
 8027b72:	2301      	movs	r3, #1
 8027b74:	e006      	b.n	8027b84 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x54>
 8027b76:	697b      	ldr	r3, [r7, #20]
 8027b78:	3301      	adds	r3, #1
 8027b7a:	617b      	str	r3, [r7, #20]
 8027b7c:	697b      	ldr	r3, [r7, #20]
 8027b7e:	2b09      	cmp	r3, #9
 8027b80:	d9ee      	bls.n	8027b60 <4f3d233165bf16327caadd61d6e4b71a1c6a20e2+0x30>
 8027b82:	2300      	movs	r3, #0
 8027b84:	4618      	mov	r0, r3
 8027b86:	3718      	adds	r7, #24
 8027b88:	46bd      	mov	sp, r7
 8027b8a:	bd80      	pop	{r7, pc}
 8027b8c:	20000040 	.word	0x20000040

08027b90 <84780c9f08e19cea1884da40f03f0c5650f281d0>:
 8027b90:	b480      	push	{r7}
 8027b92:	b085      	sub	sp, #20
 8027b94:	af00      	add	r7, sp, #0
 8027b96:	4b10      	ldr	r3, [pc, #64]	; (8027bd8 <84780c9f08e19cea1884da40f03f0c5650f281d0+0x48>)
 8027b98:	681b      	ldr	r3, [r3, #0]
 8027b9a:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027b9e:	607b      	str	r3, [r7, #4]
 8027ba0:	2300      	movs	r3, #0
 8027ba2:	60fb      	str	r3, [r7, #12]
 8027ba4:	2300      	movs	r3, #0
 8027ba6:	60bb      	str	r3, [r7, #8]
 8027ba8:	e00c      	b.n	8027bc4 <84780c9f08e19cea1884da40f03f0c5650f281d0+0x34>
 8027baa:	687a      	ldr	r2, [r7, #4]
 8027bac:	68bb      	ldr	r3, [r7, #8]
 8027bae:	005b      	lsls	r3, r3, #1
 8027bb0:	4413      	add	r3, r2
 8027bb2:	885b      	ldrh	r3, [r3, #2]
 8027bb4:	2b00      	cmp	r3, #0
 8027bb6:	d002      	beq.n	8027bbe <84780c9f08e19cea1884da40f03f0c5650f281d0+0x2e>
 8027bb8:	68fb      	ldr	r3, [r7, #12]
 8027bba:	3301      	adds	r3, #1
 8027bbc:	60fb      	str	r3, [r7, #12]
 8027bbe:	68bb      	ldr	r3, [r7, #8]
 8027bc0:	3301      	adds	r3, #1
 8027bc2:	60bb      	str	r3, [r7, #8]
 8027bc4:	68bb      	ldr	r3, [r7, #8]
 8027bc6:	2b05      	cmp	r3, #5
 8027bc8:	d9ef      	bls.n	8027baa <84780c9f08e19cea1884da40f03f0c5650f281d0+0x1a>
 8027bca:	68fb      	ldr	r3, [r7, #12]
 8027bcc:	4618      	mov	r0, r3
 8027bce:	3714      	adds	r7, #20
 8027bd0:	46bd      	mov	sp, r7
 8027bd2:	bc80      	pop	{r7}
 8027bd4:	4770      	bx	lr
 8027bd6:	bf00      	nop
 8027bd8:	20000040 	.word	0x20000040

08027bdc <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e>:
 8027bdc:	b580      	push	{r7, lr}
 8027bde:	b086      	sub	sp, #24
 8027be0:	af00      	add	r7, sp, #0
 8027be2:	6078      	str	r0, [r7, #4]
 8027be4:	6039      	str	r1, [r7, #0]
 8027be6:	4b17      	ldr	r3, [pc, #92]	; (8027c44 <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x68>)
 8027be8:	681b      	ldr	r3, [r3, #0]
 8027bea:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027bee:	60fb      	str	r3, [r7, #12]
 8027bf0:	2300      	movs	r3, #0
 8027bf2:	617b      	str	r3, [r7, #20]
 8027bf4:	2300      	movs	r3, #0
 8027bf6:	613b      	str	r3, [r7, #16]
 8027bf8:	e01c      	b.n	8027c34 <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x58>
 8027bfa:	68fa      	ldr	r2, [r7, #12]
 8027bfc:	693b      	ldr	r3, [r7, #16]
 8027bfe:	005b      	lsls	r3, r3, #1
 8027c00:	4413      	add	r3, r2
 8027c02:	885b      	ldrh	r3, [r3, #2]
 8027c04:	2b00      	cmp	r3, #0
 8027c06:	d012      	beq.n	8027c2e <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x52>
 8027c08:	687a      	ldr	r2, [r7, #4]
 8027c0a:	697b      	ldr	r3, [r7, #20]
 8027c0c:	429a      	cmp	r2, r3
 8027c0e:	d10b      	bne.n	8027c28 <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x4c>
 8027c10:	693b      	ldr	r3, [r7, #16]
 8027c12:	005b      	lsls	r3, r3, #1
 8027c14:	68fa      	ldr	r2, [r7, #12]
 8027c16:	4413      	add	r3, r2
 8027c18:	3302      	adds	r3, #2
 8027c1a:	2202      	movs	r2, #2
 8027c1c:	4619      	mov	r1, r3
 8027c1e:	6838      	ldr	r0, [r7, #0]
 8027c20:	f7ff fe3a 	bl	8027898 <c5868198428dfaffddb0900c3d01452778b19d11>
 8027c24:	2301      	movs	r3, #1
 8027c26:	e009      	b.n	8027c3c <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x60>
 8027c28:	697b      	ldr	r3, [r7, #20]
 8027c2a:	3301      	adds	r3, #1
 8027c2c:	617b      	str	r3, [r7, #20]
 8027c2e:	693b      	ldr	r3, [r7, #16]
 8027c30:	3301      	adds	r3, #1
 8027c32:	613b      	str	r3, [r7, #16]
 8027c34:	693b      	ldr	r3, [r7, #16]
 8027c36:	2b05      	cmp	r3, #5
 8027c38:	d9df      	bls.n	8027bfa <edbad025e0ac3bf74f1c6dfb533f2fa5652feb1e+0x1e>
 8027c3a:	2300      	movs	r3, #0
 8027c3c:	4618      	mov	r0, r3
 8027c3e:	3718      	adds	r7, #24
 8027c40:	46bd      	mov	sp, r7
 8027c42:	bd80      	pop	{r7, pc}
 8027c44:	20000040 	.word	0x20000040

08027c48 <bdffef4226ee0110f60b8de23959aef3caa4ba4a>:
 8027c48:	b580      	push	{r7, lr}
 8027c4a:	b086      	sub	sp, #24
 8027c4c:	af00      	add	r7, sp, #0
 8027c4e:	4b24      	ldr	r3, [pc, #144]	; (8027ce0 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x98>)
 8027c50:	681b      	ldr	r3, [r3, #0]
 8027c52:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027c56:	60bb      	str	r3, [r7, #8]
 8027c58:	2300      	movs	r3, #0
 8027c5a:	617b      	str	r3, [r7, #20]
 8027c5c:	2300      	movs	r3, #0
 8027c5e:	613b      	str	r3, [r7, #16]
 8027c60:	e00c      	b.n	8027c7c <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x34>
 8027c62:	68ba      	ldr	r2, [r7, #8]
 8027c64:	693b      	ldr	r3, [r7, #16]
 8027c66:	005b      	lsls	r3, r3, #1
 8027c68:	4413      	add	r3, r2
 8027c6a:	885b      	ldrh	r3, [r3, #2]
 8027c6c:	2b00      	cmp	r3, #0
 8027c6e:	d002      	beq.n	8027c76 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x2e>
 8027c70:	697b      	ldr	r3, [r7, #20]
 8027c72:	3301      	adds	r3, #1
 8027c74:	617b      	str	r3, [r7, #20]
 8027c76:	693b      	ldr	r3, [r7, #16]
 8027c78:	3301      	adds	r3, #1
 8027c7a:	613b      	str	r3, [r7, #16]
 8027c7c:	693b      	ldr	r3, [r7, #16]
 8027c7e:	2b05      	cmp	r3, #5
 8027c80:	d9ef      	bls.n	8027c62 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x1a>
 8027c82:	2300      	movs	r3, #0
 8027c84:	60fb      	str	r3, [r7, #12]
 8027c86:	e022      	b.n	8027cce <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x86>
 8027c88:	68ba      	ldr	r2, [r7, #8]
 8027c8a:	68fb      	ldr	r3, [r7, #12]
 8027c8c:	3302      	adds	r3, #2
 8027c8e:	009b      	lsls	r3, r3, #2
 8027c90:	4413      	add	r3, r2
 8027c92:	88db      	ldrh	r3, [r3, #6]
 8027c94:	2b00      	cmp	r3, #0
 8027c96:	d017      	beq.n	8027cc8 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x80>
 8027c98:	68fb      	ldr	r3, [r7, #12]
 8027c9a:	3302      	adds	r3, #2
 8027c9c:	009b      	lsls	r3, r3, #2
 8027c9e:	68ba      	ldr	r2, [r7, #8]
 8027ca0:	4413      	add	r3, r2
 8027ca2:	1d99      	adds	r1, r3, #6
 8027ca4:	1d3b      	adds	r3, r7, #4
 8027ca6:	2202      	movs	r2, #2
 8027ca8:	4618      	mov	r0, r3
 8027caa:	f7ff fdf5 	bl	8027898 <c5868198428dfaffddb0900c3d01452778b19d11>
 8027cae:	1d3b      	adds	r3, r7, #4
 8027cb0:	4618      	mov	r0, r3
 8027cb2:	f7ff feb3 	bl	8027a1c <29fa8ed2960e61836c5411711158d1cb9cd67052>
 8027cb6:	4603      	mov	r3, r0
 8027cb8:	f083 0301 	eor.w	r3, r3, #1
 8027cbc:	b2db      	uxtb	r3, r3
 8027cbe:	2b00      	cmp	r3, #0
 8027cc0:	d002      	beq.n	8027cc8 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x80>
 8027cc2:	697b      	ldr	r3, [r7, #20]
 8027cc4:	3301      	adds	r3, #1
 8027cc6:	617b      	str	r3, [r7, #20]
 8027cc8:	68fb      	ldr	r3, [r7, #12]
 8027cca:	3301      	adds	r3, #1
 8027ccc:	60fb      	str	r3, [r7, #12]
 8027cce:	68fb      	ldr	r3, [r7, #12]
 8027cd0:	2b09      	cmp	r3, #9
 8027cd2:	d9d9      	bls.n	8027c88 <bdffef4226ee0110f60b8de23959aef3caa4ba4a+0x40>
 8027cd4:	697b      	ldr	r3, [r7, #20]
 8027cd6:	4618      	mov	r0, r3
 8027cd8:	3718      	adds	r7, #24
 8027cda:	46bd      	mov	sp, r7
 8027cdc:	bd80      	pop	{r7, pc}
 8027cde:	bf00      	nop
 8027ce0:	20000040 	.word	0x20000040

08027ce4 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac>:
 8027ce4:	b580      	push	{r7, lr}
 8027ce6:	b088      	sub	sp, #32
 8027ce8:	af00      	add	r7, sp, #0
 8027cea:	6078      	str	r0, [r7, #4]
 8027cec:	6039      	str	r1, [r7, #0]
 8027cee:	4b35      	ldr	r3, [pc, #212]	; (8027dc4 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xe0>)
 8027cf0:	681b      	ldr	r3, [r3, #0]
 8027cf2:	f603 2392 	addw	r3, r3, #2706	; 0xa92
 8027cf6:	613b      	str	r3, [r7, #16]
 8027cf8:	2300      	movs	r3, #0
 8027cfa:	61fb      	str	r3, [r7, #28]
 8027cfc:	2300      	movs	r3, #0
 8027cfe:	61bb      	str	r3, [r7, #24]
 8027d00:	e01c      	b.n	8027d3c <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0x58>
 8027d02:	693a      	ldr	r2, [r7, #16]
 8027d04:	69bb      	ldr	r3, [r7, #24]
 8027d06:	005b      	lsls	r3, r3, #1
 8027d08:	4413      	add	r3, r2
 8027d0a:	885b      	ldrh	r3, [r3, #2]
 8027d0c:	2b00      	cmp	r3, #0
 8027d0e:	d012      	beq.n	8027d36 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0x52>
 8027d10:	687a      	ldr	r2, [r7, #4]
 8027d12:	69fb      	ldr	r3, [r7, #28]
 8027d14:	429a      	cmp	r2, r3
 8027d16:	d10b      	bne.n	8027d30 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0x4c>
 8027d18:	69bb      	ldr	r3, [r7, #24]
 8027d1a:	005b      	lsls	r3, r3, #1
 8027d1c:	693a      	ldr	r2, [r7, #16]
 8027d1e:	4413      	add	r3, r2
 8027d20:	3302      	adds	r3, #2
 8027d22:	2202      	movs	r2, #2
 8027d24:	4619      	mov	r1, r3
 8027d26:	6838      	ldr	r0, [r7, #0]
 8027d28:	f7ff fdb6 	bl	8027898 <c5868198428dfaffddb0900c3d01452778b19d11>
 8027d2c:	2301      	movs	r3, #1
 8027d2e:	e045      	b.n	8027dbc <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xd8>
 8027d30:	69fb      	ldr	r3, [r7, #28]
 8027d32:	3301      	adds	r3, #1
 8027d34:	61fb      	str	r3, [r7, #28]
 8027d36:	69bb      	ldr	r3, [r7, #24]
 8027d38:	3301      	adds	r3, #1
 8027d3a:	61bb      	str	r3, [r7, #24]
 8027d3c:	69bb      	ldr	r3, [r7, #24]
 8027d3e:	2b05      	cmp	r3, #5
 8027d40:	d9df      	bls.n	8027d02 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0x1e>
 8027d42:	2300      	movs	r3, #0
 8027d44:	617b      	str	r3, [r7, #20]
 8027d46:	e035      	b.n	8027db4 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xd0>
 8027d48:	693a      	ldr	r2, [r7, #16]
 8027d4a:	697b      	ldr	r3, [r7, #20]
 8027d4c:	3302      	adds	r3, #2
 8027d4e:	009b      	lsls	r3, r3, #2
 8027d50:	4413      	add	r3, r2
 8027d52:	88db      	ldrh	r3, [r3, #6]
 8027d54:	2b00      	cmp	r3, #0
 8027d56:	d02a      	beq.n	8027dae <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xca>
 8027d58:	697b      	ldr	r3, [r7, #20]
 8027d5a:	3302      	adds	r3, #2
 8027d5c:	009b      	lsls	r3, r3, #2
 8027d5e:	693a      	ldr	r2, [r7, #16]
 8027d60:	4413      	add	r3, r2
 8027d62:	1d99      	adds	r1, r3, #6
 8027d64:	f107 030c 	add.w	r3, r7, #12
 8027d68:	2202      	movs	r2, #2
 8027d6a:	4618      	mov	r0, r3
 8027d6c:	f7ff fd94 	bl	8027898 <c5868198428dfaffddb0900c3d01452778b19d11>
 8027d70:	f107 030c 	add.w	r3, r7, #12
 8027d74:	4618      	mov	r0, r3
 8027d76:	f7ff fe51 	bl	8027a1c <29fa8ed2960e61836c5411711158d1cb9cd67052>
 8027d7a:	4603      	mov	r3, r0
 8027d7c:	f083 0301 	eor.w	r3, r3, #1
 8027d80:	b2db      	uxtb	r3, r3
 8027d82:	2b00      	cmp	r3, #0
 8027d84:	d013      	beq.n	8027dae <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xca>
 8027d86:	687a      	ldr	r2, [r7, #4]
 8027d88:	69fb      	ldr	r3, [r7, #28]
 8027d8a:	429a      	cmp	r2, r3
 8027d8c:	d10c      	bne.n	8027da8 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xc4>
 8027d8e:	697b      	ldr	r3, [r7, #20]
 8027d90:	3302      	adds	r3, #2
 8027d92:	009b      	lsls	r3, r3, #2
 8027d94:	693a      	ldr	r2, [r7, #16]
 8027d96:	4413      	add	r3, r2
 8027d98:	3306      	adds	r3, #6
 8027d9a:	2202      	movs	r2, #2
 8027d9c:	4619      	mov	r1, r3
 8027d9e:	6838      	ldr	r0, [r7, #0]
 8027da0:	f7ff fd7a 	bl	8027898 <c5868198428dfaffddb0900c3d01452778b19d11>
 8027da4:	2301      	movs	r3, #1
 8027da6:	e009      	b.n	8027dbc <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0xd8>
 8027da8:	69fb      	ldr	r3, [r7, #28]
 8027daa:	3301      	adds	r3, #1
 8027dac:	61fb      	str	r3, [r7, #28]
 8027dae:	697b      	ldr	r3, [r7, #20]
 8027db0:	3301      	adds	r3, #1
 8027db2:	617b      	str	r3, [r7, #20]
 8027db4:	697b      	ldr	r3, [r7, #20]
 8027db6:	2b09      	cmp	r3, #9
 8027db8:	d9c6      	bls.n	8027d48 <82d5e8b1ced6280c54c7c9d9bc6bfacaaea9bbac+0x64>
 8027dba:	2300      	movs	r3, #0
 8027dbc:	4618      	mov	r0, r3
 8027dbe:	3720      	adds	r7, #32
 8027dc0:	46bd      	mov	sp, r7
 8027dc2:	bd80      	pop	{r7, pc}
 8027dc4:	20000040 	.word	0x20000040

08027dc8 <73cd113f0512e09e8865b1dc11046143bbfb5214>:
 8027dc8:	b580      	push	{r7, lr}
 8027dca:	af00      	add	r7, sp, #0
 8027dcc:	f7de fc1c 	bl	8006608 <EMBENET_RADIO_GetCapabilities>
 8027dd0:	4602      	mov	r2, r0
 8027dd2:	4b04      	ldr	r3, [pc, #16]	; (8027de4 <73cd113f0512e09e8865b1dc11046143bbfb5214+0x1c>)
 8027dd4:	681b      	ldr	r3, [r3, #0]
 8027dd6:	f992 201c 	ldrsb.w	r2, [r2, #28]
 8027dda:	f883 2308 	strb.w	r2, [r3, #776]	; 0x308
 8027dde:	bf00      	nop
 8027de0:	bd80      	pop	{r7, pc}
 8027de2:	bf00      	nop
 8027de4:	20000040 	.word	0x20000040

08027de8 <6607d1a8e0084dff834e59246aa78b5f6da467d9>:
 8027de8:	b480      	push	{r7}
 8027dea:	af00      	add	r7, sp, #0
 8027dec:	bf00      	nop
 8027dee:	46bd      	mov	sp, r7
 8027df0:	bc80      	pop	{r7}
 8027df2:	4770      	bx	lr

08027df4 <ac88c013d0ed7f5b742e43c5288111c1f79c1a36>:
 8027df4:	b480      	push	{r7}
 8027df6:	af00      	add	r7, sp, #0
 8027df8:	bf00      	nop
 8027dfa:	46bd      	mov	sp, r7
 8027dfc:	bc80      	pop	{r7}
 8027dfe:	4770      	bx	lr

08027e00 <0a971023c987bf5f21422714f0ff94b4a7c15529>:
 8027e00:	b480      	push	{r7}
 8027e02:	af00      	add	r7, sp, #0
 8027e04:	f44f 7380 	mov.w	r3, #256	; 0x100
 8027e08:	4618      	mov	r0, r3
 8027e0a:	46bd      	mov	sp, r7
 8027e0c:	bc80      	pop	{r7}
 8027e0e:	4770      	bx	lr

08027e10 <7a609a09e67535970a8503dff96b9de207d8fd88>:
 8027e10:	b480      	push	{r7}
 8027e12:	b083      	sub	sp, #12
 8027e14:	af00      	add	r7, sp, #0
 8027e16:	4603      	mov	r3, r0
 8027e18:	80fb      	strh	r3, [r7, #6]
 8027e1a:	88fb      	ldrh	r3, [r7, #6]
 8027e1c:	0a1b      	lsrs	r3, r3, #8
 8027e1e:	b29b      	uxth	r3, r3
 8027e20:	4618      	mov	r0, r3
 8027e22:	370c      	adds	r7, #12
 8027e24:	46bd      	mov	sp, r7
 8027e26:	bc80      	pop	{r7}
 8027e28:	4770      	bx	lr
	...

08027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>:
 8027e2c:	b480      	push	{r7}
 8027e2e:	b08b      	sub	sp, #44	; 0x2c
 8027e30:	af00      	add	r7, sp, #0
 8027e32:	60f8      	str	r0, [r7, #12]
 8027e34:	60b9      	str	r1, [r7, #8]
 8027e36:	607a      	str	r2, [r7, #4]
 8027e38:	603b      	str	r3, [r7, #0]
 8027e3a:	4b5d      	ldr	r3, [pc, #372]	; (8027fb0 <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x184>)
 8027e3c:	681b      	ldr	r3, [r3, #0]
 8027e3e:	f503 7342 	add.w	r3, r3, #776	; 0x308
 8027e42:	617b      	str	r3, [r7, #20]
 8027e44:	2219      	movs	r2, #25
 8027e46:	68bb      	ldr	r3, [r7, #8]
 8027e48:	4293      	cmp	r3, r2
 8027e4a:	d202      	bcs.n	8027e52 <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x26>
 8027e4c:	2380      	movs	r3, #128	; 0x80
 8027e4e:	627b      	str	r3, [r7, #36]	; 0x24
 8027e50:	e01d      	b.n	8027e8e <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x62>
 8027e52:	687a      	ldr	r2, [r7, #4]
 8027e54:	68bb      	ldr	r3, [r7, #8]
 8027e56:	429a      	cmp	r2, r3
 8027e58:	d901      	bls.n	8027e5e <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x32>
 8027e5a:	687b      	ldr	r3, [r7, #4]
 8027e5c:	60bb      	str	r3, [r7, #8]
 8027e5e:	687b      	ldr	r3, [r7, #4]
 8027e60:	2b00      	cmp	r3, #0
 8027e62:	d103      	bne.n	8027e6c <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x40>
 8027e64:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8027e68:	627b      	str	r3, [r7, #36]	; 0x24
 8027e6a:	e010      	b.n	8027e8e <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x62>
 8027e6c:	68ba      	ldr	r2, [r7, #8]
 8027e6e:	4613      	mov	r3, r2
 8027e70:	005b      	lsls	r3, r3, #1
 8027e72:	4413      	add	r3, r2
 8027e74:	021b      	lsls	r3, r3, #8
 8027e76:	461a      	mov	r2, r3
 8027e78:	687b      	ldr	r3, [r7, #4]
 8027e7a:	fbb2 f3f3 	udiv	r3, r2, r3
 8027e7e:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
 8027e82:	021b      	lsls	r3, r3, #8
 8027e84:	089b      	lsrs	r3, r3, #2
 8027e86:	627b      	str	r3, [r7, #36]	; 0x24
 8027e88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8027e8a:	0a1b      	lsrs	r3, r3, #8
 8027e8c:	627b      	str	r3, [r7, #36]	; 0x24
 8027e8e:	2240      	movs	r2, #64	; 0x40
 8027e90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8027e92:	4293      	cmp	r3, r2
 8027e94:	d202      	bcs.n	8027e9c <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x70>
 8027e96:	2340      	movs	r3, #64	; 0x40
 8027e98:	627b      	str	r3, [r7, #36]	; 0x24
 8027e9a:	e007      	b.n	8027eac <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x80>
 8027e9c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8027ea0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8027ea2:	4293      	cmp	r3, r2
 8027ea4:	d902      	bls.n	8027eac <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x80>
 8027ea6:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8027eaa:	627b      	str	r3, [r7, #36]	; 0x24
 8027eac:	697b      	ldr	r3, [r7, #20]
 8027eae:	f993 3000 	ldrsb.w	r3, [r3]
 8027eb2:	461a      	mov	r2, r3
 8027eb4:	68fb      	ldr	r3, [r7, #12]
 8027eb6:	4293      	cmp	r3, r2
 8027eb8:	da03      	bge.n	8027ec2 <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x96>
 8027eba:	f44f 7340 	mov.w	r3, #768	; 0x300
 8027ebe:	623b      	str	r3, [r7, #32]
 8027ec0:	e027      	b.n	8027f12 <cf0f8df5c05700b487fbecc2e58d189165f075ac+0xe6>
 8027ec2:	697b      	ldr	r3, [r7, #20]
 8027ec4:	f993 3000 	ldrsb.w	r3, [r3]
 8027ec8:	461a      	mov	r2, r3
 8027eca:	230f      	movs	r3, #15
 8027ecc:	4413      	add	r3, r2
 8027ece:	68fa      	ldr	r2, [r7, #12]
 8027ed0:	429a      	cmp	r2, r3
 8027ed2:	db02      	blt.n	8027eda <cf0f8df5c05700b487fbecc2e58d189165f075ac+0xae>
 8027ed4:	2340      	movs	r3, #64	; 0x40
 8027ed6:	623b      	str	r3, [r7, #32]
 8027ed8:	e01b      	b.n	8027f12 <cf0f8df5c05700b487fbecc2e58d189165f075ac+0xe6>
 8027eda:	230f      	movs	r3, #15
 8027edc:	461a      	mov	r2, r3
 8027ede:	697b      	ldr	r3, [r7, #20]
 8027ee0:	f993 3000 	ldrsb.w	r3, [r3]
 8027ee4:	4619      	mov	r1, r3
 8027ee6:	68fb      	ldr	r3, [r7, #12]
 8027ee8:	1a5b      	subs	r3, r3, r1
 8027eea:	1ad3      	subs	r3, r2, r3
 8027eec:	2240      	movs	r2, #64	; 0x40
 8027eee:	fb02 f303 	mul.w	r3, r2, r3
 8027ef2:	021a      	lsls	r2, r3, #8
 8027ef4:	f44f 7370 	mov.w	r3, #960	; 0x3c0
 8027ef8:	0219      	lsls	r1, r3, #8
 8027efa:	f44f 7340 	mov.w	r3, #768	; 0x300
 8027efe:	4618      	mov	r0, r3
 8027f00:	2340      	movs	r3, #64	; 0x40
 8027f02:	1ac3      	subs	r3, r0, r3
 8027f04:	fb91 f3f3 	sdiv	r3, r1, r3
 8027f08:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f0c:	2240      	movs	r2, #64	; 0x40
 8027f0e:	4413      	add	r3, r2
 8027f10:	623b      	str	r3, [r7, #32]
 8027f12:	683a      	ldr	r2, [r7, #0]
 8027f14:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8027f16:	429a      	cmp	r2, r3
 8027f18:	d901      	bls.n	8027f1e <cf0f8df5c05700b487fbecc2e58d189165f075ac+0xf2>
 8027f1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8027f1c:	603b      	str	r3, [r7, #0]
 8027f1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8027f20:	2b00      	cmp	r3, #0
 8027f22:	d012      	beq.n	8027f4a <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x11e>
 8027f24:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8027f28:	2340      	movs	r3, #64	; 0x40
 8027f2a:	1ad3      	subs	r3, r2, r3
 8027f2c:	683a      	ldr	r2, [r7, #0]
 8027f2e:	fb02 f303 	mul.w	r3, r2, r3
 8027f32:	021a      	lsls	r2, r3, #8
 8027f34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8027f36:	fbb2 f2f3 	udiv	r2, r2, r3
 8027f3a:	2340      	movs	r3, #64	; 0x40
 8027f3c:	021b      	lsls	r3, r3, #8
 8027f3e:	4413      	add	r3, r2
 8027f40:	61fb      	str	r3, [r7, #28]
 8027f42:	69fb      	ldr	r3, [r7, #28]
 8027f44:	0a1b      	lsrs	r3, r3, #8
 8027f46:	61fb      	str	r3, [r7, #28]
 8027f48:	e001      	b.n	8027f4e <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x122>
 8027f4a:	2380      	movs	r3, #128	; 0x80
 8027f4c:	61fb      	str	r3, [r7, #28]
 8027f4e:	2264      	movs	r2, #100	; 0x64
 8027f50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8027f52:	4293      	cmp	r3, r2
 8027f54:	d302      	bcc.n	8027f5c <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x130>
 8027f56:	2340      	movs	r3, #64	; 0x40
 8027f58:	61bb      	str	r3, [r7, #24]
 8027f5a:	e016      	b.n	8027f8a <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x15e>
 8027f5c:	2205      	movs	r2, #5
 8027f5e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8027f60:	4293      	cmp	r3, r2
 8027f62:	d802      	bhi.n	8027f6a <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x13e>
 8027f64:	2340      	movs	r3, #64	; 0x40
 8027f66:	61bb      	str	r3, [r7, #24]
 8027f68:	e00f      	b.n	8027f8a <cf0f8df5c05700b487fbecc2e58d189165f075ac+0x15e>
 8027f6a:	2340      	movs	r3, #64	; 0x40
 8027f6c:	61bb      	str	r3, [r7, #24]
 8027f6e:	2240      	movs	r2, #64	; 0x40
 8027f70:	2340      	movs	r3, #64	; 0x40
 8027f72:	1ad3      	subs	r3, r2, r3
 8027f74:	2105      	movs	r1, #5
 8027f76:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8027f78:	1a52      	subs	r2, r2, r1
 8027f7a:	fb02 f303 	mul.w	r3, r2, r3
 8027f7e:	2264      	movs	r2, #100	; 0x64
 8027f80:	fbb3 f3f2 	udiv	r3, r3, r2
 8027f84:	69ba      	ldr	r2, [r7, #24]
 8027f86:	4413      	add	r3, r2
 8027f88:	61bb      	str	r3, [r7, #24]
 8027f8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8027f8c:	b29a      	uxth	r2, r3
 8027f8e:	6a3b      	ldr	r3, [r7, #32]
 8027f90:	b29b      	uxth	r3, r3
 8027f92:	4413      	add	r3, r2
 8027f94:	b29a      	uxth	r2, r3
 8027f96:	69fb      	ldr	r3, [r7, #28]
 8027f98:	b29b      	uxth	r3, r3
 8027f9a:	4413      	add	r3, r2
 8027f9c:	b29a      	uxth	r2, r3
 8027f9e:	69bb      	ldr	r3, [r7, #24]
 8027fa0:	b29b      	uxth	r3, r3
 8027fa2:	4413      	add	r3, r2
 8027fa4:	b29b      	uxth	r3, r3
 8027fa6:	4618      	mov	r0, r3
 8027fa8:	372c      	adds	r7, #44	; 0x2c
 8027faa:	46bd      	mov	sp, r7
 8027fac:	bc80      	pop	{r7}
 8027fae:	4770      	bx	lr
 8027fb0:	20000040 	.word	0x20000040

08027fb4 <cbd7b6f62340cadc4c9d6b85c02582c6f55ce23d>:
 8027fb4:	b580      	push	{r7, lr}
 8027fb6:	b082      	sub	sp, #8
 8027fb8:	af02      	add	r7, sp, #8
 8027fba:	4b09      	ldr	r3, [pc, #36]	; (8027fe0 <cbd7b6f62340cadc4c9d6b85c02582c6f55ce23d+0x2c>)
 8027fbc:	681b      	ldr	r3, [r3, #0]
 8027fbe:	f993 3308 	ldrsb.w	r3, [r3, #776]	; 0x308
 8027fc2:	4618      	mov	r0, r3
 8027fc4:	2364      	movs	r3, #100	; 0x64
 8027fc6:	9301      	str	r3, [sp, #4]
 8027fc8:	2301      	movs	r3, #1
 8027fca:	9300      	str	r3, [sp, #0]
 8027fcc:	2301      	movs	r3, #1
 8027fce:	2200      	movs	r2, #0
 8027fd0:	2100      	movs	r1, #0
 8027fd2:	f7ff ff2b 	bl	8027e2c <cf0f8df5c05700b487fbecc2e58d189165f075ac>
 8027fd6:	4603      	mov	r3, r0
 8027fd8:	4618      	mov	r0, r3
 8027fda:	46bd      	mov	sp, r7
 8027fdc:	bd80      	pop	{r7, pc}
 8027fde:	bf00      	nop
 8027fe0:	20000040 	.word	0x20000040

08027fe4 <dc0ee848a3d94ab51a590cd57f74390ab215fb95>:
 8027fe4:	b480      	push	{r7}
 8027fe6:	b085      	sub	sp, #20
 8027fe8:	af00      	add	r7, sp, #0
 8027fea:	6078      	str	r0, [r7, #4]
 8027fec:	6039      	str	r1, [r7, #0]
 8027fee:	2225      	movs	r2, #37	; 0x25
 8027ff0:	687b      	ldr	r3, [r7, #4]
 8027ff2:	4293      	cmp	r3, r2
 8027ff4:	d928      	bls.n	8028048 <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x64>
 8027ff6:	683b      	ldr	r3, [r7, #0]
 8027ff8:	2264      	movs	r2, #100	; 0x64
 8027ffa:	fb03 f202 	mul.w	r2, r3, r2
 8027ffe:	687b      	ldr	r3, [r7, #4]
 8028000:	fbb2 f3f3 	udiv	r3, r2, r3
 8028004:	60fb      	str	r3, [r7, #12]
 8028006:	4b14      	ldr	r3, [pc, #80]	; (8028058 <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x74>)
 8028008:	681b      	ldr	r3, [r3, #0]
 802800a:	68fa      	ldr	r2, [r7, #12]
 802800c:	429a      	cmp	r2, r3
 802800e:	d203      	bcs.n	8028018 <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x34>
 8028010:	f44f 7380 	mov.w	r3, #256	; 0x100
 8028014:	b29b      	uxth	r3, r3
 8028016:	e01a      	b.n	802804e <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x6a>
 8028018:	f44f 7380 	mov.w	r3, #256	; 0x100
 802801c:	b29a      	uxth	r2, r3
 802801e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8028022:	f44f 7380 	mov.w	r3, #256	; 0x100
 8028026:	1acb      	subs	r3, r1, r3
 8028028:	490b      	ldr	r1, [pc, #44]	; (8028058 <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x74>)
 802802a:	6809      	ldr	r1, [r1, #0]
 802802c:	68f8      	ldr	r0, [r7, #12]
 802802e:	1a41      	subs	r1, r0, r1
 8028030:	fb03 f101 	mul.w	r1, r3, r1
 8028034:	4b08      	ldr	r3, [pc, #32]	; (8028058 <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x74>)
 8028036:	681b      	ldr	r3, [r3, #0]
 8028038:	f1c3 0364 	rsb	r3, r3, #100	; 0x64
 802803c:	fbb1 f3f3 	udiv	r3, r1, r3
 8028040:	b29b      	uxth	r3, r3
 8028042:	4413      	add	r3, r2
 8028044:	b29b      	uxth	r3, r3
 8028046:	e002      	b.n	802804e <dc0ee848a3d94ab51a590cd57f74390ab215fb95+0x6a>
 8028048:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 802804c:	b29b      	uxth	r3, r3
 802804e:	4618      	mov	r0, r3
 8028050:	3714      	adds	r7, #20
 8028052:	46bd      	mov	sp, r7
 8028054:	bc80      	pop	{r7}
 8028056:	4770      	bx	lr
 8028058:	08031ac0 	.word	0x08031ac0

0802805c <c5868198428dfaffddb0900c3d01452778b19d11>:
 802805c:	b480      	push	{r7}
 802805e:	b089      	sub	sp, #36	; 0x24
 8028060:	af00      	add	r7, sp, #0
 8028062:	60f8      	str	r0, [r7, #12]
 8028064:	60b9      	str	r1, [r7, #8]
 8028066:	607a      	str	r2, [r7, #4]
 8028068:	68fb      	ldr	r3, [r7, #12]
 802806a:	61fb      	str	r3, [r7, #28]
 802806c:	68bb      	ldr	r3, [r7, #8]
 802806e:	61bb      	str	r3, [r7, #24]
 8028070:	687b      	ldr	r3, [r7, #4]
 8028072:	617b      	str	r3, [r7, #20]
 8028074:	2300      	movs	r3, #0
 8028076:	613b      	str	r3, [r7, #16]
 8028078:	e00d      	b.n	8028096 <c5868198428dfaffddb0900c3d01452778b19d11+0x3a>
 802807a:	69ba      	ldr	r2, [r7, #24]
 802807c:	693b      	ldr	r3, [r7, #16]
 802807e:	441a      	add	r2, r3
 8028080:	6979      	ldr	r1, [r7, #20]
 8028082:	693b      	ldr	r3, [r7, #16]
 8028084:	1acb      	subs	r3, r1, r3
 8028086:	3b01      	subs	r3, #1
 8028088:	69f9      	ldr	r1, [r7, #28]
 802808a:	440b      	add	r3, r1
 802808c:	7812      	ldrb	r2, [r2, #0]
 802808e:	701a      	strb	r2, [r3, #0]
 8028090:	693b      	ldr	r3, [r7, #16]
 8028092:	3301      	adds	r3, #1
 8028094:	613b      	str	r3, [r7, #16]
 8028096:	697a      	ldr	r2, [r7, #20]
 8028098:	693b      	ldr	r3, [r7, #16]
 802809a:	429a      	cmp	r2, r3
 802809c:	d8ed      	bhi.n	802807a <c5868198428dfaffddb0900c3d01452778b19d11+0x1e>
 802809e:	bf00      	nop
 80280a0:	bf00      	nop
 80280a2:	3724      	adds	r7, #36	; 0x24
 80280a4:	46bd      	mov	sp, r7
 80280a6:	bc80      	pop	{r7}
 80280a8:	4770      	bx	lr
	...

080280ac <9aa1c7f7136549b4c61c7ca6983f673760c5352f>:
 80280ac:	b480      	push	{r7}
 80280ae:	af00      	add	r7, sp, #0
 80280b0:	4b04      	ldr	r3, [pc, #16]	; (80280c4 <9aa1c7f7136549b4c61c7ca6983f673760c5352f+0x18>)
 80280b2:	681b      	ldr	r3, [r3, #0]
 80280b4:	2200      	movs	r2, #0
 80280b6:	f8c3 2570 	str.w	r2, [r3, #1392]	; 0x570
 80280ba:	bf00      	nop
 80280bc:	46bd      	mov	sp, r7
 80280be:	bc80      	pop	{r7}
 80280c0:	4770      	bx	lr
 80280c2:	bf00      	nop
 80280c4:	20000040 	.word	0x20000040

080280c8 <76cd6211f2085e3d946bd747f2187c2e80301a64>:
 80280c8:	b480      	push	{r7}
 80280ca:	b085      	sub	sp, #20
 80280cc:	af00      	add	r7, sp, #0
 80280ce:	6078      	str	r0, [r7, #4]
 80280d0:	687b      	ldr	r3, [r7, #4]
 80280d2:	789b      	ldrb	r3, [r3, #2]
 80280d4:	2b02      	cmp	r3, #2
 80280d6:	d901      	bls.n	80280dc <76cd6211f2085e3d946bd747f2187c2e80301a64+0x14>
 80280d8:	2301      	movs	r3, #1
 80280da:	e028      	b.n	802812e <76cd6211f2085e3d946bd747f2187c2e80301a64+0x66>
 80280dc:	687b      	ldr	r3, [r7, #4]
 80280de:	789b      	ldrb	r3, [r3, #2]
 80280e0:	2b01      	cmp	r3, #1
 80280e2:	d105      	bne.n	80280f0 <76cd6211f2085e3d946bd747f2187c2e80301a64+0x28>
 80280e4:	687b      	ldr	r3, [r7, #4]
 80280e6:	889b      	ldrh	r3, [r3, #4]
 80280e8:	2b00      	cmp	r3, #0
 80280ea:	d101      	bne.n	80280f0 <76cd6211f2085e3d946bd747f2187c2e80301a64+0x28>
 80280ec:	2301      	movs	r3, #1
 80280ee:	e01e      	b.n	802812e <76cd6211f2085e3d946bd747f2187c2e80301a64+0x66>
 80280f0:	4b11      	ldr	r3, [pc, #68]	; (8028138 <76cd6211f2085e3d946bd747f2187c2e80301a64+0x70>)
 80280f2:	681b      	ldr	r3, [r3, #0]
 80280f4:	f503 63ae 	add.w	r3, r3, #1392	; 0x570
 80280f8:	60bb      	str	r3, [r7, #8]
 80280fa:	68bb      	ldr	r3, [r7, #8]
 80280fc:	681b      	ldr	r3, [r3, #0]
 80280fe:	60fb      	str	r3, [r7, #12]
 8028100:	687b      	ldr	r3, [r7, #4]
 8028102:	2200      	movs	r2, #0
 8028104:	611a      	str	r2, [r3, #16]
 8028106:	e00b      	b.n	8028120 <76cd6211f2085e3d946bd747f2187c2e80301a64+0x58>
 8028108:	68fb      	ldr	r3, [r7, #12]
 802810a:	691b      	ldr	r3, [r3, #16]
 802810c:	2b00      	cmp	r3, #0
 802810e:	d104      	bne.n	802811a <76cd6211f2085e3d946bd747f2187c2e80301a64+0x52>
 8028110:	68fb      	ldr	r3, [r7, #12]
 8028112:	687a      	ldr	r2, [r7, #4]
 8028114:	611a      	str	r2, [r3, #16]
 8028116:	2300      	movs	r3, #0
 8028118:	e009      	b.n	802812e <76cd6211f2085e3d946bd747f2187c2e80301a64+0x66>
 802811a:	68fb      	ldr	r3, [r7, #12]
 802811c:	691b      	ldr	r3, [r3, #16]
 802811e:	60fb      	str	r3, [r7, #12]
 8028120:	68fb      	ldr	r3, [r7, #12]
 8028122:	2b00      	cmp	r3, #0
 8028124:	d1f0      	bne.n	8028108 <76cd6211f2085e3d946bd747f2187c2e80301a64+0x40>
 8028126:	68bb      	ldr	r3, [r7, #8]
 8028128:	687a      	ldr	r2, [r7, #4]
 802812a:	601a      	str	r2, [r3, #0]
 802812c:	2300      	movs	r3, #0
 802812e:	4618      	mov	r0, r3
 8028130:	3714      	adds	r7, #20
 8028132:	46bd      	mov	sp, r7
 8028134:	bc80      	pop	{r7}
 8028136:	4770      	bx	lr
 8028138:	20000040 	.word	0x20000040

0802813c <008a3a43d97272e7b0f59f361a8c8969876e60dd>:
 802813c:	b480      	push	{r7}
 802813e:	b085      	sub	sp, #20
 8028140:	af00      	add	r7, sp, #0
 8028142:	6078      	str	r0, [r7, #4]
 8028144:	4b0f      	ldr	r3, [pc, #60]	; (8028184 <008a3a43d97272e7b0f59f361a8c8969876e60dd+0x48>)
 8028146:	681b      	ldr	r3, [r3, #0]
 8028148:	f503 63ae 	add.w	r3, r3, #1392	; 0x570
 802814c:	60bb      	str	r3, [r7, #8]
 802814e:	68bb      	ldr	r3, [r7, #8]
 8028150:	681b      	ldr	r3, [r3, #0]
 8028152:	60fb      	str	r3, [r7, #12]
 8028154:	e00d      	b.n	8028172 <008a3a43d97272e7b0f59f361a8c8969876e60dd+0x36>
 8028156:	68fb      	ldr	r3, [r7, #12]
 8028158:	691b      	ldr	r3, [r3, #16]
 802815a:	687a      	ldr	r2, [r7, #4]
 802815c:	429a      	cmp	r2, r3
 802815e:	d105      	bne.n	802816c <008a3a43d97272e7b0f59f361a8c8969876e60dd+0x30>
 8028160:	687b      	ldr	r3, [r7, #4]
 8028162:	691a      	ldr	r2, [r3, #16]
 8028164:	68fb      	ldr	r3, [r7, #12]
 8028166:	611a      	str	r2, [r3, #16]
 8028168:	2300      	movs	r3, #0
 802816a:	e006      	b.n	802817a <008a3a43d97272e7b0f59f361a8c8969876e60dd+0x3e>
 802816c:	68fb      	ldr	r3, [r7, #12]
 802816e:	691b      	ldr	r3, [r3, #16]
 8028170:	60fb      	str	r3, [r7, #12]
 8028172:	68fb      	ldr	r3, [r7, #12]
 8028174:	2b00      	cmp	r3, #0
 8028176:	d1ee      	bne.n	8028156 <008a3a43d97272e7b0f59f361a8c8969876e60dd+0x1a>
 8028178:	2303      	movs	r3, #3
 802817a:	4618      	mov	r0, r3
 802817c:	3714      	adds	r7, #20
 802817e:	46bd      	mov	sp, r7
 8028180:	bc80      	pop	{r7}
 8028182:	4770      	bx	lr
 8028184:	20000040 	.word	0x20000040

08028188 <09c9c31144d89e446fc56189171072a9b46992fd>:
 8028188:	b5b0      	push	{r4, r5, r7, lr}
 802818a:	b090      	sub	sp, #64	; 0x40
 802818c:	af00      	add	r7, sp, #0
 802818e:	60f8      	str	r0, [r7, #12]
 8028190:	60b9      	str	r1, [r7, #8]
 8028192:	603b      	str	r3, [r7, #0]
 8028194:	4613      	mov	r3, r2
 8028196:	80fb      	strh	r3, [r7, #6]
 8028198:	4b93      	ldr	r3, [pc, #588]	; (80283e8 <09c9c31144d89e446fc56189171072a9b46992fd+0x260>)
 802819a:	681b      	ldr	r3, [r3, #0]
 802819c:	633b      	str	r3, [r7, #48]	; 0x30
 802819e:	2300      	movs	r3, #0
 80281a0:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80281a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80281a6:	f8d3 3570 	ldr.w	r3, [r3, #1392]	; 0x570
 80281aa:	63bb      	str	r3, [r7, #56]	; 0x38
 80281ac:	e00a      	b.n	80281c4 <09c9c31144d89e446fc56189171072a9b46992fd+0x3c>
 80281ae:	68ba      	ldr	r2, [r7, #8]
 80281b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80281b2:	429a      	cmp	r2, r3
 80281b4:	d103      	bne.n	80281be <09c9c31144d89e446fc56189171072a9b46992fd+0x36>
 80281b6:	2301      	movs	r3, #1
 80281b8:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 80281bc:	e005      	b.n	80281ca <09c9c31144d89e446fc56189171072a9b46992fd+0x42>
 80281be:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80281c0:	691b      	ldr	r3, [r3, #16]
 80281c2:	63bb      	str	r3, [r7, #56]	; 0x38
 80281c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80281c6:	2b00      	cmp	r3, #0
 80281c8:	d1f1      	bne.n	80281ae <09c9c31144d89e446fc56189171072a9b46992fd+0x26>
 80281ca:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80281ce:	f083 0301 	eor.w	r3, r3, #1
 80281d2:	b2db      	uxtb	r3, r3
 80281d4:	2b00      	cmp	r3, #0
 80281d6:	d00f      	beq.n	80281f8 <09c9c31144d89e446fc56189171072a9b46992fd+0x70>
 80281d8:	4a84      	ldr	r2, [pc, #528]	; (80283ec <09c9c31144d89e446fc56189171072a9b46992fd+0x264>)
 80281da:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80281de:	e892 0003 	ldmia.w	r2, {r0, r1}
 80281e2:	e883 0003 	stmia.w	r3, {r0, r1}
 80281e6:	4a82      	ldr	r2, [pc, #520]	; (80283f0 <09c9c31144d89e446fc56189171072a9b46992fd+0x268>)
 80281e8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80281ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80281f0:	f7ed f80a 	bl	8015208 <LOGGER_PrintLine>
 80281f4:	2303      	movs	r3, #3
 80281f6:	e13b      	b.n	8028470 <09c9c31144d89e446fc56189171072a9b46992fd+0x2e8>
 80281f8:	f897 3050 	ldrb.w	r3, [r7, #80]	; 0x50
 80281fc:	2b50      	cmp	r3, #80	; 0x50
 80281fe:	d90f      	bls.n	8028220 <09c9c31144d89e446fc56189171072a9b46992fd+0x98>
 8028200:	4a7a      	ldr	r2, [pc, #488]	; (80283ec <09c9c31144d89e446fc56189171072a9b46992fd+0x264>)
 8028202:	f107 031c 	add.w	r3, r7, #28
 8028206:	e892 0003 	ldmia.w	r2, {r0, r1}
 802820a:	e883 0003 	stmia.w	r3, {r0, r1}
 802820e:	4a79      	ldr	r2, [pc, #484]	; (80283f4 <09c9c31144d89e446fc56189171072a9b46992fd+0x26c>)
 8028210:	f107 031c 	add.w	r3, r7, #28
 8028214:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028218:	f7ec fff6 	bl	8015208 <LOGGER_PrintLine>
 802821c:	2302      	movs	r3, #2
 802821e:	e127      	b.n	8028470 <09c9c31144d89e446fc56189171072a9b46992fd+0x2e8>
 8028220:	20a0      	movs	r0, #160	; 0xa0
 8028222:	f7e7 fa87 	bl	800f734 <331ec243926b1d9fd1d86c735e311ea19678e45f>
 8028226:	62f8      	str	r0, [r7, #44]	; 0x2c
 8028228:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802822a:	2b00      	cmp	r3, #0
 802822c:	d101      	bne.n	8028232 <09c9c31144d89e446fc56189171072a9b46992fd+0xaa>
 802822e:	2304      	movs	r3, #4
 8028230:	e11e      	b.n	8028470 <09c9c31144d89e446fc56189171072a9b46992fd+0x2e8>
 8028232:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028234:	2280      	movs	r2, #128	; 0x80
 8028236:	705a      	strb	r2, [r3, #1]
 8028238:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802823a:	2211      	movs	r2, #17
 802823c:	741a      	strb	r2, [r3, #16]
 802823e:	68bb      	ldr	r3, [r7, #8]
 8028240:	881a      	ldrh	r2, [r3, #0]
 8028242:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028244:	829a      	strh	r2, [r3, #20]
 8028246:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028248:	88fa      	ldrh	r2, [r7, #6]
 802824a:	825a      	strh	r2, [r3, #18]
 802824c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802824e:	2203      	movs	r2, #3
 8028250:	775a      	strb	r2, [r3, #29]
 8028252:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028254:	331e      	adds	r3, #30
 8028256:	2210      	movs	r2, #16
 8028258:	68f9      	ldr	r1, [r7, #12]
 802825a:	4618      	mov	r0, r3
 802825c:	f002 ffeb 	bl	802b236 <memcpy>
 8028260:	f897 3050 	ldrb.w	r3, [r7, #80]	; 0x50
 8028264:	4619      	mov	r1, r3
 8028266:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8028268:	f001 f914 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802826c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802826e:	685b      	ldr	r3, [r3, #4]
 8028270:	f897 2050 	ldrb.w	r2, [r7, #80]	; 0x50
 8028274:	6839      	ldr	r1, [r7, #0]
 8028276:	4618      	mov	r0, r3
 8028278:	f002 ffdd 	bl	802b236 <memcpy>
 802827c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802827e:	2200      	movs	r2, #0
 8028280:	745a      	strb	r2, [r3, #17]
 8028282:	2300      	movs	r3, #0
 8028284:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8028288:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802828a:	8a9b      	ldrh	r3, [r3, #20]
 802828c:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 8028290:	d326      	bcc.n	80282e0 <09c9c31144d89e446fc56189171072a9b46992fd+0x158>
 8028292:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028294:	8a9b      	ldrh	r3, [r3, #20]
 8028296:	f5b3 4f71 	cmp.w	r3, #61696	; 0xf100
 802829a:	d221      	bcs.n	80282e0 <09c9c31144d89e446fc56189171072a9b46992fd+0x158>
 802829c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802829e:	2201      	movs	r2, #1
 80282a0:	745a      	strb	r2, [r3, #17]
 80282a2:	2301      	movs	r3, #1
 80282a4:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80282a8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282aa:	8a9b      	ldrh	r3, [r3, #20]
 80282ac:	f24f 02af 	movw	r2, #61615	; 0xf0af
 80282b0:	4293      	cmp	r3, r2
 80282b2:	d926      	bls.n	8028302 <09c9c31144d89e446fc56189171072a9b46992fd+0x17a>
 80282b4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282b6:	8a9b      	ldrh	r3, [r3, #20]
 80282b8:	f24f 02bf 	movw	r2, #61631	; 0xf0bf
 80282bc:	4293      	cmp	r3, r2
 80282be:	d820      	bhi.n	8028302 <09c9c31144d89e446fc56189171072a9b46992fd+0x17a>
 80282c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282c2:	8a5b      	ldrh	r3, [r3, #18]
 80282c4:	f24f 02af 	movw	r2, #61615	; 0xf0af
 80282c8:	4293      	cmp	r3, r2
 80282ca:	d91a      	bls.n	8028302 <09c9c31144d89e446fc56189171072a9b46992fd+0x17a>
 80282cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282ce:	8a5b      	ldrh	r3, [r3, #18]
 80282d0:	f24f 02bf 	movw	r2, #61631	; 0xf0bf
 80282d4:	4293      	cmp	r3, r2
 80282d6:	d814      	bhi.n	8028302 <09c9c31144d89e446fc56189171072a9b46992fd+0x17a>
 80282d8:	2303      	movs	r3, #3
 80282da:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80282de:	e010      	b.n	8028302 <09c9c31144d89e446fc56189171072a9b46992fd+0x17a>
 80282e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282e2:	8a5b      	ldrh	r3, [r3, #18]
 80282e4:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80282e8:	d30c      	bcc.n	8028304 <09c9c31144d89e446fc56189171072a9b46992fd+0x17c>
 80282ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282ec:	8a5b      	ldrh	r3, [r3, #18]
 80282ee:	f5b3 4f71 	cmp.w	r3, #61696	; 0xf100
 80282f2:	d207      	bcs.n	8028304 <09c9c31144d89e446fc56189171072a9b46992fd+0x17c>
 80282f4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80282f6:	2201      	movs	r2, #1
 80282f8:	745a      	strb	r2, [r3, #17]
 80282fa:	2302      	movs	r3, #2
 80282fc:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8028300:	e000      	b.n	8028304 <09c9c31144d89e446fc56189171072a9b46992fd+0x17c>
 8028302:	bf00      	nop
 8028304:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028306:	7c5b      	ldrb	r3, [r3, #17]
 8028308:	2b00      	cmp	r3, #0
 802830a:	d075      	beq.n	80283f8 <09c9c31144d89e446fc56189171072a9b46992fd+0x270>
 802830c:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8028310:	2b03      	cmp	r3, #3
 8028312:	f200 80a4 	bhi.w	802845e <09c9c31144d89e446fc56189171072a9b46992fd+0x2d6>
 8028316:	a201      	add	r2, pc, #4	; (adr r2, 802831c <09c9c31144d89e446fc56189171072a9b46992fd+0x194>)
 8028318:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802831c:	0802845f 	.word	0x0802845f
 8028320:	0802832d 	.word	0x0802832d
 8028324:	0802836b 	.word	0x0802836b
 8028328:	080283a9 	.word	0x080283a9
 802832c:	2101      	movs	r1, #1
 802832e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8028330:	f001 f8b0 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8028334:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028336:	8a9a      	ldrh	r2, [r3, #20]
 8028338:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802833a:	685b      	ldr	r3, [r3, #4]
 802833c:	b2d2      	uxtb	r2, r2
 802833e:	701a      	strb	r2, [r3, #0]
 8028340:	2102      	movs	r1, #2
 8028342:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8028344:	f001 f8a6 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8028348:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802834a:	6858      	ldr	r0, [r3, #4]
 802834c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802834e:	3312      	adds	r3, #18
 8028350:	2202      	movs	r2, #2
 8028352:	4619      	mov	r1, r3
 8028354:	f7ff fe82 	bl	802805c <c5868198428dfaffddb0900c3d01452778b19d11>
 8028358:	2101      	movs	r1, #1
 802835a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 802835c:	f001 f89a 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8028360:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028362:	685b      	ldr	r3, [r3, #4]
 8028364:	22f5      	movs	r2, #245	; 0xf5
 8028366:	701a      	strb	r2, [r3, #0]
 8028368:	e079      	b.n	802845e <09c9c31144d89e446fc56189171072a9b46992fd+0x2d6>
 802836a:	2102      	movs	r1, #2
 802836c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 802836e:	f001 f891 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8028372:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028374:	6858      	ldr	r0, [r3, #4]
 8028376:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028378:	3314      	adds	r3, #20
 802837a:	2202      	movs	r2, #2
 802837c:	4619      	mov	r1, r3
 802837e:	f7ff fe6d 	bl	802805c <c5868198428dfaffddb0900c3d01452778b19d11>
 8028382:	2101      	movs	r1, #1
 8028384:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8028386:	f001 f885 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802838a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802838c:	8a5a      	ldrh	r2, [r3, #18]
 802838e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028390:	685b      	ldr	r3, [r3, #4]
 8028392:	b2d2      	uxtb	r2, r2
 8028394:	701a      	strb	r2, [r3, #0]
 8028396:	2101      	movs	r1, #1
 8028398:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 802839a:	f001 f87b 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802839e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80283a0:	685b      	ldr	r3, [r3, #4]
 80283a2:	22f6      	movs	r2, #246	; 0xf6
 80283a4:	701a      	strb	r2, [r3, #0]
 80283a6:	e05a      	b.n	802845e <09c9c31144d89e446fc56189171072a9b46992fd+0x2d6>
 80283a8:	2101      	movs	r1, #1
 80283aa:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80283ac:	f001 f872 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80283b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80283b2:	8a5b      	ldrh	r3, [r3, #18]
 80283b4:	b2db      	uxtb	r3, r3
 80283b6:	011b      	lsls	r3, r3, #4
 80283b8:	b2db      	uxtb	r3, r3
 80283ba:	b25a      	sxtb	r2, r3
 80283bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80283be:	8a9b      	ldrh	r3, [r3, #20]
 80283c0:	b25b      	sxtb	r3, r3
 80283c2:	f003 030f 	and.w	r3, r3, #15
 80283c6:	b25b      	sxtb	r3, r3
 80283c8:	4313      	orrs	r3, r2
 80283ca:	b25a      	sxtb	r2, r3
 80283cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80283ce:	685b      	ldr	r3, [r3, #4]
 80283d0:	b2d2      	uxtb	r2, r2
 80283d2:	701a      	strb	r2, [r3, #0]
 80283d4:	2101      	movs	r1, #1
 80283d6:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80283d8:	f001 f85c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 80283dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80283de:	685b      	ldr	r3, [r3, #4]
 80283e0:	22f7      	movs	r2, #247	; 0xf7
 80283e2:	701a      	strb	r2, [r3, #0]
 80283e4:	e03b      	b.n	802845e <09c9c31144d89e446fc56189171072a9b46992fd+0x2d6>
 80283e6:	bf00      	nop
 80283e8:	20000040 	.word	0x20000040
 80283ec:	0803129c 	.word	0x0803129c
 80283f0:	0803124c 	.word	0x0803124c
 80283f4:	0803127c 	.word	0x0803127c
 80283f8:	2108      	movs	r1, #8
 80283fa:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80283fc:	f001 f84a 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8028400:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028402:	6858      	ldr	r0, [r3, #4]
 8028404:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028406:	3312      	adds	r3, #18
 8028408:	2202      	movs	r2, #2
 802840a:	4619      	mov	r1, r3
 802840c:	f7ff fe26 	bl	802805c <c5868198428dfaffddb0900c3d01452778b19d11>
 8028410:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028412:	685b      	ldr	r3, [r3, #4]
 8028414:	1c98      	adds	r0, r3, #2
 8028416:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028418:	3314      	adds	r3, #20
 802841a:	2202      	movs	r2, #2
 802841c:	4619      	mov	r1, r3
 802841e:	f7ff fe1d 	bl	802805c <c5868198428dfaffddb0900c3d01452778b19d11>
 8028422:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8028424:	7a1b      	ldrb	r3, [r3, #8]
 8028426:	827b      	strh	r3, [r7, #18]
 8028428:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802842a:	685b      	ldr	r3, [r3, #4]
 802842c:	3304      	adds	r3, #4
 802842e:	f107 0112 	add.w	r1, r7, #18
 8028432:	2202      	movs	r2, #2
 8028434:	4618      	mov	r0, r3
 8028436:	f7ff fe11 	bl	802805c <c5868198428dfaffddb0900c3d01452778b19d11>
 802843a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 802843c:	685b      	ldr	r3, [r3, #4]
 802843e:	1d9c      	adds	r4, r3, #6
 8028440:	2005      	movs	r0, #5
 8028442:	f7e4 fddb 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8028446:	4603      	mov	r3, r0
 8028448:	1c5d      	adds	r5, r3, #1
 802844a:	2002      	movs	r0, #2
 802844c:	f7e4 fdd6 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8028450:	4603      	mov	r3, r0
 8028452:	3301      	adds	r3, #1
 8028454:	462a      	mov	r2, r5
 8028456:	4621      	mov	r1, r4
 8028458:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 802845a:	f001 f93e 	bl	80296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>
 802845e:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8028460:	f7fb fb1b 	bl	8023a9a <00af7f89235fe04a2b2b59d942644988487fcbf4>
 8028464:	4603      	mov	r3, r0
 8028466:	2b00      	cmp	r3, #0
 8028468:	d001      	beq.n	802846e <09c9c31144d89e446fc56189171072a9b46992fd+0x2e6>
 802846a:	2300      	movs	r3, #0
 802846c:	e000      	b.n	8028470 <09c9c31144d89e446fc56189171072a9b46992fd+0x2e8>
 802846e:	2305      	movs	r3, #5
 8028470:	4618      	mov	r0, r3
 8028472:	3740      	adds	r7, #64	; 0x40
 8028474:	46bd      	mov	sp, r7
 8028476:	bdb0      	pop	{r4, r5, r7, pc}

08028478 <32c59f113e62a8491f5b52f96af26c008a4f227e>:
 8028478:	b580      	push	{r7, lr}
 802847a:	b086      	sub	sp, #24
 802847c:	af00      	add	r7, sp, #0
 802847e:	6078      	str	r0, [r7, #4]
 8028480:	460b      	mov	r3, r1
 8028482:	70fb      	strb	r3, [r7, #3]
 8028484:	687b      	ldr	r3, [r7, #4]
 8028486:	2280      	movs	r2, #128	; 0x80
 8028488:	705a      	strb	r2, [r3, #1]
 802848a:	78fb      	ldrb	r3, [r7, #3]
 802848c:	2b00      	cmp	r3, #0
 802848e:	d10d      	bne.n	80284ac <32c59f113e62a8491f5b52f96af26c008a4f227e+0x34>
 8028490:	4a0a      	ldr	r2, [pc, #40]	; (80284bc <32c59f113e62a8491f5b52f96af26c008a4f227e+0x44>)
 8028492:	f107 0308 	add.w	r3, r7, #8
 8028496:	e892 0003 	ldmia.w	r2, {r0, r1}
 802849a:	e883 0003 	stmia.w	r3, {r0, r1}
 802849e:	4a08      	ldr	r2, [pc, #32]	; (80284c0 <32c59f113e62a8491f5b52f96af26c008a4f227e+0x48>)
 80284a0:	f107 0308 	add.w	r3, r7, #8
 80284a4:	e893 0003 	ldmia.w	r3, {r0, r1}
 80284a8:	f7ec feae 	bl	8015208 <LOGGER_PrintLine>
 80284ac:	6878      	ldr	r0, [r7, #4]
 80284ae:	f7e7 fa4d 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80284b2:	bf00      	nop
 80284b4:	3718      	adds	r7, #24
 80284b6:	46bd      	mov	sp, r7
 80284b8:	bd80      	pop	{r7, pc}
 80284ba:	bf00      	nop
 80284bc:	0803129c 	.word	0x0803129c
 80284c0:	080312a4 	.word	0x080312a4

080284c4 <078582282b526a1ec1227869e1581c8a1811b440>:
 80284c4:	b590      	push	{r4, r7, lr}
 80284c6:	b093      	sub	sp, #76	; 0x4c
 80284c8:	af02      	add	r7, sp, #8
 80284ca:	6078      	str	r0, [r7, #4]
 80284cc:	687b      	ldr	r3, [r7, #4]
 80284ce:	2280      	movs	r2, #128	; 0x80
 80284d0:	705a      	strb	r2, [r3, #1]
 80284d2:	687b      	ldr	r3, [r7, #4]
 80284d4:	7c5b      	ldrb	r3, [r3, #17]
 80284d6:	2b00      	cmp	r3, #0
 80284d8:	f000 808c 	beq.w	80285f4 <078582282b526a1ec1227869e1581c8a1811b440+0x130>
 80284dc:	687b      	ldr	r3, [r7, #4]
 80284de:	685b      	ldr	r3, [r3, #4]
 80284e0:	781b      	ldrb	r3, [r3, #0]
 80284e2:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 80284e6:	2101      	movs	r1, #1
 80284e8:	6878      	ldr	r0, [r7, #4]
 80284ea:	f001 f80b 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80284ee:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80284f2:	f003 0303 	and.w	r3, r3, #3
 80284f6:	2b03      	cmp	r3, #3
 80284f8:	f200 809b 	bhi.w	8028632 <078582282b526a1ec1227869e1581c8a1811b440+0x16e>
 80284fc:	a201      	add	r2, pc, #4	; (adr r2, 8028504 <078582282b526a1ec1227869e1581c8a1811b440+0x40>)
 80284fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8028502:	bf00      	nop
 8028504:	08028515 	.word	0x08028515
 8028508:	08028555 	.word	0x08028555
 802850c:	0802858b 	.word	0x0802858b
 8028510:	080285c1 	.word	0x080285c1
 8028514:	687b      	ldr	r3, [r7, #4]
 8028516:	685b      	ldr	r3, [r3, #4]
 8028518:	781b      	ldrb	r3, [r3, #0]
 802851a:	021b      	lsls	r3, r3, #8
 802851c:	b29b      	uxth	r3, r3
 802851e:	687a      	ldr	r2, [r7, #4]
 8028520:	6852      	ldr	r2, [r2, #4]
 8028522:	3201      	adds	r2, #1
 8028524:	7812      	ldrb	r2, [r2, #0]
 8028526:	4413      	add	r3, r2
 8028528:	b29a      	uxth	r2, r3
 802852a:	687b      	ldr	r3, [r7, #4]
 802852c:	825a      	strh	r2, [r3, #18]
 802852e:	687b      	ldr	r3, [r7, #4]
 8028530:	685b      	ldr	r3, [r3, #4]
 8028532:	3302      	adds	r3, #2
 8028534:	781b      	ldrb	r3, [r3, #0]
 8028536:	021b      	lsls	r3, r3, #8
 8028538:	b29b      	uxth	r3, r3
 802853a:	687a      	ldr	r2, [r7, #4]
 802853c:	6852      	ldr	r2, [r2, #4]
 802853e:	3203      	adds	r2, #3
 8028540:	7812      	ldrb	r2, [r2, #0]
 8028542:	4413      	add	r3, r2
 8028544:	b29a      	uxth	r2, r3
 8028546:	687b      	ldr	r3, [r7, #4]
 8028548:	829a      	strh	r2, [r3, #20]
 802854a:	2104      	movs	r1, #4
 802854c:	6878      	ldr	r0, [r7, #4]
 802854e:	f000 ffd9 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8028552:	e06e      	b.n	8028632 <078582282b526a1ec1227869e1581c8a1811b440+0x16e>
 8028554:	687b      	ldr	r3, [r7, #4]
 8028556:	685b      	ldr	r3, [r3, #4]
 8028558:	781b      	ldrb	r3, [r3, #0]
 802855a:	021b      	lsls	r3, r3, #8
 802855c:	b29b      	uxth	r3, r3
 802855e:	687a      	ldr	r2, [r7, #4]
 8028560:	6852      	ldr	r2, [r2, #4]
 8028562:	3201      	adds	r2, #1
 8028564:	7812      	ldrb	r2, [r2, #0]
 8028566:	4413      	add	r3, r2
 8028568:	b29a      	uxth	r2, r3
 802856a:	687b      	ldr	r3, [r7, #4]
 802856c:	825a      	strh	r2, [r3, #18]
 802856e:	687b      	ldr	r3, [r7, #4]
 8028570:	685b      	ldr	r3, [r3, #4]
 8028572:	3302      	adds	r3, #2
 8028574:	781b      	ldrb	r3, [r3, #0]
 8028576:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 802857a:	b29a      	uxth	r2, r3
 802857c:	687b      	ldr	r3, [r7, #4]
 802857e:	829a      	strh	r2, [r3, #20]
 8028580:	2103      	movs	r1, #3
 8028582:	6878      	ldr	r0, [r7, #4]
 8028584:	f000 ffbe 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8028588:	e053      	b.n	8028632 <078582282b526a1ec1227869e1581c8a1811b440+0x16e>
 802858a:	687b      	ldr	r3, [r7, #4]
 802858c:	685b      	ldr	r3, [r3, #4]
 802858e:	781b      	ldrb	r3, [r3, #0]
 8028590:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8028594:	b29a      	uxth	r2, r3
 8028596:	687b      	ldr	r3, [r7, #4]
 8028598:	825a      	strh	r2, [r3, #18]
 802859a:	687b      	ldr	r3, [r7, #4]
 802859c:	685b      	ldr	r3, [r3, #4]
 802859e:	3301      	adds	r3, #1
 80285a0:	781b      	ldrb	r3, [r3, #0]
 80285a2:	021b      	lsls	r3, r3, #8
 80285a4:	b29b      	uxth	r3, r3
 80285a6:	687a      	ldr	r2, [r7, #4]
 80285a8:	6852      	ldr	r2, [r2, #4]
 80285aa:	3202      	adds	r2, #2
 80285ac:	7812      	ldrb	r2, [r2, #0]
 80285ae:	4413      	add	r3, r2
 80285b0:	b29a      	uxth	r2, r3
 80285b2:	687b      	ldr	r3, [r7, #4]
 80285b4:	829a      	strh	r2, [r3, #20]
 80285b6:	2103      	movs	r1, #3
 80285b8:	6878      	ldr	r0, [r7, #4]
 80285ba:	f000 ffa3 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80285be:	e038      	b.n	8028632 <078582282b526a1ec1227869e1581c8a1811b440+0x16e>
 80285c0:	687b      	ldr	r3, [r7, #4]
 80285c2:	685b      	ldr	r3, [r3, #4]
 80285c4:	781b      	ldrb	r3, [r3, #0]
 80285c6:	091b      	lsrs	r3, r3, #4
 80285c8:	b2db      	uxtb	r3, r3
 80285ca:	f5a3 6375 	sub.w	r3, r3, #3920	; 0xf50
 80285ce:	b29a      	uxth	r2, r3
 80285d0:	687b      	ldr	r3, [r7, #4]
 80285d2:	825a      	strh	r2, [r3, #18]
 80285d4:	687b      	ldr	r3, [r7, #4]
 80285d6:	685b      	ldr	r3, [r3, #4]
 80285d8:	781b      	ldrb	r3, [r3, #0]
 80285da:	f003 030f 	and.w	r3, r3, #15
 80285de:	b29b      	uxth	r3, r3
 80285e0:	f5a3 6375 	sub.w	r3, r3, #3920	; 0xf50
 80285e4:	b29a      	uxth	r2, r3
 80285e6:	687b      	ldr	r3, [r7, #4]
 80285e8:	829a      	strh	r2, [r3, #20]
 80285ea:	2101      	movs	r1, #1
 80285ec:	6878      	ldr	r0, [r7, #4]
 80285ee:	f000 ff89 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 80285f2:	e01e      	b.n	8028632 <078582282b526a1ec1227869e1581c8a1811b440+0x16e>
 80285f4:	687b      	ldr	r3, [r7, #4]
 80285f6:	685b      	ldr	r3, [r3, #4]
 80285f8:	781b      	ldrb	r3, [r3, #0]
 80285fa:	021b      	lsls	r3, r3, #8
 80285fc:	b29b      	uxth	r3, r3
 80285fe:	687a      	ldr	r2, [r7, #4]
 8028600:	6852      	ldr	r2, [r2, #4]
 8028602:	3201      	adds	r2, #1
 8028604:	7812      	ldrb	r2, [r2, #0]
 8028606:	4413      	add	r3, r2
 8028608:	b29a      	uxth	r2, r3
 802860a:	687b      	ldr	r3, [r7, #4]
 802860c:	825a      	strh	r2, [r3, #18]
 802860e:	687b      	ldr	r3, [r7, #4]
 8028610:	685b      	ldr	r3, [r3, #4]
 8028612:	3302      	adds	r3, #2
 8028614:	781b      	ldrb	r3, [r3, #0]
 8028616:	021b      	lsls	r3, r3, #8
 8028618:	b29b      	uxth	r3, r3
 802861a:	687a      	ldr	r2, [r7, #4]
 802861c:	6852      	ldr	r2, [r2, #4]
 802861e:	3203      	adds	r2, #3
 8028620:	7812      	ldrb	r2, [r2, #0]
 8028622:	4413      	add	r3, r2
 8028624:	b29a      	uxth	r2, r3
 8028626:	687b      	ldr	r3, [r7, #4]
 8028628:	829a      	strh	r2, [r3, #20]
 802862a:	2108      	movs	r1, #8
 802862c:	6878      	ldr	r0, [r7, #4]
 802862e:	f000 ff69 	bl	8029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>
 8028632:	687b      	ldr	r3, [r7, #4]
 8028634:	331d      	adds	r3, #29
 8028636:	4618      	mov	r0, r3
 8028638:	f7e6 fd72 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 802863c:	4603      	mov	r3, r0
 802863e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 8028642:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8028646:	2b00      	cmp	r3, #0
 8028648:	d006      	beq.n	8028658 <078582282b526a1ec1227869e1581c8a1811b440+0x194>
 802864a:	687b      	ldr	r3, [r7, #4]
 802864c:	331d      	adds	r3, #29
 802864e:	4618      	mov	r0, r3
 8028650:	f7e6 fd24 	bl	800f09c <f26cfbfa45ddc428fa93a21aa284ea921322a858>
 8028654:	4603      	mov	r3, r0
 8028656:	87fb      	strh	r3, [r7, #62]	; 0x3e
 8028658:	2300      	movs	r3, #0
 802865a:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 802865e:	687b      	ldr	r3, [r7, #4]
 8028660:	332f      	adds	r3, #47	; 0x2f
 8028662:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8028666:	6818      	ldr	r0, [r3, #0]
 8028668:	6859      	ldr	r1, [r3, #4]
 802866a:	689a      	ldr	r2, [r3, #8]
 802866c:	68db      	ldr	r3, [r3, #12]
 802866e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8028670:	4b55      	ldr	r3, [pc, #340]	; (80287c8 <078582282b526a1ec1227869e1581c8a1811b440+0x304>)
 8028672:	681b      	ldr	r3, [r3, #0]
 8028674:	f8d3 3570 	ldr.w	r3, [r3, #1392]	; 0x570
 8028678:	63bb      	str	r3, [r7, #56]	; 0x38
 802867a:	e07f      	b.n	802877c <078582282b526a1ec1227869e1581c8a1811b440+0x2b8>
 802867c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802867e:	881a      	ldrh	r2, [r3, #0]
 8028680:	687b      	ldr	r3, [r7, #4]
 8028682:	8a9b      	ldrh	r3, [r3, #20]
 8028684:	429a      	cmp	r2, r3
 8028686:	d176      	bne.n	8028776 <078582282b526a1ec1227869e1581c8a1811b440+0x2b2>
 8028688:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802868a:	789b      	ldrb	r3, [r3, #2]
 802868c:	2b02      	cmp	r3, #2
 802868e:	d048      	beq.n	8028722 <078582282b526a1ec1227869e1581c8a1811b440+0x25e>
 8028690:	2b02      	cmp	r3, #2
 8028692:	dc5c      	bgt.n	802874e <078582282b526a1ec1227869e1581c8a1811b440+0x28a>
 8028694:	2b00      	cmp	r3, #0
 8028696:	d002      	beq.n	802869e <078582282b526a1ec1227869e1581c8a1811b440+0x1da>
 8028698:	2b01      	cmp	r3, #1
 802869a:	d01d      	beq.n	80286d8 <078582282b526a1ec1227869e1581c8a1811b440+0x214>
 802869c:	e057      	b.n	802874e <078582282b526a1ec1227869e1581c8a1811b440+0x28a>
 802869e:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80286a2:	f083 0301 	eor.w	r3, r3, #1
 80286a6:	b2db      	uxtb	r3, r3
 80286a8:	2b00      	cmp	r3, #0
 80286aa:	d05f      	beq.n	802876c <078582282b526a1ec1227869e1581c8a1811b440+0x2a8>
 80286ac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80286ae:	689b      	ldr	r3, [r3, #8]
 80286b0:	2b00      	cmp	r3, #0
 80286b2:	d05b      	beq.n	802876c <078582282b526a1ec1227869e1581c8a1811b440+0x2a8>
 80286b4:	2301      	movs	r3, #1
 80286b6:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 80286ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80286bc:	689c      	ldr	r4, [r3, #8]
 80286be:	687b      	ldr	r3, [r7, #4]
 80286c0:	8a5a      	ldrh	r2, [r3, #18]
 80286c2:	687b      	ldr	r3, [r7, #4]
 80286c4:	6858      	ldr	r0, [r3, #4]
 80286c6:	687b      	ldr	r3, [r7, #4]
 80286c8:	7a1b      	ldrb	r3, [r3, #8]
 80286ca:	f107 0124 	add.w	r1, r7, #36	; 0x24
 80286ce:	9300      	str	r3, [sp, #0]
 80286d0:	4603      	mov	r3, r0
 80286d2:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80286d4:	47a0      	blx	r4
 80286d6:	e049      	b.n	802876c <078582282b526a1ec1227869e1581c8a1811b440+0x2a8>
 80286d8:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80286dc:	2b00      	cmp	r3, #0
 80286de:	d047      	beq.n	8028770 <078582282b526a1ec1227869e1581c8a1811b440+0x2ac>
 80286e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80286e2:	889b      	ldrh	r3, [r3, #4]
 80286e4:	8ffa      	ldrh	r2, [r7, #62]	; 0x3e
 80286e6:	429a      	cmp	r2, r3
 80286e8:	d005      	beq.n	80286f6 <078582282b526a1ec1227869e1581c8a1811b440+0x232>
 80286ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80286ec:	889b      	ldrh	r3, [r3, #4]
 80286ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80286f2:	4293      	cmp	r3, r2
 80286f4:	d13c      	bne.n	8028770 <078582282b526a1ec1227869e1581c8a1811b440+0x2ac>
 80286f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80286f8:	689b      	ldr	r3, [r3, #8]
 80286fa:	2b00      	cmp	r3, #0
 80286fc:	d038      	beq.n	8028770 <078582282b526a1ec1227869e1581c8a1811b440+0x2ac>
 80286fe:	2301      	movs	r3, #1
 8028700:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8028704:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8028706:	689c      	ldr	r4, [r3, #8]
 8028708:	687b      	ldr	r3, [r7, #4]
 802870a:	8a5a      	ldrh	r2, [r3, #18]
 802870c:	687b      	ldr	r3, [r7, #4]
 802870e:	6858      	ldr	r0, [r3, #4]
 8028710:	687b      	ldr	r3, [r7, #4]
 8028712:	7a1b      	ldrb	r3, [r3, #8]
 8028714:	f107 0124 	add.w	r1, r7, #36	; 0x24
 8028718:	9300      	str	r3, [sp, #0]
 802871a:	4603      	mov	r3, r0
 802871c:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 802871e:	47a0      	blx	r4
 8028720:	e026      	b.n	8028770 <078582282b526a1ec1227869e1581c8a1811b440+0x2ac>
 8028722:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8028724:	689b      	ldr	r3, [r3, #8]
 8028726:	2b00      	cmp	r3, #0
 8028728:	d024      	beq.n	8028774 <078582282b526a1ec1227869e1581c8a1811b440+0x2b0>
 802872a:	2301      	movs	r3, #1
 802872c:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8028730:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8028732:	689c      	ldr	r4, [r3, #8]
 8028734:	687b      	ldr	r3, [r7, #4]
 8028736:	8a5a      	ldrh	r2, [r3, #18]
 8028738:	687b      	ldr	r3, [r7, #4]
 802873a:	6858      	ldr	r0, [r3, #4]
 802873c:	687b      	ldr	r3, [r7, #4]
 802873e:	7a1b      	ldrb	r3, [r3, #8]
 8028740:	f107 0124 	add.w	r1, r7, #36	; 0x24
 8028744:	9300      	str	r3, [sp, #0]
 8028746:	4603      	mov	r3, r0
 8028748:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 802874a:	47a0      	blx	r4
 802874c:	e012      	b.n	8028774 <078582282b526a1ec1227869e1581c8a1811b440+0x2b0>
 802874e:	4a1f      	ldr	r2, [pc, #124]	; (80287cc <078582282b526a1ec1227869e1581c8a1811b440+0x308>)
 8028750:	f107 0314 	add.w	r3, r7, #20
 8028754:	e892 0003 	ldmia.w	r2, {r0, r1}
 8028758:	e883 0003 	stmia.w	r3, {r0, r1}
 802875c:	4a1c      	ldr	r2, [pc, #112]	; (80287d0 <078582282b526a1ec1227869e1581c8a1811b440+0x30c>)
 802875e:	f107 0314 	add.w	r3, r7, #20
 8028762:	e893 0003 	ldmia.w	r3, {r0, r1}
 8028766:	f7ec fd4f 	bl	8015208 <LOGGER_PrintLine>
 802876a:	e004      	b.n	8028776 <078582282b526a1ec1227869e1581c8a1811b440+0x2b2>
 802876c:	bf00      	nop
 802876e:	e002      	b.n	8028776 <078582282b526a1ec1227869e1581c8a1811b440+0x2b2>
 8028770:	bf00      	nop
 8028772:	e000      	b.n	8028776 <078582282b526a1ec1227869e1581c8a1811b440+0x2b2>
 8028774:	bf00      	nop
 8028776:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8028778:	691b      	ldr	r3, [r3, #16]
 802877a:	63bb      	str	r3, [r7, #56]	; 0x38
 802877c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802877e:	2b00      	cmp	r3, #0
 8028780:	f47f af7c 	bne.w	802867c <078582282b526a1ec1227869e1581c8a1811b440+0x1b8>
 8028784:	f897 303d 	ldrb.w	r3, [r7, #61]	; 0x3d
 8028788:	f083 0301 	eor.w	r3, r3, #1
 802878c:	b2db      	uxtb	r3, r3
 802878e:	2b00      	cmp	r3, #0
 8028790:	d013      	beq.n	80287ba <078582282b526a1ec1227869e1581c8a1811b440+0x2f6>
 8028792:	4a10      	ldr	r2, [pc, #64]	; (80287d4 <078582282b526a1ec1227869e1581c8a1811b440+0x310>)
 8028794:	f107 030c 	add.w	r3, r7, #12
 8028798:	e892 0003 	ldmia.w	r2, {r0, r1}
 802879c:	e883 0003 	stmia.w	r3, {r0, r1}
 80287a0:	687b      	ldr	r3, [r7, #4]
 80287a2:	8a9b      	ldrh	r3, [r3, #20]
 80287a4:	4a0c      	ldr	r2, [pc, #48]	; (80287d8 <078582282b526a1ec1227869e1581c8a1811b440+0x314>)
 80287a6:	f107 010c 	add.w	r1, r7, #12
 80287aa:	c903      	ldmia	r1, {r0, r1}
 80287ac:	f7ec fd2c 	bl	8015208 <LOGGER_PrintLine>
 80287b0:	687b      	ldr	r3, [r7, #4]
 80287b2:	8a9b      	ldrh	r3, [r3, #20]
 80287b4:	4618      	mov	r0, r3
 80287b6:	f000 f99b 	bl	8028af0 <45da0ae9d365d5954ac37be66d2ee52f526e6e5e>
 80287ba:	6878      	ldr	r0, [r7, #4]
 80287bc:	f7e7 f8c6 	bl	800f94c <218a9716e8ca33d3905e4d5d678efcb718f6f31f>
 80287c0:	bf00      	nop
 80287c2:	3744      	adds	r7, #68	; 0x44
 80287c4:	46bd      	mov	sp, r7
 80287c6:	bd90      	pop	{r4, r7, pc}
 80287c8:	20000040 	.word	0x20000040
 80287cc:	080312f4 	.word	0x080312f4
 80287d0:	080312bc 	.word	0x080312bc
 80287d4:	080312fc 	.word	0x080312fc
 80287d8:	080312d0 	.word	0x080312d0

080287dc <dfc328393dc363adf936780696ec1bbccb146c7c>:
 80287dc:	b590      	push	{r4, r7, lr}
 80287de:	b085      	sub	sp, #20
 80287e0:	af00      	add	r7, sp, #0
 80287e2:	6078      	str	r0, [r7, #4]
 80287e4:	4b0d      	ldr	r3, [pc, #52]	; (802881c <dfc328393dc363adf936780696ec1bbccb146c7c+0x40>)
 80287e6:	681b      	ldr	r3, [r3, #0]
 80287e8:	60fb      	str	r3, [r7, #12]
 80287ea:	68fb      	ldr	r3, [r7, #12]
 80287ec:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80287f0:	f8d3 4fd0 	ldr.w	r4, [r3, #4048]	; 0xfd0
 80287f4:	68fb      	ldr	r3, [r7, #12]
 80287f6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80287fa:	f8b3 0fb0 	ldrh.w	r0, [r3, #4016]	; 0xfb0
 80287fe:	68fb      	ldr	r3, [r7, #12]
 8028800:	f503 533e 	add.w	r3, r3, #12160	; 0x2f80
 8028804:	3334      	adds	r3, #52	; 0x34
 8028806:	68fa      	ldr	r2, [r7, #12]
 8028808:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 802880c:	f8d2 2fc4 	ldr.w	r2, [r2, #4036]	; 0xfc4
 8028810:	4619      	mov	r1, r3
 8028812:	47a0      	blx	r4
 8028814:	bf00      	nop
 8028816:	3714      	adds	r7, #20
 8028818:	46bd      	mov	sp, r7
 802881a:	bd90      	pop	{r4, r7, pc}
 802881c:	20000040 	.word	0x20000040

08028820 <dbdc37d2cc973221dbf43eabd97e4b7b09a554e4>:
 8028820:	b580      	push	{r7, lr}
 8028822:	b084      	sub	sp, #16
 8028824:	af00      	add	r7, sp, #0
 8028826:	4603      	mov	r3, r0
 8028828:	6039      	str	r1, [r7, #0]
 802882a:	80fb      	strh	r3, [r7, #6]
 802882c:	4b11      	ldr	r3, [pc, #68]	; (8028874 <dbdc37d2cc973221dbf43eabd97e4b7b09a554e4+0x54>)
 802882e:	681b      	ldr	r3, [r3, #0]
 8028830:	60fb      	str	r3, [r7, #12]
 8028832:	68fb      	ldr	r3, [r7, #12]
 8028834:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028838:	461a      	mov	r2, r3
 802883a:	88fb      	ldrh	r3, [r7, #6]
 802883c:	f8a2 3fb0 	strh.w	r3, [r2, #4016]	; 0xfb0
 8028840:	68fb      	ldr	r3, [r7, #12]
 8028842:	f503 533e 	add.w	r3, r3, #12160	; 0x2f80
 8028846:	3334      	adds	r3, #52	; 0x34
 8028848:	2214      	movs	r2, #20
 802884a:	6839      	ldr	r1, [r7, #0]
 802884c:	4618      	mov	r0, r3
 802884e:	f002 fcf2 	bl	802b236 <memcpy>
 8028852:	68fb      	ldr	r3, [r7, #12]
 8028854:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028858:	f8d3 3fd0 	ldr.w	r3, [r3, #4048]	; 0xfd0
 802885c:	2b00      	cmp	r3, #0
 802885e:	d004      	beq.n	802886a <dbdc37d2cc973221dbf43eabd97e4b7b09a554e4+0x4a>
 8028860:	220d      	movs	r2, #13
 8028862:	2100      	movs	r1, #0
 8028864:	4804      	ldr	r0, [pc, #16]	; (8028878 <dbdc37d2cc973221dbf43eabd97e4b7b09a554e4+0x58>)
 8028866:	f7ea fe57 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 802886a:	bf00      	nop
 802886c:	3710      	adds	r7, #16
 802886e:	46bd      	mov	sp, r7
 8028870:	bd80      	pop	{r7, pc}
 8028872:	bf00      	nop
 8028874:	20000040 	.word	0x20000040
 8028878:	080287dd 	.word	0x080287dd

0802887c <a59be9f028c32d03d0e01d3447553913a8330c11>:
 802887c:	b480      	push	{r7}
 802887e:	b083      	sub	sp, #12
 8028880:	af00      	add	r7, sp, #0
 8028882:	4b06      	ldr	r3, [pc, #24]	; (802889c <a59be9f028c32d03d0e01d3447553913a8330c11+0x20>)
 8028884:	681b      	ldr	r3, [r3, #0]
 8028886:	607b      	str	r3, [r7, #4]
 8028888:	687b      	ldr	r3, [r7, #4]
 802888a:	f503 533e 	add.w	r3, r3, #12160	; 0x2f80
 802888e:	3334      	adds	r3, #52	; 0x34
 8028890:	4618      	mov	r0, r3
 8028892:	370c      	adds	r7, #12
 8028894:	46bd      	mov	sp, r7
 8028896:	bc80      	pop	{r7}
 8028898:	4770      	bx	lr
 802889a:	bf00      	nop
 802889c:	20000040 	.word	0x20000040

080288a0 <1fa7e28f7c375400df62198096d309590e03a8ff>:
 80288a0:	b5b0      	push	{r4, r5, r7, lr}
 80288a2:	b090      	sub	sp, #64	; 0x40
 80288a4:	af00      	add	r7, sp, #0
 80288a6:	6078      	str	r0, [r7, #4]
 80288a8:	4b23      	ldr	r3, [pc, #140]	; (8028938 <1fa7e28f7c375400df62198096d309590e03a8ff+0x98>)
 80288aa:	681b      	ldr	r3, [r3, #0]
 80288ac:	63fb      	str	r3, [r7, #60]	; 0x3c
 80288ae:	f107 0308 	add.w	r3, r7, #8
 80288b2:	2234      	movs	r2, #52	; 0x34
 80288b4:	2100      	movs	r1, #0
 80288b6:	4618      	mov	r0, r3
 80288b8:	f002 fc1e 	bl	802b0f8 <memset>
 80288bc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80288be:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 80288c2:	333e      	adds	r3, #62	; 0x3e
 80288c4:	f107 0408 	add.w	r4, r7, #8
 80288c8:	461d      	mov	r5, r3
 80288ca:	6828      	ldr	r0, [r5, #0]
 80288cc:	6869      	ldr	r1, [r5, #4]
 80288ce:	68aa      	ldr	r2, [r5, #8]
 80288d0:	68eb      	ldr	r3, [r5, #12]
 80288d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288d4:	6928      	ldr	r0, [r5, #16]
 80288d6:	6969      	ldr	r1, [r5, #20]
 80288d8:	69aa      	ldr	r2, [r5, #24]
 80288da:	69eb      	ldr	r3, [r5, #28]
 80288dc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80288e0:	f503 533e 	add.w	r3, r3, #12160	; 0x2f80
 80288e4:	331e      	adds	r3, #30
 80288e6:	f107 0428 	add.w	r4, r7, #40	; 0x28
 80288ea:	461d      	mov	r5, r3
 80288ec:	6828      	ldr	r0, [r5, #0]
 80288ee:	6869      	ldr	r1, [r5, #4]
 80288f0:	68aa      	ldr	r2, [r5, #8]
 80288f2:	68eb      	ldr	r3, [r5, #12]
 80288f4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80288f6:	8a2b      	ldrh	r3, [r5, #16]
 80288f8:	8023      	strh	r3, [r4, #0]
 80288fa:	f7ed fe91 	bl	8016620 <02aa084aaa87b61bfa00c296d0ea733e41c0e799>
 80288fe:	4603      	mov	r3, r0
 8028900:	461a      	mov	r2, r3
 8028902:	f107 0308 	add.w	r3, r7, #8
 8028906:	2132      	movs	r1, #50	; 0x32
 8028908:	4618      	mov	r0, r3
 802890a:	f7ed feaf 	bl	801666c <f4e96df7a22571dfa32822f4af8ba70dac43b850>
 802890e:	4603      	mov	r3, r0
 8028910:	877b      	strh	r3, [r7, #58]	; 0x3a
 8028912:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8028914:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028918:	f8d3 3fc8 	ldr.w	r3, [r3, #4040]	; 0xfc8
 802891c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 802891e:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8028922:	f8b2 2fb0 	ldrh.w	r2, [r2, #4016]	; 0xfb0
 8028926:	f107 0108 	add.w	r1, r7, #8
 802892a:	4610      	mov	r0, r2
 802892c:	4798      	blx	r3
 802892e:	bf00      	nop
 8028930:	3740      	adds	r7, #64	; 0x40
 8028932:	46bd      	mov	sp, r7
 8028934:	bdb0      	pop	{r4, r5, r7, pc}
 8028936:	bf00      	nop
 8028938:	20000040 	.word	0x20000040

0802893c <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653>:
 802893c:	b580      	push	{r7, lr}
 802893e:	b082      	sub	sp, #8
 8028940:	af00      	add	r7, sp, #0
 8028942:	4b09      	ldr	r3, [pc, #36]	; (8028968 <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653+0x2c>)
 8028944:	681b      	ldr	r3, [r3, #0]
 8028946:	607b      	str	r3, [r7, #4]
 8028948:	687b      	ldr	r3, [r7, #4]
 802894a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 802894e:	f8d3 3fc8 	ldr.w	r3, [r3, #4040]	; 0xfc8
 8028952:	2b00      	cmp	r3, #0
 8028954:	d004      	beq.n	8028960 <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653+0x24>
 8028956:	220e      	movs	r2, #14
 8028958:	2100      	movs	r1, #0
 802895a:	4804      	ldr	r0, [pc, #16]	; (802896c <6d5ddf5b3d17bd4ac3ddacb004996141be4f4653+0x30>)
 802895c:	f7ea fddc 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8028960:	bf00      	nop
 8028962:	3708      	adds	r7, #8
 8028964:	46bd      	mov	sp, r7
 8028966:	bd80      	pop	{r7, pc}
 8028968:	20000040 	.word	0x20000040
 802896c:	080288a1 	.word	0x080288a1

08028970 <929ff3b2c53d5a7079feb2d801a18a5da5dbaacc>:
 8028970:	b580      	push	{r7, lr}
 8028972:	b084      	sub	sp, #16
 8028974:	af00      	add	r7, sp, #0
 8028976:	6078      	str	r0, [r7, #4]
 8028978:	4b15      	ldr	r3, [pc, #84]	; (80289d0 <929ff3b2c53d5a7079feb2d801a18a5da5dbaacc+0x60>)
 802897a:	681b      	ldr	r3, [r3, #0]
 802897c:	60bb      	str	r3, [r7, #8]
 802897e:	2300      	movs	r3, #0
 8028980:	60fb      	str	r3, [r7, #12]
 8028982:	e017      	b.n	80289b4 <929ff3b2c53d5a7079feb2d801a18a5da5dbaacc+0x44>
 8028984:	68ba      	ldr	r2, [r7, #8]
 8028986:	68fb      	ldr	r3, [r7, #12]
 8028988:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 802898c:	015b      	lsls	r3, r3, #5
 802898e:	4413      	add	r3, r2
 8028990:	3304      	adds	r3, #4
 8028992:	781b      	ldrb	r3, [r3, #0]
 8028994:	2b01      	cmp	r3, #1
 8028996:	d10a      	bne.n	80289ae <929ff3b2c53d5a7079feb2d801a18a5da5dbaacc+0x3e>
 8028998:	68ba      	ldr	r2, [r7, #8]
 802899a:	68fb      	ldr	r3, [r7, #12]
 802899c:	015b      	lsls	r3, r3, #5
 802899e:	4413      	add	r3, r2
 80289a0:	f503 533f 	add.w	r3, r3, #12224	; 0x2fc0
 80289a4:	333c      	adds	r3, #60	; 0x3c
 80289a6:	781b      	ldrb	r3, [r3, #0]
 80289a8:	4618      	mov	r0, r3
 80289aa:	f7e9 f88b 	bl	8011ac4 <2f27d002e6f5798bf50ec4e1714df836a8561b81>
 80289ae:	68fb      	ldr	r3, [r7, #12]
 80289b0:	3301      	adds	r3, #1
 80289b2:	60fb      	str	r3, [r7, #12]
 80289b4:	68fb      	ldr	r3, [r7, #12]
 80289b6:	2b0a      	cmp	r3, #10
 80289b8:	d9e4      	bls.n	8028984 <929ff3b2c53d5a7079feb2d801a18a5da5dbaacc+0x14>
 80289ba:	68bb      	ldr	r3, [r7, #8]
 80289bc:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80289c0:	f8d3 3fcc 	ldr.w	r3, [r3, #4044]	; 0xfcc
 80289c4:	4798      	blx	r3
 80289c6:	bf00      	nop
 80289c8:	3710      	adds	r7, #16
 80289ca:	46bd      	mov	sp, r7
 80289cc:	bd80      	pop	{r7, pc}
 80289ce:	bf00      	nop
 80289d0:	20000040 	.word	0x20000040

080289d4 <1bd2056f29f59fc1ff168b80d42a49dbb9ec73dc>:
 80289d4:	b580      	push	{r7, lr}
 80289d6:	b082      	sub	sp, #8
 80289d8:	af00      	add	r7, sp, #0
 80289da:	4b0a      	ldr	r3, [pc, #40]	; (8028a04 <1bd2056f29f59fc1ff168b80d42a49dbb9ec73dc+0x30>)
 80289dc:	681b      	ldr	r3, [r3, #0]
 80289de:	607b      	str	r3, [r7, #4]
 80289e0:	f7f2 fb24 	bl	801b02c <f13b11cc0bbf49b03ea71d42a05b941abea0a520>
 80289e4:	687b      	ldr	r3, [r7, #4]
 80289e6:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 80289ea:	f8d3 3fcc 	ldr.w	r3, [r3, #4044]	; 0xfcc
 80289ee:	2b00      	cmp	r3, #0
 80289f0:	d004      	beq.n	80289fc <1bd2056f29f59fc1ff168b80d42a49dbb9ec73dc+0x28>
 80289f2:	2210      	movs	r2, #16
 80289f4:	2100      	movs	r1, #0
 80289f6:	4804      	ldr	r0, [pc, #16]	; (8028a08 <1bd2056f29f59fc1ff168b80d42a49dbb9ec73dc+0x34>)
 80289f8:	f7ea fd8e 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 80289fc:	bf00      	nop
 80289fe:	3708      	adds	r7, #8
 8028a00:	46bd      	mov	sp, r7
 8028a02:	bd80      	pop	{r7, pc}
 8028a04:	20000040 	.word	0x20000040
 8028a08:	08028971 	.word	0x08028971

08028a0c <6a7c8072467648b34afad307e6f084585ae97774>:
 8028a0c:	b580      	push	{r7, lr}
 8028a0e:	b084      	sub	sp, #16
 8028a10:	af00      	add	r7, sp, #0
 8028a12:	6078      	str	r0, [r7, #4]
 8028a14:	4b0b      	ldr	r3, [pc, #44]	; (8028a44 <6a7c8072467648b34afad307e6f084585ae97774+0x38>)
 8028a16:	681b      	ldr	r3, [r3, #0]
 8028a18:	60fb      	str	r3, [r7, #12]
 8028a1a:	68fb      	ldr	r3, [r7, #12]
 8028a1c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028a20:	f8d3 3fc8 	ldr.w	r3, [r3, #4040]	; 0xfc8
 8028a24:	2b00      	cmp	r3, #0
 8028a26:	d008      	beq.n	8028a3a <6a7c8072467648b34afad307e6f084585ae97774+0x2e>
 8028a28:	68fb      	ldr	r3, [r7, #12]
 8028a2a:	f503 533e 	add.w	r3, r3, #12160	; 0x2f80
 8028a2e:	331e      	adds	r3, #30
 8028a30:	2212      	movs	r2, #18
 8028a32:	6879      	ldr	r1, [r7, #4]
 8028a34:	4618      	mov	r0, r3
 8028a36:	f002 fbfe 	bl	802b236 <memcpy>
 8028a3a:	bf00      	nop
 8028a3c:	3710      	adds	r7, #16
 8028a3e:	46bd      	mov	sp, r7
 8028a40:	bd80      	pop	{r7, pc}
 8028a42:	bf00      	nop
 8028a44:	20000040 	.word	0x20000040

08028a48 <b827d3e4788916e9a702935e78a76211b838ecbc>:
 8028a48:	b580      	push	{r7, lr}
 8028a4a:	b084      	sub	sp, #16
 8028a4c:	af00      	add	r7, sp, #0
 8028a4e:	6078      	str	r0, [r7, #4]
 8028a50:	4b09      	ldr	r3, [pc, #36]	; (8028a78 <b827d3e4788916e9a702935e78a76211b838ecbc+0x30>)
 8028a52:	681b      	ldr	r3, [r3, #0]
 8028a54:	60fb      	str	r3, [r7, #12]
 8028a56:	68fb      	ldr	r3, [r7, #12]
 8028a58:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028a5c:	f8d3 3fd4 	ldr.w	r3, [r3, #4052]	; 0xfd4
 8028a60:	2b00      	cmp	r3, #0
 8028a62:	d005      	beq.n	8028a70 <b827d3e4788916e9a702935e78a76211b838ecbc+0x28>
 8028a64:	68fb      	ldr	r3, [r7, #12]
 8028a66:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028a6a:	f8d3 3fd4 	ldr.w	r3, [r3, #4052]	; 0xfd4
 8028a6e:	4798      	blx	r3
 8028a70:	bf00      	nop
 8028a72:	3710      	adds	r7, #16
 8028a74:	46bd      	mov	sp, r7
 8028a76:	bd80      	pop	{r7, pc}
 8028a78:	20000040 	.word	0x20000040

08028a7c <d6f04be9d8ad12cb38262f1bba36a144854d1588>:
 8028a7c:	b580      	push	{r7, lr}
 8028a7e:	b082      	sub	sp, #8
 8028a80:	af00      	add	r7, sp, #0
 8028a82:	4b09      	ldr	r3, [pc, #36]	; (8028aa8 <d6f04be9d8ad12cb38262f1bba36a144854d1588+0x2c>)
 8028a84:	681b      	ldr	r3, [r3, #0]
 8028a86:	607b      	str	r3, [r7, #4]
 8028a88:	687b      	ldr	r3, [r7, #4]
 8028a8a:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028a8e:	f8d3 3fd4 	ldr.w	r3, [r3, #4052]	; 0xfd4
 8028a92:	2b00      	cmp	r3, #0
 8028a94:	d004      	beq.n	8028aa0 <d6f04be9d8ad12cb38262f1bba36a144854d1588+0x24>
 8028a96:	220c      	movs	r2, #12
 8028a98:	2100      	movs	r1, #0
 8028a9a:	4804      	ldr	r0, [pc, #16]	; (8028aac <d6f04be9d8ad12cb38262f1bba36a144854d1588+0x30>)
 8028a9c:	f7ea fd3c 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8028aa0:	bf00      	nop
 8028aa2:	3708      	adds	r7, #8
 8028aa4:	46bd      	mov	sp, r7
 8028aa6:	bd80      	pop	{r7, pc}
 8028aa8:	20000040 	.word	0x20000040
 8028aac:	08028a49 	.word	0x08028a49

08028ab0 <3f88cf0e7f5c43193f315c7b75ee70b96c6a02c2>:
 8028ab0:	b580      	push	{r7, lr}
 8028ab2:	b084      	sub	sp, #16
 8028ab4:	af00      	add	r7, sp, #0
 8028ab6:	6078      	str	r0, [r7, #4]
 8028ab8:	4b0c      	ldr	r3, [pc, #48]	; (8028aec <3f88cf0e7f5c43193f315c7b75ee70b96c6a02c2+0x3c>)
 8028aba:	681b      	ldr	r3, [r3, #0]
 8028abc:	60fb      	str	r3, [r7, #12]
 8028abe:	68fb      	ldr	r3, [r7, #12]
 8028ac0:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028ac4:	f8d3 3fd8 	ldr.w	r3, [r3, #4056]	; 0xfd8
 8028ac8:	2b00      	cmp	r3, #0
 8028aca:	d00b      	beq.n	8028ae4 <3f88cf0e7f5c43193f315c7b75ee70b96c6a02c2+0x34>
 8028acc:	68fb      	ldr	r3, [r7, #12]
 8028ace:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028ad2:	f8d3 3fd8 	ldr.w	r3, [r3, #4056]	; 0xfd8
 8028ad6:	68fa      	ldr	r2, [r7, #12]
 8028ad8:	f502 5200 	add.w	r2, r2, #8192	; 0x2000
 8028adc:	f8b2 2fdc 	ldrh.w	r2, [r2, #4060]	; 0xfdc
 8028ae0:	4610      	mov	r0, r2
 8028ae2:	4798      	blx	r3
 8028ae4:	bf00      	nop
 8028ae6:	3710      	adds	r7, #16
 8028ae8:	46bd      	mov	sp, r7
 8028aea:	bd80      	pop	{r7, pc}
 8028aec:	20000040 	.word	0x20000040

08028af0 <45da0ae9d365d5954ac37be66d2ee52f526e6e5e>:
 8028af0:	b580      	push	{r7, lr}
 8028af2:	b084      	sub	sp, #16
 8028af4:	af00      	add	r7, sp, #0
 8028af6:	4603      	mov	r3, r0
 8028af8:	80fb      	strh	r3, [r7, #6]
 8028afa:	4b0d      	ldr	r3, [pc, #52]	; (8028b30 <45da0ae9d365d5954ac37be66d2ee52f526e6e5e+0x40>)
 8028afc:	681b      	ldr	r3, [r3, #0]
 8028afe:	60fb      	str	r3, [r7, #12]
 8028b00:	68fb      	ldr	r3, [r7, #12]
 8028b02:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028b06:	461a      	mov	r2, r3
 8028b08:	88fb      	ldrh	r3, [r7, #6]
 8028b0a:	f8a2 3fdc 	strh.w	r3, [r2, #4060]	; 0xfdc
 8028b0e:	68fb      	ldr	r3, [r7, #12]
 8028b10:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8028b14:	f8d3 3fd8 	ldr.w	r3, [r3, #4056]	; 0xfd8
 8028b18:	2b00      	cmp	r3, #0
 8028b1a:	d004      	beq.n	8028b26 <45da0ae9d365d5954ac37be66d2ee52f526e6e5e+0x36>
 8028b1c:	2212      	movs	r2, #18
 8028b1e:	2100      	movs	r1, #0
 8028b20:	4804      	ldr	r0, [pc, #16]	; (8028b34 <45da0ae9d365d5954ac37be66d2ee52f526e6e5e+0x44>)
 8028b22:	f7ea fcf9 	bl	8013518 <1ccc4abfd47b530140fa698535d3d315df3ed28c>
 8028b26:	bf00      	nop
 8028b28:	3710      	adds	r7, #16
 8028b2a:	46bd      	mov	sp, r7
 8028b2c:	bd80      	pop	{r7, pc}
 8028b2e:	bf00      	nop
 8028b30:	20000040 	.word	0x20000040
 8028b34:	08028ab1 	.word	0x08028ab1

08028b38 <658f5a28751601d813ae36c10ddb69a9ae00a793>:
 8028b38:	b580      	push	{r7, lr}
 8028b3a:	b084      	sub	sp, #16
 8028b3c:	af00      	add	r7, sp, #0
 8028b3e:	4603      	mov	r3, r0
 8028b40:	80fb      	strh	r3, [r7, #6]
 8028b42:	4b0b      	ldr	r3, [pc, #44]	; (8028b70 <658f5a28751601d813ae36c10ddb69a9ae00a793+0x38>)
 8028b44:	681b      	ldr	r3, [r3, #0]
 8028b46:	60fb      	str	r3, [r7, #12]
 8028b48:	68fb      	ldr	r3, [r7, #12]
 8028b4a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028b4e:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8028b52:	2b00      	cmp	r3, #0
 8028b54:	d007      	beq.n	8028b66 <658f5a28751601d813ae36c10ddb69a9ae00a793+0x2e>
 8028b56:	68fb      	ldr	r3, [r7, #12]
 8028b58:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028b5c:	f8d3 316c 	ldr.w	r3, [r3, #364]	; 0x16c
 8028b60:	88fa      	ldrh	r2, [r7, #6]
 8028b62:	4610      	mov	r0, r2
 8028b64:	4798      	blx	r3
 8028b66:	bf00      	nop
 8028b68:	3710      	adds	r7, #16
 8028b6a:	46bd      	mov	sp, r7
 8028b6c:	bd80      	pop	{r7, pc}
 8028b6e:	bf00      	nop
 8028b70:	20000040 	.word	0x20000040

08028b74 <e9a40864df7737216396ae2e57c8bf2439468a7c>:
 8028b74:	b580      	push	{r7, lr}
 8028b76:	b082      	sub	sp, #8
 8028b78:	af00      	add	r7, sp, #0
 8028b7a:	4b0a      	ldr	r3, [pc, #40]	; (8028ba4 <e9a40864df7737216396ae2e57c8bf2439468a7c+0x30>)
 8028b7c:	681b      	ldr	r3, [r3, #0]
 8028b7e:	607b      	str	r3, [r7, #4]
 8028b80:	687b      	ldr	r3, [r7, #4]
 8028b82:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028b86:	f8d3 3170 	ldr.w	r3, [r3, #368]	; 0x170
 8028b8a:	2b00      	cmp	r3, #0
 8028b8c:	d005      	beq.n	8028b9a <e9a40864df7737216396ae2e57c8bf2439468a7c+0x26>
 8028b8e:	687b      	ldr	r3, [r7, #4]
 8028b90:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028b94:	f8d3 3170 	ldr.w	r3, [r3, #368]	; 0x170
 8028b98:	4798      	blx	r3
 8028b9a:	bf00      	nop
 8028b9c:	3708      	adds	r7, #8
 8028b9e:	46bd      	mov	sp, r7
 8028ba0:	bd80      	pop	{r7, pc}
 8028ba2:	bf00      	nop
 8028ba4:	20000040 	.word	0x20000040

08028ba8 <b30d7ce97a9a073e92ec5e2adfc7cb092fcb104d>:
 8028ba8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028baa:	b089      	sub	sp, #36	; 0x24
 8028bac:	af02      	add	r7, sp, #8
 8028bae:	60f8      	str	r0, [r7, #12]
 8028bb0:	60b9      	str	r1, [r7, #8]
 8028bb2:	4613      	mov	r3, r2
 8028bb4:	71fb      	strb	r3, [r7, #7]
 8028bb6:	4b11      	ldr	r3, [pc, #68]	; (8028bfc <b30d7ce97a9a073e92ec5e2adfc7cb092fcb104d+0x54>)
 8028bb8:	681b      	ldr	r3, [r3, #0]
 8028bba:	617b      	str	r3, [r7, #20]
 8028bbc:	697b      	ldr	r3, [r7, #20]
 8028bbe:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028bc2:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
 8028bc6:	2b00      	cmp	r3, #0
 8028bc8:	d013      	beq.n	8028bf2 <b30d7ce97a9a073e92ec5e2adfc7cb092fcb104d+0x4a>
 8028bca:	697b      	ldr	r3, [r7, #20]
 8028bcc:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028bd0:	f8d3 6174 	ldr.w	r6, [r3, #372]	; 0x174
 8028bd4:	68f8      	ldr	r0, [r7, #12]
 8028bd6:	f7e6 fa15 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8028bda:	4604      	mov	r4, r0
 8028bdc:	460d      	mov	r5, r1
 8028bde:	68b8      	ldr	r0, [r7, #8]
 8028be0:	f7e6 fa10 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8028be4:	4602      	mov	r2, r0
 8028be6:	460b      	mov	r3, r1
 8028be8:	79f9      	ldrb	r1, [r7, #7]
 8028bea:	9100      	str	r1, [sp, #0]
 8028bec:	4620      	mov	r0, r4
 8028bee:	4629      	mov	r1, r5
 8028bf0:	47b0      	blx	r6
 8028bf2:	bf00      	nop
 8028bf4:	371c      	adds	r7, #28
 8028bf6:	46bd      	mov	sp, r7
 8028bf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028bfa:	bf00      	nop
 8028bfc:	20000040 	.word	0x20000040

08028c00 <e097653d016fa9f6f38b73037603a15c791aa10d>:
 8028c00:	b580      	push	{r7, lr}
 8028c02:	b084      	sub	sp, #16
 8028c04:	af00      	add	r7, sp, #0
 8028c06:	e9c7 0100 	strd	r0, r1, [r7]
 8028c0a:	4b0b      	ldr	r3, [pc, #44]	; (8028c38 <e097653d016fa9f6f38b73037603a15c791aa10d+0x38>)
 8028c0c:	681b      	ldr	r3, [r3, #0]
 8028c0e:	60fb      	str	r3, [r7, #12]
 8028c10:	68fb      	ldr	r3, [r7, #12]
 8028c12:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028c16:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8028c1a:	2b00      	cmp	r3, #0
 8028c1c:	d007      	beq.n	8028c2e <e097653d016fa9f6f38b73037603a15c791aa10d+0x2e>
 8028c1e:	68fb      	ldr	r3, [r7, #12]
 8028c20:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028c24:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8028c28:	e9d7 0100 	ldrd	r0, r1, [r7]
 8028c2c:	4798      	blx	r3
 8028c2e:	bf00      	nop
 8028c30:	3710      	adds	r7, #16
 8028c32:	46bd      	mov	sp, r7
 8028c34:	bd80      	pop	{r7, pc}
 8028c36:	bf00      	nop
 8028c38:	20000040 	.word	0x20000040

08028c3c <99726ecaa54bb51ed3276e5afbd8833277b6b1cc>:
 8028c3c:	b590      	push	{r4, r7, lr}
 8028c3e:	b089      	sub	sp, #36	; 0x24
 8028c40:	af00      	add	r7, sp, #0
 8028c42:	6078      	str	r0, [r7, #4]
 8028c44:	6039      	str	r1, [r7, #0]
 8028c46:	4b11      	ldr	r3, [pc, #68]	; (8028c8c <99726ecaa54bb51ed3276e5afbd8833277b6b1cc+0x50>)
 8028c48:	681b      	ldr	r3, [r3, #0]
 8028c4a:	61fb      	str	r3, [r7, #28]
 8028c4c:	6878      	ldr	r0, [r7, #4]
 8028c4e:	f7e6 f9d9 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8028c52:	e9c7 0104 	strd	r0, r1, [r7, #16]
 8028c56:	6838      	ldr	r0, [r7, #0]
 8028c58:	f7e6 f9d4 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8028c5c:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8028c60:	69fb      	ldr	r3, [r7, #28]
 8028c62:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028c66:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8028c6a:	2b00      	cmp	r3, #0
 8028c6c:	d009      	beq.n	8028c82 <99726ecaa54bb51ed3276e5afbd8833277b6b1cc+0x46>
 8028c6e:	69fb      	ldr	r3, [r7, #28]
 8028c70:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028c74:	f8d3 417c 	ldr.w	r4, [r3, #380]	; 0x17c
 8028c78:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8028c7c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8028c80:	47a0      	blx	r4
 8028c82:	bf00      	nop
 8028c84:	3724      	adds	r7, #36	; 0x24
 8028c86:	46bd      	mov	sp, r7
 8028c88:	bd90      	pop	{r4, r7, pc}
 8028c8a:	bf00      	nop
 8028c8c:	20000040 	.word	0x20000040

08028c90 <b374fd28973c520694c78fab59b4df07772e0870>:
 8028c90:	b580      	push	{r7, lr}
 8028c92:	b084      	sub	sp, #16
 8028c94:	af00      	add	r7, sp, #0
 8028c96:	e9c7 0100 	strd	r0, r1, [r7]
 8028c9a:	4b0b      	ldr	r3, [pc, #44]	; (8028cc8 <b374fd28973c520694c78fab59b4df07772e0870+0x38>)
 8028c9c:	681b      	ldr	r3, [r3, #0]
 8028c9e:	60fb      	str	r3, [r7, #12]
 8028ca0:	68fb      	ldr	r3, [r7, #12]
 8028ca2:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028ca6:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8028caa:	2b00      	cmp	r3, #0
 8028cac:	d007      	beq.n	8028cbe <b374fd28973c520694c78fab59b4df07772e0870+0x2e>
 8028cae:	68fb      	ldr	r3, [r7, #12]
 8028cb0:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028cb4:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8028cb8:	e9d7 0100 	ldrd	r0, r1, [r7]
 8028cbc:	4798      	blx	r3
 8028cbe:	bf00      	nop
 8028cc0:	3710      	adds	r7, #16
 8028cc2:	46bd      	mov	sp, r7
 8028cc4:	bd80      	pop	{r7, pc}
 8028cc6:	bf00      	nop
 8028cc8:	20000040 	.word	0x20000040

08028ccc <174d137b644ccd4ef57a02826061d132a3dec310>:
 8028ccc:	b580      	push	{r7, lr}
 8028cce:	b084      	sub	sp, #16
 8028cd0:	af00      	add	r7, sp, #0
 8028cd2:	e9c7 0100 	strd	r0, r1, [r7]
 8028cd6:	4b0b      	ldr	r3, [pc, #44]	; (8028d04 <174d137b644ccd4ef57a02826061d132a3dec310+0x38>)
 8028cd8:	681b      	ldr	r3, [r3, #0]
 8028cda:	60fb      	str	r3, [r7, #12]
 8028cdc:	68fb      	ldr	r3, [r7, #12]
 8028cde:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028ce2:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 8028ce6:	2b00      	cmp	r3, #0
 8028ce8:	d007      	beq.n	8028cfa <174d137b644ccd4ef57a02826061d132a3dec310+0x2e>
 8028cea:	68fb      	ldr	r3, [r7, #12]
 8028cec:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028cf0:	f8d3 3188 	ldr.w	r3, [r3, #392]	; 0x188
 8028cf4:	e9d7 0100 	ldrd	r0, r1, [r7]
 8028cf8:	4798      	blx	r3
 8028cfa:	bf00      	nop
 8028cfc:	3710      	adds	r7, #16
 8028cfe:	46bd      	mov	sp, r7
 8028d00:	bd80      	pop	{r7, pc}
 8028d02:	bf00      	nop
 8028d04:	20000040 	.word	0x20000040

08028d08 <92a2aa0d77d83c323d033422c3070d3730d69fc2>:
 8028d08:	b580      	push	{r7, lr}
 8028d0a:	b084      	sub	sp, #16
 8028d0c:	af00      	add	r7, sp, #0
 8028d0e:	e9c7 0100 	strd	r0, r1, [r7]
 8028d12:	4b0b      	ldr	r3, [pc, #44]	; (8028d40 <92a2aa0d77d83c323d033422c3070d3730d69fc2+0x38>)
 8028d14:	681b      	ldr	r3, [r3, #0]
 8028d16:	60fb      	str	r3, [r7, #12]
 8028d18:	68fb      	ldr	r3, [r7, #12]
 8028d1a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028d1e:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8028d22:	2b00      	cmp	r3, #0
 8028d24:	d007      	beq.n	8028d36 <92a2aa0d77d83c323d033422c3070d3730d69fc2+0x2e>
 8028d26:	68fb      	ldr	r3, [r7, #12]
 8028d28:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028d2c:	f8d3 318c 	ldr.w	r3, [r3, #396]	; 0x18c
 8028d30:	e9d7 0100 	ldrd	r0, r1, [r7]
 8028d34:	4798      	blx	r3
 8028d36:	bf00      	nop
 8028d38:	3710      	adds	r7, #16
 8028d3a:	46bd      	mov	sp, r7
 8028d3c:	bd80      	pop	{r7, pc}
 8028d3e:	bf00      	nop
 8028d40:	20000040 	.word	0x20000040

08028d44 <ed1ec3dc0708953023c494b9efb045669b41a337>:
 8028d44:	b580      	push	{r7, lr}
 8028d46:	b086      	sub	sp, #24
 8028d48:	af00      	add	r7, sp, #0
 8028d4a:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8028d4e:	4613      	mov	r3, r2
 8028d50:	71fb      	strb	r3, [r7, #7]
 8028d52:	4b0c      	ldr	r3, [pc, #48]	; (8028d84 <ed1ec3dc0708953023c494b9efb045669b41a337+0x40>)
 8028d54:	681b      	ldr	r3, [r3, #0]
 8028d56:	617b      	str	r3, [r7, #20]
 8028d58:	697b      	ldr	r3, [r7, #20]
 8028d5a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028d5e:	f8d3 3190 	ldr.w	r3, [r3, #400]	; 0x190
 8028d62:	2b00      	cmp	r3, #0
 8028d64:	d009      	beq.n	8028d7a <ed1ec3dc0708953023c494b9efb045669b41a337+0x36>
 8028d66:	697b      	ldr	r3, [r7, #20]
 8028d68:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028d6c:	f8d3 3190 	ldr.w	r3, [r3, #400]	; 0x190
 8028d70:	f997 2007 	ldrsb.w	r2, [r7, #7]
 8028d74:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8028d78:	4798      	blx	r3
 8028d7a:	bf00      	nop
 8028d7c:	3718      	adds	r7, #24
 8028d7e:	46bd      	mov	sp, r7
 8028d80:	bd80      	pop	{r7, pc}
 8028d82:	bf00      	nop
 8028d84:	20000040 	.word	0x20000040

08028d88 <24da9999ddd48c4f3f286257592f6695f75e30ed>:
 8028d88:	b580      	push	{r7, lr}
 8028d8a:	b084      	sub	sp, #16
 8028d8c:	af00      	add	r7, sp, #0
 8028d8e:	e9c7 0100 	strd	r0, r1, [r7]
 8028d92:	4b0b      	ldr	r3, [pc, #44]	; (8028dc0 <24da9999ddd48c4f3f286257592f6695f75e30ed+0x38>)
 8028d94:	681b      	ldr	r3, [r3, #0]
 8028d96:	60fb      	str	r3, [r7, #12]
 8028d98:	68fb      	ldr	r3, [r7, #12]
 8028d9a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028d9e:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8028da2:	2b00      	cmp	r3, #0
 8028da4:	d007      	beq.n	8028db6 <24da9999ddd48c4f3f286257592f6695f75e30ed+0x2e>
 8028da6:	68fb      	ldr	r3, [r7, #12]
 8028da8:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028dac:	f8d3 3194 	ldr.w	r3, [r3, #404]	; 0x194
 8028db0:	e9d7 0100 	ldrd	r0, r1, [r7]
 8028db4:	4798      	blx	r3
 8028db6:	bf00      	nop
 8028db8:	3710      	adds	r7, #16
 8028dba:	46bd      	mov	sp, r7
 8028dbc:	bd80      	pop	{r7, pc}
 8028dbe:	bf00      	nop
 8028dc0:	20000040 	.word	0x20000040

08028dc4 <6362cea72da2b827a19bfabd8f796b6337cbd199>:
 8028dc4:	b580      	push	{r7, lr}
 8028dc6:	b084      	sub	sp, #16
 8028dc8:	af00      	add	r7, sp, #0
 8028dca:	4603      	mov	r3, r0
 8028dcc:	80fb      	strh	r3, [r7, #6]
 8028dce:	4b0b      	ldr	r3, [pc, #44]	; (8028dfc <6362cea72da2b827a19bfabd8f796b6337cbd199+0x38>)
 8028dd0:	681b      	ldr	r3, [r3, #0]
 8028dd2:	60fb      	str	r3, [r7, #12]
 8028dd4:	68fb      	ldr	r3, [r7, #12]
 8028dd6:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028dda:	f8d3 3198 	ldr.w	r3, [r3, #408]	; 0x198
 8028dde:	2b00      	cmp	r3, #0
 8028de0:	d007      	beq.n	8028df2 <6362cea72da2b827a19bfabd8f796b6337cbd199+0x2e>
 8028de2:	68fb      	ldr	r3, [r7, #12]
 8028de4:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028de8:	f8d3 3198 	ldr.w	r3, [r3, #408]	; 0x198
 8028dec:	88fa      	ldrh	r2, [r7, #6]
 8028dee:	4610      	mov	r0, r2
 8028df0:	4798      	blx	r3
 8028df2:	bf00      	nop
 8028df4:	3710      	adds	r7, #16
 8028df6:	46bd      	mov	sp, r7
 8028df8:	bd80      	pop	{r7, pc}
 8028dfa:	bf00      	nop
 8028dfc:	20000040 	.word	0x20000040

08028e00 <b6b6c147c3a69ab145ae9ef0a9039b548a4c0c2a>:
 8028e00:	b580      	push	{r7, lr}
 8028e02:	b084      	sub	sp, #16
 8028e04:	af00      	add	r7, sp, #0
 8028e06:	6078      	str	r0, [r7, #4]
 8028e08:	4b0a      	ldr	r3, [pc, #40]	; (8028e34 <b6b6c147c3a69ab145ae9ef0a9039b548a4c0c2a+0x34>)
 8028e0a:	681b      	ldr	r3, [r3, #0]
 8028e0c:	60fb      	str	r3, [r7, #12]
 8028e0e:	68fb      	ldr	r3, [r7, #12]
 8028e10:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028e14:	f8d3 319c 	ldr.w	r3, [r3, #412]	; 0x19c
 8028e18:	2b00      	cmp	r3, #0
 8028e1a:	d006      	beq.n	8028e2a <b6b6c147c3a69ab145ae9ef0a9039b548a4c0c2a+0x2a>
 8028e1c:	68fb      	ldr	r3, [r7, #12]
 8028e1e:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028e22:	f8d3 319c 	ldr.w	r3, [r3, #412]	; 0x19c
 8028e26:	6878      	ldr	r0, [r7, #4]
 8028e28:	4798      	blx	r3
 8028e2a:	bf00      	nop
 8028e2c:	3710      	adds	r7, #16
 8028e2e:	46bd      	mov	sp, r7
 8028e30:	bd80      	pop	{r7, pc}
 8028e32:	bf00      	nop
 8028e34:	20000040 	.word	0x20000040

08028e38 <aefcd9c92df085a8eaba8a8f7a9a9648ff7bcca6>:
 8028e38:	b580      	push	{r7, lr}
 8028e3a:	b084      	sub	sp, #16
 8028e3c:	af00      	add	r7, sp, #0
 8028e3e:	6078      	str	r0, [r7, #4]
 8028e40:	4b0a      	ldr	r3, [pc, #40]	; (8028e6c <aefcd9c92df085a8eaba8a8f7a9a9648ff7bcca6+0x34>)
 8028e42:	681b      	ldr	r3, [r3, #0]
 8028e44:	60fb      	str	r3, [r7, #12]
 8028e46:	68fb      	ldr	r3, [r7, #12]
 8028e48:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028e4c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8028e50:	2b00      	cmp	r3, #0
 8028e52:	d006      	beq.n	8028e62 <aefcd9c92df085a8eaba8a8f7a9a9648ff7bcca6+0x2a>
 8028e54:	68fb      	ldr	r3, [r7, #12]
 8028e56:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028e5a:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8028e5e:	6878      	ldr	r0, [r7, #4]
 8028e60:	4798      	blx	r3
 8028e62:	bf00      	nop
 8028e64:	3710      	adds	r7, #16
 8028e66:	46bd      	mov	sp, r7
 8028e68:	bd80      	pop	{r7, pc}
 8028e6a:	bf00      	nop
 8028e6c:	20000040 	.word	0x20000040

08028e70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f>:
 8028e70:	b580      	push	{r7, lr}
 8028e72:	b094      	sub	sp, #80	; 0x50
 8028e74:	af00      	add	r7, sp, #0
 8028e76:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8028e7a:	607a      	str	r2, [r7, #4]
 8028e7c:	603b      	str	r3, [r7, #0]
 8028e7e:	4b3e      	ldr	r3, [pc, #248]	; (8028f78 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x108>)
 8028e80:	681b      	ldr	r3, [r3, #0]
 8028e82:	64fb      	str	r3, [r7, #76]	; 0x4c
 8028e84:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8028e86:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028e8a:	f8d3 31a4 	ldr.w	r3, [r3, #420]	; 0x1a4
 8028e8e:	2b00      	cmp	r3, #0
 8028e90:	d06f      	beq.n	8028f72 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x102>
 8028e92:	f107 0310 	add.w	r3, r7, #16
 8028e96:	2238      	movs	r2, #56	; 0x38
 8028e98:	2100      	movs	r1, #0
 8028e9a:	4618      	mov	r0, r3
 8028e9c:	f002 f92c 	bl	802b0f8 <memset>
 8028ea0:	687b      	ldr	r3, [r7, #4]
 8028ea2:	617b      	str	r3, [r7, #20]
 8028ea4:	683b      	ldr	r3, [r7, #0]
 8028ea6:	61bb      	str	r3, [r7, #24]
 8028ea8:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8028eac:	773b      	strb	r3, [r7, #28]
 8028eae:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8028eb0:	623b      	str	r3, [r7, #32]
 8028eb2:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8028eb6:	e9c7 230a 	strd	r2, r3, [r7, #40]	; 0x28
 8028eba:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8028ebe:	e9c7 230c 	strd	r2, r3, [r7, #48]	; 0x30
 8028ec2:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8028ec6:	e9c7 230e 	strd	r2, r3, [r7, #56]	; 0x38
 8028eca:	f897 3058 	ldrb.w	r3, [r7, #88]	; 0x58
 8028ece:	3b01      	subs	r3, #1
 8028ed0:	2b04      	cmp	r3, #4
 8028ed2:	d84b      	bhi.n	8028f6c <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xfc>
 8028ed4:	a201      	add	r2, pc, #4	; (adr r2, 8028edc <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x6c>)
 8028ed6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8028eda:	bf00      	nop
 8028edc:	08028ef1 	.word	0x08028ef1
 8028ee0:	08028ef7 	.word	0x08028ef7
 8028ee4:	08028efd 	.word	0x08028efd
 8028ee8:	08028f6d 	.word	0x08028f6d
 8028eec:	08028f03 	.word	0x08028f03
 8028ef0:	2300      	movs	r3, #0
 8028ef2:	747b      	strb	r3, [r7, #17]
 8028ef4:	e008      	b.n	8028f08 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x98>
 8028ef6:	2302      	movs	r3, #2
 8028ef8:	747b      	strb	r3, [r7, #17]
 8028efa:	e005      	b.n	8028f08 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x98>
 8028efc:	2301      	movs	r3, #1
 8028efe:	747b      	strb	r3, [r7, #17]
 8028f00:	e002      	b.n	8028f08 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x98>
 8028f02:	2304      	movs	r3, #4
 8028f04:	747b      	strb	r3, [r7, #17]
 8028f06:	bf00      	nop
 8028f08:	f897 305c 	ldrb.w	r3, [r7, #92]	; 0x5c
 8028f0c:	2b02      	cmp	r3, #2
 8028f0e:	d00c      	beq.n	8028f2a <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xba>
 8028f10:	2b02      	cmp	r3, #2
 8028f12:	dc2d      	bgt.n	8028f70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x100>
 8028f14:	2b00      	cmp	r3, #0
 8028f16:	d002      	beq.n	8028f1e <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xae>
 8028f18:	2b01      	cmp	r3, #1
 8028f1a:	d003      	beq.n	8028f24 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xb4>
 8028f1c:	e028      	b.n	8028f70 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x100>
 8028f1e:	2300      	movs	r3, #0
 8028f20:	74bb      	strb	r3, [r7, #18]
 8028f22:	e005      	b.n	8028f30 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xc0>
 8028f24:	2301      	movs	r3, #1
 8028f26:	74bb      	strb	r3, [r7, #18]
 8028f28:	e002      	b.n	8028f30 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xc0>
 8028f2a:	2302      	movs	r3, #2
 8028f2c:	74bb      	strb	r3, [r7, #18]
 8028f2e:	bf00      	nop
 8028f30:	f897 3078 	ldrb.w	r3, [r7, #120]	; 0x78
 8028f34:	2b00      	cmp	r3, #0
 8028f36:	d002      	beq.n	8028f3e <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xce>
 8028f38:	2300      	movs	r3, #0
 8028f3a:	743b      	strb	r3, [r7, #16]
 8028f3c:	e001      	b.n	8028f42 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0xd2>
 8028f3e:	2301      	movs	r3, #1
 8028f40:	743b      	strb	r3, [r7, #16]
 8028f42:	2002      	movs	r0, #2
 8028f44:	f7e4 f85a 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 8028f48:	4603      	mov	r3, r0
 8028f4a:	4618      	mov	r0, r3
 8028f4c:	f7e6 f85a 	bl	800f004 <bd0efe2f4ea1bc3c059d1e48499cdcc14a5db53b>
 8028f50:	4602      	mov	r2, r0
 8028f52:	460b      	mov	r3, r1
 8028f54:	e9c7 2310 	strd	r2, r3, [r7, #64]	; 0x40
 8028f58:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8028f5a:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028f5e:	f8d3 31a4 	ldr.w	r3, [r3, #420]	; 0x1a4
 8028f62:	f107 0210 	add.w	r2, r7, #16
 8028f66:	4610      	mov	r0, r2
 8028f68:	4798      	blx	r3
 8028f6a:	e002      	b.n	8028f72 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x102>
 8028f6c:	bf00      	nop
 8028f6e:	e000      	b.n	8028f72 <4dc2fd1680c6bb57db15b34206b104bbaffb1e7f+0x102>
 8028f70:	bf00      	nop
 8028f72:	3750      	adds	r7, #80	; 0x50
 8028f74:	46bd      	mov	sp, r7
 8028f76:	bd80      	pop	{r7, pc}
 8028f78:	20000040 	.word	0x20000040

08028f7c <EMBENET_INTERNAL_TRACE_OnFreeSlots>:
 8028f7c:	b590      	push	{r4, r7, lr}
 8028f7e:	b089      	sub	sp, #36	; 0x24
 8028f80:	af02      	add	r7, sp, #8
 8028f82:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8028f86:	e9c7 2300 	strd	r2, r3, [r7]
 8028f8a:	4b0d      	ldr	r3, [pc, #52]	; (8028fc0 <EMBENET_INTERNAL_TRACE_OnFreeSlots+0x44>)
 8028f8c:	681b      	ldr	r3, [r3, #0]
 8028f8e:	617b      	str	r3, [r7, #20]
 8028f90:	697b      	ldr	r3, [r7, #20]
 8028f92:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028f96:	f8d3 31a8 	ldr.w	r3, [r3, #424]	; 0x1a8
 8028f9a:	2b00      	cmp	r3, #0
 8028f9c:	d00b      	beq.n	8028fb6 <EMBENET_INTERNAL_TRACE_OnFreeSlots+0x3a>
 8028f9e:	697b      	ldr	r3, [r7, #20]
 8028fa0:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8028fa4:	f8d3 41a8 	ldr.w	r4, [r3, #424]	; 0x1a8
 8028fa8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8028faa:	9300      	str	r3, [sp, #0]
 8028fac:	e9d7 2300 	ldrd	r2, r3, [r7]
 8028fb0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8028fb4:	47a0      	blx	r4
 8028fb6:	bf00      	nop
 8028fb8:	371c      	adds	r7, #28
 8028fba:	46bd      	mov	sp, r7
 8028fbc:	bd90      	pop	{r4, r7, pc}
 8028fbe:	bf00      	nop
 8028fc0:	20000040 	.word	0x20000040

08028fc4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>:
 8028fc4:	b480      	push	{r7}
 8028fc6:	b089      	sub	sp, #36	; 0x24
 8028fc8:	af00      	add	r7, sp, #0
 8028fca:	60f8      	str	r0, [r7, #12]
 8028fcc:	60b9      	str	r1, [r7, #8]
 8028fce:	607a      	str	r2, [r7, #4]
 8028fd0:	68fb      	ldr	r3, [r7, #12]
 8028fd2:	61fb      	str	r3, [r7, #28]
 8028fd4:	68bb      	ldr	r3, [r7, #8]
 8028fd6:	61bb      	str	r3, [r7, #24]
 8028fd8:	687b      	ldr	r3, [r7, #4]
 8028fda:	617b      	str	r3, [r7, #20]
 8028fdc:	2300      	movs	r3, #0
 8028fde:	613b      	str	r3, [r7, #16]
 8028fe0:	e00d      	b.n	8028ffe <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x3a>
 8028fe2:	69ba      	ldr	r2, [r7, #24]
 8028fe4:	693b      	ldr	r3, [r7, #16]
 8028fe6:	441a      	add	r2, r3
 8028fe8:	6979      	ldr	r1, [r7, #20]
 8028fea:	693b      	ldr	r3, [r7, #16]
 8028fec:	1acb      	subs	r3, r1, r3
 8028fee:	3b01      	subs	r3, #1
 8028ff0:	69f9      	ldr	r1, [r7, #28]
 8028ff2:	440b      	add	r3, r1
 8028ff4:	7812      	ldrb	r2, [r2, #0]
 8028ff6:	701a      	strb	r2, [r3, #0]
 8028ff8:	693b      	ldr	r3, [r7, #16]
 8028ffa:	3301      	adds	r3, #1
 8028ffc:	613b      	str	r3, [r7, #16]
 8028ffe:	697a      	ldr	r2, [r7, #20]
 8029000:	693b      	ldr	r3, [r7, #16]
 8029002:	429a      	cmp	r2, r3
 8029004:	d8ed      	bhi.n	8028fe2 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b+0x1e>
 8029006:	bf00      	nop
 8029008:	bf00      	nop
 802900a:	3724      	adds	r7, #36	; 0x24
 802900c:	46bd      	mov	sp, r7
 802900e:	bc80      	pop	{r7}
 8029010:	4770      	bx	lr

08029012 <46cd3075e82ff8b9ea43a88054ba0b7b067be91a>:
 8029012:	b580      	push	{r7, lr}
 8029014:	b086      	sub	sp, #24
 8029016:	af00      	add	r7, sp, #0
 8029018:	f04f 0200 	mov.w	r2, #0
 802901c:	f04f 0300 	mov.w	r3, #0
 8029020:	e9c7 2300 	strd	r2, r3, [r7]
 8029024:	f107 0210 	add.w	r2, r7, #16
 8029028:	f107 030f 	add.w	r3, r7, #15
 802902c:	4611      	mov	r1, r2
 802902e:	4618      	mov	r0, r3
 8029030:	f7e5 f89e 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8029034:	4603      	mov	r3, r0
 8029036:	2b00      	cmp	r3, #0
 8029038:	d006      	beq.n	8029048 <46cd3075e82ff8b9ea43a88054ba0b7b067be91a+0x36>
 802903a:	f107 0110 	add.w	r1, r7, #16
 802903e:	463b      	mov	r3, r7
 8029040:	2208      	movs	r2, #8
 8029042:	4618      	mov	r0, r3
 8029044:	f7ff ffbe 	bl	8028fc4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 8029048:	e9d7 2300 	ldrd	r2, r3, [r7]
 802904c:	4610      	mov	r0, r2
 802904e:	4619      	mov	r1, r3
 8029050:	3718      	adds	r7, #24
 8029052:	46bd      	mov	sp, r7
 8029054:	bd80      	pop	{r7, pc}

08029056 <b91c6940dbb3047c4c296403649f7867d9870dca>:
 8029056:	b580      	push	{r7, lr}
 8029058:	b082      	sub	sp, #8
 802905a:	af00      	add	r7, sp, #0
 802905c:	1dfb      	adds	r3, r7, #7
 802905e:	2100      	movs	r1, #0
 8029060:	4618      	mov	r0, r3
 8029062:	f7e5 f885 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8029066:	4603      	mov	r3, r0
 8029068:	2b00      	cmp	r3, #0
 802906a:	d008      	beq.n	802907e <b91c6940dbb3047c4c296403649f7867d9870dca+0x28>
 802906c:	79fa      	ldrb	r2, [r7, #7]
 802906e:	463b      	mov	r3, r7
 8029070:	4611      	mov	r1, r2
 8029072:	4618      	mov	r0, r3
 8029074:	f7e4 fa04 	bl	800d480 <734215ec60b076a73ccd748a6d2a9ef259a5be9c>
 8029078:	f997 3004 	ldrsb.w	r3, [r7, #4]
 802907c:	e000      	b.n	8029080 <b91c6940dbb3047c4c296403649f7867d9870dca+0x2a>
 802907e:	237f      	movs	r3, #127	; 0x7f
 8029080:	4618      	mov	r0, r3
 8029082:	3708      	adds	r7, #8
 8029084:	46bd      	mov	sp, r7
 8029086:	bd80      	pop	{r7, pc}

08029088 <EMBENET_NODE_DIAG_GetParentPDR>:
 8029088:	b580      	push	{r7, lr}
 802908a:	b082      	sub	sp, #8
 802908c:	af00      	add	r7, sp, #0
 802908e:	1dfb      	adds	r3, r7, #7
 8029090:	2100      	movs	r1, #0
 8029092:	4618      	mov	r0, r3
 8029094:	f7e5 f86c 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 8029098:	4603      	mov	r3, r0
 802909a:	2b00      	cmp	r3, #0
 802909c:	d005      	beq.n	80290aa <EMBENET_NODE_DIAG_GetParentPDR+0x22>
 802909e:	79fb      	ldrb	r3, [r7, #7]
 80290a0:	4618      	mov	r0, r3
 80290a2:	f7e4 fa3b 	bl	800d51c <5b63cb34daec6664391bfc943c457a7558e21261>
 80290a6:	4603      	mov	r3, r0
 80290a8:	e000      	b.n	80290ac <EMBENET_NODE_DIAG_GetParentPDR+0x24>
 80290aa:	2300      	movs	r3, #0
 80290ac:	4618      	mov	r0, r3
 80290ae:	3708      	adds	r7, #8
 80290b0:	46bd      	mov	sp, r7
 80290b2:	bd80      	pop	{r7, pc}

080290b4 <e4a3f9918fe69f73b1cc4210ec318e3c426e72f5>:
 80290b4:	b580      	push	{r7, lr}
 80290b6:	af00      	add	r7, sp, #0
 80290b8:	f7fc fc8c 	bl	80259d4 <eada7656be7f8681f934187ead57a12001632399>
 80290bc:	4603      	mov	r3, r0
 80290be:	4618      	mov	r0, r3
 80290c0:	bd80      	pop	{r7, pc}

080290c2 <4f511565cdbba62bf97753c767d47da43943d7f0>:
 80290c2:	b580      	push	{r7, lr}
 80290c4:	b086      	sub	sp, #24
 80290c6:	af00      	add	r7, sp, #0
 80290c8:	1d3b      	adds	r3, r7, #4
 80290ca:	2200      	movs	r2, #0
 80290cc:	601a      	str	r2, [r3, #0]
 80290ce:	605a      	str	r2, [r3, #4]
 80290d0:	609a      	str	r2, [r3, #8]
 80290d2:	60da      	str	r2, [r3, #12]
 80290d4:	741a      	strb	r2, [r3, #16]
 80290d6:	2302      	movs	r3, #2
 80290d8:	713b      	strb	r3, [r7, #4]
 80290da:	1d3b      	adds	r3, r7, #4
 80290dc:	3301      	adds	r3, #1
 80290de:	4619      	mov	r1, r3
 80290e0:	2000      	movs	r0, #0
 80290e2:	f7e5 f845 	bl	800e170 <aa4ba635fab2a57cfac739bffc367cf6103ea92f>
 80290e6:	4603      	mov	r3, r0
 80290e8:	2b00      	cmp	r3, #0
 80290ea:	d005      	beq.n	80290f8 <4f511565cdbba62bf97753c767d47da43943d7f0+0x36>
 80290ec:	1d3b      	adds	r3, r7, #4
 80290ee:	4618      	mov	r0, r3
 80290f0:	f7f4 f8ca 	bl	801d288 <45512773dac7d59ca8bf45f1f7d9d11b7c610605>
 80290f4:	4603      	mov	r3, r0
 80290f6:	e000      	b.n	80290fa <4f511565cdbba62bf97753c767d47da43943d7f0+0x38>
 80290f8:	2300      	movs	r3, #0
 80290fa:	4618      	mov	r0, r3
 80290fc:	3718      	adds	r7, #24
 80290fe:	46bd      	mov	sp, r7
 8029100:	bd80      	pop	{r7, pc}

08029102 <88f59cfa8d275ffe37bfcd0f1db7f0dfbfb0545b>:
 8029102:	b580      	push	{r7, lr}
 8029104:	b082      	sub	sp, #8
 8029106:	af00      	add	r7, sp, #0
 8029108:	1dbb      	adds	r3, r7, #6
 802910a:	2100      	movs	r1, #0
 802910c:	4618      	mov	r0, r3
 802910e:	f7f2 f975 	bl	801b3fc <a8d9689c957cda0372b2d720a687974af26c85d2>
 8029112:	88fb      	ldrh	r3, [r7, #6]
 8029114:	4618      	mov	r0, r3
 8029116:	3708      	adds	r7, #8
 8029118:	46bd      	mov	sp, r7
 802911a:	bd80      	pop	{r7, pc}

0802911c <13e346e7537b84bcd52c3cf47fef4ef9086039ba>:
 802911c:	b580      	push	{r7, lr}
 802911e:	af00      	add	r7, sp, #0
 8029120:	2000      	movs	r0, #0
 8029122:	f7f4 f8fb 	bl	801d31c <ee504f8deafedb03386eec1c989207132bd15110>
 8029126:	4603      	mov	r3, r0
 8029128:	b2db      	uxtb	r3, r3
 802912a:	4618      	mov	r0, r3
 802912c:	bd80      	pop	{r7, pc}

0802912e <bba0525c833a77ea6266641935ef62cce330e9a7>:
 802912e:	b580      	push	{r7, lr}
 8029130:	b082      	sub	sp, #8
 8029132:	af00      	add	r7, sp, #0
 8029134:	1dbb      	adds	r3, r7, #6
 8029136:	4619      	mov	r1, r3
 8029138:	2000      	movs	r0, #0
 802913a:	f7f2 f95f 	bl	801b3fc <a8d9689c957cda0372b2d720a687974af26c85d2>
 802913e:	88fb      	ldrh	r3, [r7, #6]
 8029140:	4618      	mov	r0, r3
 8029142:	3708      	adds	r7, #8
 8029144:	46bd      	mov	sp, r7
 8029146:	bd80      	pop	{r7, pc}

08029148 <6bb34e807caa6654eefd3984c9aa6bde2b5f1294>:
 8029148:	b580      	push	{r7, lr}
 802914a:	af00      	add	r7, sp, #0
 802914c:	f7f1 fa18 	bl	801a580 <57d2957de5f8b1f87a34ecc897e93650c3f2e297>
 8029150:	4603      	mov	r3, r0
 8029152:	4618      	mov	r0, r3
 8029154:	bd80      	pop	{r7, pc}

08029156 <ef56437d1bfbf379203966c0ca60ce860a9e4040>:
 8029156:	b580      	push	{r7, lr}
 8029158:	af00      	add	r7, sp, #0
 802915a:	f7f1 fa77 	bl	801a64c <430fd23aeea8952b7b416b6590815371f1106b85>
 802915e:	4603      	mov	r3, r0
 8029160:	4618      	mov	r0, r3
 8029162:	bd80      	pop	{r7, pc}

08029164 <33cb78c5ebdf85a72531cdf9a2db5897a43e9d27>:
 8029164:	b580      	push	{r7, lr}
 8029166:	af00      	add	r7, sp, #0
 8029168:	f7f1 fad6 	bl	801a718 <2a6c61bbc29fcf617904472e829df358a186c125>
 802916c:	4603      	mov	r3, r0
 802916e:	4618      	mov	r0, r3
 8029170:	bd80      	pop	{r7, pc}

08029172 <EMBENET_NODE_DIAG_GetQueueThresholdAndOverflowCounters>:
 8029172:	b580      	push	{r7, lr}
 8029174:	b086      	sub	sp, #24
 8029176:	af00      	add	r7, sp, #0
 8029178:	6078      	str	r0, [r7, #4]
 802917a:	f107 0310 	add.w	r3, r7, #16
 802917e:	4618      	mov	r0, r3
 8029180:	f7e7 fdd0 	bl	8010d24 <QUEUE_GetDiagnosticsCounters>
 8029184:	6939      	ldr	r1, [r7, #16]
 8029186:	697a      	ldr	r2, [r7, #20]
 8029188:	687b      	ldr	r3, [r7, #4]
 802918a:	6019      	str	r1, [r3, #0]
 802918c:	687b      	ldr	r3, [r7, #4]
 802918e:	605a      	str	r2, [r3, #4]
 8029190:	6878      	ldr	r0, [r7, #4]
 8029192:	3718      	adds	r7, #24
 8029194:	46bd      	mov	sp, r7
 8029196:	bd80      	pop	{r7, pc}

08029198 <d0d4f6737d0eed46e2bc20295cf5671c83cb8538>:
 8029198:	b580      	push	{r7, lr}
 802919a:	af00      	add	r7, sp, #0
 802919c:	f7e4 f86c 	bl	800d278 <5dd6fb766eeca12f408d546c8d4a40a272e3f785>
 80291a0:	4603      	mov	r3, r0
 80291a2:	4618      	mov	r0, r3
 80291a4:	bd80      	pop	{r7, pc}

080291a6 <EMBENET_NODE_DIAG_GetNeighborInfo>:
 80291a6:	b590      	push	{r4, r7, lr}
 80291a8:	b08b      	sub	sp, #44	; 0x2c
 80291aa:	af00      	add	r7, sp, #0
 80291ac:	6078      	str	r0, [r7, #4]
 80291ae:	6039      	str	r1, [r7, #0]
 80291b0:	f107 0318 	add.w	r3, r7, #24
 80291b4:	6839      	ldr	r1, [r7, #0]
 80291b6:	4618      	mov	r0, r3
 80291b8:	f7e4 f88a 	bl	800d2d0 <NEIGHBORS_GetNeighborInfo>
 80291bc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80291c0:	f997 4020 	ldrsb.w	r4, [r7, #32]
 80291c4:	f897 0021 	ldrb.w	r0, [r7, #33]	; 0x21
 80291c8:	6879      	ldr	r1, [r7, #4]
 80291ca:	e9c1 2300 	strd	r2, r3, [r1]
 80291ce:	687b      	ldr	r3, [r7, #4]
 80291d0:	4622      	mov	r2, r4
 80291d2:	721a      	strb	r2, [r3, #8]
 80291d4:	687b      	ldr	r3, [r7, #4]
 80291d6:	4602      	mov	r2, r0
 80291d8:	725a      	strb	r2, [r3, #9]
 80291da:	6878      	ldr	r0, [r7, #4]
 80291dc:	372c      	adds	r7, #44	; 0x2c
 80291de:	46bd      	mov	sp, r7
 80291e0:	bd90      	pop	{r4, r7, pc}

080291e2 <EMBENET_NODE_DIAG_GetCellsCount>:
 80291e2:	b580      	push	{r7, lr}
 80291e4:	af00      	add	r7, sp, #0
 80291e6:	f7f4 fe43 	bl	801de70 <SCHEDULE_GetCellsCount>
 80291ea:	4603      	mov	r3, r0
 80291ec:	4618      	mov	r0, r3
 80291ee:	bd80      	pop	{r7, pc}

080291f0 <EMBENET_NODE_DIAG_GetCellInfo>:
 80291f0:	b590      	push	{r4, r7, lr}
 80291f2:	b091      	sub	sp, #68	; 0x44
 80291f4:	af00      	add	r7, sp, #0
 80291f6:	6078      	str	r0, [r7, #4]
 80291f8:	6039      	str	r1, [r7, #0]
 80291fa:	f7f3 fbe1 	bl	801c9c0 <8342496502f723d085ab3cae139cfe28db3db880>
 80291fe:	4603      	mov	r3, r0
 8029200:	873b      	strh	r3, [r7, #56]	; 0x38
 8029202:	2300      	movs	r3, #0
 8029204:	63fb      	str	r3, [r7, #60]	; 0x3c
 8029206:	f107 0328 	add.w	r3, r7, #40	; 0x28
 802920a:	2200      	movs	r2, #0
 802920c:	601a      	str	r2, [r3, #0]
 802920e:	605a      	str	r2, [r3, #4]
 8029210:	609a      	str	r2, [r3, #8]
 8029212:	60da      	str	r2, [r3, #12]
 8029214:	2300      	movs	r3, #0
 8029216:	877b      	strh	r3, [r7, #58]	; 0x3a
 8029218:	e078      	b.n	802930c <EMBENET_NODE_DIAG_GetCellInfo+0x11c>
 802921a:	f107 0308 	add.w	r3, r7, #8
 802921e:	8f7a      	ldrh	r2, [r7, #58]	; 0x3a
 8029220:	4611      	mov	r1, r2
 8029222:	4618      	mov	r0, r3
 8029224:	f7f3 ff18 	bl	801d058 <SCHEDULE_GetCellInfo>
 8029228:	7e7b      	ldrb	r3, [r7, #25]
 802922a:	2b00      	cmp	r3, #0
 802922c:	d06b      	beq.n	8029306 <EMBENET_NODE_DIAG_GetCellInfo+0x116>
 802922e:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8029230:	683b      	ldr	r3, [r7, #0]
 8029232:	429a      	cmp	r2, r3
 8029234:	d164      	bne.n	8029300 <EMBENET_NODE_DIAG_GetCellInfo+0x110>
 8029236:	f107 0308 	add.w	r3, r7, #8
 802923a:	1c59      	adds	r1, r3, #1
 802923c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8029240:	3308      	adds	r3, #8
 8029242:	2208      	movs	r2, #8
 8029244:	4618      	mov	r0, r3
 8029246:	f7ff febd 	bl	8028fc4 <4d7cfa5396c1a70e5b044281b148d10ac7c5b95b>
 802924a:	7fbb      	ldrb	r3, [r7, #30]
 802924c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8029250:	8bbb      	ldrh	r3, [r7, #28]
 8029252:	b2db      	uxtb	r3, r3
 8029254:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8029258:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 802925a:	857b      	strh	r3, [r7, #42]	; 0x2a
 802925c:	7ebb      	ldrb	r3, [r7, #26]
 802925e:	3b01      	subs	r3, #1
 8029260:	2b05      	cmp	r3, #5
 8029262:	d827      	bhi.n	80292b4 <EMBENET_NODE_DIAG_GetCellInfo+0xc4>
 8029264:	a201      	add	r2, pc, #4	; (adr r2, 802926c <EMBENET_NODE_DIAG_GetCellInfo+0x7c>)
 8029266:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802926a:	bf00      	nop
 802926c:	08029285 	.word	0x08029285
 8029270:	0802928d 	.word	0x0802928d
 8029274:	08029295 	.word	0x08029295
 8029278:	0802929d 	.word	0x0802929d
 802927c:	080292a5 	.word	0x080292a5
 8029280:	080292ad 	.word	0x080292ad
 8029284:	2301      	movs	r3, #1
 8029286:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 802928a:	e017      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 802928c:	2302      	movs	r3, #2
 802928e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8029292:	e013      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 8029294:	2303      	movs	r3, #3
 8029296:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 802929a:	e00f      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 802929c:	2304      	movs	r3, #4
 802929e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80292a2:	e00b      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 80292a4:	2305      	movs	r3, #5
 80292a6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80292aa:	e007      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 80292ac:	2306      	movs	r3, #6
 80292ae:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80292b2:	e003      	b.n	80292bc <EMBENET_NODE_DIAG_GetCellInfo+0xcc>
 80292b4:	2300      	movs	r3, #0
 80292b6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80292ba:	bf00      	nop
 80292bc:	7e7b      	ldrb	r3, [r7, #25]
 80292be:	2b03      	cmp	r3, #3
 80292c0:	d00e      	beq.n	80292e0 <EMBENET_NODE_DIAG_GetCellInfo+0xf0>
 80292c2:	2b03      	cmp	r3, #3
 80292c4:	dc10      	bgt.n	80292e8 <EMBENET_NODE_DIAG_GetCellInfo+0xf8>
 80292c6:	2b01      	cmp	r3, #1
 80292c8:	d002      	beq.n	80292d0 <EMBENET_NODE_DIAG_GetCellInfo+0xe0>
 80292ca:	2b02      	cmp	r3, #2
 80292cc:	d004      	beq.n	80292d8 <EMBENET_NODE_DIAG_GetCellInfo+0xe8>
 80292ce:	e00b      	b.n	80292e8 <EMBENET_NODE_DIAG_GetCellInfo+0xf8>
 80292d0:	2301      	movs	r3, #1
 80292d2:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80292d6:	e00b      	b.n	80292f0 <EMBENET_NODE_DIAG_GetCellInfo+0x100>
 80292d8:	2302      	movs	r3, #2
 80292da:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80292de:	e007      	b.n	80292f0 <EMBENET_NODE_DIAG_GetCellInfo+0x100>
 80292e0:	2303      	movs	r3, #3
 80292e2:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80292e6:	e003      	b.n	80292f0 <EMBENET_NODE_DIAG_GetCellInfo+0x100>
 80292e8:	2300      	movs	r3, #0
 80292ea:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80292ee:	bf00      	nop
 80292f0:	687b      	ldr	r3, [r7, #4]
 80292f2:	461c      	mov	r4, r3
 80292f4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80292f8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80292fa:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80292fe:	e010      	b.n	8029322 <EMBENET_NODE_DIAG_GetCellInfo+0x132>
 8029300:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8029302:	3301      	adds	r3, #1
 8029304:	63fb      	str	r3, [r7, #60]	; 0x3c
 8029306:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8029308:	3301      	adds	r3, #1
 802930a:	877b      	strh	r3, [r7, #58]	; 0x3a
 802930c:	8f7a      	ldrh	r2, [r7, #58]	; 0x3a
 802930e:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 8029310:	429a      	cmp	r2, r3
 8029312:	d382      	bcc.n	802921a <EMBENET_NODE_DIAG_GetCellInfo+0x2a>
 8029314:	687b      	ldr	r3, [r7, #4]
 8029316:	461c      	mov	r4, r3
 8029318:	f107 0328 	add.w	r3, r7, #40	; 0x28
 802931c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802931e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8029322:	6878      	ldr	r0, [r7, #4]
 8029324:	3744      	adds	r7, #68	; 0x44
 8029326:	46bd      	mov	sp, r7
 8029328:	bd90      	pop	{r4, r7, pc}
 802932a:	bf00      	nop

0802932c <ADDR_GetLength>:
 802932c:	b480      	push	{r7}
 802932e:	b083      	sub	sp, #12
 8029330:	af00      	add	r7, sp, #0
 8029332:	6078      	str	r0, [r7, #4]
 8029334:	687b      	ldr	r3, [r7, #4]
 8029336:	781b      	ldrb	r3, [r3, #0]
 8029338:	3b01      	subs	r3, #1
 802933a:	2b06      	cmp	r3, #6
 802933c:	d810      	bhi.n	8029360 <ADDR_GetLength+0x34>
 802933e:	a201      	add	r2, pc, #4	; (adr r2, 8029344 <ADDR_GetLength+0x18>)
 8029340:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8029344:	08029365 	.word	0x08029365
 8029348:	08029369 	.word	0x08029369
 802934c:	0802936d 	.word	0x0802936d
 8029350:	08029371 	.word	0x08029371
 8029354:	08029375 	.word	0x08029375
 8029358:	08029379 	.word	0x08029379
 802935c:	0802937d 	.word	0x0802937d
 8029360:	2300      	movs	r3, #0
 8029362:	e00c      	b.n	802937e <ADDR_GetLength+0x52>
 8029364:	2302      	movs	r3, #2
 8029366:	e00a      	b.n	802937e <ADDR_GetLength+0x52>
 8029368:	2308      	movs	r3, #8
 802936a:	e008      	b.n	802937e <ADDR_GetLength+0x52>
 802936c:	2310      	movs	r3, #16
 802936e:	e006      	b.n	802937e <ADDR_GetLength+0x52>
 8029370:	2302      	movs	r3, #2
 8029372:	e004      	b.n	802937e <ADDR_GetLength+0x52>
 8029374:	2308      	movs	r3, #8
 8029376:	e002      	b.n	802937e <ADDR_GetLength+0x52>
 8029378:	2310      	movs	r3, #16
 802937a:	e000      	b.n	802937e <ADDR_GetLength+0x52>
 802937c:	2302      	movs	r3, #2
 802937e:	4618      	mov	r0, r3
 8029380:	370c      	adds	r7, #12
 8029382:	46bd      	mov	sp, r7
 8029384:	bc80      	pop	{r7}
 8029386:	4770      	bx	lr

08029388 <b35bcee5624976b5f696cb546804f9909547b46c>:
 8029388:	b5b0      	push	{r4, r5, r7, lr}
 802938a:	b08c      	sub	sp, #48	; 0x30
 802938c:	af00      	add	r7, sp, #0
 802938e:	60f8      	str	r0, [r7, #12]
 8029390:	60b9      	str	r1, [r7, #8]
 8029392:	4611      	mov	r1, r2
 8029394:	461a      	mov	r2, r3
 8029396:	460b      	mov	r3, r1
 8029398:	71fb      	strb	r3, [r7, #7]
 802939a:	4613      	mov	r3, r2
 802939c:	71bb      	strb	r3, [r7, #6]
 802939e:	f107 0314 	add.w	r3, r7, #20
 80293a2:	2200      	movs	r2, #0
 80293a4:	601a      	str	r2, [r3, #0]
 80293a6:	605a      	str	r2, [r3, #4]
 80293a8:	609a      	str	r2, [r3, #8]
 80293aa:	60da      	str	r2, [r3, #12]
 80293ac:	741a      	strb	r2, [r3, #16]
 80293ae:	79fb      	ldrb	r3, [r7, #7]
 80293b0:	753b      	strb	r3, [r7, #20]
 80293b2:	f107 0314 	add.w	r3, r7, #20
 80293b6:	4618      	mov	r0, r3
 80293b8:	f7ff ffb8 	bl	802932c <ADDR_GetLength>
 80293bc:	62b8      	str	r0, [r7, #40]	; 0x28
 80293be:	2300      	movs	r3, #0
 80293c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80293c2:	e01c      	b.n	80293fe <b35bcee5624976b5f696cb546804f9909547b46c+0x76>
 80293c4:	79bb      	ldrb	r3, [r7, #6]
 80293c6:	2b01      	cmp	r3, #1
 80293c8:	d10c      	bne.n	80293e4 <b35bcee5624976b5f696cb546804f9909547b46c+0x5c>
 80293ca:	68ba      	ldr	r2, [r7, #8]
 80293cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80293ce:	441a      	add	r2, r3
 80293d0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80293d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80293d4:	1acb      	subs	r3, r1, r3
 80293d6:	3b01      	subs	r3, #1
 80293d8:	7812      	ldrb	r2, [r2, #0]
 80293da:	3330      	adds	r3, #48	; 0x30
 80293dc:	443b      	add	r3, r7
 80293de:	f803 2c1b 	strb.w	r2, [r3, #-27]
 80293e2:	e009      	b.n	80293f8 <b35bcee5624976b5f696cb546804f9909547b46c+0x70>
 80293e4:	68ba      	ldr	r2, [r7, #8]
 80293e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80293e8:	4413      	add	r3, r2
 80293ea:	7819      	ldrb	r1, [r3, #0]
 80293ec:	f107 0215 	add.w	r2, r7, #21
 80293f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80293f2:	4413      	add	r3, r2
 80293f4:	460a      	mov	r2, r1
 80293f6:	701a      	strb	r2, [r3, #0]
 80293f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80293fa:	3301      	adds	r3, #1
 80293fc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80293fe:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8029400:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8029402:	429a      	cmp	r2, r3
 8029404:	d3de      	bcc.n	80293c4 <b35bcee5624976b5f696cb546804f9909547b46c+0x3c>
 8029406:	68fb      	ldr	r3, [r7, #12]
 8029408:	461d      	mov	r5, r3
 802940a:	f107 0414 	add.w	r4, r7, #20
 802940e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8029410:	6028      	str	r0, [r5, #0]
 8029412:	6069      	str	r1, [r5, #4]
 8029414:	60aa      	str	r2, [r5, #8]
 8029416:	60eb      	str	r3, [r5, #12]
 8029418:	7823      	ldrb	r3, [r4, #0]
 802941a:	742b      	strb	r3, [r5, #16]
 802941c:	68f8      	ldr	r0, [r7, #12]
 802941e:	3730      	adds	r7, #48	; 0x30
 8029420:	46bd      	mov	sp, r7
 8029422:	bdb0      	pop	{r4, r5, r7, pc}

08029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>:
 8029424:	b580      	push	{r7, lr}
 8029426:	b086      	sub	sp, #24
 8029428:	af00      	add	r7, sp, #0
 802942a:	60f8      	str	r0, [r7, #12]
 802942c:	60b9      	str	r1, [r7, #8]
 802942e:	4613      	mov	r3, r2
 8029430:	71fb      	strb	r3, [r7, #7]
 8029432:	68b8      	ldr	r0, [r7, #8]
 8029434:	f7ff ff7a 	bl	802932c <ADDR_GetLength>
 8029438:	6138      	str	r0, [r7, #16]
 802943a:	693b      	ldr	r3, [r7, #16]
 802943c:	b2db      	uxtb	r3, r3
 802943e:	4619      	mov	r1, r3
 8029440:	68f8      	ldr	r0, [r7, #12]
 8029442:	f000 f827 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 8029446:	79fb      	ldrb	r3, [r7, #7]
 8029448:	2b00      	cmp	r3, #0
 802944a:	d108      	bne.n	802945e <32e95e23f85b24d0518a874b34392b7cb5b4c6f3+0x3a>
 802944c:	68fb      	ldr	r3, [r7, #12]
 802944e:	6858      	ldr	r0, [r3, #4]
 8029450:	68bb      	ldr	r3, [r7, #8]
 8029452:	3301      	adds	r3, #1
 8029454:	693a      	ldr	r2, [r7, #16]
 8029456:	4619      	mov	r1, r3
 8029458:	f001 feed 	bl	802b236 <memcpy>
 802945c:	e015      	b.n	802948a <32e95e23f85b24d0518a874b34392b7cb5b4c6f3+0x66>
 802945e:	2300      	movs	r3, #0
 8029460:	617b      	str	r3, [r7, #20]
 8029462:	e00e      	b.n	8029482 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3+0x5e>
 8029464:	693a      	ldr	r2, [r7, #16]
 8029466:	697b      	ldr	r3, [r7, #20]
 8029468:	1ad3      	subs	r3, r2, r3
 802946a:	1e5a      	subs	r2, r3, #1
 802946c:	68fb      	ldr	r3, [r7, #12]
 802946e:	6859      	ldr	r1, [r3, #4]
 8029470:	697b      	ldr	r3, [r7, #20]
 8029472:	440b      	add	r3, r1
 8029474:	68b9      	ldr	r1, [r7, #8]
 8029476:	440a      	add	r2, r1
 8029478:	7852      	ldrb	r2, [r2, #1]
 802947a:	701a      	strb	r2, [r3, #0]
 802947c:	697b      	ldr	r3, [r7, #20]
 802947e:	3301      	adds	r3, #1
 8029480:	617b      	str	r3, [r7, #20]
 8029482:	697a      	ldr	r2, [r7, #20]
 8029484:	693b      	ldr	r3, [r7, #16]
 8029486:	429a      	cmp	r2, r3
 8029488:	d3ec      	bcc.n	8029464 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3+0x40>
 802948a:	bf00      	nop
 802948c:	3718      	adds	r7, #24
 802948e:	46bd      	mov	sp, r7
 8029490:	bd80      	pop	{r7, pc}
	...

08029494 <2c8c667690c01bde438685a4c74ee211f27a3939>:
 8029494:	b580      	push	{r7, lr}
 8029496:	b086      	sub	sp, #24
 8029498:	af02      	add	r7, sp, #8
 802949a:	6078      	str	r0, [r7, #4]
 802949c:	6039      	str	r1, [r7, #0]
 802949e:	687b      	ldr	r3, [r7, #4]
 80294a0:	7a1b      	ldrb	r3, [r3, #8]
 80294a2:	461a      	mov	r2, r3
 80294a4:	683b      	ldr	r3, [r7, #0]
 80294a6:	4413      	add	r3, r2
 80294a8:	2b80      	cmp	r3, #128	; 0x80
 80294aa:	d912      	bls.n	80294d2 <2c8c667690c01bde438685a4c74ee211f27a3939+0x3e>
 80294ac:	4a13      	ldr	r2, [pc, #76]	; (80294fc <2c8c667690c01bde438685a4c74ee211f27a3939+0x68>)
 80294ae:	f107 0308 	add.w	r3, r7, #8
 80294b2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80294b6:	e883 0003 	stmia.w	r3, {r0, r1}
 80294ba:	687b      	ldr	r3, [r7, #4]
 80294bc:	7a1b      	ldrb	r3, [r3, #8]
 80294be:	9300      	str	r3, [sp, #0]
 80294c0:	683b      	ldr	r3, [r7, #0]
 80294c2:	4a0f      	ldr	r2, [pc, #60]	; (8029500 <2c8c667690c01bde438685a4c74ee211f27a3939+0x6c>)
 80294c4:	f107 0108 	add.w	r1, r7, #8
 80294c8:	c903      	ldmia	r1, {r0, r1}
 80294ca:	f7eb fe9d 	bl	8015208 <LOGGER_PrintLine>
 80294ce:	2300      	movs	r3, #0
 80294d0:	e00f      	b.n	80294f2 <2c8c667690c01bde438685a4c74ee211f27a3939+0x5e>
 80294d2:	687b      	ldr	r3, [r7, #4]
 80294d4:	685a      	ldr	r2, [r3, #4]
 80294d6:	683b      	ldr	r3, [r7, #0]
 80294d8:	425b      	negs	r3, r3
 80294da:	441a      	add	r2, r3
 80294dc:	687b      	ldr	r3, [r7, #4]
 80294de:	605a      	str	r2, [r3, #4]
 80294e0:	687b      	ldr	r3, [r7, #4]
 80294e2:	7a1a      	ldrb	r2, [r3, #8]
 80294e4:	683b      	ldr	r3, [r7, #0]
 80294e6:	b2db      	uxtb	r3, r3
 80294e8:	4413      	add	r3, r2
 80294ea:	b2da      	uxtb	r2, r3
 80294ec:	687b      	ldr	r3, [r7, #4]
 80294ee:	721a      	strb	r2, [r3, #8]
 80294f0:	2301      	movs	r3, #1
 80294f2:	4618      	mov	r0, r3
 80294f4:	3710      	adds	r7, #16
 80294f6:	46bd      	mov	sp, r7
 80294f8:	bd80      	pop	{r7, pc}
 80294fa:	bf00      	nop
 80294fc:	08031360 	.word	0x08031360
 8029500:	08031304 	.word	0x08031304

08029504 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f>:
 8029504:	b580      	push	{r7, lr}
 8029506:	b086      	sub	sp, #24
 8029508:	af02      	add	r7, sp, #8
 802950a:	6078      	str	r0, [r7, #4]
 802950c:	6039      	str	r1, [r7, #0]
 802950e:	687b      	ldr	r3, [r7, #4]
 8029510:	7a1b      	ldrb	r3, [r3, #8]
 8029512:	461a      	mov	r2, r3
 8029514:	683b      	ldr	r3, [r7, #0]
 8029516:	4293      	cmp	r3, r2
 8029518:	d913      	bls.n	8029542 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f+0x3e>
 802951a:	4a13      	ldr	r2, [pc, #76]	; (8029568 <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f+0x64>)
 802951c:	f107 0308 	add.w	r3, r7, #8
 8029520:	e892 0003 	ldmia.w	r2, {r0, r1}
 8029524:	e883 0003 	stmia.w	r3, {r0, r1}
 8029528:	687b      	ldr	r3, [r7, #4]
 802952a:	7a1b      	ldrb	r3, [r3, #8]
 802952c:	9300      	str	r3, [sp, #0]
 802952e:	683b      	ldr	r3, [r7, #0]
 8029530:	4a0e      	ldr	r2, [pc, #56]	; (802956c <ff892c7eaabf8efd6c6e5ae8237236c0bbd2a52f+0x68>)
 8029532:	f107 0108 	add.w	r1, r7, #8
 8029536:	c903      	ldmia	r1, {r0, r1}
 8029538:	f7eb fe66 	bl	8015208 <LOGGER_PrintLine>
 802953c:	687b      	ldr	r3, [r7, #4]
 802953e:	7a1b      	ldrb	r3, [r3, #8]
 8029540:	603b      	str	r3, [r7, #0]
 8029542:	687b      	ldr	r3, [r7, #4]
 8029544:	685a      	ldr	r2, [r3, #4]
 8029546:	683b      	ldr	r3, [r7, #0]
 8029548:	441a      	add	r2, r3
 802954a:	687b      	ldr	r3, [r7, #4]
 802954c:	605a      	str	r2, [r3, #4]
 802954e:	687b      	ldr	r3, [r7, #4]
 8029550:	7a1a      	ldrb	r2, [r3, #8]
 8029552:	683b      	ldr	r3, [r7, #0]
 8029554:	b2db      	uxtb	r3, r3
 8029556:	1ad3      	subs	r3, r2, r3
 8029558:	b2da      	uxtb	r2, r3
 802955a:	687b      	ldr	r3, [r7, #4]
 802955c:	721a      	strb	r2, [r3, #8]
 802955e:	bf00      	nop
 8029560:	3710      	adds	r7, #16
 8029562:	46bd      	mov	sp, r7
 8029564:	bd80      	pop	{r7, pc}
 8029566:	bf00      	nop
 8029568:	08031398 	.word	0x08031398
 802956c:	08031368 	.word	0x08031368

08029570 <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d>:
 8029570:	b580      	push	{r7, lr}
 8029572:	b086      	sub	sp, #24
 8029574:	af02      	add	r7, sp, #8
 8029576:	6078      	str	r0, [r7, #4]
 8029578:	6039      	str	r1, [r7, #0]
 802957a:	687b      	ldr	r3, [r7, #4]
 802957c:	7a1b      	ldrb	r3, [r3, #8]
 802957e:	461a      	mov	r2, r3
 8029580:	683b      	ldr	r3, [r7, #0]
 8029582:	4413      	add	r3, r2
 8029584:	2b80      	cmp	r3, #128	; 0x80
 8029586:	d912      	bls.n	80295ae <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d+0x3e>
 8029588:	4a0f      	ldr	r2, [pc, #60]	; (80295c8 <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d+0x58>)
 802958a:	f107 0308 	add.w	r3, r7, #8
 802958e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8029592:	e883 0003 	stmia.w	r3, {r0, r1}
 8029596:	687b      	ldr	r3, [r7, #4]
 8029598:	7a1b      	ldrb	r3, [r3, #8]
 802959a:	9300      	str	r3, [sp, #0]
 802959c:	683b      	ldr	r3, [r7, #0]
 802959e:	4a0b      	ldr	r2, [pc, #44]	; (80295cc <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d+0x5c>)
 80295a0:	f107 0108 	add.w	r1, r7, #8
 80295a4:	c903      	ldmia	r1, {r0, r1}
 80295a6:	f7eb fe2f 	bl	8015208 <LOGGER_PrintLine>
 80295aa:	2300      	movs	r3, #0
 80295ac:	e008      	b.n	80295c0 <8e6752ac2d9b20609d8f3fbb2926e67e2817e11d+0x50>
 80295ae:	687b      	ldr	r3, [r7, #4]
 80295b0:	7a1a      	ldrb	r2, [r3, #8]
 80295b2:	683b      	ldr	r3, [r7, #0]
 80295b4:	b2db      	uxtb	r3, r3
 80295b6:	4413      	add	r3, r2
 80295b8:	b2da      	uxtb	r2, r3
 80295ba:	687b      	ldr	r3, [r7, #4]
 80295bc:	721a      	strb	r2, [r3, #8]
 80295be:	2301      	movs	r3, #1
 80295c0:	4618      	mov	r0, r3
 80295c2:	3710      	adds	r7, #16
 80295c4:	46bd      	mov	sp, r7
 80295c6:	bd80      	pop	{r7, pc}
 80295c8:	08031360 	.word	0x08031360
 80295cc:	080313a0 	.word	0x080313a0

080295d0 <d03cdfa9a9d75424e5e85d984afc48a1c5ef4b9d>:
 80295d0:	b580      	push	{r7, lr}
 80295d2:	b086      	sub	sp, #24
 80295d4:	af02      	add	r7, sp, #8
 80295d6:	6078      	str	r0, [r7, #4]
 80295d8:	6039      	str	r1, [r7, #0]
 80295da:	687b      	ldr	r3, [r7, #4]
 80295dc:	7a1b      	ldrb	r3, [r3, #8]
 80295de:	461a      	mov	r2, r3
 80295e0:	683b      	ldr	r3, [r7, #0]
 80295e2:	4293      	cmp	r3, r2
 80295e4:	d913      	bls.n	802960e <d03cdfa9a9d75424e5e85d984afc48a1c5ef4b9d+0x3e>
 80295e6:	4a10      	ldr	r2, [pc, #64]	; (8029628 <d03cdfa9a9d75424e5e85d984afc48a1c5ef4b9d+0x58>)
 80295e8:	f107 0308 	add.w	r3, r7, #8
 80295ec:	e892 0003 	ldmia.w	r2, {r0, r1}
 80295f0:	e883 0003 	stmia.w	r3, {r0, r1}
 80295f4:	687b      	ldr	r3, [r7, #4]
 80295f6:	7a1b      	ldrb	r3, [r3, #8]
 80295f8:	9300      	str	r3, [sp, #0]
 80295fa:	683b      	ldr	r3, [r7, #0]
 80295fc:	4a0b      	ldr	r2, [pc, #44]	; (802962c <d03cdfa9a9d75424e5e85d984afc48a1c5ef4b9d+0x5c>)
 80295fe:	f107 0108 	add.w	r1, r7, #8
 8029602:	c903      	ldmia	r1, {r0, r1}
 8029604:	f7eb fe00 	bl	8015208 <LOGGER_PrintLine>
 8029608:	687b      	ldr	r3, [r7, #4]
 802960a:	7a1b      	ldrb	r3, [r3, #8]
 802960c:	603b      	str	r3, [r7, #0]
 802960e:	687b      	ldr	r3, [r7, #4]
 8029610:	7a1a      	ldrb	r2, [r3, #8]
 8029612:	683b      	ldr	r3, [r7, #0]
 8029614:	b2db      	uxtb	r3, r3
 8029616:	1ad3      	subs	r3, r2, r3
 8029618:	b2da      	uxtb	r2, r3
 802961a:	687b      	ldr	r3, [r7, #4]
 802961c:	721a      	strb	r2, [r3, #8]
 802961e:	bf00      	nop
 8029620:	3710      	adds	r7, #16
 8029622:	46bd      	mov	sp, r7
 8029624:	bd80      	pop	{r7, pc}
 8029626:	bf00      	nop
 8029628:	08031398 	.word	0x08031398
 802962c:	080313ec 	.word	0x080313ec

08029630 <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5>:
 8029630:	b580      	push	{r7, lr}
 8029632:	b082      	sub	sp, #8
 8029634:	af00      	add	r7, sp, #0
 8029636:	6078      	str	r0, [r7, #4]
 8029638:	6039      	str	r1, [r7, #0]
 802963a:	f44f 729e 	mov.w	r2, #316	; 0x13c
 802963e:	6839      	ldr	r1, [r7, #0]
 8029640:	6878      	ldr	r0, [r7, #4]
 8029642:	f001 fdf8 	bl	802b236 <memcpy>
 8029646:	683b      	ldr	r3, [r7, #0]
 8029648:	685a      	ldr	r2, [r3, #4]
 802964a:	683b      	ldr	r3, [r7, #0]
 802964c:	33b9      	adds	r3, #185	; 0xb9
 802964e:	1ad3      	subs	r3, r2, r3
 8029650:	33b8      	adds	r3, #184	; 0xb8
 8029652:	687a      	ldr	r2, [r7, #4]
 8029654:	4413      	add	r3, r2
 8029656:	1c5a      	adds	r2, r3, #1
 8029658:	687b      	ldr	r3, [r7, #4]
 802965a:	605a      	str	r2, [r3, #4]
 802965c:	683b      	ldr	r3, [r7, #0]
 802965e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8029662:	2b00      	cmp	r3, #0
 8029664:	d00b      	beq.n	802967e <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5+0x4e>
 8029666:	687b      	ldr	r3, [r7, #4]
 8029668:	685b      	ldr	r3, [r3, #4]
 802966a:	683a      	ldr	r2, [r7, #0]
 802966c:	f8d2 1098 	ldr.w	r1, [r2, #152]	; 0x98
 8029670:	683a      	ldr	r2, [r7, #0]
 8029672:	6852      	ldr	r2, [r2, #4]
 8029674:	1a8a      	subs	r2, r1, r2
 8029676:	441a      	add	r2, r3
 8029678:	687b      	ldr	r3, [r7, #4]
 802967a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 802967e:	683b      	ldr	r3, [r7, #0]
 8029680:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8029682:	2b00      	cmp	r3, #0
 8029684:	d009      	beq.n	802969a <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5+0x6a>
 8029686:	687b      	ldr	r3, [r7, #4]
 8029688:	685b      	ldr	r3, [r3, #4]
 802968a:	683a      	ldr	r2, [r7, #0]
 802968c:	6dd1      	ldr	r1, [r2, #92]	; 0x5c
 802968e:	683a      	ldr	r2, [r7, #0]
 8029690:	6852      	ldr	r2, [r2, #4]
 8029692:	1a8a      	subs	r2, r1, r2
 8029694:	441a      	add	r2, r3
 8029696:	687b      	ldr	r3, [r7, #4]
 8029698:	65da      	str	r2, [r3, #92]	; 0x5c
 802969a:	683b      	ldr	r3, [r7, #0]
 802969c:	699b      	ldr	r3, [r3, #24]
 802969e:	2b00      	cmp	r3, #0
 80296a0:	d009      	beq.n	80296b6 <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5+0x86>
 80296a2:	687b      	ldr	r3, [r7, #4]
 80296a4:	685b      	ldr	r3, [r3, #4]
 80296a6:	683a      	ldr	r2, [r7, #0]
 80296a8:	6991      	ldr	r1, [r2, #24]
 80296aa:	683a      	ldr	r2, [r7, #0]
 80296ac:	6852      	ldr	r2, [r2, #4]
 80296ae:	1a8a      	subs	r2, r1, r2
 80296b0:	441a      	add	r2, r3
 80296b2:	687b      	ldr	r3, [r7, #4]
 80296b4:	619a      	str	r2, [r3, #24]
 80296b6:	683b      	ldr	r3, [r7, #0]
 80296b8:	68db      	ldr	r3, [r3, #12]
 80296ba:	2b00      	cmp	r3, #0
 80296bc:	d009      	beq.n	80296d2 <a535af25ff723431653a1b4a4f5b09e3a0cbb8b5+0xa2>
 80296be:	687b      	ldr	r3, [r7, #4]
 80296c0:	685b      	ldr	r3, [r3, #4]
 80296c2:	683a      	ldr	r2, [r7, #0]
 80296c4:	68d1      	ldr	r1, [r2, #12]
 80296c6:	683a      	ldr	r2, [r7, #0]
 80296c8:	6852      	ldr	r2, [r2, #4]
 80296ca:	1a8a      	subs	r2, r1, r2
 80296cc:	441a      	add	r2, r3
 80296ce:	687b      	ldr	r3, [r7, #4]
 80296d0:	60da      	str	r2, [r3, #12]
 80296d2:	bf00      	nop
 80296d4:	3708      	adds	r7, #8
 80296d6:	46bd      	mov	sp, r7
 80296d8:	bd80      	pop	{r7, pc}

080296da <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e>:
 80296da:	b580      	push	{r7, lr}
 80296dc:	b08c      	sub	sp, #48	; 0x30
 80296de:	af00      	add	r7, sp, #0
 80296e0:	60f8      	str	r0, [r7, #12]
 80296e2:	60b9      	str	r1, [r7, #8]
 80296e4:	607a      	str	r2, [r7, #4]
 80296e6:	603b      	str	r3, [r7, #0]
 80296e8:	2300      	movs	r3, #0
 80296ea:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80296ee:	2300      	movs	r3, #0
 80296f0:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 80296f4:	68fb      	ldr	r3, [r7, #12]
 80296f6:	331d      	adds	r3, #29
 80296f8:	4618      	mov	r0, r3
 80296fa:	f7e5 fd11 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 80296fe:	4603      	mov	r3, r0
 8029700:	2b00      	cmp	r3, #0
 8029702:	d029      	beq.n	8029758 <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e+0x7e>
 8029704:	f7e5 fec2 	bl	800f48c <3c5e9d665a63e4e817bae7c8fa4bc5f3c0cfa1bb>
 8029708:	4601      	mov	r1, r0
 802970a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802970e:	2208      	movs	r2, #8
 8029710:	4618      	mov	r0, r3
 8029712:	f000 f89d 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029716:	2302      	movs	r3, #2
 8029718:	753b      	strb	r3, [r7, #20]
 802971a:	683a      	ldr	r2, [r7, #0]
 802971c:	f107 0315 	add.w	r3, r7, #21
 8029720:	6811      	ldr	r1, [r2, #0]
 8029722:	6852      	ldr	r2, [r2, #4]
 8029724:	6019      	str	r1, [r3, #0]
 8029726:	605a      	str	r2, [r3, #4]
 8029728:	7d7b      	ldrb	r3, [r7, #21]
 802972a:	f083 0302 	eor.w	r3, r3, #2
 802972e:	b2db      	uxtb	r3, r3
 8029730:	757b      	strb	r3, [r7, #21]
 8029732:	f107 0314 	add.w	r3, r7, #20
 8029736:	1c59      	adds	r1, r3, #1
 8029738:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802973c:	2208      	movs	r2, #8
 802973e:	4618      	mov	r0, r3
 8029740:	f000 f886 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029744:	68fb      	ldr	r3, [r7, #12]
 8029746:	f103 011e 	add.w	r1, r3, #30
 802974a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802974e:	2210      	movs	r2, #16
 8029750:	4618      	mov	r0, r3
 8029752:	f000 f87d 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029756:	e016      	b.n	8029786 <fa45c3573d0c4a9817d5284f1f562d8d9099ba9e+0xac>
 8029758:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802975c:	2208      	movs	r2, #8
 802975e:	6879      	ldr	r1, [r7, #4]
 8029760:	4618      	mov	r0, r3
 8029762:	f000 f875 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029766:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802976a:	2208      	movs	r2, #8
 802976c:	6839      	ldr	r1, [r7, #0]
 802976e:	4618      	mov	r0, r3
 8029770:	f000 f86e 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029774:	68fb      	ldr	r3, [r7, #12]
 8029776:	f103 011e 	add.w	r1, r3, #30
 802977a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802977e:	2210      	movs	r2, #16
 8029780:	4618      	mov	r0, r3
 8029782:	f000 f865 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 8029786:	2300      	movs	r3, #0
 8029788:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 802978c:	68fb      	ldr	r3, [r7, #12]
 802978e:	7a1b      	ldrb	r3, [r3, #8]
 8029790:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 8029794:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8029798:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 802979c:	2202      	movs	r2, #2
 802979e:	4618      	mov	r0, r3
 80297a0:	f000 f856 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 80297a4:	2300      	movs	r3, #0
 80297a6:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80297aa:	68fb      	ldr	r3, [r7, #12]
 80297ac:	7c1b      	ldrb	r3, [r3, #16]
 80297ae:	f887 3029 	strb.w	r3, [r7, #41]	; 0x29
 80297b2:	f107 0128 	add.w	r1, r7, #40	; 0x28
 80297b6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80297ba:	2202      	movs	r2, #2
 80297bc:	4618      	mov	r0, r3
 80297be:	f000 f847 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 80297c2:	68bb      	ldr	r3, [r7, #8]
 80297c4:	2200      	movs	r2, #0
 80297c6:	701a      	strb	r2, [r3, #0]
 80297c8:	68bb      	ldr	r3, [r7, #8]
 80297ca:	3301      	adds	r3, #1
 80297cc:	2200      	movs	r2, #0
 80297ce:	701a      	strb	r2, [r3, #0]
 80297d0:	68fb      	ldr	r3, [r7, #12]
 80297d2:	6859      	ldr	r1, [r3, #4]
 80297d4:	68fb      	ldr	r3, [r7, #12]
 80297d6:	7a1b      	ldrb	r3, [r3, #8]
 80297d8:	461a      	mov	r2, r3
 80297da:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80297de:	4618      	mov	r0, r3
 80297e0:	f000 f836 	bl	8029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>
 80297e4:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80297e8:	43db      	mvns	r3, r3
 80297ea:	b2db      	uxtb	r3, r3
 80297ec:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 80297f0:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 80297f4:	43db      	mvns	r3, r3
 80297f6:	b2db      	uxtb	r3, r3
 80297f8:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 80297fc:	f897 202c 	ldrb.w	r2, [r7, #44]	; 0x2c
 8029800:	68bb      	ldr	r3, [r7, #8]
 8029802:	701a      	strb	r2, [r3, #0]
 8029804:	68bb      	ldr	r3, [r7, #8]
 8029806:	3301      	adds	r3, #1
 8029808:	f897 202d 	ldrb.w	r2, [r7, #45]	; 0x2d
 802980c:	701a      	strb	r2, [r3, #0]
 802980e:	bf00      	nop
 8029810:	3730      	adds	r7, #48	; 0x30
 8029812:	46bd      	mov	sp, r7
 8029814:	bd80      	pop	{r7, pc}
	...

08029818 <95af8216ead996150d875cb6cdf792d92c29e2d8>:
 8029818:	b580      	push	{r7, lr}
 802981a:	b082      	sub	sp, #8
 802981c:	af00      	add	r7, sp, #0
 802981e:	6078      	str	r0, [r7, #4]
 8029820:	687b      	ldr	r3, [r7, #4]
 8029822:	685a      	ldr	r2, [r3, #4]
 8029824:	687b      	ldr	r3, [r7, #4]
 8029826:	33b9      	adds	r3, #185	; 0xb9
 8029828:	429a      	cmp	r2, r3
 802982a:	d204      	bcs.n	8029836 <95af8216ead996150d875cb6cdf792d92c29e2d8+0x1e>
 802982c:	22b2      	movs	r2, #178	; 0xb2
 802982e:	4906      	ldr	r1, [pc, #24]	; (8029848 <95af8216ead996150d875cb6cdf792d92c29e2d8+0x30>)
 8029830:	4806      	ldr	r0, [pc, #24]	; (802984c <95af8216ead996150d875cb6cdf792d92c29e2d8+0x34>)
 8029832:	f7d7 ff69 	bl	8001708 <EXPECT_OnAbortHandler>
 8029836:	687b      	ldr	r3, [r7, #4]
 8029838:	685a      	ldr	r2, [r3, #4]
 802983a:	687b      	ldr	r3, [r7, #4]
 802983c:	33b9      	adds	r3, #185	; 0xb9
 802983e:	1ad3      	subs	r3, r2, r3
 8029840:	4618      	mov	r0, r3
 8029842:	3708      	adds	r7, #8
 8029844:	46bd      	mov	sp, r7
 8029846:	bd80      	pop	{r7, pc}
 8029848:	0803141c 	.word	0x0803141c
 802984c:	0803148c 	.word	0x0803148c

08029850 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c>:
 8029850:	b480      	push	{r7}
 8029852:	b087      	sub	sp, #28
 8029854:	af00      	add	r7, sp, #0
 8029856:	60f8      	str	r0, [r7, #12]
 8029858:	60b9      	str	r1, [r7, #8]
 802985a:	607a      	str	r2, [r7, #4]
 802985c:	68fb      	ldr	r3, [r7, #12]
 802985e:	781b      	ldrb	r3, [r3, #0]
 8029860:	021b      	lsls	r3, r3, #8
 8029862:	68fa      	ldr	r2, [r7, #12]
 8029864:	3201      	adds	r2, #1
 8029866:	7812      	ldrb	r2, [r2, #0]
 8029868:	4313      	orrs	r3, r2
 802986a:	b29b      	uxth	r3, r3
 802986c:	617b      	str	r3, [r7, #20]
 802986e:	e010      	b.n	8029892 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c+0x42>
 8029870:	68bb      	ldr	r3, [r7, #8]
 8029872:	781b      	ldrb	r3, [r3, #0]
 8029874:	021b      	lsls	r3, r3, #8
 8029876:	68ba      	ldr	r2, [r7, #8]
 8029878:	3201      	adds	r2, #1
 802987a:	7812      	ldrb	r2, [r2, #0]
 802987c:	4313      	orrs	r3, r2
 802987e:	b29b      	uxth	r3, r3
 8029880:	697a      	ldr	r2, [r7, #20]
 8029882:	4413      	add	r3, r2
 8029884:	617b      	str	r3, [r7, #20]
 8029886:	68bb      	ldr	r3, [r7, #8]
 8029888:	3302      	adds	r3, #2
 802988a:	60bb      	str	r3, [r7, #8]
 802988c:	687b      	ldr	r3, [r7, #4]
 802988e:	3b02      	subs	r3, #2
 8029890:	607b      	str	r3, [r7, #4]
 8029892:	687b      	ldr	r3, [r7, #4]
 8029894:	2b01      	cmp	r3, #1
 8029896:	d8eb      	bhi.n	8029870 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c+0x20>
 8029898:	687b      	ldr	r3, [r7, #4]
 802989a:	2b00      	cmp	r3, #0
 802989c:	d00c      	beq.n	80298b8 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c+0x68>
 802989e:	68bb      	ldr	r3, [r7, #8]
 80298a0:	781b      	ldrb	r3, [r3, #0]
 80298a2:	021b      	lsls	r3, r3, #8
 80298a4:	697a      	ldr	r2, [r7, #20]
 80298a6:	4413      	add	r3, r2
 80298a8:	617b      	str	r3, [r7, #20]
 80298aa:	e005      	b.n	80298b8 <ce0285fec3b54ee5ef5bed56217c18d06982ab6c+0x68>
 80298ac:	697b      	ldr	r3, [r7, #20]
 80298ae:	b29a      	uxth	r2, r3
 80298b0:	697b      	ldr	r3, [r7, #20]
 80298b2:	0c1b      	lsrs	r3, r3, #16
 80298b4:	4413      	add	r3, r2
 80298b6:	617b      	str	r3, [r7, #20]
 80298b8:	697b      	ldr	r3, [r7, #20]
 80298ba:	0c1b      	lsrs	r3, r3, #16
 80298bc:	2b00      	cmp	r3, #0
 80298be:	d1f5      	bne.n	80298ac <ce0285fec3b54ee5ef5bed56217c18d06982ab6c+0x5c>
 80298c0:	697b      	ldr	r3, [r7, #20]
 80298c2:	0a1b      	lsrs	r3, r3, #8
 80298c4:	b2da      	uxtb	r2, r3
 80298c6:	68fb      	ldr	r3, [r7, #12]
 80298c8:	701a      	strb	r2, [r3, #0]
 80298ca:	68fb      	ldr	r3, [r7, #12]
 80298cc:	3301      	adds	r3, #1
 80298ce:	697a      	ldr	r2, [r7, #20]
 80298d0:	b2d2      	uxtb	r2, r2
 80298d2:	701a      	strb	r2, [r3, #0]
 80298d4:	bf00      	nop
 80298d6:	371c      	adds	r7, #28
 80298d8:	46bd      	mov	sp, r7
 80298da:	bc80      	pop	{r7}
 80298dc:	4770      	bx	lr

080298de <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9>:
 80298de:	b580      	push	{r7, lr}
 80298e0:	b08a      	sub	sp, #40	; 0x28
 80298e2:	af00      	add	r7, sp, #0
 80298e4:	60f8      	str	r0, [r7, #12]
 80298e6:	60b9      	str	r1, [r7, #8]
 80298e8:	607a      	str	r2, [r7, #4]
 80298ea:	603b      	str	r3, [r7, #0]
 80298ec:	68bb      	ldr	r3, [r7, #8]
 80298ee:	f003 030f 	and.w	r3, r3, #15
 80298f2:	2b00      	cmp	r3, #0
 80298f4:	d001      	beq.n	80298fa <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x1c>
 80298f6:	2300      	movs	r3, #0
 80298f8:	e033      	b.n	8029962 <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x84>
 80298fa:	6878      	ldr	r0, [r7, #4]
 80298fc:	f7dc f952 	bl	8005ba4 <EMBENET_AES128_SetKey>
 8029900:	68bb      	ldr	r3, [r7, #8]
 8029902:	091b      	lsrs	r3, r3, #4
 8029904:	61bb      	str	r3, [r7, #24]
 8029906:	683b      	ldr	r3, [r7, #0]
 8029908:	627b      	str	r3, [r7, #36]	; 0x24
 802990a:	2300      	movs	r3, #0
 802990c:	623b      	str	r3, [r7, #32]
 802990e:	e023      	b.n	8029958 <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x7a>
 8029910:	6a3b      	ldr	r3, [r7, #32]
 8029912:	011b      	lsls	r3, r3, #4
 8029914:	68fa      	ldr	r2, [r7, #12]
 8029916:	4413      	add	r3, r2
 8029918:	617b      	str	r3, [r7, #20]
 802991a:	2300      	movs	r3, #0
 802991c:	61fb      	str	r3, [r7, #28]
 802991e:	e010      	b.n	8029942 <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x64>
 8029920:	697a      	ldr	r2, [r7, #20]
 8029922:	69fb      	ldr	r3, [r7, #28]
 8029924:	4413      	add	r3, r2
 8029926:	7819      	ldrb	r1, [r3, #0]
 8029928:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 802992a:	69fb      	ldr	r3, [r7, #28]
 802992c:	4413      	add	r3, r2
 802992e:	781a      	ldrb	r2, [r3, #0]
 8029930:	6978      	ldr	r0, [r7, #20]
 8029932:	69fb      	ldr	r3, [r7, #28]
 8029934:	4403      	add	r3, r0
 8029936:	404a      	eors	r2, r1
 8029938:	b2d2      	uxtb	r2, r2
 802993a:	701a      	strb	r2, [r3, #0]
 802993c:	69fb      	ldr	r3, [r7, #28]
 802993e:	3301      	adds	r3, #1
 8029940:	61fb      	str	r3, [r7, #28]
 8029942:	69fb      	ldr	r3, [r7, #28]
 8029944:	2b0f      	cmp	r3, #15
 8029946:	d9eb      	bls.n	8029920 <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x42>
 8029948:	6978      	ldr	r0, [r7, #20]
 802994a:	f7dc f985 	bl	8005c58 <EMBENET_AES128_Encrypt>
 802994e:	697b      	ldr	r3, [r7, #20]
 8029950:	627b      	str	r3, [r7, #36]	; 0x24
 8029952:	6a3b      	ldr	r3, [r7, #32]
 8029954:	3301      	adds	r3, #1
 8029956:	623b      	str	r3, [r7, #32]
 8029958:	6a3a      	ldr	r2, [r7, #32]
 802995a:	69bb      	ldr	r3, [r7, #24]
 802995c:	429a      	cmp	r2, r3
 802995e:	d3d7      	bcc.n	8029910 <123d6be73b84de377d469f98e9eeaeb7bfaa3bd9+0x32>
 8029960:	2301      	movs	r3, #1
 8029962:	4618      	mov	r0, r3
 8029964:	3728      	adds	r7, #40	; 0x28
 8029966:	46bd      	mov	sp, r7
 8029968:	bd80      	pop	{r7, pc}

0802996a <7bd9c690a28739e5b569f505b868904b38eb748d>:
 802996a:	b590      	push	{r4, r7, lr}
 802996c:	b091      	sub	sp, #68	; 0x44
 802996e:	af00      	add	r7, sp, #0
 8029970:	60f8      	str	r0, [r7, #12]
 8029972:	60b9      	str	r1, [r7, #8]
 8029974:	607a      	str	r2, [r7, #4]
 8029976:	603b      	str	r3, [r7, #0]
 8029978:	68bb      	ldr	r3, [r7, #8]
 802997a:	f003 030f 	and.w	r3, r3, #15
 802997e:	2b00      	cmp	r3, #0
 8029980:	d001      	beq.n	8029986 <7bd9c690a28739e5b569f505b868904b38eb748d+0x1c>
 8029982:	2300      	movs	r3, #0
 8029984:	e047      	b.n	8029a16 <7bd9c690a28739e5b569f505b868904b38eb748d+0xac>
 8029986:	6878      	ldr	r0, [r7, #4]
 8029988:	f7dc f90c 	bl	8005ba4 <EMBENET_AES128_SetKey>
 802998c:	68bb      	ldr	r3, [r7, #8]
 802998e:	091b      	lsrs	r3, r3, #4
 8029990:	637b      	str	r3, [r7, #52]	; 0x34
 8029992:	683b      	ldr	r3, [r7, #0]
 8029994:	f107 0410 	add.w	r4, r7, #16
 8029998:	6818      	ldr	r0, [r3, #0]
 802999a:	6859      	ldr	r1, [r3, #4]
 802999c:	689a      	ldr	r2, [r3, #8]
 802999e:	68db      	ldr	r3, [r3, #12]
 80299a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80299a2:	2300      	movs	r3, #0
 80299a4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80299a6:	e031      	b.n	8029a0c <7bd9c690a28739e5b569f505b868904b38eb748d+0xa2>
 80299a8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80299aa:	011b      	lsls	r3, r3, #4
 80299ac:	68fa      	ldr	r2, [r7, #12]
 80299ae:	4413      	add	r3, r2
 80299b0:	633b      	str	r3, [r7, #48]	; 0x30
 80299b2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80299b4:	f107 0420 	add.w	r4, r7, #32
 80299b8:	6818      	ldr	r0, [r3, #0]
 80299ba:	6859      	ldr	r1, [r3, #4]
 80299bc:	689a      	ldr	r2, [r3, #8]
 80299be:	68db      	ldr	r3, [r3, #12]
 80299c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80299c2:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80299c4:	f7dc f96c 	bl	8005ca0 <EMBENET_AES128_Decrypt>
 80299c8:	2300      	movs	r3, #0
 80299ca:	63bb      	str	r3, [r7, #56]	; 0x38
 80299cc:	e011      	b.n	80299f2 <7bd9c690a28739e5b569f505b868904b38eb748d+0x88>
 80299ce:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80299d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80299d2:	4413      	add	r3, r2
 80299d4:	7819      	ldrb	r1, [r3, #0]
 80299d6:	f107 0210 	add.w	r2, r7, #16
 80299da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80299dc:	4413      	add	r3, r2
 80299de:	781a      	ldrb	r2, [r3, #0]
 80299e0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80299e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80299e4:	4403      	add	r3, r0
 80299e6:	404a      	eors	r2, r1
 80299e8:	b2d2      	uxtb	r2, r2
 80299ea:	701a      	strb	r2, [r3, #0]
 80299ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80299ee:	3301      	adds	r3, #1
 80299f0:	63bb      	str	r3, [r7, #56]	; 0x38
 80299f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80299f4:	2b0f      	cmp	r3, #15
 80299f6:	d9ea      	bls.n	80299ce <7bd9c690a28739e5b569f505b868904b38eb748d+0x64>
 80299f8:	f107 0410 	add.w	r4, r7, #16
 80299fc:	f107 0320 	add.w	r3, r7, #32
 8029a00:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8029a02:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8029a06:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8029a08:	3301      	adds	r3, #1
 8029a0a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8029a0c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8029a0e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8029a10:	429a      	cmp	r2, r3
 8029a12:	d3c9      	bcc.n	80299a8 <7bd9c690a28739e5b569f505b868904b38eb748d+0x3e>
 8029a14:	2301      	movs	r3, #1
 8029a16:	4618      	mov	r0, r3
 8029a18:	3744      	adds	r7, #68	; 0x44
 8029a1a:	46bd      	mov	sp, r7
 8029a1c:	bd90      	pop	{r4, r7, pc}

08029a1e <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d>:
 8029a1e:	b580      	push	{r7, lr}
 8029a20:	b08e      	sub	sp, #56	; 0x38
 8029a22:	af06      	add	r7, sp, #24
 8029a24:	60f8      	str	r0, [r7, #12]
 8029a26:	607a      	str	r2, [r7, #4]
 8029a28:	603b      	str	r3, [r7, #0]
 8029a2a:	460b      	mov	r3, r1
 8029a2c:	72fb      	strb	r3, [r7, #11]
 8029a2e:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8029a32:	2b10      	cmp	r3, #16
 8029a34:	d803      	bhi.n	8029a3e <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0x20>
 8029a36:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8029a3a:	2b02      	cmp	r3, #2
 8029a3c:	d001      	beq.n	8029a42 <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0x24>
 8029a3e:	2300      	movs	r3, #0
 8029a40:	e041      	b.n	8029ac6 <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0xa8>
 8029a42:	683b      	ldr	r3, [r7, #0]
 8029a44:	781a      	ldrb	r2, [r3, #0]
 8029a46:	7af9      	ldrb	r1, [r7, #11]
 8029a48:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8029a4c:	9304      	str	r3, [sp, #16]
 8029a4e:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8029a52:	9303      	str	r3, [sp, #12]
 8029a54:	f107 0310 	add.w	r3, r7, #16
 8029a58:	9302      	str	r3, [sp, #8]
 8029a5a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8029a5c:	9301      	str	r3, [sp, #4]
 8029a5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8029a60:	9300      	str	r3, [sp, #0]
 8029a62:	4613      	mov	r3, r2
 8029a64:	687a      	ldr	r2, [r7, #4]
 8029a66:	68f8      	ldr	r0, [r7, #12]
 8029a68:	f000 f895 	bl	8029b96 <aes_cbc_mac>
 8029a6c:	4603      	mov	r3, r0
 8029a6e:	2b00      	cmp	r3, #0
 8029a70:	d028      	beq.n	8029ac4 <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0xa6>
 8029a72:	683b      	ldr	r3, [r7, #0]
 8029a74:	7819      	ldrb	r1, [r3, #0]
 8029a76:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8029a7a:	9302      	str	r3, [sp, #8]
 8029a7c:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8029a80:	9301      	str	r3, [sp, #4]
 8029a82:	f107 0310 	add.w	r3, r7, #16
 8029a86:	9300      	str	r3, [sp, #0]
 8029a88:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8029a8a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8029a8c:	6878      	ldr	r0, [r7, #4]
 8029a8e:	f000 f9a5 	bl	8029ddc <aes_ctr_enc>
 8029a92:	4603      	mov	r3, r0
 8029a94:	2b00      	cmp	r3, #0
 8029a96:	d015      	beq.n	8029ac4 <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0xa6>
 8029a98:	683b      	ldr	r3, [r7, #0]
 8029a9a:	781b      	ldrb	r3, [r3, #0]
 8029a9c:	461a      	mov	r2, r3
 8029a9e:	687b      	ldr	r3, [r7, #4]
 8029aa0:	4413      	add	r3, r2
 8029aa2:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8029aa6:	f107 0110 	add.w	r1, r7, #16
 8029aaa:	4618      	mov	r0, r3
 8029aac:	f001 fbc3 	bl	802b236 <memcpy>
 8029ab0:	683b      	ldr	r3, [r7, #0]
 8029ab2:	781a      	ldrb	r2, [r3, #0]
 8029ab4:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8029ab8:	4413      	add	r3, r2
 8029aba:	b2da      	uxtb	r2, r3
 8029abc:	683b      	ldr	r3, [r7, #0]
 8029abe:	701a      	strb	r2, [r3, #0]
 8029ac0:	2301      	movs	r3, #1
 8029ac2:	e000      	b.n	8029ac6 <14b64b43d7bd244f9a4a7d3bf7e4599cd60c3d0d+0xa8>
 8029ac4:	2300      	movs	r3, #0
 8029ac6:	4618      	mov	r0, r3
 8029ac8:	3720      	adds	r7, #32
 8029aca:	46bd      	mov	sp, r7
 8029acc:	bd80      	pop	{r7, pc}

08029ace <71097e204b694049f5c66ccd9b138d3a4c93df13>:
 8029ace:	b580      	push	{r7, lr}
 8029ad0:	b092      	sub	sp, #72	; 0x48
 8029ad2:	af06      	add	r7, sp, #24
 8029ad4:	60f8      	str	r0, [r7, #12]
 8029ad6:	607a      	str	r2, [r7, #4]
 8029ad8:	603b      	str	r3, [r7, #0]
 8029ada:	460b      	mov	r3, r1
 8029adc:	72fb      	strb	r3, [r7, #11]
 8029ade:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8029ae2:	2b10      	cmp	r3, #16
 8029ae4:	d803      	bhi.n	8029aee <71097e204b694049f5c66ccd9b138d3a4c93df13+0x20>
 8029ae6:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8029aea:	2b02      	cmp	r3, #2
 8029aec:	d001      	beq.n	8029af2 <71097e204b694049f5c66ccd9b138d3a4c93df13+0x24>
 8029aee:	2300      	movs	r3, #0
 8029af0:	e04d      	b.n	8029b8e <71097e204b694049f5c66ccd9b138d3a4c93df13+0xc0>
 8029af2:	683b      	ldr	r3, [r7, #0]
 8029af4:	781a      	ldrb	r2, [r3, #0]
 8029af6:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8029afa:	1ad3      	subs	r3, r2, r3
 8029afc:	b2da      	uxtb	r2, r3
 8029afe:	683b      	ldr	r3, [r7, #0]
 8029b00:	701a      	strb	r2, [r3, #0]
 8029b02:	683b      	ldr	r3, [r7, #0]
 8029b04:	781b      	ldrb	r3, [r3, #0]
 8029b06:	461a      	mov	r2, r3
 8029b08:	687b      	ldr	r3, [r7, #4]
 8029b0a:	1899      	adds	r1, r3, r2
 8029b0c:	f897 2044 	ldrb.w	r2, [r7, #68]	; 0x44
 8029b10:	f107 0320 	add.w	r3, r7, #32
 8029b14:	4618      	mov	r0, r3
 8029b16:	f001 fb8e 	bl	802b236 <memcpy>
 8029b1a:	683b      	ldr	r3, [r7, #0]
 8029b1c:	7819      	ldrb	r1, [r3, #0]
 8029b1e:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8029b22:	9302      	str	r3, [sp, #8]
 8029b24:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8029b28:	9301      	str	r3, [sp, #4]
 8029b2a:	f107 0320 	add.w	r3, r7, #32
 8029b2e:	9300      	str	r3, [sp, #0]
 8029b30:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8029b32:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8029b34:	6878      	ldr	r0, [r7, #4]
 8029b36:	f000 f951 	bl	8029ddc <aes_ctr_enc>
 8029b3a:	4603      	mov	r3, r0
 8029b3c:	2b00      	cmp	r3, #0
 8029b3e:	d025      	beq.n	8029b8c <71097e204b694049f5c66ccd9b138d3a4c93df13+0xbe>
 8029b40:	683b      	ldr	r3, [r7, #0]
 8029b42:	781a      	ldrb	r2, [r3, #0]
 8029b44:	7af9      	ldrb	r1, [r7, #11]
 8029b46:	f897 303c 	ldrb.w	r3, [r7, #60]	; 0x3c
 8029b4a:	9304      	str	r3, [sp, #16]
 8029b4c:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8029b50:	9303      	str	r3, [sp, #12]
 8029b52:	f107 0310 	add.w	r3, r7, #16
 8029b56:	9302      	str	r3, [sp, #8]
 8029b58:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8029b5a:	9301      	str	r3, [sp, #4]
 8029b5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8029b5e:	9300      	str	r3, [sp, #0]
 8029b60:	4613      	mov	r3, r2
 8029b62:	687a      	ldr	r2, [r7, #4]
 8029b64:	68f8      	ldr	r0, [r7, #12]
 8029b66:	f000 f816 	bl	8029b96 <aes_cbc_mac>
 8029b6a:	4603      	mov	r3, r0
 8029b6c:	2b00      	cmp	r3, #0
 8029b6e:	d00d      	beq.n	8029b8c <71097e204b694049f5c66ccd9b138d3a4c93df13+0xbe>
 8029b70:	f897 2044 	ldrb.w	r2, [r7, #68]	; 0x44
 8029b74:	f107 0110 	add.w	r1, r7, #16
 8029b78:	f107 0320 	add.w	r3, r7, #32
 8029b7c:	4618      	mov	r0, r3
 8029b7e:	f001 fa91 	bl	802b0a4 <memcmp>
 8029b82:	4603      	mov	r3, r0
 8029b84:	2b00      	cmp	r3, #0
 8029b86:	d101      	bne.n	8029b8c <71097e204b694049f5c66ccd9b138d3a4c93df13+0xbe>
 8029b88:	2301      	movs	r3, #1
 8029b8a:	e000      	b.n	8029b8e <71097e204b694049f5c66ccd9b138d3a4c93df13+0xc0>
 8029b8c:	2300      	movs	r3, #0
 8029b8e:	4618      	mov	r0, r3
 8029b90:	3730      	adds	r7, #48	; 0x30
 8029b92:	46bd      	mov	sp, r7
 8029b94:	bd80      	pop	{r7, pc}

08029b96 <aes_cbc_mac>:
 8029b96:	b580      	push	{r7, lr}
 8029b98:	b0b2      	sub	sp, #200	; 0xc8
 8029b9a:	af00      	add	r7, sp, #0
 8029b9c:	60f8      	str	r0, [r7, #12]
 8029b9e:	607a      	str	r2, [r7, #4]
 8029ba0:	461a      	mov	r2, r3
 8029ba2:	460b      	mov	r3, r1
 8029ba4:	72fb      	strb	r3, [r7, #11]
 8029ba6:	4613      	mov	r3, r2
 8029ba8:	72bb      	strb	r3, [r7, #10]
 8029baa:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029bae:	2b00      	cmp	r3, #0
 8029bb0:	d00d      	beq.n	8029bce <aes_cbc_mac+0x38>
 8029bb2:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029bb6:	2b04      	cmp	r3, #4
 8029bb8:	d009      	beq.n	8029bce <aes_cbc_mac+0x38>
 8029bba:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029bbe:	2b08      	cmp	r3, #8
 8029bc0:	d005      	beq.n	8029bce <aes_cbc_mac+0x38>
 8029bc2:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029bc6:	2b10      	cmp	r3, #16
 8029bc8:	d001      	beq.n	8029bce <aes_cbc_mac+0x38>
 8029bca:	2300      	movs	r3, #0
 8029bcc:	e102      	b.n	8029dd4 <aes_cbc_mac+0x23e>
 8029bce:	f997 300b 	ldrsb.w	r3, [r7, #11]
 8029bd2:	2b00      	cmp	r3, #0
 8029bd4:	db08      	blt.n	8029be8 <aes_cbc_mac+0x52>
 8029bd6:	f997 300a 	ldrsb.w	r3, [r7, #10]
 8029bda:	2b00      	cmp	r3, #0
 8029bdc:	db04      	blt.n	8029be8 <aes_cbc_mac+0x52>
 8029bde:	7afa      	ldrb	r2, [r7, #11]
 8029be0:	7abb      	ldrb	r3, [r7, #10]
 8029be2:	4413      	add	r3, r2
 8029be4:	2b7f      	cmp	r3, #127	; 0x7f
 8029be6:	dd01      	ble.n	8029bec <aes_cbc_mac+0x56>
 8029be8:	2300      	movs	r3, #0
 8029bea:	e0f3      	b.n	8029dd4 <aes_cbc_mac+0x23e>
 8029bec:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8029bf0:	2b00      	cmp	r3, #0
 8029bf2:	d101      	bne.n	8029bf8 <aes_cbc_mac+0x62>
 8029bf4:	2300      	movs	r3, #0
 8029bf6:	e0ed      	b.n	8029dd4 <aes_cbc_mac+0x23e>
 8029bf8:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8029bfc:	2210      	movs	r2, #16
 8029bfe:	2100      	movs	r1, #0
 8029c00:	4618      	mov	r0, r3
 8029c02:	f001 fa79 	bl	802b0f8 <memset>
 8029c06:	2300      	movs	r3, #0
 8029c08:	753b      	strb	r3, [r7, #20]
 8029c0a:	7d3b      	ldrb	r3, [r7, #20]
 8029c0c:	b25a      	sxtb	r2, r3
 8029c0e:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 8029c12:	3b01      	subs	r3, #1
 8029c14:	b2db      	uxtb	r3, r3
 8029c16:	b25b      	sxtb	r3, r3
 8029c18:	f003 0307 	and.w	r3, r3, #7
 8029c1c:	b25b      	sxtb	r3, r3
 8029c1e:	4313      	orrs	r3, r2
 8029c20:	b25b      	sxtb	r3, r3
 8029c22:	b2db      	uxtb	r3, r3
 8029c24:	753b      	strb	r3, [r7, #20]
 8029c26:	7d3b      	ldrb	r3, [r7, #20]
 8029c28:	b25a      	sxtb	r2, r3
 8029c2a:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029c2e:	2b00      	cmp	r3, #0
 8029c30:	d008      	beq.n	8029c44 <aes_cbc_mac+0xae>
 8029c32:	f897 30dc 	ldrb.w	r3, [r7, #220]	; 0xdc
 8029c36:	3b02      	subs	r3, #2
 8029c38:	009b      	lsls	r3, r3, #2
 8029c3a:	b25b      	sxtb	r3, r3
 8029c3c:	f003 031c 	and.w	r3, r3, #28
 8029c40:	b25b      	sxtb	r3, r3
 8029c42:	e000      	b.n	8029c46 <aes_cbc_mac+0xb0>
 8029c44:	2300      	movs	r3, #0
 8029c46:	4313      	orrs	r3, r2
 8029c48:	b25b      	sxtb	r3, r3
 8029c4a:	b2db      	uxtb	r3, r3
 8029c4c:	753b      	strb	r3, [r7, #20]
 8029c4e:	7d3b      	ldrb	r3, [r7, #20]
 8029c50:	b25b      	sxtb	r3, r3
 8029c52:	7afa      	ldrb	r2, [r7, #11]
 8029c54:	2a00      	cmp	r2, #0
 8029c56:	d001      	beq.n	8029c5c <aes_cbc_mac+0xc6>
 8029c58:	2240      	movs	r2, #64	; 0x40
 8029c5a:	e000      	b.n	8029c5e <aes_cbc_mac+0xc8>
 8029c5c:	2200      	movs	r2, #0
 8029c5e:	4313      	orrs	r3, r2
 8029c60:	b25b      	sxtb	r3, r3
 8029c62:	b2db      	uxtb	r3, r3
 8029c64:	753b      	strb	r3, [r7, #20]
 8029c66:	f107 0314 	add.w	r3, r7, #20
 8029c6a:	3301      	adds	r3, #1
 8029c6c:	220d      	movs	r2, #13
 8029c6e:	f8d7 10d0 	ldr.w	r1, [r7, #208]	; 0xd0
 8029c72:	4618      	mov	r0, r3
 8029c74:	f001 fadf 	bl	802b236 <memcpy>
 8029c78:	f897 30e0 	ldrb.w	r3, [r7, #224]	; 0xe0
 8029c7c:	2b03      	cmp	r3, #3
 8029c7e:	d102      	bne.n	8029c86 <aes_cbc_mac+0xf0>
 8029c80:	2300      	movs	r3, #0
 8029c82:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
 8029c86:	2300      	movs	r3, #0
 8029c88:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8029c8c:	7abb      	ldrb	r3, [r7, #10]
 8029c8e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8029c92:	2310      	movs	r3, #16
 8029c94:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029c98:	7afb      	ldrb	r3, [r7, #11]
 8029c9a:	2b00      	cmp	r3, #0
 8029c9c:	d00a      	beq.n	8029cb4 <aes_cbc_mac+0x11e>
 8029c9e:	2300      	movs	r3, #0
 8029ca0:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8029ca4:	7afb      	ldrb	r3, [r7, #11]
 8029ca6:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8029caa:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029cae:	3302      	adds	r3, #2
 8029cb0:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029cb4:	7afa      	ldrb	r2, [r7, #11]
 8029cb6:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029cba:	4413      	add	r3, r2
 8029cbc:	3b10      	subs	r3, #16
 8029cbe:	111b      	asrs	r3, r3, #4
 8029cc0:	b2db      	uxtb	r3, r3
 8029cc2:	3301      	adds	r3, #1
 8029cc4:	b2db      	uxtb	r3, r3
 8029cc6:	011b      	lsls	r3, r3, #4
 8029cc8:	b2da      	uxtb	r2, r3
 8029cca:	7af9      	ldrb	r1, [r7, #11]
 8029ccc:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029cd0:	440b      	add	r3, r1
 8029cd2:	b2db      	uxtb	r3, r3
 8029cd4:	1ad3      	subs	r3, r2, r3
 8029cd6:	b2db      	uxtb	r3, r3
 8029cd8:	3310      	adds	r3, #16
 8029cda:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 8029cde:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029ce2:	2b10      	cmp	r3, #16
 8029ce4:	d002      	beq.n	8029cec <aes_cbc_mac+0x156>
 8029ce6:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029cea:	e000      	b.n	8029cee <aes_cbc_mac+0x158>
 8029cec:	2300      	movs	r3, #0
 8029cee:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 8029cf2:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029cf6:	f107 0214 	add.w	r2, r7, #20
 8029cfa:	4413      	add	r3, r2
 8029cfc:	7afa      	ldrb	r2, [r7, #11]
 8029cfe:	68f9      	ldr	r1, [r7, #12]
 8029d00:	4618      	mov	r0, r3
 8029d02:	f001 fa98 	bl	802b236 <memcpy>
 8029d06:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 8029d0a:	7afb      	ldrb	r3, [r7, #11]
 8029d0c:	4413      	add	r3, r2
 8029d0e:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029d12:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029d16:	f107 0214 	add.w	r2, r7, #20
 8029d1a:	4413      	add	r3, r2
 8029d1c:	f897 20c6 	ldrb.w	r2, [r7, #198]	; 0xc6
 8029d20:	2100      	movs	r1, #0
 8029d22:	4618      	mov	r0, r3
 8029d24:	f001 f9e8 	bl	802b0f8 <memset>
 8029d28:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 8029d2c:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029d30:	4413      	add	r3, r2
 8029d32:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029d36:	7abb      	ldrb	r3, [r7, #10]
 8029d38:	091b      	lsrs	r3, r3, #4
 8029d3a:	b2db      	uxtb	r3, r3
 8029d3c:	3301      	adds	r3, #1
 8029d3e:	b2db      	uxtb	r3, r3
 8029d40:	011b      	lsls	r3, r3, #4
 8029d42:	b2da      	uxtb	r2, r3
 8029d44:	7abb      	ldrb	r3, [r7, #10]
 8029d46:	1ad3      	subs	r3, r2, r3
 8029d48:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 8029d4c:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029d50:	2b10      	cmp	r3, #16
 8029d52:	d002      	beq.n	8029d5a <aes_cbc_mac+0x1c4>
 8029d54:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029d58:	e000      	b.n	8029d5c <aes_cbc_mac+0x1c6>
 8029d5a:	2300      	movs	r3, #0
 8029d5c:	f887 30c6 	strb.w	r3, [r7, #198]	; 0xc6
 8029d60:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029d64:	f107 0214 	add.w	r2, r7, #20
 8029d68:	4413      	add	r3, r2
 8029d6a:	7aba      	ldrb	r2, [r7, #10]
 8029d6c:	6879      	ldr	r1, [r7, #4]
 8029d6e:	4618      	mov	r0, r3
 8029d70:	f001 fa61 	bl	802b236 <memcpy>
 8029d74:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 8029d78:	7abb      	ldrb	r3, [r7, #10]
 8029d7a:	4413      	add	r3, r2
 8029d7c:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029d80:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029d84:	f107 0214 	add.w	r2, r7, #20
 8029d88:	4413      	add	r3, r2
 8029d8a:	f897 20c6 	ldrb.w	r2, [r7, #198]	; 0xc6
 8029d8e:	2100      	movs	r1, #0
 8029d90:	4618      	mov	r0, r3
 8029d92:	f001 f9b1 	bl	802b0f8 <memset>
 8029d96:	f897 20c7 	ldrb.w	r2, [r7, #199]	; 0xc7
 8029d9a:	f897 30c6 	ldrb.w	r3, [r7, #198]	; 0xc6
 8029d9e:	4413      	add	r3, r2
 8029da0:	f887 30c7 	strb.w	r3, [r7, #199]	; 0xc7
 8029da4:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 8029da8:	f897 10c7 	ldrb.w	r1, [r7, #199]	; 0xc7
 8029dac:	f107 0014 	add.w	r0, r7, #20
 8029db0:	f8d7 20d4 	ldr.w	r2, [r7, #212]	; 0xd4
 8029db4:	f000 f8c2 	bl	8029f3c <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4>
 8029db8:	f897 30c7 	ldrb.w	r3, [r7, #199]	; 0xc7
 8029dbc:	3b10      	subs	r3, #16
 8029dbe:	f107 0214 	add.w	r2, r7, #20
 8029dc2:	4413      	add	r3, r2
 8029dc4:	f897 20dc 	ldrb.w	r2, [r7, #220]	; 0xdc
 8029dc8:	4619      	mov	r1, r3
 8029dca:	f8d7 00d8 	ldr.w	r0, [r7, #216]	; 0xd8
 8029dce:	f001 fa32 	bl	802b236 <memcpy>
 8029dd2:	2301      	movs	r3, #1
 8029dd4:	4618      	mov	r0, r3
 8029dd6:	37c8      	adds	r7, #200	; 0xc8
 8029dd8:	46bd      	mov	sp, r7
 8029dda:	bd80      	pop	{r7, pc}

08029ddc <aes_ctr_enc>:
 8029ddc:	b580      	push	{r7, lr}
 8029dde:	b0ae      	sub	sp, #184	; 0xb8
 8029de0:	af00      	add	r7, sp, #0
 8029de2:	60f8      	str	r0, [r7, #12]
 8029de4:	607a      	str	r2, [r7, #4]
 8029de6:	603b      	str	r3, [r7, #0]
 8029de8:	460b      	mov	r3, r1
 8029dea:	72fb      	strb	r3, [r7, #11]
 8029dec:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029df0:	2b00      	cmp	r3, #0
 8029df2:	d00d      	beq.n	8029e10 <aes_ctr_enc+0x34>
 8029df4:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029df8:	2b04      	cmp	r3, #4
 8029dfa:	d009      	beq.n	8029e10 <aes_ctr_enc+0x34>
 8029dfc:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029e00:	2b08      	cmp	r3, #8
 8029e02:	d005      	beq.n	8029e10 <aes_ctr_enc+0x34>
 8029e04:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029e08:	2b10      	cmp	r3, #16
 8029e0a:	d001      	beq.n	8029e10 <aes_ctr_enc+0x34>
 8029e0c:	2300      	movs	r3, #0
 8029e0e:	e091      	b.n	8029f34 <aes_ctr_enc+0x158>
 8029e10:	f997 300b 	ldrsb.w	r3, [r7, #11]
 8029e14:	2b00      	cmp	r3, #0
 8029e16:	da01      	bge.n	8029e1c <aes_ctr_enc+0x40>
 8029e18:	2300      	movs	r3, #0
 8029e1a:	e08b      	b.n	8029f34 <aes_ctr_enc+0x158>
 8029e1c:	2300      	movs	r3, #0
 8029e1e:	f887 30a4 	strb.w	r3, [r7, #164]	; 0xa4
 8029e22:	f897 30a4 	ldrb.w	r3, [r7, #164]	; 0xa4
 8029e26:	b25a      	sxtb	r2, r3
 8029e28:	f897 30c8 	ldrb.w	r3, [r7, #200]	; 0xc8
 8029e2c:	3b01      	subs	r3, #1
 8029e2e:	b2db      	uxtb	r3, r3
 8029e30:	b25b      	sxtb	r3, r3
 8029e32:	f003 0307 	and.w	r3, r3, #7
 8029e36:	b25b      	sxtb	r3, r3
 8029e38:	4313      	orrs	r3, r2
 8029e3a:	b25b      	sxtb	r3, r3
 8029e3c:	b2db      	uxtb	r3, r3
 8029e3e:	f887 30a4 	strb.w	r3, [r7, #164]	; 0xa4
 8029e42:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8029e46:	3301      	adds	r3, #1
 8029e48:	220d      	movs	r2, #13
 8029e4a:	6879      	ldr	r1, [r7, #4]
 8029e4c:	4618      	mov	r0, r3
 8029e4e:	f001 f9f2 	bl	802b236 <memcpy>
 8029e52:	2300      	movs	r3, #0
 8029e54:	f887 30b2 	strb.w	r3, [r7, #178]	; 0xb2
 8029e58:	2300      	movs	r3, #0
 8029e5a:	f887 30b3 	strb.w	r3, [r7, #179]	; 0xb3
 8029e5e:	f897 20c4 	ldrb.w	r2, [r7, #196]	; 0xc4
 8029e62:	f107 0314 	add.w	r3, r7, #20
 8029e66:	f8d7 10c0 	ldr.w	r1, [r7, #192]	; 0xc0
 8029e6a:	4618      	mov	r0, r3
 8029e6c:	f001 f9e3 	bl	802b236 <memcpy>
 8029e70:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029e74:	f107 0214 	add.w	r2, r7, #20
 8029e78:	18d0      	adds	r0, r2, r3
 8029e7a:	f897 30c4 	ldrb.w	r3, [r7, #196]	; 0xc4
 8029e7e:	f1c3 0310 	rsb	r3, r3, #16
 8029e82:	461a      	mov	r2, r3
 8029e84:	2100      	movs	r1, #0
 8029e86:	f001 f937 	bl	802b0f8 <memset>
 8029e8a:	2310      	movs	r3, #16
 8029e8c:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 8029e90:	7afb      	ldrb	r3, [r7, #11]
 8029e92:	091b      	lsrs	r3, r3, #4
 8029e94:	b2db      	uxtb	r3, r3
 8029e96:	3301      	adds	r3, #1
 8029e98:	b2db      	uxtb	r3, r3
 8029e9a:	011b      	lsls	r3, r3, #4
 8029e9c:	b2da      	uxtb	r2, r3
 8029e9e:	7afb      	ldrb	r3, [r7, #11]
 8029ea0:	1ad3      	subs	r3, r2, r3
 8029ea2:	f887 30b6 	strb.w	r3, [r7, #182]	; 0xb6
 8029ea6:	f897 30b6 	ldrb.w	r3, [r7, #182]	; 0xb6
 8029eaa:	2b10      	cmp	r3, #16
 8029eac:	d002      	beq.n	8029eb4 <aes_ctr_enc+0xd8>
 8029eae:	f897 30b6 	ldrb.w	r3, [r7, #182]	; 0xb6
 8029eb2:	e000      	b.n	8029eb6 <aes_ctr_enc+0xda>
 8029eb4:	2300      	movs	r3, #0
 8029eb6:	f887 30b6 	strb.w	r3, [r7, #182]	; 0xb6
 8029eba:	f897 30b7 	ldrb.w	r3, [r7, #183]	; 0xb7
 8029ebe:	f107 0214 	add.w	r2, r7, #20
 8029ec2:	4413      	add	r3, r2
 8029ec4:	7afa      	ldrb	r2, [r7, #11]
 8029ec6:	68f9      	ldr	r1, [r7, #12]
 8029ec8:	4618      	mov	r0, r3
 8029eca:	f001 f9b4 	bl	802b236 <memcpy>
 8029ece:	f897 20b7 	ldrb.w	r2, [r7, #183]	; 0xb7
 8029ed2:	7afb      	ldrb	r3, [r7, #11]
 8029ed4:	4413      	add	r3, r2
 8029ed6:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 8029eda:	f897 30b7 	ldrb.w	r3, [r7, #183]	; 0xb7
 8029ede:	f107 0214 	add.w	r2, r7, #20
 8029ee2:	4413      	add	r3, r2
 8029ee4:	f897 20b6 	ldrb.w	r2, [r7, #182]	; 0xb6
 8029ee8:	2100      	movs	r1, #0
 8029eea:	4618      	mov	r0, r3
 8029eec:	f001 f904 	bl	802b0f8 <memset>
 8029ef0:	f897 20b7 	ldrb.w	r2, [r7, #183]	; 0xb7
 8029ef4:	f897 30b6 	ldrb.w	r3, [r7, #182]	; 0xb6
 8029ef8:	4413      	add	r3, r2
 8029efa:	f887 30b7 	strb.w	r3, [r7, #183]	; 0xb7
 8029efe:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8029f02:	f897 10b7 	ldrb.w	r1, [r7, #183]	; 0xb7
 8029f06:	f107 0014 	add.w	r0, r7, #20
 8029f0a:	683a      	ldr	r2, [r7, #0]
 8029f0c:	f000 f857 	bl	8029fbe <8fb52f7932f2fccbd263980037c0f2c0966c0ebe>
 8029f10:	7afa      	ldrb	r2, [r7, #11]
 8029f12:	f107 0314 	add.w	r3, r7, #20
 8029f16:	3310      	adds	r3, #16
 8029f18:	4619      	mov	r1, r3
 8029f1a:	68f8      	ldr	r0, [r7, #12]
 8029f1c:	f001 f98b 	bl	802b236 <memcpy>
 8029f20:	f897 20c4 	ldrb.w	r2, [r7, #196]	; 0xc4
 8029f24:	f107 0314 	add.w	r3, r7, #20
 8029f28:	4619      	mov	r1, r3
 8029f2a:	f8d7 00c0 	ldr.w	r0, [r7, #192]	; 0xc0
 8029f2e:	f001 f982 	bl	802b236 <memcpy>
 8029f32:	2301      	movs	r3, #1
 8029f34:	4618      	mov	r0, r3
 8029f36:	37b8      	adds	r7, #184	; 0xb8
 8029f38:	46bd      	mov	sp, r7
 8029f3a:	bd80      	pop	{r7, pc}

08029f3c <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4>:
 8029f3c:	b580      	push	{r7, lr}
 8029f3e:	b088      	sub	sp, #32
 8029f40:	af00      	add	r7, sp, #0
 8029f42:	60f8      	str	r0, [r7, #12]
 8029f44:	607a      	str	r2, [r7, #4]
 8029f46:	603b      	str	r3, [r7, #0]
 8029f48:	460b      	mov	r3, r1
 8029f4a:	72fb      	strb	r3, [r7, #11]
 8029f4c:	6878      	ldr	r0, [r7, #4]
 8029f4e:	f7db fe29 	bl	8005ba4 <EMBENET_AES128_SetKey>
 8029f52:	7afb      	ldrb	r3, [r7, #11]
 8029f54:	091b      	lsrs	r3, r3, #4
 8029f56:	75fb      	strb	r3, [r7, #23]
 8029f58:	683b      	ldr	r3, [r7, #0]
 8029f5a:	61bb      	str	r3, [r7, #24]
 8029f5c:	2300      	movs	r3, #0
 8029f5e:	77fb      	strb	r3, [r7, #31]
 8029f60:	e024      	b.n	8029fac <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4+0x70>
 8029f62:	7ffb      	ldrb	r3, [r7, #31]
 8029f64:	011b      	lsls	r3, r3, #4
 8029f66:	461a      	mov	r2, r3
 8029f68:	68fb      	ldr	r3, [r7, #12]
 8029f6a:	4413      	add	r3, r2
 8029f6c:	613b      	str	r3, [r7, #16]
 8029f6e:	2300      	movs	r3, #0
 8029f70:	77bb      	strb	r3, [r7, #30]
 8029f72:	e010      	b.n	8029f96 <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4+0x5a>
 8029f74:	7fbb      	ldrb	r3, [r7, #30]
 8029f76:	693a      	ldr	r2, [r7, #16]
 8029f78:	4413      	add	r3, r2
 8029f7a:	7819      	ldrb	r1, [r3, #0]
 8029f7c:	7fbb      	ldrb	r3, [r7, #30]
 8029f7e:	69ba      	ldr	r2, [r7, #24]
 8029f80:	4413      	add	r3, r2
 8029f82:	781a      	ldrb	r2, [r3, #0]
 8029f84:	7fbb      	ldrb	r3, [r7, #30]
 8029f86:	6938      	ldr	r0, [r7, #16]
 8029f88:	4403      	add	r3, r0
 8029f8a:	404a      	eors	r2, r1
 8029f8c:	b2d2      	uxtb	r2, r2
 8029f8e:	701a      	strb	r2, [r3, #0]
 8029f90:	7fbb      	ldrb	r3, [r7, #30]
 8029f92:	3301      	adds	r3, #1
 8029f94:	77bb      	strb	r3, [r7, #30]
 8029f96:	7fbb      	ldrb	r3, [r7, #30]
 8029f98:	2b0f      	cmp	r3, #15
 8029f9a:	d9eb      	bls.n	8029f74 <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4+0x38>
 8029f9c:	6938      	ldr	r0, [r7, #16]
 8029f9e:	f7db fe5b 	bl	8005c58 <EMBENET_AES128_Encrypt>
 8029fa2:	693b      	ldr	r3, [r7, #16]
 8029fa4:	61bb      	str	r3, [r7, #24]
 8029fa6:	7ffb      	ldrb	r3, [r7, #31]
 8029fa8:	3301      	adds	r3, #1
 8029faa:	77fb      	strb	r3, [r7, #31]
 8029fac:	7ffa      	ldrb	r2, [r7, #31]
 8029fae:	7dfb      	ldrb	r3, [r7, #23]
 8029fb0:	429a      	cmp	r2, r3
 8029fb2:	d3d6      	bcc.n	8029f62 <e0830aeaf26176a306c60c62f5a29f0f35eb5dd4+0x26>
 8029fb4:	bf00      	nop
 8029fb6:	bf00      	nop
 8029fb8:	3720      	adds	r7, #32
 8029fba:	46bd      	mov	sp, r7
 8029fbc:	bd80      	pop	{r7, pc}

08029fbe <8fb52f7932f2fccbd263980037c0f2c0966c0ebe>:
 8029fbe:	b590      	push	{r4, r7, lr}
 8029fc0:	b08b      	sub	sp, #44	; 0x2c
 8029fc2:	af00      	add	r7, sp, #0
 8029fc4:	60f8      	str	r0, [r7, #12]
 8029fc6:	607a      	str	r2, [r7, #4]
 8029fc8:	603b      	str	r3, [r7, #0]
 8029fca:	460b      	mov	r3, r1
 8029fcc:	72fb      	strb	r3, [r7, #11]
 8029fce:	6878      	ldr	r0, [r7, #4]
 8029fd0:	f7db fde8 	bl	8005ba4 <EMBENET_AES128_SetKey>
 8029fd4:	7afb      	ldrb	r3, [r7, #11]
 8029fd6:	091b      	lsrs	r3, r3, #4
 8029fd8:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8029fdc:	2300      	movs	r3, #0
 8029fde:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8029fe2:	e03a      	b.n	802a05a <8fb52f7932f2fccbd263980037c0f2c0966c0ebe+0x9c>
 8029fe4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8029fe8:	011b      	lsls	r3, r3, #4
 8029fea:	461a      	mov	r2, r3
 8029fec:	68fb      	ldr	r3, [r7, #12]
 8029fee:	4413      	add	r3, r2
 8029ff0:	623b      	str	r3, [r7, #32]
 8029ff2:	683b      	ldr	r3, [r7, #0]
 8029ff4:	f107 0410 	add.w	r4, r7, #16
 8029ff8:	6818      	ldr	r0, [r3, #0]
 8029ffa:	6859      	ldr	r1, [r3, #4]
 8029ffc:	689a      	ldr	r2, [r3, #8]
 8029ffe:	68db      	ldr	r3, [r3, #12]
 802a000:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802a002:	f107 0310 	add.w	r3, r7, #16
 802a006:	4618      	mov	r0, r3
 802a008:	f7db fe26 	bl	8005c58 <EMBENET_AES128_Encrypt>
 802a00c:	2300      	movs	r3, #0
 802a00e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a012:	e016      	b.n	802a042 <8fb52f7932f2fccbd263980037c0f2c0966c0ebe+0x84>
 802a014:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a018:	6a3a      	ldr	r2, [r7, #32]
 802a01a:	4413      	add	r3, r2
 802a01c:	7819      	ldrb	r1, [r3, #0]
 802a01e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a022:	3328      	adds	r3, #40	; 0x28
 802a024:	443b      	add	r3, r7
 802a026:	f813 2c18 	ldrb.w	r2, [r3, #-24]
 802a02a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a02e:	6a38      	ldr	r0, [r7, #32]
 802a030:	4403      	add	r3, r0
 802a032:	404a      	eors	r2, r1
 802a034:	b2d2      	uxtb	r2, r2
 802a036:	701a      	strb	r2, [r3, #0]
 802a038:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a03c:	3301      	adds	r3, #1
 802a03e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a042:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a046:	2b0f      	cmp	r3, #15
 802a048:	d9e4      	bls.n	802a014 <8fb52f7932f2fccbd263980037c0f2c0966c0ebe+0x56>
 802a04a:	6838      	ldr	r0, [r7, #0]
 802a04c:	f000 f810 	bl	802a070 <inc_counter>
 802a050:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a054:	3301      	adds	r3, #1
 802a056:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a05a:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 802a05e:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 802a062:	429a      	cmp	r2, r3
 802a064:	d3be      	bcc.n	8029fe4 <8fb52f7932f2fccbd263980037c0f2c0966c0ebe+0x26>
 802a066:	bf00      	nop
 802a068:	bf00      	nop
 802a06a:	372c      	adds	r7, #44	; 0x2c
 802a06c:	46bd      	mov	sp, r7
 802a06e:	bd90      	pop	{r4, r7, pc}

0802a070 <inc_counter>:
 802a070:	b480      	push	{r7}
 802a072:	b085      	sub	sp, #20
 802a074:	af00      	add	r7, sp, #0
 802a076:	6078      	str	r0, [r7, #4]
 802a078:	2310      	movs	r3, #16
 802a07a:	60fb      	str	r3, [r7, #12]
 802a07c:	68fb      	ldr	r3, [r7, #12]
 802a07e:	3b01      	subs	r3, #1
 802a080:	60fb      	str	r3, [r7, #12]
 802a082:	687a      	ldr	r2, [r7, #4]
 802a084:	68fb      	ldr	r3, [r7, #12]
 802a086:	4413      	add	r3, r2
 802a088:	781b      	ldrb	r3, [r3, #0]
 802a08a:	72fb      	strb	r3, [r7, #11]
 802a08c:	7afb      	ldrb	r3, [r7, #11]
 802a08e:	3301      	adds	r3, #1
 802a090:	72fb      	strb	r3, [r7, #11]
 802a092:	687a      	ldr	r2, [r7, #4]
 802a094:	68fb      	ldr	r3, [r7, #12]
 802a096:	4413      	add	r3, r2
 802a098:	7afa      	ldrb	r2, [r7, #11]
 802a09a:	701a      	strb	r2, [r3, #0]
 802a09c:	7afb      	ldrb	r3, [r7, #11]
 802a09e:	2b00      	cmp	r3, #0
 802a0a0:	d103      	bne.n	802a0aa <inc_counter+0x3a>
 802a0a2:	68fb      	ldr	r3, [r7, #12]
 802a0a4:	2b00      	cmp	r3, #0
 802a0a6:	d1e9      	bne.n	802a07c <inc_counter+0xc>
 802a0a8:	e000      	b.n	802a0ac <inc_counter+0x3c>
 802a0aa:	bf00      	nop
 802a0ac:	3714      	adds	r7, #20
 802a0ae:	46bd      	mov	sp, r7
 802a0b0:	bc80      	pop	{r7}
 802a0b2:	4770      	bx	lr

0802a0b4 <ENDIANNESS_NativeToLittle>:
 802a0b4:	b580      	push	{r7, lr}
 802a0b6:	b084      	sub	sp, #16
 802a0b8:	af00      	add	r7, sp, #0
 802a0ba:	60f8      	str	r0, [r7, #12]
 802a0bc:	60b9      	str	r1, [r7, #8]
 802a0be:	607a      	str	r2, [r7, #4]
 802a0c0:	687a      	ldr	r2, [r7, #4]
 802a0c2:	68b9      	ldr	r1, [r7, #8]
 802a0c4:	68f8      	ldr	r0, [r7, #12]
 802a0c6:	f001 f8b6 	bl	802b236 <memcpy>
 802a0ca:	bf00      	nop
 802a0cc:	3710      	adds	r7, #16
 802a0ce:	46bd      	mov	sp, r7
 802a0d0:	bd80      	pop	{r7, pc}

0802a0d2 <ENDIANNESS_LittleToNative>:
 802a0d2:	b580      	push	{r7, lr}
 802a0d4:	b084      	sub	sp, #16
 802a0d6:	af00      	add	r7, sp, #0
 802a0d8:	60f8      	str	r0, [r7, #12]
 802a0da:	60b9      	str	r1, [r7, #8]
 802a0dc:	607a      	str	r2, [r7, #4]
 802a0de:	687a      	ldr	r2, [r7, #4]
 802a0e0:	68b9      	ldr	r1, [r7, #8]
 802a0e2:	68f8      	ldr	r0, [r7, #12]
 802a0e4:	f001 f8a7 	bl	802b236 <memcpy>
 802a0e8:	bf00      	nop
 802a0ea:	3710      	adds	r7, #16
 802a0ec:	46bd      	mov	sp, r7
 802a0ee:	bd80      	pop	{r7, pc}

0802a0f0 <984b363f625cd8cdfbde20196ca1e6fa15d151b4>:
 802a0f0:	b580      	push	{r7, lr}
 802a0f2:	b08a      	sub	sp, #40	; 0x28
 802a0f4:	af00      	add	r7, sp, #0
 802a0f6:	6078      	str	r0, [r7, #4]
 802a0f8:	4608      	mov	r0, r1
 802a0fa:	4611      	mov	r1, r2
 802a0fc:	461a      	mov	r2, r3
 802a0fe:	4603      	mov	r3, r0
 802a100:	70fb      	strb	r3, [r7, #3]
 802a102:	460b      	mov	r3, r1
 802a104:	70bb      	strb	r3, [r7, #2]
 802a106:	4613      	mov	r3, r2
 802a108:	707b      	strb	r3, [r7, #1]
 802a10a:	78fb      	ldrb	r3, [r7, #3]
 802a10c:	2b02      	cmp	r3, #2
 802a10e:	d002      	beq.n	802a116 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x26>
 802a110:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802a112:	2b00      	cmp	r3, #0
 802a114:	d001      	beq.n	802a11a <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x2a>
 802a116:	2301      	movs	r3, #1
 802a118:	e000      	b.n	802a11c <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x2c>
 802a11a:	2300      	movs	r3, #0
 802a11c:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 802a120:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 802a124:	f003 0301 	and.w	r3, r3, #1
 802a128:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 802a12c:	23ff      	movs	r3, #255	; 0xff
 802a12e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a132:	6b38      	ldr	r0, [r7, #48]	; 0x30
 802a134:	f7e4 fff4 	bl	800f120 <2de8c5d05f60c15cf061eba17324436038284da6>
 802a138:	4603      	mov	r3, r0
 802a13a:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 802a13e:	687b      	ldr	r3, [r7, #4]
 802a140:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 802a144:	2b00      	cmp	r3, #0
 802a146:	bf14      	ite	ne
 802a148:	2301      	movne	r3, #1
 802a14a:	2300      	moveq	r3, #0
 802a14c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 802a150:	687b      	ldr	r3, [r7, #4]
 802a152:	685a      	ldr	r2, [r3, #4]
 802a154:	687b      	ldr	r3, [r7, #4]
 802a156:	65da      	str	r2, [r3, #92]	; 0x5c
 802a158:	78bb      	ldrb	r3, [r7, #2]
 802a15a:	2b00      	cmp	r3, #0
 802a15c:	d015      	beq.n	802a18a <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x9a>
 802a15e:	2102      	movs	r1, #2
 802a160:	6878      	ldr	r0, [r7, #4]
 802a162:	f7ff f997 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a166:	4603      	mov	r3, r0
 802a168:	f083 0301 	eor.w	r3, r3, #1
 802a16c:	b2db      	uxtb	r3, r3
 802a16e:	2b00      	cmp	r3, #0
 802a170:	d001      	beq.n	802a176 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x86>
 802a172:	2300      	movs	r3, #0
 802a174:	e1ba      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a176:	687b      	ldr	r3, [r7, #4]
 802a178:	685b      	ldr	r3, [r3, #4]
 802a17a:	2200      	movs	r2, #0
 802a17c:	701a      	strb	r2, [r3, #0]
 802a17e:	687b      	ldr	r3, [r7, #4]
 802a180:	685b      	ldr	r3, [r3, #4]
 802a182:	3301      	adds	r3, #1
 802a184:	223f      	movs	r2, #63	; 0x3f
 802a186:	701a      	strb	r2, [r3, #0]
 802a188:	e01c      	b.n	802a1c4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0xd4>
 802a18a:	687b      	ldr	r3, [r7, #4]
 802a18c:	7a1b      	ldrb	r3, [r3, #8]
 802a18e:	2b00      	cmp	r3, #0
 802a190:	d018      	beq.n	802a1c4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0xd4>
 802a192:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 802a196:	2b00      	cmp	r3, #0
 802a198:	d014      	beq.n	802a1c4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0xd4>
 802a19a:	2102      	movs	r1, #2
 802a19c:	6878      	ldr	r0, [r7, #4]
 802a19e:	f7ff f979 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a1a2:	4603      	mov	r3, r0
 802a1a4:	f083 0301 	eor.w	r3, r3, #1
 802a1a8:	b2db      	uxtb	r3, r3
 802a1aa:	2b00      	cmp	r3, #0
 802a1ac:	d001      	beq.n	802a1b2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0xc2>
 802a1ae:	2300      	movs	r3, #0
 802a1b0:	e19c      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a1b2:	687b      	ldr	r3, [r7, #4]
 802a1b4:	685b      	ldr	r3, [r3, #4]
 802a1b6:	2280      	movs	r2, #128	; 0x80
 802a1b8:	701a      	strb	r2, [r3, #0]
 802a1ba:	687b      	ldr	r3, [r7, #4]
 802a1bc:	685b      	ldr	r3, [r3, #4]
 802a1be:	3301      	adds	r3, #1
 802a1c0:	223f      	movs	r2, #63	; 0x3f
 802a1c2:	701a      	strb	r2, [r3, #0]
 802a1c4:	78fb      	ldrb	r3, [r7, #3]
 802a1c6:	2b02      	cmp	r3, #2
 802a1c8:	d13a      	bne.n	802a240 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x150>
 802a1ca:	2102      	movs	r1, #2
 802a1cc:	6878      	ldr	r0, [r7, #4]
 802a1ce:	f7ff f961 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a1d2:	4603      	mov	r3, r0
 802a1d4:	f083 0301 	eor.w	r3, r3, #1
 802a1d8:	b2db      	uxtb	r3, r3
 802a1da:	2b00      	cmp	r3, #0
 802a1dc:	d001      	beq.n	802a1e2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0xf2>
 802a1de:	2300      	movs	r3, #0
 802a1e0:	e184      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a1e2:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 802a1e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802a1e8:	b29b      	uxth	r3, r3
 802a1ea:	83fb      	strh	r3, [r7, #30]
 802a1ec:	f9b7 3034 	ldrsh.w	r3, [r7, #52]	; 0x34
 802a1f0:	2b00      	cmp	r3, #0
 802a1f2:	da06      	bge.n	802a202 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x112>
 802a1f4:	8bfb      	ldrh	r3, [r7, #30]
 802a1f6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 802a1fa:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 802a1fe:	b29b      	uxth	r3, r3
 802a200:	83fb      	strh	r3, [r7, #30]
 802a202:	687b      	ldr	r3, [r7, #4]
 802a204:	685b      	ldr	r3, [r3, #4]
 802a206:	f107 011e 	add.w	r1, r7, #30
 802a20a:	2202      	movs	r2, #2
 802a20c:	4618      	mov	r0, r3
 802a20e:	f7ff ff51 	bl	802a0b4 <ENDIANNESS_NativeToLittle>
 802a212:	2102      	movs	r1, #2
 802a214:	6878      	ldr	r0, [r7, #4]
 802a216:	f7ff f93d 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a21a:	4603      	mov	r3, r0
 802a21c:	f083 0301 	eor.w	r3, r3, #1
 802a220:	b2db      	uxtb	r3, r3
 802a222:	2b00      	cmp	r3, #0
 802a224:	d001      	beq.n	802a22a <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x13a>
 802a226:	2300      	movs	r3, #0
 802a228:	e160      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a22a:	f640 7302 	movw	r3, #3842	; 0xf02
 802a22e:	843b      	strh	r3, [r7, #32]
 802a230:	687b      	ldr	r3, [r7, #4]
 802a232:	685b      	ldr	r3, [r3, #4]
 802a234:	f107 0120 	add.w	r1, r7, #32
 802a238:	2202      	movs	r2, #2
 802a23a:	4618      	mov	r0, r3
 802a23c:	f7ff ff3a 	bl	802a0b4 <ENDIANNESS_NativeToLittle>
 802a240:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802a242:	2b00      	cmp	r3, #0
 802a244:	d031      	beq.n	802a2aa <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x1ba>
 802a246:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802a248:	691b      	ldr	r3, [r3, #16]
 802a24a:	b2db      	uxtb	r3, r3
 802a24c:	4619      	mov	r1, r3
 802a24e:	6878      	ldr	r0, [r7, #4]
 802a250:	f7ff f920 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a254:	4603      	mov	r3, r0
 802a256:	f083 0301 	eor.w	r3, r3, #1
 802a25a:	b2db      	uxtb	r3, r3
 802a25c:	2b00      	cmp	r3, #0
 802a25e:	d001      	beq.n	802a264 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x174>
 802a260:	2300      	movs	r3, #0
 802a262:	e143      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a264:	687b      	ldr	r3, [r7, #4]
 802a266:	6858      	ldr	r0, [r3, #4]
 802a268:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 802a26a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802a26c:	691b      	ldr	r3, [r3, #16]
 802a26e:	461a      	mov	r2, r3
 802a270:	f000 ffe1 	bl	802b236 <memcpy>
 802a274:	2102      	movs	r1, #2
 802a276:	6878      	ldr	r0, [r7, #4]
 802a278:	f7ff f90c 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a27c:	4603      	mov	r3, r0
 802a27e:	f083 0301 	eor.w	r3, r3, #1
 802a282:	b2db      	uxtb	r3, r3
 802a284:	2b00      	cmp	r3, #0
 802a286:	d001      	beq.n	802a28c <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x19c>
 802a288:	2300      	movs	r3, #0
 802a28a:	e12f      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a28c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 802a28e:	691b      	ldr	r3, [r3, #16]
 802a290:	b29b      	uxth	r3, r3
 802a292:	f443 6378 	orr.w	r3, r3, #3968	; 0xf80
 802a296:	b29b      	uxth	r3, r3
 802a298:	843b      	strh	r3, [r7, #32]
 802a29a:	687b      	ldr	r3, [r7, #4]
 802a29c:	685b      	ldr	r3, [r3, #4]
 802a29e:	f107 0120 	add.w	r1, r7, #32
 802a2a2:	2202      	movs	r2, #2
 802a2a4:	4618      	mov	r0, r3
 802a2a6:	f7ff ff05 	bl	802a0b4 <ENDIANNESS_NativeToLittle>
 802a2aa:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 802a2ae:	2b00      	cmp	r3, #0
 802a2b0:	d018      	beq.n	802a2e4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x1f4>
 802a2b2:	6878      	ldr	r0, [r7, #4]
 802a2b4:	f7ec fa84 	bl	80167c0 <53e82eb6b4a62b6f9ee0ef3537712fb314d6424c>
 802a2b8:	4603      	mov	r3, r0
 802a2ba:	f083 0301 	eor.w	r3, r3, #1
 802a2be:	b2db      	uxtb	r3, r3
 802a2c0:	2b00      	cmp	r3, #0
 802a2c2:	d00f      	beq.n	802a2e4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x1f4>
 802a2c4:	4a8b      	ldr	r2, [pc, #556]	; (802a4f4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x404>)
 802a2c6:	f107 0314 	add.w	r3, r7, #20
 802a2ca:	e892 0003 	ldmia.w	r2, {r0, r1}
 802a2ce:	e883 0003 	stmia.w	r3, {r0, r1}
 802a2d2:	4a89      	ldr	r2, [pc, #548]	; (802a4f8 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x408>)
 802a2d4:	f107 0314 	add.w	r3, r7, #20
 802a2d8:	e893 0003 	ldmia.w	r3, {r0, r1}
 802a2dc:	f7ea ff94 	bl	8015208 <LOGGER_PrintLine>
 802a2e0:	2300      	movs	r3, #0
 802a2e2:	e103      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a2e4:	2002      	movs	r0, #2
 802a2e6:	f7e2 fe89 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802a2ea:	4603      	mov	r3, r0
 802a2ec:	2201      	movs	r2, #1
 802a2ee:	4619      	mov	r1, r3
 802a2f0:	6878      	ldr	r0, [r7, #4]
 802a2f2:	f7ff f897 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802a2f6:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 802a2fa:	2b00      	cmp	r3, #0
 802a2fc:	d020      	beq.n	802a340 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x250>
 802a2fe:	2101      	movs	r1, #1
 802a300:	6878      	ldr	r0, [r7, #4]
 802a302:	f7ff f8c7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a306:	4603      	mov	r3, r0
 802a308:	f083 0301 	eor.w	r3, r3, #1
 802a30c:	b2db      	uxtb	r3, r3
 802a30e:	2b00      	cmp	r3, #0
 802a310:	d001      	beq.n	802a316 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x226>
 802a312:	2300      	movs	r3, #0
 802a314:	e0ea      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a316:	687b      	ldr	r3, [r7, #4]
 802a318:	685b      	ldr	r3, [r3, #4]
 802a31a:	22ff      	movs	r2, #255	; 0xff
 802a31c:	701a      	strb	r2, [r3, #0]
 802a31e:	2101      	movs	r1, #1
 802a320:	6878      	ldr	r0, [r7, #4]
 802a322:	f7ff f8b7 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a326:	4603      	mov	r3, r0
 802a328:	f083 0301 	eor.w	r3, r3, #1
 802a32c:	b2db      	uxtb	r3, r3
 802a32e:	2b00      	cmp	r3, #0
 802a330:	d001      	beq.n	802a336 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x246>
 802a332:	2300      	movs	r3, #0
 802a334:	e0da      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a336:	687b      	ldr	r3, [r7, #4]
 802a338:	685b      	ldr	r3, [r3, #4]
 802a33a:	22ff      	movs	r2, #255	; 0xff
 802a33c:	701a      	strb	r2, [r3, #0]
 802a33e:	e01b      	b.n	802a378 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x288>
 802a340:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 802a342:	781b      	ldrb	r3, [r3, #0]
 802a344:	3b01      	subs	r3, #1
 802a346:	2b01      	cmp	r3, #1
 802a348:	d805      	bhi.n	802a356 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x266>
 802a34a:	2201      	movs	r2, #1
 802a34c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 802a34e:	6878      	ldr	r0, [r7, #4]
 802a350:	f7ff f868 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802a354:	e010      	b.n	802a378 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x288>
 802a356:	2300      	movs	r3, #0
 802a358:	60fb      	str	r3, [r7, #12]
 802a35a:	4b68      	ldr	r3, [pc, #416]	; (802a4fc <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x40c>)
 802a35c:	613b      	str	r3, [r7, #16]
 802a35e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 802a360:	781b      	ldrb	r3, [r3, #0]
 802a362:	4a67      	ldr	r2, [pc, #412]	; (802a500 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x410>)
 802a364:	f107 010c 	add.w	r1, r7, #12
 802a368:	c903      	ldmia	r1, {r0, r1}
 802a36a:	f7ea ff4d 	bl	8015208 <LOGGER_PrintLine>
 802a36e:	2282      	movs	r2, #130	; 0x82
 802a370:	4964      	ldr	r1, [pc, #400]	; (802a504 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x414>)
 802a372:	4865      	ldr	r0, [pc, #404]	; (802a508 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x418>)
 802a374:	f7d7 f9c8 	bl	8001708 <EXPECT_OnAbortHandler>
 802a378:	2004      	movs	r0, #4
 802a37a:	f7e2 fe3f 	bl	800cffc <976f1995b2c83947a84b9c8a6775d2e1dcb20b1a>
 802a37e:	4603      	mov	r3, r0
 802a380:	2201      	movs	r2, #1
 802a382:	4619      	mov	r1, r3
 802a384:	6878      	ldr	r0, [r7, #4]
 802a386:	f7ff f84d 	bl	8029424 <32e95e23f85b24d0518a874b34392b7cb5b4c6f3>
 802a38a:	2101      	movs	r1, #1
 802a38c:	6878      	ldr	r0, [r7, #4]
 802a38e:	f7ff f881 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a392:	4603      	mov	r3, r0
 802a394:	f083 0301 	eor.w	r3, r3, #1
 802a398:	b2db      	uxtb	r3, r3
 802a39a:	2b00      	cmp	r3, #0
 802a39c:	d001      	beq.n	802a3a2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x2b2>
 802a39e:	2300      	movs	r3, #0
 802a3a0:	e0a4      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a3a2:	687b      	ldr	r3, [r7, #4]
 802a3a4:	685b      	ldr	r3, [r3, #4]
 802a3a6:	787a      	ldrb	r2, [r7, #1]
 802a3a8:	701a      	strb	r2, [r3, #0]
 802a3aa:	2101      	movs	r1, #1
 802a3ac:	6878      	ldr	r0, [r7, #4]
 802a3ae:	f7ff f871 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a3b2:	4603      	mov	r3, r0
 802a3b4:	f083 0301 	eor.w	r3, r3, #1
 802a3b8:	b2db      	uxtb	r3, r3
 802a3ba:	2b00      	cmp	r3, #0
 802a3bc:	d001      	beq.n	802a3c2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x2d2>
 802a3be:	2300      	movs	r3, #0
 802a3c0:	e094      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a3c2:	2300      	movs	r3, #0
 802a3c4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a3c8:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 802a3cc:	2b00      	cmp	r3, #0
 802a3ce:	d009      	beq.n	802a3e4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x2f4>
 802a3d0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a3d4:	f043 0308 	orr.w	r3, r3, #8
 802a3d8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a3dc:	2302      	movs	r3, #2
 802a3de:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a3e2:	e01f      	b.n	802a424 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x334>
 802a3e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 802a3e6:	781b      	ldrb	r3, [r3, #0]
 802a3e8:	2b01      	cmp	r3, #1
 802a3ea:	d002      	beq.n	802a3f2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x302>
 802a3ec:	2b02      	cmp	r3, #2
 802a3ee:	d00a      	beq.n	802a406 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x316>
 802a3f0:	e013      	b.n	802a41a <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x32a>
 802a3f2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a3f6:	f043 0308 	orr.w	r3, r3, #8
 802a3fa:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a3fe:	2302      	movs	r3, #2
 802a400:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a404:	e00e      	b.n	802a424 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x334>
 802a406:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a40a:	f043 030c 	orr.w	r3, r3, #12
 802a40e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a412:	2303      	movs	r3, #3
 802a414:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 802a418:	e004      	b.n	802a424 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x334>
 802a41a:	22a1      	movs	r2, #161	; 0xa1
 802a41c:	4939      	ldr	r1, [pc, #228]	; (802a504 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x414>)
 802a41e:	483a      	ldr	r0, [pc, #232]	; (802a508 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x418>)
 802a420:	f7d7 f972 	bl	8001708 <EXPECT_OnAbortHandler>
 802a424:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a428:	f063 033f 	orn	r3, r3, #63	; 0x3f
 802a42c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a430:	78bb      	ldrb	r3, [r7, #2]
 802a432:	2b00      	cmp	r3, #0
 802a434:	d103      	bne.n	802a43e <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x34e>
 802a436:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 802a43a:	2b00      	cmp	r3, #0
 802a43c:	d001      	beq.n	802a442 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x352>
 802a43e:	2301      	movs	r3, #1
 802a440:	e000      	b.n	802a444 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x354>
 802a442:	2300      	movs	r3, #0
 802a444:	005b      	lsls	r3, r3, #1
 802a446:	b25a      	sxtb	r2, r3
 802a448:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 802a44c:	4313      	orrs	r3, r2
 802a44e:	b25b      	sxtb	r3, r3
 802a450:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a454:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a458:	f043 0320 	orr.w	r3, r3, #32
 802a45c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a460:	687b      	ldr	r3, [r7, #4]
 802a462:	685b      	ldr	r3, [r3, #4]
 802a464:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 802a468:	701a      	strb	r2, [r3, #0]
 802a46a:	2101      	movs	r1, #1
 802a46c:	6878      	ldr	r0, [r7, #4]
 802a46e:	f7ff f811 	bl	8029494 <2c8c667690c01bde438685a4c74ee211f27a3939>
 802a472:	4603      	mov	r3, r0
 802a474:	f083 0301 	eor.w	r3, r3, #1
 802a478:	b2db      	uxtb	r3, r3
 802a47a:	2b00      	cmp	r3, #0
 802a47c:	d001      	beq.n	802a482 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x392>
 802a47e:	2300      	movs	r3, #0
 802a480:	e034      	b.n	802a4ec <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3fc>
 802a482:	2300      	movs	r3, #0
 802a484:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a488:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 802a48c:	78fb      	ldrb	r3, [r7, #3]
 802a48e:	4313      	orrs	r3, r2
 802a490:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a494:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 802a498:	00db      	lsls	r3, r3, #3
 802a49a:	b2da      	uxtb	r2, r3
 802a49c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a4a0:	4313      	orrs	r3, r2
 802a4a2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a4a6:	78fb      	ldrb	r3, [r7, #3]
 802a4a8:	2b02      	cmp	r3, #2
 802a4aa:	d00a      	beq.n	802a4c2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3d2>
 802a4ac:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 802a4b0:	2b00      	cmp	r3, #0
 802a4b2:	d106      	bne.n	802a4c2 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3d2>
 802a4b4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a4b8:	f043 0320 	orr.w	r3, r3, #32
 802a4bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a4c0:	e000      	b.n	802a4c4 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3d4>
 802a4c2:	bf00      	nop
 802a4c4:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a4c8:	2b02      	cmp	r3, #2
 802a4ca:	d106      	bne.n	802a4da <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3ea>
 802a4cc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 802a4d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a4d4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 802a4d8:	e002      	b.n	802a4e0 <984b363f625cd8cdfbde20196ca1e6fa15d151b4+0x3f0>
 802a4da:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 802a4de:	2b03      	cmp	r3, #3
 802a4e0:	687b      	ldr	r3, [r7, #4]
 802a4e2:	685b      	ldr	r3, [r3, #4]
 802a4e4:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 802a4e8:	701a      	strb	r2, [r3, #0]
 802a4ea:	2301      	movs	r3, #1
 802a4ec:	4618      	mov	r0, r3
 802a4ee:	3728      	adds	r7, #40	; 0x28
 802a4f0:	46bd      	mov	sp, r7
 802a4f2:	bd80      	pop	{r7, pc}
 802a4f4:	0803156c 	.word	0x0803156c
 802a4f8:	080314a8 	.word	0x080314a8
 802a4fc:	080314cc 	.word	0x080314cc
 802a500:	080314d8 	.word	0x080314d8
 802a504:	080314f0 	.word	0x080314f0
 802a508:	08031558 	.word	0x08031558

0802a50c <93646682ea820ae310ba1b54d0fccca9d773749e>:
 802a50c:	b5b0      	push	{r4, r5, r7, lr}
 802a50e:	b0b4      	sub	sp, #208	; 0xd0
 802a510:	af00      	add	r7, sp, #0
 802a512:	61f8      	str	r0, [r7, #28]
 802a514:	61b9      	str	r1, [r7, #24]
 802a516:	2300      	movs	r3, #0
 802a518:	f8a7 30cc 	strh.w	r3, [r7, #204]	; 0xcc
 802a51c:	69bb      	ldr	r3, [r7, #24]
 802a51e:	2200      	movs	r2, #0
 802a520:	701a      	strb	r2, [r3, #0]
 802a522:	69bb      	ldr	r3, [r7, #24]
 802a524:	2200      	movs	r2, #0
 802a526:	705a      	strb	r2, [r3, #1]
 802a528:	69bb      	ldr	r3, [r7, #24]
 802a52a:	2200      	movs	r2, #0
 802a52c:	651a      	str	r2, [r3, #80]	; 0x50
 802a52e:	69bb      	ldr	r3, [r7, #24]
 802a530:	785a      	ldrb	r2, [r3, #1]
 802a532:	69fb      	ldr	r3, [r7, #28]
 802a534:	7a1b      	ldrb	r3, [r3, #8]
 802a536:	429a      	cmp	r2, r3
 802a538:	f200 82ab 	bhi.w	802aa92 <93646682ea820ae310ba1b54d0fccca9d773749e+0x586>
 802a53c:	69fb      	ldr	r3, [r7, #28]
 802a53e:	685b      	ldr	r3, [r3, #4]
 802a540:	69ba      	ldr	r2, [r7, #24]
 802a542:	7852      	ldrb	r2, [r2, #1]
 802a544:	4413      	add	r3, r2
 802a546:	781b      	ldrb	r3, [r3, #0]
 802a548:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 802a54c:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a550:	f003 0307 	and.w	r3, r3, #7
 802a554:	b2da      	uxtb	r2, r3
 802a556:	69bb      	ldr	r3, [r7, #24]
 802a558:	709a      	strb	r2, [r3, #2]
 802a55a:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a55e:	08db      	lsrs	r3, r3, #3
 802a560:	b2db      	uxtb	r3, r3
 802a562:	f003 0301 	and.w	r3, r3, #1
 802a566:	2b00      	cmp	r3, #0
 802a568:	bf14      	ite	ne
 802a56a:	2301      	movne	r3, #1
 802a56c:	2300      	moveq	r3, #0
 802a56e:	b2da      	uxtb	r2, r3
 802a570:	69bb      	ldr	r3, [r7, #24]
 802a572:	70da      	strb	r2, [r3, #3]
 802a574:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a578:	091b      	lsrs	r3, r3, #4
 802a57a:	b2db      	uxtb	r3, r3
 802a57c:	f003 0301 	and.w	r3, r3, #1
 802a580:	2b00      	cmp	r3, #0
 802a582:	bf14      	ite	ne
 802a584:	2301      	movne	r3, #1
 802a586:	2300      	moveq	r3, #0
 802a588:	b2da      	uxtb	r2, r3
 802a58a:	69bb      	ldr	r3, [r7, #24]
 802a58c:	711a      	strb	r2, [r3, #4]
 802a58e:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a592:	095b      	lsrs	r3, r3, #5
 802a594:	b2db      	uxtb	r3, r3
 802a596:	f003 0301 	and.w	r3, r3, #1
 802a59a:	2b00      	cmp	r3, #0
 802a59c:	bf14      	ite	ne
 802a59e:	2301      	movne	r3, #1
 802a5a0:	2300      	moveq	r3, #0
 802a5a2:	b2da      	uxtb	r2, r3
 802a5a4:	69bb      	ldr	r3, [r7, #24]
 802a5a6:	715a      	strb	r2, [r3, #5]
 802a5a8:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a5ac:	099b      	lsrs	r3, r3, #6
 802a5ae:	b2db      	uxtb	r3, r3
 802a5b0:	f003 0301 	and.w	r3, r3, #1
 802a5b4:	2b00      	cmp	r3, #0
 802a5b6:	bf14      	ite	ne
 802a5b8:	2301      	movne	r3, #1
 802a5ba:	2300      	moveq	r3, #0
 802a5bc:	b2da      	uxtb	r2, r3
 802a5be:	69bb      	ldr	r3, [r7, #24]
 802a5c0:	719a      	strb	r2, [r3, #6]
 802a5c2:	69bb      	ldr	r3, [r7, #24]
 802a5c4:	785b      	ldrb	r3, [r3, #1]
 802a5c6:	3301      	adds	r3, #1
 802a5c8:	b2da      	uxtb	r2, r3
 802a5ca:	69bb      	ldr	r3, [r7, #24]
 802a5cc:	705a      	strb	r2, [r3, #1]
 802a5ce:	69bb      	ldr	r3, [r7, #24]
 802a5d0:	785a      	ldrb	r2, [r3, #1]
 802a5d2:	69fb      	ldr	r3, [r7, #28]
 802a5d4:	7a1b      	ldrb	r3, [r3, #8]
 802a5d6:	429a      	cmp	r2, r3
 802a5d8:	f200 825d 	bhi.w	802aa96 <93646682ea820ae310ba1b54d0fccca9d773749e+0x58a>
 802a5dc:	69fb      	ldr	r3, [r7, #28]
 802a5de:	685b      	ldr	r3, [r3, #4]
 802a5e0:	69ba      	ldr	r2, [r7, #24]
 802a5e2:	7852      	ldrb	r2, [r2, #1]
 802a5e4:	4413      	add	r3, r2
 802a5e6:	781b      	ldrb	r3, [r3, #0]
 802a5e8:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 802a5ec:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a5f0:	085b      	lsrs	r3, r3, #1
 802a5f2:	b2db      	uxtb	r3, r3
 802a5f4:	f003 0301 	and.w	r3, r3, #1
 802a5f8:	2b00      	cmp	r3, #0
 802a5fa:	bf14      	ite	ne
 802a5fc:	2301      	movne	r3, #1
 802a5fe:	2300      	moveq	r3, #0
 802a600:	b2da      	uxtb	r2, r3
 802a602:	69bb      	ldr	r3, [r7, #24]
 802a604:	71da      	strb	r2, [r3, #7]
 802a606:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a60a:	091b      	lsrs	r3, r3, #4
 802a60c:	b2db      	uxtb	r3, r3
 802a60e:	f003 0303 	and.w	r3, r3, #3
 802a612:	b2da      	uxtb	r2, r3
 802a614:	69bb      	ldr	r3, [r7, #24]
 802a616:	721a      	strb	r2, [r3, #8]
 802a618:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a61c:	f003 0301 	and.w	r3, r3, #1
 802a620:	2b00      	cmp	r3, #0
 802a622:	bf14      	ite	ne
 802a624:	2301      	movne	r3, #1
 802a626:	2300      	moveq	r3, #0
 802a628:	b2da      	uxtb	r2, r3
 802a62a:	69bb      	ldr	r3, [r7, #24]
 802a62c:	729a      	strb	r2, [r3, #10]
 802a62e:	69bb      	ldr	r3, [r7, #24]
 802a630:	79db      	ldrb	r3, [r3, #7]
 802a632:	2b00      	cmp	r3, #0
 802a634:	d004      	beq.n	802a640 <93646682ea820ae310ba1b54d0fccca9d773749e+0x134>
 802a636:	69bb      	ldr	r3, [r7, #24]
 802a638:	7a1b      	ldrb	r3, [r3, #8]
 802a63a:	2b02      	cmp	r3, #2
 802a63c:	f040 822d 	bne.w	802aa9a <93646682ea820ae310ba1b54d0fccca9d773749e+0x58e>
 802a640:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a644:	089b      	lsrs	r3, r3, #2
 802a646:	b2db      	uxtb	r3, r3
 802a648:	f003 0303 	and.w	r3, r3, #3
 802a64c:	2b03      	cmp	r3, #3
 802a64e:	d00f      	beq.n	802a670 <93646682ea820ae310ba1b54d0fccca9d773749e+0x164>
 802a650:	2b03      	cmp	r3, #3
 802a652:	f300 8224 	bgt.w	802aa9e <93646682ea820ae310ba1b54d0fccca9d773749e+0x592>
 802a656:	2b00      	cmp	r3, #0
 802a658:	d002      	beq.n	802a660 <93646682ea820ae310ba1b54d0fccca9d773749e+0x154>
 802a65a:	2b02      	cmp	r3, #2
 802a65c:	d004      	beq.n	802a668 <93646682ea820ae310ba1b54d0fccca9d773749e+0x15c>
 802a65e:	e21e      	b.n	802aa9e <93646682ea820ae310ba1b54d0fccca9d773749e+0x592>
 802a660:	69bb      	ldr	r3, [r7, #24]
 802a662:	2200      	movs	r2, #0
 802a664:	771a      	strb	r2, [r3, #28]
 802a666:	e007      	b.n	802a678 <93646682ea820ae310ba1b54d0fccca9d773749e+0x16c>
 802a668:	69bb      	ldr	r3, [r7, #24]
 802a66a:	2201      	movs	r2, #1
 802a66c:	771a      	strb	r2, [r3, #28]
 802a66e:	e003      	b.n	802a678 <93646682ea820ae310ba1b54d0fccca9d773749e+0x16c>
 802a670:	69bb      	ldr	r3, [r7, #24]
 802a672:	2202      	movs	r2, #2
 802a674:	771a      	strb	r2, [r3, #28]
 802a676:	bf00      	nop
 802a678:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a67c:	099b      	lsrs	r3, r3, #6
 802a67e:	b2db      	uxtb	r3, r3
 802a680:	f003 0303 	and.w	r3, r3, #3
 802a684:	2b03      	cmp	r3, #3
 802a686:	d011      	beq.n	802a6ac <93646682ea820ae310ba1b54d0fccca9d773749e+0x1a0>
 802a688:	2b03      	cmp	r3, #3
 802a68a:	f300 820a 	bgt.w	802aaa2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x596>
 802a68e:	2b00      	cmp	r3, #0
 802a690:	d002      	beq.n	802a698 <93646682ea820ae310ba1b54d0fccca9d773749e+0x18c>
 802a692:	2b02      	cmp	r3, #2
 802a694:	d005      	beq.n	802a6a2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x196>
 802a696:	e204      	b.n	802aaa2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x596>
 802a698:	69bb      	ldr	r3, [r7, #24]
 802a69a:	2200      	movs	r2, #0
 802a69c:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 802a6a0:	e009      	b.n	802a6b6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x1aa>
 802a6a2:	69bb      	ldr	r3, [r7, #24]
 802a6a4:	2201      	movs	r2, #1
 802a6a6:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 802a6aa:	e004      	b.n	802a6b6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x1aa>
 802a6ac:	69bb      	ldr	r3, [r7, #24]
 802a6ae:	2202      	movs	r2, #2
 802a6b0:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 802a6b4:	bf00      	nop
 802a6b6:	69bb      	ldr	r3, [r7, #24]
 802a6b8:	785b      	ldrb	r3, [r3, #1]
 802a6ba:	3301      	adds	r3, #1
 802a6bc:	b2da      	uxtb	r2, r3
 802a6be:	69bb      	ldr	r3, [r7, #24]
 802a6c0:	705a      	strb	r2, [r3, #1]
 802a6c2:	69bb      	ldr	r3, [r7, #24]
 802a6c4:	7a9b      	ldrb	r3, [r3, #10]
 802a6c6:	f083 0301 	eor.w	r3, r3, #1
 802a6ca:	b2db      	uxtb	r3, r3
 802a6cc:	2b00      	cmp	r3, #0
 802a6ce:	d014      	beq.n	802a6fa <93646682ea820ae310ba1b54d0fccca9d773749e+0x1ee>
 802a6d0:	69bb      	ldr	r3, [r7, #24]
 802a6d2:	785a      	ldrb	r2, [r3, #1]
 802a6d4:	69fb      	ldr	r3, [r7, #28]
 802a6d6:	7a1b      	ldrb	r3, [r3, #8]
 802a6d8:	429a      	cmp	r2, r3
 802a6da:	f200 81e4 	bhi.w	802aaa6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x59a>
 802a6de:	69fb      	ldr	r3, [r7, #28]
 802a6e0:	685b      	ldr	r3, [r3, #4]
 802a6e2:	69ba      	ldr	r2, [r7, #24]
 802a6e4:	7852      	ldrb	r2, [r2, #1]
 802a6e6:	4413      	add	r3, r2
 802a6e8:	781a      	ldrb	r2, [r3, #0]
 802a6ea:	69bb      	ldr	r3, [r7, #24]
 802a6ec:	725a      	strb	r2, [r3, #9]
 802a6ee:	69bb      	ldr	r3, [r7, #24]
 802a6f0:	785b      	ldrb	r3, [r3, #1]
 802a6f2:	3301      	adds	r3, #1
 802a6f4:	b2da      	uxtb	r2, r3
 802a6f6:	69bb      	ldr	r3, [r7, #24]
 802a6f8:	705a      	strb	r2, [r3, #1]
 802a6fa:	69bb      	ldr	r3, [r7, #24]
 802a6fc:	785a      	ldrb	r2, [r3, #1]
 802a6fe:	69fb      	ldr	r3, [r7, #28]
 802a700:	7a1b      	ldrb	r3, [r3, #8]
 802a702:	429a      	cmp	r2, r3
 802a704:	f200 81d1 	bhi.w	802aaaa <93646682ea820ae310ba1b54d0fccca9d773749e+0x59e>
 802a708:	69fb      	ldr	r3, [r7, #28]
 802a70a:	685b      	ldr	r3, [r3, #4]
 802a70c:	69ba      	ldr	r2, [r7, #24]
 802a70e:	7852      	ldrb	r2, [r2, #1]
 802a710:	1899      	adds	r1, r3, r2
 802a712:	69bc      	ldr	r4, [r7, #24]
 802a714:	4638      	mov	r0, r7
 802a716:	2301      	movs	r3, #1
 802a718:	2204      	movs	r2, #4
 802a71a:	f7fe fe35 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802a71e:	f104 030b 	add.w	r3, r4, #11
 802a722:	463a      	mov	r2, r7
 802a724:	6815      	ldr	r5, [r2, #0]
 802a726:	6854      	ldr	r4, [r2, #4]
 802a728:	6890      	ldr	r0, [r2, #8]
 802a72a:	68d1      	ldr	r1, [r2, #12]
 802a72c:	601d      	str	r5, [r3, #0]
 802a72e:	605c      	str	r4, [r3, #4]
 802a730:	6098      	str	r0, [r3, #8]
 802a732:	60d9      	str	r1, [r3, #12]
 802a734:	7c12      	ldrb	r2, [r2, #16]
 802a736:	741a      	strb	r2, [r3, #16]
 802a738:	69bb      	ldr	r3, [r7, #24]
 802a73a:	785b      	ldrb	r3, [r3, #1]
 802a73c:	3302      	adds	r3, #2
 802a73e:	b2da      	uxtb	r2, r3
 802a740:	69bb      	ldr	r3, [r7, #24]
 802a742:	705a      	strb	r2, [r3, #1]
 802a744:	69bb      	ldr	r3, [r7, #24]
 802a746:	785a      	ldrb	r2, [r3, #1]
 802a748:	69fb      	ldr	r3, [r7, #28]
 802a74a:	7a1b      	ldrb	r3, [r3, #8]
 802a74c:	429a      	cmp	r2, r3
 802a74e:	f200 81ae 	bhi.w	802aaae <93646682ea820ae310ba1b54d0fccca9d773749e+0x5a2>
 802a752:	69bb      	ldr	r3, [r7, #24]
 802a754:	7f1b      	ldrb	r3, [r3, #28]
 802a756:	2b02      	cmp	r3, #2
 802a758:	d028      	beq.n	802a7ac <93646682ea820ae310ba1b54d0fccca9d773749e+0x2a0>
 802a75a:	2b02      	cmp	r3, #2
 802a75c:	f300 81a9 	bgt.w	802aab2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5a6>
 802a760:	2b00      	cmp	r3, #0
 802a762:	d045      	beq.n	802a7f0 <93646682ea820ae310ba1b54d0fccca9d773749e+0x2e4>
 802a764:	2b01      	cmp	r3, #1
 802a766:	d000      	beq.n	802a76a <93646682ea820ae310ba1b54d0fccca9d773749e+0x25e>
 802a768:	e1a3      	b.n	802aab2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5a6>
 802a76a:	69fb      	ldr	r3, [r7, #28]
 802a76c:	685b      	ldr	r3, [r3, #4]
 802a76e:	69ba      	ldr	r2, [r7, #24]
 802a770:	7852      	ldrb	r2, [r2, #1]
 802a772:	1899      	adds	r1, r3, r2
 802a774:	69bc      	ldr	r4, [r7, #24]
 802a776:	4638      	mov	r0, r7
 802a778:	2301      	movs	r3, #1
 802a77a:	2201      	movs	r2, #1
 802a77c:	f7fe fe04 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802a780:	341c      	adds	r4, #28
 802a782:	463d      	mov	r5, r7
 802a784:	6828      	ldr	r0, [r5, #0]
 802a786:	6869      	ldr	r1, [r5, #4]
 802a788:	68aa      	ldr	r2, [r5, #8]
 802a78a:	68eb      	ldr	r3, [r5, #12]
 802a78c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802a78e:	7c2b      	ldrb	r3, [r5, #16]
 802a790:	7023      	strb	r3, [r4, #0]
 802a792:	69bb      	ldr	r3, [r7, #24]
 802a794:	785b      	ldrb	r3, [r3, #1]
 802a796:	3302      	adds	r3, #2
 802a798:	b2da      	uxtb	r2, r3
 802a79a:	69bb      	ldr	r3, [r7, #24]
 802a79c:	705a      	strb	r2, [r3, #1]
 802a79e:	69bb      	ldr	r3, [r7, #24]
 802a7a0:	785a      	ldrb	r2, [r3, #1]
 802a7a2:	69fb      	ldr	r3, [r7, #28]
 802a7a4:	7a1b      	ldrb	r3, [r3, #8]
 802a7a6:	429a      	cmp	r2, r3
 802a7a8:	d924      	bls.n	802a7f4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x2e8>
 802a7aa:	e193      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802a7ac:	69fb      	ldr	r3, [r7, #28]
 802a7ae:	685b      	ldr	r3, [r3, #4]
 802a7b0:	69ba      	ldr	r2, [r7, #24]
 802a7b2:	7852      	ldrb	r2, [r2, #1]
 802a7b4:	1899      	adds	r1, r3, r2
 802a7b6:	69bc      	ldr	r4, [r7, #24]
 802a7b8:	4638      	mov	r0, r7
 802a7ba:	2301      	movs	r3, #1
 802a7bc:	2202      	movs	r2, #2
 802a7be:	f7fe fde3 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802a7c2:	341c      	adds	r4, #28
 802a7c4:	463d      	mov	r5, r7
 802a7c6:	6828      	ldr	r0, [r5, #0]
 802a7c8:	6869      	ldr	r1, [r5, #4]
 802a7ca:	68aa      	ldr	r2, [r5, #8]
 802a7cc:	68eb      	ldr	r3, [r5, #12]
 802a7ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 802a7d0:	7c2b      	ldrb	r3, [r5, #16]
 802a7d2:	7023      	strb	r3, [r4, #0]
 802a7d4:	69bb      	ldr	r3, [r7, #24]
 802a7d6:	785b      	ldrb	r3, [r3, #1]
 802a7d8:	3308      	adds	r3, #8
 802a7da:	b2da      	uxtb	r2, r3
 802a7dc:	69bb      	ldr	r3, [r7, #24]
 802a7de:	705a      	strb	r2, [r3, #1]
 802a7e0:	69bb      	ldr	r3, [r7, #24]
 802a7e2:	785a      	ldrb	r2, [r3, #1]
 802a7e4:	69fb      	ldr	r3, [r7, #28]
 802a7e6:	7a1b      	ldrb	r3, [r3, #8]
 802a7e8:	429a      	cmp	r2, r3
 802a7ea:	f200 8164 	bhi.w	802aab6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5aa>
 802a7ee:	e002      	b.n	802a7f6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x2ea>
 802a7f0:	bf00      	nop
 802a7f2:	e000      	b.n	802a7f6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x2ea>
 802a7f4:	bf00      	nop
 802a7f6:	69bb      	ldr	r3, [r7, #24]
 802a7f8:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
 802a7fc:	2b02      	cmp	r3, #2
 802a7fe:	d02c      	beq.n	802a85a <93646682ea820ae310ba1b54d0fccca9d773749e+0x34e>
 802a800:	2b02      	cmp	r3, #2
 802a802:	f300 815a 	bgt.w	802aaba <93646682ea820ae310ba1b54d0fccca9d773749e+0x5ae>
 802a806:	2b00      	cmp	r3, #0
 802a808:	d04d      	beq.n	802a8a6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x39a>
 802a80a:	2b01      	cmp	r3, #1
 802a80c:	d000      	beq.n	802a810 <93646682ea820ae310ba1b54d0fccca9d773749e+0x304>
 802a80e:	e154      	b.n	802aaba <93646682ea820ae310ba1b54d0fccca9d773749e+0x5ae>
 802a810:	69fb      	ldr	r3, [r7, #28]
 802a812:	685b      	ldr	r3, [r3, #4]
 802a814:	69ba      	ldr	r2, [r7, #24]
 802a816:	7852      	ldrb	r2, [r2, #1]
 802a818:	1899      	adds	r1, r3, r2
 802a81a:	69bc      	ldr	r4, [r7, #24]
 802a81c:	4638      	mov	r0, r7
 802a81e:	2301      	movs	r3, #1
 802a820:	2201      	movs	r2, #1
 802a822:	f7fe fdb1 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802a826:	f104 032d 	add.w	r3, r4, #45	; 0x2d
 802a82a:	463a      	mov	r2, r7
 802a82c:	6815      	ldr	r5, [r2, #0]
 802a82e:	6854      	ldr	r4, [r2, #4]
 802a830:	6890      	ldr	r0, [r2, #8]
 802a832:	68d1      	ldr	r1, [r2, #12]
 802a834:	601d      	str	r5, [r3, #0]
 802a836:	605c      	str	r4, [r3, #4]
 802a838:	6098      	str	r0, [r3, #8]
 802a83a:	60d9      	str	r1, [r3, #12]
 802a83c:	7c12      	ldrb	r2, [r2, #16]
 802a83e:	741a      	strb	r2, [r3, #16]
 802a840:	69bb      	ldr	r3, [r7, #24]
 802a842:	785b      	ldrb	r3, [r3, #1]
 802a844:	3302      	adds	r3, #2
 802a846:	b2da      	uxtb	r2, r3
 802a848:	69bb      	ldr	r3, [r7, #24]
 802a84a:	705a      	strb	r2, [r3, #1]
 802a84c:	69bb      	ldr	r3, [r7, #24]
 802a84e:	785a      	ldrb	r2, [r3, #1]
 802a850:	69fb      	ldr	r3, [r7, #28]
 802a852:	7a1b      	ldrb	r3, [r3, #8]
 802a854:	429a      	cmp	r2, r3
 802a856:	d928      	bls.n	802a8aa <93646682ea820ae310ba1b54d0fccca9d773749e+0x39e>
 802a858:	e13c      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802a85a:	69fb      	ldr	r3, [r7, #28]
 802a85c:	685b      	ldr	r3, [r3, #4]
 802a85e:	69ba      	ldr	r2, [r7, #24]
 802a860:	7852      	ldrb	r2, [r2, #1]
 802a862:	1899      	adds	r1, r3, r2
 802a864:	69bc      	ldr	r4, [r7, #24]
 802a866:	4638      	mov	r0, r7
 802a868:	2301      	movs	r3, #1
 802a86a:	2202      	movs	r2, #2
 802a86c:	f7fe fd8c 	bl	8029388 <b35bcee5624976b5f696cb546804f9909547b46c>
 802a870:	f104 032d 	add.w	r3, r4, #45	; 0x2d
 802a874:	463a      	mov	r2, r7
 802a876:	6815      	ldr	r5, [r2, #0]
 802a878:	6854      	ldr	r4, [r2, #4]
 802a87a:	6890      	ldr	r0, [r2, #8]
 802a87c:	68d1      	ldr	r1, [r2, #12]
 802a87e:	601d      	str	r5, [r3, #0]
 802a880:	605c      	str	r4, [r3, #4]
 802a882:	6098      	str	r0, [r3, #8]
 802a884:	60d9      	str	r1, [r3, #12]
 802a886:	7c12      	ldrb	r2, [r2, #16]
 802a888:	741a      	strb	r2, [r3, #16]
 802a88a:	69bb      	ldr	r3, [r7, #24]
 802a88c:	785b      	ldrb	r3, [r3, #1]
 802a88e:	3308      	adds	r3, #8
 802a890:	b2da      	uxtb	r2, r3
 802a892:	69bb      	ldr	r3, [r7, #24]
 802a894:	705a      	strb	r2, [r3, #1]
 802a896:	69bb      	ldr	r3, [r7, #24]
 802a898:	785a      	ldrb	r2, [r3, #1]
 802a89a:	69fb      	ldr	r3, [r7, #28]
 802a89c:	7a1b      	ldrb	r3, [r3, #8]
 802a89e:	429a      	cmp	r2, r3
 802a8a0:	f200 810d 	bhi.w	802aabe <93646682ea820ae310ba1b54d0fccca9d773749e+0x5b2>
 802a8a4:	e002      	b.n	802a8ac <93646682ea820ae310ba1b54d0fccca9d773749e+0x3a0>
 802a8a6:	bf00      	nop
 802a8a8:	e000      	b.n	802a8ac <93646682ea820ae310ba1b54d0fccca9d773749e+0x3a0>
 802a8aa:	bf00      	nop
 802a8ac:	69bb      	ldr	r3, [r7, #24]
 802a8ae:	79db      	ldrb	r3, [r3, #7]
 802a8b0:	2b00      	cmp	r3, #0
 802a8b2:	d004      	beq.n	802a8be <93646682ea820ae310ba1b54d0fccca9d773749e+0x3b2>
 802a8b4:	69bb      	ldr	r3, [r7, #24]
 802a8b6:	7a1b      	ldrb	r3, [r3, #8]
 802a8b8:	2b02      	cmp	r3, #2
 802a8ba:	f040 8102 	bne.w	802aac2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5b6>
 802a8be:	69bb      	ldr	r3, [r7, #24]
 802a8c0:	78db      	ldrb	r3, [r3, #3]
 802a8c2:	2b00      	cmp	r3, #0
 802a8c4:	d00a      	beq.n	802a8dc <93646682ea820ae310ba1b54d0fccca9d773749e+0x3d0>
 802a8c6:	69b9      	ldr	r1, [r7, #24]
 802a8c8:	69f8      	ldr	r0, [r7, #28]
 802a8ca:	f7ec f8ab 	bl	8016a24 <245bc706add2545900df78a3f141ff0f80e5adf9>
 802a8ce:	4603      	mov	r3, r0
 802a8d0:	f083 0301 	eor.w	r3, r3, #1
 802a8d4:	b2db      	uxtb	r3, r3
 802a8d6:	2b00      	cmp	r3, #0
 802a8d8:	f040 80f5 	bne.w	802aac6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5ba>
 802a8dc:	2300      	movs	r3, #0
 802a8de:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 802a8e2:	69bb      	ldr	r3, [r7, #24]
 802a8e4:	79db      	ldrb	r3, [r3, #7]
 802a8e6:	2b00      	cmp	r3, #0
 802a8e8:	f000 80c8 	beq.w	802aa7c <93646682ea820ae310ba1b54d0fccca9d773749e+0x570>
 802a8ec:	69fb      	ldr	r3, [r7, #28]
 802a8ee:	685b      	ldr	r3, [r3, #4]
 802a8f0:	69ba      	ldr	r2, [r7, #24]
 802a8f2:	7852      	ldrb	r2, [r2, #1]
 802a8f4:	4413      	add	r3, r2
 802a8f6:	781b      	ldrb	r3, [r3, #0]
 802a8f8:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 802a8fc:	69bb      	ldr	r3, [r7, #24]
 802a8fe:	785b      	ldrb	r3, [r3, #1]
 802a900:	3301      	adds	r3, #1
 802a902:	b2da      	uxtb	r2, r3
 802a904:	69bb      	ldr	r3, [r7, #24]
 802a906:	705a      	strb	r2, [r3, #1]
 802a908:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 802a90c:	b21a      	sxth	r2, r3
 802a90e:	69fb      	ldr	r3, [r7, #28]
 802a910:	685b      	ldr	r3, [r3, #4]
 802a912:	69b9      	ldr	r1, [r7, #24]
 802a914:	7849      	ldrb	r1, [r1, #1]
 802a916:	440b      	add	r3, r1
 802a918:	781b      	ldrb	r3, [r3, #0]
 802a91a:	021b      	lsls	r3, r3, #8
 802a91c:	b21b      	sxth	r3, r3
 802a91e:	4313      	orrs	r3, r2
 802a920:	b21b      	sxth	r3, r3
 802a922:	f8a7 30c6 	strh.w	r3, [r7, #198]	; 0xc6
 802a926:	69bb      	ldr	r3, [r7, #24]
 802a928:	785b      	ldrb	r3, [r3, #1]
 802a92a:	3301      	adds	r3, #1
 802a92c:	b2da      	uxtb	r2, r3
 802a92e:	69bb      	ldr	r3, [r7, #24]
 802a930:	705a      	strb	r2, [r3, #1]
 802a932:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	; 0xc6
 802a936:	f5b3 5f7c 	cmp.w	r3, #16128	; 0x3f00
 802a93a:	d104      	bne.n	802a946 <93646682ea820ae310ba1b54d0fccca9d773749e+0x43a>
 802a93c:	69fb      	ldr	r3, [r7, #28]
 802a93e:	2201      	movs	r2, #1
 802a940:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 802a944:	e09a      	b.n	802aa7c <93646682ea820ae310ba1b54d0fccca9d773749e+0x570>
 802a946:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	; 0xc6
 802a94a:	f5b3 5f7e 	cmp.w	r3, #16256	; 0x3f80
 802a94e:	d104      	bne.n	802a95a <93646682ea820ae310ba1b54d0fccca9d773749e+0x44e>
 802a950:	69fb      	ldr	r3, [r7, #28]
 802a952:	2200      	movs	r2, #0
 802a954:	f883 209d 	strb.w	r2, [r3, #157]	; 0x9d
 802a958:	e090      	b.n	802aa7c <93646682ea820ae310ba1b54d0fccca9d773749e+0x570>
 802a95a:	f9b7 30c6 	ldrsh.w	r3, [r7, #198]	; 0xc6
 802a95e:	2b00      	cmp	r3, #0
 802a960:	f2c0 80b3 	blt.w	802aaca <93646682ea820ae310ba1b54d0fccca9d773749e+0x5be>
 802a964:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	; 0xc6
 802a968:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 802a96c:	f8a7 30cc 	strh.w	r3, [r7, #204]	; 0xcc
 802a970:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	; 0xc6
 802a974:	11db      	asrs	r3, r3, #7
 802a976:	f887 30c9 	strb.w	r3, [r7, #201]	; 0xc9
 802a97a:	f897 30c9 	ldrb.w	r3, [r7, #201]	; 0xc9
 802a97e:	2b1e      	cmp	r3, #30
 802a980:	d002      	beq.n	802a988 <93646682ea820ae310ba1b54d0fccca9d773749e+0x47c>
 802a982:	2b1f      	cmp	r3, #31
 802a984:	d037      	beq.n	802a9f6 <93646682ea820ae310ba1b54d0fccca9d773749e+0x4ea>
 802a986:	e0a5      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802a988:	69fb      	ldr	r3, [r7, #28]
 802a98a:	685b      	ldr	r3, [r3, #4]
 802a98c:	69ba      	ldr	r2, [r7, #24]
 802a98e:	7852      	ldrb	r2, [r2, #1]
 802a990:	1899      	adds	r1, r3, r2
 802a992:	f107 0342 	add.w	r3, r7, #66	; 0x42
 802a996:	2202      	movs	r2, #2
 802a998:	4618      	mov	r0, r3
 802a99a:	f7ff fb9a 	bl	802a0d2 <ENDIANNESS_LittleToNative>
 802a99e:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 802a9a2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 802a9a6:	2b00      	cmp	r3, #0
 802a9a8:	d009      	beq.n	802a9be <93646682ea820ae310ba1b54d0fccca9d773749e+0x4b2>
 802a9aa:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 802a9ae:	ea6f 5303 	mvn.w	r3, r3, lsl #20
 802a9b2:	ea6f 5313 	mvn.w	r3, r3, lsr #20
 802a9b6:	b29b      	uxth	r3, r3
 802a9b8:	f8a7 30ca 	strh.w	r3, [r7, #202]	; 0xca
 802a9bc:	e006      	b.n	802a9cc <93646682ea820ae310ba1b54d0fccca9d773749e+0x4c0>
 802a9be:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 802a9c2:	b21b      	sxth	r3, r3
 802a9c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802a9c8:	f8a7 30ca 	strh.w	r3, [r7, #202]	; 0xca
 802a9cc:	69bb      	ldr	r3, [r7, #24]
 802a9ce:	f8b7 20ca 	ldrh.w	r2, [r7, #202]	; 0xca
 802a9d2:	87da      	strh	r2, [r3, #62]	; 0x3e
 802a9d4:	69bb      	ldr	r3, [r7, #24]
 802a9d6:	785a      	ldrb	r2, [r3, #1]
 802a9d8:	f8b7 30cc 	ldrh.w	r3, [r7, #204]	; 0xcc
 802a9dc:	b2db      	uxtb	r3, r3
 802a9de:	4413      	add	r3, r2
 802a9e0:	b2da      	uxtb	r2, r3
 802a9e2:	69bb      	ldr	r3, [r7, #24]
 802a9e4:	705a      	strb	r2, [r3, #1]
 802a9e6:	69fb      	ldr	r3, [r7, #28]
 802a9e8:	685b      	ldr	r3, [r3, #4]
 802a9ea:	69ba      	ldr	r2, [r7, #24]
 802a9ec:	7852      	ldrb	r2, [r2, #1]
 802a9ee:	441a      	add	r2, r3
 802a9f0:	69fb      	ldr	r3, [r7, #28]
 802a9f2:	65da      	str	r2, [r3, #92]	; 0x5c
 802a9f4:	e025      	b.n	802aa42 <93646682ea820ae310ba1b54d0fccca9d773749e+0x536>
 802a9f6:	f8b7 30cc 	ldrh.w	r3, [r7, #204]	; 0xcc
 802a9fa:	2b10      	cmp	r3, #16
 802a9fc:	d867      	bhi.n	802aace <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c2>
 802a9fe:	69bb      	ldr	r3, [r7, #24]
 802aa00:	f103 0040 	add.w	r0, r3, #64	; 0x40
 802aa04:	69fb      	ldr	r3, [r7, #28]
 802aa06:	685b      	ldr	r3, [r3, #4]
 802aa08:	69ba      	ldr	r2, [r7, #24]
 802aa0a:	7852      	ldrb	r2, [r2, #1]
 802aa0c:	4413      	add	r3, r2
 802aa0e:	f8b7 20cc 	ldrh.w	r2, [r7, #204]	; 0xcc
 802aa12:	4619      	mov	r1, r3
 802aa14:	f000 fc0f 	bl	802b236 <memcpy>
 802aa18:	f8b7 20cc 	ldrh.w	r2, [r7, #204]	; 0xcc
 802aa1c:	69bb      	ldr	r3, [r7, #24]
 802aa1e:	651a      	str	r2, [r3, #80]	; 0x50
 802aa20:	69bb      	ldr	r3, [r7, #24]
 802aa22:	785a      	ldrb	r2, [r3, #1]
 802aa24:	f8b7 30cc 	ldrh.w	r3, [r7, #204]	; 0xcc
 802aa28:	b2db      	uxtb	r3, r3
 802aa2a:	4413      	add	r3, r2
 802aa2c:	b2da      	uxtb	r2, r3
 802aa2e:	69bb      	ldr	r3, [r7, #24]
 802aa30:	705a      	strb	r2, [r3, #1]
 802aa32:	69fb      	ldr	r3, [r7, #28]
 802aa34:	685b      	ldr	r3, [r3, #4]
 802aa36:	69ba      	ldr	r2, [r7, #24]
 802aa38:	7852      	ldrb	r2, [r2, #1]
 802aa3a:	441a      	add	r2, r3
 802aa3c:	69fb      	ldr	r3, [r7, #28]
 802aa3e:	65da      	str	r2, [r3, #92]	; 0x5c
 802aa40:	bf00      	nop
 802aa42:	69bb      	ldr	r3, [r7, #24]
 802aa44:	785b      	ldrb	r3, [r3, #1]
 802aa46:	461a      	mov	r2, r3
 802aa48:	69fb      	ldr	r3, [r7, #28]
 802aa4a:	7a1b      	ldrb	r3, [r3, #8]
 802aa4c:	4619      	mov	r1, r3
 802aa4e:	69fb      	ldr	r3, [r7, #28]
 802aa50:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 802aa54:	1acb      	subs	r3, r1, r3
 802aa56:	429a      	cmp	r2, r3
 802aa58:	d103      	bne.n	802aa62 <93646682ea820ae310ba1b54d0fccca9d773749e+0x556>
 802aa5a:	69bb      	ldr	r3, [r7, #24]
 802aa5c:	2201      	movs	r2, #1
 802aa5e:	701a      	strb	r2, [r3, #0]
 802aa60:	e038      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aa62:	69bb      	ldr	r3, [r7, #24]
 802aa64:	785b      	ldrb	r3, [r3, #1]
 802aa66:	461a      	mov	r2, r3
 802aa68:	69fb      	ldr	r3, [r7, #28]
 802aa6a:	7a1b      	ldrb	r3, [r3, #8]
 802aa6c:	4619      	mov	r1, r3
 802aa6e:	69fb      	ldr	r3, [r7, #28]
 802aa70:	f893 30b5 	ldrb.w	r3, [r3, #181]	; 0xb5
 802aa74:	1acb      	subs	r3, r1, r3
 802aa76:	429a      	cmp	r2, r3
 802aa78:	dc2b      	bgt.n	802aad2 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c6>
 802aa7a:	e737      	b.n	802a8ec <93646682ea820ae310ba1b54d0fccca9d773749e+0x3e0>
 802aa7c:	69fb      	ldr	r3, [r7, #28]
 802aa7e:	685b      	ldr	r3, [r3, #4]
 802aa80:	69ba      	ldr	r2, [r7, #24]
 802aa82:	7852      	ldrb	r2, [r2, #1]
 802aa84:	441a      	add	r2, r3
 802aa86:	69fb      	ldr	r3, [r7, #28]
 802aa88:	65da      	str	r2, [r3, #92]	; 0x5c
 802aa8a:	69bb      	ldr	r3, [r7, #24]
 802aa8c:	2201      	movs	r2, #1
 802aa8e:	701a      	strb	r2, [r3, #0]
 802aa90:	e020      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aa92:	bf00      	nop
 802aa94:	e01e      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aa96:	bf00      	nop
 802aa98:	e01c      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aa9a:	bf00      	nop
 802aa9c:	e01a      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aa9e:	bf00      	nop
 802aaa0:	e018      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaa2:	bf00      	nop
 802aaa4:	e016      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaa6:	bf00      	nop
 802aaa8:	e014      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaaa:	bf00      	nop
 802aaac:	e012      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaae:	bf00      	nop
 802aab0:	e010      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aab2:	bf00      	nop
 802aab4:	e00e      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aab6:	bf00      	nop
 802aab8:	e00c      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaba:	bf00      	nop
 802aabc:	e00a      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aabe:	bf00      	nop
 802aac0:	e008      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aac2:	bf00      	nop
 802aac4:	e006      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aac6:	bf00      	nop
 802aac8:	e004      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aaca:	bf00      	nop
 802aacc:	e002      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aace:	bf00      	nop
 802aad0:	e000      	b.n	802aad4 <93646682ea820ae310ba1b54d0fccca9d773749e+0x5c8>
 802aad2:	bf00      	nop
 802aad4:	37d0      	adds	r7, #208	; 0xd0
 802aad6:	46bd      	mov	sp, r7
 802aad8:	bdb0      	pop	{r4, r5, r7, pc}
	...

0802aadc <malloc>:
 802aadc:	4b02      	ldr	r3, [pc, #8]	; (802aae8 <malloc+0xc>)
 802aade:	4601      	mov	r1, r0
 802aae0:	6818      	ldr	r0, [r3, #0]
 802aae2:	f000 b82b 	b.w	802ab3c <_malloc_r>
 802aae6:	bf00      	nop
 802aae8:	20000318 	.word	0x20000318

0802aaec <free>:
 802aaec:	4b02      	ldr	r3, [pc, #8]	; (802aaf8 <free+0xc>)
 802aaee:	4601      	mov	r1, r0
 802aaf0:	6818      	ldr	r0, [r3, #0]
 802aaf2:	f000 bbaf 	b.w	802b254 <_free_r>
 802aaf6:	bf00      	nop
 802aaf8:	20000318 	.word	0x20000318

0802aafc <sbrk_aligned>:
 802aafc:	b570      	push	{r4, r5, r6, lr}
 802aafe:	4e0e      	ldr	r6, [pc, #56]	; (802ab38 <sbrk_aligned+0x3c>)
 802ab00:	460c      	mov	r4, r1
 802ab02:	6831      	ldr	r1, [r6, #0]
 802ab04:	4605      	mov	r5, r0
 802ab06:	b911      	cbnz	r1, 802ab0e <sbrk_aligned+0x12>
 802ab08:	f000 fb44 	bl	802b194 <_sbrk_r>
 802ab0c:	6030      	str	r0, [r6, #0]
 802ab0e:	4621      	mov	r1, r4
 802ab10:	4628      	mov	r0, r5
 802ab12:	f000 fb3f 	bl	802b194 <_sbrk_r>
 802ab16:	1c43      	adds	r3, r0, #1
 802ab18:	d00a      	beq.n	802ab30 <sbrk_aligned+0x34>
 802ab1a:	1cc4      	adds	r4, r0, #3
 802ab1c:	f024 0403 	bic.w	r4, r4, #3
 802ab20:	42a0      	cmp	r0, r4
 802ab22:	d007      	beq.n	802ab34 <sbrk_aligned+0x38>
 802ab24:	1a21      	subs	r1, r4, r0
 802ab26:	4628      	mov	r0, r5
 802ab28:	f000 fb34 	bl	802b194 <_sbrk_r>
 802ab2c:	3001      	adds	r0, #1
 802ab2e:	d101      	bne.n	802ab34 <sbrk_aligned+0x38>
 802ab30:	f04f 34ff 	mov.w	r4, #4294967295
 802ab34:	4620      	mov	r0, r4
 802ab36:	bd70      	pop	{r4, r5, r6, pc}
 802ab38:	20003f94 	.word	0x20003f94

0802ab3c <_malloc_r>:
 802ab3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ab40:	1ccd      	adds	r5, r1, #3
 802ab42:	f025 0503 	bic.w	r5, r5, #3
 802ab46:	3508      	adds	r5, #8
 802ab48:	2d0c      	cmp	r5, #12
 802ab4a:	bf38      	it	cc
 802ab4c:	250c      	movcc	r5, #12
 802ab4e:	2d00      	cmp	r5, #0
 802ab50:	4607      	mov	r7, r0
 802ab52:	db01      	blt.n	802ab58 <_malloc_r+0x1c>
 802ab54:	42a9      	cmp	r1, r5
 802ab56:	d905      	bls.n	802ab64 <_malloc_r+0x28>
 802ab58:	230c      	movs	r3, #12
 802ab5a:	603b      	str	r3, [r7, #0]
 802ab5c:	2600      	movs	r6, #0
 802ab5e:	4630      	mov	r0, r6
 802ab60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ab64:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802ac38 <_malloc_r+0xfc>
 802ab68:	f000 f868 	bl	802ac3c <__malloc_lock>
 802ab6c:	f8d8 3000 	ldr.w	r3, [r8]
 802ab70:	461c      	mov	r4, r3
 802ab72:	bb5c      	cbnz	r4, 802abcc <_malloc_r+0x90>
 802ab74:	4629      	mov	r1, r5
 802ab76:	4638      	mov	r0, r7
 802ab78:	f7ff ffc0 	bl	802aafc <sbrk_aligned>
 802ab7c:	1c43      	adds	r3, r0, #1
 802ab7e:	4604      	mov	r4, r0
 802ab80:	d155      	bne.n	802ac2e <_malloc_r+0xf2>
 802ab82:	f8d8 4000 	ldr.w	r4, [r8]
 802ab86:	4626      	mov	r6, r4
 802ab88:	2e00      	cmp	r6, #0
 802ab8a:	d145      	bne.n	802ac18 <_malloc_r+0xdc>
 802ab8c:	2c00      	cmp	r4, #0
 802ab8e:	d048      	beq.n	802ac22 <_malloc_r+0xe6>
 802ab90:	6823      	ldr	r3, [r4, #0]
 802ab92:	4631      	mov	r1, r6
 802ab94:	4638      	mov	r0, r7
 802ab96:	eb04 0903 	add.w	r9, r4, r3
 802ab9a:	f000 fafb 	bl	802b194 <_sbrk_r>
 802ab9e:	4581      	cmp	r9, r0
 802aba0:	d13f      	bne.n	802ac22 <_malloc_r+0xe6>
 802aba2:	6821      	ldr	r1, [r4, #0]
 802aba4:	1a6d      	subs	r5, r5, r1
 802aba6:	4629      	mov	r1, r5
 802aba8:	4638      	mov	r0, r7
 802abaa:	f7ff ffa7 	bl	802aafc <sbrk_aligned>
 802abae:	3001      	adds	r0, #1
 802abb0:	d037      	beq.n	802ac22 <_malloc_r+0xe6>
 802abb2:	6823      	ldr	r3, [r4, #0]
 802abb4:	442b      	add	r3, r5
 802abb6:	6023      	str	r3, [r4, #0]
 802abb8:	f8d8 3000 	ldr.w	r3, [r8]
 802abbc:	2b00      	cmp	r3, #0
 802abbe:	d038      	beq.n	802ac32 <_malloc_r+0xf6>
 802abc0:	685a      	ldr	r2, [r3, #4]
 802abc2:	42a2      	cmp	r2, r4
 802abc4:	d12b      	bne.n	802ac1e <_malloc_r+0xe2>
 802abc6:	2200      	movs	r2, #0
 802abc8:	605a      	str	r2, [r3, #4]
 802abca:	e00f      	b.n	802abec <_malloc_r+0xb0>
 802abcc:	6822      	ldr	r2, [r4, #0]
 802abce:	1b52      	subs	r2, r2, r5
 802abd0:	d41f      	bmi.n	802ac12 <_malloc_r+0xd6>
 802abd2:	2a0b      	cmp	r2, #11
 802abd4:	d917      	bls.n	802ac06 <_malloc_r+0xca>
 802abd6:	1961      	adds	r1, r4, r5
 802abd8:	42a3      	cmp	r3, r4
 802abda:	6025      	str	r5, [r4, #0]
 802abdc:	bf18      	it	ne
 802abde:	6059      	strne	r1, [r3, #4]
 802abe0:	6863      	ldr	r3, [r4, #4]
 802abe2:	bf08      	it	eq
 802abe4:	f8c8 1000 	streq.w	r1, [r8]
 802abe8:	5162      	str	r2, [r4, r5]
 802abea:	604b      	str	r3, [r1, #4]
 802abec:	4638      	mov	r0, r7
 802abee:	f104 060b 	add.w	r6, r4, #11
 802abf2:	f000 f829 	bl	802ac48 <__malloc_unlock>
 802abf6:	f026 0607 	bic.w	r6, r6, #7
 802abfa:	1d23      	adds	r3, r4, #4
 802abfc:	1af2      	subs	r2, r6, r3
 802abfe:	d0ae      	beq.n	802ab5e <_malloc_r+0x22>
 802ac00:	1b9b      	subs	r3, r3, r6
 802ac02:	50a3      	str	r3, [r4, r2]
 802ac04:	e7ab      	b.n	802ab5e <_malloc_r+0x22>
 802ac06:	42a3      	cmp	r3, r4
 802ac08:	6862      	ldr	r2, [r4, #4]
 802ac0a:	d1dd      	bne.n	802abc8 <_malloc_r+0x8c>
 802ac0c:	f8c8 2000 	str.w	r2, [r8]
 802ac10:	e7ec      	b.n	802abec <_malloc_r+0xb0>
 802ac12:	4623      	mov	r3, r4
 802ac14:	6864      	ldr	r4, [r4, #4]
 802ac16:	e7ac      	b.n	802ab72 <_malloc_r+0x36>
 802ac18:	4634      	mov	r4, r6
 802ac1a:	6876      	ldr	r6, [r6, #4]
 802ac1c:	e7b4      	b.n	802ab88 <_malloc_r+0x4c>
 802ac1e:	4613      	mov	r3, r2
 802ac20:	e7cc      	b.n	802abbc <_malloc_r+0x80>
 802ac22:	230c      	movs	r3, #12
 802ac24:	603b      	str	r3, [r7, #0]
 802ac26:	4638      	mov	r0, r7
 802ac28:	f000 f80e 	bl	802ac48 <__malloc_unlock>
 802ac2c:	e797      	b.n	802ab5e <_malloc_r+0x22>
 802ac2e:	6025      	str	r5, [r4, #0]
 802ac30:	e7dc      	b.n	802abec <_malloc_r+0xb0>
 802ac32:	605b      	str	r3, [r3, #4]
 802ac34:	deff      	udf	#255	; 0xff
 802ac36:	bf00      	nop
 802ac38:	20003f90 	.word	0x20003f90

0802ac3c <__malloc_lock>:
 802ac3c:	4801      	ldr	r0, [pc, #4]	; (802ac44 <__malloc_lock+0x8>)
 802ac3e:	f000 baf0 	b.w	802b222 <__retarget_lock_acquire_recursive>
 802ac42:	bf00      	nop
 802ac44:	200040d8 	.word	0x200040d8

0802ac48 <__malloc_unlock>:
 802ac48:	4801      	ldr	r0, [pc, #4]	; (802ac50 <__malloc_unlock+0x8>)
 802ac4a:	f000 baeb 	b.w	802b224 <__retarget_lock_release_recursive>
 802ac4e:	bf00      	nop
 802ac50:	200040d8 	.word	0x200040d8

0802ac54 <std>:
 802ac54:	2300      	movs	r3, #0
 802ac56:	b510      	push	{r4, lr}
 802ac58:	4604      	mov	r4, r0
 802ac5a:	e9c0 3300 	strd	r3, r3, [r0]
 802ac5e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ac62:	6083      	str	r3, [r0, #8]
 802ac64:	8181      	strh	r1, [r0, #12]
 802ac66:	6643      	str	r3, [r0, #100]	; 0x64
 802ac68:	81c2      	strh	r2, [r0, #14]
 802ac6a:	6183      	str	r3, [r0, #24]
 802ac6c:	4619      	mov	r1, r3
 802ac6e:	2208      	movs	r2, #8
 802ac70:	305c      	adds	r0, #92	; 0x5c
 802ac72:	f000 fa41 	bl	802b0f8 <memset>
 802ac76:	4b0d      	ldr	r3, [pc, #52]	; (802acac <std+0x58>)
 802ac78:	6263      	str	r3, [r4, #36]	; 0x24
 802ac7a:	4b0d      	ldr	r3, [pc, #52]	; (802acb0 <std+0x5c>)
 802ac7c:	62a3      	str	r3, [r4, #40]	; 0x28
 802ac7e:	4b0d      	ldr	r3, [pc, #52]	; (802acb4 <std+0x60>)
 802ac80:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ac82:	4b0d      	ldr	r3, [pc, #52]	; (802acb8 <std+0x64>)
 802ac84:	6323      	str	r3, [r4, #48]	; 0x30
 802ac86:	4b0d      	ldr	r3, [pc, #52]	; (802acbc <std+0x68>)
 802ac88:	6224      	str	r4, [r4, #32]
 802ac8a:	429c      	cmp	r4, r3
 802ac8c:	d006      	beq.n	802ac9c <std+0x48>
 802ac8e:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802ac92:	4294      	cmp	r4, r2
 802ac94:	d002      	beq.n	802ac9c <std+0x48>
 802ac96:	33d0      	adds	r3, #208	; 0xd0
 802ac98:	429c      	cmp	r4, r3
 802ac9a:	d105      	bne.n	802aca8 <std+0x54>
 802ac9c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802aca0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aca4:	f000 babc 	b.w	802b220 <__retarget_lock_init_recursive>
 802aca8:	bd10      	pop	{r4, pc}
 802acaa:	bf00      	nop
 802acac:	0802aef5 	.word	0x0802aef5
 802acb0:	0802af17 	.word	0x0802af17
 802acb4:	0802af4f 	.word	0x0802af4f
 802acb8:	0802af73 	.word	0x0802af73
 802acbc:	20003f98 	.word	0x20003f98

0802acc0 <stdio_exit_handler>:
 802acc0:	4a02      	ldr	r2, [pc, #8]	; (802accc <stdio_exit_handler+0xc>)
 802acc2:	4903      	ldr	r1, [pc, #12]	; (802acd0 <stdio_exit_handler+0x10>)
 802acc4:	4803      	ldr	r0, [pc, #12]	; (802acd4 <stdio_exit_handler+0x14>)
 802acc6:	f000 b869 	b.w	802ad9c <_fwalk_sglue>
 802acca:	bf00      	nop
 802accc:	200002c0 	.word	0x200002c0
 802acd0:	0802bc41 	.word	0x0802bc41
 802acd4:	200002cc 	.word	0x200002cc

0802acd8 <cleanup_stdio>:
 802acd8:	6841      	ldr	r1, [r0, #4]
 802acda:	4b0c      	ldr	r3, [pc, #48]	; (802ad0c <cleanup_stdio+0x34>)
 802acdc:	4299      	cmp	r1, r3
 802acde:	b510      	push	{r4, lr}
 802ace0:	4604      	mov	r4, r0
 802ace2:	d001      	beq.n	802ace8 <cleanup_stdio+0x10>
 802ace4:	f000 ffac 	bl	802bc40 <_fflush_r>
 802ace8:	68a1      	ldr	r1, [r4, #8]
 802acea:	4b09      	ldr	r3, [pc, #36]	; (802ad10 <cleanup_stdio+0x38>)
 802acec:	4299      	cmp	r1, r3
 802acee:	d002      	beq.n	802acf6 <cleanup_stdio+0x1e>
 802acf0:	4620      	mov	r0, r4
 802acf2:	f000 ffa5 	bl	802bc40 <_fflush_r>
 802acf6:	68e1      	ldr	r1, [r4, #12]
 802acf8:	4b06      	ldr	r3, [pc, #24]	; (802ad14 <cleanup_stdio+0x3c>)
 802acfa:	4299      	cmp	r1, r3
 802acfc:	d004      	beq.n	802ad08 <cleanup_stdio+0x30>
 802acfe:	4620      	mov	r0, r4
 802ad00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad04:	f000 bf9c 	b.w	802bc40 <_fflush_r>
 802ad08:	bd10      	pop	{r4, pc}
 802ad0a:	bf00      	nop
 802ad0c:	20003f98 	.word	0x20003f98
 802ad10:	20004000 	.word	0x20004000
 802ad14:	20004068 	.word	0x20004068

0802ad18 <global_stdio_init.part.0>:
 802ad18:	b510      	push	{r4, lr}
 802ad1a:	4b0b      	ldr	r3, [pc, #44]	; (802ad48 <global_stdio_init.part.0+0x30>)
 802ad1c:	4c0b      	ldr	r4, [pc, #44]	; (802ad4c <global_stdio_init.part.0+0x34>)
 802ad1e:	4a0c      	ldr	r2, [pc, #48]	; (802ad50 <global_stdio_init.part.0+0x38>)
 802ad20:	601a      	str	r2, [r3, #0]
 802ad22:	4620      	mov	r0, r4
 802ad24:	2200      	movs	r2, #0
 802ad26:	2104      	movs	r1, #4
 802ad28:	f7ff ff94 	bl	802ac54 <std>
 802ad2c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802ad30:	2201      	movs	r2, #1
 802ad32:	2109      	movs	r1, #9
 802ad34:	f7ff ff8e 	bl	802ac54 <std>
 802ad38:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ad3c:	2202      	movs	r2, #2
 802ad3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad42:	2112      	movs	r1, #18
 802ad44:	f7ff bf86 	b.w	802ac54 <std>
 802ad48:	200040d0 	.word	0x200040d0
 802ad4c:	20003f98 	.word	0x20003f98
 802ad50:	0802acc1 	.word	0x0802acc1

0802ad54 <__sfp_lock_acquire>:
 802ad54:	4801      	ldr	r0, [pc, #4]	; (802ad5c <__sfp_lock_acquire+0x8>)
 802ad56:	f000 ba64 	b.w	802b222 <__retarget_lock_acquire_recursive>
 802ad5a:	bf00      	nop
 802ad5c:	200040d9 	.word	0x200040d9

0802ad60 <__sfp_lock_release>:
 802ad60:	4801      	ldr	r0, [pc, #4]	; (802ad68 <__sfp_lock_release+0x8>)
 802ad62:	f000 ba5f 	b.w	802b224 <__retarget_lock_release_recursive>
 802ad66:	bf00      	nop
 802ad68:	200040d9 	.word	0x200040d9

0802ad6c <__sinit>:
 802ad6c:	b510      	push	{r4, lr}
 802ad6e:	4604      	mov	r4, r0
 802ad70:	f7ff fff0 	bl	802ad54 <__sfp_lock_acquire>
 802ad74:	6a23      	ldr	r3, [r4, #32]
 802ad76:	b11b      	cbz	r3, 802ad80 <__sinit+0x14>
 802ad78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad7c:	f7ff bff0 	b.w	802ad60 <__sfp_lock_release>
 802ad80:	4b04      	ldr	r3, [pc, #16]	; (802ad94 <__sinit+0x28>)
 802ad82:	6223      	str	r3, [r4, #32]
 802ad84:	4b04      	ldr	r3, [pc, #16]	; (802ad98 <__sinit+0x2c>)
 802ad86:	681b      	ldr	r3, [r3, #0]
 802ad88:	2b00      	cmp	r3, #0
 802ad8a:	d1f5      	bne.n	802ad78 <__sinit+0xc>
 802ad8c:	f7ff ffc4 	bl	802ad18 <global_stdio_init.part.0>
 802ad90:	e7f2      	b.n	802ad78 <__sinit+0xc>
 802ad92:	bf00      	nop
 802ad94:	0802acd9 	.word	0x0802acd9
 802ad98:	200040d0 	.word	0x200040d0

0802ad9c <_fwalk_sglue>:
 802ad9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ada0:	4607      	mov	r7, r0
 802ada2:	4688      	mov	r8, r1
 802ada4:	4614      	mov	r4, r2
 802ada6:	2600      	movs	r6, #0
 802ada8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802adac:	f1b9 0901 	subs.w	r9, r9, #1
 802adb0:	d505      	bpl.n	802adbe <_fwalk_sglue+0x22>
 802adb2:	6824      	ldr	r4, [r4, #0]
 802adb4:	2c00      	cmp	r4, #0
 802adb6:	d1f7      	bne.n	802ada8 <_fwalk_sglue+0xc>
 802adb8:	4630      	mov	r0, r6
 802adba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802adbe:	89ab      	ldrh	r3, [r5, #12]
 802adc0:	2b01      	cmp	r3, #1
 802adc2:	d907      	bls.n	802add4 <_fwalk_sglue+0x38>
 802adc4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802adc8:	3301      	adds	r3, #1
 802adca:	d003      	beq.n	802add4 <_fwalk_sglue+0x38>
 802adcc:	4629      	mov	r1, r5
 802adce:	4638      	mov	r0, r7
 802add0:	47c0      	blx	r8
 802add2:	4306      	orrs	r6, r0
 802add4:	3568      	adds	r5, #104	; 0x68
 802add6:	e7e9      	b.n	802adac <_fwalk_sglue+0x10>

0802add8 <iprintf>:
 802add8:	b40f      	push	{r0, r1, r2, r3}
 802adda:	b507      	push	{r0, r1, r2, lr}
 802addc:	4906      	ldr	r1, [pc, #24]	; (802adf8 <iprintf+0x20>)
 802adde:	ab04      	add	r3, sp, #16
 802ade0:	6808      	ldr	r0, [r1, #0]
 802ade2:	f853 2b04 	ldr.w	r2, [r3], #4
 802ade6:	6881      	ldr	r1, [r0, #8]
 802ade8:	9301      	str	r3, [sp, #4]
 802adea:	f000 fbfd 	bl	802b5e8 <_vfiprintf_r>
 802adee:	b003      	add	sp, #12
 802adf0:	f85d eb04 	ldr.w	lr, [sp], #4
 802adf4:	b004      	add	sp, #16
 802adf6:	4770      	bx	lr
 802adf8:	20000318 	.word	0x20000318

0802adfc <_puts_r>:
 802adfc:	6a03      	ldr	r3, [r0, #32]
 802adfe:	b570      	push	{r4, r5, r6, lr}
 802ae00:	6884      	ldr	r4, [r0, #8]
 802ae02:	4605      	mov	r5, r0
 802ae04:	460e      	mov	r6, r1
 802ae06:	b90b      	cbnz	r3, 802ae0c <_puts_r+0x10>
 802ae08:	f7ff ffb0 	bl	802ad6c <__sinit>
 802ae0c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ae0e:	07db      	lsls	r3, r3, #31
 802ae10:	d405      	bmi.n	802ae1e <_puts_r+0x22>
 802ae12:	89a3      	ldrh	r3, [r4, #12]
 802ae14:	0598      	lsls	r0, r3, #22
 802ae16:	d402      	bmi.n	802ae1e <_puts_r+0x22>
 802ae18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ae1a:	f000 fa02 	bl	802b222 <__retarget_lock_acquire_recursive>
 802ae1e:	89a3      	ldrh	r3, [r4, #12]
 802ae20:	0719      	lsls	r1, r3, #28
 802ae22:	d513      	bpl.n	802ae4c <_puts_r+0x50>
 802ae24:	6923      	ldr	r3, [r4, #16]
 802ae26:	b18b      	cbz	r3, 802ae4c <_puts_r+0x50>
 802ae28:	3e01      	subs	r6, #1
 802ae2a:	68a3      	ldr	r3, [r4, #8]
 802ae2c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 802ae30:	3b01      	subs	r3, #1
 802ae32:	60a3      	str	r3, [r4, #8]
 802ae34:	b9e9      	cbnz	r1, 802ae72 <_puts_r+0x76>
 802ae36:	2b00      	cmp	r3, #0
 802ae38:	da2e      	bge.n	802ae98 <_puts_r+0x9c>
 802ae3a:	4622      	mov	r2, r4
 802ae3c:	210a      	movs	r1, #10
 802ae3e:	4628      	mov	r0, r5
 802ae40:	f000 f89b 	bl	802af7a <__swbuf_r>
 802ae44:	3001      	adds	r0, #1
 802ae46:	d007      	beq.n	802ae58 <_puts_r+0x5c>
 802ae48:	250a      	movs	r5, #10
 802ae4a:	e007      	b.n	802ae5c <_puts_r+0x60>
 802ae4c:	4621      	mov	r1, r4
 802ae4e:	4628      	mov	r0, r5
 802ae50:	f000 f8d0 	bl	802aff4 <__swsetup_r>
 802ae54:	2800      	cmp	r0, #0
 802ae56:	d0e7      	beq.n	802ae28 <_puts_r+0x2c>
 802ae58:	f04f 35ff 	mov.w	r5, #4294967295
 802ae5c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ae5e:	07da      	lsls	r2, r3, #31
 802ae60:	d405      	bmi.n	802ae6e <_puts_r+0x72>
 802ae62:	89a3      	ldrh	r3, [r4, #12]
 802ae64:	059b      	lsls	r3, r3, #22
 802ae66:	d402      	bmi.n	802ae6e <_puts_r+0x72>
 802ae68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ae6a:	f000 f9db 	bl	802b224 <__retarget_lock_release_recursive>
 802ae6e:	4628      	mov	r0, r5
 802ae70:	bd70      	pop	{r4, r5, r6, pc}
 802ae72:	2b00      	cmp	r3, #0
 802ae74:	da04      	bge.n	802ae80 <_puts_r+0x84>
 802ae76:	69a2      	ldr	r2, [r4, #24]
 802ae78:	429a      	cmp	r2, r3
 802ae7a:	dc06      	bgt.n	802ae8a <_puts_r+0x8e>
 802ae7c:	290a      	cmp	r1, #10
 802ae7e:	d004      	beq.n	802ae8a <_puts_r+0x8e>
 802ae80:	6823      	ldr	r3, [r4, #0]
 802ae82:	1c5a      	adds	r2, r3, #1
 802ae84:	6022      	str	r2, [r4, #0]
 802ae86:	7019      	strb	r1, [r3, #0]
 802ae88:	e7cf      	b.n	802ae2a <_puts_r+0x2e>
 802ae8a:	4622      	mov	r2, r4
 802ae8c:	4628      	mov	r0, r5
 802ae8e:	f000 f874 	bl	802af7a <__swbuf_r>
 802ae92:	3001      	adds	r0, #1
 802ae94:	d1c9      	bne.n	802ae2a <_puts_r+0x2e>
 802ae96:	e7df      	b.n	802ae58 <_puts_r+0x5c>
 802ae98:	6823      	ldr	r3, [r4, #0]
 802ae9a:	250a      	movs	r5, #10
 802ae9c:	1c5a      	adds	r2, r3, #1
 802ae9e:	6022      	str	r2, [r4, #0]
 802aea0:	701d      	strb	r5, [r3, #0]
 802aea2:	e7db      	b.n	802ae5c <_puts_r+0x60>

0802aea4 <puts>:
 802aea4:	4b02      	ldr	r3, [pc, #8]	; (802aeb0 <puts+0xc>)
 802aea6:	4601      	mov	r1, r0
 802aea8:	6818      	ldr	r0, [r3, #0]
 802aeaa:	f7ff bfa7 	b.w	802adfc <_puts_r>
 802aeae:	bf00      	nop
 802aeb0:	20000318 	.word	0x20000318

0802aeb4 <siprintf>:
 802aeb4:	b40e      	push	{r1, r2, r3}
 802aeb6:	b500      	push	{lr}
 802aeb8:	b09c      	sub	sp, #112	; 0x70
 802aeba:	ab1d      	add	r3, sp, #116	; 0x74
 802aebc:	9002      	str	r0, [sp, #8]
 802aebe:	9006      	str	r0, [sp, #24]
 802aec0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 802aec4:	4809      	ldr	r0, [pc, #36]	; (802aeec <siprintf+0x38>)
 802aec6:	9107      	str	r1, [sp, #28]
 802aec8:	9104      	str	r1, [sp, #16]
 802aeca:	4909      	ldr	r1, [pc, #36]	; (802aef0 <siprintf+0x3c>)
 802aecc:	f853 2b04 	ldr.w	r2, [r3], #4
 802aed0:	9105      	str	r1, [sp, #20]
 802aed2:	6800      	ldr	r0, [r0, #0]
 802aed4:	9301      	str	r3, [sp, #4]
 802aed6:	a902      	add	r1, sp, #8
 802aed8:	f000 fa60 	bl	802b39c <_svfiprintf_r>
 802aedc:	9b02      	ldr	r3, [sp, #8]
 802aede:	2200      	movs	r2, #0
 802aee0:	701a      	strb	r2, [r3, #0]
 802aee2:	b01c      	add	sp, #112	; 0x70
 802aee4:	f85d eb04 	ldr.w	lr, [sp], #4
 802aee8:	b003      	add	sp, #12
 802aeea:	4770      	bx	lr
 802aeec:	20000318 	.word	0x20000318
 802aef0:	ffff0208 	.word	0xffff0208

0802aef4 <__sread>:
 802aef4:	b510      	push	{r4, lr}
 802aef6:	460c      	mov	r4, r1
 802aef8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802aefc:	f000 f938 	bl	802b170 <_read_r>
 802af00:	2800      	cmp	r0, #0
 802af02:	bfab      	itete	ge
 802af04:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802af06:	89a3      	ldrhlt	r3, [r4, #12]
 802af08:	181b      	addge	r3, r3, r0
 802af0a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802af0e:	bfac      	ite	ge
 802af10:	6563      	strge	r3, [r4, #84]	; 0x54
 802af12:	81a3      	strhlt	r3, [r4, #12]
 802af14:	bd10      	pop	{r4, pc}

0802af16 <__swrite>:
 802af16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802af1a:	461f      	mov	r7, r3
 802af1c:	898b      	ldrh	r3, [r1, #12]
 802af1e:	05db      	lsls	r3, r3, #23
 802af20:	4605      	mov	r5, r0
 802af22:	460c      	mov	r4, r1
 802af24:	4616      	mov	r6, r2
 802af26:	d505      	bpl.n	802af34 <__swrite+0x1e>
 802af28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af2c:	2302      	movs	r3, #2
 802af2e:	2200      	movs	r2, #0
 802af30:	f000 f90c 	bl	802b14c <_lseek_r>
 802af34:	89a3      	ldrh	r3, [r4, #12]
 802af36:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802af3a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802af3e:	81a3      	strh	r3, [r4, #12]
 802af40:	4632      	mov	r2, r6
 802af42:	463b      	mov	r3, r7
 802af44:	4628      	mov	r0, r5
 802af46:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802af4a:	f000 b933 	b.w	802b1b4 <_write_r>

0802af4e <__sseek>:
 802af4e:	b510      	push	{r4, lr}
 802af50:	460c      	mov	r4, r1
 802af52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af56:	f000 f8f9 	bl	802b14c <_lseek_r>
 802af5a:	1c43      	adds	r3, r0, #1
 802af5c:	89a3      	ldrh	r3, [r4, #12]
 802af5e:	bf15      	itete	ne
 802af60:	6560      	strne	r0, [r4, #84]	; 0x54
 802af62:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802af66:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802af6a:	81a3      	strheq	r3, [r4, #12]
 802af6c:	bf18      	it	ne
 802af6e:	81a3      	strhne	r3, [r4, #12]
 802af70:	bd10      	pop	{r4, pc}

0802af72 <__sclose>:
 802af72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802af76:	f000 b8d9 	b.w	802b12c <_close_r>

0802af7a <__swbuf_r>:
 802af7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802af7c:	460e      	mov	r6, r1
 802af7e:	4614      	mov	r4, r2
 802af80:	4605      	mov	r5, r0
 802af82:	b118      	cbz	r0, 802af8c <__swbuf_r+0x12>
 802af84:	6a03      	ldr	r3, [r0, #32]
 802af86:	b90b      	cbnz	r3, 802af8c <__swbuf_r+0x12>
 802af88:	f7ff fef0 	bl	802ad6c <__sinit>
 802af8c:	69a3      	ldr	r3, [r4, #24]
 802af8e:	60a3      	str	r3, [r4, #8]
 802af90:	89a3      	ldrh	r3, [r4, #12]
 802af92:	071a      	lsls	r2, r3, #28
 802af94:	d525      	bpl.n	802afe2 <__swbuf_r+0x68>
 802af96:	6923      	ldr	r3, [r4, #16]
 802af98:	b31b      	cbz	r3, 802afe2 <__swbuf_r+0x68>
 802af9a:	6823      	ldr	r3, [r4, #0]
 802af9c:	6922      	ldr	r2, [r4, #16]
 802af9e:	1a98      	subs	r0, r3, r2
 802afa0:	6963      	ldr	r3, [r4, #20]
 802afa2:	b2f6      	uxtb	r6, r6
 802afa4:	4283      	cmp	r3, r0
 802afa6:	4637      	mov	r7, r6
 802afa8:	dc04      	bgt.n	802afb4 <__swbuf_r+0x3a>
 802afaa:	4621      	mov	r1, r4
 802afac:	4628      	mov	r0, r5
 802afae:	f000 fe47 	bl	802bc40 <_fflush_r>
 802afb2:	b9e0      	cbnz	r0, 802afee <__swbuf_r+0x74>
 802afb4:	68a3      	ldr	r3, [r4, #8]
 802afb6:	3b01      	subs	r3, #1
 802afb8:	60a3      	str	r3, [r4, #8]
 802afba:	6823      	ldr	r3, [r4, #0]
 802afbc:	1c5a      	adds	r2, r3, #1
 802afbe:	6022      	str	r2, [r4, #0]
 802afc0:	701e      	strb	r6, [r3, #0]
 802afc2:	6962      	ldr	r2, [r4, #20]
 802afc4:	1c43      	adds	r3, r0, #1
 802afc6:	429a      	cmp	r2, r3
 802afc8:	d004      	beq.n	802afd4 <__swbuf_r+0x5a>
 802afca:	89a3      	ldrh	r3, [r4, #12]
 802afcc:	07db      	lsls	r3, r3, #31
 802afce:	d506      	bpl.n	802afde <__swbuf_r+0x64>
 802afd0:	2e0a      	cmp	r6, #10
 802afd2:	d104      	bne.n	802afde <__swbuf_r+0x64>
 802afd4:	4621      	mov	r1, r4
 802afd6:	4628      	mov	r0, r5
 802afd8:	f000 fe32 	bl	802bc40 <_fflush_r>
 802afdc:	b938      	cbnz	r0, 802afee <__swbuf_r+0x74>
 802afde:	4638      	mov	r0, r7
 802afe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802afe2:	4621      	mov	r1, r4
 802afe4:	4628      	mov	r0, r5
 802afe6:	f000 f805 	bl	802aff4 <__swsetup_r>
 802afea:	2800      	cmp	r0, #0
 802afec:	d0d5      	beq.n	802af9a <__swbuf_r+0x20>
 802afee:	f04f 37ff 	mov.w	r7, #4294967295
 802aff2:	e7f4      	b.n	802afde <__swbuf_r+0x64>

0802aff4 <__swsetup_r>:
 802aff4:	b538      	push	{r3, r4, r5, lr}
 802aff6:	4b2a      	ldr	r3, [pc, #168]	; (802b0a0 <__swsetup_r+0xac>)
 802aff8:	4605      	mov	r5, r0
 802affa:	6818      	ldr	r0, [r3, #0]
 802affc:	460c      	mov	r4, r1
 802affe:	b118      	cbz	r0, 802b008 <__swsetup_r+0x14>
 802b000:	6a03      	ldr	r3, [r0, #32]
 802b002:	b90b      	cbnz	r3, 802b008 <__swsetup_r+0x14>
 802b004:	f7ff feb2 	bl	802ad6c <__sinit>
 802b008:	89a3      	ldrh	r3, [r4, #12]
 802b00a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b00e:	0718      	lsls	r0, r3, #28
 802b010:	d422      	bmi.n	802b058 <__swsetup_r+0x64>
 802b012:	06d9      	lsls	r1, r3, #27
 802b014:	d407      	bmi.n	802b026 <__swsetup_r+0x32>
 802b016:	2309      	movs	r3, #9
 802b018:	602b      	str	r3, [r5, #0]
 802b01a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b01e:	81a3      	strh	r3, [r4, #12]
 802b020:	f04f 30ff 	mov.w	r0, #4294967295
 802b024:	e034      	b.n	802b090 <__swsetup_r+0x9c>
 802b026:	0758      	lsls	r0, r3, #29
 802b028:	d512      	bpl.n	802b050 <__swsetup_r+0x5c>
 802b02a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b02c:	b141      	cbz	r1, 802b040 <__swsetup_r+0x4c>
 802b02e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b032:	4299      	cmp	r1, r3
 802b034:	d002      	beq.n	802b03c <__swsetup_r+0x48>
 802b036:	4628      	mov	r0, r5
 802b038:	f000 f90c 	bl	802b254 <_free_r>
 802b03c:	2300      	movs	r3, #0
 802b03e:	6363      	str	r3, [r4, #52]	; 0x34
 802b040:	89a3      	ldrh	r3, [r4, #12]
 802b042:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b046:	81a3      	strh	r3, [r4, #12]
 802b048:	2300      	movs	r3, #0
 802b04a:	6063      	str	r3, [r4, #4]
 802b04c:	6923      	ldr	r3, [r4, #16]
 802b04e:	6023      	str	r3, [r4, #0]
 802b050:	89a3      	ldrh	r3, [r4, #12]
 802b052:	f043 0308 	orr.w	r3, r3, #8
 802b056:	81a3      	strh	r3, [r4, #12]
 802b058:	6923      	ldr	r3, [r4, #16]
 802b05a:	b94b      	cbnz	r3, 802b070 <__swsetup_r+0x7c>
 802b05c:	89a3      	ldrh	r3, [r4, #12]
 802b05e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b062:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b066:	d003      	beq.n	802b070 <__swsetup_r+0x7c>
 802b068:	4621      	mov	r1, r4
 802b06a:	4628      	mov	r0, r5
 802b06c:	f000 fe36 	bl	802bcdc <__smakebuf_r>
 802b070:	89a0      	ldrh	r0, [r4, #12]
 802b072:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b076:	f010 0301 	ands.w	r3, r0, #1
 802b07a:	d00a      	beq.n	802b092 <__swsetup_r+0x9e>
 802b07c:	2300      	movs	r3, #0
 802b07e:	60a3      	str	r3, [r4, #8]
 802b080:	6963      	ldr	r3, [r4, #20]
 802b082:	425b      	negs	r3, r3
 802b084:	61a3      	str	r3, [r4, #24]
 802b086:	6923      	ldr	r3, [r4, #16]
 802b088:	b943      	cbnz	r3, 802b09c <__swsetup_r+0xa8>
 802b08a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802b08e:	d1c4      	bne.n	802b01a <__swsetup_r+0x26>
 802b090:	bd38      	pop	{r3, r4, r5, pc}
 802b092:	0781      	lsls	r1, r0, #30
 802b094:	bf58      	it	pl
 802b096:	6963      	ldrpl	r3, [r4, #20]
 802b098:	60a3      	str	r3, [r4, #8]
 802b09a:	e7f4      	b.n	802b086 <__swsetup_r+0x92>
 802b09c:	2000      	movs	r0, #0
 802b09e:	e7f7      	b.n	802b090 <__swsetup_r+0x9c>
 802b0a0:	20000318 	.word	0x20000318

0802b0a4 <memcmp>:
 802b0a4:	b510      	push	{r4, lr}
 802b0a6:	3901      	subs	r1, #1
 802b0a8:	4402      	add	r2, r0
 802b0aa:	4290      	cmp	r0, r2
 802b0ac:	d101      	bne.n	802b0b2 <memcmp+0xe>
 802b0ae:	2000      	movs	r0, #0
 802b0b0:	e005      	b.n	802b0be <memcmp+0x1a>
 802b0b2:	7803      	ldrb	r3, [r0, #0]
 802b0b4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 802b0b8:	42a3      	cmp	r3, r4
 802b0ba:	d001      	beq.n	802b0c0 <memcmp+0x1c>
 802b0bc:	1b18      	subs	r0, r3, r4
 802b0be:	bd10      	pop	{r4, pc}
 802b0c0:	3001      	adds	r0, #1
 802b0c2:	e7f2      	b.n	802b0aa <memcmp+0x6>

0802b0c4 <memmove>:
 802b0c4:	4288      	cmp	r0, r1
 802b0c6:	b510      	push	{r4, lr}
 802b0c8:	eb01 0402 	add.w	r4, r1, r2
 802b0cc:	d902      	bls.n	802b0d4 <memmove+0x10>
 802b0ce:	4284      	cmp	r4, r0
 802b0d0:	4623      	mov	r3, r4
 802b0d2:	d807      	bhi.n	802b0e4 <memmove+0x20>
 802b0d4:	1e43      	subs	r3, r0, #1
 802b0d6:	42a1      	cmp	r1, r4
 802b0d8:	d008      	beq.n	802b0ec <memmove+0x28>
 802b0da:	f811 2b01 	ldrb.w	r2, [r1], #1
 802b0de:	f803 2f01 	strb.w	r2, [r3, #1]!
 802b0e2:	e7f8      	b.n	802b0d6 <memmove+0x12>
 802b0e4:	4402      	add	r2, r0
 802b0e6:	4601      	mov	r1, r0
 802b0e8:	428a      	cmp	r2, r1
 802b0ea:	d100      	bne.n	802b0ee <memmove+0x2a>
 802b0ec:	bd10      	pop	{r4, pc}
 802b0ee:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802b0f2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802b0f6:	e7f7      	b.n	802b0e8 <memmove+0x24>

0802b0f8 <memset>:
 802b0f8:	4402      	add	r2, r0
 802b0fa:	4603      	mov	r3, r0
 802b0fc:	4293      	cmp	r3, r2
 802b0fe:	d100      	bne.n	802b102 <memset+0xa>
 802b100:	4770      	bx	lr
 802b102:	f803 1b01 	strb.w	r1, [r3], #1
 802b106:	e7f9      	b.n	802b0fc <memset+0x4>

0802b108 <strncmp>:
 802b108:	b510      	push	{r4, lr}
 802b10a:	b16a      	cbz	r2, 802b128 <strncmp+0x20>
 802b10c:	3901      	subs	r1, #1
 802b10e:	1884      	adds	r4, r0, r2
 802b110:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b114:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 802b118:	429a      	cmp	r2, r3
 802b11a:	d103      	bne.n	802b124 <strncmp+0x1c>
 802b11c:	42a0      	cmp	r0, r4
 802b11e:	d001      	beq.n	802b124 <strncmp+0x1c>
 802b120:	2a00      	cmp	r2, #0
 802b122:	d1f5      	bne.n	802b110 <strncmp+0x8>
 802b124:	1ad0      	subs	r0, r2, r3
 802b126:	bd10      	pop	{r4, pc}
 802b128:	4610      	mov	r0, r2
 802b12a:	e7fc      	b.n	802b126 <strncmp+0x1e>

0802b12c <_close_r>:
 802b12c:	b538      	push	{r3, r4, r5, lr}
 802b12e:	4d06      	ldr	r5, [pc, #24]	; (802b148 <_close_r+0x1c>)
 802b130:	2300      	movs	r3, #0
 802b132:	4604      	mov	r4, r0
 802b134:	4608      	mov	r0, r1
 802b136:	602b      	str	r3, [r5, #0]
 802b138:	f000 fe66 	bl	802be08 <_close>
 802b13c:	1c43      	adds	r3, r0, #1
 802b13e:	d102      	bne.n	802b146 <_close_r+0x1a>
 802b140:	682b      	ldr	r3, [r5, #0]
 802b142:	b103      	cbz	r3, 802b146 <_close_r+0x1a>
 802b144:	6023      	str	r3, [r4, #0]
 802b146:	bd38      	pop	{r3, r4, r5, pc}
 802b148:	200040d4 	.word	0x200040d4

0802b14c <_lseek_r>:
 802b14c:	b538      	push	{r3, r4, r5, lr}
 802b14e:	4d07      	ldr	r5, [pc, #28]	; (802b16c <_lseek_r+0x20>)
 802b150:	4604      	mov	r4, r0
 802b152:	4608      	mov	r0, r1
 802b154:	4611      	mov	r1, r2
 802b156:	2200      	movs	r2, #0
 802b158:	602a      	str	r2, [r5, #0]
 802b15a:	461a      	mov	r2, r3
 802b15c:	f000 fe6c 	bl	802be38 <_lseek>
 802b160:	1c43      	adds	r3, r0, #1
 802b162:	d102      	bne.n	802b16a <_lseek_r+0x1e>
 802b164:	682b      	ldr	r3, [r5, #0]
 802b166:	b103      	cbz	r3, 802b16a <_lseek_r+0x1e>
 802b168:	6023      	str	r3, [r4, #0]
 802b16a:	bd38      	pop	{r3, r4, r5, pc}
 802b16c:	200040d4 	.word	0x200040d4

0802b170 <_read_r>:
 802b170:	b538      	push	{r3, r4, r5, lr}
 802b172:	4d07      	ldr	r5, [pc, #28]	; (802b190 <_read_r+0x20>)
 802b174:	4604      	mov	r4, r0
 802b176:	4608      	mov	r0, r1
 802b178:	4611      	mov	r1, r2
 802b17a:	2200      	movs	r2, #0
 802b17c:	602a      	str	r2, [r5, #0]
 802b17e:	461a      	mov	r2, r3
 802b180:	f000 fe62 	bl	802be48 <_read>
 802b184:	1c43      	adds	r3, r0, #1
 802b186:	d102      	bne.n	802b18e <_read_r+0x1e>
 802b188:	682b      	ldr	r3, [r5, #0]
 802b18a:	b103      	cbz	r3, 802b18e <_read_r+0x1e>
 802b18c:	6023      	str	r3, [r4, #0]
 802b18e:	bd38      	pop	{r3, r4, r5, pc}
 802b190:	200040d4 	.word	0x200040d4

0802b194 <_sbrk_r>:
 802b194:	b538      	push	{r3, r4, r5, lr}
 802b196:	4d06      	ldr	r5, [pc, #24]	; (802b1b0 <_sbrk_r+0x1c>)
 802b198:	2300      	movs	r3, #0
 802b19a:	4604      	mov	r4, r0
 802b19c:	4608      	mov	r0, r1
 802b19e:	602b      	str	r3, [r5, #0]
 802b1a0:	f000 fe5a 	bl	802be58 <_sbrk>
 802b1a4:	1c43      	adds	r3, r0, #1
 802b1a6:	d102      	bne.n	802b1ae <_sbrk_r+0x1a>
 802b1a8:	682b      	ldr	r3, [r5, #0]
 802b1aa:	b103      	cbz	r3, 802b1ae <_sbrk_r+0x1a>
 802b1ac:	6023      	str	r3, [r4, #0]
 802b1ae:	bd38      	pop	{r3, r4, r5, pc}
 802b1b0:	200040d4 	.word	0x200040d4

0802b1b4 <_write_r>:
 802b1b4:	b538      	push	{r3, r4, r5, lr}
 802b1b6:	4d07      	ldr	r5, [pc, #28]	; (802b1d4 <_write_r+0x20>)
 802b1b8:	4604      	mov	r4, r0
 802b1ba:	4608      	mov	r0, r1
 802b1bc:	4611      	mov	r1, r2
 802b1be:	2200      	movs	r2, #0
 802b1c0:	602a      	str	r2, [r5, #0]
 802b1c2:	461a      	mov	r2, r3
 802b1c4:	f7d6 fab0 	bl	8001728 <_write>
 802b1c8:	1c43      	adds	r3, r0, #1
 802b1ca:	d102      	bne.n	802b1d2 <_write_r+0x1e>
 802b1cc:	682b      	ldr	r3, [r5, #0]
 802b1ce:	b103      	cbz	r3, 802b1d2 <_write_r+0x1e>
 802b1d0:	6023      	str	r3, [r4, #0]
 802b1d2:	bd38      	pop	{r3, r4, r5, pc}
 802b1d4:	200040d4 	.word	0x200040d4

0802b1d8 <__libc_init_array>:
 802b1d8:	b570      	push	{r4, r5, r6, lr}
 802b1da:	4d0d      	ldr	r5, [pc, #52]	; (802b210 <__libc_init_array+0x38>)
 802b1dc:	4c0d      	ldr	r4, [pc, #52]	; (802b214 <__libc_init_array+0x3c>)
 802b1de:	1b64      	subs	r4, r4, r5
 802b1e0:	10a4      	asrs	r4, r4, #2
 802b1e2:	2600      	movs	r6, #0
 802b1e4:	42a6      	cmp	r6, r4
 802b1e6:	d109      	bne.n	802b1fc <__libc_init_array+0x24>
 802b1e8:	4d0b      	ldr	r5, [pc, #44]	; (802b218 <__libc_init_array+0x40>)
 802b1ea:	4c0c      	ldr	r4, [pc, #48]	; (802b21c <__libc_init_array+0x44>)
 802b1ec:	f000 fe42 	bl	802be74 <_init>
 802b1f0:	1b64      	subs	r4, r4, r5
 802b1f2:	10a4      	asrs	r4, r4, #2
 802b1f4:	2600      	movs	r6, #0
 802b1f6:	42a6      	cmp	r6, r4
 802b1f8:	d105      	bne.n	802b206 <__libc_init_array+0x2e>
 802b1fa:	bd70      	pop	{r4, r5, r6, pc}
 802b1fc:	f855 3b04 	ldr.w	r3, [r5], #4
 802b200:	4798      	blx	r3
 802b202:	3601      	adds	r6, #1
 802b204:	e7ee      	b.n	802b1e4 <__libc_init_array+0xc>
 802b206:	f855 3b04 	ldr.w	r3, [r5], #4
 802b20a:	4798      	blx	r3
 802b20c:	3601      	adds	r6, #1
 802b20e:	e7f2      	b.n	802b1f6 <__libc_init_array+0x1e>
 802b210:	08031b00 	.word	0x08031b00
 802b214:	08031b00 	.word	0x08031b00
 802b218:	08031b00 	.word	0x08031b00
 802b21c:	08031b04 	.word	0x08031b04

0802b220 <__retarget_lock_init_recursive>:
 802b220:	4770      	bx	lr

0802b222 <__retarget_lock_acquire_recursive>:
 802b222:	4770      	bx	lr

0802b224 <__retarget_lock_release_recursive>:
 802b224:	4770      	bx	lr

0802b226 <strcpy>:
 802b226:	4603      	mov	r3, r0
 802b228:	f811 2b01 	ldrb.w	r2, [r1], #1
 802b22c:	f803 2b01 	strb.w	r2, [r3], #1
 802b230:	2a00      	cmp	r2, #0
 802b232:	d1f9      	bne.n	802b228 <strcpy+0x2>
 802b234:	4770      	bx	lr

0802b236 <memcpy>:
 802b236:	440a      	add	r2, r1
 802b238:	4291      	cmp	r1, r2
 802b23a:	f100 33ff 	add.w	r3, r0, #4294967295
 802b23e:	d100      	bne.n	802b242 <memcpy+0xc>
 802b240:	4770      	bx	lr
 802b242:	b510      	push	{r4, lr}
 802b244:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b248:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b24c:	4291      	cmp	r1, r2
 802b24e:	d1f9      	bne.n	802b244 <memcpy+0xe>
 802b250:	bd10      	pop	{r4, pc}
	...

0802b254 <_free_r>:
 802b254:	b538      	push	{r3, r4, r5, lr}
 802b256:	4605      	mov	r5, r0
 802b258:	2900      	cmp	r1, #0
 802b25a:	d041      	beq.n	802b2e0 <_free_r+0x8c>
 802b25c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b260:	1f0c      	subs	r4, r1, #4
 802b262:	2b00      	cmp	r3, #0
 802b264:	bfb8      	it	lt
 802b266:	18e4      	addlt	r4, r4, r3
 802b268:	f7ff fce8 	bl	802ac3c <__malloc_lock>
 802b26c:	4a1d      	ldr	r2, [pc, #116]	; (802b2e4 <_free_r+0x90>)
 802b26e:	6813      	ldr	r3, [r2, #0]
 802b270:	b933      	cbnz	r3, 802b280 <_free_r+0x2c>
 802b272:	6063      	str	r3, [r4, #4]
 802b274:	6014      	str	r4, [r2, #0]
 802b276:	4628      	mov	r0, r5
 802b278:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b27c:	f7ff bce4 	b.w	802ac48 <__malloc_unlock>
 802b280:	42a3      	cmp	r3, r4
 802b282:	d908      	bls.n	802b296 <_free_r+0x42>
 802b284:	6820      	ldr	r0, [r4, #0]
 802b286:	1821      	adds	r1, r4, r0
 802b288:	428b      	cmp	r3, r1
 802b28a:	bf01      	itttt	eq
 802b28c:	6819      	ldreq	r1, [r3, #0]
 802b28e:	685b      	ldreq	r3, [r3, #4]
 802b290:	1809      	addeq	r1, r1, r0
 802b292:	6021      	streq	r1, [r4, #0]
 802b294:	e7ed      	b.n	802b272 <_free_r+0x1e>
 802b296:	461a      	mov	r2, r3
 802b298:	685b      	ldr	r3, [r3, #4]
 802b29a:	b10b      	cbz	r3, 802b2a0 <_free_r+0x4c>
 802b29c:	42a3      	cmp	r3, r4
 802b29e:	d9fa      	bls.n	802b296 <_free_r+0x42>
 802b2a0:	6811      	ldr	r1, [r2, #0]
 802b2a2:	1850      	adds	r0, r2, r1
 802b2a4:	42a0      	cmp	r0, r4
 802b2a6:	d10b      	bne.n	802b2c0 <_free_r+0x6c>
 802b2a8:	6820      	ldr	r0, [r4, #0]
 802b2aa:	4401      	add	r1, r0
 802b2ac:	1850      	adds	r0, r2, r1
 802b2ae:	4283      	cmp	r3, r0
 802b2b0:	6011      	str	r1, [r2, #0]
 802b2b2:	d1e0      	bne.n	802b276 <_free_r+0x22>
 802b2b4:	6818      	ldr	r0, [r3, #0]
 802b2b6:	685b      	ldr	r3, [r3, #4]
 802b2b8:	6053      	str	r3, [r2, #4]
 802b2ba:	4408      	add	r0, r1
 802b2bc:	6010      	str	r0, [r2, #0]
 802b2be:	e7da      	b.n	802b276 <_free_r+0x22>
 802b2c0:	d902      	bls.n	802b2c8 <_free_r+0x74>
 802b2c2:	230c      	movs	r3, #12
 802b2c4:	602b      	str	r3, [r5, #0]
 802b2c6:	e7d6      	b.n	802b276 <_free_r+0x22>
 802b2c8:	6820      	ldr	r0, [r4, #0]
 802b2ca:	1821      	adds	r1, r4, r0
 802b2cc:	428b      	cmp	r3, r1
 802b2ce:	bf04      	itt	eq
 802b2d0:	6819      	ldreq	r1, [r3, #0]
 802b2d2:	685b      	ldreq	r3, [r3, #4]
 802b2d4:	6063      	str	r3, [r4, #4]
 802b2d6:	bf04      	itt	eq
 802b2d8:	1809      	addeq	r1, r1, r0
 802b2da:	6021      	streq	r1, [r4, #0]
 802b2dc:	6054      	str	r4, [r2, #4]
 802b2de:	e7ca      	b.n	802b276 <_free_r+0x22>
 802b2e0:	bd38      	pop	{r3, r4, r5, pc}
 802b2e2:	bf00      	nop
 802b2e4:	20003f90 	.word	0x20003f90

0802b2e8 <__ssputs_r>:
 802b2e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b2ec:	688e      	ldr	r6, [r1, #8]
 802b2ee:	461f      	mov	r7, r3
 802b2f0:	42be      	cmp	r6, r7
 802b2f2:	680b      	ldr	r3, [r1, #0]
 802b2f4:	4682      	mov	sl, r0
 802b2f6:	460c      	mov	r4, r1
 802b2f8:	4690      	mov	r8, r2
 802b2fa:	d82c      	bhi.n	802b356 <__ssputs_r+0x6e>
 802b2fc:	898a      	ldrh	r2, [r1, #12]
 802b2fe:	f412 6f90 	tst.w	r2, #1152	; 0x480
 802b302:	d026      	beq.n	802b352 <__ssputs_r+0x6a>
 802b304:	6965      	ldr	r5, [r4, #20]
 802b306:	6909      	ldr	r1, [r1, #16]
 802b308:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802b30c:	eba3 0901 	sub.w	r9, r3, r1
 802b310:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802b314:	1c7b      	adds	r3, r7, #1
 802b316:	444b      	add	r3, r9
 802b318:	106d      	asrs	r5, r5, #1
 802b31a:	429d      	cmp	r5, r3
 802b31c:	bf38      	it	cc
 802b31e:	461d      	movcc	r5, r3
 802b320:	0553      	lsls	r3, r2, #21
 802b322:	d527      	bpl.n	802b374 <__ssputs_r+0x8c>
 802b324:	4629      	mov	r1, r5
 802b326:	f7ff fc09 	bl	802ab3c <_malloc_r>
 802b32a:	4606      	mov	r6, r0
 802b32c:	b360      	cbz	r0, 802b388 <__ssputs_r+0xa0>
 802b32e:	6921      	ldr	r1, [r4, #16]
 802b330:	464a      	mov	r2, r9
 802b332:	f7ff ff80 	bl	802b236 <memcpy>
 802b336:	89a3      	ldrh	r3, [r4, #12]
 802b338:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802b33c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802b340:	81a3      	strh	r3, [r4, #12]
 802b342:	6126      	str	r6, [r4, #16]
 802b344:	6165      	str	r5, [r4, #20]
 802b346:	444e      	add	r6, r9
 802b348:	eba5 0509 	sub.w	r5, r5, r9
 802b34c:	6026      	str	r6, [r4, #0]
 802b34e:	60a5      	str	r5, [r4, #8]
 802b350:	463e      	mov	r6, r7
 802b352:	42be      	cmp	r6, r7
 802b354:	d900      	bls.n	802b358 <__ssputs_r+0x70>
 802b356:	463e      	mov	r6, r7
 802b358:	6820      	ldr	r0, [r4, #0]
 802b35a:	4632      	mov	r2, r6
 802b35c:	4641      	mov	r1, r8
 802b35e:	f7ff feb1 	bl	802b0c4 <memmove>
 802b362:	68a3      	ldr	r3, [r4, #8]
 802b364:	1b9b      	subs	r3, r3, r6
 802b366:	60a3      	str	r3, [r4, #8]
 802b368:	6823      	ldr	r3, [r4, #0]
 802b36a:	4433      	add	r3, r6
 802b36c:	6023      	str	r3, [r4, #0]
 802b36e:	2000      	movs	r0, #0
 802b370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b374:	462a      	mov	r2, r5
 802b376:	f000 fd0f 	bl	802bd98 <_realloc_r>
 802b37a:	4606      	mov	r6, r0
 802b37c:	2800      	cmp	r0, #0
 802b37e:	d1e0      	bne.n	802b342 <__ssputs_r+0x5a>
 802b380:	6921      	ldr	r1, [r4, #16]
 802b382:	4650      	mov	r0, sl
 802b384:	f7ff ff66 	bl	802b254 <_free_r>
 802b388:	230c      	movs	r3, #12
 802b38a:	f8ca 3000 	str.w	r3, [sl]
 802b38e:	89a3      	ldrh	r3, [r4, #12]
 802b390:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b394:	81a3      	strh	r3, [r4, #12]
 802b396:	f04f 30ff 	mov.w	r0, #4294967295
 802b39a:	e7e9      	b.n	802b370 <__ssputs_r+0x88>

0802b39c <_svfiprintf_r>:
 802b39c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b3a0:	4698      	mov	r8, r3
 802b3a2:	898b      	ldrh	r3, [r1, #12]
 802b3a4:	061b      	lsls	r3, r3, #24
 802b3a6:	b09d      	sub	sp, #116	; 0x74
 802b3a8:	4607      	mov	r7, r0
 802b3aa:	460d      	mov	r5, r1
 802b3ac:	4614      	mov	r4, r2
 802b3ae:	d50e      	bpl.n	802b3ce <_svfiprintf_r+0x32>
 802b3b0:	690b      	ldr	r3, [r1, #16]
 802b3b2:	b963      	cbnz	r3, 802b3ce <_svfiprintf_r+0x32>
 802b3b4:	2140      	movs	r1, #64	; 0x40
 802b3b6:	f7ff fbc1 	bl	802ab3c <_malloc_r>
 802b3ba:	6028      	str	r0, [r5, #0]
 802b3bc:	6128      	str	r0, [r5, #16]
 802b3be:	b920      	cbnz	r0, 802b3ca <_svfiprintf_r+0x2e>
 802b3c0:	230c      	movs	r3, #12
 802b3c2:	603b      	str	r3, [r7, #0]
 802b3c4:	f04f 30ff 	mov.w	r0, #4294967295
 802b3c8:	e0d0      	b.n	802b56c <_svfiprintf_r+0x1d0>
 802b3ca:	2340      	movs	r3, #64	; 0x40
 802b3cc:	616b      	str	r3, [r5, #20]
 802b3ce:	2300      	movs	r3, #0
 802b3d0:	9309      	str	r3, [sp, #36]	; 0x24
 802b3d2:	2320      	movs	r3, #32
 802b3d4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b3d8:	f8cd 800c 	str.w	r8, [sp, #12]
 802b3dc:	2330      	movs	r3, #48	; 0x30
 802b3de:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 802b584 <_svfiprintf_r+0x1e8>
 802b3e2:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b3e6:	f04f 0901 	mov.w	r9, #1
 802b3ea:	4623      	mov	r3, r4
 802b3ec:	469a      	mov	sl, r3
 802b3ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b3f2:	b10a      	cbz	r2, 802b3f8 <_svfiprintf_r+0x5c>
 802b3f4:	2a25      	cmp	r2, #37	; 0x25
 802b3f6:	d1f9      	bne.n	802b3ec <_svfiprintf_r+0x50>
 802b3f8:	ebba 0b04 	subs.w	fp, sl, r4
 802b3fc:	d00b      	beq.n	802b416 <_svfiprintf_r+0x7a>
 802b3fe:	465b      	mov	r3, fp
 802b400:	4622      	mov	r2, r4
 802b402:	4629      	mov	r1, r5
 802b404:	4638      	mov	r0, r7
 802b406:	f7ff ff6f 	bl	802b2e8 <__ssputs_r>
 802b40a:	3001      	adds	r0, #1
 802b40c:	f000 80a9 	beq.w	802b562 <_svfiprintf_r+0x1c6>
 802b410:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b412:	445a      	add	r2, fp
 802b414:	9209      	str	r2, [sp, #36]	; 0x24
 802b416:	f89a 3000 	ldrb.w	r3, [sl]
 802b41a:	2b00      	cmp	r3, #0
 802b41c:	f000 80a1 	beq.w	802b562 <_svfiprintf_r+0x1c6>
 802b420:	2300      	movs	r3, #0
 802b422:	f04f 32ff 	mov.w	r2, #4294967295
 802b426:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b42a:	f10a 0a01 	add.w	sl, sl, #1
 802b42e:	9304      	str	r3, [sp, #16]
 802b430:	9307      	str	r3, [sp, #28]
 802b432:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b436:	931a      	str	r3, [sp, #104]	; 0x68
 802b438:	4654      	mov	r4, sl
 802b43a:	2205      	movs	r2, #5
 802b43c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b440:	4850      	ldr	r0, [pc, #320]	; (802b584 <_svfiprintf_r+0x1e8>)
 802b442:	f7d4 fe9d 	bl	8000180 <memchr>
 802b446:	9a04      	ldr	r2, [sp, #16]
 802b448:	b9d8      	cbnz	r0, 802b482 <_svfiprintf_r+0xe6>
 802b44a:	06d0      	lsls	r0, r2, #27
 802b44c:	bf44      	itt	mi
 802b44e:	2320      	movmi	r3, #32
 802b450:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b454:	0711      	lsls	r1, r2, #28
 802b456:	bf44      	itt	mi
 802b458:	232b      	movmi	r3, #43	; 0x2b
 802b45a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b45e:	f89a 3000 	ldrb.w	r3, [sl]
 802b462:	2b2a      	cmp	r3, #42	; 0x2a
 802b464:	d015      	beq.n	802b492 <_svfiprintf_r+0xf6>
 802b466:	9a07      	ldr	r2, [sp, #28]
 802b468:	4654      	mov	r4, sl
 802b46a:	2000      	movs	r0, #0
 802b46c:	f04f 0c0a 	mov.w	ip, #10
 802b470:	4621      	mov	r1, r4
 802b472:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b476:	3b30      	subs	r3, #48	; 0x30
 802b478:	2b09      	cmp	r3, #9
 802b47a:	d94d      	bls.n	802b518 <_svfiprintf_r+0x17c>
 802b47c:	b1b0      	cbz	r0, 802b4ac <_svfiprintf_r+0x110>
 802b47e:	9207      	str	r2, [sp, #28]
 802b480:	e014      	b.n	802b4ac <_svfiprintf_r+0x110>
 802b482:	eba0 0308 	sub.w	r3, r0, r8
 802b486:	fa09 f303 	lsl.w	r3, r9, r3
 802b48a:	4313      	orrs	r3, r2
 802b48c:	9304      	str	r3, [sp, #16]
 802b48e:	46a2      	mov	sl, r4
 802b490:	e7d2      	b.n	802b438 <_svfiprintf_r+0x9c>
 802b492:	9b03      	ldr	r3, [sp, #12]
 802b494:	1d19      	adds	r1, r3, #4
 802b496:	681b      	ldr	r3, [r3, #0]
 802b498:	9103      	str	r1, [sp, #12]
 802b49a:	2b00      	cmp	r3, #0
 802b49c:	bfbb      	ittet	lt
 802b49e:	425b      	neglt	r3, r3
 802b4a0:	f042 0202 	orrlt.w	r2, r2, #2
 802b4a4:	9307      	strge	r3, [sp, #28]
 802b4a6:	9307      	strlt	r3, [sp, #28]
 802b4a8:	bfb8      	it	lt
 802b4aa:	9204      	strlt	r2, [sp, #16]
 802b4ac:	7823      	ldrb	r3, [r4, #0]
 802b4ae:	2b2e      	cmp	r3, #46	; 0x2e
 802b4b0:	d10c      	bne.n	802b4cc <_svfiprintf_r+0x130>
 802b4b2:	7863      	ldrb	r3, [r4, #1]
 802b4b4:	2b2a      	cmp	r3, #42	; 0x2a
 802b4b6:	d134      	bne.n	802b522 <_svfiprintf_r+0x186>
 802b4b8:	9b03      	ldr	r3, [sp, #12]
 802b4ba:	1d1a      	adds	r2, r3, #4
 802b4bc:	681b      	ldr	r3, [r3, #0]
 802b4be:	9203      	str	r2, [sp, #12]
 802b4c0:	2b00      	cmp	r3, #0
 802b4c2:	bfb8      	it	lt
 802b4c4:	f04f 33ff 	movlt.w	r3, #4294967295
 802b4c8:	3402      	adds	r4, #2
 802b4ca:	9305      	str	r3, [sp, #20]
 802b4cc:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 802b588 <_svfiprintf_r+0x1ec>
 802b4d0:	7821      	ldrb	r1, [r4, #0]
 802b4d2:	2203      	movs	r2, #3
 802b4d4:	4650      	mov	r0, sl
 802b4d6:	f7d4 fe53 	bl	8000180 <memchr>
 802b4da:	b138      	cbz	r0, 802b4ec <_svfiprintf_r+0x150>
 802b4dc:	9b04      	ldr	r3, [sp, #16]
 802b4de:	eba0 000a 	sub.w	r0, r0, sl
 802b4e2:	2240      	movs	r2, #64	; 0x40
 802b4e4:	4082      	lsls	r2, r0
 802b4e6:	4313      	orrs	r3, r2
 802b4e8:	3401      	adds	r4, #1
 802b4ea:	9304      	str	r3, [sp, #16]
 802b4ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b4f0:	4826      	ldr	r0, [pc, #152]	; (802b58c <_svfiprintf_r+0x1f0>)
 802b4f2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b4f6:	2206      	movs	r2, #6
 802b4f8:	f7d4 fe42 	bl	8000180 <memchr>
 802b4fc:	2800      	cmp	r0, #0
 802b4fe:	d038      	beq.n	802b572 <_svfiprintf_r+0x1d6>
 802b500:	4b23      	ldr	r3, [pc, #140]	; (802b590 <_svfiprintf_r+0x1f4>)
 802b502:	bb1b      	cbnz	r3, 802b54c <_svfiprintf_r+0x1b0>
 802b504:	9b03      	ldr	r3, [sp, #12]
 802b506:	3307      	adds	r3, #7
 802b508:	f023 0307 	bic.w	r3, r3, #7
 802b50c:	3308      	adds	r3, #8
 802b50e:	9303      	str	r3, [sp, #12]
 802b510:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b512:	4433      	add	r3, r6
 802b514:	9309      	str	r3, [sp, #36]	; 0x24
 802b516:	e768      	b.n	802b3ea <_svfiprintf_r+0x4e>
 802b518:	fb0c 3202 	mla	r2, ip, r2, r3
 802b51c:	460c      	mov	r4, r1
 802b51e:	2001      	movs	r0, #1
 802b520:	e7a6      	b.n	802b470 <_svfiprintf_r+0xd4>
 802b522:	2300      	movs	r3, #0
 802b524:	3401      	adds	r4, #1
 802b526:	9305      	str	r3, [sp, #20]
 802b528:	4619      	mov	r1, r3
 802b52a:	f04f 0c0a 	mov.w	ip, #10
 802b52e:	4620      	mov	r0, r4
 802b530:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b534:	3a30      	subs	r2, #48	; 0x30
 802b536:	2a09      	cmp	r2, #9
 802b538:	d903      	bls.n	802b542 <_svfiprintf_r+0x1a6>
 802b53a:	2b00      	cmp	r3, #0
 802b53c:	d0c6      	beq.n	802b4cc <_svfiprintf_r+0x130>
 802b53e:	9105      	str	r1, [sp, #20]
 802b540:	e7c4      	b.n	802b4cc <_svfiprintf_r+0x130>
 802b542:	fb0c 2101 	mla	r1, ip, r1, r2
 802b546:	4604      	mov	r4, r0
 802b548:	2301      	movs	r3, #1
 802b54a:	e7f0      	b.n	802b52e <_svfiprintf_r+0x192>
 802b54c:	ab03      	add	r3, sp, #12
 802b54e:	9300      	str	r3, [sp, #0]
 802b550:	462a      	mov	r2, r5
 802b552:	4b10      	ldr	r3, [pc, #64]	; (802b594 <_svfiprintf_r+0x1f8>)
 802b554:	a904      	add	r1, sp, #16
 802b556:	4638      	mov	r0, r7
 802b558:	f3af 8000 	nop.w
 802b55c:	1c42      	adds	r2, r0, #1
 802b55e:	4606      	mov	r6, r0
 802b560:	d1d6      	bne.n	802b510 <_svfiprintf_r+0x174>
 802b562:	89ab      	ldrh	r3, [r5, #12]
 802b564:	065b      	lsls	r3, r3, #25
 802b566:	f53f af2d 	bmi.w	802b3c4 <_svfiprintf_r+0x28>
 802b56a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b56c:	b01d      	add	sp, #116	; 0x74
 802b56e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b572:	ab03      	add	r3, sp, #12
 802b574:	9300      	str	r3, [sp, #0]
 802b576:	462a      	mov	r2, r5
 802b578:	4b06      	ldr	r3, [pc, #24]	; (802b594 <_svfiprintf_r+0x1f8>)
 802b57a:	a904      	add	r1, sp, #16
 802b57c:	4638      	mov	r0, r7
 802b57e:	f000 f9bb 	bl	802b8f8 <_printf_i>
 802b582:	e7eb      	b.n	802b55c <_svfiprintf_r+0x1c0>
 802b584:	08031ac4 	.word	0x08031ac4
 802b588:	08031aca 	.word	0x08031aca
 802b58c:	08031ace 	.word	0x08031ace
 802b590:	00000000 	.word	0x00000000
 802b594:	0802b2e9 	.word	0x0802b2e9

0802b598 <__sfputc_r>:
 802b598:	6893      	ldr	r3, [r2, #8]
 802b59a:	3b01      	subs	r3, #1
 802b59c:	2b00      	cmp	r3, #0
 802b59e:	b410      	push	{r4}
 802b5a0:	6093      	str	r3, [r2, #8]
 802b5a2:	da07      	bge.n	802b5b4 <__sfputc_r+0x1c>
 802b5a4:	6994      	ldr	r4, [r2, #24]
 802b5a6:	42a3      	cmp	r3, r4
 802b5a8:	db01      	blt.n	802b5ae <__sfputc_r+0x16>
 802b5aa:	290a      	cmp	r1, #10
 802b5ac:	d102      	bne.n	802b5b4 <__sfputc_r+0x1c>
 802b5ae:	bc10      	pop	{r4}
 802b5b0:	f7ff bce3 	b.w	802af7a <__swbuf_r>
 802b5b4:	6813      	ldr	r3, [r2, #0]
 802b5b6:	1c58      	adds	r0, r3, #1
 802b5b8:	6010      	str	r0, [r2, #0]
 802b5ba:	7019      	strb	r1, [r3, #0]
 802b5bc:	4608      	mov	r0, r1
 802b5be:	bc10      	pop	{r4}
 802b5c0:	4770      	bx	lr

0802b5c2 <__sfputs_r>:
 802b5c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b5c4:	4606      	mov	r6, r0
 802b5c6:	460f      	mov	r7, r1
 802b5c8:	4614      	mov	r4, r2
 802b5ca:	18d5      	adds	r5, r2, r3
 802b5cc:	42ac      	cmp	r4, r5
 802b5ce:	d101      	bne.n	802b5d4 <__sfputs_r+0x12>
 802b5d0:	2000      	movs	r0, #0
 802b5d2:	e007      	b.n	802b5e4 <__sfputs_r+0x22>
 802b5d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b5d8:	463a      	mov	r2, r7
 802b5da:	4630      	mov	r0, r6
 802b5dc:	f7ff ffdc 	bl	802b598 <__sfputc_r>
 802b5e0:	1c43      	adds	r3, r0, #1
 802b5e2:	d1f3      	bne.n	802b5cc <__sfputs_r+0xa>
 802b5e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b5e8 <_vfiprintf_r>:
 802b5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b5ec:	460d      	mov	r5, r1
 802b5ee:	b09d      	sub	sp, #116	; 0x74
 802b5f0:	4614      	mov	r4, r2
 802b5f2:	4698      	mov	r8, r3
 802b5f4:	4606      	mov	r6, r0
 802b5f6:	b118      	cbz	r0, 802b600 <_vfiprintf_r+0x18>
 802b5f8:	6a03      	ldr	r3, [r0, #32]
 802b5fa:	b90b      	cbnz	r3, 802b600 <_vfiprintf_r+0x18>
 802b5fc:	f7ff fbb6 	bl	802ad6c <__sinit>
 802b600:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b602:	07d9      	lsls	r1, r3, #31
 802b604:	d405      	bmi.n	802b612 <_vfiprintf_r+0x2a>
 802b606:	89ab      	ldrh	r3, [r5, #12]
 802b608:	059a      	lsls	r2, r3, #22
 802b60a:	d402      	bmi.n	802b612 <_vfiprintf_r+0x2a>
 802b60c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b60e:	f7ff fe08 	bl	802b222 <__retarget_lock_acquire_recursive>
 802b612:	89ab      	ldrh	r3, [r5, #12]
 802b614:	071b      	lsls	r3, r3, #28
 802b616:	d501      	bpl.n	802b61c <_vfiprintf_r+0x34>
 802b618:	692b      	ldr	r3, [r5, #16]
 802b61a:	b99b      	cbnz	r3, 802b644 <_vfiprintf_r+0x5c>
 802b61c:	4629      	mov	r1, r5
 802b61e:	4630      	mov	r0, r6
 802b620:	f7ff fce8 	bl	802aff4 <__swsetup_r>
 802b624:	b170      	cbz	r0, 802b644 <_vfiprintf_r+0x5c>
 802b626:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b628:	07dc      	lsls	r4, r3, #31
 802b62a:	d504      	bpl.n	802b636 <_vfiprintf_r+0x4e>
 802b62c:	f04f 30ff 	mov.w	r0, #4294967295
 802b630:	b01d      	add	sp, #116	; 0x74
 802b632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b636:	89ab      	ldrh	r3, [r5, #12]
 802b638:	0598      	lsls	r0, r3, #22
 802b63a:	d4f7      	bmi.n	802b62c <_vfiprintf_r+0x44>
 802b63c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b63e:	f7ff fdf1 	bl	802b224 <__retarget_lock_release_recursive>
 802b642:	e7f3      	b.n	802b62c <_vfiprintf_r+0x44>
 802b644:	2300      	movs	r3, #0
 802b646:	9309      	str	r3, [sp, #36]	; 0x24
 802b648:	2320      	movs	r3, #32
 802b64a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b64e:	f8cd 800c 	str.w	r8, [sp, #12]
 802b652:	2330      	movs	r3, #48	; 0x30
 802b654:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b808 <_vfiprintf_r+0x220>
 802b658:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b65c:	f04f 0901 	mov.w	r9, #1
 802b660:	4623      	mov	r3, r4
 802b662:	469a      	mov	sl, r3
 802b664:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b668:	b10a      	cbz	r2, 802b66e <_vfiprintf_r+0x86>
 802b66a:	2a25      	cmp	r2, #37	; 0x25
 802b66c:	d1f9      	bne.n	802b662 <_vfiprintf_r+0x7a>
 802b66e:	ebba 0b04 	subs.w	fp, sl, r4
 802b672:	d00b      	beq.n	802b68c <_vfiprintf_r+0xa4>
 802b674:	465b      	mov	r3, fp
 802b676:	4622      	mov	r2, r4
 802b678:	4629      	mov	r1, r5
 802b67a:	4630      	mov	r0, r6
 802b67c:	f7ff ffa1 	bl	802b5c2 <__sfputs_r>
 802b680:	3001      	adds	r0, #1
 802b682:	f000 80a9 	beq.w	802b7d8 <_vfiprintf_r+0x1f0>
 802b686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b688:	445a      	add	r2, fp
 802b68a:	9209      	str	r2, [sp, #36]	; 0x24
 802b68c:	f89a 3000 	ldrb.w	r3, [sl]
 802b690:	2b00      	cmp	r3, #0
 802b692:	f000 80a1 	beq.w	802b7d8 <_vfiprintf_r+0x1f0>
 802b696:	2300      	movs	r3, #0
 802b698:	f04f 32ff 	mov.w	r2, #4294967295
 802b69c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b6a0:	f10a 0a01 	add.w	sl, sl, #1
 802b6a4:	9304      	str	r3, [sp, #16]
 802b6a6:	9307      	str	r3, [sp, #28]
 802b6a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b6ac:	931a      	str	r3, [sp, #104]	; 0x68
 802b6ae:	4654      	mov	r4, sl
 802b6b0:	2205      	movs	r2, #5
 802b6b2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b6b6:	4854      	ldr	r0, [pc, #336]	; (802b808 <_vfiprintf_r+0x220>)
 802b6b8:	f7d4 fd62 	bl	8000180 <memchr>
 802b6bc:	9a04      	ldr	r2, [sp, #16]
 802b6be:	b9d8      	cbnz	r0, 802b6f8 <_vfiprintf_r+0x110>
 802b6c0:	06d1      	lsls	r1, r2, #27
 802b6c2:	bf44      	itt	mi
 802b6c4:	2320      	movmi	r3, #32
 802b6c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b6ca:	0713      	lsls	r3, r2, #28
 802b6cc:	bf44      	itt	mi
 802b6ce:	232b      	movmi	r3, #43	; 0x2b
 802b6d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b6d4:	f89a 3000 	ldrb.w	r3, [sl]
 802b6d8:	2b2a      	cmp	r3, #42	; 0x2a
 802b6da:	d015      	beq.n	802b708 <_vfiprintf_r+0x120>
 802b6dc:	9a07      	ldr	r2, [sp, #28]
 802b6de:	4654      	mov	r4, sl
 802b6e0:	2000      	movs	r0, #0
 802b6e2:	f04f 0c0a 	mov.w	ip, #10
 802b6e6:	4621      	mov	r1, r4
 802b6e8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b6ec:	3b30      	subs	r3, #48	; 0x30
 802b6ee:	2b09      	cmp	r3, #9
 802b6f0:	d94d      	bls.n	802b78e <_vfiprintf_r+0x1a6>
 802b6f2:	b1b0      	cbz	r0, 802b722 <_vfiprintf_r+0x13a>
 802b6f4:	9207      	str	r2, [sp, #28]
 802b6f6:	e014      	b.n	802b722 <_vfiprintf_r+0x13a>
 802b6f8:	eba0 0308 	sub.w	r3, r0, r8
 802b6fc:	fa09 f303 	lsl.w	r3, r9, r3
 802b700:	4313      	orrs	r3, r2
 802b702:	9304      	str	r3, [sp, #16]
 802b704:	46a2      	mov	sl, r4
 802b706:	e7d2      	b.n	802b6ae <_vfiprintf_r+0xc6>
 802b708:	9b03      	ldr	r3, [sp, #12]
 802b70a:	1d19      	adds	r1, r3, #4
 802b70c:	681b      	ldr	r3, [r3, #0]
 802b70e:	9103      	str	r1, [sp, #12]
 802b710:	2b00      	cmp	r3, #0
 802b712:	bfbb      	ittet	lt
 802b714:	425b      	neglt	r3, r3
 802b716:	f042 0202 	orrlt.w	r2, r2, #2
 802b71a:	9307      	strge	r3, [sp, #28]
 802b71c:	9307      	strlt	r3, [sp, #28]
 802b71e:	bfb8      	it	lt
 802b720:	9204      	strlt	r2, [sp, #16]
 802b722:	7823      	ldrb	r3, [r4, #0]
 802b724:	2b2e      	cmp	r3, #46	; 0x2e
 802b726:	d10c      	bne.n	802b742 <_vfiprintf_r+0x15a>
 802b728:	7863      	ldrb	r3, [r4, #1]
 802b72a:	2b2a      	cmp	r3, #42	; 0x2a
 802b72c:	d134      	bne.n	802b798 <_vfiprintf_r+0x1b0>
 802b72e:	9b03      	ldr	r3, [sp, #12]
 802b730:	1d1a      	adds	r2, r3, #4
 802b732:	681b      	ldr	r3, [r3, #0]
 802b734:	9203      	str	r2, [sp, #12]
 802b736:	2b00      	cmp	r3, #0
 802b738:	bfb8      	it	lt
 802b73a:	f04f 33ff 	movlt.w	r3, #4294967295
 802b73e:	3402      	adds	r4, #2
 802b740:	9305      	str	r3, [sp, #20]
 802b742:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 802b80c <_vfiprintf_r+0x224>
 802b746:	7821      	ldrb	r1, [r4, #0]
 802b748:	2203      	movs	r2, #3
 802b74a:	4650      	mov	r0, sl
 802b74c:	f7d4 fd18 	bl	8000180 <memchr>
 802b750:	b138      	cbz	r0, 802b762 <_vfiprintf_r+0x17a>
 802b752:	9b04      	ldr	r3, [sp, #16]
 802b754:	eba0 000a 	sub.w	r0, r0, sl
 802b758:	2240      	movs	r2, #64	; 0x40
 802b75a:	4082      	lsls	r2, r0
 802b75c:	4313      	orrs	r3, r2
 802b75e:	3401      	adds	r4, #1
 802b760:	9304      	str	r3, [sp, #16]
 802b762:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b766:	482a      	ldr	r0, [pc, #168]	; (802b810 <_vfiprintf_r+0x228>)
 802b768:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b76c:	2206      	movs	r2, #6
 802b76e:	f7d4 fd07 	bl	8000180 <memchr>
 802b772:	2800      	cmp	r0, #0
 802b774:	d03f      	beq.n	802b7f6 <_vfiprintf_r+0x20e>
 802b776:	4b27      	ldr	r3, [pc, #156]	; (802b814 <_vfiprintf_r+0x22c>)
 802b778:	bb1b      	cbnz	r3, 802b7c2 <_vfiprintf_r+0x1da>
 802b77a:	9b03      	ldr	r3, [sp, #12]
 802b77c:	3307      	adds	r3, #7
 802b77e:	f023 0307 	bic.w	r3, r3, #7
 802b782:	3308      	adds	r3, #8
 802b784:	9303      	str	r3, [sp, #12]
 802b786:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b788:	443b      	add	r3, r7
 802b78a:	9309      	str	r3, [sp, #36]	; 0x24
 802b78c:	e768      	b.n	802b660 <_vfiprintf_r+0x78>
 802b78e:	fb0c 3202 	mla	r2, ip, r2, r3
 802b792:	460c      	mov	r4, r1
 802b794:	2001      	movs	r0, #1
 802b796:	e7a6      	b.n	802b6e6 <_vfiprintf_r+0xfe>
 802b798:	2300      	movs	r3, #0
 802b79a:	3401      	adds	r4, #1
 802b79c:	9305      	str	r3, [sp, #20]
 802b79e:	4619      	mov	r1, r3
 802b7a0:	f04f 0c0a 	mov.w	ip, #10
 802b7a4:	4620      	mov	r0, r4
 802b7a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b7aa:	3a30      	subs	r2, #48	; 0x30
 802b7ac:	2a09      	cmp	r2, #9
 802b7ae:	d903      	bls.n	802b7b8 <_vfiprintf_r+0x1d0>
 802b7b0:	2b00      	cmp	r3, #0
 802b7b2:	d0c6      	beq.n	802b742 <_vfiprintf_r+0x15a>
 802b7b4:	9105      	str	r1, [sp, #20]
 802b7b6:	e7c4      	b.n	802b742 <_vfiprintf_r+0x15a>
 802b7b8:	fb0c 2101 	mla	r1, ip, r1, r2
 802b7bc:	4604      	mov	r4, r0
 802b7be:	2301      	movs	r3, #1
 802b7c0:	e7f0      	b.n	802b7a4 <_vfiprintf_r+0x1bc>
 802b7c2:	ab03      	add	r3, sp, #12
 802b7c4:	9300      	str	r3, [sp, #0]
 802b7c6:	462a      	mov	r2, r5
 802b7c8:	4b13      	ldr	r3, [pc, #76]	; (802b818 <_vfiprintf_r+0x230>)
 802b7ca:	a904      	add	r1, sp, #16
 802b7cc:	4630      	mov	r0, r6
 802b7ce:	f3af 8000 	nop.w
 802b7d2:	4607      	mov	r7, r0
 802b7d4:	1c78      	adds	r0, r7, #1
 802b7d6:	d1d6      	bne.n	802b786 <_vfiprintf_r+0x19e>
 802b7d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b7da:	07d9      	lsls	r1, r3, #31
 802b7dc:	d405      	bmi.n	802b7ea <_vfiprintf_r+0x202>
 802b7de:	89ab      	ldrh	r3, [r5, #12]
 802b7e0:	059a      	lsls	r2, r3, #22
 802b7e2:	d402      	bmi.n	802b7ea <_vfiprintf_r+0x202>
 802b7e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b7e6:	f7ff fd1d 	bl	802b224 <__retarget_lock_release_recursive>
 802b7ea:	89ab      	ldrh	r3, [r5, #12]
 802b7ec:	065b      	lsls	r3, r3, #25
 802b7ee:	f53f af1d 	bmi.w	802b62c <_vfiprintf_r+0x44>
 802b7f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b7f4:	e71c      	b.n	802b630 <_vfiprintf_r+0x48>
 802b7f6:	ab03      	add	r3, sp, #12
 802b7f8:	9300      	str	r3, [sp, #0]
 802b7fa:	462a      	mov	r2, r5
 802b7fc:	4b06      	ldr	r3, [pc, #24]	; (802b818 <_vfiprintf_r+0x230>)
 802b7fe:	a904      	add	r1, sp, #16
 802b800:	4630      	mov	r0, r6
 802b802:	f000 f879 	bl	802b8f8 <_printf_i>
 802b806:	e7e4      	b.n	802b7d2 <_vfiprintf_r+0x1ea>
 802b808:	08031ac4 	.word	0x08031ac4
 802b80c:	08031aca 	.word	0x08031aca
 802b810:	08031ace 	.word	0x08031ace
 802b814:	00000000 	.word	0x00000000
 802b818:	0802b5c3 	.word	0x0802b5c3

0802b81c <_printf_common>:
 802b81c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b820:	4616      	mov	r6, r2
 802b822:	4699      	mov	r9, r3
 802b824:	688a      	ldr	r2, [r1, #8]
 802b826:	690b      	ldr	r3, [r1, #16]
 802b828:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b82c:	4293      	cmp	r3, r2
 802b82e:	bfb8      	it	lt
 802b830:	4613      	movlt	r3, r2
 802b832:	6033      	str	r3, [r6, #0]
 802b834:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b838:	4607      	mov	r7, r0
 802b83a:	460c      	mov	r4, r1
 802b83c:	b10a      	cbz	r2, 802b842 <_printf_common+0x26>
 802b83e:	3301      	adds	r3, #1
 802b840:	6033      	str	r3, [r6, #0]
 802b842:	6823      	ldr	r3, [r4, #0]
 802b844:	0699      	lsls	r1, r3, #26
 802b846:	bf42      	ittt	mi
 802b848:	6833      	ldrmi	r3, [r6, #0]
 802b84a:	3302      	addmi	r3, #2
 802b84c:	6033      	strmi	r3, [r6, #0]
 802b84e:	6825      	ldr	r5, [r4, #0]
 802b850:	f015 0506 	ands.w	r5, r5, #6
 802b854:	d106      	bne.n	802b864 <_printf_common+0x48>
 802b856:	f104 0a19 	add.w	sl, r4, #25
 802b85a:	68e3      	ldr	r3, [r4, #12]
 802b85c:	6832      	ldr	r2, [r6, #0]
 802b85e:	1a9b      	subs	r3, r3, r2
 802b860:	42ab      	cmp	r3, r5
 802b862:	dc26      	bgt.n	802b8b2 <_printf_common+0x96>
 802b864:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b868:	1e13      	subs	r3, r2, #0
 802b86a:	6822      	ldr	r2, [r4, #0]
 802b86c:	bf18      	it	ne
 802b86e:	2301      	movne	r3, #1
 802b870:	0692      	lsls	r2, r2, #26
 802b872:	d42b      	bmi.n	802b8cc <_printf_common+0xb0>
 802b874:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b878:	4649      	mov	r1, r9
 802b87a:	4638      	mov	r0, r7
 802b87c:	47c0      	blx	r8
 802b87e:	3001      	adds	r0, #1
 802b880:	d01e      	beq.n	802b8c0 <_printf_common+0xa4>
 802b882:	6823      	ldr	r3, [r4, #0]
 802b884:	6922      	ldr	r2, [r4, #16]
 802b886:	f003 0306 	and.w	r3, r3, #6
 802b88a:	2b04      	cmp	r3, #4
 802b88c:	bf02      	ittt	eq
 802b88e:	68e5      	ldreq	r5, [r4, #12]
 802b890:	6833      	ldreq	r3, [r6, #0]
 802b892:	1aed      	subeq	r5, r5, r3
 802b894:	68a3      	ldr	r3, [r4, #8]
 802b896:	bf0c      	ite	eq
 802b898:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b89c:	2500      	movne	r5, #0
 802b89e:	4293      	cmp	r3, r2
 802b8a0:	bfc4      	itt	gt
 802b8a2:	1a9b      	subgt	r3, r3, r2
 802b8a4:	18ed      	addgt	r5, r5, r3
 802b8a6:	2600      	movs	r6, #0
 802b8a8:	341a      	adds	r4, #26
 802b8aa:	42b5      	cmp	r5, r6
 802b8ac:	d11a      	bne.n	802b8e4 <_printf_common+0xc8>
 802b8ae:	2000      	movs	r0, #0
 802b8b0:	e008      	b.n	802b8c4 <_printf_common+0xa8>
 802b8b2:	2301      	movs	r3, #1
 802b8b4:	4652      	mov	r2, sl
 802b8b6:	4649      	mov	r1, r9
 802b8b8:	4638      	mov	r0, r7
 802b8ba:	47c0      	blx	r8
 802b8bc:	3001      	adds	r0, #1
 802b8be:	d103      	bne.n	802b8c8 <_printf_common+0xac>
 802b8c0:	f04f 30ff 	mov.w	r0, #4294967295
 802b8c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b8c8:	3501      	adds	r5, #1
 802b8ca:	e7c6      	b.n	802b85a <_printf_common+0x3e>
 802b8cc:	18e1      	adds	r1, r4, r3
 802b8ce:	1c5a      	adds	r2, r3, #1
 802b8d0:	2030      	movs	r0, #48	; 0x30
 802b8d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b8d6:	4422      	add	r2, r4
 802b8d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b8dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b8e0:	3302      	adds	r3, #2
 802b8e2:	e7c7      	b.n	802b874 <_printf_common+0x58>
 802b8e4:	2301      	movs	r3, #1
 802b8e6:	4622      	mov	r2, r4
 802b8e8:	4649      	mov	r1, r9
 802b8ea:	4638      	mov	r0, r7
 802b8ec:	47c0      	blx	r8
 802b8ee:	3001      	adds	r0, #1
 802b8f0:	d0e6      	beq.n	802b8c0 <_printf_common+0xa4>
 802b8f2:	3601      	adds	r6, #1
 802b8f4:	e7d9      	b.n	802b8aa <_printf_common+0x8e>
	...

0802b8f8 <_printf_i>:
 802b8f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b8fc:	7e0f      	ldrb	r7, [r1, #24]
 802b8fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b900:	2f78      	cmp	r7, #120	; 0x78
 802b902:	4691      	mov	r9, r2
 802b904:	4680      	mov	r8, r0
 802b906:	460c      	mov	r4, r1
 802b908:	469a      	mov	sl, r3
 802b90a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b90e:	d807      	bhi.n	802b920 <_printf_i+0x28>
 802b910:	2f62      	cmp	r7, #98	; 0x62
 802b912:	d80a      	bhi.n	802b92a <_printf_i+0x32>
 802b914:	2f00      	cmp	r7, #0
 802b916:	f000 80d4 	beq.w	802bac2 <_printf_i+0x1ca>
 802b91a:	2f58      	cmp	r7, #88	; 0x58
 802b91c:	f000 80c0 	beq.w	802baa0 <_printf_i+0x1a8>
 802b920:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b924:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b928:	e03a      	b.n	802b9a0 <_printf_i+0xa8>
 802b92a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b92e:	2b15      	cmp	r3, #21
 802b930:	d8f6      	bhi.n	802b920 <_printf_i+0x28>
 802b932:	a101      	add	r1, pc, #4	; (adr r1, 802b938 <_printf_i+0x40>)
 802b934:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b938:	0802b991 	.word	0x0802b991
 802b93c:	0802b9a5 	.word	0x0802b9a5
 802b940:	0802b921 	.word	0x0802b921
 802b944:	0802b921 	.word	0x0802b921
 802b948:	0802b921 	.word	0x0802b921
 802b94c:	0802b921 	.word	0x0802b921
 802b950:	0802b9a5 	.word	0x0802b9a5
 802b954:	0802b921 	.word	0x0802b921
 802b958:	0802b921 	.word	0x0802b921
 802b95c:	0802b921 	.word	0x0802b921
 802b960:	0802b921 	.word	0x0802b921
 802b964:	0802baa9 	.word	0x0802baa9
 802b968:	0802b9d1 	.word	0x0802b9d1
 802b96c:	0802ba63 	.word	0x0802ba63
 802b970:	0802b921 	.word	0x0802b921
 802b974:	0802b921 	.word	0x0802b921
 802b978:	0802bacb 	.word	0x0802bacb
 802b97c:	0802b921 	.word	0x0802b921
 802b980:	0802b9d1 	.word	0x0802b9d1
 802b984:	0802b921 	.word	0x0802b921
 802b988:	0802b921 	.word	0x0802b921
 802b98c:	0802ba6b 	.word	0x0802ba6b
 802b990:	682b      	ldr	r3, [r5, #0]
 802b992:	1d1a      	adds	r2, r3, #4
 802b994:	681b      	ldr	r3, [r3, #0]
 802b996:	602a      	str	r2, [r5, #0]
 802b998:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b99c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b9a0:	2301      	movs	r3, #1
 802b9a2:	e09f      	b.n	802bae4 <_printf_i+0x1ec>
 802b9a4:	6820      	ldr	r0, [r4, #0]
 802b9a6:	682b      	ldr	r3, [r5, #0]
 802b9a8:	0607      	lsls	r7, r0, #24
 802b9aa:	f103 0104 	add.w	r1, r3, #4
 802b9ae:	6029      	str	r1, [r5, #0]
 802b9b0:	d501      	bpl.n	802b9b6 <_printf_i+0xbe>
 802b9b2:	681e      	ldr	r6, [r3, #0]
 802b9b4:	e003      	b.n	802b9be <_printf_i+0xc6>
 802b9b6:	0646      	lsls	r6, r0, #25
 802b9b8:	d5fb      	bpl.n	802b9b2 <_printf_i+0xba>
 802b9ba:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b9be:	2e00      	cmp	r6, #0
 802b9c0:	da03      	bge.n	802b9ca <_printf_i+0xd2>
 802b9c2:	232d      	movs	r3, #45	; 0x2d
 802b9c4:	4276      	negs	r6, r6
 802b9c6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b9ca:	485a      	ldr	r0, [pc, #360]	; (802bb34 <_printf_i+0x23c>)
 802b9cc:	230a      	movs	r3, #10
 802b9ce:	e012      	b.n	802b9f6 <_printf_i+0xfe>
 802b9d0:	682b      	ldr	r3, [r5, #0]
 802b9d2:	6820      	ldr	r0, [r4, #0]
 802b9d4:	1d19      	adds	r1, r3, #4
 802b9d6:	6029      	str	r1, [r5, #0]
 802b9d8:	0605      	lsls	r5, r0, #24
 802b9da:	d501      	bpl.n	802b9e0 <_printf_i+0xe8>
 802b9dc:	681e      	ldr	r6, [r3, #0]
 802b9de:	e002      	b.n	802b9e6 <_printf_i+0xee>
 802b9e0:	0641      	lsls	r1, r0, #25
 802b9e2:	d5fb      	bpl.n	802b9dc <_printf_i+0xe4>
 802b9e4:	881e      	ldrh	r6, [r3, #0]
 802b9e6:	4853      	ldr	r0, [pc, #332]	; (802bb34 <_printf_i+0x23c>)
 802b9e8:	2f6f      	cmp	r7, #111	; 0x6f
 802b9ea:	bf0c      	ite	eq
 802b9ec:	2308      	moveq	r3, #8
 802b9ee:	230a      	movne	r3, #10
 802b9f0:	2100      	movs	r1, #0
 802b9f2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b9f6:	6865      	ldr	r5, [r4, #4]
 802b9f8:	60a5      	str	r5, [r4, #8]
 802b9fa:	2d00      	cmp	r5, #0
 802b9fc:	bfa2      	ittt	ge
 802b9fe:	6821      	ldrge	r1, [r4, #0]
 802ba00:	f021 0104 	bicge.w	r1, r1, #4
 802ba04:	6021      	strge	r1, [r4, #0]
 802ba06:	b90e      	cbnz	r6, 802ba0c <_printf_i+0x114>
 802ba08:	2d00      	cmp	r5, #0
 802ba0a:	d04b      	beq.n	802baa4 <_printf_i+0x1ac>
 802ba0c:	4615      	mov	r5, r2
 802ba0e:	fbb6 f1f3 	udiv	r1, r6, r3
 802ba12:	fb03 6711 	mls	r7, r3, r1, r6
 802ba16:	5dc7      	ldrb	r7, [r0, r7]
 802ba18:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802ba1c:	4637      	mov	r7, r6
 802ba1e:	42bb      	cmp	r3, r7
 802ba20:	460e      	mov	r6, r1
 802ba22:	d9f4      	bls.n	802ba0e <_printf_i+0x116>
 802ba24:	2b08      	cmp	r3, #8
 802ba26:	d10b      	bne.n	802ba40 <_printf_i+0x148>
 802ba28:	6823      	ldr	r3, [r4, #0]
 802ba2a:	07de      	lsls	r6, r3, #31
 802ba2c:	d508      	bpl.n	802ba40 <_printf_i+0x148>
 802ba2e:	6923      	ldr	r3, [r4, #16]
 802ba30:	6861      	ldr	r1, [r4, #4]
 802ba32:	4299      	cmp	r1, r3
 802ba34:	bfde      	ittt	le
 802ba36:	2330      	movle	r3, #48	; 0x30
 802ba38:	f805 3c01 	strble.w	r3, [r5, #-1]
 802ba3c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802ba40:	1b52      	subs	r2, r2, r5
 802ba42:	6122      	str	r2, [r4, #16]
 802ba44:	f8cd a000 	str.w	sl, [sp]
 802ba48:	464b      	mov	r3, r9
 802ba4a:	aa03      	add	r2, sp, #12
 802ba4c:	4621      	mov	r1, r4
 802ba4e:	4640      	mov	r0, r8
 802ba50:	f7ff fee4 	bl	802b81c <_printf_common>
 802ba54:	3001      	adds	r0, #1
 802ba56:	d14a      	bne.n	802baee <_printf_i+0x1f6>
 802ba58:	f04f 30ff 	mov.w	r0, #4294967295
 802ba5c:	b004      	add	sp, #16
 802ba5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802ba62:	6823      	ldr	r3, [r4, #0]
 802ba64:	f043 0320 	orr.w	r3, r3, #32
 802ba68:	6023      	str	r3, [r4, #0]
 802ba6a:	4833      	ldr	r0, [pc, #204]	; (802bb38 <_printf_i+0x240>)
 802ba6c:	2778      	movs	r7, #120	; 0x78
 802ba6e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802ba72:	6823      	ldr	r3, [r4, #0]
 802ba74:	6829      	ldr	r1, [r5, #0]
 802ba76:	061f      	lsls	r7, r3, #24
 802ba78:	f851 6b04 	ldr.w	r6, [r1], #4
 802ba7c:	d402      	bmi.n	802ba84 <_printf_i+0x18c>
 802ba7e:	065f      	lsls	r7, r3, #25
 802ba80:	bf48      	it	mi
 802ba82:	b2b6      	uxthmi	r6, r6
 802ba84:	07df      	lsls	r7, r3, #31
 802ba86:	bf48      	it	mi
 802ba88:	f043 0320 	orrmi.w	r3, r3, #32
 802ba8c:	6029      	str	r1, [r5, #0]
 802ba8e:	bf48      	it	mi
 802ba90:	6023      	strmi	r3, [r4, #0]
 802ba92:	b91e      	cbnz	r6, 802ba9c <_printf_i+0x1a4>
 802ba94:	6823      	ldr	r3, [r4, #0]
 802ba96:	f023 0320 	bic.w	r3, r3, #32
 802ba9a:	6023      	str	r3, [r4, #0]
 802ba9c:	2310      	movs	r3, #16
 802ba9e:	e7a7      	b.n	802b9f0 <_printf_i+0xf8>
 802baa0:	4824      	ldr	r0, [pc, #144]	; (802bb34 <_printf_i+0x23c>)
 802baa2:	e7e4      	b.n	802ba6e <_printf_i+0x176>
 802baa4:	4615      	mov	r5, r2
 802baa6:	e7bd      	b.n	802ba24 <_printf_i+0x12c>
 802baa8:	682b      	ldr	r3, [r5, #0]
 802baaa:	6826      	ldr	r6, [r4, #0]
 802baac:	6961      	ldr	r1, [r4, #20]
 802baae:	1d18      	adds	r0, r3, #4
 802bab0:	6028      	str	r0, [r5, #0]
 802bab2:	0635      	lsls	r5, r6, #24
 802bab4:	681b      	ldr	r3, [r3, #0]
 802bab6:	d501      	bpl.n	802babc <_printf_i+0x1c4>
 802bab8:	6019      	str	r1, [r3, #0]
 802baba:	e002      	b.n	802bac2 <_printf_i+0x1ca>
 802babc:	0670      	lsls	r0, r6, #25
 802babe:	d5fb      	bpl.n	802bab8 <_printf_i+0x1c0>
 802bac0:	8019      	strh	r1, [r3, #0]
 802bac2:	2300      	movs	r3, #0
 802bac4:	6123      	str	r3, [r4, #16]
 802bac6:	4615      	mov	r5, r2
 802bac8:	e7bc      	b.n	802ba44 <_printf_i+0x14c>
 802baca:	682b      	ldr	r3, [r5, #0]
 802bacc:	1d1a      	adds	r2, r3, #4
 802bace:	602a      	str	r2, [r5, #0]
 802bad0:	681d      	ldr	r5, [r3, #0]
 802bad2:	6862      	ldr	r2, [r4, #4]
 802bad4:	2100      	movs	r1, #0
 802bad6:	4628      	mov	r0, r5
 802bad8:	f7d4 fb52 	bl	8000180 <memchr>
 802badc:	b108      	cbz	r0, 802bae2 <_printf_i+0x1ea>
 802bade:	1b40      	subs	r0, r0, r5
 802bae0:	6060      	str	r0, [r4, #4]
 802bae2:	6863      	ldr	r3, [r4, #4]
 802bae4:	6123      	str	r3, [r4, #16]
 802bae6:	2300      	movs	r3, #0
 802bae8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802baec:	e7aa      	b.n	802ba44 <_printf_i+0x14c>
 802baee:	6923      	ldr	r3, [r4, #16]
 802baf0:	462a      	mov	r2, r5
 802baf2:	4649      	mov	r1, r9
 802baf4:	4640      	mov	r0, r8
 802baf6:	47d0      	blx	sl
 802baf8:	3001      	adds	r0, #1
 802bafa:	d0ad      	beq.n	802ba58 <_printf_i+0x160>
 802bafc:	6823      	ldr	r3, [r4, #0]
 802bafe:	079b      	lsls	r3, r3, #30
 802bb00:	d413      	bmi.n	802bb2a <_printf_i+0x232>
 802bb02:	68e0      	ldr	r0, [r4, #12]
 802bb04:	9b03      	ldr	r3, [sp, #12]
 802bb06:	4298      	cmp	r0, r3
 802bb08:	bfb8      	it	lt
 802bb0a:	4618      	movlt	r0, r3
 802bb0c:	e7a6      	b.n	802ba5c <_printf_i+0x164>
 802bb0e:	2301      	movs	r3, #1
 802bb10:	4632      	mov	r2, r6
 802bb12:	4649      	mov	r1, r9
 802bb14:	4640      	mov	r0, r8
 802bb16:	47d0      	blx	sl
 802bb18:	3001      	adds	r0, #1
 802bb1a:	d09d      	beq.n	802ba58 <_printf_i+0x160>
 802bb1c:	3501      	adds	r5, #1
 802bb1e:	68e3      	ldr	r3, [r4, #12]
 802bb20:	9903      	ldr	r1, [sp, #12]
 802bb22:	1a5b      	subs	r3, r3, r1
 802bb24:	42ab      	cmp	r3, r5
 802bb26:	dcf2      	bgt.n	802bb0e <_printf_i+0x216>
 802bb28:	e7eb      	b.n	802bb02 <_printf_i+0x20a>
 802bb2a:	2500      	movs	r5, #0
 802bb2c:	f104 0619 	add.w	r6, r4, #25
 802bb30:	e7f5      	b.n	802bb1e <_printf_i+0x226>
 802bb32:	bf00      	nop
 802bb34:	08031ad5 	.word	0x08031ad5
 802bb38:	08031ae6 	.word	0x08031ae6

0802bb3c <__sflush_r>:
 802bb3c:	898a      	ldrh	r2, [r1, #12]
 802bb3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb40:	4605      	mov	r5, r0
 802bb42:	0710      	lsls	r0, r2, #28
 802bb44:	460c      	mov	r4, r1
 802bb46:	d457      	bmi.n	802bbf8 <__sflush_r+0xbc>
 802bb48:	684b      	ldr	r3, [r1, #4]
 802bb4a:	2b00      	cmp	r3, #0
 802bb4c:	dc04      	bgt.n	802bb58 <__sflush_r+0x1c>
 802bb4e:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802bb50:	2b00      	cmp	r3, #0
 802bb52:	dc01      	bgt.n	802bb58 <__sflush_r+0x1c>
 802bb54:	2000      	movs	r0, #0
 802bb56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802bb58:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bb5a:	2e00      	cmp	r6, #0
 802bb5c:	d0fa      	beq.n	802bb54 <__sflush_r+0x18>
 802bb5e:	2300      	movs	r3, #0
 802bb60:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802bb64:	682f      	ldr	r7, [r5, #0]
 802bb66:	6a21      	ldr	r1, [r4, #32]
 802bb68:	602b      	str	r3, [r5, #0]
 802bb6a:	d032      	beq.n	802bbd2 <__sflush_r+0x96>
 802bb6c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802bb6e:	89a3      	ldrh	r3, [r4, #12]
 802bb70:	075a      	lsls	r2, r3, #29
 802bb72:	d505      	bpl.n	802bb80 <__sflush_r+0x44>
 802bb74:	6863      	ldr	r3, [r4, #4]
 802bb76:	1ac0      	subs	r0, r0, r3
 802bb78:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802bb7a:	b10b      	cbz	r3, 802bb80 <__sflush_r+0x44>
 802bb7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802bb7e:	1ac0      	subs	r0, r0, r3
 802bb80:	2300      	movs	r3, #0
 802bb82:	4602      	mov	r2, r0
 802bb84:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802bb86:	6a21      	ldr	r1, [r4, #32]
 802bb88:	4628      	mov	r0, r5
 802bb8a:	47b0      	blx	r6
 802bb8c:	1c43      	adds	r3, r0, #1
 802bb8e:	89a3      	ldrh	r3, [r4, #12]
 802bb90:	d106      	bne.n	802bba0 <__sflush_r+0x64>
 802bb92:	6829      	ldr	r1, [r5, #0]
 802bb94:	291d      	cmp	r1, #29
 802bb96:	d82b      	bhi.n	802bbf0 <__sflush_r+0xb4>
 802bb98:	4a28      	ldr	r2, [pc, #160]	; (802bc3c <__sflush_r+0x100>)
 802bb9a:	410a      	asrs	r2, r1
 802bb9c:	07d6      	lsls	r6, r2, #31
 802bb9e:	d427      	bmi.n	802bbf0 <__sflush_r+0xb4>
 802bba0:	2200      	movs	r2, #0
 802bba2:	6062      	str	r2, [r4, #4]
 802bba4:	04d9      	lsls	r1, r3, #19
 802bba6:	6922      	ldr	r2, [r4, #16]
 802bba8:	6022      	str	r2, [r4, #0]
 802bbaa:	d504      	bpl.n	802bbb6 <__sflush_r+0x7a>
 802bbac:	1c42      	adds	r2, r0, #1
 802bbae:	d101      	bne.n	802bbb4 <__sflush_r+0x78>
 802bbb0:	682b      	ldr	r3, [r5, #0]
 802bbb2:	b903      	cbnz	r3, 802bbb6 <__sflush_r+0x7a>
 802bbb4:	6560      	str	r0, [r4, #84]	; 0x54
 802bbb6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bbb8:	602f      	str	r7, [r5, #0]
 802bbba:	2900      	cmp	r1, #0
 802bbbc:	d0ca      	beq.n	802bb54 <__sflush_r+0x18>
 802bbbe:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802bbc2:	4299      	cmp	r1, r3
 802bbc4:	d002      	beq.n	802bbcc <__sflush_r+0x90>
 802bbc6:	4628      	mov	r0, r5
 802bbc8:	f7ff fb44 	bl	802b254 <_free_r>
 802bbcc:	2000      	movs	r0, #0
 802bbce:	6360      	str	r0, [r4, #52]	; 0x34
 802bbd0:	e7c1      	b.n	802bb56 <__sflush_r+0x1a>
 802bbd2:	2301      	movs	r3, #1
 802bbd4:	4628      	mov	r0, r5
 802bbd6:	47b0      	blx	r6
 802bbd8:	1c41      	adds	r1, r0, #1
 802bbda:	d1c8      	bne.n	802bb6e <__sflush_r+0x32>
 802bbdc:	682b      	ldr	r3, [r5, #0]
 802bbde:	2b00      	cmp	r3, #0
 802bbe0:	d0c5      	beq.n	802bb6e <__sflush_r+0x32>
 802bbe2:	2b1d      	cmp	r3, #29
 802bbe4:	d001      	beq.n	802bbea <__sflush_r+0xae>
 802bbe6:	2b16      	cmp	r3, #22
 802bbe8:	d101      	bne.n	802bbee <__sflush_r+0xb2>
 802bbea:	602f      	str	r7, [r5, #0]
 802bbec:	e7b2      	b.n	802bb54 <__sflush_r+0x18>
 802bbee:	89a3      	ldrh	r3, [r4, #12]
 802bbf0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bbf4:	81a3      	strh	r3, [r4, #12]
 802bbf6:	e7ae      	b.n	802bb56 <__sflush_r+0x1a>
 802bbf8:	690f      	ldr	r7, [r1, #16]
 802bbfa:	2f00      	cmp	r7, #0
 802bbfc:	d0aa      	beq.n	802bb54 <__sflush_r+0x18>
 802bbfe:	0793      	lsls	r3, r2, #30
 802bc00:	680e      	ldr	r6, [r1, #0]
 802bc02:	bf08      	it	eq
 802bc04:	694b      	ldreq	r3, [r1, #20]
 802bc06:	600f      	str	r7, [r1, #0]
 802bc08:	bf18      	it	ne
 802bc0a:	2300      	movne	r3, #0
 802bc0c:	1bf6      	subs	r6, r6, r7
 802bc0e:	608b      	str	r3, [r1, #8]
 802bc10:	2e00      	cmp	r6, #0
 802bc12:	dd9f      	ble.n	802bb54 <__sflush_r+0x18>
 802bc14:	6a21      	ldr	r1, [r4, #32]
 802bc16:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 802bc1a:	4633      	mov	r3, r6
 802bc1c:	463a      	mov	r2, r7
 802bc1e:	4628      	mov	r0, r5
 802bc20:	47e0      	blx	ip
 802bc22:	2800      	cmp	r0, #0
 802bc24:	dc06      	bgt.n	802bc34 <__sflush_r+0xf8>
 802bc26:	89a3      	ldrh	r3, [r4, #12]
 802bc28:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802bc2c:	81a3      	strh	r3, [r4, #12]
 802bc2e:	f04f 30ff 	mov.w	r0, #4294967295
 802bc32:	e790      	b.n	802bb56 <__sflush_r+0x1a>
 802bc34:	4407      	add	r7, r0
 802bc36:	1a36      	subs	r6, r6, r0
 802bc38:	e7ea      	b.n	802bc10 <__sflush_r+0xd4>
 802bc3a:	bf00      	nop
 802bc3c:	dfbffffe 	.word	0xdfbffffe

0802bc40 <_fflush_r>:
 802bc40:	b538      	push	{r3, r4, r5, lr}
 802bc42:	690b      	ldr	r3, [r1, #16]
 802bc44:	4605      	mov	r5, r0
 802bc46:	460c      	mov	r4, r1
 802bc48:	b913      	cbnz	r3, 802bc50 <_fflush_r+0x10>
 802bc4a:	2500      	movs	r5, #0
 802bc4c:	4628      	mov	r0, r5
 802bc4e:	bd38      	pop	{r3, r4, r5, pc}
 802bc50:	b118      	cbz	r0, 802bc5a <_fflush_r+0x1a>
 802bc52:	6a03      	ldr	r3, [r0, #32]
 802bc54:	b90b      	cbnz	r3, 802bc5a <_fflush_r+0x1a>
 802bc56:	f7ff f889 	bl	802ad6c <__sinit>
 802bc5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bc5e:	2b00      	cmp	r3, #0
 802bc60:	d0f3      	beq.n	802bc4a <_fflush_r+0xa>
 802bc62:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802bc64:	07d0      	lsls	r0, r2, #31
 802bc66:	d404      	bmi.n	802bc72 <_fflush_r+0x32>
 802bc68:	0599      	lsls	r1, r3, #22
 802bc6a:	d402      	bmi.n	802bc72 <_fflush_r+0x32>
 802bc6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bc6e:	f7ff fad8 	bl	802b222 <__retarget_lock_acquire_recursive>
 802bc72:	4628      	mov	r0, r5
 802bc74:	4621      	mov	r1, r4
 802bc76:	f7ff ff61 	bl	802bb3c <__sflush_r>
 802bc7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802bc7c:	07da      	lsls	r2, r3, #31
 802bc7e:	4605      	mov	r5, r0
 802bc80:	d4e4      	bmi.n	802bc4c <_fflush_r+0xc>
 802bc82:	89a3      	ldrh	r3, [r4, #12]
 802bc84:	059b      	lsls	r3, r3, #22
 802bc86:	d4e1      	bmi.n	802bc4c <_fflush_r+0xc>
 802bc88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802bc8a:	f7ff facb 	bl	802b224 <__retarget_lock_release_recursive>
 802bc8e:	e7dd      	b.n	802bc4c <_fflush_r+0xc>

0802bc90 <__swhatbuf_r>:
 802bc90:	b570      	push	{r4, r5, r6, lr}
 802bc92:	460c      	mov	r4, r1
 802bc94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bc98:	2900      	cmp	r1, #0
 802bc9a:	b096      	sub	sp, #88	; 0x58
 802bc9c:	4615      	mov	r5, r2
 802bc9e:	461e      	mov	r6, r3
 802bca0:	da0d      	bge.n	802bcbe <__swhatbuf_r+0x2e>
 802bca2:	89a3      	ldrh	r3, [r4, #12]
 802bca4:	f013 0f80 	tst.w	r3, #128	; 0x80
 802bca8:	f04f 0100 	mov.w	r1, #0
 802bcac:	bf0c      	ite	eq
 802bcae:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802bcb2:	2340      	movne	r3, #64	; 0x40
 802bcb4:	2000      	movs	r0, #0
 802bcb6:	6031      	str	r1, [r6, #0]
 802bcb8:	602b      	str	r3, [r5, #0]
 802bcba:	b016      	add	sp, #88	; 0x58
 802bcbc:	bd70      	pop	{r4, r5, r6, pc}
 802bcbe:	466a      	mov	r2, sp
 802bcc0:	f000 f848 	bl	802bd54 <_fstat_r>
 802bcc4:	2800      	cmp	r0, #0
 802bcc6:	dbec      	blt.n	802bca2 <__swhatbuf_r+0x12>
 802bcc8:	9901      	ldr	r1, [sp, #4]
 802bcca:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802bcce:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802bcd2:	4259      	negs	r1, r3
 802bcd4:	4159      	adcs	r1, r3
 802bcd6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802bcda:	e7eb      	b.n	802bcb4 <__swhatbuf_r+0x24>

0802bcdc <__smakebuf_r>:
 802bcdc:	898b      	ldrh	r3, [r1, #12]
 802bcde:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bce0:	079d      	lsls	r5, r3, #30
 802bce2:	4606      	mov	r6, r0
 802bce4:	460c      	mov	r4, r1
 802bce6:	d507      	bpl.n	802bcf8 <__smakebuf_r+0x1c>
 802bce8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802bcec:	6023      	str	r3, [r4, #0]
 802bcee:	6123      	str	r3, [r4, #16]
 802bcf0:	2301      	movs	r3, #1
 802bcf2:	6163      	str	r3, [r4, #20]
 802bcf4:	b002      	add	sp, #8
 802bcf6:	bd70      	pop	{r4, r5, r6, pc}
 802bcf8:	ab01      	add	r3, sp, #4
 802bcfa:	466a      	mov	r2, sp
 802bcfc:	f7ff ffc8 	bl	802bc90 <__swhatbuf_r>
 802bd00:	9900      	ldr	r1, [sp, #0]
 802bd02:	4605      	mov	r5, r0
 802bd04:	4630      	mov	r0, r6
 802bd06:	f7fe ff19 	bl	802ab3c <_malloc_r>
 802bd0a:	b948      	cbnz	r0, 802bd20 <__smakebuf_r+0x44>
 802bd0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bd10:	059a      	lsls	r2, r3, #22
 802bd12:	d4ef      	bmi.n	802bcf4 <__smakebuf_r+0x18>
 802bd14:	f023 0303 	bic.w	r3, r3, #3
 802bd18:	f043 0302 	orr.w	r3, r3, #2
 802bd1c:	81a3      	strh	r3, [r4, #12]
 802bd1e:	e7e3      	b.n	802bce8 <__smakebuf_r+0xc>
 802bd20:	89a3      	ldrh	r3, [r4, #12]
 802bd22:	6020      	str	r0, [r4, #0]
 802bd24:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bd28:	81a3      	strh	r3, [r4, #12]
 802bd2a:	9b00      	ldr	r3, [sp, #0]
 802bd2c:	6163      	str	r3, [r4, #20]
 802bd2e:	9b01      	ldr	r3, [sp, #4]
 802bd30:	6120      	str	r0, [r4, #16]
 802bd32:	b15b      	cbz	r3, 802bd4c <__smakebuf_r+0x70>
 802bd34:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bd38:	4630      	mov	r0, r6
 802bd3a:	f000 f81d 	bl	802bd78 <_isatty_r>
 802bd3e:	b128      	cbz	r0, 802bd4c <__smakebuf_r+0x70>
 802bd40:	89a3      	ldrh	r3, [r4, #12]
 802bd42:	f023 0303 	bic.w	r3, r3, #3
 802bd46:	f043 0301 	orr.w	r3, r3, #1
 802bd4a:	81a3      	strh	r3, [r4, #12]
 802bd4c:	89a3      	ldrh	r3, [r4, #12]
 802bd4e:	431d      	orrs	r5, r3
 802bd50:	81a5      	strh	r5, [r4, #12]
 802bd52:	e7cf      	b.n	802bcf4 <__smakebuf_r+0x18>

0802bd54 <_fstat_r>:
 802bd54:	b538      	push	{r3, r4, r5, lr}
 802bd56:	4d07      	ldr	r5, [pc, #28]	; (802bd74 <_fstat_r+0x20>)
 802bd58:	2300      	movs	r3, #0
 802bd5a:	4604      	mov	r4, r0
 802bd5c:	4608      	mov	r0, r1
 802bd5e:	4611      	mov	r1, r2
 802bd60:	602b      	str	r3, [r5, #0]
 802bd62:	f000 f859 	bl	802be18 <_fstat>
 802bd66:	1c43      	adds	r3, r0, #1
 802bd68:	d102      	bne.n	802bd70 <_fstat_r+0x1c>
 802bd6a:	682b      	ldr	r3, [r5, #0]
 802bd6c:	b103      	cbz	r3, 802bd70 <_fstat_r+0x1c>
 802bd6e:	6023      	str	r3, [r4, #0]
 802bd70:	bd38      	pop	{r3, r4, r5, pc}
 802bd72:	bf00      	nop
 802bd74:	200040d4 	.word	0x200040d4

0802bd78 <_isatty_r>:
 802bd78:	b538      	push	{r3, r4, r5, lr}
 802bd7a:	4d06      	ldr	r5, [pc, #24]	; (802bd94 <_isatty_r+0x1c>)
 802bd7c:	2300      	movs	r3, #0
 802bd7e:	4604      	mov	r4, r0
 802bd80:	4608      	mov	r0, r1
 802bd82:	602b      	str	r3, [r5, #0]
 802bd84:	f000 f850 	bl	802be28 <_isatty>
 802bd88:	1c43      	adds	r3, r0, #1
 802bd8a:	d102      	bne.n	802bd92 <_isatty_r+0x1a>
 802bd8c:	682b      	ldr	r3, [r5, #0]
 802bd8e:	b103      	cbz	r3, 802bd92 <_isatty_r+0x1a>
 802bd90:	6023      	str	r3, [r4, #0]
 802bd92:	bd38      	pop	{r3, r4, r5, pc}
 802bd94:	200040d4 	.word	0x200040d4

0802bd98 <_realloc_r>:
 802bd98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bd9c:	4680      	mov	r8, r0
 802bd9e:	4614      	mov	r4, r2
 802bda0:	460e      	mov	r6, r1
 802bda2:	b921      	cbnz	r1, 802bdae <_realloc_r+0x16>
 802bda4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bda8:	4611      	mov	r1, r2
 802bdaa:	f7fe bec7 	b.w	802ab3c <_malloc_r>
 802bdae:	b92a      	cbnz	r2, 802bdbc <_realloc_r+0x24>
 802bdb0:	f7ff fa50 	bl	802b254 <_free_r>
 802bdb4:	4625      	mov	r5, r4
 802bdb6:	4628      	mov	r0, r5
 802bdb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bdbc:	f000 f81b 	bl	802bdf6 <_malloc_usable_size_r>
 802bdc0:	4284      	cmp	r4, r0
 802bdc2:	4607      	mov	r7, r0
 802bdc4:	d802      	bhi.n	802bdcc <_realloc_r+0x34>
 802bdc6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802bdca:	d812      	bhi.n	802bdf2 <_realloc_r+0x5a>
 802bdcc:	4621      	mov	r1, r4
 802bdce:	4640      	mov	r0, r8
 802bdd0:	f7fe feb4 	bl	802ab3c <_malloc_r>
 802bdd4:	4605      	mov	r5, r0
 802bdd6:	2800      	cmp	r0, #0
 802bdd8:	d0ed      	beq.n	802bdb6 <_realloc_r+0x1e>
 802bdda:	42bc      	cmp	r4, r7
 802bddc:	4622      	mov	r2, r4
 802bdde:	4631      	mov	r1, r6
 802bde0:	bf28      	it	cs
 802bde2:	463a      	movcs	r2, r7
 802bde4:	f7ff fa27 	bl	802b236 <memcpy>
 802bde8:	4631      	mov	r1, r6
 802bdea:	4640      	mov	r0, r8
 802bdec:	f7ff fa32 	bl	802b254 <_free_r>
 802bdf0:	e7e1      	b.n	802bdb6 <_realloc_r+0x1e>
 802bdf2:	4635      	mov	r5, r6
 802bdf4:	e7df      	b.n	802bdb6 <_realloc_r+0x1e>

0802bdf6 <_malloc_usable_size_r>:
 802bdf6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802bdfa:	1f18      	subs	r0, r3, #4
 802bdfc:	2b00      	cmp	r3, #0
 802bdfe:	bfbc      	itt	lt
 802be00:	580b      	ldrlt	r3, [r1, r0]
 802be02:	18c0      	addlt	r0, r0, r3
 802be04:	4770      	bx	lr
	...

0802be08 <_close>:
 802be08:	4b02      	ldr	r3, [pc, #8]	; (802be14 <_close+0xc>)
 802be0a:	2258      	movs	r2, #88	; 0x58
 802be0c:	601a      	str	r2, [r3, #0]
 802be0e:	f04f 30ff 	mov.w	r0, #4294967295
 802be12:	4770      	bx	lr
 802be14:	200040d4 	.word	0x200040d4

0802be18 <_fstat>:
 802be18:	4b02      	ldr	r3, [pc, #8]	; (802be24 <_fstat+0xc>)
 802be1a:	2258      	movs	r2, #88	; 0x58
 802be1c:	601a      	str	r2, [r3, #0]
 802be1e:	f04f 30ff 	mov.w	r0, #4294967295
 802be22:	4770      	bx	lr
 802be24:	200040d4 	.word	0x200040d4

0802be28 <_isatty>:
 802be28:	4b02      	ldr	r3, [pc, #8]	; (802be34 <_isatty+0xc>)
 802be2a:	2258      	movs	r2, #88	; 0x58
 802be2c:	601a      	str	r2, [r3, #0]
 802be2e:	2000      	movs	r0, #0
 802be30:	4770      	bx	lr
 802be32:	bf00      	nop
 802be34:	200040d4 	.word	0x200040d4

0802be38 <_lseek>:
 802be38:	4b02      	ldr	r3, [pc, #8]	; (802be44 <_lseek+0xc>)
 802be3a:	2258      	movs	r2, #88	; 0x58
 802be3c:	601a      	str	r2, [r3, #0]
 802be3e:	f04f 30ff 	mov.w	r0, #4294967295
 802be42:	4770      	bx	lr
 802be44:	200040d4 	.word	0x200040d4

0802be48 <_read>:
 802be48:	4b02      	ldr	r3, [pc, #8]	; (802be54 <_read+0xc>)
 802be4a:	2258      	movs	r2, #88	; 0x58
 802be4c:	601a      	str	r2, [r3, #0]
 802be4e:	f04f 30ff 	mov.w	r0, #4294967295
 802be52:	4770      	bx	lr
 802be54:	200040d4 	.word	0x200040d4

0802be58 <_sbrk>:
 802be58:	4a04      	ldr	r2, [pc, #16]	; (802be6c <_sbrk+0x14>)
 802be5a:	6811      	ldr	r1, [r2, #0]
 802be5c:	4603      	mov	r3, r0
 802be5e:	b909      	cbnz	r1, 802be64 <_sbrk+0xc>
 802be60:	4903      	ldr	r1, [pc, #12]	; (802be70 <_sbrk+0x18>)
 802be62:	6011      	str	r1, [r2, #0]
 802be64:	6810      	ldr	r0, [r2, #0]
 802be66:	4403      	add	r3, r0
 802be68:	6013      	str	r3, [r2, #0]
 802be6a:	4770      	bx	lr
 802be6c:	200040dc 	.word	0x200040dc
 802be70:	200040e0 	.word	0x200040e0

0802be74 <_init>:
 802be74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802be76:	bf00      	nop
 802be78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802be7a:	bc08      	pop	{r3}
 802be7c:	469e      	mov	lr, r3
 802be7e:	4770      	bx	lr

0802be80 <_fini>:
 802be80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802be82:	bf00      	nop
 802be84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802be86:	bc08      	pop	{r3}
 802be88:	469e      	mov	lr, r3
 802be8a:	4770      	bx	lr
